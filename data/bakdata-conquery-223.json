{
    "error_id": "223",
    "information": {
        "errors": [
            {
                "line": "15",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import lombok.EqualsAndHashCode;\nimport lombok.RequiredArgsConstructor;\nimport lombok.ToString;\t\n\n@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n@JsonTypeIdResolver(CPSTypeIdResolver.class)",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/223/ConqueryPermission.java\nindex 3579e4d43a..eef9fa7b52 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/223/ConqueryPermission.java\n@@ -12,7 +12,7 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n @JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n@@ -21,14 +21,14 @@ import lombok.ToString;\n @EqualsAndHashCode(callSuper=false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements Permission {\n-\t\n-\t\n+\n+\n \t@Override\n \tpublic boolean implies(Permission permission) {\n \t\t// Check exact permission category\n \t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n+\n \t}\n-\t\n+\n \tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/223/ConqueryPermission.java\nindex 3579e4d43a..bbce3c2b68 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/223/ConqueryPermission.java\n@@ -12,23 +12,23 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, include = JsonTypeInfo.As.PROPERTY, property = \"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n @CPSBase\n @ToString\n-@EqualsAndHashCode(callSuper=false)\n+@EqualsAndHashCode(callSuper = false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements Permission {\n-\t\n-\t\n-\t@Override\n-\tpublic boolean implies(Permission permission) {\n-\t\t// Check exact permission category\n-\t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n-\t}\n-\t\n-\tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n+\n+\n+    @Override\n+    public boolean implies(Permission permission) {\n+        // Check exact permission category\n+        return this.getClass().isAssignableFrom(permission.getClass());\n+\n+    }\n+\n+    public abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/223/ConqueryPermission.java\nindex 3579e4d43a..a8b885798f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/223/ConqueryPermission.java\n@@ -2,33 +2,29 @@ package com.bakdata.conquery.models.auth.permissions;\n \n import java.util.Collection;\n import java.util.Optional;\n-\n import org.apache.shiro.authz.Permission;\n-\n import com.bakdata.conquery.io.cps.CPSBase;\n import com.bakdata.conquery.io.cps.CPSTypeIdResolver;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n-\n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n+@JsonTypeInfo(use= JsonTypeInfo.Id.CUSTOM, include= JsonTypeInfo.As.PROPERTY, property= \"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n @CPSBase\n @ToString\n @EqualsAndHashCode(callSuper=false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements Permission {\n-\t\n-\t\n-\t@Override\n-\tpublic boolean implies(Permission permission) {\n-\t\t// Check exact permission category\n-\t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n-\t}\n-\t\n-\tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n+\n+    @Override\n+    public boolean implies(Permission permission) {\n+        // Check exact permission category\n+        return this.getClass()\n+                   .isAssignableFrom(permission.getClass());\n+    }\n+\n+    public abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/223/ConqueryPermission.java\nindex 3579e4d43a..eef9fa7b52 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/223/ConqueryPermission.java\n@@ -12,7 +12,7 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n @JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n@@ -21,14 +21,14 @@ import lombok.ToString;\n @EqualsAndHashCode(callSuper=false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements Permission {\n-\t\n-\t\n+\n+\n \t@Override\n \tpublic boolean implies(Permission permission) {\n \t\t// Check exact permission category\n \t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n+\n \t}\n-\t\n+\n \tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/223/ConqueryPermission.java\nindex 3579e4d43a..eef9fa7b52 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/223/ConqueryPermission.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/223/ConqueryPermission.java\n@@ -12,7 +12,7 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n @JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n@@ -21,14 +21,14 @@ import lombok.ToString;\n @EqualsAndHashCode(callSuper=false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements Permission {\n-\t\n-\t\n+\n+\n \t@Override\n \tpublic boolean implies(Permission permission) {\n \t\t// Check exact permission category\n \t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n+\n \t}\n-\t\n+\n \tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 5
        }
    ]
}