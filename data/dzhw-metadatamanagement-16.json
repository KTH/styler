{
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "75",
                "severity": "error",
                "message": "'}' at column 75 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/16/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060..3551ca51e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/16/ValidUniqueQuestionNumberValidator.java\n@@ -16,7 +16,7 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n   /*\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/16/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060..17bda2f463 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/16/ValidUniqueQuestionNumberValidator.java\n@@ -16,20 +16,21 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n+  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/16/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060..03b513ee06 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/16/ValidUniqueQuestionNumberValidator.java\n@@ -16,10 +16,10 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n-  /*\n+/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -44,7 +44,7 @@ public class ValidUniqueQuestionNumberValidator\n         List<IdAndVersionProjection> existingQuestions =\n             questionRepository.findIdsByInstrumentIdAndNumber(question.getInstrumentId(),\n                 question.getNumber());\n-        if (existingQuestions.isEmpty()) {\n+if (existingQuestions.isEmpty()) {\n           return true;\n         } else {\n           //we are updating this question\n@@ -53,6 +53,5 @@ public class ValidUniqueQuestionNumberValidator\n       }\n       return true;\n     }\n-\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 82, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 17, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/16/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060..edf461bdea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/16/ValidUniqueQuestionNumberValidator.java\n@@ -1,10 +1,8 @@\n package eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.validation;\n \n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.Question;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.repository.QuestionRepository;\n@@ -13,19 +11,23 @@ import lombok.RequiredArgsConstructor;\n /**\n  * Validates the uniqueness of question.\n  */\n+\n+\n @RequiredArgsConstructor\n-public class ValidUniqueQuestionNumberValidator\n-    implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n-  private final QuestionRepository questionRepository;\n+public class ValidUniqueQuestionNumberValidator implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n+\n+    private final QuestionRepository questionRepository;\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -33,26 +35,26 @@ public class ValidUniqueQuestionNumberValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(Question question, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(Question question,\n+        ConstraintValidatorContext context) {\n     if (question.isShadow()) {\n-      return true;\n+        return true;\n     } else {\n-      if (question.getInstrumentId() != null\n-          && question.getNumber() != null) {\n-\n-        List<IdAndVersionProjection> existingQuestions =\n-            questionRepository.findIdsByInstrumentIdAndNumber(question.getInstrumentId(),\n-                question.getNumber());\n-        if (existingQuestions.isEmpty()) {\n-          return true;\n-        } else {\n+      if (question.getInstrumentId() != null && question.getNumber() != null) {\n+               List<IdAndVersionProjection> existingQuestions = questionRepository.findIdsByInstrumentIdAndNumber(question.getInstrumentId(), question.getNumber());\n+               if (existingQuestions.isEmpty()) {\n+                                                                                  return true;\n+               } else {\n           //we are updating this question\n-          return existingQuestions.get(0).getId().equals(question.getId());\n-        }\n+                 return existingQuestions.get(0).getId()\n+                                                .equals(question.getId());\n+               }\n       }\n+\n       return true;\n     }\n-\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "75",
                    "severity": "error",
                    "message": "'}' at column 75 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/16/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060..3551ca51e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/16/ValidUniqueQuestionNumberValidator.java\n@@ -16,7 +16,7 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n   /*\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "column": "76",
                    "severity": "error",
                    "message": "'}' at column 76 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/16/ValidUniqueQuestionNumberValidator.java\nindex 75d5b14060..ee2b04f5e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/16/ValidUniqueQuestionNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/16/ValidUniqueQuestionNumberValidator.java\n@@ -16,7 +16,7 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class ValidUniqueQuestionNumberValidator\n     implements ConstraintValidator<ValidUniqueQuestionNumber, Question> {\n-  \n+\n   private final QuestionRepository questionRepository;\n \n   /*\n@@ -25,9 +25,7 @@ public class ValidUniqueQuestionNumberValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidUniqueQuestionNumber constraintAnnotation) { }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 4
        }
    ]
}