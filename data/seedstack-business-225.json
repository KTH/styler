{
    "error_id": "225",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.assembler.dsl;\n\nimport static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/225/LegacyDtoInfoResolver.java\nindex 535bda996a..efa046cd3a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/225/LegacyDtoInfoResolver.java\n@@ -5,175 +5,176 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n-\n-import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n-\n-import java.lang.annotation.Annotation;\n-import java.util.concurrent.atomic.AtomicBoolean;\n-import javax.annotation.Priority;\n-import javax.inject.Inject;\n-import org.seedstack.business.assembler.MatchingEntityId;\n-import org.seedstack.business.assembler.MatchingFactoryParameter;\n-import org.seedstack.business.domain.AggregateRoot;\n-import org.seedstack.business.domain.DomainRegistry;\n-import org.seedstack.business.internal.BusinessErrorCode;\n-import org.seedstack.business.internal.BusinessException;\n-import org.seedstack.business.spi.BaseDtoInfoResolver;\n-import org.seedstack.business.spi.DtoInfoResolver;\n-import org.seedstack.business.spi.DtoInfoResolverPriority;\n-import org.seedstack.shed.cache.Cache;\n-import org.seedstack.shed.cache.CacheParameters;\n-import org.seedstack.shed.reflect.Classes;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n+\n+package org .seedstack.business.internal.assembler.dsl;import\n+static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n+\n+ import java.lang.annotation.Annotation;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.annotation.Priority;\n+ import javax.inject.Inject;\n+ import org.seedstack.business.assembler.MatchingEntityId;\n+ import org.seedstack.business.assembler.MatchingFactoryParameter;\n+ import org.seedstack.business.domain.AggregateRoot;\n+ import org.seedstack.business.domain.DomainRegistry;\n+ import org.seedstack.business.internal.BusinessErrorCode;\n+ import org.seedstack.business.internal.BusinessException;\n+ import org.seedstack.business.spi.BaseDtoInfoResolver;\n+ import org.seedstack.business.spi.DtoInfoResolver;\n+ import org.seedstack.business.spi.DtoInfoResolverPriority;\n+ import org.seedstack.shed.cache.Cache;\n+ import org.seedstack.shed.cache.CacheParameters;\n+ import org.seedstack.shed.reflect.Classes;\n+ import org.slf4j.Logger;\n+ import org.slf4j.LoggerFactory;\n+\n+ /**\n  * Implementation of the {@link DtoInfoResolver} based on the {@link MatchingEntityId} and\n  * {@link MatchingFactoryParameter} annotation.\n  *\n  * @see MatchingEntityId\n  * @see MatchingFactoryParameter\n  */\n-@Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)\n-class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n-    private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n-    private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n-    private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n-    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n-            new CacheParameters<Class<?>, DtoInfo<?>>()\n-                    .setInitialSize(256)\n-                    .setMaxSize(1024)\n-                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n-    );\n-\n-    @Inject\n-    LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n-        super(domainRegistry);\n-    }\n-\n-    @Override\n-    public <D> boolean supports(D dto) {\n-        return getDtoInfo(dto).supported;\n-    }\n-\n-    @Override\n-    public <D, I> I resolveId(D dto, Class<I> aggregateIdClass) {\n-        ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto),\n-                parameterHolder.parameters(dto));\n-    }\n-\n-    @Override\n-    public <D, I> I resolveId(D dto, Class<I> aggregateIdClass, int position) {\n-        ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElementForAggregate(dto, position),\n-                parameterHolder.parametersOfAggregateRoot(dto, position));\n-    }\n-\n-    @Override\n-    public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass) {\n-        return createFromFactory(aggregateRootClass, getAggregateParameterHolder(dto).parameters(dto));\n-    }\n-\n-    @Override\n-    public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass, int position) {\n-        return createFromFactory(aggregateRootClass,\n-                getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n-    }\n-\n-    private <D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n-        ParameterHolder<D> parameterHolder = getDtoInfo(dto).idParameterHolder;\n-        if (parameterHolder.isEmpty()) {\n-            throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n-                    .put(\"dtoClass\", dto.getClass()\n-                            .getName())\n-                    .put(\"aggregateIdClass\", aggregateIdClass);\n-        }\n-        return parameterHolder;\n-    }\n-\n-    private <D> ParameterHolder<D> getAggregateParameterHolder(D dto) {\n-        return getDtoInfo(dto).aggregateParameterHolder;\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    private <D> DtoInfo<D> getDtoInfo(D dto) {\n-        return (DtoInfo<D>) dtoInfo.get(dto.getClass());\n-    }\n-\n-    private static <D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n-        final ParameterHolder<D> idParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n-        final ParameterHolder<D> aggregateParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n-        final AtomicBoolean supported = new AtomicBoolean(false);\n-\n-        LOGGER.debug(\"Resolving DTO information on {}\", dtoClass);\n-\n-        Classes.from(dtoClass)\n-                .traversingSuperclasses()\n-                .methods()\n-                .forEach(method -> {\n-                    makeAccessible(method);\n-\n-                    MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n-                    if (idAnnotation != null) {\n-                        if (idAnnotation.typeIndex() >= 0) {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n-                                        idAnnotation.typeIndex(), idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n-                                        method);\n-                            }\n-                        } else {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-\n-                    MatchingFactoryParameter factoryAnnotation = method\n-                            .getAnnotation(MatchingFactoryParameter.class);\n-                    if (factoryAnnotation != null) {\n-                        if (factoryAnnotation.typeIndex() >= 0) {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), method);\n-                            }\n-                        } else {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-                });\n-        if (supported.get()) {\n-            return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n-        } else {\n-            return new DtoInfo<>(false, null, null);\n-        }\n-    }\n-\n-    private static class DtoInfo<D> {\n-        final boolean supported;\n-        final ParameterHolder<D> idParameterHolder;\n-        final ParameterHolder<D> aggregateParameterHolder;\n-\n-        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n-            this.supported = supported;\n-            this.idParameterHolder = idParameterHolder;\n-            this.aggregateParameterHolder = aggregateParameterHolder;\n-        }\n-    }\n-}\n+ @Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)\n+ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n+     private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n+     private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n+     private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n+     private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n+             new CacheParameters<Class<?>, DtoInfo<?>>()\n+                     .setInitialSize(256)\n+                     .setMaxSize(1024)\n+                     .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n+     );\n+\n+     @Inject\n+     LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n+         super(domainRegistry);\n+     }\n+\n+     @Override\n+     public <D> boolean supports(D dto) {\n+         return getDtoInfo(dto).supported;\n+     }\n+\n+     @Override\n+     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass) {\n+         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n+         return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto),\n+                 parameterHolder.parameters(dto));\n+     }\n+\n+     @Override\n+     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass, int position) {\n+         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n+         return createIdentifier(aggregateIdClass, parameterHolder.uniqueElementForAggregate(dto, position),\n+                 parameterHolder.parametersOfAggregateRoot(dto, position));\n+     }\n+\n+     @Override\n+     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass) {\n+         return createFromFactory(aggregateRootClass, getAggregateParameterHolder(dto).parameters(dto));\n+     }\n+\n+     @Override\n+     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass, int position) {\n+         return createFromFactory(aggregateRootClass,\n+                 getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n+     }\n+\n+     private <D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n+         ParameterHolder<D> parameterHolder = getDtoInfo(dto).idParameterHolder;\n+         if (parameterHolder.isEmpty()) {\n+             throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n+                     .put(\"dtoClass\", dto.getClass()\n+                             .getName())\n+                     .put(\"aggregateIdClass\", aggregateIdClass);\n+         }\n+         return parameterHolder;\n+     }\n+\n+     private <D> ParameterHolder<D> getAggregateParameterHolder(D dto) {\n+         return getDtoInfo(dto).aggregateParameterHolder;\n+     }\n+\n+     @SuppressWarnings(\"unchecked\")\n+     private <D> DtoInfo<D> getDtoInfo(D dto) {\n+         return (DtoInfo<D>) dtoInfo.get(dto.getClass());\n+     }\n+\n+     private static <D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n+         final ParameterHolder<D> idParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n+         final ParameterHolder<D> aggregateParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n+         final AtomicBoolean supported = new AtomicBoolean(false);\n+\n+         LOGGER.debug(\"Resolving DTO information on {}\", dtoClass);\n+\n+         Classes.from(dtoClass)\n+                 .traversingSuperclasses()\n+                 .methods()\n+                 .forEach(method -> {\n+                     makeAccessible(method);\n+\n+                     MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n+                     if (idAnnotation != null) {\n+                         if (idAnnotation.typeIndex() >= 0) {\n+                             if (idAnnotation.index() >= 0) {\n+                                 idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n+                                         idAnnotation.typeIndex(), idAnnotation.index(), method);\n+                             } else {\n+                                 idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n+                                         method);\n+                             }\n+                         } else {\n+                             if (idAnnotation.index() >= 0) {\n+                                 idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n+                             } else {\n+                                 idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n+                             }\n+                         }\n+                         supported.set(true);\n+                     }\n+\n+                     MatchingFactoryParameter factoryAnnotation = method\n+                             .getAnnotation(MatchingFactoryParameter.class);\n+                     if (factoryAnnotation != null) {\n+                         if (factoryAnnotation.typeIndex() >= 0) {\n+                             if (factoryAnnotation.index() >= 0) {\n+                                 aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n+                                         factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n+                             } else {\n+                                 aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n+                                         factoryAnnotation.typeIndex(), method);\n+                             }\n+                         } else {\n+                             if (factoryAnnotation.index() >= 0) {\n+                                 aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n+                                         factoryAnnotation.index(), method);\n+                             } else {\n+                                 aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n+                             }\n+                         }\n+                         supported.set(true);\n+                     }\n+                 });\n+         if (supported.get()) {\n+             return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n+         } else {\n+             return new DtoInfo<>(false, null, null);\n+         }\n+     }\n+\n+     private static class DtoInfo<D> {\n+         final boolean supported;\n+         final ParameterHolder<D> idParameterHolder;\n+         final ParameterHolder<D> aggregateParameterHolder;\n+\n+         private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n+                 ParameterHolder<D> aggregateParameterHolder) {\n+             this.supported = supported;\n+             this.idParameterHolder = idParameterHolder;\n+             this.aggregateParameterHolder = aggregateParameterHolder;\n+         }\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 167
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/225/LegacyDtoInfoResolver.java\nindex 535bda996a..66a57c16c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/225/LegacyDtoInfoResolver.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n@@ -170,7 +171,7 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         final ParameterHolder<D> aggregateParameterHolder;\n \n         private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n+                        ParameterHolder<D> aggregateParameterHolder) {\n             this.supported = supported;\n             this.idParameterHolder = idParameterHolder;\n             this.aggregateParameterHolder = aggregateParameterHolder;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "column": "76",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/225/LegacyDtoInfoResolver.java\nindex 535bda996a..f86fbb4687 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/225/LegacyDtoInfoResolver.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n@@ -40,12 +41,10 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n     private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n     private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n     private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n-    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n-            new CacheParameters<Class<?>, DtoInfo<?>>()\n+    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create( new CacheParameters<Class<?>, DtoInfo<?>>()\n                     .setInitialSize(256)\n                     .setMaxSize(1024)\n-                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n-    );\n+                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo));\n \n     @Inject\n     LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n@@ -87,8 +86,7 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         if (parameterHolder.isEmpty()) {\n             throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n                     .put(\"dtoClass\", dto.getClass()\n-                            .getName())\n-                    .put(\"aggregateIdClass\", aggregateIdClass);\n+                            .getName()).put(\"aggregateIdClass\", aggregateIdClass);\n         }\n         return parameterHolder;\n     }\n@@ -135,9 +133,8 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n                         supported.set(true);\n                     }\n \n-                    MatchingFactoryParameter factoryAnnotation = method\n-                            .getAnnotation(MatchingFactoryParameter.class);\n-                    if (factoryAnnotation != null) {\n+                    MatchingFactoryParameter factoryAnnotation = method.getAnnotation(MatchingFactoryParameter.class);\n+if (factoryAnnotation != null) {\n                         if (factoryAnnotation.typeIndex() >= 0) {\n                             if (factoryAnnotation.index() >= 0) {\n                                 aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n@@ -157,7 +154,7 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n                         supported.set(true);\n                     }\n                 });\n-        if (supported.get()) {\n+if (supported.get()) {\n             return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n         } else {\n             return new DtoInfo<>(false, null, null);\n@@ -168,12 +165,10 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         final boolean supported;\n         final ParameterHolder<D> idParameterHolder;\n         final ParameterHolder<D> aggregateParameterHolder;\n-\n-        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n-            this.supported = supported;\n+private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder, ParameterHolder<D> aggregateParameterHolder) {\n+    this.supported = supported;\n             this.idParameterHolder = idParameterHolder;\n             this.aggregateParameterHolder = aggregateParameterHolder;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "column": "73",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "column": "73",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'factoryAnnotation' has incorrect indentation level 0, expected level should be 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'factoryAnnotation' has incorrect indentation level 0, expected level should be 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "column": "73",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 47, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 39, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 35, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/225/LegacyDtoInfoResolver.java\nindex 535bda996a..f1ce352c54 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/225/LegacyDtoInfoResolver.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n-\n import java.lang.annotation.Annotation;\n import java.util.concurrent.atomic.AtomicBoolean;\n import javax.annotation.Priority;\n@@ -35,17 +34,16 @@ import org.slf4j.LoggerFactory;\n  * @see MatchingEntityId\n  * @see MatchingFactoryParameter\n  */\n-@Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)\n-class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n+\n+\n+@Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS) class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n     private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n     private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n-    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n-            new CacheParameters<Class<?>, DtoInfo<?>>()\n-                    .setInitialSize(256)\n-                    .setMaxSize(1024)\n-                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n-    );\n+    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(new CacheParameters<Class<?>, DtoInfo<?>>().setInitialSize(256)\n+.setMaxSize(1024)\n+.setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo));\n \n     @Inject\n     LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n@@ -60,14 +58,16 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n     @Override\n     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass) {\n         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto),\n+        return createIdentifier(aggregateIdClass,\n+            parameterHolder.uniqueElement(dto),\n                 parameterHolder.parameters(dto));\n     }\n \n     @Override\n     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass, int position) {\n         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElementForAggregate(dto, position),\n+        return createIdentifier(aggregateIdClass,\n+            parameterHolder.uniqueElementForAggregate(dto, position),\n                 parameterHolder.parametersOfAggregateRoot(dto, position));\n     }\n \n@@ -79,84 +79,75 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n     @Override\n     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass, int position) {\n         return createFromFactory(aggregateRootClass,\n-                getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n+            getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n     }\n \n-    private <D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n+\n+    private<D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n         ParameterHolder<D> parameterHolder = getDtoInfo(dto).idParameterHolder;\n         if (parameterHolder.isEmpty()) {\n-            throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n-                    .put(\"dtoClass\", dto.getClass()\n-                            .getName())\n-                    .put(\"aggregateIdClass\", aggregateIdClass);\n+            throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO).put(\"dtoClass\", dto.getClass().getName())\n+.put(\"aggregateIdClass\", aggregateIdClass);\n         }\n         return parameterHolder;\n     }\n \n+\n     private <D> ParameterHolder<D> getAggregateParameterHolder(D dto) {\n         return getDtoInfo(dto).aggregateParameterHolder;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <D> DtoInfo<D> getDtoInfo(D dto) {\n+    @SuppressWarnings(\"unchecked\") private<D> DtoInfo<D> getDtoInfo(D dto) {\n         return (DtoInfo<D>) dtoInfo.get(dto.getClass());\n     }\n \n+\n     private static <D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n         final ParameterHolder<D> idParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n         final ParameterHolder<D> aggregateParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n         final AtomicBoolean supported = new AtomicBoolean(false);\n-\n         LOGGER.debug(\"Resolving DTO information on {}\", dtoClass);\n-\n-        Classes.from(dtoClass)\n-                .traversingSuperclasses()\n-                .methods()\n-                .forEach(method -> {\n-                    makeAccessible(method);\n-\n-                    MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n-                    if (idAnnotation != null) {\n-                        if (idAnnotation.typeIndex() >= 0) {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n-                                        idAnnotation.typeIndex(), idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n-                                        method);\n-                            }\n-                        } else {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-\n-                    MatchingFactoryParameter factoryAnnotation = method\n-                            .getAnnotation(MatchingFactoryParameter.class);\n-                    if (factoryAnnotation != null) {\n-                        if (factoryAnnotation.typeIndex() >= 0) {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), method);\n-                            }\n-                        } else {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-                });\n+        Classes.from(dtoClass).traversingSuperclasses()\n+            .methods().forEach(method-> {\n+                                   makeAccessible(method);\n+                                   MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n+                                   if (idAnnotation != null) {\n+                                       if (idAnnotation.typeIndex()>= 0) {\n+                                           if (idAnnotation.index()>= 0) {\n+                                               idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID, idAnnotation.typeIndex(), idAnnotation.index(), method);\n+                                           } else {\n+                                               idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(), method);\n+                                           }\n+                                       } else {\n+                                           if (idAnnotation.index()>= 0) {\n+                                               idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n+                                           } else {\n+                                               idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n+                                           }\n+                                       }\n+                                       supported.set(true);\n+                                   }\n+                                   MatchingFactoryParameter factoryAnnotation = method.getAnnotation(MatchingFactoryParameter.class);\n+                                   if (factoryAnnotation != null) {\n+                                       if (factoryAnnotation.typeIndex()>= 0) {\n+                                           if (factoryAnnotation.index()>= 0) {\n+                                               aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n+factoryAnnotation.typeIndex(),\n+factoryAnnotation.index(),\n+method);\n+                                           } else {\n+                                               aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM, factoryAnnotation.typeIndex(), method);\n+                                           }\n+                                       } else {\n+                                           if (factoryAnnotation.index()>= 0) {\n+                                               aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM, factoryAnnotation.index(), method);\n+                                           } else {\n+                                               aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n+                                           }\n+                                       }\n+                                       supported.set(true);\n+                                   }\n+                               });\n         if (supported.get()) {\n             return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n         } else {\n@@ -164,16 +155,16 @@ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n         }\n     }\n \n+\n     private static class DtoInfo<D> {\n+\n         final boolean supported;\n         final ParameterHolder<D> idParameterHolder;\n         final ParameterHolder<D> aggregateParameterHolder;\n-\n-        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n+        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder, ParameterHolder<D> aggregateParameterHolder) {\n             this.supported = supported;\n             this.idParameterHolder = idParameterHolder;\n             this.aggregateParameterHolder = aggregateParameterHolder;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 82
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/225/LegacyDtoInfoResolver.java\nindex 535bda996a..efa046cd3a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/225/LegacyDtoInfoResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/225/LegacyDtoInfoResolver.java\n@@ -5,175 +5,176 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n-\n-import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n-\n-import java.lang.annotation.Annotation;\n-import java.util.concurrent.atomic.AtomicBoolean;\n-import javax.annotation.Priority;\n-import javax.inject.Inject;\n-import org.seedstack.business.assembler.MatchingEntityId;\n-import org.seedstack.business.assembler.MatchingFactoryParameter;\n-import org.seedstack.business.domain.AggregateRoot;\n-import org.seedstack.business.domain.DomainRegistry;\n-import org.seedstack.business.internal.BusinessErrorCode;\n-import org.seedstack.business.internal.BusinessException;\n-import org.seedstack.business.spi.BaseDtoInfoResolver;\n-import org.seedstack.business.spi.DtoInfoResolver;\n-import org.seedstack.business.spi.DtoInfoResolverPriority;\n-import org.seedstack.shed.cache.Cache;\n-import org.seedstack.shed.cache.CacheParameters;\n-import org.seedstack.shed.reflect.Classes;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n+\n+package org .seedstack.business.internal.assembler.dsl;import\n+static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n+\n+ import java.lang.annotation.Annotation;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.annotation.Priority;\n+ import javax.inject.Inject;\n+ import org.seedstack.business.assembler.MatchingEntityId;\n+ import org.seedstack.business.assembler.MatchingFactoryParameter;\n+ import org.seedstack.business.domain.AggregateRoot;\n+ import org.seedstack.business.domain.DomainRegistry;\n+ import org.seedstack.business.internal.BusinessErrorCode;\n+ import org.seedstack.business.internal.BusinessException;\n+ import org.seedstack.business.spi.BaseDtoInfoResolver;\n+ import org.seedstack.business.spi.DtoInfoResolver;\n+ import org.seedstack.business.spi.DtoInfoResolverPriority;\n+ import org.seedstack.shed.cache.Cache;\n+ import org.seedstack.shed.cache.CacheParameters;\n+ import org.seedstack.shed.reflect.Classes;\n+ import org.slf4j.Logger;\n+ import org.slf4j.LoggerFactory;\n+\n+ /**\n  * Implementation of the {@link DtoInfoResolver} based on the {@link MatchingEntityId} and\n  * {@link MatchingFactoryParameter} annotation.\n  *\n  * @see MatchingEntityId\n  * @see MatchingFactoryParameter\n  */\n-@Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)\n-class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n-    private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n-    private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n-    private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n-    private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n-            new CacheParameters<Class<?>, DtoInfo<?>>()\n-                    .setInitialSize(256)\n-                    .setMaxSize(1024)\n-                    .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n-    );\n-\n-    @Inject\n-    LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n-        super(domainRegistry);\n-    }\n-\n-    @Override\n-    public <D> boolean supports(D dto) {\n-        return getDtoInfo(dto).supported;\n-    }\n-\n-    @Override\n-    public <D, I> I resolveId(D dto, Class<I> aggregateIdClass) {\n-        ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto),\n-                parameterHolder.parameters(dto));\n-    }\n-\n-    @Override\n-    public <D, I> I resolveId(D dto, Class<I> aggregateIdClass, int position) {\n-        ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n-        return createIdentifier(aggregateIdClass, parameterHolder.uniqueElementForAggregate(dto, position),\n-                parameterHolder.parametersOfAggregateRoot(dto, position));\n-    }\n-\n-    @Override\n-    public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass) {\n-        return createFromFactory(aggregateRootClass, getAggregateParameterHolder(dto).parameters(dto));\n-    }\n-\n-    @Override\n-    public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass, int position) {\n-        return createFromFactory(aggregateRootClass,\n-                getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n-    }\n-\n-    private <D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n-        ParameterHolder<D> parameterHolder = getDtoInfo(dto).idParameterHolder;\n-        if (parameterHolder.isEmpty()) {\n-            throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n-                    .put(\"dtoClass\", dto.getClass()\n-                            .getName())\n-                    .put(\"aggregateIdClass\", aggregateIdClass);\n-        }\n-        return parameterHolder;\n-    }\n-\n-    private <D> ParameterHolder<D> getAggregateParameterHolder(D dto) {\n-        return getDtoInfo(dto).aggregateParameterHolder;\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    private <D> DtoInfo<D> getDtoInfo(D dto) {\n-        return (DtoInfo<D>) dtoInfo.get(dto.getClass());\n-    }\n-\n-    private static <D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n-        final ParameterHolder<D> idParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n-        final ParameterHolder<D> aggregateParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n-        final AtomicBoolean supported = new AtomicBoolean(false);\n-\n-        LOGGER.debug(\"Resolving DTO information on {}\", dtoClass);\n-\n-        Classes.from(dtoClass)\n-                .traversingSuperclasses()\n-                .methods()\n-                .forEach(method -> {\n-                    makeAccessible(method);\n-\n-                    MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n-                    if (idAnnotation != null) {\n-                        if (idAnnotation.typeIndex() >= 0) {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n-                                        idAnnotation.typeIndex(), idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n-                                        method);\n-                            }\n-                        } else {\n-                            if (idAnnotation.index() >= 0) {\n-                                idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n-                            } else {\n-                                idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-\n-                    MatchingFactoryParameter factoryAnnotation = method\n-                            .getAnnotation(MatchingFactoryParameter.class);\n-                    if (factoryAnnotation != null) {\n-                        if (factoryAnnotation.typeIndex() >= 0) {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.typeIndex(), method);\n-                            }\n-                        } else {\n-                            if (factoryAnnotation.index() >= 0) {\n-                                aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n-                                        factoryAnnotation.index(), method);\n-                            } else {\n-                                aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n-                            }\n-                        }\n-                        supported.set(true);\n-                    }\n-                });\n-        if (supported.get()) {\n-            return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n-        } else {\n-            return new DtoInfo<>(false, null, null);\n-        }\n-    }\n-\n-    private static class DtoInfo<D> {\n-        final boolean supported;\n-        final ParameterHolder<D> idParameterHolder;\n-        final ParameterHolder<D> aggregateParameterHolder;\n-\n-        private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n-                ParameterHolder<D> aggregateParameterHolder) {\n-            this.supported = supported;\n-            this.idParameterHolder = idParameterHolder;\n-            this.aggregateParameterHolder = aggregateParameterHolder;\n-        }\n-    }\n-}\n+ @Priority(DtoInfoResolverPriority.MATCHING_ANNOTATIONS)\n+ class LegacyDtoInfoResolver extends BaseDtoInfoResolver {\n+     private static final Logger LOGGER = LoggerFactory.getLogger(LegacyDtoInfoResolver.class);\n+     private static final Class<? extends Annotation> MATCHING_ENTITY_ID = MatchingEntityId.class;\n+     private static final Class<? extends Annotation> MATCHING_FACT_PARAM = MatchingFactoryParameter.class;\n+     private static final Cache<Class<?>, DtoInfo<?>> dtoInfo = Cache.create(\n+             new CacheParameters<Class<?>, DtoInfo<?>>()\n+                     .setInitialSize(256)\n+                     .setMaxSize(1024)\n+                     .setLoadingFunction(LegacyDtoInfoResolver::resolveDtoInfo)\n+     );\n+\n+     @Inject\n+     LegacyDtoInfoResolver(DomainRegistry domainRegistry) {\n+         super(domainRegistry);\n+     }\n+\n+     @Override\n+     public <D> boolean supports(D dto) {\n+         return getDtoInfo(dto).supported;\n+     }\n+\n+     @Override\n+     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass) {\n+         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n+         return createIdentifier(aggregateIdClass, parameterHolder.uniqueElement(dto),\n+                 parameterHolder.parameters(dto));\n+     }\n+\n+     @Override\n+     public <D, I> I resolveId(D dto, Class<I> aggregateIdClass, int position) {\n+         ParameterHolder<D> parameterHolder = getIdParameterHolder(dto, aggregateIdClass);\n+         return createIdentifier(aggregateIdClass, parameterHolder.uniqueElementForAggregate(dto, position),\n+                 parameterHolder.parametersOfAggregateRoot(dto, position));\n+     }\n+\n+     @Override\n+     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass) {\n+         return createFromFactory(aggregateRootClass, getAggregateParameterHolder(dto).parameters(dto));\n+     }\n+\n+     @Override\n+     public <D, A extends AggregateRoot<?>> A resolveAggregate(D dto, Class<A> aggregateRootClass, int position) {\n+         return createFromFactory(aggregateRootClass,\n+                 getAggregateParameterHolder(dto).parametersOfAggregateRoot(dto, position));\n+     }\n+\n+     private <D, I> ParameterHolder<D> getIdParameterHolder(D dto, Class<I> aggregateIdClass) {\n+         ParameterHolder<D> parameterHolder = getDtoInfo(dto).idParameterHolder;\n+         if (parameterHolder.isEmpty()) {\n+             throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_CAN_BE_RESOLVED_FROM_DTO)\n+                     .put(\"dtoClass\", dto.getClass()\n+                             .getName())\n+                     .put(\"aggregateIdClass\", aggregateIdClass);\n+         }\n+         return parameterHolder;\n+     }\n+\n+     private <D> ParameterHolder<D> getAggregateParameterHolder(D dto) {\n+         return getDtoInfo(dto).aggregateParameterHolder;\n+     }\n+\n+     @SuppressWarnings(\"unchecked\")\n+     private <D> DtoInfo<D> getDtoInfo(D dto) {\n+         return (DtoInfo<D>) dtoInfo.get(dto.getClass());\n+     }\n+\n+     private static <D> DtoInfo<D> resolveDtoInfo(Class<D> dtoClass) {\n+         final ParameterHolder<D> idParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n+         final ParameterHolder<D> aggregateParameterHolder = new ParameterHolder<>((Class<D>) dtoClass);\n+         final AtomicBoolean supported = new AtomicBoolean(false);\n+\n+         LOGGER.debug(\"Resolving DTO information on {}\", dtoClass);\n+\n+         Classes.from(dtoClass)\n+                 .traversingSuperclasses()\n+                 .methods()\n+                 .forEach(method -> {\n+                     makeAccessible(method);\n+\n+                     MatchingEntityId idAnnotation = method.getAnnotation(MatchingEntityId.class);\n+                     if (idAnnotation != null) {\n+                         if (idAnnotation.typeIndex() >= 0) {\n+                             if (idAnnotation.index() >= 0) {\n+                                 idParameterHolder.addTupleParameter(MATCHING_ENTITY_ID,\n+                                         idAnnotation.typeIndex(), idAnnotation.index(), method);\n+                             } else {\n+                                 idParameterHolder.addTupleValue(MATCHING_ENTITY_ID, idAnnotation.typeIndex(),\n+                                         method);\n+                             }\n+                         } else {\n+                             if (idAnnotation.index() >= 0) {\n+                                 idParameterHolder.addParameter(MATCHING_ENTITY_ID, idAnnotation.index(), method);\n+                             } else {\n+                                 idParameterHolder.addValue(MATCHING_ENTITY_ID, method);\n+                             }\n+                         }\n+                         supported.set(true);\n+                     }\n+\n+                     MatchingFactoryParameter factoryAnnotation = method\n+                             .getAnnotation(MatchingFactoryParameter.class);\n+                     if (factoryAnnotation != null) {\n+                         if (factoryAnnotation.typeIndex() >= 0) {\n+                             if (factoryAnnotation.index() >= 0) {\n+                                 aggregateParameterHolder.addTupleParameter(MATCHING_FACT_PARAM,\n+                                         factoryAnnotation.typeIndex(), factoryAnnotation.index(), method);\n+                             } else {\n+                                 aggregateParameterHolder.addTupleValue(MATCHING_FACT_PARAM,\n+                                         factoryAnnotation.typeIndex(), method);\n+                             }\n+                         } else {\n+                             if (factoryAnnotation.index() >= 0) {\n+                                 aggregateParameterHolder.addParameter(MATCHING_FACT_PARAM,\n+                                         factoryAnnotation.index(), method);\n+                             } else {\n+                                 aggregateParameterHolder.addValue(MATCHING_FACT_PARAM, method);\n+                             }\n+                         }\n+                         supported.set(true);\n+                     }\n+                 });\n+         if (supported.get()) {\n+             return new DtoInfo<>(true, idParameterHolder.freeze(), aggregateParameterHolder.freeze());\n+         } else {\n+             return new DtoInfo<>(false, null, null);\n+         }\n+     }\n+\n+     private static class DtoInfo<D> {\n+         final boolean supported;\n+         final ParameterHolder<D> idParameterHolder;\n+         final ParameterHolder<D> aggregateParameterHolder;\n+\n+         private DtoInfo(boolean supported, ParameterHolder<D> idParameterHolder,\n+                 ParameterHolder<D> aggregateParameterHolder) {\n+             this.supported = supported;\n+             this.idParameterHolder = idParameterHolder;\n+             this.aggregateParameterHolder = aggregateParameterHolder;\n+         }\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 167
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}