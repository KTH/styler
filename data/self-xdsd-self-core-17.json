{
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "103",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public Provider provider() {\n        final Provider provider;\n        if(this.provider.equals(Provider.Names.GITHUB)) {\n            provider = new Github(new PmUser(this), this.storage);\n        } else {\n            provider = new Gitlab(new PmUser(this), this.storage);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/17/StoredProjectManager.java\nindex 3438da7314..64ae2e28f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/17/StoredProjectManager.java\n@@ -100,7 +100,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/17/StoredProjectManager.java\nindex 3438da7314..a30802d197 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/17/StoredProjectManager.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.managers;\n \n import com.selfxdsd.api.*;\n@@ -66,11 +67,12 @@ public final class StoredProjectManager implements ProjectManager {\n \n     /**\n      * Constructor.\n-     * @param id PM's id.\n-     * @param username PM's username.\n-     * @param provider The provider's name (Gitlab, Github etc).\n+     *\n+     * @param id          PM's id.\n+     * @param username    PM's username.\n+     * @param provider    The provider's name (Gitlab, Github etc).\n      * @param accessToken API Access token.\n-     * @param storage Self's storage.\n+     * @param storage     Self's storage.\n      * @checkstyle ParameterNumber (10 lines)\n      */\n     public StoredProjectManager(\n@@ -100,7 +102,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n@@ -137,6 +139,7 @@ public final class StoredProjectManager implements ProjectManager {\n \n     /**\n      * PM as a User.\n+     *\n      * @author Mihai Andronache (amihaiemil@gmail.com)\n      * @version $Id$\n      * @since 0.0.1\n@@ -150,6 +153,7 @@ public final class StoredProjectManager implements ProjectManager {\n \n         /**\n          * Constructor.\n+         *\n          * @param manager PM acting as a user.\n          */\n         PmUser(final ProjectManager manager) {\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "103",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/17/StoredProjectManager.java\nindex 3438da7314..e8454f6e48 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/17/StoredProjectManager.java\n@@ -110,13 +110,8 @@ public final class StoredProjectManager implements ProjectManager {\n \n     @Override\n     public Project assign(final Repo repo) {\n-        return this.storage.projects().register(\n-            repo,\n-            this,\n-            UUID.randomUUID()\n-                .toString()\n-                .replaceAll(\"-\", \"\")\n-        );\n+        return this.storage.projects().register(repo,\n+            this, UUID.randomUUID().toString().replaceAll(\"-\", \"\"));\n     }\n \n     @Override\n@@ -176,4 +171,4 @@ public final class StoredProjectManager implements ProjectManager {\n             return this.manager.projects();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "115",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 60, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "column": "57",
                    "severity": "error",
                    "message": "'}' at column 57 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "60",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "145",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/17/StoredProjectManager.java\nindex 3438da7314..bb4227a5cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/17/StoredProjectManager.java\n@@ -26,7 +26,6 @@ import com.selfxdsd.api.*;\n import com.selfxdsd.api.storage.Storage;\n import com.selfxdsd.core.Github;\n import com.selfxdsd.core.Gitlab;\n-\n import java.util.UUID;\n \n /**\n@@ -37,31 +36,43 @@ import java.util.UUID;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class StoredProjectManager implements ProjectManager {\n \n     /**\n      * This PMs id.\n      */\n+\n+\n     private final int id;\n \n     /**\n      * This PM's username.\n      */\n+\n+\n     private String username;\n \n     /**\n      * Provider's name.\n      */\n+\n+\n     private final String provider;\n \n     /**\n      * This PM's access token.\n      */\n+\n+\n     private final String accessToken;\n \n     /**\n      * Self's storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -73,12 +84,13 @@ public final class StoredProjectManager implements ProjectManager {\n      * @param storage Self's storage.\n      * @checkstyle ParameterNumber (10 lines)\n      */\n+\n+\n     public StoredProjectManager(\n         final int id,\n         final String username,\n         final String provider,\n-        final String accessToken,\n-        final Storage storage\n+        final String accessToken, final Storage storage\n     ) {\n         this.id = id;\n         this.username = username;\n@@ -101,22 +113,20 @@ public final class StoredProjectManager implements ProjectManager {\n     public Provider provider() {\n         final Provider provider;\n         if(this.provider.equals(Provider.Names.GITHUB)) {\n-            provider = new Github(new PmUser(this), this.storage);\n-        } else {\n-            provider = new Gitlab(new PmUser(this), this.storage);\n-        }\n+                                                            provider = new Github(new PmUser(\n+                                                                                      this), this.storage);\n+                                                        }\n+\n+else {\n+         provider = new Gitlab(new PmUser(\n+                                   this), this.storage);\n+     }\n         return provider.withToken(this.accessToken);\n     }\n \n     @Override\n     public Project assign(final Repo repo) {\n-        return this.storage.projects().register(\n-            repo,\n-            this,\n-            UUID.randomUUID()\n-                .toString()\n-                .replaceAll(\"-\", \"\")\n-        );\n+        return this.storage.projects().register(repo, this, UUID.randomUUID().toString().replaceAll(\"-\", \"\"));\n     }\n \n     @Override\n@@ -131,8 +141,8 @@ public final class StoredProjectManager implements ProjectManager {\n \n     @Override\n     public boolean equals(final Object obj) {\n-        return this == obj || (obj instanceof ProjectManager\n-            && this.id == ((ProjectManager) obj).id());\n+        return this== obj|| ( obj instanceof ProjectManager&&\n+                                  this.id== ( ( ProjectManager) obj).id());\n     }\n \n     /**\n@@ -141,17 +151,22 @@ public final class StoredProjectManager implements ProjectManager {\n      * @version $Id$\n      * @since 0.0.1\n      */\n+\n     private final class PmUser implements User {\n \n         /**\n          * The PM.\n          */\n+\n+\n         private final ProjectManager manager;\n \n         /**\n          * Constructor.\n          * @param manager PM acting as a user.\n          */\n+\n+\n         PmUser(final ProjectManager manager) {\n             this.manager = manager;\n         }\n@@ -176,4 +191,4 @@ public final class StoredProjectManager implements ProjectManager {\n             return this.manager.projects();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/17/StoredProjectManager.java\nindex 3438da7314..64ae2e28f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/17/StoredProjectManager.java\n@@ -100,7 +100,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/17/StoredProjectManager.java\nindex 3438da7314..64ae2e28f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/17/StoredProjectManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/17/StoredProjectManager.java\n@@ -100,7 +100,7 @@ public final class StoredProjectManager implements ProjectManager {\n     @Override\n     public Provider provider() {\n         final Provider provider;\n-        if(this.provider.equals(Provider.Names.GITHUB)) {\n+        if (this.provider.equals(Provider.Names.GITHUB)) {\n             provider = new Github(new PmUser(this), this.storage);\n         } else {\n             provider = new Gitlab(new PmUser(this), this.storage);\n",
            "diff_size": 1
        }
    ]
}