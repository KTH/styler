{
    "error_id": "648",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/648/PSPAttemptEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/648/PSPAttemptEvent.java\nindex ab6fd7f987..6bb2b75563 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/648/PSPAttemptEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/648/PSPAttemptEvent.java\n@@ -23,19 +23,22 @@ import com.tencent.angel.ps.PSAttemptId;\n  */\n public class PSPAttemptEvent extends AMParameterServerEvent {\n \n-  /**ps attempt id*/\n-  private final PSAttemptId psAttemptId;\n+    /**\n+     * ps attempt id\n+     */\n+    private final PSAttemptId psAttemptId;\n \n-  public PSPAttemptEvent(PSAttemptId attemptId, AMParameterServerEventType type) {\n-    super(type, attemptId.getParameterServerId());\n-    this.psAttemptId = attemptId;\n-  }\n+    public PSPAttemptEvent(PSAttemptId attemptId, AMParameterServerEventType type) {\n+        super(type, attemptId.getParameterServerId());\n+        this.psAttemptId = attemptId;\n+    }\n \n-  /**\n-   * get ps attempt id\n-   * @return PSAttemptId ps attempt id\n-   */\n-  public PSAttemptId getPSAttemptId() {\n-    return psAttemptId;\n-  }\n+    /**\n+     * get ps attempt id\n+     *\n+     * @return PSAttemptId ps attempt id\n+     */\n+    public PSAttemptId getPSAttemptId() {\n+        return psAttemptId;\n+    }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/648/PSPAttemptEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/648/PSPAttemptEvent.java\nindex ab6fd7f987..7058040621 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/648/PSPAttemptEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/648/PSPAttemptEvent.java\n@@ -38,4 +38,4 @@ public class PSPAttemptEvent extends AMParameterServerEvent {\n   public PSAttemptId getPSAttemptId() {\n     return psAttemptId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/648/PSPAttemptEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/648/PSPAttemptEvent.java\nindex ab6fd7f987..27069db2a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/648/PSPAttemptEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/648/PSPAttemptEvent.java\n@@ -21,21 +21,24 @@ import com.tencent.angel.ps.PSAttemptId;\n /**\n  * ps attempt manager event\n  */\n+\n public class PSPAttemptEvent extends AMParameterServerEvent {\n \n   /**ps attempt id*/\n-  private final PSAttemptId psAttemptId;\n+    private final PSAttemptId psAttemptId;\n \n-  public PSPAttemptEvent(PSAttemptId attemptId, AMParameterServerEventType type) {\n+    public PSPAttemptEvent(PSAttemptId attemptId, AMParameterServerEventType type) {\n     super(type, attemptId.getParameterServerId());\n     this.psAttemptId = attemptId;\n-  }\n+    }\n \n   /**\n    * get ps attempt id\n    * @return PSAttemptId ps attempt id\n    */\n-  public PSAttemptId getPSAttemptId() {\n+\n+    public PSAttemptId getPSAttemptId() {\n     return psAttemptId;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}