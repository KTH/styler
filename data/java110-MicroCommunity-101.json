{
    "error_id": "101",
    "information": {
        "errors": [
            {
                "line": "71",
                "column": "65",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                .replace(\"data:image/png;base64,\", \"\")\n                .replace(\"data:image/jpeg;base64,\", \"\")\n                .replace(\"data:application/octet-stream;base64,\",\"\")\n        );\n\n        return new ResponseEntity<Object>(context, headers, HttpStatus.OK);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/101/GetFileSMOImpl.java\nindex 28d4fc8499..4481447520 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/101/GetFileSMOImpl.java\n@@ -68,7 +68,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n                 .replace(\"data:image/webp;base64,\", \"\")\n                 .replace(\"data:image/png;base64,\", \"\")\n                 .replace(\"data:image/jpeg;base64,\", \"\")\n-                .replace(\"data:application/octet-stream;base64,\",\"\")\n+                .replace(\"data:application/octet-stream;base64,\", \"\")\n         );\n \n         return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/101/GetFileSMOImpl.java\nindex 28d4fc8499..0bcfdf4ed1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/101/GetFileSMOImpl.java\n@@ -25,15 +25,15 @@ import java.io.IOException;\n @Service(\"getFileSMOImpl\")\n public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n \n-    @Autowired\n-    private RestTemplate restTemplate;\n+  @Autowired\n+  private RestTemplate restTemplate;\n \n-    @Override\n-    public ResponseEntity<Object> getFile(IPageData pd) throws SMOException, IOException {\n-        JSONObject paramIn = JSONObject.parseObject(pd.getReqData());\n+  @Override\n+  public ResponseEntity<Object> getFile(IPageData pd) throws SMOException, IOException {\n+    JSONObject paramIn = JSONObject.parseObject(pd.getReqData());\n \n-        Assert.hasKeyAndValue(paramIn, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u5c0f\u533aID\");\n-        Assert.hasKeyAndValue(paramIn, \"fileId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u6587\u4ef6ID\");\n+    Assert.hasKeyAndValue(paramIn, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u5c0f\u533aID\");\n+    Assert.hasKeyAndValue(paramIn, \"fileId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u6587\u4ef6ID\");\n \n         /*super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.GET_FILE);\n \n@@ -42,43 +42,43 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n         Map paramMap = BeanConvertUtil.beanCovertMap(result);\n         paramIn.putAll(paramMap);*/\n \n-        String apiUrl = ServiceConstant.SERVICE_API_URL + \"/api/file.getFile\" + mapToUrlParam(paramIn);\n+    String apiUrl = ServiceConstant.SERVICE_API_URL + \"/api/file.getFile\" + mapToUrlParam(paramIn);\n \n \n-        ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, paramIn.toJSONString(),\n-                apiUrl,\n-                HttpMethod.GET);\n+    ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, paramIn.toJSONString(),\n+      apiUrl,\n+      HttpMethod.GET);\n \n-        //\u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n-            return new ResponseEntity<Object>(responseEntity.getBody(), responseEntity.getStatusCode());\n-        }\n-\n-        JSONObject outParam = JSONObject.parseObject(responseEntity.getBody());\n-        MultiValueMap headers = new HttpHeaders();\n-        if (\"jpeg\".equals(outParam.getString(\"suffix\"))) {\n-            headers.add(\"content-type\", \"image/jpeg\");\n-        } else {\n-            headers.add(\"content-type\", \"application/octet-stream\");\n-        }\n-        //headers.add(\"Content-Disposition\", \"attachment; filename=\" + outParam.getString(\"fileName\"));\n-        headers.add(\"Accept-Ranges\", \"bytes\");\n-\n-        byte[] context = Base64Convert.base64ToByte(outParam.getString(\"context\").replace(\"data:image/webp;base64,\", \"\")\n-                .replace(\"data:image/webp;base64,\", \"\")\n-                .replace(\"data:image/png;base64,\", \"\")\n-                .replace(\"data:image/jpeg;base64,\", \"\")\n-                .replace(\"data:application/octet-stream;base64,\",\"\")\n-        );\n-\n-        return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n-    }\n-\n-    public RestTemplate getRestTemplate() {\n-        return restTemplate;\n+    //\u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\n+    if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+      return new ResponseEntity<Object>(responseEntity.getBody(), responseEntity.getStatusCode());\n     }\n \n-    public void setRestTemplate(RestTemplate restTemplate) {\n-        this.restTemplate = restTemplate;\n+    JSONObject outParam = JSONObject.parseObject(responseEntity.getBody());\n+    MultiValueMap headers = new HttpHeaders();\n+    if (\"jpeg\".equals(outParam.getString(\"suffix\"))) {\n+      headers.add(\"content-type\", \"image/jpeg\");\n+    } else {\n+      headers.add(\"content-type\", \"application/octet-stream\");\n     }\n+    //headers.add(\"Content-Disposition\", \"attachment; filename=\" + outParam.getString(\"fileName\"));\n+    headers.add(\"Accept-Ranges\", \"bytes\");\n+\n+    byte[] context = Base64Convert.base64ToByte(outParam.getString(\"context\").replace(\"data:image/webp;base64,\", \"\")\n+      .replace(\"data:image/webp;base64,\", \"\")\n+      .replace(\"data:image/png;base64,\", \"\")\n+      .replace(\"data:image/jpeg;base64,\", \"\")\n+      .replace(\"data:application/octet-stream;base64,\", \"\")\n+    );\n+\n+    return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n+  }\n+\n+  public RestTemplate getRestTemplate() {\n+    return restTemplate;\n+  }\n+\n+  public void setRestTemplate(RestTemplate restTemplate) {\n+    this.restTemplate = restTemplate;\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/101/GetFileSMOImpl.java\nindex 28d4fc8499..8e5329095e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/101/GetFileSMOImpl.java\n@@ -34,8 +34,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n \n         Assert.hasKeyAndValue(paramIn, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u5c0f\u533aID\");\n         Assert.hasKeyAndValue(paramIn, \"fileId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u6587\u4ef6ID\");\n-\n-        /*super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.GET_FILE);\n+/*super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.GET_FILE);\n \n         ComponentValidateResult result = super.validateStoreStaffCommunityRelationship(pd, restTemplate);\n \n@@ -48,8 +47,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n         ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, paramIn.toJSONString(),\n                 apiUrl,\n                 HttpMethod.GET);\n-\n-        //\u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\n+//\u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             return new ResponseEntity<Object>(responseEntity.getBody(), responseEntity.getStatusCode());\n         }\n@@ -63,13 +61,11 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n         }\n         //headers.add(\"Content-Disposition\", \"attachment; filename=\" + outParam.getString(\"fileName\"));\n         headers.add(\"Accept-Ranges\", \"bytes\");\n-\n-        byte[] context = Base64Convert.base64ToByte(outParam.getString(\"context\").replace(\"data:image/webp;base64,\", \"\")\n+byte[] context = Base64Convert.base64ToByte(outParam.getString(\"context\").replace(\"data:image/webp;base64,\", \"\")\n                 .replace(\"data:image/webp;base64,\", \"\")\n                 .replace(\"data:image/png;base64,\", \"\")\n                 .replace(\"data:image/jpeg;base64,\", \"\")\n-                .replace(\"data:application/octet-stream;base64,\",\"\")\n-        );\n+                .replace(\"data:application/octet-stream;base64,\", \"\"));\n \n         return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n     }\n@@ -81,4 +77,4 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n     public void setRestTemplate(RestTemplate restTemplate) {\n         this.restTemplate = restTemplate;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/101/GetFileSMOImpl.java\nindex 28d4fc8499..fd53ced6da 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/101/GetFileSMOImpl.java\n@@ -16,12 +16,13 @@ import org.springframework.http.ResponseEntity;\n import org.springframework.stereotype.Service;\n import org.springframework.util.MultiValueMap;\n import org.springframework.web.client.RestTemplate;\n-\n import java.io.IOException;\n \n /**\n  * \u67e5\u8be2notice\u670d\u52a1\u7c7b\n  */\n+\n+\n @Service(\"getFileSMOImpl\")\n public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n \n@@ -31,7 +32,6 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n     @Override\n     public ResponseEntity<Object> getFile(IPageData pd) throws SMOException, IOException {\n         JSONObject paramIn = JSONObject.parseObject(pd.getReqData());\n-\n         Assert.hasKeyAndValue(paramIn, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u5c0f\u533aID\");\n         Assert.hasKeyAndValue(paramIn, \"fileId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u6587\u4ef6ID\");\n \n@@ -43,11 +43,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n         paramIn.putAll(paramMap);*/\n \n         String apiUrl = ServiceConstant.SERVICE_API_URL + \"/api/file.getFile\" + mapToUrlParam(paramIn);\n-\n-\n-        ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, paramIn.toJSONString(),\n-                apiUrl,\n-                HttpMethod.GET);\n+        ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, paramIn.toJSONString(), apiUrl, HttpMethod.GET);\n \n         //\u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n@@ -64,12 +60,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n         //headers.add(\"Content-Disposition\", \"attachment; filename=\" + outParam.getString(\"fileName\"));\n         headers.add(\"Accept-Ranges\", \"bytes\");\n \n-        byte[] context = Base64Convert.base64ToByte(outParam.getString(\"context\").replace(\"data:image/webp;base64,\", \"\")\n-                .replace(\"data:image/webp;base64,\", \"\")\n-                .replace(\"data:image/png;base64,\", \"\")\n-                .replace(\"data:image/jpeg;base64,\", \"\")\n-                .replace(\"data:application/octet-stream;base64,\",\"\")\n-        );\n+        byte[] context = Base64Convert.base64ToByte(outParam.getString(\"context\").replace(\"data:image/webp;base64,\", \"\").replace(\"data:image/webp;base64,\", \"\").replace(\"data:image/png;base64,\", \"\").replace(\"data:image/jpeg;base64,\", \"\").replace(\"data:application/octet-stream;base64,\", \"\"));\n \n         return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n     }\n@@ -81,4 +72,4 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n     public void setRestTemplate(RestTemplate restTemplate) {\n         this.restTemplate = restTemplate;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/101/GetFileSMOImpl.java\nindex 28d4fc8499..4481447520 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/101/GetFileSMOImpl.java\n@@ -68,7 +68,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n                 .replace(\"data:image/webp;base64,\", \"\")\n                 .replace(\"data:image/png;base64,\", \"\")\n                 .replace(\"data:image/jpeg;base64,\", \"\")\n-                .replace(\"data:application/octet-stream;base64,\",\"\")\n+                .replace(\"data:application/octet-stream;base64,\", \"\")\n         );\n \n         return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "71",
                    "column": "66",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "71",
                    "column": "66",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/101/GetFileSMOImpl.java\nindex 28d4fc8499..e45441004e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/101/GetFileSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/101/GetFileSMOImpl.java\n@@ -68,7 +68,7 @@ public class GetFileSMOImpl extends BaseComponentSMO implements IGetFileSMO {\n                 .replace(\"data:image/webp;base64,\", \"\")\n                 .replace(\"data:image/png;base64,\", \"\")\n                 .replace(\"data:image/jpeg;base64,\", \"\")\n-                .replace(\"data:application/octet-stream;base64,\",\"\")\n+                .replace(\"data:application/octet-stream;base64,\" ,\"\")\n         );\n \n         return new ResponseEntity<Object>(context, headers, HttpStatus.OK);\n",
            "diff_size": 1
        }
    ]
}