{
    "error_id": "791",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/791/LogLossMetric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/791/LogLossMetric.java\nindex 4c2b921d8f..3682138091 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/791/LogLossMetric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/791/LogLossMetric.java\n@@ -13,6 +13,7 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.algorithm.metric;\n \n /**\n@@ -21,51 +22,51 @@ package com.tencent.angel.ml.algorithm.metric;\n \n public class LogLossMetric implements Metric {\n \n-  /**\n-   * return name of metric\n-   *\n-   * @return the name\n-   */\n-  @Override\n-  public String getName() {\n-    return \"logloss\";\n-  }\n+    /**\n+     * return name of metric\n+     *\n+     * @return the name\n+     */\n+    @Override\n+    public String getName() {\n+        return \"logloss\";\n+    }\n \n-  /**\n-   * evaluate a specific metric for instances\n-   *\n-   * @param predProbs the probability predictions\n-   * @param labels the labels\n-   * @return the eval metric\n-   */\n-  @Override\n-  public float eval(float[] predProbs, float[] labels) {\n-    float errSum = 0.0f;\n-    for (int i = 0; i < predProbs.length; i++) {\n-      errSum += evalOne(predProbs[i], labels[i]);\n+    /**\n+     * evaluate a specific metric for instances\n+     *\n+     * @param predProbs the probability predictions\n+     * @param labels    the labels\n+     * @return the eval metric\n+     */\n+    @Override\n+    public float eval(float[] predProbs, float[] labels) {\n+        float errSum = 0.0f;\n+        for (int i = 0; i < predProbs.length; i++) {\n+            errSum += evalOne(predProbs[i], labels[i]);\n+        }\n+        return errSum / predProbs.length;\n     }\n-    return errSum / predProbs.length;\n-  }\n \n-  /**\n-   * evaluate a specific metric for one instance\n-   *\n-   * @param predProb the probability prediction\n-   * @param label the label\n-   * @return the eval metric\n-   */\n-  @Override\n-  public float evalOne(float predProb, float label) {\n-    float eps = 1e-16f;\n-    float pneg = 1.0f - predProb;\n-    if (predProb < eps) {\n-      return -label * (float) Math.log(eps) - (1.0f - label) * (float) Math.log(1.0f - eps);\n-    } else if (pneg < eps) {\n-      return -label * (float) Math.log(1.0f - eps) - (1.0f - label) * (float) Math.log(eps);\n-    } else {\n-      return -label * (float) Math.log(predProb) - (1.0f - label) * (float) Math.log(pneg);\n+    /**\n+     * evaluate a specific metric for one instance\n+     *\n+     * @param predProb the probability prediction\n+     * @param label    the label\n+     * @return the eval metric\n+     */\n+    @Override\n+    public float evalOne(float predProb, float label) {\n+        float eps = 1e-16f;\n+        float pneg = 1.0f - predProb;\n+        if (predProb < eps) {\n+            return -label * (float) Math.log(eps) - (1.0f - label) * (float) Math.log(1.0f - eps);\n+        } else if (pneg < eps) {\n+            return -label * (float) Math.log(1.0f - eps) - (1.0f - label) * (float) Math.log(eps);\n+        } else {\n+            return -label * (float) Math.log(predProb) - (1.0f - label) * (float) Math.log(pneg);\n+        }\n     }\n-  }\n \n \n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/791/LogLossMetric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/791/LogLossMetric.java\nindex 4c2b921d8f..4fbc5013a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/791/LogLossMetric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/791/LogLossMetric.java\n@@ -68,4 +68,4 @@ public class LogLossMetric implements Metric {\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 45.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/791/LogLossMetric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/791/LogLossMetric.java\nindex 4c2b921d8f..affd6de4f1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/791/LogLossMetric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/791/LogLossMetric.java\n@@ -19,6 +19,7 @@ package com.tencent.angel.ml.algorithm.metric;\n  * Description: the metric of logistic loss\n  */\n \n+\n public class LogLossMetric implements Metric {\n \n   /**\n@@ -26,10 +27,12 @@ public class LogLossMetric implements Metric {\n    *\n    * @return the name\n    */\n-  @Override\n-  public String getName() {\n+\n+\n+    @Override\n+    public String getName() {\n     return \"logloss\";\n-  }\n+    }\n \n   /**\n    * evaluate a specific metric for instances\n@@ -38,14 +41,15 @@ public class LogLossMetric implements Metric {\n    * @param labels the labels\n    * @return the eval metric\n    */\n-  @Override\n-  public float eval(float[] predProbs, float[] labels) {\n+\n+    @Override\n+    public float eval(float[] predProbs, float[] labels) {\n     float errSum = 0.0f;\n     for (int i = 0; i < predProbs.length; i++) {\n-      errSum += evalOne(predProbs[i], labels[i]);\n+        errSum += evalOne(predProbs[i], labels[i]);\n     }\n     return errSum / predProbs.length;\n-  }\n+    }\n \n   /**\n    * evaluate a specific metric for one instance\n@@ -54,18 +58,18 @@ public class LogLossMetric implements Metric {\n    * @param label the label\n    * @return the eval metric\n    */\n-  @Override\n-  public float evalOne(float predProb, float label) {\n+\n+    @Override\n+    public float evalOne(float predProb, float label) {\n     float eps = 1e-16f;\n     float pneg = 1.0f - predProb;\n     if (predProb < eps) {\n-      return -label * (float) Math.log(eps) - (1.0f - label) * (float) Math.log(1.0f - eps);\n+        return -label * (float) Math.log(eps) - (1.0f - label) * (float) Math.log(1.0f - eps);\n     } else if (pneg < eps) {\n-      return -label * (float) Math.log(1.0f - eps) - (1.0f - label) * (float) Math.log(eps);\n+                                                          return -label * (float) Math.log(1.0f - eps) - (1.0f - label) * (float) Math.log(eps);\n     } else {\n       return -label * (float) Math.log(predProb) - (1.0f - label) * (float) Math.log(pneg);\n     }\n-  }\n-\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}