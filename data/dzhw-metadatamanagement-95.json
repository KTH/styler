{
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "78",
                "severity": "error",
                "message": "'}' at column 78 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(UniqueDatasetNumberInProject constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "78",
                    "severity": "error",
                    "message": "'}' at column 78 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/95/UniqueDataSetNumberInProjectValidator.java\nindex b67ba9b02b..bf4f4e2b75 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/95/UniqueDataSetNumberInProjectValidator.java\n@@ -46,7 +46,7 @@ public class UniqueDataSetNumberInProjectValidator\n     List<IdAndVersionProjection> dataSetWithNumberAndProject =\n         this.dataSetRepository.findIdsByDataAcquisitionProjectIdAndNumber(\n         dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n-    \n+\n     // ignore the same object (for an update)\n     List<IdAndVersionProjection> dataSetWithoutSameDataSet = new ArrayList<>();\n     for (IdAndVersionProjection dataSetFromList : dataSetWithNumberAndProject) {\n@@ -55,7 +55,7 @@ public class UniqueDataSetNumberInProjectValidator\n         dataSetWithoutSameDataSet.add(dataSetFromList);\n       }\n     }\n-    \n+\n     //check for data set with same number and project id\n     // if no other found .-> good!\n     return dataSetWithoutSameDataSet.size() == 0;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/95/UniqueDataSetNumberInProjectValidator.java\nindex b67ba9b02b..5cfa97f888 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/95/UniqueDataSetNumberInProjectValidator.java\n@@ -13,11 +13,10 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSet;\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.repository.DataSetRepository;\n \n /**\n- * This validator checks the number of a data set within a project. The data set number has to be \n+ * This validator checks the number of a data set within a project. The data set number has to be\n  * unique within the project.\n  *\n  * @author Daniel Katzberg\n- *\n  */\n public class UniqueDataSetNumberInProjectValidator\n     implements ConstraintValidator<UniqueDatasetNumberInProject, DataSet> {\n@@ -27,15 +26,16 @@ public class UniqueDataSetNumberInProjectValidator\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueDatasetNumberInProject constraintAnnotation) {}\n+  public void initialize(UniqueDatasetNumberInProject constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n@@ -45,8 +45,8 @@ public class UniqueDataSetNumberInProjectValidator\n     // search for data sets with the same project id and number (not id!)\n     List<IdAndVersionProjection> dataSetWithNumberAndProject =\n         this.dataSetRepository.findIdsByDataAcquisitionProjectIdAndNumber(\n-        dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n-    \n+            dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n+\n     // ignore the same object (for an update)\n     List<IdAndVersionProjection> dataSetWithoutSameDataSet = new ArrayList<>();\n     for (IdAndVersionProjection dataSetFromList : dataSetWithNumberAndProject) {\n@@ -55,7 +55,7 @@ public class UniqueDataSetNumberInProjectValidator\n         dataSetWithoutSameDataSet.add(dataSetFromList);\n       }\n     }\n-    \n+\n     //check for data set with same number and project id\n     // if no other found .-> good!\n     return dataSetWithoutSameDataSet.size() == 0;\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "78",
                    "severity": "error",
                    "message": "'}' at column 78 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/95/UniqueDataSetNumberInProjectValidator.java\nindex b67ba9b02b..da593401f6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/95/UniqueDataSetNumberInProjectValidator.java\n@@ -61,4 +61,4 @@ public class UniqueDataSetNumberInProjectValidator\n     return dataSetWithoutSameDataSet.size() == 0;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 83, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/95/UniqueDataSetNumberInProjectValidator.java\nindex b67ba9b02b..31018d703c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/95/UniqueDataSetNumberInProjectValidator.java\n@@ -2,12 +2,9 @@ package eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.validation;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSet;\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.repository.DataSetRepository;\n@@ -19,19 +16,23 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.repository.DataSetReposi\n  * @author Daniel Katzberg\n  *\n  */\n-public class UniqueDataSetNumberInProjectValidator\n-    implements ConstraintValidator<UniqueDatasetNumberInProject, DataSet> {\n \n-  @Autowired\n-  private DataSetRepository dataSetRepository;\n+\n+public class UniqueDataSetNumberInProjectValidator implements ConstraintValidator<UniqueDatasetNumberInProject, DataSet> {\n+\n+    @Autowired\n+    private DataSetRepository dataSetRepository;\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(UniqueDatasetNumberInProject constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(UniqueDatasetNumberInProject constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -39,26 +40,27 @@ public class UniqueDataSetNumberInProjectValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(DataSet dataSet, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(DataSet dataSet,\n+        ConstraintValidatorContext context) {\n \n     // search for data sets with the same project id and number (not id!)\n-    List<IdAndVersionProjection> dataSetWithNumberAndProject =\n-        this.dataSetRepository.findIdsByDataAcquisitionProjectIdAndNumber(\n-        dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n+    List<IdAndVersionProjection> dataSetWithNumberAndProject = this.dataSetRepository.findIdsByDataAcquisitionProjectIdAndNumber(dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n     \n     // ignore the same object (for an update)\n     List<IdAndVersionProjection> dataSetWithoutSameDataSet = new ArrayList<>();\n+\n     for (IdAndVersionProjection dataSetFromList : dataSetWithNumberAndProject) {\n-      if (!dataSetFromList.getId()\n-          .equals(dataSet.getId())) {\n-        dataSetWithoutSameDataSet.add(dataSetFromList);\n-      }\n+        if (!dataSetFromList.getId().equals(dataSet.getId())) {\n+                                                                                   dataSetWithoutSameDataSet.add(dataSetFromList);\n+        }\n     }\n     \n     //check for data set with same number and project id\n     // if no other found .-> good!\n-    return dataSetWithoutSameDataSet.size() == 0;\n-  }\n \n-}\n+    return dataSetWithoutSameDataSet.size() == 0;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "78",
                    "severity": "error",
                    "message": "'}' at column 78 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/95/UniqueDataSetNumberInProjectValidator.java\nindex b67ba9b02b..bf4f4e2b75 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/95/UniqueDataSetNumberInProjectValidator.java\n@@ -46,7 +46,7 @@ public class UniqueDataSetNumberInProjectValidator\n     List<IdAndVersionProjection> dataSetWithNumberAndProject =\n         this.dataSetRepository.findIdsByDataAcquisitionProjectIdAndNumber(\n         dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n-    \n+\n     // ignore the same object (for an update)\n     List<IdAndVersionProjection> dataSetWithoutSameDataSet = new ArrayList<>();\n     for (IdAndVersionProjection dataSetFromList : dataSetWithNumberAndProject) {\n@@ -55,7 +55,7 @@ public class UniqueDataSetNumberInProjectValidator\n         dataSetWithoutSameDataSet.add(dataSetFromList);\n       }\n     }\n-    \n+\n     //check for data set with same number and project id\n     // if no other found .-> good!\n     return dataSetWithoutSameDataSet.size() == 0;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "column": "79",
                    "severity": "error",
                    "message": "'}' at column 79 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/95/UniqueDataSetNumberInProjectValidator.java\nindex b67ba9b02b..d7af104a73 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/95/UniqueDataSetNumberInProjectValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/95/UniqueDataSetNumberInProjectValidator.java\n@@ -31,9 +31,7 @@ public class UniqueDataSetNumberInProjectValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueDatasetNumberInProject constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(UniqueDatasetNumberInProject constraintAnnotation) { }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n@@ -46,7 +44,7 @@ public class UniqueDataSetNumberInProjectValidator\n     List<IdAndVersionProjection> dataSetWithNumberAndProject =\n         this.dataSetRepository.findIdsByDataAcquisitionProjectIdAndNumber(\n         dataSet.getDataAcquisitionProjectId(), dataSet.getNumber());\n-    \n+\n     // ignore the same object (for an update)\n     List<IdAndVersionProjection> dataSetWithoutSameDataSet = new ArrayList<>();\n     for (IdAndVersionProjection dataSetFromList : dataSetWithNumberAndProject) {\n@@ -55,7 +53,7 @@ public class UniqueDataSetNumberInProjectValidator\n         dataSetWithoutSameDataSet.add(dataSetFromList);\n       }\n     }\n-    \n+\n     //check for data set with same number and project id\n     // if no other found .-> good!\n     return dataSetWithoutSameDataSet.size() == 0;\n",
            "diff_size": 5
        }
    ]
}