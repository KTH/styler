{
    "error_id": "144",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n\n\tpublic void configure(CacheConfiguration cacheConfiguration) {\n\t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n\t\tthis.cacheConfiguration = cacheConfiguration;\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "68",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/144/MemcachedProvider.java\nindex 8730af12de..c1f7a690bd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/144/MemcachedProvider.java\n@@ -64,7 +64,7 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n+    public void configure(CacheConfiguration cacheConfiguration) {\n \t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n \t\tthis.cacheConfiguration = cacheConfiguration;\n \t}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/144/MemcachedProvider.java\nindex 8730af12de..6e2ef17ace 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/144/MemcachedProvider.java\n@@ -50,10 +50,10 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n             final ConnectionFactory connectionFactory;\n             if (memcachedConfiguration.getConnectionFactoryType() == MemcachedConnectionFactoryType.BINARY) {\n                 connectionFactory = new BinaryConnectionFactory(memcachedConfiguration.getMaxOperationQueueLength(),\n-                        memcachedConfiguration.getBufferSize());\n+                    memcachedConfiguration.getBufferSize());\n             } else {\n                 connectionFactory = new DefaultConnectionFactory(memcachedConfiguration.getMaxOperationQueueLength(),\n-                        memcachedConfiguration.getBufferSize());\n+                    memcachedConfiguration.getBufferSize());\n             }\n \n             client = new MemcachedClient(connectionFactory, AddrUtil.getAddresses(memcachedConfiguration.getServers()));\n@@ -64,10 +64,10 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n-\t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n-\t\tthis.cacheConfiguration = cacheConfiguration;\n-\t}\n+    public void configure(CacheConfiguration cacheConfiguration) {\n+        this.log = LoggerFactory.getLogger(MemcachedProvider.class);\n+        this.cacheConfiguration = cacheConfiguration;\n+    }\n \n     private void testConnection() {\n         put(2, \"connectionTest\", \"connectionTestValue\");\n@@ -79,7 +79,7 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n     public boolean isConnected() {\n         put(2, \"connectionTest\", \"connectionTestValue\");\n         if (!\"connectionTestValue\".equals(get(\"connectionTest\"))) {\n-         return false;\n+            return false;\n         }\n         return true;\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/144/MemcachedProvider.java\nindex 8730af12de..a9ccdccf1f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/144/MemcachedProvider.java\n@@ -64,12 +64,12 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n-\t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n+public void configure(CacheConfiguration cacheConfiguration) {\n+    this.log = LoggerFactory.getLogger(MemcachedProvider.class);\n \t\tthis.cacheConfiguration = cacheConfiguration;\n-\t}\n+    }\n \n-    private void testConnection() {\n+private void testConnection() {\n         put(2, \"connectionTest\", \"connectionTestValue\");\n         if (!\"connectionTestValue\".equals(get(\"connectionTest\"))) {\n             throw new IllegalStateException(\"Error starting MemcachedProvider. Please check memcached configuration: \" + memcachedConfiguration);\n@@ -79,8 +79,8 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n     public boolean isConnected() {\n         put(2, \"connectionTest\", \"connectionTestValue\");\n         if (!\"connectionTestValue\".equals(get(\"connectionTest\"))) {\n-         return false;\n-        }\n+    return false;\n+    }\n         return true;\n     }\n \n@@ -149,4 +149,4 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         return CacheProviderType.MEMCACHED;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/144/MemcachedProvider.java\nindex 8730af12de..8c4927b095 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/144/MemcachedProvider.java\n@@ -4,10 +4,8 @@ import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import net.spy.memcached.AddrUtil;\n import net.spy.memcached.BinaryConnectionFactory;\n import net.spy.memcached.ConnectionFactory;\n@@ -19,6 +17,8 @@ import net.spy.memcached.ops.OperationStatus;\n /**\n  * @author yuriyz on 02/02/2017.\n  */\n+\n+\n @ApplicationScoped\n public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n \n@@ -27,11 +27,9 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n \n     @Inject\n     private CacheConfiguration cacheConfiguration;\n-\n     private MemcachedConfiguration memcachedConfiguration;\n \n-    public MemcachedProvider() {\n-    }\n+    public MemcachedProvider() { }\n \n     public void setCacheConfiguration(CacheConfiguration cacheConfiguration) {\n         this.cacheConfiguration = cacheConfiguration;\n@@ -50,12 +48,11 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n             final ConnectionFactory connectionFactory;\n             if (memcachedConfiguration.getConnectionFactoryType() == MemcachedConnectionFactoryType.BINARY) {\n                 connectionFactory = new BinaryConnectionFactory(memcachedConfiguration.getMaxOperationQueueLength(),\n-                        memcachedConfiguration.getBufferSize());\n+                    memcachedConfiguration.getBufferSize());\n             } else {\n                 connectionFactory = new DefaultConnectionFactory(memcachedConfiguration.getMaxOperationQueueLength(),\n-                        memcachedConfiguration.getBufferSize());\n+                    memcachedConfiguration.getBufferSize());\n             }\n-\n             client = new MemcachedClient(connectionFactory, AddrUtil.getAddresses(memcachedConfiguration.getServers()));\n             testConnection();\n             log.debug(\"MemcachedProvider started.\");\n@@ -64,13 +61,14 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n-\t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n-\t\tthis.cacheConfiguration = cacheConfiguration;\n-\t}\n+    public void configure(CacheConfiguration cacheConfiguration) {\n+        this.log = LoggerFactory.getLogger(MemcachedProvider.class);\n+        this.cacheConfiguration = cacheConfiguration;\n+    }\n \n     private void testConnection() {\n         put(2, \"connectionTest\", \"connectionTestValue\");\n+\n         if (!\"connectionTestValue\".equals(get(\"connectionTest\"))) {\n             throw new IllegalStateException(\"Error starting MemcachedProvider. Please check memcached configuration: \" + memcachedConfiguration);\n         }\n@@ -78,16 +76,17 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n \n     public boolean isConnected() {\n         put(2, \"connectionTest\", \"connectionTestValue\");\n+\n         if (!\"connectionTestValue\".equals(get(\"connectionTest\"))) {\n-         return false;\n+            return false;\n         }\n+\n         return true;\n     }\n \n     @PreDestroy\n     public void destroy() {\n         log.debug(\"Destroying MemcachedProvider\");\n-\n         try {\n             client.shutdown();\n             log.debug(\"Destroyed MemcachedProvider\");\n@@ -107,6 +106,7 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n             if (key == null) {\n                 return null;\n             }\n+\n             Object o = client.get(key);\n             log.trace(\"get - key: \" + key + \", value:\" + o);\n             return o;\n@@ -149,4 +149,4 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         return CacheProviderType.MEMCACHED;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "68",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/144/MemcachedProvider.java\nindex 8730af12de..c1f7a690bd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/144/MemcachedProvider.java\n@@ -64,7 +64,7 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n         }\n     }\n \n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n+    public void configure(CacheConfiguration cacheConfiguration) {\n \t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n \t\tthis.cacheConfiguration = cacheConfiguration;\n \t}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/144/MemcachedProvider.java\nindex 8730af12de..d936f0e9b1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/144/MemcachedProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/144/MemcachedProvider.java\n@@ -63,8 +63,7 @@ public class MemcachedProvider extends AbstractCacheProvider<MemcachedClient> {\n             throw new IllegalStateException(\"Error starting MemcachedProvider\", e);\n         }\n     }\n-\n-\tpublic void configure(CacheConfiguration cacheConfiguration) {\n+    public void configure(CacheConfiguration cacheConfiguration) {\n \t\tthis.log = LoggerFactory.getLogger(MemcachedProvider.class);\n \t\tthis.cacheConfiguration = cacheConfiguration;\n \t}\n",
            "diff_size": 2
        }
    ]
}