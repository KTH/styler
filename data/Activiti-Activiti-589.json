{
    "error_id": "589",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport java.util.HashSet;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/589/VariableNameValidator.java\nindex a72e053569..217cb9a03d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/589/VariableNameValidator.java\n@@ -1,53 +1,54 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.runtime.api.impl;\r\n-\r\n-import java.util.HashSet;\r\n-import java.util.Map;\r\n-import java.util.Set;\r\n-import java.util.regex.Pattern;\r\n-\r\n-import org.springframework.util.StringUtils;\r\n-\r\n-public class VariableNameValidator {\r\n-    \r\n-    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n-            if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n-                return true;\r\n-            }  \r\n-        }\r\n-        return false;\r\n-        \r\n-    }\r\n-    \r\n-    public Set<String> validateVariables(Map<String, Object> variables) {\r\n-        Set<String> mismatchedVars = new HashSet<>();\r\n-        if (variables != null && !variables.isEmpty()) {\r\n-            for (Map.Entry<String, Object> variable : variables.entrySet()) {\r\n-                if (!validate(variable.getKey())) {\r\n-                    mismatchedVars.add(variable.getKey());\r\n-                }\r\n-            }   \r\n-        }\r\n-        \r\n-        return mismatchedVars;\r\n-    }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.runtime.api.impl;\n+\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+import org.springframework.util.StringUtils;\n+\n+public class VariableNameValidator {\n+\n+    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\n+\n+    public boolean validate(String name) {\n+\n+        if (StringUtils.hasLength(name)) {\n+            if (Pattern.compile(regexPattern).matcher(name).matches()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+\n+    }\n+\n+    public Set<String> validateVariables(Map<String, Object> variables) {\n+        Set<String> mismatchedVars = new HashSet<>();\n+        if (variables != null && !variables.isEmpty()) {\n+            for (Map.Entry<String, Object> variable : variables.entrySet()) {\n+                if (!validate(variable.getKey())) {\n+                    mismatchedVars.add(variable.getKey());\n+                }\n+            }\n+        }\n+\n+        return mismatchedVars;\n+    }\n+\n+}\n",
            "diff_size": 54
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/589/VariableNameValidator.java\nindex a72e053569..66c45ffbf5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/589/VariableNameValidator.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.runtime.api.impl;\r\n \r\n import java.util.HashSet;\r\n@@ -23,20 +24,20 @@ import java.util.regex.Pattern;\n import org.springframework.util.StringUtils;\r\n \r\n public class VariableNameValidator {\r\n-    \r\n+\r\n     public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n+\r\n+    public boolean validate(String name) {\r\n+\r\n+        if (StringUtils.hasLength(name)) {\r\n             if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n                 return true;\r\n-            }  \r\n+            }\r\n         }\r\n         return false;\r\n-        \r\n+\r\n     }\r\n-    \r\n+\r\n     public Set<String> validateVariables(Map<String, Object> variables) {\r\n         Set<String> mismatchedVars = new HashSet<>();\r\n         if (variables != null && !variables.isEmpty()) {\r\n@@ -44,9 +45,9 @@ public class VariableNameValidator {\n                 if (!validate(variable.getKey())) {\r\n                     mismatchedVars.add(variable.getKey());\r\n                 }\r\n-            }   \r\n+            }\r\n         }\r\n-        \r\n+\r\n         return mismatchedVars;\r\n     }\r\n \r\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/589/VariableNameValidator.java\nindex a72e053569..9786ee9fa9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/589/VariableNameValidator.java\n@@ -13,41 +13,37 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.activiti.runtime.api.impl;\r\n-\r\n-import java.util.HashSet;\r\n-import java.util.Map;\r\n-import java.util.Set;\r\n-import java.util.regex.Pattern;\r\n-\r\n-import org.springframework.util.StringUtils;\r\n-\r\n-public class VariableNameValidator {\r\n-    \r\n-    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n-            if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n-                return true;\r\n-            }  \r\n-        }\r\n-        return false;\r\n-        \r\n-    }\r\n-    \r\n-    public Set<String> validateVariables(Map<String, Object> variables) {\r\n-        Set<String> mismatchedVars = new HashSet<>();\r\n-        if (variables != null && !variables.isEmpty()) {\r\n-            for (Map.Entry<String, Object> variable : variables.entrySet()) {\r\n-                if (!validate(variable.getKey())) {\r\n-                    mismatchedVars.add(variable.getKey());\r\n-                }\r\n-            }   \r\n-        }\r\n-        \r\n-        return mismatchedVars;\r\n-    }\r\n-\r\n-}\r\n+package org.activiti.runtime.api.impl;\n+\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import org.springframework.util.StringUtils;\n+\n+\n+public class VariableNameValidator {\n+\n+    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\n+    public boolean validate(String name) {\n+    if (StringUtils.hasLength(name)) {\n+        if (Pattern.compile(regexPattern).matcher(name).matches()) {\n+                                         return true;\n+        }\n+    }\n+    return false;\n+    }\n+\n+    public Set<String> validateVariables(Map<String, Object> variables) {\n+    Set<String> mismatchedVars = new HashSet<>();\n+    if (variables != null && !variables.isEmpty()) {\n+        for (Map.Entry<String, Object> variable : variables.entrySet()) {\n+        if (!validate(variable.getKey())) {\n+            mismatchedVars.add(variable.getKey());\n+        }\n+        }\n+    }\n+    return mismatchedVars;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/589/VariableNameValidator.java\nindex a72e053569..217cb9a03d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/589/VariableNameValidator.java\n@@ -1,53 +1,54 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.runtime.api.impl;\r\n-\r\n-import java.util.HashSet;\r\n-import java.util.Map;\r\n-import java.util.Set;\r\n-import java.util.regex.Pattern;\r\n-\r\n-import org.springframework.util.StringUtils;\r\n-\r\n-public class VariableNameValidator {\r\n-    \r\n-    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n-            if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n-                return true;\r\n-            }  \r\n-        }\r\n-        return false;\r\n-        \r\n-    }\r\n-    \r\n-    public Set<String> validateVariables(Map<String, Object> variables) {\r\n-        Set<String> mismatchedVars = new HashSet<>();\r\n-        if (variables != null && !variables.isEmpty()) {\r\n-            for (Map.Entry<String, Object> variable : variables.entrySet()) {\r\n-                if (!validate(variable.getKey())) {\r\n-                    mismatchedVars.add(variable.getKey());\r\n-                }\r\n-            }   \r\n-        }\r\n-        \r\n-        return mismatchedVars;\r\n-    }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.runtime.api.impl;\n+\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+import org.springframework.util.StringUtils;\n+\n+public class VariableNameValidator {\n+\n+    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\n+\n+    public boolean validate(String name) {\n+\n+        if (StringUtils.hasLength(name)) {\n+            if (Pattern.compile(regexPattern).matcher(name).matches()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+\n+    }\n+\n+    public Set<String> validateVariables(Map<String, Object> variables) {\n+        Set<String> mismatchedVars = new HashSet<>();\n+        if (variables != null && !variables.isEmpty()) {\n+            for (Map.Entry<String, Object> variable : variables.entrySet()) {\n+                if (!validate(variable.getKey())) {\n+                    mismatchedVars.add(variable.getKey());\n+                }\n+            }\n+        }\n+\n+        return mismatchedVars;\n+    }\n+\n+}\n",
            "diff_size": 54
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/589/VariableNameValidator.java\nindex a72e053569..217cb9a03d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/589/VariableNameValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/589/VariableNameValidator.java\n@@ -1,53 +1,54 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.runtime.api.impl;\r\n-\r\n-import java.util.HashSet;\r\n-import java.util.Map;\r\n-import java.util.Set;\r\n-import java.util.regex.Pattern;\r\n-\r\n-import org.springframework.util.StringUtils;\r\n-\r\n-public class VariableNameValidator {\r\n-    \r\n-    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\r\n-    \r\n-    public boolean validate(String name) { \r\n-        \r\n-        if (StringUtils.hasLength(name)) {           \r\n-            if (Pattern.compile(regexPattern).matcher(name).matches()) {\r\n-                return true;\r\n-            }  \r\n-        }\r\n-        return false;\r\n-        \r\n-    }\r\n-    \r\n-    public Set<String> validateVariables(Map<String, Object> variables) {\r\n-        Set<String> mismatchedVars = new HashSet<>();\r\n-        if (variables != null && !variables.isEmpty()) {\r\n-            for (Map.Entry<String, Object> variable : variables.entrySet()) {\r\n-                if (!validate(variable.getKey())) {\r\n-                    mismatchedVars.add(variable.getKey());\r\n-                }\r\n-            }   \r\n-        }\r\n-        \r\n-        return mismatchedVars;\r\n-    }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.runtime.api.impl;\n+\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+import org.springframework.util.StringUtils;\n+\n+public class VariableNameValidator {\n+\n+    public static String regexPattern = \"(?i)[a-z][a-z0-9_]*\";\n+\n+    public boolean validate(String name) {\n+\n+        if (StringUtils.hasLength(name)) {\n+            if (Pattern.compile(regexPattern).matcher(name).matches()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+\n+    }\n+\n+    public Set<String> validateVariables(Map<String, Object> variables) {\n+        Set<String> mismatchedVars = new HashSet<>();\n+        if (variables != null && !variables.isEmpty()) {\n+            for (Map.Entry<String, Object> variable : variables.entrySet()) {\n+                if (!validate(variable.getKey())) {\n+                    mismatchedVars.add(variable.getKey());\n+                }\n+            }\n+        }\n+\n+        return mismatchedVars;\n+    }\n+\n+}\n",
            "diff_size": 54
        }
    ]
}