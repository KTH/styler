{
    "error_id": "83",
    "information": {
        "errors": [
            {
                "line": "336",
                "column": "70",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n    return\n        Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n        Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/83/ImageSaveOptionsData.java\nindex 3e40966550..8fc3f144de 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/83/ImageSaveOptionsData.java\n@@ -333,7 +333,7 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n+    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData) o;\n     return\n         Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n         Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/83/ImageSaveOptionsData.java\nindex 3e40966550..072c049e0a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/83/ImageSaveOptionsData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,308 +50,322 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Container abstract class for image save options.\")\n public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n-    @SerializedName(\"GraphicsQualityOptions\")\n-    private GraphicsQualityOptionsData graphicsQualityOptions = null;\n+  @SerializedName(\"GraphicsQualityOptions\")\n+  private GraphicsQualityOptionsData graphicsQualityOptions = null;\n \n-    @SerializedName(\"HorizontalResolution\")\n-    private Double horizontalResolution = null;\n+  @SerializedName(\"HorizontalResolution\")\n+  private Double horizontalResolution = null;\n \n-    @SerializedName(\"ImageBrightness\")\n-    private Double imageBrightness = null;\n+  @SerializedName(\"ImageBrightness\")\n+  private Double imageBrightness = null;\n \n-    @SerializedName(\"ImageColorMode\")\n-    private String imageColorMode = null;\n+  @SerializedName(\"ImageColorMode\")\n+  private String imageColorMode = null;\n \n-    @SerializedName(\"ImageContrast\")\n-    private Double imageContrast = null;\n+  @SerializedName(\"ImageContrast\")\n+  private Double imageContrast = null;\n \n-    @SerializedName(\"PaperColor\")\n-    private String paperColor = null;\n+  @SerializedName(\"PaperColor\")\n+  private String paperColor = null;\n \n-    @SerializedName(\"PixelFormat\")\n-    private String pixelFormat = null;\n+  @SerializedName(\"PixelFormat\")\n+  private String pixelFormat = null;\n \n-    @SerializedName(\"Resolution\")\n-    private Double resolution = null;\n+  @SerializedName(\"Resolution\")\n+  private Double resolution = null;\n \n-    @SerializedName(\"Scale\")\n-    private Double scale = null;\n+  @SerializedName(\"Scale\")\n+  private Double scale = null;\n \n-    @SerializedName(\"UseAntiAliasing\")\n-    private Boolean useAntiAliasing = null;\n+  @SerializedName(\"UseAntiAliasing\")\n+  private Boolean useAntiAliasing = null;\n \n-    @SerializedName(\"UseGdiEmfRenderer\")\n-    private Boolean useGdiEmfRenderer = null;\n+  @SerializedName(\"UseGdiEmfRenderer\")\n+  private Boolean useGdiEmfRenderer = null;\n \n-    @SerializedName(\"UseHighQualityRendering\")\n-    private Boolean useHighQualityRendering = null;\n+  @SerializedName(\"UseHighQualityRendering\")\n+  private Boolean useHighQualityRendering = null;\n \n-    @SerializedName(\"VerticalResolution\")\n-    private Double verticalResolution = null;\n-    public ImageSaveOptionsData graphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n-        this.graphicsQualityOptions = graphicsQualityOptions;\n-        return this;\n-    }\n+  @SerializedName(\"VerticalResolution\")\n+  private Double verticalResolution = null;\n \n-    /**\n-     * Gets or sets allows to specify additional System.Drawing.Graphics quality options.\n-    * @return graphicsQualityOptions\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets allows to specify additional System.Drawing.Graphics quality options.\")\n-    public GraphicsQualityOptionsData getGraphicsQualityOptions() {\n-        return graphicsQualityOptions;\n-    }\n+  public ImageSaveOptionsData graphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n+    this.graphicsQualityOptions = graphicsQualityOptions;\n+    return this;\n+  }\n \n-    public void setGraphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n-        this.graphicsQualityOptions = graphicsQualityOptions;\n-    }\n+  /**\n+   * Gets or sets allows to specify additional System.Drawing.Graphics quality options.\n+   *\n+   * @return graphicsQualityOptions\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets allows to specify additional System.Drawing.Graphics quality options.\")\n+  public GraphicsQualityOptionsData getGraphicsQualityOptions() {\n+    return graphicsQualityOptions;\n+  }\n \n-    public ImageSaveOptionsData horizontalResolution(Double horizontalResolution) {\n-        this.horizontalResolution = horizontalResolution;\n-        return this;\n-    }\n+  public void setGraphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n+    this.graphicsQualityOptions = graphicsQualityOptions;\n+  }\n \n-    /**\n-     * Gets or sets the horizontal resolution for the generated images, in dots per inch.\n-     * This property has effect only when saving to raster image formats.\n-     * The default value is 96.\n-    * @return horizontalResolution\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the horizontal resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n-    public Double getHorizontalResolution() {\n-        return horizontalResolution;\n-    }\n+  public ImageSaveOptionsData horizontalResolution(Double horizontalResolution) {\n+    this.horizontalResolution = horizontalResolution;\n+    return this;\n+  }\n \n-    public void setHorizontalResolution(Double horizontalResolution) {\n-        this.horizontalResolution = horizontalResolution;\n-    }\n+  /**\n+   * Gets or sets the horizontal resolution for the generated images, in dots per inch.\n+   * This property has effect only when saving to raster image formats.\n+   * The default value is 96.\n+   *\n+   * @return horizontalResolution\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the horizontal resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n+  public Double getHorizontalResolution() {\n+    return horizontalResolution;\n+  }\n \n-    public ImageSaveOptionsData imageBrightness(Double imageBrightness) {\n-        this.imageBrightness = imageBrightness;\n-        return this;\n-    }\n+  public void setHorizontalResolution(Double horizontalResolution) {\n+    this.horizontalResolution = horizontalResolution;\n+  }\n \n-    /**\n-     * Gets or sets brightness of image.\n-    * @return imageBrightness\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets brightness of image.\")\n-    public Double getImageBrightness() {\n-        return imageBrightness;\n-    }\n+  public ImageSaveOptionsData imageBrightness(Double imageBrightness) {\n+    this.imageBrightness = imageBrightness;\n+    return this;\n+  }\n \n-    public void setImageBrightness(Double imageBrightness) {\n-        this.imageBrightness = imageBrightness;\n-    }\n+  /**\n+   * Gets or sets brightness of image.\n+   *\n+   * @return imageBrightness\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets brightness of image.\")\n+  public Double getImageBrightness() {\n+    return imageBrightness;\n+  }\n \n-    public ImageSaveOptionsData imageColorMode(String imageColorMode) {\n-        this.imageColorMode = imageColorMode;\n-        return this;\n-    }\n+  public void setImageBrightness(Double imageBrightness) {\n+    this.imageBrightness = imageBrightness;\n+  }\n \n-    /**\n-     * Gets or sets color mode of image.\n-    * @return imageColorMode\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets color mode of image.\")\n-    public String getImageColorMode() {\n-        return imageColorMode;\n-    }\n+  public ImageSaveOptionsData imageColorMode(String imageColorMode) {\n+    this.imageColorMode = imageColorMode;\n+    return this;\n+  }\n \n-    public void setImageColorMode(String imageColorMode) {\n-        this.imageColorMode = imageColorMode;\n-    }\n+  /**\n+   * Gets or sets color mode of image.\n+   *\n+   * @return imageColorMode\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets color mode of image.\")\n+  public String getImageColorMode() {\n+    return imageColorMode;\n+  }\n \n-    public ImageSaveOptionsData imageContrast(Double imageContrast) {\n-        this.imageContrast = imageContrast;\n-        return this;\n-    }\n+  public void setImageColorMode(String imageColorMode) {\n+    this.imageColorMode = imageColorMode;\n+  }\n \n-    /**\n-     * Gets or sets contrast of image.\n-    * @return imageContrast\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets contrast of image.\")\n-    public Double getImageContrast() {\n-        return imageContrast;\n-    }\n+  public ImageSaveOptionsData imageContrast(Double imageContrast) {\n+    this.imageContrast = imageContrast;\n+    return this;\n+  }\n \n-    public void setImageContrast(Double imageContrast) {\n-        this.imageContrast = imageContrast;\n-    }\n+  /**\n+   * Gets or sets contrast of image.\n+   *\n+   * @return imageContrast\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets contrast of image.\")\n+  public Double getImageContrast() {\n+    return imageContrast;\n+  }\n \n-    public ImageSaveOptionsData paperColor(String paperColor) {\n-        this.paperColor = paperColor;\n-        return this;\n-    }\n+  public void setImageContrast(Double imageContrast) {\n+    this.imageContrast = imageContrast;\n+  }\n \n-    /**\n-     * Gets or sets background (paper) color of image.\n-    * @return paperColor\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets background (paper) color of image.\")\n-    public String getPaperColor() {\n-        return paperColor;\n-    }\n+  public ImageSaveOptionsData paperColor(String paperColor) {\n+    this.paperColor = paperColor;\n+    return this;\n+  }\n \n-    public void setPaperColor(String paperColor) {\n-        this.paperColor = paperColor;\n-    }\n+  /**\n+   * Gets or sets background (paper) color of image.\n+   *\n+   * @return paperColor\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets background (paper) color of image.\")\n+  public String getPaperColor() {\n+    return paperColor;\n+  }\n \n-    public ImageSaveOptionsData pixelFormat(String pixelFormat) {\n-        this.pixelFormat = pixelFormat;\n-        return this;\n-    }\n+  public void setPaperColor(String paperColor) {\n+    this.paperColor = paperColor;\n+  }\n \n-    /**\n-     * Gets or sets pixel format of image.\n-    * @return pixelFormat\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets pixel format of image.\")\n-    public String getPixelFormat() {\n-        return pixelFormat;\n-    }\n+  public ImageSaveOptionsData pixelFormat(String pixelFormat) {\n+    this.pixelFormat = pixelFormat;\n+    return this;\n+  }\n \n-    public void setPixelFormat(String pixelFormat) {\n-        this.pixelFormat = pixelFormat;\n-    }\n+  /**\n+   * Gets or sets pixel format of image.\n+   *\n+   * @return pixelFormat\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets pixel format of image.\")\n+  public String getPixelFormat() {\n+    return pixelFormat;\n+  }\n \n-    public ImageSaveOptionsData resolution(Double resolution) {\n-        this.resolution = resolution;\n-        return this;\n-    }\n+  public void setPixelFormat(String pixelFormat) {\n+    this.pixelFormat = pixelFormat;\n+  }\n \n-    /**\n-     * Gets or sets both horizontal and vertical resolution for the generated images, in dots per inch.\n-     * This property has effect only when saving to raster image formats.\n-     * The default value is 96.\n-    * @return resolution\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets both horizontal and vertical resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n-    public Double getResolution() {\n-        return resolution;\n-    }\n+  public ImageSaveOptionsData resolution(Double resolution) {\n+    this.resolution = resolution;\n+    return this;\n+  }\n \n-    public void setResolution(Double resolution) {\n-        this.resolution = resolution;\n-    }\n+  /**\n+   * Gets or sets both horizontal and vertical resolution for the generated images, in dots per inch.\n+   * This property has effect only when saving to raster image formats.\n+   * The default value is 96.\n+   *\n+   * @return resolution\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets both horizontal and vertical resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n+  public Double getResolution() {\n+    return resolution;\n+  }\n \n-    public ImageSaveOptionsData scale(Double scale) {\n-        this.scale = scale;\n-        return this;\n-    }\n+  public void setResolution(Double resolution) {\n+    this.resolution = resolution;\n+  }\n \n-    /**\n-     * Gets or sets zoom factor of image.\n-    * @return scale\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets zoom factor of image.\")\n-    public Double getScale() {\n-        return scale;\n-    }\n+  public ImageSaveOptionsData scale(Double scale) {\n+    this.scale = scale;\n+    return this;\n+  }\n \n-    public void setScale(Double scale) {\n-        this.scale = scale;\n-    }\n+  /**\n+   * Gets or sets zoom factor of image.\n+   *\n+   * @return scale\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets zoom factor of image.\")\n+  public Double getScale() {\n+    return scale;\n+  }\n \n-    public ImageSaveOptionsData useAntiAliasing(Boolean useAntiAliasing) {\n-        this.useAntiAliasing = useAntiAliasing;\n-        return this;\n-    }\n+  public void setScale(Double scale) {\n+    this.scale = scale;\n+  }\n \n-    /**\n-     * Gets or sets determine whether or not to use anti-aliasing for rendering.\n-    * @return useAntiAliasing\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets determine whether or not to use anti-aliasing for rendering.\")\n-    public Boolean getUseAntiAliasing() {\n-        return useAntiAliasing;\n-    }\n+  public ImageSaveOptionsData useAntiAliasing(Boolean useAntiAliasing) {\n+    this.useAntiAliasing = useAntiAliasing;\n+    return this;\n+  }\n \n-    public void setUseAntiAliasing(Boolean useAntiAliasing) {\n-        this.useAntiAliasing = useAntiAliasing;\n-    }\n+  /**\n+   * Gets or sets determine whether or not to use anti-aliasing for rendering.\n+   *\n+   * @return useAntiAliasing\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets determine whether or not to use anti-aliasing for rendering.\")\n+  public Boolean getUseAntiAliasing() {\n+    return useAntiAliasing;\n+  }\n \n-    public ImageSaveOptionsData useGdiEmfRenderer(Boolean useGdiEmfRenderer) {\n-        this.useGdiEmfRenderer = useGdiEmfRenderer;\n-        return this;\n-    }\n+  public void setUseAntiAliasing(Boolean useAntiAliasing) {\n+    this.useAntiAliasing = useAntiAliasing;\n+  }\n \n-    /**\n-     * Gets or sets a value determining whether to use GDI+ or Aspose.Words metafile renderer when saving to EMF.\n-    * @return useGdiEmfRenderer\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value determining whether to use GDI+ or Aspose.Words metafile renderer when saving to EMF.\")\n-    public Boolean getUseGdiEmfRenderer() {\n-        return useGdiEmfRenderer;\n-    }\n+  public ImageSaveOptionsData useGdiEmfRenderer(Boolean useGdiEmfRenderer) {\n+    this.useGdiEmfRenderer = useGdiEmfRenderer;\n+    return this;\n+  }\n \n-    public void setUseGdiEmfRenderer(Boolean useGdiEmfRenderer) {\n-        this.useGdiEmfRenderer = useGdiEmfRenderer;\n-    }\n+  /**\n+   * Gets or sets a value determining whether to use GDI+ or Aspose.Words metafile renderer when saving to EMF.\n+   *\n+   * @return useGdiEmfRenderer\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value determining whether to use GDI+ or Aspose.Words metafile renderer when saving to EMF.\")\n+  public Boolean getUseGdiEmfRenderer() {\n+    return useGdiEmfRenderer;\n+  }\n \n-    public ImageSaveOptionsData useHighQualityRendering(Boolean useHighQualityRendering) {\n-        this.useHighQualityRendering = useHighQualityRendering;\n-        return this;\n-    }\n+  public void setUseGdiEmfRenderer(Boolean useGdiEmfRenderer) {\n+    this.useGdiEmfRenderer = useGdiEmfRenderer;\n+  }\n \n-    /**\n-     * Gets or sets determine whether or not to use high quality (i.e. slow) rendering algorithms.\n-    * @return useHighQualityRendering\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets determine whether or not to use high quality (i.e. slow) rendering algorithms.\")\n-    public Boolean getUseHighQualityRendering() {\n-        return useHighQualityRendering;\n-    }\n+  public ImageSaveOptionsData useHighQualityRendering(Boolean useHighQualityRendering) {\n+    this.useHighQualityRendering = useHighQualityRendering;\n+    return this;\n+  }\n \n-    public void setUseHighQualityRendering(Boolean useHighQualityRendering) {\n-        this.useHighQualityRendering = useHighQualityRendering;\n-    }\n+  /**\n+   * Gets or sets determine whether or not to use high quality (i.e. slow) rendering algorithms.\n+   *\n+   * @return useHighQualityRendering\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets determine whether or not to use high quality (i.e. slow) rendering algorithms.\")\n+  public Boolean getUseHighQualityRendering() {\n+    return useHighQualityRendering;\n+  }\n \n-    public ImageSaveOptionsData verticalResolution(Double verticalResolution) {\n-        this.verticalResolution = verticalResolution;\n-        return this;\n-    }\n+  public void setUseHighQualityRendering(Boolean useHighQualityRendering) {\n+    this.useHighQualityRendering = useHighQualityRendering;\n+  }\n \n-    /**\n-     * Gets or sets the vertical resolution for the generated images, in dots per inch.\n-     * This property has effect only when saving to raster image formats.\n-     * The default value is 96.\n-    * @return verticalResolution\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the vertical resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n-    public Double getVerticalResolution() {\n-        return verticalResolution;\n-    }\n+  public ImageSaveOptionsData verticalResolution(Double verticalResolution) {\n+    this.verticalResolution = verticalResolution;\n+    return this;\n+  }\n \n-    public void setVerticalResolution(Double verticalResolution) {\n-        this.verticalResolution = verticalResolution;\n-    }\n+  /**\n+   * Gets or sets the vertical resolution for the generated images, in dots per inch.\n+   * This property has effect only when saving to raster image formats.\n+   * The default value is 96.\n+   *\n+   * @return verticalResolution\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the vertical resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n+  public Double getVerticalResolution() {\n+    return verticalResolution;\n+  }\n+\n+  public void setVerticalResolution(Double verticalResolution) {\n+    this.verticalResolution = verticalResolution;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData) o;\n     return\n         Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n-        Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n-        Objects.equals(this.imageBrightness, imageSaveOptionsData.imageBrightness) &&\n-        Objects.equals(this.imageColorMode, imageSaveOptionsData.imageColorMode) &&\n-        Objects.equals(this.imageContrast, imageSaveOptionsData.imageContrast) &&\n-        Objects.equals(this.paperColor, imageSaveOptionsData.paperColor) &&\n-        Objects.equals(this.pixelFormat, imageSaveOptionsData.pixelFormat) &&\n-        Objects.equals(this.resolution, imageSaveOptionsData.resolution) &&\n-        Objects.equals(this.scale, imageSaveOptionsData.scale) &&\n-        Objects.equals(this.useAntiAliasing, imageSaveOptionsData.useAntiAliasing) &&\n-        Objects.equals(this.useGdiEmfRenderer, imageSaveOptionsData.useGdiEmfRenderer) &&\n-        Objects.equals(this.useHighQualityRendering, imageSaveOptionsData.useHighQualityRendering) &&\n-        Objects.equals(this.verticalResolution, imageSaveOptionsData.verticalResolution) &&\n-        super.equals(o);\n+            Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n+            Objects.equals(this.imageBrightness, imageSaveOptionsData.imageBrightness) &&\n+            Objects.equals(this.imageColorMode, imageSaveOptionsData.imageColorMode) &&\n+            Objects.equals(this.imageContrast, imageSaveOptionsData.imageContrast) &&\n+            Objects.equals(this.paperColor, imageSaveOptionsData.paperColor) &&\n+            Objects.equals(this.pixelFormat, imageSaveOptionsData.pixelFormat) &&\n+            Objects.equals(this.resolution, imageSaveOptionsData.resolution) &&\n+            Objects.equals(this.scale, imageSaveOptionsData.scale) &&\n+            Objects.equals(this.useAntiAliasing, imageSaveOptionsData.useAntiAliasing) &&\n+            Objects.equals(this.useGdiEmfRenderer, imageSaveOptionsData.useGdiEmfRenderer) &&\n+            Objects.equals(this.useHighQualityRendering, imageSaveOptionsData.useHighQualityRendering) &&\n+            Objects.equals(this.verticalResolution, imageSaveOptionsData.verticalResolution) &&\n+            super.equals(o);\n   }\n \n   @Override\n",
            "diff_size": 342
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "338",
                    "column": "66",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/83/ImageSaveOptionsData.java\nindex 3e40966550..2032dd6df9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/83/ImageSaveOptionsData.java\n@@ -85,7 +85,8 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n \n     @SerializedName(\"VerticalResolution\")\n     private Double verticalResolution = null;\n-    public ImageSaveOptionsData graphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n+\n+public ImageSaveOptionsData graphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n         this.graphicsQualityOptions = graphicsQualityOptions;\n         return this;\n     }\n@@ -329,13 +330,13 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n-    return\n-        Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n+\n+ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n+    return Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n         Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n         Objects.equals(this.imageBrightness, imageSaveOptionsData.imageBrightness) &&\n         Objects.equals(this.imageColorMode, imageSaveOptionsData.imageColorMode) &&\n@@ -388,4 +389,4 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/83/ImageSaveOptionsData.java\nindex 3e40966550..9f9f21218d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/83/ImageSaveOptionsData.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Container abstract class for image save options.\n  */\n+\n+\n @ApiModel(description = \"Container abstract class for image save options.\")\n+\n public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n     @SerializedName(\"GraphicsQualityOptions\")\n     private GraphicsQualityOptionsData graphicsQualityOptions = null;\n@@ -85,27 +88,32 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n \n     @SerializedName(\"VerticalResolution\")\n     private Double verticalResolution = null;\n+\n     public ImageSaveOptionsData graphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n-        this.graphicsQualityOptions = graphicsQualityOptions;\n-        return this;\n+    this.graphicsQualityOptions = graphicsQualityOptions;\n+    return this;\n     }\n \n     /**\n      * Gets or sets allows to specify additional System.Drawing.Graphics quality options.\n     * @return graphicsQualityOptions\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets allows to specify additional System.Drawing.Graphics quality options.\")\n     public GraphicsQualityOptionsData getGraphicsQualityOptions() {\n-        return graphicsQualityOptions;\n+    return graphicsQualityOptions;\n     }\n \n+\n     public void setGraphicsQualityOptions(GraphicsQualityOptionsData graphicsQualityOptions) {\n-        this.graphicsQualityOptions = graphicsQualityOptions;\n+    this.graphicsQualityOptions = graphicsQualityOptions;\n     }\n \n+\n     public ImageSaveOptionsData horizontalResolution(Double horizontalResolution) {\n-        this.horizontalResolution = horizontalResolution;\n-        return this;\n+    this.horizontalResolution = horizontalResolution;\n+    return this;\n     }\n \n     /**\n@@ -114,108 +122,132 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n      * The default value is 96.\n     * @return horizontalResolution\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the horizontal resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n     public Double getHorizontalResolution() {\n-        return horizontalResolution;\n+    return horizontalResolution;\n     }\n \n+\n     public void setHorizontalResolution(Double horizontalResolution) {\n-        this.horizontalResolution = horizontalResolution;\n+    this.horizontalResolution = horizontalResolution;\n     }\n \n+\n     public ImageSaveOptionsData imageBrightness(Double imageBrightness) {\n-        this.imageBrightness = imageBrightness;\n-        return this;\n+    this.imageBrightness = imageBrightness;\n+    return this;\n     }\n \n     /**\n      * Gets or sets brightness of image.\n     * @return imageBrightness\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets brightness of image.\")\n     public Double getImageBrightness() {\n-        return imageBrightness;\n+    return imageBrightness;\n     }\n \n+\n     public void setImageBrightness(Double imageBrightness) {\n-        this.imageBrightness = imageBrightness;\n+    this.imageBrightness = imageBrightness;\n     }\n \n+\n     public ImageSaveOptionsData imageColorMode(String imageColorMode) {\n-        this.imageColorMode = imageColorMode;\n-        return this;\n+    this.imageColorMode = imageColorMode;\n+    return this;\n     }\n \n     /**\n      * Gets or sets color mode of image.\n     * @return imageColorMode\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets color mode of image.\")\n     public String getImageColorMode() {\n-        return imageColorMode;\n+    return imageColorMode;\n     }\n \n+\n     public void setImageColorMode(String imageColorMode) {\n-        this.imageColorMode = imageColorMode;\n+    this.imageColorMode = imageColorMode;\n     }\n \n+\n     public ImageSaveOptionsData imageContrast(Double imageContrast) {\n-        this.imageContrast = imageContrast;\n-        return this;\n+    this.imageContrast = imageContrast;\n+    return this;\n     }\n \n     /**\n      * Gets or sets contrast of image.\n     * @return imageContrast\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets contrast of image.\")\n     public Double getImageContrast() {\n-        return imageContrast;\n+    return imageContrast;\n     }\n \n+\n     public void setImageContrast(Double imageContrast) {\n-        this.imageContrast = imageContrast;\n+    this.imageContrast = imageContrast;\n     }\n \n+\n     public ImageSaveOptionsData paperColor(String paperColor) {\n-        this.paperColor = paperColor;\n-        return this;\n+    this.paperColor = paperColor;\n+    return this;\n     }\n \n     /**\n      * Gets or sets background (paper) color of image.\n     * @return paperColor\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets background (paper) color of image.\")\n     public String getPaperColor() {\n-        return paperColor;\n+    return paperColor;\n     }\n \n+\n     public void setPaperColor(String paperColor) {\n-        this.paperColor = paperColor;\n+    this.paperColor = paperColor;\n     }\n \n+\n     public ImageSaveOptionsData pixelFormat(String pixelFormat) {\n-        this.pixelFormat = pixelFormat;\n-        return this;\n+    this.pixelFormat = pixelFormat;\n+    return this;\n     }\n \n     /**\n      * Gets or sets pixel format of image.\n     * @return pixelFormat\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets pixel format of image.\")\n     public String getPixelFormat() {\n-        return pixelFormat;\n+    return pixelFormat;\n     }\n \n+\n     public void setPixelFormat(String pixelFormat) {\n-        this.pixelFormat = pixelFormat;\n+    this.pixelFormat = pixelFormat;\n     }\n \n+\n     public ImageSaveOptionsData resolution(Double resolution) {\n-        this.resolution = resolution;\n-        return this;\n+    this.resolution = resolution;\n+    return this;\n     }\n \n     /**\n@@ -224,90 +256,110 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n      * The default value is 96.\n     * @return resolution\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets both horizontal and vertical resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n     public Double getResolution() {\n-        return resolution;\n+    return resolution;\n     }\n \n+\n     public void setResolution(Double resolution) {\n-        this.resolution = resolution;\n+    this.resolution = resolution;\n     }\n \n+\n     public ImageSaveOptionsData scale(Double scale) {\n-        this.scale = scale;\n-        return this;\n+    this.scale = scale;\n+    return this;\n     }\n \n     /**\n      * Gets or sets zoom factor of image.\n     * @return scale\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets zoom factor of image.\")\n     public Double getScale() {\n-        return scale;\n+    return scale;\n     }\n \n+\n     public void setScale(Double scale) {\n-        this.scale = scale;\n+    this.scale = scale;\n     }\n \n+\n     public ImageSaveOptionsData useAntiAliasing(Boolean useAntiAliasing) {\n-        this.useAntiAliasing = useAntiAliasing;\n-        return this;\n+    this.useAntiAliasing = useAntiAliasing;\n+    return this;\n     }\n \n     /**\n      * Gets or sets determine whether or not to use anti-aliasing for rendering.\n     * @return useAntiAliasing\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets determine whether or not to use anti-aliasing for rendering.\")\n     public Boolean getUseAntiAliasing() {\n-        return useAntiAliasing;\n+    return useAntiAliasing;\n     }\n \n+\n     public void setUseAntiAliasing(Boolean useAntiAliasing) {\n-        this.useAntiAliasing = useAntiAliasing;\n+    this.useAntiAliasing = useAntiAliasing;\n     }\n \n+\n     public ImageSaveOptionsData useGdiEmfRenderer(Boolean useGdiEmfRenderer) {\n-        this.useGdiEmfRenderer = useGdiEmfRenderer;\n-        return this;\n+    this.useGdiEmfRenderer = useGdiEmfRenderer;\n+    return this;\n     }\n \n     /**\n      * Gets or sets a value determining whether to use GDI+ or Aspose.Words metafile renderer when saving to EMF.\n     * @return useGdiEmfRenderer\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value determining whether to use GDI+ or Aspose.Words metafile renderer when saving to EMF.\")\n     public Boolean getUseGdiEmfRenderer() {\n-        return useGdiEmfRenderer;\n+    return useGdiEmfRenderer;\n     }\n \n+\n     public void setUseGdiEmfRenderer(Boolean useGdiEmfRenderer) {\n-        this.useGdiEmfRenderer = useGdiEmfRenderer;\n+    this.useGdiEmfRenderer = useGdiEmfRenderer;\n     }\n \n+\n     public ImageSaveOptionsData useHighQualityRendering(Boolean useHighQualityRendering) {\n-        this.useHighQualityRendering = useHighQualityRendering;\n-        return this;\n+    this.useHighQualityRendering = useHighQualityRendering;\n+    return this;\n     }\n \n     /**\n      * Gets or sets determine whether or not to use high quality (i.e. slow) rendering algorithms.\n     * @return useHighQualityRendering\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets determine whether or not to use high quality (i.e. slow) rendering algorithms.\")\n     public Boolean getUseHighQualityRendering() {\n-        return useHighQualityRendering;\n+    return useHighQualityRendering;\n     }\n \n+\n     public void setUseHighQualityRendering(Boolean useHighQualityRendering) {\n-        this.useHighQualityRendering = useHighQualityRendering;\n+    this.useHighQualityRendering = useHighQualityRendering;\n     }\n \n+\n     public ImageSaveOptionsData verticalResolution(Double verticalResolution) {\n-        this.verticalResolution = verticalResolution;\n-        return this;\n+    this.verticalResolution = verticalResolution;\n+    return this;\n     }\n \n     /**\n@@ -316,26 +368,32 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n      * The default value is 96.\n     * @return verticalResolution\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the vertical resolution for the generated images, in dots per inch. This property has effect only when saving to raster image formats. The default value is 96.\")\n     public Double getVerticalResolution() {\n-        return verticalResolution;\n+    return verticalResolution;\n     }\n \n+\n     public void setVerticalResolution(Double verticalResolution) {\n-        this.verticalResolution = verticalResolution;\n+    this.verticalResolution = verticalResolution;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n-    return\n-        Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n+\n+        ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData) o;\n+        return Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n         Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n         Objects.equals(this.imageBrightness, imageSaveOptionsData.imageBrightness) &&\n         Objects.equals(this.imageColorMode, imageSaveOptionsData.imageColorMode) &&\n@@ -347,17 +405,19 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n         Objects.equals(this.useAntiAliasing, imageSaveOptionsData.useAntiAliasing) &&\n         Objects.equals(this.useGdiEmfRenderer, imageSaveOptionsData.useGdiEmfRenderer) &&\n         Objects.equals(this.useHighQualityRendering, imageSaveOptionsData.useHighQualityRendering) &&\n-        Objects.equals(this.verticalResolution, imageSaveOptionsData.verticalResolution) &&\n-        super.equals(o);\n-  }\n+            Objects.equals(this.verticalResolution, imageSaveOptionsData.verticalResolution) &&\n+            super.equals(o);\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(graphicsQualityOptions, horizontalResolution, imageBrightness, imageColorMode, imageContrast, paperColor, pixelFormat, resolution, scale, useAntiAliasing, useGdiEmfRenderer, useHighQualityRendering, verticalResolution, super.hashCode());\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n+\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class ImageSaveOptionsData {\\n\");\n     sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n@@ -376,16 +436,18 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n     sb.append(\"    verticalResolution: \").append(toIndentedString(verticalResolution)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 132
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/83/ImageSaveOptionsData.java\nindex 3e40966550..8fc3f144de 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/83/ImageSaveOptionsData.java\n@@ -333,7 +333,7 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n+    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData) o;\n     return\n         Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n         Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/83/ImageSaveOptionsData.java\nindex 3e40966550..b3717a295c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/83/ImageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/83/ImageSaveOptionsData.java\n@@ -333,7 +333,8 @@ public class ImageSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData)o;\n+    ImageSaveOptionsData imageSaveOptionsData = (ImageSaveOptionsData\n+) o;\n     return\n         Objects.equals(this.graphicsQualityOptions, imageSaveOptionsData.graphicsQualityOptions) &&\n         Objects.equals(this.horizontalResolution, imageSaveOptionsData.horizontalResolution) &&\n",
            "diff_size": 2
        }
    ]
}