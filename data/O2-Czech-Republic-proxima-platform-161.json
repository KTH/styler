{
    "error_id": "161",
    "information": {
        "errors": [
            {
                "line": "170",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n      return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n    }\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "column": "64",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "66",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/161/InMemBulkStorage.java\nindex fa48f74a64..776d829651 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/161/InMemBulkStorage.java\n@@ -167,7 +167,10 @@ public class InMemBulkStorage implements DataAccessorFactory {\n \n     @Override\n     public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n-      return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n+      return Optional.of(new BatchObservable(entityDesc,uri, ()->context .getExecutorService()\n+    )\n+\n+      );\n     }\n   }\n \n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/161/InMemBulkStorage.java\nindex fa48f74a64..d703084530 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/161/InMemBulkStorage.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.storage;\n \n import com.google.common.base.Preconditions;\n@@ -167,11 +168,13 @@ public class InMemBulkStorage implements DataAccessorFactory {\n \n     @Override\n     public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n-      return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n+      return Optional\n+          .of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n     }\n   }\n \n-  @Getter private final NavigableMap<String, Pair<Long, byte[]>> data = new TreeMap<>();\n+  @Getter\n+  private final NavigableMap<String, Pair<Long, byte[]>> data = new TreeMap<>();\n \n   @Override\n   public Accept accepts(URI uri) {\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 18, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be one of the following: 24, 26, 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 32, expected level should be one of the following: 2, 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 34, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 2, expected level should be one of the following: 20, 22.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 18, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'try rcurly' has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'catch' child has incorrect indentation level 18, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 14, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/161/InMemBulkStorage.java\nindex fa48f74a64..d818ee0e91 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/161/InMemBulkStorage.java\n@@ -57,12 +57,11 @@ public class InMemBulkStorage implements DataAccessorFactory {\n \n     @Override\n     public void write(StreamElement data, long watermark, CommitCallback statusCallback) {\n-\n-      // store the data, commit after each 10 elements\n+  // store the data, commit after each 10 elements\n       InMemBulkStorage.this.data.put(\n           getUri().getPath() + \"/\" + data.getKey() + \"#\" + data.getAttribute(),\n           Pair.of(data.getStamp(), data.getValue()));\n-      if (++writtenSinceLastCommit >= 10) {\n+if (++writtenSinceLastCommit >= 10) {\n         statusCallback.commit(true, null);\n         writtenSinceLastCommit = 0;\n       }\n@@ -101,14 +100,12 @@ public class InMemBulkStorage implements DataAccessorFactory {\n         List<Partition> partitions,\n         List<AttributeDescriptor<?>> attributes,\n         BatchLogObserver observer) {\n-\n-      Preconditions.checkArgument(\n+  Preconditions.checkArgument(\n           partitions.size() == 1,\n           \"This observable works on single partition only, got \" + partitions);\n-      int prefix = getUri().getPath().length() + 1;\n+int prefix = getUri().getPath().length() + 1;\n       executor()\n-          .execute(\n-              () -> {\n+          .execute(() -> {\n                 try {\n                   InMemBulkStorage.this.data.forEach(\n                       (k, v) -> {\n@@ -118,11 +115,8 @@ public class InMemBulkStorage implements DataAccessorFactory {\n                         getEntityDescriptor()\n                             .findAttribute(attribute, true)\n                             .flatMap(\n-                                desc ->\n-                                    attributes.contains(desc)\n-                                        ? Optional.of(desc)\n-                                        : Optional.empty())\n-                            .ifPresent(\n+                                desc -> attributes.contains(desc) ? Optional.of(desc) : Optional.empty())\n+.ifPresent(\n                                 desc -> {\n                                   observer.onNext(\n                                       StreamElement.upsert(\n@@ -133,14 +127,14 @@ public class InMemBulkStorage implements DataAccessorFactory {\n                                           attribute,\n                                           v.getFirst(),\n                                           v.getSecond()));\n-                                });\n-                      });\n+  });\n+  });\n                   observer.onCompleted();\n                 } catch (Throwable err) {\n                   observer.onError(err);\n                 }\n               });\n-    }\n+  }\n \n     private Executor executor() {\n       if (executor == null) {\n@@ -184,4 +178,4 @@ public class InMemBulkStorage implements DataAccessorFactory {\n \n     return new InMemBulkAccessor(entity, uri);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 6, expected is 8, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 30, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 73, expected level should be 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 73, expected level should be 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 73, expected level should be 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 73, expected level should be 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 192, expected level should be 96.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 187, expected level should be 94.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 66, expected level should be 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'try rcurly' has incorrect indentation level 30, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'catch' child has incorrect indentation level 32, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 30, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 27, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/161/InMemBulkStorage.java\nindex fa48f74a64..c613bd060b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/161/InMemBulkStorage.java\n@@ -45,143 +45,125 @@ import java.util.concurrent.ExecutorService;\n import lombok.Getter;\n \n /** Storage acting as a bulk in memory storage. */\n+\n+\n public class InMemBulkStorage implements DataAccessorFactory {\n \n-  private class Writer extends AbstractBulkAttributeWriter {\n+    private class Writer extends AbstractBulkAttributeWriter {\n \n     int writtenSinceLastCommit = 0;\n \n     public Writer(EntityDescriptor entityDesc, URI uri) {\n-      super(entityDesc, uri);\n+        super(entityDesc, uri);\n     }\n \n     @Override\n     public void write(StreamElement data, long watermark, CommitCallback statusCallback) {\n \n       // store the data, commit after each 10 elements\n-      InMemBulkStorage.this.data.put(\n-          getUri().getPath() + \"/\" + data.getKey() + \"#\" + data.getAttribute(),\n-          Pair.of(data.getStamp(), data.getValue()));\n-      if (++writtenSinceLastCommit >= 10) {\n+        InMemBulkStorage.this.data.put(getUri().getPath()\n+        + \"/\"\n+        + data.getKey()\n+        + \"#\"\n+        + data.getAttribute(), Pair.of(data.getStamp(), data.getValue()));\n+        if (++writtenSinceLastCommit >= 10) {\n         statusCallback.commit(true, null);\n         writtenSinceLastCommit = 0;\n-      }\n+        }\n     }\n \n     @Override\n     public void rollback() {\n       // nop\n+\n     }\n \n     @Override\n     public void close() {\n       // nop\n+\n+    }\n     }\n-  }\n \n-  private class BatchObservable extends AbstractStorage implements BatchLogObservable {\n+    private class BatchObservable extends AbstractStorage\n+        implements BatchLogObservable {\n \n     private final Factory<ExecutorService> executorFactory;\n     private transient ExecutorService executor;\n \n-    private BatchObservable(\n-        EntityDescriptor entityDesc, URI uri, Factory<ExecutorService> executorFactory) {\n-\n-      super(entityDesc, uri);\n-      this.executorFactory = executorFactory;\n+    private BatchObservable(EntityDescriptor entityDesc, URI uri, Factory<ExecutorService> executorFactory) {\n+        super(entityDesc, uri);\n+        this.executorFactory = executorFactory;\n     }\n \n     @Override\n     public List<Partition> getPartitions(long startStamp, long endStamp) {\n-      return Arrays.asList(() -> 0);\n+        return Arrays.asList(() -> 0);\n     }\n \n     @Override\n     public void observe(\n         List<Partition> partitions,\n-        List<AttributeDescriptor<?>> attributes,\n-        BatchLogObserver observer) {\n-\n-      Preconditions.checkArgument(\n-          partitions.size() == 1,\n-          \"This observable works on single partition only, got \" + partitions);\n-      int prefix = getUri().getPath().length() + 1;\n-      executor()\n-          .execute(\n-              () -> {\n-                try {\n-                  InMemBulkStorage.this.data.forEach(\n-                      (k, v) -> {\n-                        String[] parts = k.substring(prefix).split(\"#\");\n-                        String key = parts[0];\n-                        String attribute = parts[1];\n-                        getEntityDescriptor()\n-                            .findAttribute(attribute, true)\n-                            .flatMap(\n-                                desc ->\n-                                    attributes.contains(desc)\n-                                        ? Optional.of(desc)\n-                                        : Optional.empty())\n-                            .ifPresent(\n-                                desc -> {\n-                                  observer.onNext(\n-                                      StreamElement.upsert(\n-                                          getEntityDescriptor(),\n-                                          desc,\n-                                          UUID.randomUUID().toString(),\n-                                          key,\n-                                          attribute,\n-                                          v.getFirst(),\n-                                          v.getSecond()));\n-                                });\n-                      });\n-                  observer.onCompleted();\n-                } catch (Throwable err) {\n-                  observer.onError(err);\n-                }\n-              });\n+        List<AttributeDescriptor<?>> attributes, BatchLogObserver observer) {\n+        Preconditions.checkArgument(partitions.size() == 1, \"This observable works on single partition only, got \" + partitions);\n+        int prefix = getUri().getPath()\n+                             .length() + 1;\n+        executor().execute(() -> {\n+                              try {\n+                               InMemBulkStorage.this.data.forEach((k, v) -> {\n+                                                                         String[] parts = k.substring(prefix).split(\"#\");\n+                                                                         String key = parts[0];\n+                                                                         String attribute = parts[1];\n+                                                                         getEntityDescriptor().findAttribute(attribute, true)\n+                                                                                              .flatMap(desc -> attributes.contains(desc) ? Optional.of(desc) : Optional.empty()).ifPresent(desc -> {\n+                                                                                                                                                                                                observer.onNext(StreamElement.upsert(getEntityDescriptor(), desc, UUID.randomUUID().toString(), key, attribute, v.getFirst(), v.getSecond()));\n+                                                                                                                                                                                           });\n+                                                                  });\n+                               observer.onCompleted();\n+                              } catch (Throwable err) {\n+                                observer.onError(err);\n+                              }\n+                           });\n     }\n \n     private Executor executor() {\n-      if (executor == null) {\n+        if (executor == null) {\n         executor = executorFactory.apply();\n-      }\n-      return executor;\n+        }\n+        return executor;\n+    }\n     }\n-  }\n \n-  private class InMemBulkAccessor implements DataAccessor {\n+    private class InMemBulkAccessor implements DataAccessor {\n \n     private final EntityDescriptor entityDesc;\n     private final URI uri;\n \n     InMemBulkAccessor(EntityDescriptor entityDesc, URI uri) {\n-      this.entityDesc = entityDesc;\n-      this.uri = uri;\n+        this.entityDesc = entityDesc;\n+        this.uri = uri;\n     }\n \n     @Override\n     public Optional<AttributeWriterBase> getWriter(Context context) {\n-      return Optional.of(new Writer(entityDesc, uri));\n+        return Optional.of(new Writer(entityDesc, uri));\n     }\n \n     @Override\n     public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n-      return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n+        return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n+    }\n     }\n-  }\n \n-  @Getter private final NavigableMap<String, Pair<Long, byte[]>> data = new TreeMap<>();\n+    @Getter private final NavigableMap<String, Pair<Long, byte[]>> data = new TreeMap<>();\n \n-  @Override\n-  public Accept accepts(URI uri) {\n+    @Override\n+    public Accept accepts(URI uri) {\n     return uri.getScheme().equals(\"inmem-bulk\") ? Accept.ACCEPT : Accept.REJECT;\n-  }\n-\n-  @Override\n-  public DataAccessor createAccessor(\n-      DirectDataOperator op, EntityDescriptor entity, URI uri, Map<String, Object> cfg) {\n+    }\n \n+    @Override\n+    public DataAccessor createAccessor(DirectDataOperator op, EntityDescriptor entity, URI uri, Map<String, Object> cfg) {\n     return new InMemBulkAccessor(entity, uri);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 88
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "column": "64",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "66",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/161/InMemBulkStorage.java\nindex fa48f74a64..776d829651 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/161/InMemBulkStorage.java\n@@ -167,7 +167,10 @@ public class InMemBulkStorage implements DataAccessorFactory {\n \n     @Override\n     public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n-      return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n+      return Optional.of(new BatchObservable(entityDesc,uri, ()->context .getExecutorService()\n+    )\n+\n+      );\n     }\n   }\n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "column": "65",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "column": "67",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/161/InMemBulkStorage.java\nindex fa48f74a64..20de77ae87 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/161/InMemBulkStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/161/InMemBulkStorage.java\n@@ -167,7 +167,11 @@ public class InMemBulkStorage implements DataAccessorFactory {\n \n     @Override\n     public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n-      return Optional.of(new BatchObservable(entityDesc, uri, () -> context.getExecutorService()));\n+      return Optional.of(new BatchObservable(entityDesc, uri, ()->context.getExecutorService(\n+    )\n+    )\n+\n+      );\n     }\n   }\n \n",
            "diff_size": 5
        }
    ]
}