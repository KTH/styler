{
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n        HPerson authenticatedUser = authenticatedAccount.getPerson();\n        if(isCoordinator) {\n            isReviewer = true;\n            isTranslator = true;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/30/LanguageTeamServiceImpl.java\nindex f6f67717fb..aa4dfa9a8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/30/LanguageTeamServiceImpl.java\n@@ -64,7 +64,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/30/LanguageTeamServiceImpl.java\nindex f6f67717fb..fcf22ed091 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/30/LanguageTeamServiceImpl.java\n@@ -45,7 +45,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     @SuppressFBWarnings(value = \"SE_BAD_FIELD\")\n     @Inject\n     private Event<LanguageTeamPermissionChangedEvent>\n-            languageTeamPermissionChangedEvent;\n+        languageTeamPermissionChangedEvent;\n \n \n     public List<HLocale> getLanguageMemberships(String userName) {\n@@ -53,55 +53,55 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     }\n \n     public void joinOrUpdateRoleInLanguageTeam(String locale, Long personId,\n-            boolean isTranslator, boolean isReviewer, boolean isCoordinator)\n-            throws ZanataServiceException {\n+                                               boolean isTranslator, boolean isReviewer, boolean isCoordinator)\n+        throws ZanataServiceException {\n         LocaleId localeId = new LocaleId(locale);\n         HPerson currentPerson = personDAO.findById(personId, false);\n \n         boolean alreadyJoined =\n-                localeMemberDAO.isLocaleMember(personId, localeId);\n+            localeMemberDAO.isLocaleMember(personId, localeId);\n         HLocaleMember localeMember;\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n         if (!alreadyJoined) {\n             if (currentPerson.getLanguageMemberships().size() >= MAX_NUMBER_MEMBERSHIP) {\n                 throw new ZanataServiceException(\n-                        \"You can only be a member of up to \"\n-                                + MAX_NUMBER_MEMBERSHIP\n-                                + \" languages at one time.\");\n+                    \"You can only be a member of up to \"\n+                        + MAX_NUMBER_MEMBERSHIP\n+                        + \" languages at one time.\");\n             }\n             HLocale lang = localeDAO.findByLocaleId(localeId);\n             if (lang != null) {\n                 localeMember =\n-                        new HLocaleMember(currentPerson, lang, isTranslator,\n-                                isReviewer, isCoordinator);\n+                    new HLocaleMember(currentPerson, lang, isTranslator,\n+                        isReviewer, isCoordinator);\n \n                 Set<HLocaleMember> members = lang.getMembers();\n                 if (members != null) {\n                     members.add(localeMember);\n                 }\n                 permissionChangedEvent =\n-                        new LanguageTeamPermissionChangedEvent(currentPerson,\n-                                localeId, authenticatedUser)\n-                                .joiningTheTeam(isTranslator, isReviewer,\n-                                        isCoordinator);\n+                    new LanguageTeamPermissionChangedEvent(currentPerson,\n+                        localeId, authenticatedUser)\n+                        .joiningTheTeam(isTranslator, isReviewer,\n+                            isCoordinator);\n                 localeMemberDAO.makePersistent(localeMember);\n                 localeMemberDAO.flush();\n                 languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n             }\n         } else {\n             localeMember =\n-                    localeMemberDAO.findByPersonAndLocale(personId, localeId);\n+                localeMemberDAO.findByPersonAndLocale(personId, localeId);\n             permissionChangedEvent =\n-                    new LanguageTeamPermissionChangedEvent(currentPerson,\n-                            localeId, authenticatedUser)\n-                            .updatingPermissions(localeMember,\n-                            isTranslator, isReviewer, isCoordinator);\n+                new LanguageTeamPermissionChangedEvent(currentPerson,\n+                    localeId, authenticatedUser)\n+                    .updatingPermissions(localeMember,\n+                        isTranslator, isReviewer, isCoordinator);\n             localeMember.setTranslator(isTranslator);\n             localeMember.setReviewer(isReviewer);\n             localeMember.setCoordinator(isCoordinator);\n@@ -116,8 +116,8 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         HLocale lang = localeDAO.findByLocaleId(new LocaleId(locale));\n         HPerson currentPerson = personDAO.findById(personId, false);\n         final HLocaleMember membership =\n-                localeMemberDAO.findById(new HLocaleMemberPk(currentPerson,\n-                        lang), true);\n+            localeMemberDAO.findById(new HLocaleMemberPk(currentPerson,\n+                lang), true);\n \n         if (membership != null) {\n             localeMemberDAO.makeTransient(membership);\n@@ -128,11 +128,11 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n             localeMemberDAO.flush();\n             HPerson doneByPerson = authenticatedAccount.getPerson();\n             languageTeamPermissionChangedEvent.fire(\n-                    new LanguageTeamPermissionChangedEvent(\n-                            currentPerson, lang.getLocaleId(),\n-                            doneByPerson)\n-                            .updatingPermissions(membership, false,\n-                                    false, false));\n+                new LanguageTeamPermissionChangedEvent(\n+                    currentPerson, lang.getLocaleId(),\n+                    doneByPerson)\n+                    .updatingPermissions(membership, false,\n+                        false, false));\n             return true;\n         }\n \n@@ -142,6 +142,6 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     @Override\n     public boolean isUserReviewer(Long personId) {\n         return !localeMemberDAO.findByPersonWithReviewerRole(personId)\n-                .isEmpty();\n+            .isEmpty();\n     }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/30/LanguageTeamServiceImpl.java\nindex f6f67717fb..b6882d6cce 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/30/LanguageTeamServiceImpl.java\n@@ -2,11 +2,9 @@ package org.zanata.service.impl;\n \n import java.util.List;\n import java.util.Set;\n-\n import javax.enterprise.context.RequestScoped;\n import javax.inject.Inject;\n import javax.inject.Named;\n-\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.deltaspike.jpa.api.transaction.Transactional;\n import org.zanata.common.LocaleId;\n@@ -24,11 +22,13 @@ import org.zanata.security.annotations.Authenticated;\n import org.zanata.service.LanguageTeamService;\n import javax.enterprise.event.Event;\n \n+\n @Named(\"languageTeamServiceImpl\")\n @RequestScoped\n @Transactional\n public class LanguageTeamServiceImpl implements LanguageTeamService {\n     private static final long serialVersionUID = -1049037380252117557L;\n+\n     @Inject\n     private PersonDAO personDAO;\n \n@@ -44,68 +44,51 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n \n     @SuppressFBWarnings(value = \"SE_BAD_FIELD\")\n     @Inject\n-    private Event<LanguageTeamPermissionChangedEvent>\n-            languageTeamPermissionChangedEvent;\n-\n+    private Event<LanguageTeamPermissionChangedEvent> languageTeamPermissionChangedEvent;\n \n     public List<HLocale> getLanguageMemberships(String userName) {\n         return personDAO.getLanguageMembershipByUsername(userName);\n     }\n \n-    public void joinOrUpdateRoleInLanguageTeam(String locale, Long personId,\n-            boolean isTranslator, boolean isReviewer, boolean isCoordinator)\n-            throws ZanataServiceException {\n+    public void joinOrUpdateRoleInLanguageTeam(String locale,\n+           Long personId, boolean isTranslator, boolean isReviewer,\n+               boolean isCoordinator) throws ZanataServiceException {\n         LocaleId localeId = new LocaleId(locale);\n         HPerson currentPerson = personDAO.findById(personId, false);\n-\n-        boolean alreadyJoined =\n-                localeMemberDAO.isLocaleMember(personId, localeId);\n+        boolean alreadyJoined = localeMemberDAO.isLocaleMember(personId, localeId);\n         HLocaleMember localeMember;\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n-\n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n         if (!alreadyJoined) {\n             if (currentPerson.getLanguageMemberships().size() >= MAX_NUMBER_MEMBERSHIP) {\n-                throw new ZanataServiceException(\n-                        \"You can only be a member of up to \"\n-                                + MAX_NUMBER_MEMBERSHIP\n-                                + \" languages at one time.\");\n+                throw new ZanataServiceException(\"You can only be a member of up to \" + MAX_NUMBER_MEMBERSHIP + \" languages at one time.\");\n             }\n             HLocale lang = localeDAO.findByLocaleId(localeId);\n             if (lang != null) {\n-                localeMember =\n-                        new HLocaleMember(currentPerson, lang, isTranslator,\n-                                isReviewer, isCoordinator);\n-\n+                localeMember = new HLocaleMember(currentPerson,\n+                                       lang,\n+                                       isTranslator,\n+                                       isReviewer,\n+                                       isCoordinator);\n                 Set<HLocaleMember> members = lang.getMembers();\n                 if (members != null) {\n                     members.add(localeMember);\n                 }\n-                permissionChangedEvent =\n-                        new LanguageTeamPermissionChangedEvent(currentPerson,\n-                                localeId, authenticatedUser)\n-                                .joiningTheTeam(isTranslator, isReviewer,\n-                                        isCoordinator);\n+                permissionChangedEvent = new LanguageTeamPermissionChangedEvent(currentPerson, localeId, authenticatedUser).joiningTheTeam(isTranslator, isReviewer, isCoordinator);\n                 localeMemberDAO.makePersistent(localeMember);\n                 localeMemberDAO.flush();\n                 languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n             }\n         } else {\n-            localeMember =\n-                    localeMemberDAO.findByPersonAndLocale(personId, localeId);\n-            permissionChangedEvent =\n-                    new LanguageTeamPermissionChangedEvent(currentPerson,\n-                            localeId, authenticatedUser)\n-                            .updatingPermissions(localeMember,\n-                            isTranslator, isReviewer, isCoordinator);\n+            localeMember = localeMemberDAO.findByPersonAndLocale(personId, localeId);\n+            permissionChangedEvent = new LanguageTeamPermissionChangedEvent(currentPerson, localeId, authenticatedUser).updatingPermissions(localeMember, isTranslator, isReviewer, isCoordinator);\n             localeMember.setTranslator(isTranslator);\n             localeMember.setReviewer(isReviewer);\n             localeMember.setCoordinator(isCoordinator);\n-\n             localeMemberDAO.makePersistent(localeMember);\n             localeMemberDAO.flush();\n             languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n@@ -115,10 +98,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     public boolean leaveLanguageTeam(String locale, Long personId) {\n         HLocale lang = localeDAO.findByLocaleId(new LocaleId(locale));\n         HPerson currentPerson = personDAO.findById(personId, false);\n-        final HLocaleMember membership =\n-                localeMemberDAO.findById(new HLocaleMemberPk(currentPerson,\n-                        lang), true);\n-\n+        final HLocaleMember membership = localeMemberDAO.findById(new HLocaleMemberPk(currentPerson, lang), true);\n         if (membership != null) {\n             localeMemberDAO.makeTransient(membership);\n             Set<HLocaleMember> members = lang.getMembers();\n@@ -127,21 +107,14 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n             }\n             localeMemberDAO.flush();\n             HPerson doneByPerson = authenticatedAccount.getPerson();\n-            languageTeamPermissionChangedEvent.fire(\n-                    new LanguageTeamPermissionChangedEvent(\n-                            currentPerson, lang.getLocaleId(),\n-                            doneByPerson)\n-                            .updatingPermissions(membership, false,\n-                                    false, false));\n+            languageTeamPermissionChangedEvent.fire(new LanguageTeamPermissionChangedEvent(currentPerson, lang.getLocaleId(), doneByPerson).updatingPermissions(membership, false, false, false));\n             return true;\n         }\n-\n         return false;\n     }\n \n     @Override\n     public boolean isUserReviewer(Long personId) {\n-        return !localeMemberDAO.findByPersonWithReviewerRole(personId)\n-                .isEmpty();\n+        return !localeMemberDAO.findByPersonWithReviewerRole(personId).isEmpty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/30/LanguageTeamServiceImpl.java\nindex f6f67717fb..aa4dfa9a8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/30/LanguageTeamServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/30/LanguageTeamServiceImpl.java\n@@ -64,7 +64,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}