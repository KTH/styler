{
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "70",
                "severity": "error",
                "message": "'}' at column 70 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/85/ValidSemanticVersionValidator.java\nindex a12270da38..f8adb58bb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/85/ValidSemanticVersionValidator.java\n@@ -19,9 +19,9 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n+public class ValidSemanticVersionValidator implements\n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n@@ -40,7 +40,7 @@ public class ValidSemanticVersionValidator implements\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(DataAcquisitionProject project, \n+  public boolean isValid(DataAcquisitionProject project,\n       ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n       return true;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/85/ValidSemanticVersionValidator.java\nindex a12270da38..a4ea65f582 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/85/ValidSemanticVersionValidator.java\n@@ -16,32 +16,33 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n /**\n  * Ensure that a {@link Release} contains a valid semantic version\n  * which can only be increased.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n+public class ValidSemanticVersionValidator implements\n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n+  public void initialize(ValidSemanticVersion constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(DataAcquisitionProject project, \n-      ConstraintValidatorContext context) {\n+  public boolean isValid(DataAcquisitionProject project,\n+                         ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n       return true;\n     }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/85/ValidSemanticVersionValidator.java\nindex a12270da38..566b271750 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/85/ValidSemanticVersionValidator.java\n@@ -21,7 +21,7 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  */\n public class ValidSemanticVersionValidator implements \n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n@@ -67,4 +67,4 @@ public class ValidSemanticVersionValidator implements\n       return false;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 37, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/85/ValidSemanticVersionValidator.java\nindex a12270da38..345393f3f9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/85/ValidSemanticVersionValidator.java\n@@ -2,13 +2,10 @@ package eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.util.StringUtils;\n-\n import com.github.zafarkhaja.semver.ParseException;\n import com.github.zafarkhaja.semver.Version;\n-\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.DataAcquisitionProject;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.domain.Release;\n import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionProjectVersionsService;\n@@ -19,19 +16,23 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n-    ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n-  @Autowired\n-  private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n+\n+\n+public class ValidSemanticVersionValidator implements ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n+\n+    @Autowired\n+    private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidSemanticVersion constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -39,32 +40,34 @@ public class ValidSemanticVersionValidator implements\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(DataAcquisitionProject project, \n-      ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(DataAcquisitionProject project,\n+        ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n-      return true;\n+        return true;\n     }\n     String version = project.getRelease().getVersion();\n     if (StringUtils.isEmpty(version)) {\n-      return true;\n+        return true;\n     }\n     try {\n-      Version currentVersion = Version.valueOf(version);\n-      Version lastVersion = null;\n-      Release lastRelease = dataAcquisitionProjectVersionsService.findLastRelease(project.getId());\n-      if (lastRelease != null) {\n+        Version currentVersion = Version.valueOf(version);\n+        Version lastVersion = null;\n+        Release lastRelease = dataAcquisitionProjectVersionsService.findLastRelease(project.getId());\n+        if (lastRelease != null) {\n         lastVersion = Version.valueOf(lastRelease.getVersion());\n         if (currentVersion.greaterThanOrEqualTo(lastVersion)) {\n-          return true;\n+                                     return true;\n         } else {\n           return false;\n         }\n-      } else {\n-        return true;\n-      }\n+        } else {\n+          return true;\n+        }\n     } catch (ParseException ex) {\n       return false;\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "70",
                    "severity": "error",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/85/ValidSemanticVersionValidator.java\nindex a12270da38..f8adb58bb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/85/ValidSemanticVersionValidator.java\n@@ -19,9 +19,9 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n+public class ValidSemanticVersionValidator implements\n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n@@ -40,7 +40,7 @@ public class ValidSemanticVersionValidator implements\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(DataAcquisitionProject project, \n+  public boolean isValid(DataAcquisitionProject project,\n       ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n       return true;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "column": "71",
                    "severity": "error",
                    "message": "'}' at column 71 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/85/ValidSemanticVersionValidator.java\nindex a12270da38..0681c27f47 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/85/ValidSemanticVersionValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/85/ValidSemanticVersionValidator.java\n@@ -19,9 +19,9 @@ import eu.dzhw.fdz.metadatamanagement.projectmanagement.service.DataAcquisitionP\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class ValidSemanticVersionValidator implements \n+public class ValidSemanticVersionValidator implements\n     ConstraintValidator<ValidSemanticVersion, DataAcquisitionProject> {\n-  \n+\n   @Autowired\n   private DataAcquisitionProjectVersionsService dataAcquisitionProjectVersionsService;\n \n@@ -31,16 +31,14 @@ public class ValidSemanticVersionValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidSemanticVersion constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidSemanticVersion constraintAnnotation) { }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(DataAcquisitionProject project, \n+  public boolean isValid(DataAcquisitionProject project,\n       ConstraintValidatorContext context) {\n     if (project.getRelease() == null) {\n       return true;\n",
            "diff_size": 6
        }
    ]
}