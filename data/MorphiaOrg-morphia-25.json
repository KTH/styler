{
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "79",
                "severity": "error",
                "message": "'method def' child has incorrect indentation level 7, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "     */\n    public int getTime() {\n       return (int) (value >> 32);\n    }\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/25/BsonTimestamp.java\nindex 3909fbcb33..efb2a14a23 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/25/BsonTimestamp.java\n@@ -76,9 +76,10 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n      * @return an int representing time in seconds since epoch\n      */\n     public int getTime() {\n-       return (int) (value >> 32);\n-    }\n+        return (int)( value> >32)\n+;\n \n+    }\n     /**\n      * Gets the increment value.\n      *\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/25/BsonTimestamp.java\nindex 3909fbcb33..a511f00edc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/25/BsonTimestamp.java\n@@ -47,8 +47,8 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n     /**\n      * Construct a new instance for the given time and increment.\n      *\n-     * @param seconds the number of seconds since the epoch\n-     * @param increment  the increment.\n+     * @param seconds   the number of seconds since the epoch\n+     * @param increment the increment.\n      */\n     public BsonTimestamp(final int seconds, final int increment) {\n         value = ((long) seconds << 32) | (increment & 0xFFFFFFFFL);\n@@ -76,7 +76,7 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n      * @return an int representing time in seconds since epoch\n      */\n     public int getTime() {\n-       return (int) (value >> 32);\n+        return (int) (value >> 32);\n     }\n \n     /**\n@@ -91,10 +91,10 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n     @Override\n     public String toString() {\n         return \"Timestamp{\"\n-               + \"value=\" + getValue()\n-               + \", seconds=\" + getTime()\n-               + \", inc=\" + getInc()\n-               + '}';\n+            + \"value=\" + getValue()\n+            + \", seconds=\" + getTime()\n+            + \", inc=\" + getInc()\n+            + '}';\n     }\n \n     @Override\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "'>>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/25/BsonTimestamp.java\nindex 3909fbcb33..2727f0dc07 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/25/BsonTimestamp.java\n@@ -76,7 +76,7 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n      * @return an int representing time in seconds since epoch\n      */\n     public int getTime() {\n-       return (int) (value >> 32);\n+    return (int) (value>> 32);\n     }\n \n     /**\n@@ -124,4 +124,4 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n     public int hashCode() {\n         return (int) (value ^ (value >>> 32));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/25/BsonTimestamp.java\nindex 3909fbcb33..efb2a14a23 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/25/BsonTimestamp.java\n@@ -76,9 +76,10 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n      * @return an int representing time in seconds since epoch\n      */\n     public int getTime() {\n-       return (int) (value >> 32);\n-    }\n+        return (int)( value> >32)\n+;\n \n+    }\n     /**\n      * Gets the increment value.\n      *\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/25/BsonTimestamp.java\nindex 3909fbcb33..519ded7347 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/25/BsonTimestamp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/25/BsonTimestamp.java\n@@ -75,53 +75,54 @@ public final class BsonTimestamp extends BsonValue implements Comparable<BsonTim\n      *\n      * @return an int representing time in seconds since epoch\n      */\n-    public int getTime() {\n-       return (int) (value >> 32);\n-    }\n+    public int getTime() { return(int)(value\n \n-    /**\n+    > >32);\n+  }\n+\n+  /**\n      * Gets the increment value.\n      *\n      * @return an incrementing ordinal for operations within a given second\n      */\n-    public int getInc() {\n-        return (int) value;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"Timestamp{\"\n-               + \"value=\" + getValue()\n-               + \", seconds=\" + getTime()\n-               + \", inc=\" + getInc()\n-               + '}';\n-    }\n-\n-    @Override\n-    public int compareTo(final BsonTimestamp ts) {\n-        return UnsignedLongs.compare(value, ts.value);\n-    }\n-\n-    @Override\n-    public boolean equals(final Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-\n-        BsonTimestamp timestamp = (BsonTimestamp) o;\n-\n-        if (value != timestamp.value) {\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return (int) (value ^ (value >>> 32));\n-    }\n+  public int getInc() {\n+      return (int) value;\n+  }\n+\n+  @Override\n+  public String toString() {\n+      return \"Timestamp{\"\n+             + \"value=\" + getValue()\n+             + \", seconds=\" + getTime()\n+             + \", inc=\" + getInc()\n+             + '}';\n+  }\n+\n+  @Override\n+  public int compareTo(final BsonTimestamp ts) {\n+      return UnsignedLongs.compare(value, ts.value);\n+  }\n+\n+  @Override\n+  public boolean equals(final Object o) {\n+      if (this == o) {\n+          return true;\n+      }\n+      if (o == null || getClass() != o.getClass()) {\n+          return false;\n+      }\n+\n+      BsonTimestamp timestamp = (BsonTimestamp) o;\n+\n+      if (value != timestamp.value) {\n+          return false;\n+      }\n+\n+      return true;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+      return (int) (value ^ (value >>> 32));\n+  }\n }\n",
            "diff_size": 47
        }
    ]
}