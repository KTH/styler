{
    "error_id": "185",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 143).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import io.swagger.models.parameters.AbstractSerializableParameter;\n\npublic abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n    ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n  @Override\n  public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/185/AbstractSerializableParameterProcessor.java\nindex b9781b8772..e24349ac94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/185/AbstractSerializableParameterProcessor.java\n@@ -25,9 +25,7 @@ import org.apache.servicecomb.swagger.generator.ParameterProcessor;\n \n import io.swagger.models.Operation;\n import io.swagger.models.Swagger;\n-import io.swagger.models.parameters.AbstractSerializableParameter;\n-\n-public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n+import io.swagger.models.parameters.AbstractSerializableParameter; public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n     ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n   @Override\n   public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/185/AbstractSerializableParameterProcessor.java\nindex b9781b8772..bdfc8443c9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/185/AbstractSerializableParameterProcessor.java\n@@ -27,11 +27,12 @@ import io.swagger.models.Operation;\n import io.swagger.models.Swagger;\n import io.swagger.models.parameters.AbstractSerializableParameter;\n \n-public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n+public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION>\n+    implements\n     ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n   @Override\n   public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,\n-      ANNOTATION annotation) {\n+                            ANNOTATION annotation) {\n     SwaggerUtils.setParameterType(swagger, type, parameter);\n \n     String defaultValue = readDefaultValue(annotation);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/185/AbstractSerializableParameterProcessor.java\nindex b9781b8772..335c85d28c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/185/AbstractSerializableParameterProcessor.java\n@@ -27,8 +27,7 @@ import io.swagger.models.Operation;\n import io.swagger.models.Swagger;\n import io.swagger.models.parameters.AbstractSerializableParameter;\n \n-public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n-    ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n+public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n   @Override\n   public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,\n       ANNOTATION annotation) {\n@@ -43,4 +42,4 @@ public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER e\n   protected String readDefaultValue(ANNOTATION annotation) {\n     return \"\";\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/185/AbstractSerializableParameterProcessor.java\nindex b9781b8772..e24349ac94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/185/AbstractSerializableParameterProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/185/AbstractSerializableParameterProcessor.java\n@@ -25,9 +25,7 @@ import org.apache.servicecomb.swagger.generator.ParameterProcessor;\n \n import io.swagger.models.Operation;\n import io.swagger.models.Swagger;\n-import io.swagger.models.parameters.AbstractSerializableParameter;\n-\n-public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n+import io.swagger.models.parameters.AbstractSerializableParameter; public abstract class AbstractSerializableParameterProcessor<SWAGGER_PARAMETER extends AbstractSerializableParameter<?>, ANNOTATION> implements\n     ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> {\n   @Override\n   public void fillParameter(Swagger swagger, Operation operation, SWAGGER_PARAMETER parameter, Type type,\n",
            "diff_size": 3
        }
    ]
}