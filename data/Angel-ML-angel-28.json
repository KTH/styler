{
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/28/W2VPullParatitionParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/28/W2VPullParatitionParam.java\nindex e441ba81bc..49feefa07a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/28/W2VPullParatitionParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/28/W2VPullParatitionParam.java\n@@ -23,52 +23,53 @@ import io.netty.buffer.ByteBuf;\n \n public class W2VPullParatitionParam extends PartitionGetParam {\n \n-  int[] indices;\n-  int numNodePerRow;\n-  int dimension;\n-  int start;\n-  int length;\n+    int[] indices;\n+    int numNodePerRow;\n+    int dimension;\n+    int start;\n+    int length;\n \n-  public W2VPullParatitionParam(int matrixId,\n-                                PartitionKey partKey,\n-                                int[] indices,\n-                                int numNodePerRow,\n-                                int start,\n-                                int length,\n-                                int dimension) {\n-    super(matrixId, partKey);\n-    this.indices = indices;\n-    this.numNodePerRow = numNodePerRow;\n-    this.start = start;\n-    this.dimension = dimension;\n-    this.length = length;\n-  }\n+    public W2VPullParatitionParam(int matrixId,\n+                                  PartitionKey partKey,\n+                                  int[] indices,\n+                                  int numNodePerRow,\n+                                  int start,\n+                                  int length,\n+                                  int dimension) {\n+        super(matrixId, partKey);\n+        this.indices = indices;\n+        this.numNodePerRow = numNodePerRow;\n+        this.start = start;\n+        this.dimension = dimension;\n+        this.length = length;\n+    }\n \n-  public W2VPullParatitionParam() { }\n+    public W2VPullParatitionParam() {\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    numNodePerRow = buf.readInt();\n-    start = buf.readInt();\n-    dimension = buf.readInt();\n-    length = buf.readInt();\n-    indices = new int[length];\n-    for (int i = 0; i < length; i ++) indices[i] = buf.readInt();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        numNodePerRow = buf.readInt();\n+        start = buf.readInt();\n+        dimension = buf.readInt();\n+        length = buf.readInt();\n+        indices = new int[length];\n+        for (int i = 0; i < length; i++) indices[i] = buf.readInt();\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeInt(numNodePerRow);\n-    buf.writeInt(start);\n-    buf.writeInt(dimension);\n-    buf.writeInt(length);\n-    for (int i = 0; i < length; i ++) buf.writeInt(indices[i + start]);\n-  }\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeInt(numNodePerRow);\n+        buf.writeInt(start);\n+        buf.writeInt(dimension);\n+        buf.writeInt(length);\n+        for (int i = 0; i < length; i++) buf.writeInt(indices[i + start]);\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    return super.bufferLen() + 4 + 4 * indices.length;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return super.bufferLen() + 4 + 4 * indices.length;\n+    }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/28/W2VPullParatitionParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/28/W2VPullParatitionParam.java\nindex e441ba81bc..5329ed8daa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/28/W2VPullParatitionParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/28/W2VPullParatitionParam.java\n@@ -29,14 +29,13 @@ public class W2VPullParatitionParam extends PartitionGetParam {\n   int start;\n   int length;\n \n-  public W2VPullParatitionParam(int matrixId,\n-                                PartitionKey partKey,\n+  public W2VPullParatitionParam(int matrixId, PartitionKey partKey,\n                                 int[] indices,\n                                 int numNodePerRow,\n                                 int start,\n                                 int length,\n                                 int dimension) {\n-    super(matrixId, partKey);\n+  super(matrixId, partKey);\n     this.indices = indices;\n     this.numNodePerRow = numNodePerRow;\n     this.start = start;\n@@ -44,7 +43,7 @@ public class W2VPullParatitionParam extends PartitionGetParam {\n     this.length = length;\n   }\n \n-  public W2VPullParatitionParam() { }\n+  public W2VPullParatitionParam() {}\n \n   @Override\n   public void deserialize(ByteBuf buf) {\n@@ -71,4 +70,4 @@ public class W2VPullParatitionParam extends PartitionGetParam {\n   public int bufferLen() {\n     return super.bufferLen() + 4 + 4 * indices.length;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/28/W2VPullParatitionParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/28/W2VPullParatitionParam.java\nindex e441ba81bc..01b3e97767 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/28/W2VPullParatitionParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/28/W2VPullParatitionParam.java\n@@ -23,52 +23,57 @@ import io.netty.buffer.ByteBuf;\n \n public class W2VPullParatitionParam extends PartitionGetParam {\n \n-  int[] indices;\n-  int numNodePerRow;\n-  int dimension;\n-  int start;\n-  int length;\n+    int[] indices;\n \n-  public W2VPullParatitionParam(int matrixId,\n-                                PartitionKey partKey,\n-                                int[] indices,\n-                                int numNodePerRow,\n-                                int start,\n-                                int length,\n-                                int dimension) {\n+    int numNodePerRow;\n+\n+    int dimension;\n+\n+    int start;\n+\n+    int length;\n+\n+    public W2VPullParatitionParam(int matrixId,\n+                                  PartitionKey partKey,\n+                                  int[] indices,\n+                                  int numNodePerRow,\n+                                  int start,\n+                                  int length, int dimension) {\n     super(matrixId, partKey);\n     this.indices = indices;\n     this.numNodePerRow = numNodePerRow;\n     this.start = start;\n     this.dimension = dimension;\n     this.length = length;\n-  }\n+    }\n \n-  public W2VPullParatitionParam() { }\n+    public W2VPullParatitionParam() {}\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     numNodePerRow = buf.readInt();\n     start = buf.readInt();\n     dimension = buf.readInt();\n     length = buf.readInt();\n     indices = new int[length];\n-    for (int i = 0; i < length; i ++) indices[i] = buf.readInt();\n-  }\n+    for (int i = 0; i < length; i++)\n+        indices[i] = buf.readInt();\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n+    @Override\n+    public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(numNodePerRow);\n     buf.writeInt(start);\n     buf.writeInt(dimension);\n     buf.writeInt(length);\n-    for (int i = 0; i < length; i ++) buf.writeInt(indices[i + start]);\n-  }\n+    for (int i = 0; i < length; i++)\n+        buf.writeInt(indices[i + start]);\n+    }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return super.bufferLen() + 4 + 4 * indices.length;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}