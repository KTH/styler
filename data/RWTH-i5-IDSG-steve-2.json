{
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "109",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    protected void setCommonAttributes(Model model) {\n        List<RegistrationStatus> inStatusFilter = Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n        model.addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n        model.addAttribute(\"opVersion\", \"v1.6\");\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "110",
                    "column": "76",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/2/Ocpp16Controller.java\nindex 163d21aba0..5cd044fa55 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/2/Ocpp16Controller.java\n@@ -106,8 +106,8 @@ public class Ocpp16Controller extends Ocpp15Controller {\n      */\n     @Override\n     protected void setCommonAttributes(Model model) {\n-        List<RegistrationStatus> inStatusFilter = Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n-        model.addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n+        List<RegistrationStatus> inStatusFilter = Arrays .asList(RegistrationStatus.ACCEPTED\n+                                              , RegistrationStatus.PENDING);model .addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n         model.addAttribute(\"opVersion\", \"v1.6\");\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/2/Ocpp16Controller.java\nindex 163d21aba0..281ef98e64 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/2/Ocpp16Controller.java\n@@ -16,6 +16,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  */\n+\n package de.rwth.idsg.steve.web.controller;\n \n import de.rwth.idsg.steve.ocpp.OcppVersion;\n@@ -62,7 +63,8 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     @Qualifier(\"ChargePointService16_Client\")\n     private ChargePointService16_Client client16;\n \n-    @Autowired private ChargingProfileRepository chargingProfileRepository;\n+    @Autowired\n+    private ChargingProfileRepository chargingProfileRepository;\n \n     // -------------------------------------------------------------------------\n     // Paths\n@@ -101,12 +103,13 @@ public class Ocpp16Controller extends Ocpp15Controller {\n      * From OCPP 1.6 spec: \"While in pending state, the following Central\n      * System initiated messages are not allowed: RemoteStartTransaction.req\n      * and RemoteStopTransaction.req\"\n-     *\n+     * <p>\n      * Conversely, it means all other operations are allowed for pending state.\n      */\n     @Override\n     protected void setCommonAttributes(Model model) {\n-        List<RegistrationStatus> inStatusFilter = Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n+        List<RegistrationStatus> inStatusFilter =\n+            Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n         model.addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n         model.addAttribute(\"opVersion\", \"v1.6\");\n     }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/2/Ocpp16Controller.java\nindex 163d21aba0..b2fe64030f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/2/Ocpp16Controller.java\n@@ -15,8 +15,7 @@\n  *\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n- */\n-package de.rwth.idsg.steve.web.controller;\n+ */package de.rwth.idsg.steve.web.controller;\n \n import de.rwth.idsg.steve.ocpp.OcppVersion;\n import de.rwth.idsg.steve.repository.ChargingProfileRepository;\n@@ -203,9 +202,8 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     // -------------------------------------------------------------------------\n \n     @RequestMapping(value = TRIGGER_MESSAGE_PATH, method = RequestMethod.POST)\n-    public String postTriggerMessage(@Valid @ModelAttribute(PARAMS) TriggerMessageParams params,\n-                                     BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n+    public String postTriggerMessage(@Valid @ModelAttribute(PARAMS) TriggerMessageParams params, BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n             setCommonAttributes(model);\n             return getPrefix() + TRIGGER_MESSAGE_PATH;\n         }\n@@ -213,9 +211,8 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     }\n \n     @RequestMapping(value = SET_CHARGING_PATH, method = RequestMethod.POST)\n-    public String postSetChargingProfile(@Valid @ModelAttribute(PARAMS) SetChargingProfileParams params,\n-                                         BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n+    public String postSetChargingProfile(@Valid @ModelAttribute(PARAMS) SetChargingProfileParams params, BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n             setCommonAttributes(model);\n             return getPrefix() + SET_CHARGING_PATH;\n         }\n@@ -223,9 +220,8 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     }\n \n     @RequestMapping(value = CLEAR_CHARGING_PATH, method = RequestMethod.POST)\n-    public String postClearChargingProfile(@Valid @ModelAttribute(PARAMS) ClearChargingProfileParams params,\n-                                           BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n+    public String postClearChargingProfile(@Valid @ModelAttribute(PARAMS) ClearChargingProfileParams params, BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n             setCommonAttributes(model);\n             return getPrefix() + CLEAR_CHARGING_PATH;\n         }\n@@ -233,12 +229,11 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     }\n \n     @RequestMapping(value = GET_COMPOSITE_PATH, method = RequestMethod.POST)\n-    public String postGetCompositeSchedule(@Valid @ModelAttribute(PARAMS) GetCompositeScheduleParams params,\n-                                           BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n+    public String postGetCompositeSchedule(@Valid @ModelAttribute(PARAMS) GetCompositeScheduleParams params, BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n             setCommonAttributes(model);\n             return getPrefix() + GET_COMPOSITE_PATH;\n         }\n         return REDIRECT_TASKS_PATH + getClient16().getCompositeSchedule(params);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/2/Ocpp16Controller.java\nindex 163d21aba0..91294d3b00 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/2/Ocpp16Controller.java\n@@ -40,7 +40,6 @@ import org.springframework.validation.BindingResult;\n import org.springframework.web.bind.annotation.ModelAttribute;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n-\n import javax.validation.Valid;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -54,6 +53,8 @@ import static de.rwth.idsg.steve.web.dto.ocpp.ConfigurationKeyReadWriteEnum.RW;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 15.03.2018\n  */\n+\n+\n @Controller\n @RequestMapping(value = \"/manager/operations/v1.6\")\n public class Ocpp16Controller extends Ocpp15Controller {\n@@ -61,13 +62,11 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     @Autowired\n     @Qualifier(\"ChargePointService16_Client\")\n     private ChargePointService16_Client client16;\n-\n     @Autowired private ChargingProfileRepository chargingProfileRepository;\n \n     // -------------------------------------------------------------------------\n     // Paths\n     // -------------------------------------------------------------------------\n-\n     private static final String GET_COMPOSITE_PATH = \"/GetCompositeSchedule\";\n     private static final String CLEAR_CHARGING_PATH = \"/ClearChargingProfile\";\n     private static final String SET_CHARGING_PATH = \"/SetChargingProfile\";\n@@ -76,7 +75,6 @@ public class Ocpp16Controller extends Ocpp15Controller {\n     // -------------------------------------------------------------------------\n     // Helpers\n     // -------------------------------------------------------------------------\n-\n     protected ChargePointService16_Client getClient16() {\n         return client16;\n     }\n@@ -104,6 +102,7 @@ public class Ocpp16Controller extends Ocpp15Controller {\n      *\n      * Conversely, it means all other operations are allowed for pending state.\n      */\n+\n     @Override\n     protected void setCommonAttributes(Model model) {\n         List<RegistrationStatus> inStatusFilter = Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n@@ -116,8 +115,10 @@ public class Ocpp16Controller extends Ocpp15Controller {\n         switch (confEnum) {\n             case R:\n                 return ConfigurationKeyEnum.OCPP_16_MAP_R;\n+\n             case RW:\n                 return ConfigurationKeyEnum.OCPP_16_MAP_RW;\n+\n             default:\n                 return Collections.emptyMap();\n         }\n@@ -241,4 +242,4 @@ public class Ocpp16Controller extends Ocpp15Controller {\n         }\n         return REDIRECT_TASKS_PATH + getClient16().getCompositeSchedule(params);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "110",
                    "column": "76",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/2/Ocpp16Controller.java\nindex 163d21aba0..5cd044fa55 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/2/Ocpp16Controller.java\n@@ -106,8 +106,8 @@ public class Ocpp16Controller extends Ocpp15Controller {\n      */\n     @Override\n     protected void setCommonAttributes(Model model) {\n-        List<RegistrationStatus> inStatusFilter = Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n-        model.addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n+        List<RegistrationStatus> inStatusFilter = Arrays .asList(RegistrationStatus.ACCEPTED\n+                                              , RegistrationStatus.PENDING);model .addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n         model.addAttribute(\"opVersion\", \"v1.6\");\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "column": "53",
                    "severity": "error",
                    "message": "'{' at column 53 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "93",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "93",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/2/Ocpp16Controller.java\nindex 163d21aba0..cd010f0dd3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/2/Ocpp16Controller.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/2/Ocpp16Controller.java\n@@ -105,140 +105,139 @@ public class Ocpp16Controller extends Ocpp15Controller {\n      * Conversely, it means all other operations are allowed for pending state.\n      */\n     @Override\n-    protected void setCommonAttributes(Model model) {\n-        List<RegistrationStatus> inStatusFilter = Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n-        model.addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n-        model.addAttribute(\"opVersion\", \"v1.6\");\n-    }\n+    protected void setCommonAttributes(Model model) { List<RegistrationStatus>inStatusFilter=Arrays.asList(RegistrationStatus.ACCEPTED, RegistrationStatus.PENDING);\n+    model.addAttribute(\"cpList\", chargePointHelperService.getChargePoints(OcppVersion.V_16, inStatusFilter));\n+    model.addAttribute(\"opVersion\", \"v1.6\");\n+}\n \n-    @Override\n-    protected Map<String, String> getConfigurationKeys(ConfigurationKeyReadWriteEnum confEnum) {\n-        switch (confEnum) {\n-            case R:\n-                return ConfigurationKeyEnum.OCPP_16_MAP_R;\n-            case RW:\n-                return ConfigurationKeyEnum.OCPP_16_MAP_RW;\n-            default:\n-                return Collections.emptyMap();\n-        }\n+@Override\n+protected Map<String, String> getConfigurationKeys(ConfigurationKeyReadWriteEnum confEnum) {\n+    switch (confEnum) {\n+        case R:\n+            return ConfigurationKeyEnum.OCPP_16_MAP_R;\n+        case RW:\n+            return ConfigurationKeyEnum.OCPP_16_MAP_RW;\n+        default:\n+            return Collections.emptyMap();\n     }\n+}\n \n-    @Override\n-    protected String getRedirectPath() {\n-        return \"redirect:/manager/operations/v1.6/ChangeAvailability\";\n-    }\n+@Override\n+protected String getRedirectPath() {\n+    return \"redirect:/manager/operations/v1.6/ChangeAvailability\";\n+}\n \n-    @Override\n-    protected String getPrefix() {\n-        return \"op16\";\n-    }\n+@Override\n+protected String getPrefix() {\n+    return \"op16\";\n+}\n \n-    // -------------------------------------------------------------------------\n-    // Old Http methods with changed logic\n-    // -------------------------------------------------------------------------\n+// -------------------------------------------------------------------------\n+// Old Http methods with changed logic\n+// -------------------------------------------------------------------------\n \n-    @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.GET)\n-    public String getGetConf(Model model) {\n+@RequestMapping(value = GET_CONF_PATH, method = RequestMethod.GET)\n+public String getGetConf(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new GetConfigurationParams());\n+    model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(R));\n+    return getPrefix() + GET_CONF_PATH;\n+}\n+\n+@RequestMapping(value = CHANGE_CONF_PATH, method = RequestMethod.GET)\n+public String getChangeConf(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new ChangeConfigurationParams());\n+    model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n+    return getPrefix() + CHANGE_CONF_PATH;\n+}\n+\n+@RequestMapping(value = GET_CONF_PATH, method = RequestMethod.POST)\n+public String postGetConf(@Valid @ModelAttribute(PARAMS) GetConfigurationParams params,\n+                          BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n         setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new GetConfigurationParams());\n         model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(R));\n         return getPrefix() + GET_CONF_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient15().getConfiguration(params);\n+}\n \n-    @RequestMapping(value = CHANGE_CONF_PATH, method = RequestMethod.GET)\n-    public String getChangeConf(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new ChangeConfigurationParams());\n-        model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n-        return getPrefix() + CHANGE_CONF_PATH;\n-    }\n+// -------------------------------------------------------------------------\n+// New Http methods (GET)\n+// -------------------------------------------------------------------------\n \n-    @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.POST)\n-    public String postGetConf(@Valid @ModelAttribute(PARAMS) GetConfigurationParams params,\n-                              BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(R));\n-            return getPrefix() + GET_CONF_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().getConfiguration(params);\n-    }\n+@RequestMapping(value = GET_COMPOSITE_PATH, method = RequestMethod.GET)\n+public String getGetCompositeSchedule(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new GetCompositeScheduleParams());\n+    return getPrefix() + GET_COMPOSITE_PATH;\n+}\n \n-    // -------------------------------------------------------------------------\n-    // New Http methods (GET)\n-    // -------------------------------------------------------------------------\n+@RequestMapping(value = CLEAR_CHARGING_PATH, method = RequestMethod.GET)\n+public String getClearChargingProfile(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(\"profileList\", chargingProfileRepository.getBasicInfo());\n+    model.addAttribute(PARAMS, new ClearChargingProfileParams());\n+    return getPrefix() + CLEAR_CHARGING_PATH;\n+}\n \n-    @RequestMapping(value = GET_COMPOSITE_PATH, method = RequestMethod.GET)\n-    public String getGetCompositeSchedule(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new GetCompositeScheduleParams());\n-        return getPrefix() + GET_COMPOSITE_PATH;\n-    }\n+@RequestMapping(value = SET_CHARGING_PATH, method = RequestMethod.GET)\n+public String getSetChargingProfile(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(\"profileList\", chargingProfileRepository.getBasicInfo());\n+    model.addAttribute(PARAMS, new SetChargingProfileParams());\n+    return getPrefix() + SET_CHARGING_PATH;\n+}\n \n-    @RequestMapping(value = CLEAR_CHARGING_PATH, method = RequestMethod.GET)\n-    public String getClearChargingProfile(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(\"profileList\", chargingProfileRepository.getBasicInfo());\n-        model.addAttribute(PARAMS, new ClearChargingProfileParams());\n-        return getPrefix() + CLEAR_CHARGING_PATH;\n-    }\n+@RequestMapping(value = TRIGGER_MESSAGE_PATH, method = RequestMethod.GET)\n+public String getTriggerMessage(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new TriggerMessageParams());\n+    return getPrefix() + TRIGGER_MESSAGE_PATH;\n+}\n \n-    @RequestMapping(value = SET_CHARGING_PATH, method = RequestMethod.GET)\n-    public String getSetChargingProfile(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(\"profileList\", chargingProfileRepository.getBasicInfo());\n-        model.addAttribute(PARAMS, new SetChargingProfileParams());\n-        return getPrefix() + SET_CHARGING_PATH;\n-    }\n+// -------------------------------------------------------------------------\n+// Http methods (POST)\n+// -------------------------------------------------------------------------\n \n-    @RequestMapping(value = TRIGGER_MESSAGE_PATH, method = RequestMethod.GET)\n-    public String getTriggerMessage(Model model) {\n+@RequestMapping(value = TRIGGER_MESSAGE_PATH, method = RequestMethod.POST)\n+public String postTriggerMessage(@Valid @ModelAttribute(PARAMS) TriggerMessageParams params,\n+                                 BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n         setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new TriggerMessageParams());\n         return getPrefix() + TRIGGER_MESSAGE_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient16().triggerMessage(params);\n+}\n \n-    // -------------------------------------------------------------------------\n-    // Http methods (POST)\n-    // -------------------------------------------------------------------------\n-\n-    @RequestMapping(value = TRIGGER_MESSAGE_PATH, method = RequestMethod.POST)\n-    public String postTriggerMessage(@Valid @ModelAttribute(PARAMS) TriggerMessageParams params,\n+@RequestMapping(value = SET_CHARGING_PATH, method = RequestMethod.POST)\n+public String postSetChargingProfile(@Valid @ModelAttribute(PARAMS) SetChargingProfileParams params,\n                                      BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + TRIGGER_MESSAGE_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient16().triggerMessage(params);\n-    }\n-\n-    @RequestMapping(value = SET_CHARGING_PATH, method = RequestMethod.POST)\n-    public String postSetChargingProfile(@Valid @ModelAttribute(PARAMS) SetChargingProfileParams params,\n-                                         BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + SET_CHARGING_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient16().setChargingProfile(params);\n+    if (result.hasErrors()) {\n+        setCommonAttributes(model);\n+        return getPrefix() + SET_CHARGING_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient16().setChargingProfile(params);\n+}\n \n-    @RequestMapping(value = CLEAR_CHARGING_PATH, method = RequestMethod.POST)\n-    public String postClearChargingProfile(@Valid @ModelAttribute(PARAMS) ClearChargingProfileParams params,\n-                                           BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + CLEAR_CHARGING_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient16().clearChargingProfile(params);\n+@RequestMapping(value = CLEAR_CHARGING_PATH, method = RequestMethod.POST)\n+public String postClearChargingProfile(@Valid @ModelAttribute(PARAMS) ClearChargingProfileParams params,\n+                                       BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+        setCommonAttributes(model);\n+        return getPrefix() + CLEAR_CHARGING_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient16().clearChargingProfile(params);\n+}\n \n-    @RequestMapping(value = GET_COMPOSITE_PATH, method = RequestMethod.POST)\n-    public String postGetCompositeSchedule(@Valid @ModelAttribute(PARAMS) GetCompositeScheduleParams params,\n-                                           BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + GET_COMPOSITE_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient16().getCompositeSchedule(params);\n+@RequestMapping(value = GET_COMPOSITE_PATH, method = RequestMethod.POST)\n+public String postGetCompositeSchedule(@Valid @ModelAttribute(PARAMS) GetCompositeScheduleParams params,\n+                                       BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+        setCommonAttributes(model);\n+        return getPrefix() + GET_COMPOSITE_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient16().getCompositeSchedule(params);\n+}\n }\n",
            "diff_size": 145
        }
    ]
}