{
    "error_id": "214",
    "information": {
        "errors": [
            {
                "line": "86",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "              responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n      LOGGER.error(msg);\n      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n    }\n\n    try {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/214/DefaultHttpClientFilter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/214/DefaultHttpClientFilter.java\nindex 659ba2a868..aa448a1635 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/214/DefaultHttpClientFilter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/214/DefaultHttpClientFilter.java\n@@ -50,7 +50,7 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n   }\n \n   protected ProduceProcessor findProduceProcessor(RestOperationMeta restOperation,\n-      HttpServletResponseEx responseEx) {\n+                                                  HttpServletResponseEx responseEx) {\n     String contentType = responseEx.getHeader(HttpHeaders.CONTENT_TYPE);\n     if (contentType == null) {\n       return null;\n@@ -83,7 +83,8 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n               responseEx.getStatusType().getReasonPhrase(),\n               responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n       LOGGER.error(msg);\n-      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n+      return ExceptionFactory.createConsumerException(\n+          new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n     }\n \n     try {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/214/DefaultHttpClientFilter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/214/DefaultHttpClientFilter.java\nindex 659ba2a868..99018c42a7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/214/DefaultHttpClientFilter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/214/DefaultHttpClientFilter.java\n@@ -109,4 +109,4 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n \n     return response;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/214/DefaultHttpClientFilter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/214/DefaultHttpClientFilter.java\nindex 659ba2a868..f1b2ec1824 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/214/DefaultHttpClientFilter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/214/DefaultHttpClientFilter.java\n@@ -83,7 +83,7 @@ public class DefaultHttpClientFilter implements HttpClientFilter {\n               responseEx.getStatusType().getReasonPhrase(),\n               responseEx.getHeader(HttpHeaders.CONTENT_TYPE));\n       LOGGER.error(msg);\n-      return ExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n+      returnExceptionFactory.createConsumerException(new InvocationException(responseEx.getStatus(), responseEx.getStatusType().getReasonPhrase(), msg));\n     }\n \n     try {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}