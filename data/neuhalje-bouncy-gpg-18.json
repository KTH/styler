{
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "14",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 116).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "/**\n * Load keyrings from files. These files are created and managed via gpg.\n * @deprecated : The keyring configs are highly dependent on GnuPG. Using secret keys no longer works with GnuPG 2.1\n */\n@Deprecated\nfinal class FileBasedKeyringConfig extends AbstractDefaultKeyringConfig {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/18/FileBasedKeyringConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/intellij/18/FileBasedKeyringConfig.java\nindex ef54464c29..68003d8992 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/18/FileBasedKeyringConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/intellij/18/FileBasedKeyringConfig.java\n@@ -11,6 +11,7 @@ import name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.callbacks.Keyrin\n \n /**\n  * Load keyrings from files. These files are created and managed via gpg.\n+ *\n  * @deprecated : The keyring configs are highly dependent on GnuPG. Using secret keys no longer works with GnuPG 2.1\n  */\n @Deprecated\n@@ -22,7 +23,7 @@ final class FileBasedKeyringConfig extends AbstractDefaultKeyringConfig {\n   private final File secretKeyring;\n \n   public FileBasedKeyringConfig(@Nonnull KeyringConfigCallback callback,\n-      @Nonnull File publicKeyring, @Nonnull File secretKeyring) {\n+                                @Nonnull File publicKeyring, @Nonnull File secretKeyring) {\n     super(callback);\n     requireNonNull(publicKeyring, \"publicKeyring must not be null\");\n     requireNonNull(secretKeyring, \"secretKeyring must not be null\");\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/18/FileBasedKeyringConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/naturalize/18/FileBasedKeyringConfig.java\nindex ef54464c29..e2ec3b5d9e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/18/FileBasedKeyringConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/naturalize/18/FileBasedKeyringConfig.java\n@@ -26,8 +26,7 @@ final class FileBasedKeyringConfig extends AbstractDefaultKeyringConfig {\n     super(callback);\n     requireNonNull(publicKeyring, \"publicKeyring must not be null\");\n     requireNonNull(secretKeyring, \"secretKeyring must not be null\");\n-\n-    this.publicKeyring = publicKeyring;\n+this.publicKeyring = publicKeyring;\n     this.secretKeyring = secretKeyring;\n   }\n \n@@ -42,4 +41,4 @@ final class FileBasedKeyringConfig extends AbstractDefaultKeyringConfig {\n   protected InputStream getSecretKeyRingStream() throws IOException {\n     return Files.newInputStream(secretKeyring.toPath());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/18/FileBasedKeyringConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/codebuff/18/FileBasedKeyringConfig.java\nindex ef54464c29..7299ab2ec5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/18/FileBasedKeyringConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/codebuff/18/FileBasedKeyringConfig.java\n@@ -1,7 +1,6 @@\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.keyrings;\n \n import static java.util.Objects.requireNonNull;\n-\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -13,33 +12,33 @@ import name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.callbacks.Keyrin\n  * Load keyrings from files. These files are created and managed via gpg.\n  * @deprecated : The keyring configs are highly dependent on GnuPG. Using secret keys no longer works with GnuPG 2.1\n  */\n-@Deprecated\n-final class FileBasedKeyringConfig extends AbstractDefaultKeyringConfig {\n \n-  @Nonnull\n-  private final File publicKeyring;\n-  @Nonnull\n-  private final File secretKeyring;\n \n-  public FileBasedKeyringConfig(@Nonnull KeyringConfigCallback callback,\n-      @Nonnull File publicKeyring, @Nonnull File secretKeyring) {\n+@Deprecated final class FileBasedKeyringConfig extends AbstractDefaultKeyringConfig {\n+\n+    @Nonnull\n+    private final File publicKeyring;\n+    @Nonnull\n+    private final File secretKeyring;\n+\n+    public FileBasedKeyringConfig(@Nonnull KeyringConfigCallback callback,\n+        @Nonnull File publicKeyring, @Nonnull File secretKeyring) {\n     super(callback);\n     requireNonNull(publicKeyring, \"publicKeyring must not be null\");\n     requireNonNull(secretKeyring, \"secretKeyring must not be null\");\n-\n     this.publicKeyring = publicKeyring;\n     this.secretKeyring = secretKeyring;\n-  }\n+    }\n \n-  @Nonnull\n-  @Override\n-  protected InputStream getPublicKeyRingStream() throws IOException {\n+    @Nonnull\n+    @Override\n+    protected InputStream getPublicKeyRingStream() throws IOException {\n     return Files.newInputStream(publicKeyring.toPath());\n-  }\n+    }\n \n-  @Nonnull\n-  @Override\n-  protected InputStream getSecretKeyRingStream() throws IOException {\n+    @Nonnull\n+    @Override\n+    protected InputStream getSecretKeyRingStream() throws IOException {\n     return Files.newInputStream(secretKeyring.toPath());\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}