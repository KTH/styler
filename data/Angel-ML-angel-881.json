{
    "error_id": "881",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/881/InitNeighbor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/881/InitNeighbor.java\nindex b148877dc0..64840319ab 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/881/InitNeighbor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/881/InitNeighbor.java\n@@ -31,36 +31,37 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n  */\n public class InitNeighbor extends UpdateFunc {\n \n-  /**\n-   * Create a new UpdateParam\n-   */\n-  public InitNeighbor(InitNeighborParam param) {\n-    super(param);\n-  }\n+    /**\n+     * Create a new UpdateParam\n+     */\n+    public InitNeighbor(InitNeighborParam param) {\n+        super(param);\n+    }\n \n-  public InitNeighbor() {\n-    this(null);\n-  }\n+    public InitNeighbor() {\n+        this(null);\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    PartInitNeighborParam param = (PartInitNeighborParam) partParam;\n-    ServerMatrix matrix = psContext.getMatrixStorageManager().getMatrix(partParam.getMatrixId());\n-    RowBasedPartition part = (RowBasedPartition) matrix\n-        .getPartition(partParam.getPartKey().getPartitionId());\n-    ServerLongAnyRow row = (ServerLongAnyRow) part.getRow(0);\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        PartInitNeighborParam param = (PartInitNeighborParam) partParam;\n+        ServerMatrix matrix =\n+                psContext.getMatrixStorageManager().getMatrix(partParam.getMatrixId());\n+        RowBasedPartition part = (RowBasedPartition) matrix\n+                .getPartition(partParam.getPartKey().getPartitionId());\n+        ServerLongAnyRow row = (ServerLongAnyRow) part.getRow(0);\n \n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param\n-        .getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n+        ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param\n+                .getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n \n-    row.startWrite();\n-    try {\n-      while (iter.hasNext()) {\n-        Long2ObjectMap.Entry<long[]> entry = iter.next();\n-        row.set(entry.getLongKey(), new LongArrayElement(entry.getValue()));\n-      }\n-    } finally {\n-      row.endWrite();\n+        row.startWrite();\n+        try {\n+            while (iter.hasNext()) {\n+                Long2ObjectMap.Entry<long[]> entry = iter.next();\n+                row.set(entry.getLongKey(), new LongArrayElement(entry.getValue()));\n+            }\n+        } finally {\n+            row.endWrite();\n+        }\n     }\n-  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/881/InitNeighbor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/881/InitNeighbor.java\nindex b148877dc0..3e7f64fd79 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/881/InitNeighbor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/881/InitNeighbor.java\n@@ -46,12 +46,10 @@ public class InitNeighbor extends UpdateFunc {\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     PartInitNeighborParam param = (PartInitNeighborParam) partParam;\n     ServerMatrix matrix = psContext.getMatrixStorageManager().getMatrix(partParam.getMatrixId());\n-    RowBasedPartition part = (RowBasedPartition) matrix\n-        .getPartition(partParam.getPartKey().getPartitionId());\n+    RowBasedPartition part = (RowBasedPartition) matrix.getPartition(partParam.getPartKey().getPartitionId());\n     ServerLongAnyRow row = (ServerLongAnyRow) part.getRow(0);\n \n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param\n-        .getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n+    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param.getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n \n     row.startWrite();\n     try {\n@@ -63,4 +61,4 @@ public class InitNeighbor extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/881/InitNeighbor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/881/InitNeighbor.java\nindex b148877dc0..bab16b095b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/881/InitNeighbor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/881/InitNeighbor.java\n@@ -29,38 +29,37 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Init node neighbors for long type node id\n  */\n+\n public class InitNeighbor extends UpdateFunc {\n \n   /**\n    * Create a new UpdateParam\n    */\n-  public InitNeighbor(InitNeighborParam param) {\n+\n+    public InitNeighbor(InitNeighborParam param) {\n     super(param);\n-  }\n+    }\n \n-  public InitNeighbor() {\n+    public InitNeighbor() {\n     this(null);\n-  }\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n     PartInitNeighborParam param = (PartInitNeighborParam) partParam;\n     ServerMatrix matrix = psContext.getMatrixStorageManager().getMatrix(partParam.getMatrixId());\n-    RowBasedPartition part = (RowBasedPartition) matrix\n-        .getPartition(partParam.getPartKey().getPartitionId());\n+    RowBasedPartition part = (RowBasedPartition) matrix.getPartition(partParam.getPartKey().getPartitionId());\n     ServerLongAnyRow row = (ServerLongAnyRow) part.getRow(0);\n-\n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param\n-        .getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n-\n+    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = param.getNodeIdToNeighborIndices().long2ObjectEntrySet().iterator();\n     row.startWrite();\n     try {\n-      while (iter.hasNext()) {\n+        while (iter.hasNext()) {\n         Long2ObjectMap.Entry<long[]> entry = iter.next();\n         row.set(entry.getLongKey(), new LongArrayElement(entry.getValue()));\n-      }\n+        }\n     } finally {\n       row.endWrite();\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}