{
    "error_id": "570",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/570/AsyncFTRLFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/570/AsyncFTRLFunc.java\nindex b6925f6c96..478ffd92e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/570/AsyncFTRLFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/570/AsyncFTRLFunc.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.spark.ml.psf.optim;\n \n import com.tencent.angel.ml.math2.ufuncs.OptFuncs;\n@@ -25,31 +26,31 @@ import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n \n public class AsyncFTRLFunc extends AsyncOptimFunc {\n \n-  public AsyncFTRLFunc(UpdateParam param) {\n-    super(param);\n-  }\n+    public AsyncFTRLFunc(UpdateParam param) {\n+        super(param);\n+    }\n \n-  public AsyncFTRLFunc() {\n-    this(null);\n-  }\n+    public AsyncFTRLFunc() {\n+        this(null);\n+    }\n \n-  @Override\n-  public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n-    double alpha = doubles[0];\n-    double beta = doubles[1];\n-    double lambda1 = doubles[2];\n-    double lambda2 = doubles[3];\n+    @Override\n+    public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n+        double alpha = doubles[0];\n+        double beta = doubles[1];\n+        double lambda1 = doubles[2];\n+        double lambda2 = doubles[3];\n \n-    Vector w = vectors[0];\n-    Vector n = vectors[1];\n-    Vector z = vectors[2];\n+        Vector w = vectors[0];\n+        Vector n = vectors[1];\n+        Vector z = vectors[2];\n \n-    Ufuncs.iaxpy2(n, grad, 1);\n-    Vector delta = OptFuncs.ftrldelta(n, grad, alpha, OpType.INTERSECTION);\n-    Ufuncs.isub(grad, delta.mul(w));\n-    Ufuncs.iadd(z, grad);\n+        Ufuncs.iaxpy2(n, grad, 1);\n+        Vector delta = OptFuncs.ftrldelta(n, grad, alpha, OpType.INTERSECTION);\n+        Ufuncs.isub(grad, delta.mul(w));\n+        Ufuncs.iadd(z, grad);\n \n-    // how to do intersection for two dense vector with a given indices ??\n+        // how to do intersection for two dense vector with a given indices ??\n \n-  }\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/570/AsyncFTRLFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/570/AsyncFTRLFunc.java\nindex b6925f6c96..0a68c853dd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/570/AsyncFTRLFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/570/AsyncFTRLFunc.java\n@@ -22,34 +22,31 @@ import com.tencent.angel.ml.math2.ufuncs.expression.OpType;\n import com.tencent.angel.ml.math2.vector.Vector;\n import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n \n-\n public class AsyncFTRLFunc extends AsyncOptimFunc {\n \n-  public AsyncFTRLFunc(UpdateParam param) {\n+    public AsyncFTRLFunc(UpdateParam param) {\n     super(param);\n-  }\n+    }\n \n-  public AsyncFTRLFunc() {\n+    public AsyncFTRLFunc() {\n     this(null);\n-  }\n+    }\n \n-  @Override\n-  public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n+    @Override\n+    public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n     double alpha = doubles[0];\n     double beta = doubles[1];\n     double lambda1 = doubles[2];\n     double lambda2 = doubles[3];\n-\n     Vector w = vectors[0];\n     Vector n = vectors[1];\n     Vector z = vectors[2];\n-\n     Ufuncs.iaxpy2(n, grad, 1);\n     Vector delta = OptFuncs.ftrldelta(n, grad, alpha, OpType.INTERSECTION);\n     Ufuncs.isub(grad, delta.mul(w));\n     Ufuncs.iadd(z, grad);\n \n     // how to do intersection for two dense vector with a given indices ??\n+    }\n \n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}