{
    "error_id": "150",
    "information": {
        "errors": [
            {
                "line": "49",
                "column": "58",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "        NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n                productName);\n        String sb = buildQlSelect(prefix) + startWhere() +\n                buildWhereClause(Operation.EQUALS, prefix, parameter);\n        return listWithJQL(sb, parameter);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/150/FilterGroupDao.java\nindex 605c7f85b4..36df3e6f10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/150/FilterGroupDao.java\n@@ -46,9 +46,8 @@ public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n                 productName);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n-        return listWithJQL(sb, parameter);\n-    }\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n+return listWithJQL(sb, parameter);\n+}\n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "49",
                    "column": "54",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/150/FilterGroupDao.java\nindex 605c7f85b4..78dcffc0f4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/150/FilterGroupDao.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.dao;\n \n /*\n@@ -24,31 +25,30 @@ import com.intuit.tank.project.ScriptFilterGroup;\n \n /**\n  * ProductDao\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n \n-    /**\n-     * @param entityClass\n-     */\n-    public FilterGroupDao() {\n-        super();\n-    }\n-\n-    /**\n-     * @param productName\n-     * @return\n-     */\n-    @Nonnull\n-    public List<ScriptFilterGroup> getFilterGroupsForProduct(@Nonnull String productName) {\n-        String prefix = \"x\";\n-        NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n-                productName);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n-        return listWithJQL(sb, parameter);\n-    }\n+  /**\n+   * @param entityClass\n+   */\n+  public FilterGroupDao() {\n+    super();\n+  }\n+\n+  /**\n+   * @param productName\n+   * @return\n+   */\n+  @Nonnull\n+  public List<ScriptFilterGroup> getFilterGroupsForProduct(@Nonnull String productName) {\n+    String prefix = \"x\";\n+    NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n+      productName);\n+    String sb = buildQlSelect(prefix) + startWhere() +\n+      buildWhereClause(Operation.EQUALS, prefix, parameter);\n+    return listWithJQL(sb, parameter);\n+  }\n \n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/150/FilterGroupDao.java\nindex 605c7f85b4..0c985cfa97 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/150/FilterGroupDao.java\n@@ -46,9 +46,8 @@ public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n                 productName);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return listWithJQL(sb, parameter);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/150/FilterGroupDao.java\nindex 605c7f85b4..c1999c528a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/150/FilterGroupDao.java\n@@ -16,10 +16,10 @@ package com.intuit.tank.dao;\n  * #L%\n  */\n \n-import java.util.List;\n \n-import javax.annotation.Nonnull;\n \n+import java.util.List;\n+import javax.annotation.Nonnull;\n import com.intuit.tank.project.ScriptFilterGroup;\n \n /**\n@@ -28,11 +28,13 @@ import com.intuit.tank.project.ScriptFilterGroup;\n  * @author dangleton\n  * \n  */\n+\n public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n \n     /**\n      * @param entityClass\n      */\n+\n     public FilterGroupDao() {\n         super();\n     }\n@@ -41,14 +43,12 @@ public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n      * @param productName\n      * @return\n      */\n+\n     @Nonnull\n     public List<ScriptFilterGroup> getFilterGroupsForProduct(@Nonnull String productName) {\n         String prefix = \"x\";\n-        NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n-                productName);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\", productName);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return listWithJQL(sb, parameter);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/150/FilterGroupDao.java\nindex 605c7f85b4..36df3e6f10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/150/FilterGroupDao.java\n@@ -46,9 +46,8 @@ public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n                 productName);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n-        return listWithJQL(sb, parameter);\n-    }\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n+return listWithJQL(sb, parameter);\n+}\n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/150/FilterGroupDao.java\nindex 605c7f85b4..36df3e6f10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/150/FilterGroupDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/150/FilterGroupDao.java\n@@ -46,9 +46,8 @@ public class FilterGroupDao extends BaseDao<ScriptFilterGroup> {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptFilterGroup.PROPERTY_PRODUCT_NAME, \"productName\",\n                 productName);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n-        return listWithJQL(sb, parameter);\n-    }\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n+return listWithJQL(sb, parameter);\n+}\n \n }\n",
            "diff_size": 4
        }
    ]
}