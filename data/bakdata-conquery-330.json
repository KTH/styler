{
    "error_id": "330",
    "information": {
        "errors": [
            {
                "line": "73",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n\t\t\t}\n\t\t} catch (InterruptedException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "73",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 3 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/330/QueryExecutor.java\nindex 9cab2bff5e..c447fca6ec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/330/QueryExecutor.java\n@@ -25,7 +25,7 @@ import lombok.extern.slf4j.Slf4j;\n public class QueryExecutor implements Closeable {\n \n \tprivate final ListeningExecutorService pool;\n-\t\n+\n \tpublic QueryExecutor(ConqueryConfig config) {\n \t\tthis.pool = config.getQueries().getExecutionPool().createService(\"Query Executor %d\");\n \t}\n@@ -50,14 +50,14 @@ public class QueryExecutor implements Closeable {\n \t\t}\n \t\tShardResult result = new ShardResult();\n \t\tresult.setQueryId(queryId);\n-\t\t\n+\n \t\tList<ListenableFuture<EntityResult>> futures = plan\n \t\t\t.executeOn(context, entries)\n \t\t\t.map(executor::submit)\n \t\t\t.collect(Collectors.toList());\n-\t\t\n+\n \t\tresult.setFuture(Futures.allAsList(futures));\n-\t\t\n+\n \t\tresult.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n \t\treturn result;\n \t}\n@@ -70,7 +70,7 @@ public class QueryExecutor implements Closeable {\n \t\t\tif (!success && log.isDebugEnabled()) {\n \t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n \t\t\t}\n-\t\t} catch (InterruptedException e) {\n+\t\t} catch  (InterruptedException e) {\n \t\t\tthrow new RuntimeException(e);\n \t\t}\n \t}\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/330/QueryExecutor.java\nindex 9cab2bff5e..9b2aa1e0a1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/330/QueryExecutor.java\n@@ -24,54 +24,54 @@ import lombok.extern.slf4j.Slf4j;\n @Slf4j\n public class QueryExecutor implements Closeable {\n \n-\tprivate final ListeningExecutorService pool;\n-\t\n-\tpublic QueryExecutor(ConqueryConfig config) {\n-\t\tthis.pool = config.getQueries().getExecutionPool().createService(\"Query Executor %d\");\n-\t}\n+    private final ListeningExecutorService pool;\n \n-\tpublic ShardResult execute(QueryPlanContext context, ManagedQuery query) {\n-\t\tQueryPlan plan = query.getQuery().createQueryPlan(context);\n-\t\treturn execute(\n-\t\t\t\tcontext.getBlockManager(),\n-\t\t\t\tnew QueryContext(\n-\t\t\t\t\tcontext.getWorker().getStorage()\n-\t\t\t\t),\n-\t\t\t\tquery.getId(),\n-\t\t\t\tplan,\n-\t\t\t\tpool\n-\t\t);\n-\t}\n+    public QueryExecutor(ConqueryConfig config) {\n+        this.pool = config.getQueries().getExecutionPool().createService(\"Query Executor %d\");\n+    }\n \n-\tpublic static ShardResult execute(BlockManager blockManager, QueryContext context, ManagedExecutionId queryId, QueryPlan plan, ListeningExecutorService executor) {\n-\t\tCollection<Entity> entries = blockManager.getEntities().values();\n-\t\tif(entries.isEmpty()) {\n-\t\t\tlog.warn(\"entries for query {} are empty\", queryId);\n-\t\t}\n-\t\tShardResult result = new ShardResult();\n-\t\tresult.setQueryId(queryId);\n-\t\t\n-\t\tList<ListenableFuture<EntityResult>> futures = plan\n-\t\t\t.executeOn(context, entries)\n-\t\t\t.map(executor::submit)\n-\t\t\t.collect(Collectors.toList());\n-\t\t\n-\t\tresult.setFuture(Futures.allAsList(futures));\n-\t\t\n-\t\tresult.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n-\t\treturn result;\n-\t}\n+    public ShardResult execute(QueryPlanContext context, ManagedQuery query) {\n+        QueryPlan plan = query.getQuery().createQueryPlan(context);\n+        return execute(\n+            context.getBlockManager(),\n+            new QueryContext(\n+                context.getWorker().getStorage()\n+            ),\n+            query.getId(),\n+            plan,\n+            pool\n+        );\n+    }\n \n-\t@Override\n-\tpublic void close() throws IOException {\n-\t\tpool.shutdown();\n-\t\ttry {\n-\t\t\tboolean success = pool.awaitTermination(1, TimeUnit.DAYS);\n-\t\t\tif (!success && log.isDebugEnabled()) {\n-\t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n-\t\t\t}\n-\t\t} catch (InterruptedException e) {\n-\t\t\tthrow new RuntimeException(e);\n-\t\t}\n-\t}\n+    public static ShardResult execute(BlockManager blockManager, QueryContext context, ManagedExecutionId queryId, QueryPlan plan, ListeningExecutorService executor) {\n+        Collection<Entity> entries = blockManager.getEntities().values();\n+        if (entries.isEmpty()) {\n+            log.warn(\"entries for query {} are empty\", queryId);\n+        }\n+        ShardResult result = new ShardResult();\n+        result.setQueryId(queryId);\n+\n+        List<ListenableFuture<EntityResult>> futures = plan\n+            .executeOn(context, entries)\n+            .map(executor::submit)\n+            .collect(Collectors.toList());\n+\n+        result.setFuture(Futures.allAsList(futures));\n+\n+        result.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n+        return result;\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        pool.shutdown();\n+        try {\n+            boolean success = pool.awaitTermination(1, TimeUnit.DAYS);\n+            if (!success && log.isDebugEnabled()) {\n+                log.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n+            }\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/330/QueryExecutor.java\nindex 9cab2bff5e..51119ae0f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/330/QueryExecutor.java\n@@ -51,12 +51,10 @@ public class QueryExecutor implements Closeable {\n \t\tShardResult result = new ShardResult();\n \t\tresult.setQueryId(queryId);\n \t\t\n-\t\tList<ListenableFuture<EntityResult>> futures = plan\n-\t\t\t.executeOn(context, entries)\n+\t\tList<ListenableFuture<EntityResult>> futures = plan.executeOn(context, entries)\n \t\t\t.map(executor::submit)\n \t\t\t.collect(Collectors.toList());\n-\t\t\n-\t\tresult.setFuture(Futures.allAsList(futures));\n+result.setFuture(Futures.allAsList(futures));\n \t\t\n \t\tresult.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n \t\treturn result;\n@@ -70,8 +68,9 @@ public class QueryExecutor implements Closeable {\n \t\t\tif (!success && log.isDebugEnabled()) {\n \t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n \t\t\t}\n-\t\t} catch (InterruptedException e) {\n+\t\t}\n+catch (InterruptedException e) {\n \t\t\tthrow new RuntimeException(e);\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/330/QueryExecutor.java\nindex 9cab2bff5e..1d99972887 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/330/QueryExecutor.java\n@@ -6,7 +6,6 @@ import java.util.Collection;\n import java.util.List;\n import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n-\n import com.bakdata.conquery.models.config.ConqueryConfig;\n import com.bakdata.conquery.models.events.BlockManager;\n import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n@@ -18,60 +17,53 @@ import com.google.common.util.concurrent.Futures;\n import com.google.common.util.concurrent.ListenableFuture;\n import com.google.common.util.concurrent.ListeningExecutorService;\n import com.google.common.util.concurrent.MoreExecutors;\n-\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public class QueryExecutor implements Closeable {\n \n-\tprivate final ListeningExecutorService pool;\n-\t\n-\tpublic QueryExecutor(ConqueryConfig config) {\n-\t\tthis.pool = config.getQueries().getExecutionPool().createService(\"Query Executor %d\");\n-\t}\n+    private final ListeningExecutorService pool;\n+\n+    public QueryExecutor(ConqueryConfig config) {\n+        this.pool = config.getQueries().getExecutionPool()\n+                                       .createService(\"Query Executor %d\");\n+    }\n+\n+    public ShardResult execute(QueryPlanContext context, ManagedQuery query) {\n+        QueryPlan plan = query.getQuery().createQueryPlan(context);\n+        return execute(context.getBlockManager(),\n+                       new QueryContext(context.getWorker().getStorage()),\n+                       query.getId(),\n+                       plan,\n+                       pool);\n+    }\n \n-\tpublic ShardResult execute(QueryPlanContext context, ManagedQuery query) {\n-\t\tQueryPlan plan = query.getQuery().createQueryPlan(context);\n-\t\treturn execute(\n-\t\t\t\tcontext.getBlockManager(),\n-\t\t\t\tnew QueryContext(\n-\t\t\t\t\tcontext.getWorker().getStorage()\n-\t\t\t\t),\n-\t\t\t\tquery.getId(),\n-\t\t\t\tplan,\n-\t\t\t\tpool\n-\t\t);\n-\t}\n+    public static ShardResult execute(BlockManager blockManager, QueryContext context, ManagedExecutionId queryId, QueryPlan plan, ListeningExecutorService executor) {\n+        Collection<Entity> entries = blockManager.getEntities().values();\n+        if(entries.isEmpty()) {\n+            log.warn(\"entries for query {} are empty\", queryId);\n+        }\n \n-\tpublic static ShardResult execute(BlockManager blockManager, QueryContext context, ManagedExecutionId queryId, QueryPlan plan, ListeningExecutorService executor) {\n-\t\tCollection<Entity> entries = blockManager.getEntities().values();\n-\t\tif(entries.isEmpty()) {\n-\t\t\tlog.warn(\"entries for query {} are empty\", queryId);\n-\t\t}\n-\t\tShardResult result = new ShardResult();\n-\t\tresult.setQueryId(queryId);\n-\t\t\n-\t\tList<ListenableFuture<EntityResult>> futures = plan\n-\t\t\t.executeOn(context, entries)\n-\t\t\t.map(executor::submit)\n-\t\t\t.collect(Collectors.toList());\n-\t\t\n-\t\tresult.setFuture(Futures.allAsList(futures));\n-\t\t\n-\t\tresult.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n-\t\treturn result;\n-\t}\n+        ShardResult result = new ShardResult();\n+        result.setQueryId(queryId);\n+        List<ListenableFuture<EntityResult>> futures = plan.executeOn(context, entries).map(executor::submit)\n+                                                                                       .collect(Collectors.toList());\n+        result.setFuture(Futures.allAsList(futures));\n+        result.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n+        return result;\n+    }\n \n-\t@Override\n-\tpublic void close() throws IOException {\n-\t\tpool.shutdown();\n-\t\ttry {\n-\t\t\tboolean success = pool.awaitTermination(1, TimeUnit.DAYS);\n-\t\t\tif (!success && log.isDebugEnabled()) {\n-\t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n-\t\t\t}\n-\t\t} catch (InterruptedException e) {\n-\t\t\tthrow new RuntimeException(e);\n-\t\t}\n-\t}\n-}\n+    @Override\n+    public void close() throws IOException {\n+        pool.shutdown();\n+        try {\n+            boolean success = pool.awaitTermination(1, TimeUnit.DAYS);\n+            if(!success && log.isDebugEnabled()) {\n+                log.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n+            }\n+        }\n+        catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "73",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 3 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/330/QueryExecutor.java\nindex 9cab2bff5e..c447fca6ec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/330/QueryExecutor.java\n@@ -25,7 +25,7 @@ import lombok.extern.slf4j.Slf4j;\n public class QueryExecutor implements Closeable {\n \n \tprivate final ListeningExecutorService pool;\n-\t\n+\n \tpublic QueryExecutor(ConqueryConfig config) {\n \t\tthis.pool = config.getQueries().getExecutionPool().createService(\"Query Executor %d\");\n \t}\n@@ -50,14 +50,14 @@ public class QueryExecutor implements Closeable {\n \t\t}\n \t\tShardResult result = new ShardResult();\n \t\tresult.setQueryId(queryId);\n-\t\t\n+\n \t\tList<ListenableFuture<EntityResult>> futures = plan\n \t\t\t.executeOn(context, entries)\n \t\t\t.map(executor::submit)\n \t\t\t.collect(Collectors.toList());\n-\t\t\n+\n \t\tresult.setFuture(Futures.allAsList(futures));\n-\t\t\n+\n \t\tresult.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n \t\treturn result;\n \t}\n@@ -70,7 +70,7 @@ public class QueryExecutor implements Closeable {\n \t\t\tif (!success && log.isDebugEnabled()) {\n \t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n \t\t\t}\n-\t\t} catch (InterruptedException e) {\n+\t\t} catch  (InterruptedException e) {\n \t\t\tthrow new RuntimeException(e);\n \t\t}\n \t}\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/330/QueryExecutor.java\nindex 9cab2bff5e..2a4ea8b300 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/330/QueryExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/330/QueryExecutor.java\n@@ -25,7 +25,7 @@ import lombok.extern.slf4j.Slf4j;\n public class QueryExecutor implements Closeable {\n \n \tprivate final ListeningExecutorService pool;\n-\t\n+\n \tpublic QueryExecutor(ConqueryConfig config) {\n \t\tthis.pool = config.getQueries().getExecutionPool().createService(\"Query Executor %d\");\n \t}\n@@ -50,14 +50,14 @@ public class QueryExecutor implements Closeable {\n \t\t}\n \t\tShardResult result = new ShardResult();\n \t\tresult.setQueryId(queryId);\n-\t\t\n+\n \t\tList<ListenableFuture<EntityResult>> futures = plan\n \t\t\t.executeOn(context, entries)\n \t\t\t.map(executor::submit)\n \t\t\t.collect(Collectors.toList());\n-\t\t\n+\n \t\tresult.setFuture(Futures.allAsList(futures));\n-\t\t\n+\n \t\tresult.getFuture().addListener(result::finish, MoreExecutors.directExecutor());\n \t\treturn result;\n \t}\n@@ -70,8 +70,10 @@ public class QueryExecutor implements Closeable {\n \t\t\tif (!success && log.isDebugEnabled()) {\n \t\t\t\tlog.error(\"Timeout has elapsed before termination completed for executor {}\", pool);\n \t\t\t}\n-\t\t} catch (InterruptedException e) {\n-\t\t\tthrow new RuntimeException(e);\n \t\t}\n-\t}\n-}\n+\t\tcatch (InterruptedException e) {\n+\t\t\t\tthrow new RuntimeException(e);\n+\t\t\t}\n+\t\t}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 12
        }
    ]
}