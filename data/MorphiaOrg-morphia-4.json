{
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    @Override\n    protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) {\n        if(replace.getValue() != null) {\n            replace.getValue().encode(getMapper(), writer, encoderContext);\n        } else {\n            replace.getDocument().encode(getMapper(), writer, encoderContext);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/4/ReplaceWithCodec.java\nindex 3fcce36194..89ce151a1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/4/ReplaceWithCodec.java\n@@ -16,7 +16,7 @@ public class ReplaceWithCodec extends StageCodec<ReplaceWith> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) {\n-        if(replace.getValue() != null) {\n+        if (replace.getValue() != null) {\n             replace.getValue().encode(getMapper(), writer, encoderContext);\n         } else {\n             replace.getDocument().encode(getMapper(), writer, encoderContext);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/4/ReplaceWithCodec.java\nindex 3fcce36194..89ce151a1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/4/ReplaceWithCodec.java\n@@ -16,7 +16,7 @@ public class ReplaceWithCodec extends StageCodec<ReplaceWith> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) {\n-        if(replace.getValue() != null) {\n+        if (replace.getValue() != null) {\n             replace.getValue().encode(getMapper(), writer, encoderContext);\n         } else {\n             replace.getDocument().encode(getMapper(), writer, encoderContext);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/4/ReplaceWithCodec.java\nindex 3fcce36194..75bc5a514e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/4/ReplaceWithCodec.java\n@@ -16,10 +16,10 @@ public class ReplaceWithCodec extends StageCodec<ReplaceWith> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) {\n-        if(replace.getValue() != null) {\n+        if (replace.getValue() != null) {\n             replace.getValue().encode(getMapper(), writer, encoderContext);\n         } else {\n             replace.getDocument().encode(getMapper(), writer, encoderContext);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/4/ReplaceWithCodec.java\nindex 3fcce36194..89ce151a1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/4/ReplaceWithCodec.java\n@@ -16,7 +16,7 @@ public class ReplaceWithCodec extends StageCodec<ReplaceWith> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) {\n-        if(replace.getValue() != null) {\n+        if (replace.getValue() != null) {\n             replace.getValue().encode(getMapper(), writer, encoderContext);\n         } else {\n             replace.getDocument().encode(getMapper(), writer, encoderContext);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "18",
                    "column": "121",
                    "severity": "error",
                    "message": "'{' at column 121 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "18",
                    "column": "123",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/4/ReplaceWithCodec.java\nindex 3fcce36194..9b3f90dd59 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/4/ReplaceWithCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/4/ReplaceWithCodec.java\n@@ -15,11 +15,10 @@ public class ReplaceWithCodec extends StageCodec<ReplaceWith> {\n     }\n \n     @Override\n-    protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) {\n-        if(replace.getValue() != null) {\n-            replace.getValue().encode(getMapper(), writer, encoderContext);\n-        } else {\n-            replace.getDocument().encode(getMapper(), writer, encoderContext);\n-        }\n+    protected void encodeStage(final BsonWriter writer, final ReplaceWith replace, final EncoderContext encoderContext) { if(replace.getValue() != null) {\n+        replace.getValue().encode(getMapper(), writer, encoderContext);\n+    } else {\n+        replace.getDocument().encode(getMapper(), writer, encoderContext);\n     }\n }\n+}\n",
            "diff_size": 7
        }
    ]
}