{
    "error_id": "622",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/622/AMWorkerGroupEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/622/AMWorkerGroupEvent.java\nindex 9dded21480..5d408aa289 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/622/AMWorkerGroupEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/622/AMWorkerGroupEvent.java\n@@ -23,25 +23,29 @@ import org.apache.hadoop.yarn.event.AbstractEvent;\n  * Base class of worker group event.\n  */\n public class AMWorkerGroupEvent extends AbstractEvent<AMWorkerGroupEventType> {\n-  /**worker group id*/\n-  private final WorkerGroupId groupId;\n+    /**\n+     * worker group id\n+     */\n+    private final WorkerGroupId groupId;\n \n-  /**\n-   * Create a AMWorkerGroupEvent\n-   * @param type event type\n-   * @param groupId worker group id\n-   */\n-  public AMWorkerGroupEvent(AMWorkerGroupEventType type, WorkerGroupId groupId) {\n-    super(type);\n-    this.groupId = groupId;\n-  }\n+    /**\n+     * Create a AMWorkerGroupEvent\n+     *\n+     * @param type    event type\n+     * @param groupId worker group id\n+     */\n+    public AMWorkerGroupEvent(AMWorkerGroupEventType type, WorkerGroupId groupId) {\n+        super(type);\n+        this.groupId = groupId;\n+    }\n \n-  /**\n-   * Get worker group id\n-   * @return worker group id\n-   */\n-  public WorkerGroupId getGroupId() {\n-    return groupId;\n-  }\n+    /**\n+     * Get worker group id\n+     *\n+     * @return worker group id\n+     */\n+    public WorkerGroupId getGroupId() {\n+        return groupId;\n+    }\n \n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/622/AMWorkerGroupEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/622/AMWorkerGroupEvent.java\nindex 9dded21480..07bcc8b5f4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/622/AMWorkerGroupEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/622/AMWorkerGroupEvent.java\n@@ -44,4 +44,4 @@ public class AMWorkerGroupEvent extends AbstractEvent<AMWorkerGroupEventType> {\n     return groupId;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/622/AMWorkerGroupEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/622/AMWorkerGroupEvent.java\nindex 9dded21480..b2f17bff74 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/622/AMWorkerGroupEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/622/AMWorkerGroupEvent.java\n@@ -22,26 +22,29 @@ import org.apache.hadoop.yarn.event.AbstractEvent;\n /**\n  * Base class of worker group event.\n  */\n+\n public class AMWorkerGroupEvent extends AbstractEvent<AMWorkerGroupEventType> {\n   /**worker group id*/\n-  private final WorkerGroupId groupId;\n+    private final WorkerGroupId groupId;\n \n   /**\n    * Create a AMWorkerGroupEvent\n    * @param type event type\n    * @param groupId worker group id\n    */\n-  public AMWorkerGroupEvent(AMWorkerGroupEventType type, WorkerGroupId groupId) {\n+\n+    public AMWorkerGroupEvent(AMWorkerGroupEventType type, WorkerGroupId groupId) {\n     super(type);\n     this.groupId = groupId;\n-  }\n+    }\n \n   /**\n    * Get worker group id\n    * @return worker group id\n    */\n-  public WorkerGroupId getGroupId() {\n+\n+    public WorkerGroupId getGroupId() {\n     return groupId;\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}