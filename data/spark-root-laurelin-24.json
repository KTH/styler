{
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "5",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * byte ranges from low level I/O\n */\npackage edu.vanderbilt.accre.laurelin.root_proxy;\n\nimport java.io.IOException;\nimport java.nio.ByteBuffer;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/styler/24/ROOTFile.java\nindex 1c7e1a5381..887498e65d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/styler/24/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/intellij/24/ROOTFile.java\nindex 1c7e1a5381..2a164541a7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/intellij/24/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n@@ -17,7 +18,7 @@ public class ROOTFile {\n \n         @Override\n         public ByteBuffer read(long off, long len) throws IOException {\n-            return fh.read(off,  len);\n+            return fh.read(off, len);\n         }\n \n         @Override\n@@ -64,7 +65,7 @@ public class ROOTFile {\n          * This bytebuffer can be a copy of the internal cache\n          */\n         ByteBuffer ret;\n-        try (Event time = profile.startOp(offset, (int)l)) {\n+        try (Event time = profile.startOp(offset, (int) l)) {\n             ret = fh.read(offset, l);\n         } catch (Exception e) {\n             throw new IOException(e);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/naturalize/24/ROOTFile.java\nindex 1c7e1a5381..ba16c2cf4e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/naturalize/24/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n@@ -17,7 +18,7 @@ public class ROOTFile {\n \n         @Override\n         public ByteBuffer read(long off, long len) throws IOException {\n-            return fh.read(off,  len);\n+            return fh.read(off, len);\n         }\n \n         @Override\n@@ -85,4 +86,4 @@ public class ROOTFile {\n     public Cursor getCursor(long off) {\n         return new Cursor(new FileBackedBuf(this), off);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "5",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/codebuff/24/ROOTFile.java\nindex 1c7e1a5381..c455e565c2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/codebuff/24/ROOTFile.java\n@@ -8,6 +8,7 @@ import java.io.IOException;\n import java.nio.ByteBuffer;\n \n public class ROOTFile {\n+\n     public class FileBackedBuf implements BackingBuf {\n         ROOTFile fh;\n \n@@ -17,7 +18,7 @@ public class ROOTFile {\n \n         @Override\n         public ByteBuffer read(long off, long len) throws IOException {\n-            return fh.read(off,  len);\n+            return fh.read(off, len);\n         }\n \n         @Override\n@@ -59,6 +60,7 @@ public class ROOTFile {\n      * users must be copies of the internal ByteBuffers we have. Otherwise\n      * we couldn't change the contents without breaking the users\n      */\n+\n     private ByteBuffer readUnsafe(long offset, long l) throws IOException {\n         /*\n          * This bytebuffer can be a copy of the internal cache\n@@ -85,4 +87,4 @@ public class ROOTFile {\n     public Cursor getCursor(long off) {\n         return new Cursor(new FileBackedBuf(this), off);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "7",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/styler_random/24/ROOTFile.java\nindex 1c7e1a5381..9d30812511 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/styler_random/24/ROOTFile.java\n@@ -2,8 +2,8 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n-package edu.vanderbilt.accre.laurelin.root_proxy;\n \n+package edu.vanderbilt.accre.laurelin.root_proxy;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/styler_three_grams/24/ROOTFile.java\nindex 1c7e1a5381..887498e65d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/errored/1/24/ROOTFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/spark-root-laurelin/styler_three_grams/24/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ]
}