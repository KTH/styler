{
    "error_id": "75",
    "information": {
        "errors": [
            {
                "line": "128",
                "column": "67",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n    return\n        Objects.equals(this.pages, splitDocumentResult.pages) &&\n        Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/75/SplitDocumentResult.java\nindex c818fb7954..b1265be962 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/75/SplitDocumentResult.java\n@@ -125,7 +125,7 @@ public class SplitDocumentResult {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n+    SplitDocumentResult splitDocumentResult = (SplitDocumentResult) o;\n     return\n         Objects.equals(this.pages, splitDocumentResult.pages) &&\n         Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/75/SplitDocumentResult.java\nindex c818fb7954..7e38157e33 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/75/SplitDocumentResult.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,89 +50,93 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Result of splitting document.\")\n public class SplitDocumentResult {\n-    @SerializedName(\"Pages\")\n-    private List<FileLink> pages = null;\n+  @SerializedName(\"Pages\")\n+  private List<FileLink> pages = null;\n \n-    @SerializedName(\"SourceDocument\")\n-    private FileLink sourceDocument = null;\n+  @SerializedName(\"SourceDocument\")\n+  private FileLink sourceDocument = null;\n \n-    @SerializedName(\"ZippedPages\")\n-    private FileLink zippedPages = null;\n-    public SplitDocumentResult pages(List<FileLink> pages) {\n-        this.pages = pages;\n-        return this;\n-    }\n+  @SerializedName(\"ZippedPages\")\n+  private FileLink zippedPages = null;\n \n-    public SplitDocumentResult addPagesItem(FileLink pagesItem) {\n-        if (this.pages == null) {\n-            this.pages = new ArrayList<FileLink>();\n-        }\n-        this.pages.add(pagesItem);\n-        return this;\n-    }\n+  public SplitDocumentResult pages(List<FileLink> pages) {\n+    this.pages = pages;\n+    return this;\n+  }\n \n-    /**\n-     * Gets or sets array of pages.\n-    * @return pages\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets array of pages.\")\n-    public List<FileLink> getPages() {\n-        return pages;\n+  public SplitDocumentResult addPagesItem(FileLink pagesItem) {\n+    if (this.pages == null) {\n+      this.pages = new ArrayList<FileLink>();\n     }\n+    this.pages.add(pagesItem);\n+    return this;\n+  }\n \n-    public void setPages(List<FileLink> pages) {\n-        this.pages = pages;\n-    }\n+  /**\n+   * Gets or sets array of pages.\n+   *\n+   * @return pages\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets array of pages.\")\n+  public List<FileLink> getPages() {\n+    return pages;\n+  }\n \n-    public SplitDocumentResult sourceDocument(FileLink sourceDocument) {\n-        this.sourceDocument = sourceDocument;\n-        return this;\n-    }\n+  public void setPages(List<FileLink> pages) {\n+    this.pages = pages;\n+  }\n \n-    /**\n-     * Gets or sets linkt to the source document.\n-    * @return sourceDocument\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets linkt to the source document.\")\n-    public FileLink getSourceDocument() {\n-        return sourceDocument;\n-    }\n+  public SplitDocumentResult sourceDocument(FileLink sourceDocument) {\n+    this.sourceDocument = sourceDocument;\n+    return this;\n+  }\n \n-    public void setSourceDocument(FileLink sourceDocument) {\n-        this.sourceDocument = sourceDocument;\n-    }\n+  /**\n+   * Gets or sets linkt to the source document.\n+   *\n+   * @return sourceDocument\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets linkt to the source document.\")\n+  public FileLink getSourceDocument() {\n+    return sourceDocument;\n+  }\n \n-    public SplitDocumentResult zippedPages(FileLink zippedPages) {\n-        this.zippedPages = zippedPages;\n-        return this;\n-    }\n+  public void setSourceDocument(FileLink sourceDocument) {\n+    this.sourceDocument = sourceDocument;\n+  }\n \n-    /**\n-     * Gets or sets link to the file archive with pages.\n-    * @return zippedPages\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets link to the file archive with pages.\")\n-    public FileLink getZippedPages() {\n-        return zippedPages;\n-    }\n+  public SplitDocumentResult zippedPages(FileLink zippedPages) {\n+    this.zippedPages = zippedPages;\n+    return this;\n+  }\n \n-    public void setZippedPages(FileLink zippedPages) {\n-        this.zippedPages = zippedPages;\n-    }\n+  /**\n+   * Gets or sets link to the file archive with pages.\n+   *\n+   * @return zippedPages\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets link to the file archive with pages.\")\n+  public FileLink getZippedPages() {\n+    return zippedPages;\n+  }\n+\n+  public void setZippedPages(FileLink zippedPages) {\n+    this.zippedPages = zippedPages;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    SplitDocumentResult splitDocumentResult = (SplitDocumentResult) o;\n     return\n         Objects.equals(this.pages, splitDocumentResult.pages) &&\n-        Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n-        Objects.equals(this.zippedPages, splitDocumentResult.zippedPages);\n+            Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n+            Objects.equals(this.zippedPages, splitDocumentResult.zippedPages);\n   }\n \n   @Override\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "130",
                    "column": "63",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/75/SplitDocumentResult.java\nindex c818fb7954..e33991bd22 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/75/SplitDocumentResult.java\n@@ -55,10 +55,11 @@ public class SplitDocumentResult {\n \n     @SerializedName(\"ZippedPages\")\n     private FileLink zippedPages = null;\n-    public SplitDocumentResult pages(List<FileLink> pages) {\n+\n+public SplitDocumentResult pages(List<FileLink> pages) {\n         this.pages = pages;\n         return this;\n-    }\n+  }\n \n     public SplitDocumentResult addPagesItem(FileLink pagesItem) {\n         if (this.pages == null) {\n@@ -121,13 +122,13 @@ public class SplitDocumentResult {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n-    return\n-        Objects.equals(this.pages, splitDocumentResult.pages) &&\n+\n+SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n+    return Objects.equals(this.pages, splitDocumentResult.pages) &&\n         Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n         Objects.equals(this.zippedPages, splitDocumentResult.zippedPages);\n   }\n@@ -158,4 +159,4 @@ public class SplitDocumentResult {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/75/SplitDocumentResult.java\nindex c818fb7954..f66884e8d1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/75/SplitDocumentResult.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Result of splitting document.\n  */\n+\n+\n @ApiModel(description = \"Result of splitting document.\")\n+\n public class SplitDocumentResult {\n     @SerializedName(\"Pages\")\n     private List<FileLink> pages = null;\n@@ -55,90 +58,108 @@ public class SplitDocumentResult {\n \n     @SerializedName(\"ZippedPages\")\n     private FileLink zippedPages = null;\n+\n     public SplitDocumentResult pages(List<FileLink> pages) {\n-        this.pages = pages;\n-        return this;\n+    this.pages = pages;\n+    return this;\n     }\n \n+\n     public SplitDocumentResult addPagesItem(FileLink pagesItem) {\n-        if (this.pages == null) {\n-            this.pages = new ArrayList<FileLink>();\n-        }\n-        this.pages.add(pagesItem);\n-        return this;\n+    if (this.pages == null) {\n+        this.pages = new ArrayList<FileLink>();\n+    }\n+    this.pages.add(pagesItem);\n+    return this;\n     }\n \n     /**\n      * Gets or sets array of pages.\n     * @return pages\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets array of pages.\")\n     public List<FileLink> getPages() {\n-        return pages;\n+    return pages;\n     }\n \n+\n     public void setPages(List<FileLink> pages) {\n-        this.pages = pages;\n+    this.pages = pages;\n     }\n \n+\n     public SplitDocumentResult sourceDocument(FileLink sourceDocument) {\n-        this.sourceDocument = sourceDocument;\n-        return this;\n+    this.sourceDocument = sourceDocument;\n+    return this;\n     }\n \n     /**\n      * Gets or sets linkt to the source document.\n     * @return sourceDocument\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets linkt to the source document.\")\n     public FileLink getSourceDocument() {\n-        return sourceDocument;\n+    return sourceDocument;\n     }\n \n+\n     public void setSourceDocument(FileLink sourceDocument) {\n-        this.sourceDocument = sourceDocument;\n+    this.sourceDocument = sourceDocument;\n     }\n \n+\n     public SplitDocumentResult zippedPages(FileLink zippedPages) {\n-        this.zippedPages = zippedPages;\n-        return this;\n+    this.zippedPages = zippedPages;\n+    return this;\n     }\n \n     /**\n      * Gets or sets link to the file archive with pages.\n     * @return zippedPages\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets link to the file archive with pages.\")\n     public FileLink getZippedPages() {\n-        return zippedPages;\n+    return zippedPages;\n     }\n \n+\n     public void setZippedPages(FileLink zippedPages) {\n-        this.zippedPages = zippedPages;\n+    this.zippedPages = zippedPages;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n-    return\n-        Objects.equals(this.pages, splitDocumentResult.pages) &&\n-        Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n-        Objects.equals(this.zippedPages, splitDocumentResult.zippedPages);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n+\n+        SplitDocumentResult splitDocumentResult = (SplitDocumentResult) o;\n+        return Objects.equals(this.pages, splitDocumentResult.pages) &&\n+            Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n+            Objects.equals(this.zippedPages, splitDocumentResult.zippedPages);\n+    }\n+\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(pages, sourceDocument, zippedPages);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class SplitDocumentResult {\\n\");\n     sb.append(\"    pages: \").append(toIndentedString(pages)).append(\"\\n\");\n@@ -146,16 +167,19 @@ public class SplitDocumentResult {\n     sb.append(\"    zippedPages: \").append(toIndentedString(zippedPages)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/75/SplitDocumentResult.java\nindex c818fb7954..b1265be962 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/75/SplitDocumentResult.java\n@@ -125,7 +125,7 @@ public class SplitDocumentResult {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n+    SplitDocumentResult splitDocumentResult = (SplitDocumentResult) o;\n     return\n         Objects.equals(this.pages, splitDocumentResult.pages) &&\n         Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/75/SplitDocumentResult.java\nindex c818fb7954..63762a6f94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/75/SplitDocumentResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/75/SplitDocumentResult.java\n@@ -125,7 +125,8 @@ public class SplitDocumentResult {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    SplitDocumentResult splitDocumentResult = (SplitDocumentResult)o;\n+    SplitDocumentResult splitDocumentResult = (SplitDocumentResult\n+) o;\n     return\n         Objects.equals(this.pages, splitDocumentResult.pages) &&\n         Objects.equals(this.sourceDocument, splitDocumentResult.sourceDocument) &&\n",
            "diff_size": 2
        }
    ]
}