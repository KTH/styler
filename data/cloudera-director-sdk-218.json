{
    "error_id": "218",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/218/UserManagementStatus.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/218/UserManagementStatus.java\nindex b13be1062c..32a76164a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/218/UserManagementStatus.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/218/UserManagementStatus.java\n@@ -20,98 +20,111 @@ package com.cloudera.director.client.v12.model;\n \n \n public class UserManagementStatus {\n-  /* Whether local user management is enabled */\n-  private Boolean localUserManagementEnabled;\n-  /* User source */\n-  private String userSource;\n-  public UserManagementStatus() { }\n-\n-  private UserManagementStatus(Boolean localUserManagementEnabled, String userSource) {\n-    this.localUserManagementEnabled = localUserManagementEnabled;\n-    this.userSource = userSource;\n-  }\n-\n-  private UserManagementStatus(UserManagementStatusBuilder builder) {\n-    this.localUserManagementEnabled = builder.localUserManagementEnabled;\n-    this.userSource = builder.userSource;\n-  }\n-\n-  public static UserManagementStatusBuilder builder() {\n-    return new UserManagementStatusBuilder();\n-  }\n-\n-  public static class UserManagementStatusBuilder {\n-    private Boolean localUserManagementEnabled = null;\n-    private String userSource = null;\n-\n-    public UserManagementStatusBuilder localUserManagementEnabled(Boolean localUserManagementEnabled) {\n-      this.localUserManagementEnabled = localUserManagementEnabled;\n-      return this;\n+    /* Whether local user management is enabled */\n+    private Boolean localUserManagementEnabled;\n+    /* User source */\n+    private String userSource;\n+\n+    public UserManagementStatus() {\n+    }\n+\n+    private UserManagementStatus(Boolean localUserManagementEnabled, String userSource) {\n+        this.localUserManagementEnabled = localUserManagementEnabled;\n+        this.userSource = userSource;\n+    }\n+\n+    private UserManagementStatus(UserManagementStatusBuilder builder) {\n+        this.localUserManagementEnabled = builder.localUserManagementEnabled;\n+        this.userSource = builder.userSource;\n+    }\n+\n+    public static UserManagementStatusBuilder builder() {\n+        return new UserManagementStatusBuilder();\n+    }\n+\n+    public static class UserManagementStatusBuilder {\n+        private Boolean localUserManagementEnabled = null;\n+        private String userSource = null;\n+\n+        public UserManagementStatusBuilder localUserManagementEnabled(Boolean localUserManagementEnabled) {\n+            this.localUserManagementEnabled = localUserManagementEnabled;\n+            return this;\n+        }\n+\n+        public UserManagementStatusBuilder userSource(String userSource) {\n+            this.userSource = userSource;\n+            return this;\n+        }\n+\n+        public UserManagementStatus build() {\n+            return new UserManagementStatus(this);\n+        }\n+    }\n+\n+    public UserManagementStatusBuilder toBuilder() {\n+        return builder()\n+            .localUserManagementEnabled(localUserManagementEnabled)\n+            .userSource(userSource)\n+            ;\n+    }\n+\n+    public Boolean getLocalUserManagementEnabled() {\n+        return localUserManagementEnabled;\n+    }\n+\n+    public void setLocalUserManagementEnabled(Boolean localUserManagementEnabled) {\n+        this.localUserManagementEnabled = localUserManagementEnabled;\n+    }\n+\n+    public String getUserSource() {\n+        return userSource;\n+    }\n+\n+    public void setUserSource(String userSource) {\n+        this.userSource = userSource;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        UserManagementStatus other = (UserManagementStatus) o; // NOPMD\n+\n+        if (localUserManagementEnabled != null ?\n+            !localUserManagementEnabled.equals(other.localUserManagementEnabled) :\n+            other.localUserManagementEnabled != null) {\n+            return false;\n+        }\n+        if (userSource != null ?\n+            !userSource.equals(other.userSource) :\n+            other.userSource != null) {\n+            return false;\n+        }\n+        return true;\n     }\n \n-    public UserManagementStatusBuilder userSource(String userSource) {\n-      this.userSource = userSource;\n-      return this;\n+    @Override\n+    public int hashCode() {\n+        int result = 0;\n+        result = 31 * result + (localUserManagementEnabled != null ? localUserManagementEnabled.hashCode() : 0);\n+        result = 31 * result + (userSource != null ? userSource.hashCode() : 0);\n+        return result;\n     }\n \n-    public UserManagementStatus build() {\n-      return new UserManagementStatus(this);\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        String newLine = System.getProperty(\"line.separator\");\n+        sb.append(\"class UserManagementStatus {\" + newLine);\n+        sb.append(\"  localUserManagementEnabled: \").append(localUserManagementEnabled).append(newLine);\n+        sb.append(\"  userSource: \").append(userSource).append(newLine);\n+        sb.append(\"}\" + newLine);\n+        return sb.toString();\n     }\n-  }\n-\n-  public UserManagementStatusBuilder toBuilder() {\n-    return builder()\n-      .localUserManagementEnabled(localUserManagementEnabled)\n-      .userSource(userSource)\n-      ;\n-  }\n-  public Boolean getLocalUserManagementEnabled() {\n-    return localUserManagementEnabled;\n-  }\n-  public void setLocalUserManagementEnabled(Boolean localUserManagementEnabled) {\n-    this.localUserManagementEnabled = localUserManagementEnabled;\n-  }\n-\n-  public String getUserSource() {\n-    return userSource;\n-  }\n-  public void setUserSource(String userSource) {\n-    this.userSource = userSource;\n-  }\n-\n-  @Override\n-  public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    UserManagementStatus other = (UserManagementStatus) o; // NOPMD\n-\n-    if (localUserManagementEnabled != null ?\n-        !localUserManagementEnabled.equals(other.localUserManagementEnabled) :\n-        other.localUserManagementEnabled != null) return false;\n-    if (userSource != null ?\n-        !userSource.equals(other.userSource) :\n-        other.userSource != null) return false;\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int result = 0;\n-    result = 31 * result + (localUserManagementEnabled != null ? localUserManagementEnabled.hashCode() : 0);\n-    result = 31 * result + (userSource != null ? userSource.hashCode() : 0);\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString()  {\n-    StringBuilder sb = new StringBuilder();\n-    String newLine = System.getProperty(\"line.separator\");\n-    sb.append(\"class UserManagementStatus {\" + newLine);\n-    sb.append(\"  localUserManagementEnabled: \").append(localUserManagementEnabled).append(newLine);\n-    sb.append(\"  userSource: \").append(userSource).append(newLine);\n-    sb.append(\"}\" + newLine);\n-    return sb.toString();\n-  }\n }\n \n",
            "diff_size": 157
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/218/UserManagementStatus.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/218/UserManagementStatus.java\nindex b13be1062c..c66ba83517 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/218/UserManagementStatus.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/218/UserManagementStatus.java\n@@ -1,30 +1,15 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v12.model;\n \n-\n public class UserManagementStatus {\n   /* Whether local user management is enabled */\n   private Boolean localUserManagementEnabled;\n   /* User source */\n   private String userSource;\n-  public UserManagementStatus() { }\n+\n+public UserManagementStatus() { }\n \n   private UserManagementStatus(Boolean localUserManagementEnabled, String userSource) {\n     this.localUserManagementEnabled = localUserManagementEnabled;\n@@ -41,7 +26,8 @@ public class UserManagementStatus {\n   }\n \n   public static class UserManagementStatusBuilder {\n-    private Boolean localUserManagementEnabled = null;\n+\n+  private Boolean localUserManagementEnabled = null;\n     private String userSource = null;\n \n     public UserManagementStatusBuilder localUserManagementEnabled(Boolean localUserManagementEnabled) {\n@@ -60,12 +46,11 @@ public class UserManagementStatus {\n   }\n \n   public UserManagementStatusBuilder toBuilder() {\n-    return builder()\n-      .localUserManagementEnabled(localUserManagementEnabled)\n-      .userSource(userSource)\n-      ;\n+    return builder().localUserManagementEnabled(localUserManagementEnabled)\n+      .userSource(userSource);\n   }\n-  public Boolean getLocalUserManagementEnabled() {\n+\n+public Boolean getLocalUserManagementEnabled() {\n     return localUserManagementEnabled;\n   }\n   public void setLocalUserManagementEnabled(Boolean localUserManagementEnabled) {\n@@ -82,16 +67,16 @@ public class UserManagementStatus {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    UserManagementStatus other = (UserManagementStatus) o;\n \n-    UserManagementStatus other = (UserManagementStatus) o; // NOPMD\n+// NOPMD\n \n-    if (localUserManagementEnabled != null ?\n-        !localUserManagementEnabled.equals(other.localUserManagementEnabled) :\n-        other.localUserManagementEnabled != null) return false;\n-    if (userSource != null ?\n-        !userSource.equals(other.userSource) :\n-        other.userSource != null) return false;\n+    if (localUserManagementEnabled != null ?!localUserManagementEnabled.equals(other.localUserManagementEnabled) : other.localUserManagementEnabled != null) return false;\n+\n+if (userSource != null ?!userSource.equals(other.userSource) : other.userSource != null) return false;\n     return true;\n   }\n \n@@ -104,7 +89,7 @@ public class UserManagementStatus {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class UserManagementStatus {\" + newLine);\n@@ -113,5 +98,4 @@ public class UserManagementStatus {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "30",
                    "column": "35",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "30",
                    "column": "36",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "column": "55",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "112",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "62",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "101",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "69",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/218/UserManagementStatus.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/218/UserManagementStatus.java\nindex b13be1062c..6e7b666d97 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/218/UserManagementStatus.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/218/UserManagementStatus.java\n@@ -18,93 +18,101 @@\n \n package com.cloudera.director.client.v12.model;\n \n-\n public class UserManagementStatus {\n   /* Whether local user management is enabled */\n-  private Boolean localUserManagementEnabled;\n+\n+    private Boolean localUserManagementEnabled;\n   /* User source */\n-  private String userSource;\n-  public UserManagementStatus() { }\n \n-  private UserManagementStatus(Boolean localUserManagementEnabled, String userSource) {\n-    this.localUserManagementEnabled = localUserManagementEnabled;\n-    this.userSource = userSource;\n-  }\n+    private String userSource;\n \n-  private UserManagementStatus(UserManagementStatusBuilder builder) {\n-    this.localUserManagementEnabled = builder.localUserManagementEnabled;\n-    this.userSource = builder.userSource;\n-  }\n \n-  public static UserManagementStatusBuilder builder() {\n+    public UserManagementStatus() {}\n+\n+    private UserManagementStatus(Boolean localUserManagementEnabled, String userSource) {\n+                                                                                        this.localUserManagementEnabled = localUserManagementEnabled;\n+                                                                                        this.userSource = userSource;\n+                                  }\n+\n+    private UserManagementStatus(UserManagementStatusBuilder builder) {\n+                                                                      this.localUserManagementEnabled = builder.localUserManagementEnabled;\n+                                                                      this.userSource = builder.userSource;\n+                                  }\n+\n+    public static UserManagementStatusBuilder builder() {\n     return new UserManagementStatusBuilder();\n-  }\n+    }\n+\n+    public static class UserManagementStatusBuilder {\n \n-  public static class UserManagementStatusBuilder {\n     private Boolean localUserManagementEnabled = null;\n+\n     private String userSource = null;\n \n     public UserManagementStatusBuilder localUserManagementEnabled(Boolean localUserManagementEnabled) {\n-      this.localUserManagementEnabled = localUserManagementEnabled;\n-      return this;\n+        this.localUserManagementEnabled = localUserManagementEnabled;\n+        return this;\n     }\n \n     public UserManagementStatusBuilder userSource(String userSource) {\n-      this.userSource = userSource;\n-      return this;\n+        this.userSource = userSource;\n+        return this;\n     }\n \n     public UserManagementStatus build() {\n-      return new UserManagementStatus(this);\n+        return new UserManagementStatus(this);\n     }\n-  }\n-\n-  public UserManagementStatusBuilder toBuilder() {\n-    return builder()\n-      .localUserManagementEnabled(localUserManagementEnabled)\n-      .userSource(userSource)\n-      ;\n-  }\n-  public Boolean getLocalUserManagementEnabled() {\n+    }\n+\n+    public UserManagementStatusBuilder toBuilder() {\n+    return builder().localUserManagementEnabled(localUserManagementEnabled)\n+                    .userSource(userSource);\n+    }\n+\n+    public Boolean getLocalUserManagementEnabled() {\n     return localUserManagementEnabled;\n-  }\n-  public void setLocalUserManagementEnabled(Boolean localUserManagementEnabled) {\n+    }\n+\n+    public void setLocalUserManagementEnabled(Boolean localUserManagementEnabled) {\n     this.localUserManagementEnabled = localUserManagementEnabled;\n-  }\n+    }\n \n-  public String getUserSource() {\n+    public String getUserSource() {\n     return userSource;\n-  }\n-  public void setUserSource(String userSource) {\n+    }\n+\n+    public void setUserSource(String userSource) {\n     this.userSource = userSource;\n-  }\n+    }\n+\n \n-  @Override\n-  public boolean equals(Object o) {\n+    @Override\n+    public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n \n-    UserManagementStatus other = (UserManagementStatus) o; // NOPMD\n+    if (o == null ||\n+        getClass() != o.getClass()) return false;\n+\n+    UserManagementStatus other = (UserManagementStatus)o; // NOPMD\n \n-    if (localUserManagementEnabled != null ?\n-        !localUserManagementEnabled.equals(other.localUserManagementEnabled) :\n-        other.localUserManagementEnabled != null) return false;\n-    if (userSource != null ?\n-        !userSource.equals(other.userSource) :\n-        other.userSource != null) return false;\n+    if (localUserManagementEnabled != null?!localUserManagementEnabled.equals(other.localUserManagementEnabled): other.localUserManagementEnabled != null) return false;\n+\n+    if (userSource != null?!userSource.equals(other.userSource): other.userSource != null) return false;\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (localUserManagementEnabled != null ? localUserManagementEnabled.hashCode() : 0);\n-    result = 31 * result + (userSource != null ? userSource.hashCode() : 0);\n+    result = 31 *result + (localUserManagementEnabled != null? localUserManagementEnabled.hashCode(): 0);\n+    result = 31 *result + (userSource != null? userSource.hashCode(): 0);\n     return result;\n-  }\n+    }\n \n-  @Override\n-  public String toString()  {\n+\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class UserManagementStatus {\" + newLine);\n@@ -112,6 +120,5 @@ public class UserManagementStatus {\n     sb.append(\"  userSource: \").append(userSource).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n-  }\n-}\n-\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 81
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}