{
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "582",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "            realValues = operationService.createStoragePassword(attributeValues);\n        }\n        \n        if (realValues.length == 1) {\n            return new MutationSpec(type, realAttributeName, realValues[0]);\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/47/CouchbaseEntryManager.java\nindex 2e93eb1788..9a5ed2fb89 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/47/CouchbaseEntryManager.java\n@@ -579,7 +579,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/47/CouchbaseEntryManager.java\nindex 2e93eb1788..b311897334 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/47/CouchbaseEntryManager.java\n@@ -108,7 +108,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     @Override\n     protected <T> void updateMergeChanges(T entry, boolean isSchemaUpdate, Class<?> entryClass, Map<String, AttributeData> attributesFromDbMap,\n-            List<AttributeDataModification> attributeDataModifications) {\n+                                          List<AttributeDataModification> attributeDataModifications) {\n         // Update object classes if entry contains custom object classes\n         if (!isSchemaUpdate) {\n             String[] objectClasses = getObjectClasses(entry, entryClass);\n@@ -116,7 +116,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n             if (!Arrays.equals(objectClassesFromDb, objectClasses)) {\n                 attributeDataModifications.add(new AttributeDataModification(AttributeModificationType.REPLACE,\n-                        new AttributeData(OBJECT_CLASS, objectClasses), new AttributeData(OBJECT_CLASS, objectClassesFromDb)));\n+                    new AttributeData(OBJECT_CLASS, objectClasses), new AttributeData(OBJECT_CLASS, objectClassesFromDb)));\n             }\n         }\n     }\n@@ -240,13 +240,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n                             if (removeValues.size() > 0) {\n                                 MutationSpec removeModification = createModification(Mutation.DELETE, attributeName,\n-                                        removeValues.toArray(new String[removeValues.size()]));\n+                                    removeValues.toArray(new String[removeValues.size()]));\n                                 modifications.add(removeModification);\n                             }\n \n                             if (addValues.size() > 0) {\n                                 MutationSpec addModification = createModification(Mutation.DICT_ADD, attributeName,\n-                                        addValues.toArray(new String[addValues.size()]));\n+                                    addValues.toArray(new String[addValues.size()]));\n                                 modifications.add(addModification);\n                             }\n                         }\n@@ -319,13 +319,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     @Override\n     public <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-            BatchOperation<T> batchOperation, int start, int count, int chunkSize) {\n+                                   BatchOperation<T> batchOperation, int start, int count, int chunkSize) {\n         if (StringHelper.isEmptyString(baseDN)) {\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n         PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation,\n-                false, start, count, chunkSize);\n+            false, start, count, chunkSize);\n         if (searchResult.getEntriesCount() == 0) {\n             return new ArrayList<T>(0);\n         }\n@@ -337,13 +337,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     @Override\n     public <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy,\n-            SortOrder sortOrder, int start, int count, int chunkSize) {\n+                                               SortOrder sortOrder, int start, int count, int chunkSize) {\n         if (StringHelper.isEmptyString(baseDN)) {\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n         PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, SearchScope.SUB, ldapReturnAttributes, sortBy, sortOrder,\n-                null, true, start, count, chunkSize);\n+            null, true, start, count, chunkSize);\n \n         PagedResult<T> result = new PagedResult<T>();\n         result.setEntriesCount(searchResult.getEntriesCount());\n@@ -362,8 +362,9 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     protected <T> PagedResult<JsonObject> findEntriesImpl(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope,\n-            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start,\n-            int count, int chunkSize) {\n+                                                          String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder,\n+                                                          BatchOperation<T> batchOperation, boolean returnCount, int start,\n+                                                          int count, int chunkSize) {\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n@@ -388,9 +389,9 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             Sort requestedSort = buildSort(sortBy, sortOrder);\n \n             if (ArrayHelper.isEmpty(defaultSort)) {\n-                defaultSort = new Sort[] { requestedSort };\n+                defaultSort = new Sort[] {requestedSort};\n             } else {\n-                defaultSort = ArrayHelper.arrayMerge(new Sort[] { requestedSort }, defaultSort);\n+                defaultSort = ArrayHelper.arrayMerge(new Sort[] {requestedSort}, defaultSort);\n             }\n         }\n \n@@ -402,7 +403,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             }\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n             searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), scope, currentLdapReturnAttributes,\n-                    defaultSort, batchOperationWraper, returnCount, start, count, chunkSize);\n+                defaultSort, batchOperationWraper, returnCount, start, count, chunkSize);\n \n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entries with baseDN: %s, filter: %s\", baseDN, searchFilter));\n@@ -432,7 +433,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         try {\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n             searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    null, false, 1, 1, 0);\n+                null, false, 1, 1, 0);\n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter));\n             }\n@@ -447,13 +448,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n         List<PropertyAnnotation> propertiesAnnotations = getEntryPropertyAnnotations(entryClass);\n         List<T> entries = createEntities(entryClass, propertiesAnnotations, keyWithInum,\n-                searchResult.getEntries().toArray(new JsonObject[searchResult.getEntriesCount()]));\n+            searchResult.getEntries().toArray(new JsonObject[searchResult.getEntriesCount()]));\n \n         return entries;\n     }\n \n     protected <T> List<T> createEntities(Class<T> entryClass, List<PropertyAnnotation> propertiesAnnotations, ParsedKey baseDn,\n-            JsonObject... searchResultEntries) {\n+                                         JsonObject... searchResultEntries) {\n         List<T> result = new ArrayList<T>(searchResultEntries.length);\n         Map<String, List<AttributeData>> entriesAttributes = new LinkedHashMap<String, List<AttributeData>>(100);\n \n@@ -500,7 +501,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             if (attributeObject instanceof JsonArray) {\n                 attributeValueStrings = ((JsonArray) attributeObject).toList().toArray(NO_STRINGS);\n             } else {\n-                attributeValueStrings = new String[] { attributeObject.toString() };\n+                attributeValueStrings = new String[] {attributeObject.toString()};\n             }\n \n             AttributeData tmpAttribute = new AttributeData(attributeName, attributeValueStrings);\n@@ -515,7 +516,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         try {\n             Filter filter = Filter.createEqualityFilter(CouchbaseOperationService.UID, userName);\n             PagedResult<JsonObject> searchResult = operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(filter),\n-                    SearchScope.SUB, null, null, null, false, 0, 1, 1);\n+                SearchScope.SUB, null, null, null, false, 0, 1, 1);\n             if ((searchResult == null) || (searchResult.getEntriesCount() != 1)) {\n                 return false;\n             }\n@@ -548,7 +549,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n-        String[] ldapReturnAttributes = new String[] { \"\" }; // Don't load attributes\n+        String[] ldapReturnAttributes = new String[] {\"\"}; // Don't load attributes\n \n         // Find entries\n         Filter searchFilter;\n@@ -563,10 +564,10 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         try {\n             CouchbaseBatchOperationWraper<T> batchOperationWraper = new CouchbaseBatchOperationWraper<T>(batchOperation);\n             operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    batchOperationWraper, false, 0, 0, 100);\n+                batchOperationWraper, false, 0, 0, 100);\n         } catch (Exception ex) {\n             throw new EntryPersistenceException(\n-                    String.format(\"Failed to calucalte count of entries with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n+                String.format(\"Failed to calucalte count of entries with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n         }\n \n         return batchOperation.getCountEntries();\n@@ -579,7 +580,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "327",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "364",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "432",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/47/CouchbaseEntryManager.java\nindex 2e93eb1788..950000fcf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/47/CouchbaseEntryManager.java\n@@ -324,8 +324,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n-        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation,\n-                false, start, count, chunkSize);\n+        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation, false, start, count, chunkSize);\n         if (searchResult.getEntriesCount() == 0) {\n             return new ArrayList<T>(0);\n         }\n@@ -362,8 +361,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     protected <T> PagedResult<JsonObject> findEntriesImpl(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope,\n-            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start,\n-            int count, int chunkSize) {\n+            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start, int count, int chunkSize) {\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n@@ -431,8 +429,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         PagedResult<JsonObject> searchResult = null;\n         try {\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n-            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    null, false, 1, 1, 0);\n+            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null, null, false, 1, 1, 0);\n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter));\n             }\n@@ -579,8 +576,8 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n-        if (realValues.length == 1) {\n+\n+if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n \n@@ -671,4 +668,4 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "312",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "339",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "371",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 288).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "410",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "441",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "457",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "462",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "576",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/47/CouchbaseEntryManager.java\nindex 2e93eb1788..172174c835 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/47/CouchbaseEntryManager.java\n@@ -17,7 +17,6 @@ import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n-\n import org.gluu.persist.couchbase.model.ParsedKey;\n import org.gluu.persist.couchbase.operation.CouchbaseOperationService;\n import org.gluu.persist.couchbase.operation.impl.CouchbaseConnectionProvider;\n@@ -42,7 +41,6 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.xdi.util.ArrayHelper;\n import org.xdi.util.StringHelper;\n-\n import com.couchbase.client.core.message.kv.subdoc.multi.Mutation;\n import com.couchbase.client.java.document.json.JsonArray;\n import com.couchbase.client.java.document.json.JsonObject;\n@@ -55,15 +53,14 @@ import com.couchbase.client.java.subdoc.MutationSpec;\n  *\n  * @author Yuriy Movchan Date: 05/14/2018\n  */\n+\n+\n public class CouchbaseEntryManager extends BaseEntryManager implements Serializable {\n \n     private static final long serialVersionUID = 2127241817126412574L;\n-\n     private static final Logger LOG = LoggerFactory.getLogger(CouchbaseConnectionProvider.class);\n-\n     private static final CouchbaseFilterConverter FILTER_CONVERTER = new CouchbaseFilterConverter();\n     private static final CouchbaseKeyConverter KEY_CONVERTER = new CouchbaseKeyConverter();\n-\n     private CouchbaseOperationsServiceImpl operationService;\n     private List<DeleteNotifier> subscribers;\n \n@@ -99,6 +96,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     public <T> T merge(T entry) {\n         Class<?> entryClass = entry.getClass();\n         checkEntryClass(entryClass, true);\n+\n         if (isLdapSchemaEntry(entryClass)) {\n             throw new UnsupportedOperationException(\"Server doesn't support dynamic schema modifications\");\n         } else {\n@@ -107,16 +105,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     @Override\n-    protected <T> void updateMergeChanges(T entry, boolean isSchemaUpdate, Class<?> entryClass, Map<String, AttributeData> attributesFromDbMap,\n-            List<AttributeDataModification> attributeDataModifications) {\n+    protected <T> void updateMergeChanges(T entry, boolean isSchemaUpdate, Class<?> entryClass, Map<String, AttributeData> attributesFromDbMap, List<AttributeDataModification> attributeDataModifications) {\n         // Update object classes if entry contains custom object classes\n         if (!isSchemaUpdate) {\n             String[] objectClasses = getObjectClasses(entry, entryClass);\n             String[] objectClassesFromDb = attributesFromDbMap.get(OBJECT_CLASS.toLowerCase()).getValues();\n-\n             if (!Arrays.equals(objectClassesFromDb, objectClasses)) {\n-                attributeDataModifications.add(new AttributeDataModification(AttributeModificationType.REPLACE,\n-                        new AttributeData(OBJECT_CLASS, objectClasses), new AttributeData(OBJECT_CLASS, objectClassesFromDb)));\n+                attributeDataModifications.add(new AttributeDataModification(AttributeModificationType.REPLACE, new AttributeData(OBJECT_CLASS, objectClasses), new AttributeData(OBJECT_CLASS, objectClassesFromDb)));\n             }\n         }\n     }\n@@ -125,14 +120,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     public void remove(Object entry) {\n         Class<?> entryClass = entry.getClass();\n         checkEntryClass(entryClass, true);\n+\n         if (isLdapSchemaEntry(entryClass)) {\n             throw new UnsupportedOperationException(\"Server doesn't support dynamic schema modifications\");\n         }\n \n         Object dnValue = getDNValue(entry, entryClass);\n-\n         LOG.debug(\"LDAP entry to remove: '{}'\", dnValue.toString());\n-\n         remove(dnValue.toString());\n     }\n \n@@ -142,12 +136,12 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         for (AttributeData attribute : attributes) {\n             String attributeName = attribute.getName();\n             String[] attributeValues = attribute.getValues();\n-\n             if (ArrayHelper.isNotEmpty(attributeValues) && StringHelper.isNotEmpty(attributeValues[0])) {\n                 String[] realValues = attributeValues;\n                 if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, attributeName)) {\n                     realValues = operationService.createStoragePassword(attributeValues);\n                 }\n+\n                 if (realValues.length > 0) {\n                     jsonObject.put(attributeName, JsonArray.from(realValues));\n                 } else {\n@@ -176,7 +170,6 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             for (AttributeDataModification attributeDataModification : attributeDataModifications) {\n                 AttributeData attribute = attributeDataModification.getAttribute();\n                 AttributeData oldAttribute = attributeDataModification.getOldAttribute();\n-\n                 String attributeName = null;\n                 String[] attributeValues = null;\n                 if (attribute != null) {\n@@ -203,23 +196,22 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n                         } else {\n                             String[] oldValues = ArrayHelper.arrayClone(oldAttributeValues);\n                             String[] newValues = ArrayHelper.arrayClone(attributeValues);\n-\n                             Arrays.sort(oldValues);\n                             Arrays.sort(newValues);\n \n                             boolean[] retainOldValues = new boolean[oldValues.length];\n                             Arrays.fill(retainOldValues, false);\n-\n                             List<String> addValues = new ArrayList<String>();\n                             List<String> removeValues = new ArrayList<String>();\n \n                             // Add new values\n                             for (String value : newValues) {\n                                 int idx = Arrays.binarySearch(oldValues, value, new Comparator<String>() {\n-                                    @Override\n-                                    public int compare(String o1, String o2) {\n-                                        return o1.toLowerCase().compareTo(o2.toLowerCase());\n-                                    }\n+\n+                                              @Override\n+                                              public int compare(String o1, String o2) {\n+                                                  return o1.toLowerCase().compareTo(o2.toLowerCase());\n+                                              }\n                                 });\n                                 if (idx >= 0) {\n                                     // Old values array contains new value. Retain\n@@ -232,6 +224,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n                             }\n \n                             // Remove values which we don't have in new values\n+\n                             for (int i = 0; i < oldValues.length; i++) {\n                                 if (!retainOldValues[i]) {\n                                     removeValues.add(oldValues[i]);\n@@ -239,14 +232,12 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n                             }\n \n                             if (removeValues.size() > 0) {\n-                                MutationSpec removeModification = createModification(Mutation.DELETE, attributeName,\n-                                        removeValues.toArray(new String[removeValues.size()]));\n+                                MutationSpec removeModification = createModification(Mutation.DELETE, attributeName, removeValues.toArray(new String[removeValues.size()]));\n                                 modifications.add(removeModification);\n                             }\n \n                             if (addValues.size() > 0) {\n-                                MutationSpec addModification = createModification(Mutation.DICT_ADD, attributeName,\n-                                        addValues.toArray(new String[addValues.size()]));\n+                                MutationSpec addModification = createModification(Mutation.DICT_ADD, attributeName, addValues.toArray(new String[addValues.size()]));\n                                 modifications.add(addModification);\n                             }\n                         }\n@@ -318,14 +309,23 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     @Override\n-    public <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-            BatchOperation<T> batchOperation, int start, int count, int chunkSize) {\n+    public <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes, BatchOperation<T> batchOperation, int start, int count, int chunkSize) {\n         if (StringHelper.isEmptyString(baseDN)) {\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n-        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, scope, ldapReturnAttributes, null, null, batchOperation,\n-                false, start, count, chunkSize);\n+        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN,\n+            entryClass,\n+                filter,\n+                    scope,\n+                        ldapReturnAttributes,\n+                            null,\n+                                null,\n+                                    batchOperation,\n+                                        false,\n+                                            start,\n+                                                count,\n+                                                    chunkSize);\n         if (searchResult.getEntriesCount() == 0) {\n             return new ArrayList<T>(0);\n         }\n@@ -336,15 +336,23 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     }\n \n     @Override\n-    public <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy,\n-            SortOrder sortOrder, int start, int count, int chunkSize) {\n+    public <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, int start, int count, int chunkSize) {\n         if (StringHelper.isEmptyString(baseDN)) {\n             throw new MappingException(\"Base DN to find entries is null\");\n         }\n \n-        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN, entryClass, filter, SearchScope.SUB, ldapReturnAttributes, sortBy, sortOrder,\n-                null, true, start, count, chunkSize);\n-\n+        PagedResult<JsonObject> searchResult = findEntriesImpl(baseDN,\n+            entryClass,\n+                filter,\n+                    SearchScope.SUB,\n+                        ldapReturnAttributes,\n+                            sortBy,\n+                                sortOrder,\n+                                    null,\n+                                        true,\n+                                            start,\n+                                                count,\n+                                                    chunkSize);\n         PagedResult<T> result = new PagedResult<T>();\n         result.setEntriesCount(searchResult.getEntriesCount());\n         result.setStart(searchResult.getStart());\n@@ -357,13 +365,10 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n         List<T> entries = createEntities(baseDN, entryClass, searchResult);\n         result.setEntries(entries);\n-\n         return result;\n     }\n \n-    protected <T> PagedResult<JsonObject> findEntriesImpl(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope,\n-            String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start,\n-            int count, int chunkSize) {\n+    protected <T> PagedResult<JsonObject> findEntriesImpl(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, BatchOperation<T> batchOperation, boolean returnCount, int start, int count, int chunkSize) {\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n@@ -374,6 +379,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         }\n \n         // Find entries\n+\n         Filter searchFilter;\n         if (objectClasses.length > 0) {\n             searchFilter = addObjectClassFilter(filter, objectClasses);\n@@ -382,15 +388,14 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         }\n \n         // Prepare default sort\n-        Sort[] defaultSort = getDefaultSort(entryClass);\n \n+        Sort[] defaultSort = getDefaultSort(entryClass);\n         if (StringHelper.isNotEmpty(sortBy)) {\n             Sort requestedSort = buildSort(sortBy, sortOrder);\n-\n             if (ArrayHelper.isEmpty(defaultSort)) {\n-                defaultSort = new Sort[] { requestedSort };\n+                defaultSort = new Sort[] {requestedSort};\n             } else {\n-                defaultSort = ArrayHelper.arrayMerge(new Sort[] { requestedSort }, defaultSort);\n+                defaultSort = ArrayHelper.arrayMerge(new Sort[] {requestedSort}, defaultSort);\n             }\n         }\n \n@@ -400,9 +405,9 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             if (batchOperation != null) {\n                 batchOperationWraper = new CouchbaseBatchOperationWraper<T>(batchOperation, this, entryClass, propertiesAnnotations);\n             }\n+\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n-            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), scope, currentLdapReturnAttributes,\n-                    defaultSort, batchOperationWraper, returnCount, start, count, chunkSize);\n+            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), scope, currentLdapReturnAttributes, defaultSort, batchOperationWraper, returnCount, start, count, chunkSize);\n \n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entries with baseDN: %s, filter: %s\", baseDN, searchFilter));\n@@ -410,7 +415,8 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n             return searchResult;\n         } catch (Exception ex) {\n-            throw new EntryPersistenceException(String.format(\"Failed to find entries with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n+            throw new EntryPersistenceException(String.format(\"Failed to find entries with baseDN: %s, filter: %s\", baseDN, searchFilter),\n+                ex);\n         }\n     }\n \n@@ -421,6 +427,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         }\n \n         // Create filter\n+\n         Filter searchFilter;\n         if (objectClasses.length > 0) {\n             searchFilter = addObjectClassFilter(filter, objectClasses);\n@@ -431,13 +438,14 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         PagedResult<JsonObject> searchResult = null;\n         try {\n             ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n-            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    null, false, 1, 1, 0);\n+            searchResult = operationService.search(keyWithInum.getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null, null, false, 1, 1, 0);\n+\n             if (searchResult == null) {\n                 throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter));\n             }\n         } catch (Exception ex) {\n-            throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n+            throw new EntryPersistenceException(String.format(\"Failed to find entry with baseDN: %s, filter: %s\", baseDN, searchFilter),\n+                ex);\n         }\n \n         return (searchResult != null) && (searchResult.getEntriesCount() > 0);\n@@ -446,17 +454,14 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     protected <T> List<T> createEntities(String baseDN, Class<T> entryClass, PagedResult<JsonObject> searchResult) {\n         ParsedKey keyWithInum = toCouchbaseKey(baseDN);\n         List<PropertyAnnotation> propertiesAnnotations = getEntryPropertyAnnotations(entryClass);\n-        List<T> entries = createEntities(entryClass, propertiesAnnotations, keyWithInum,\n-                searchResult.getEntries().toArray(new JsonObject[searchResult.getEntriesCount()]));\n+        List<T> entries = createEntities(entryClass, propertiesAnnotations, keyWithInum, searchResult.getEntries().toArray(new JsonObject[searchResult.getEntriesCount()]));\n \n         return entries;\n     }\n \n-    protected <T> List<T> createEntities(Class<T> entryClass, List<PropertyAnnotation> propertiesAnnotations, ParsedKey baseDn,\n-            JsonObject... searchResultEntries) {\n+    protected <T> List<T> createEntities(Class<T> entryClass, List<PropertyAnnotation> propertiesAnnotations, ParsedKey baseDn, JsonObject... searchResultEntries) {\n         List<T> result = new ArrayList<T>(searchResultEntries.length);\n         Map<String, List<AttributeData>> entriesAttributes = new LinkedHashMap<String, List<AttributeData>>(100);\n-\n         int count = 0;\n         for (int i = 0; i < searchResultEntries.length; i++) {\n             count++;\n@@ -469,10 +474,10 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             searchResultEntries[i] = null;\n \n             // Allow java to clean up temporary objects\n+\n             if (count >= 100) {\n                 List<T> currentResult = createEntities(entryClass, propertiesAnnotations, entriesAttributes);\n                 result.addAll(currentResult);\n-\n                 entriesAttributes = new LinkedHashMap<String, List<AttributeData>>(100);\n                 count = 0;\n             }\n@@ -480,7 +485,6 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n         List<T> currentResult = createEntities(entryClass, propertiesAnnotations, entriesAttributes);\n         result.addAll(currentResult);\n-\n         return result;\n     }\n \n@@ -492,15 +496,15 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         List<AttributeData> result = new ArrayList<AttributeData>();\n         for (String attributeName : entry.getNames()) {\n             Object attributeObject = entry.get(attributeName);\n-\n             String[] attributeValueStrings;\n             if (attributeObject == null) {\n                 attributeValueStrings = NO_STRINGS;\n             }\n+\n             if (attributeObject instanceof JsonArray) {\n                 attributeValueStrings = ((JsonArray) attributeObject).toList().toArray(NO_STRINGS);\n             } else {\n-                attributeValueStrings = new String[] { attributeObject.toString() };\n+                attributeValueStrings = new String[] {attributeObject.toString()};\n             }\n \n             AttributeData tmpAttribute = new AttributeData(attributeName, attributeValueStrings);\n@@ -514,8 +518,16 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n     public boolean authenticate(String baseDN, String userName, String password) {\n         try {\n             Filter filter = Filter.createEqualityFilter(CouchbaseOperationService.UID, userName);\n-            PagedResult<JsonObject> searchResult = operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(filter),\n-                    SearchScope.SUB, null, null, null, false, 0, 1, 1);\n+            PagedResult<JsonObject> searchResult = operationService.search(toCouchbaseKey(baseDN).getKey(),\n+                toCouchbaseFilter(filter),\n+                    SearchScope.SUB,\n+                        null,\n+                            null,\n+                                null,\n+                                    false,\n+                                        0,\n+                                            1,\n+                                                1);\n             if ((searchResult == null) || (searchResult.getEntriesCount() != 1)) {\n                 return false;\n             }\n@@ -548,7 +560,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         // Check entry class\n         checkEntryClass(entryClass, false);\n         String[] objectClasses = getTypeObjectClasses(entryClass);\n-        String[] ldapReturnAttributes = new String[] { \"\" }; // Don't load attributes\n+        String[] ldapReturnAttributes = new String[] {\"\"}; // Don't load attributes\n \n         // Find entries\n         Filter searchFilter;\n@@ -559,14 +571,13 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         }\n \n         CountBatchOperation<T> batchOperation = new CountBatchOperation<T>();\n-\n         try {\n             CouchbaseBatchOperationWraper<T> batchOperationWraper = new CouchbaseBatchOperationWraper<T>(batchOperation);\n-            operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null,\n-                    batchOperationWraper, false, 0, 0, 100);\n+            operationService.search(toCouchbaseKey(baseDN).getKey(), toCouchbaseFilter(searchFilter), SearchScope.SUB, ldapReturnAttributes, null, batchOperationWraper, false, 0, 0, 100);\n         } catch (Exception ex) {\n-            throw new EntryPersistenceException(\n-                    String.format(\"Failed to calucalte count of entries with baseDN: %s, filter: %s\", baseDN, searchFilter), ex);\n+            throw new EntryPersistenceException(String.format(\"Failed to calucalte count of entries with baseDN: %s, filter: %s\",\n+                baseDN,\n+                    searchFilter), ex);\n         }\n \n         return batchOperation.getCountEntries();\n@@ -574,12 +585,11 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n \n     private MutationSpec createModification(final Mutation type, final String attributeName, final String... attributeValues) {\n         String realAttributeName = attributeName;\n-\n         String[] realValues = attributeValues;\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n@@ -593,15 +603,15 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n             requestedSort = Sort.desc(Expression.path(sortBy));\n         } else if (SortOrder.ASCENDING == sortOrder) {\n             requestedSort = Sort.asc(Expression.path(sortBy));\n-        } else {\n+} else {\n             requestedSort = Sort.def(Expression.path(sortBy));\n         }\n+\n         return requestedSort;\n     }\n \n     protected <T> Sort[] getDefaultSort(Class<T> entryClass) {\n         String[] sortByProperties = getEntrySortBy(entryClass);\n-\n         if (ArrayHelper.isEmpty(sortByProperties)) {\n             return null;\n         }\n@@ -657,6 +667,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         public int getCountEntries() {\n             return countEntries;\n         }\n+\n     }\n \n     @Override\n@@ -670,5 +681,4 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         // TODO Auto-generated method stub\n         return null;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 115
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/47/CouchbaseEntryManager.java\nindex 2e93eb1788..9a5ed2fb89 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/47/CouchbaseEntryManager.java\n@@ -579,7 +579,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n         }\n-        \n+\n         if (realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "581",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "581",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/47/CouchbaseEntryManager.java\nindex 2e93eb1788..1db26b4be2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/47/CouchbaseEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/47/CouchbaseEntryManager.java\n@@ -578,9 +578,7 @@ public class CouchbaseEntryManager extends BaseEntryManager implements Serializa\n         String[] realValues = attributeValues;\n         if (StringHelper.equals(CouchbaseOperationService.USER_PASSWORD, realAttributeName)) {\n             realValues = operationService.createStoragePassword(attributeValues);\n-        }\n-        \n-        if (realValues.length == 1) {\n+            } if(realValues.length == 1) {\n             return new MutationSpec(type, realAttributeName, realValues[0]);\n         }\n \n",
            "diff_size": 3
        }
    ]
}