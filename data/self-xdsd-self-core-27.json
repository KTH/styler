{
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "68",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final ContributorKey key = new ContributorKey(username, provider);\n        final Contributor contributor = this.table.get(key);\n        if(contributor != null) {\n            throw new IllegalArgumentException(\"Contributor already exists.\");\n        } else {\n            final Contributor newContributor = new StoredContributor(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/27/InMemoryContributors.java\nindex 6c9206abc6..582f2509e5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/27/InMemoryContributors.java\n@@ -65,7 +65,7 @@ public final class InMemoryContributors implements Contributors {\n     public Contributor register(final String username, final String provider) {\n         final ContributorKey key = new ContributorKey(username, provider);\n         final Contributor contributor = this.table.get(key);\n-        if(contributor != null) {\n+        if (contributor != null) {\n             throw new IllegalArgumentException(\"Contributor already exists.\");\n         } else {\n             final Contributor newContributor = new StoredContributor(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/27/InMemoryContributors.java\nindex 6c9206abc6..75a82f883d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/27/InMemoryContributors.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.mock;\n \n import com.selfxdsd.api.Contributor;\n@@ -34,12 +35,13 @@ import java.util.Objects;\n \n /**\n  * In-memory contributors for test purposes.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.1\n  * @todo #79:30min Write some unit tests for this class, make sure\n- *  it works fine. This is a good starting point if you want to start\n- *  contributing to self-core.\n+ * it works fine. This is a good starting point if you want to start\n+ * contributing to self-core.\n+ * @since 0.0.1\n  */\n public final class InMemoryContributors implements Contributors {\n \n@@ -55,6 +57,7 @@ public final class InMemoryContributors implements Contributors {\n \n     /**\n      * Ctor.\n+     *\n      * @param storage Parent storage.\n      */\n     public InMemoryContributors(final Storage storage) {\n@@ -65,7 +68,7 @@ public final class InMemoryContributors implements Contributors {\n     public Contributor register(final String username, final String provider) {\n         final ContributorKey key = new ContributorKey(username, provider);\n         final Contributor contributor = this.table.get(key);\n-        if(contributor != null) {\n+        if (contributor != null) {\n             throw new IllegalArgumentException(\"Contributor already exists.\");\n         } else {\n             final Contributor newContributor = new StoredContributor(\n@@ -110,7 +113,7 @@ public final class InMemoryContributors implements Contributors {\n          *\n          * @param contributorUsername Contributor's username.\n          * @param contributorProvider Contributor's provider.\n-         * */\n+         */\n         ContributorKey(\n             final String contributorUsername,\n             final String contributorProvider\n@@ -130,8 +133,10 @@ public final class InMemoryContributors implements Contributors {\n             final InMemoryContributors.ContributorKey contractKey =\n                 (InMemoryContributors.ContributorKey) object;\n             //@checkstyle LineLength (5 lines)\n-            return this.contributorUsername.equals(contractKey.contributorUsername)\n-                && this.contributorProvider.equals(contractKey.contributorProvider);\n+            return\n+                this.contributorUsername.equals(contractKey.contributorUsername)\n+                    && this.contributorProvider\n+                    .equals(contractKey.contributorProvider);\n         }\n \n         @Override\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "68",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/27/InMemoryContributors.java\nindex 6c9206abc6..936fe1c08a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/27/InMemoryContributors.java\n@@ -68,8 +68,7 @@ public final class InMemoryContributors implements Contributors {\n         if(contributor != null) {\n             throw new IllegalArgumentException(\"Contributor already exists.\");\n         } else {\n-            final Contributor newContributor = new StoredContributor(\n-                username, provider, this.storage\n+            final Contributor newContributor = new StoredContributor(username, provider, this.storage\n             );\n             this.table.put(key, newContributor);\n             return newContributor;\n@@ -127,19 +126,15 @@ public final class InMemoryContributors implements Contributors {\n             if (object == null || getClass() != object.getClass()) {\n                 return false;\n             }\n-            final InMemoryContributors.ContributorKey contractKey =\n-                (InMemoryContributors.ContributorKey) object;\n+            final InMemoryContributors.ContributorKey contractKey =(InMemoryContributors.ContributorKey) object;\n             //@checkstyle LineLength (5 lines)\n-            return this.contributorUsername.equals(contractKey.contributorUsername)\n-                && this.contributorProvider.equals(contractKey.contributorProvider);\n-        }\n+            return this.contributorUsername.equals(contractKey.contributorUsername)&& this.contributorProvider.equals(contractKey.contributorProvider);\n+    }\n \n         @Override\n         public int hashCode() {\n             return Objects.hash(\n-                this.contributorUsername,\n-                this.contributorProvider\n-            );\n+                this.contributorUsername, this.contributorProvider);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 36, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 32, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "137",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 68, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "84",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/27/InMemoryContributors.java\nindex 6c9206abc6..2bc18a9f18 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/27/InMemoryContributors.java\n@@ -26,7 +26,6 @@ import com.selfxdsd.api.Contributor;\n import com.selfxdsd.api.Contributors;\n import com.selfxdsd.api.storage.Storage;\n import com.selfxdsd.core.contributors.StoredContributor;\n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -41,22 +40,30 @@ import java.util.Objects;\n  *  it works fine. This is a good starting point if you want to start\n  *  contributing to self-core.\n  */\n+\n+\n public final class InMemoryContributors implements Contributors {\n \n     /**\n      * Parent storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Contributors \"table\".\n      */\n+\n+\n     private final Map<ContributorKey, Contributor> table = new HashMap<>();\n \n     /**\n      * Ctor.\n      * @param storage Parent storage.\n      */\n+\n+\n     public InMemoryContributors(final Storage storage) {\n         this.storage = storage;\n     }\n@@ -65,21 +72,20 @@ public final class InMemoryContributors implements Contributors {\n     public Contributor register(final String username, final String provider) {\n         final ContributorKey key = new ContributorKey(username, provider);\n         final Contributor contributor = this.table.get(key);\n-        if(contributor != null) {\n-            throw new IllegalArgumentException(\"Contributor already exists.\");\n-        } else {\n-            final Contributor newContributor = new StoredContributor(\n-                username, provider, this.storage\n-            );\n-            this.table.put(key, newContributor);\n-            return newContributor;\n-        }\n+        if( contributor!= null) {\n+                                    throw new IllegalArgumentException(\n+                                        \"Contributor already exists.\");\n+                                }\n+\n+else {\n+         final Contributor newContributor = new StoredContributor(username, provider, this.storage);\n+         this.table.put(key, newContributor);\n+         return newContributor;\n+     }\n     }\n \n     @Override\n-    public Contributor getById(\n-        final String username, final String provider\n-    ) {\n+    public Contributor getById(final String username, final String provider) {\n         return this.table.get(new ContributorKey(username, provider));\n     }\n \n@@ -93,16 +99,21 @@ public final class InMemoryContributors implements Contributors {\n      *\n      * @checkstyle VisibilityModifier (50 lines)\n      */\n+\n     private static class ContributorKey {\n \n         /**\n          * Contributor's username.\n          */\n+\n+\n         private final String contributorUsername;\n \n         /**\n          * Contributor's provider.\n          */\n+\n+\n         private final String contributorProvider;\n \n         /**\n@@ -111,35 +122,31 @@ public final class InMemoryContributors implements Contributors {\n          * @param contributorUsername Contributor's username.\n          * @param contributorProvider Contributor's provider.\n          * */\n-        ContributorKey(\n-            final String contributorUsername,\n-            final String contributorProvider\n-        ) {\n+\n+\n+        ContributorKey(final String contributorUsername, final String contributorProvider) {\n             this.contributorUsername = contributorUsername;\n             this.contributorProvider = contributorProvider;\n         }\n \n         @Override\n         public boolean equals(final Object object) {\n-            if (this == object) {\n-                return true;\n-            }\n-            if (object == null || getClass() != object.getClass()) {\n-                return false;\n-            }\n-            final InMemoryContributors.ContributorKey contractKey =\n-                (InMemoryContributors.ContributorKey) object;\n+            if(this== object) {\n+                                  return true;\n+                              }\n+            if( object== null|| getClass()!= object.getClass()) {\n+                                                                    return false;\n+                                                                }\n+\n+            final InMemoryContributors.ContributorKey contractKey = ( InMemoryContributors.ContributorKey) object;\n             //@checkstyle LineLength (5 lines)\n-            return this.contributorUsername.equals(contractKey.contributorUsername)\n-                && this.contributorProvider.equals(contractKey.contributorProvider);\n+            return this.contributorUsername.equals(contractKey.contributorUsername)&&\n+                       this.contributorProvider.equals(contractKey.contributorProvider);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(\n-                this.contributorUsername,\n-                this.contributorProvider\n-            );\n+            return Objects.hash(this.contributorUsername, this.contributorProvider);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/27/InMemoryContributors.java\nindex 6c9206abc6..582f2509e5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/27/InMemoryContributors.java\n@@ -65,7 +65,7 @@ public final class InMemoryContributors implements Contributors {\n     public Contributor register(final String username, final String provider) {\n         final ContributorKey key = new ContributorKey(username, provider);\n         final Contributor contributor = this.table.get(key);\n-        if(contributor != null) {\n+        if (contributor != null) {\n             throw new IllegalArgumentException(\"Contributor already exists.\");\n         } else {\n             final Contributor newContributor = new StoredContributor(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/27/InMemoryContributors.java\nindex 6c9206abc6..582f2509e5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/27/InMemoryContributors.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/27/InMemoryContributors.java\n@@ -65,7 +65,7 @@ public final class InMemoryContributors implements Contributors {\n     public Contributor register(final String username, final String provider) {\n         final ContributorKey key = new ContributorKey(username, provider);\n         final Contributor contributor = this.table.get(key);\n-        if(contributor != null) {\n+        if (contributor != null) {\n             throw new IllegalArgumentException(\"Contributor already exists.\");\n         } else {\n             final Contributor newContributor = new StoredContributor(\n",
            "diff_size": 1
        }
    ]
}