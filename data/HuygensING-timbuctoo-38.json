{
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 131).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    String resultStr = indent + key + \"{\\n\";\n    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n    }\n    return resultStr + indent + \"}\" + delimiter;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/38/ObjectDiffResult.java\nindex e5c60005a6..b058ed801e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/38/ObjectDiffResult.java\n@@ -49,7 +49,8 @@ public class ObjectDiffResult extends DiffResult {\n   public String asConsole(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n     for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n+\n+    resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n     }\n     return resultStr + indent + \"}\" + delimiter;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/38/ObjectDiffResult.java\nindex e5c60005a6..26dad3c01b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/38/ObjectDiffResult.java\n@@ -21,7 +21,7 @@ public class ObjectDiffResult extends DiffResult {\n   @Override\n   public String asHtml() {\n     String resultStr = \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n       resultStr += result.getValue().asHtml(jsn(result.getKey()).toString() + \": \", \"  \", \",\") + \"\\n\";\n     }\n     return resultStr + \"}\\n\";\n@@ -30,7 +30,7 @@ public class ObjectDiffResult extends DiffResult {\n   @Override\n   public String asHtml(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n       resultStr += result.getValue().asHtml(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + \"\\n\";\n     }\n     return resultStr + indent + \"}\" + delimiter;\n@@ -39,7 +39,7 @@ public class ObjectDiffResult extends DiffResult {\n   @Override\n   public String asConsole() {\n     String resultStr = RESET + \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n       resultStr += result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", \"  \", \",\") + RESET + \"\\n\";\n     }\n     return resultStr + RESET + \"}\\n\";\n@@ -48,8 +48,9 @@ public class ObjectDiffResult extends DiffResult {\n   @Override\n   public String asConsole(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n+      resultStr +=\n+        indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n     }\n     return resultStr + indent + \"}\" + delimiter;\n   }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/38/ObjectDiffResult.java\nindex e5c60005a6..d3838eaf92 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/38/ObjectDiffResult.java\n@@ -58,4 +58,4 @@ public class ObjectDiffResult extends DiffResult {\n   public boolean wasSuccess() {\n     return wasSuccess;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/38/ObjectDiffResult.java\nindex e5c60005a6..bba1b3aca4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/38/ObjectDiffResult.java\n@@ -1,61 +1,60 @@\n package nl.knaw.huygens.contractdiff.jsondiff;\n \n import nl.knaw.huygens.contractdiff.diffresults.DiffResult;\n-\n import java.util.HashMap;\n import java.util.Map;\n \n import static nl.knaw.huygens.contractdiff.JsonBuilder.jsn;\n \n public class ObjectDiffResult extends DiffResult {\n-  private Map<String, DiffResult> innerResults = new HashMap<>();\n-  private boolean wasSuccess = true;\n+    private Map<String, DiffResult> innerResults = new HashMap<>();\n+    private boolean wasSuccess = true;\n \n-  public void add(String key, DiffResult propResult) {\n+    public void add(String key, DiffResult propResult) {\n     innerResults.put(key, propResult);\n     if (!propResult.wasSuccess()) {\n-      wasSuccess = false;\n+        wasSuccess = false;\n+    }\n     }\n-  }\n \n-  @Override\n-  public String asHtml() {\n+    @Override\n+    public String asHtml() {\n     String resultStr = \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += result.getValue().asHtml(jsn(result.getKey()).toString() + \": \", \"  \", \",\") + \"\\n\";\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n+        resultStr += result.getValue().asHtml(jsn(result.getKey()).toString() + \": \", \"  \", \",\") + \"\\n\";\n     }\n     return resultStr + \"}\\n\";\n-  }\n+    }\n \n-  @Override\n-  public String asHtml(String key, String indent, String delimiter) {\n+    @Override\n+    public String asHtml(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += result.getValue().asHtml(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + \"\\n\";\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n+        resultStr += result.getValue().asHtml(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + \"\\n\";\n     }\n     return resultStr + indent + \"}\" + delimiter;\n-  }\n+    }\n \n-  @Override\n-  public String asConsole() {\n+    @Override\n+    public String asConsole() {\n     String resultStr = RESET + \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", \"  \", \",\") + RESET + \"\\n\";\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n+        resultStr += result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", \"  \", \",\") + RESET + \"\\n\";\n     }\n     return resultStr + RESET + \"}\\n\";\n-  }\n+    }\n \n-  @Override\n-  public String asConsole(String key, String indent, String delimiter) {\n+    @Override\n+    public String asConsole(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n-    for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n+    for (Map.Entry<String, DiffResult> result : innerResults.entrySet()) {\n+        resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n     }\n     return resultStr + indent + \"}\" + delimiter;\n-  }\n+    }\n \n-  @Override\n-  public boolean wasSuccess() {\n+    @Override\n+    public boolean wasSuccess() {\n     return wasSuccess;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "column": "103",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "104",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "113",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "114",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "119",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "120",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "125",
                    "severity": "error",
                    "message": "'}' at column 125 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "125",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "126",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "168",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/38/ObjectDiffResult.java\nindex e5c60005a6..22ee2ae7b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/38/ObjectDiffResult.java\n@@ -49,13 +49,12 @@ public class ObjectDiffResult extends DiffResult {\n   public String asConsole(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n     for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n+      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \" ,indent+\"  \",\",\")+RESET+\"\\n\";}returnresultStr + indent + \"}\" + delimiter;\n     }\n-    return resultStr + indent + \"}\" + delimiter;\n-  }\n \n-  @Override\n-  public boolean wasSuccess() {\n-    return wasSuccess;\n+    @Override\n+    public boolean wasSuccess() {\n+      return wasSuccess;\n+    }\n   }\n-}\n+  \n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/38/ObjectDiffResult.java\nindex e5c60005a6..b058ed801e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/38/ObjectDiffResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/38/ObjectDiffResult.java\n@@ -49,7 +49,8 @@ public class ObjectDiffResult extends DiffResult {\n   public String asConsole(String key, String indent, String delimiter) {\n     String resultStr = indent + key + \"{\\n\";\n     for (Map.Entry<String, DiffResult> result: innerResults.entrySet()) {\n-      resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n+\n+    resultStr += indent + result.getValue().asConsole(jsn(result.getKey()).toString() + \": \", indent + \"  \", \",\") + RESET + \"\\n\";\n     }\n     return resultStr + indent + \"}\" + delimiter;\n   }\n",
            "diff_size": 2
        }
    ]
}