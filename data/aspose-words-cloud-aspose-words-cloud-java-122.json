{
    "error_id": "122",
    "information": {
        "errors": [
            {
                "line": "162",
                "column": "100",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData)o;\n    return\n        Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n        Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/122/PdfDigitalSignatureDetailsData.java\nindex b1bdaf13a0..19bf38a3aa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/122/PdfDigitalSignatureDetailsData.java\n@@ -159,7 +159,7 @@ public class PdfDigitalSignatureDetailsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData)o;\n+    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData) o;\n     return\n         Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n         Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/122/PdfDigitalSignatureDetailsData.java\nindex b1bdaf13a0..0c1643696b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/122/PdfDigitalSignatureDetailsData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,125 +50,131 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"container class for details of digital signature.\")\n public class PdfDigitalSignatureDetailsData {\n-    @SerializedName(\"CertificateFilename\")\n-    private String certificateFilename = null;\n+  @SerializedName(\"CertificateFilename\")\n+  private String certificateFilename = null;\n \n-    @SerializedName(\"HashAlgorithm\")\n-    private String hashAlgorithm = null;\n+  @SerializedName(\"HashAlgorithm\")\n+  private String hashAlgorithm = null;\n \n-    @SerializedName(\"Location\")\n-    private String location = null;\n+  @SerializedName(\"Location\")\n+  private String location = null;\n \n-    @SerializedName(\"Reason\")\n-    private String reason = null;\n+  @SerializedName(\"Reason\")\n+  private String reason = null;\n \n-    @SerializedName(\"SignatureDate\")\n-    private OffsetDateTime signatureDate = null;\n-    public PdfDigitalSignatureDetailsData certificateFilename(String certificateFilename) {\n-        this.certificateFilename = certificateFilename;\n-        return this;\n-    }\n+  @SerializedName(\"SignatureDate\")\n+  private OffsetDateTime signatureDate = null;\n \n-    /**\n-     * Gets or sets certificate's filename using for signing.\n-    * @return certificateFilename\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets certificate's filename using for signing.\")\n-    public String getCertificateFilename() {\n-        return certificateFilename;\n-    }\n+  public PdfDigitalSignatureDetailsData certificateFilename(String certificateFilename) {\n+    this.certificateFilename = certificateFilename;\n+    return this;\n+  }\n \n-    public void setCertificateFilename(String certificateFilename) {\n-        this.certificateFilename = certificateFilename;\n-    }\n+  /**\n+   * Gets or sets certificate's filename using for signing.\n+   *\n+   * @return certificateFilename\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets certificate's filename using for signing.\")\n+  public String getCertificateFilename() {\n+    return certificateFilename;\n+  }\n \n-    public PdfDigitalSignatureDetailsData hashAlgorithm(String hashAlgorithm) {\n-        this.hashAlgorithm = hashAlgorithm;\n-        return this;\n-    }\n+  public void setCertificateFilename(String certificateFilename) {\n+    this.certificateFilename = certificateFilename;\n+  }\n \n-    /**\n-     * Gets or sets hash algorithm.\n-    * @return hashAlgorithm\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets hash algorithm.\")\n-    public String getHashAlgorithm() {\n-        return hashAlgorithm;\n-    }\n+  public PdfDigitalSignatureDetailsData hashAlgorithm(String hashAlgorithm) {\n+    this.hashAlgorithm = hashAlgorithm;\n+    return this;\n+  }\n \n-    public void setHashAlgorithm(String hashAlgorithm) {\n-        this.hashAlgorithm = hashAlgorithm;\n-    }\n+  /**\n+   * Gets or sets hash algorithm.\n+   *\n+   * @return hashAlgorithm\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets hash algorithm.\")\n+  public String getHashAlgorithm() {\n+    return hashAlgorithm;\n+  }\n \n-    public PdfDigitalSignatureDetailsData location(String location) {\n-        this.location = location;\n-        return this;\n-    }\n+  public void setHashAlgorithm(String hashAlgorithm) {\n+    this.hashAlgorithm = hashAlgorithm;\n+  }\n \n-    /**\n-     * Gets or sets location of the signing.\n-    * @return location\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets location of the signing.\")\n-    public String getLocation() {\n-        return location;\n-    }\n+  public PdfDigitalSignatureDetailsData location(String location) {\n+    this.location = location;\n+    return this;\n+  }\n \n-    public void setLocation(String location) {\n-        this.location = location;\n-    }\n+  /**\n+   * Gets or sets location of the signing.\n+   *\n+   * @return location\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets location of the signing.\")\n+  public String getLocation() {\n+    return location;\n+  }\n \n-    public PdfDigitalSignatureDetailsData reason(String reason) {\n-        this.reason = reason;\n-        return this;\n-    }\n+  public void setLocation(String location) {\n+    this.location = location;\n+  }\n \n-    /**\n-     * Gets or sets reason for the signing.\n-    * @return reason\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets reason for the signing.\")\n-    public String getReason() {\n-        return reason;\n-    }\n+  public PdfDigitalSignatureDetailsData reason(String reason) {\n+    this.reason = reason;\n+    return this;\n+  }\n \n-    public void setReason(String reason) {\n-        this.reason = reason;\n-    }\n+  /**\n+   * Gets or sets reason for the signing.\n+   *\n+   * @return reason\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets reason for the signing.\")\n+  public String getReason() {\n+    return reason;\n+  }\n \n-    public PdfDigitalSignatureDetailsData signatureDate(OffsetDateTime signatureDate) {\n-        this.signatureDate = signatureDate;\n-        return this;\n-    }\n+  public void setReason(String reason) {\n+    this.reason = reason;\n+  }\n \n-    /**\n-     * Gets or sets date of the signing.\n-    * @return signatureDate\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets date of the signing.\")\n-    public OffsetDateTime getSignatureDate() {\n-        return signatureDate;\n-    }\n+  public PdfDigitalSignatureDetailsData signatureDate(OffsetDateTime signatureDate) {\n+    this.signatureDate = signatureDate;\n+    return this;\n+  }\n \n-    public void setSignatureDate(OffsetDateTime signatureDate) {\n-        this.signatureDate = signatureDate;\n-    }\n+  /**\n+   * Gets or sets date of the signing.\n+   *\n+   * @return signatureDate\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets date of the signing.\")\n+  public OffsetDateTime getSignatureDate() {\n+    return signatureDate;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData)o;\n+  public void setSignatureDate(OffsetDateTime signatureDate) {\n+    this.signatureDate = signatureDate;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData) o;\n     return\n         Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n-        Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&\n-        Objects.equals(this.location, pdfDigitalSignatureDetailsData.location) &&\n-        Objects.equals(this.reason, pdfDigitalSignatureDetailsData.reason) &&\n-        Objects.equals(this.signatureDate, pdfDigitalSignatureDetailsData.signatureDate);\n+            Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&\n+            Objects.equals(this.location, pdfDigitalSignatureDetailsData.location) &&\n+            Objects.equals(this.reason, pdfDigitalSignatureDetailsData.reason) &&\n+            Objects.equals(this.signatureDate, pdfDigitalSignatureDetailsData.signatureDate);\n   }\n \n   @Override\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/122/PdfDigitalSignatureDetailsData.java\nindex b1bdaf13a0..63d5e25439 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/122/PdfDigitalSignatureDetailsData.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * container class for details of digital signature.\n  */\n+\n+\n @ApiModel(description = \"container class for details of digital signature.\")\n+\n public class PdfDigitalSignatureDetailsData {\n     @SerializedName(\"CertificateFilename\")\n     private String certificateFilename = null;\n@@ -61,120 +64,145 @@ public class PdfDigitalSignatureDetailsData {\n \n     @SerializedName(\"SignatureDate\")\n     private OffsetDateTime signatureDate = null;\n+\n     public PdfDigitalSignatureDetailsData certificateFilename(String certificateFilename) {\n-        this.certificateFilename = certificateFilename;\n-        return this;\n+    this.certificateFilename = certificateFilename;\n+    return this;\n     }\n \n     /**\n      * Gets or sets certificate's filename using for signing.\n     * @return certificateFilename\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets certificate's filename using for signing.\")\n     public String getCertificateFilename() {\n-        return certificateFilename;\n+    return certificateFilename;\n     }\n \n+\n     public void setCertificateFilename(String certificateFilename) {\n-        this.certificateFilename = certificateFilename;\n+    this.certificateFilename = certificateFilename;\n     }\n \n+\n     public PdfDigitalSignatureDetailsData hashAlgorithm(String hashAlgorithm) {\n-        this.hashAlgorithm = hashAlgorithm;\n-        return this;\n+    this.hashAlgorithm = hashAlgorithm;\n+    return this;\n     }\n \n     /**\n      * Gets or sets hash algorithm.\n     * @return hashAlgorithm\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets hash algorithm.\")\n     public String getHashAlgorithm() {\n-        return hashAlgorithm;\n+    return hashAlgorithm;\n     }\n \n+\n     public void setHashAlgorithm(String hashAlgorithm) {\n-        this.hashAlgorithm = hashAlgorithm;\n+    this.hashAlgorithm = hashAlgorithm;\n     }\n \n+\n     public PdfDigitalSignatureDetailsData location(String location) {\n-        this.location = location;\n-        return this;\n+    this.location = location;\n+    return this;\n     }\n \n     /**\n      * Gets or sets location of the signing.\n     * @return location\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets location of the signing.\")\n     public String getLocation() {\n-        return location;\n+    return location;\n     }\n \n+\n     public void setLocation(String location) {\n-        this.location = location;\n+    this.location = location;\n     }\n \n+\n     public PdfDigitalSignatureDetailsData reason(String reason) {\n-        this.reason = reason;\n-        return this;\n+    this.reason = reason;\n+    return this;\n     }\n \n     /**\n      * Gets or sets reason for the signing.\n     * @return reason\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets reason for the signing.\")\n     public String getReason() {\n-        return reason;\n+    return reason;\n     }\n \n+\n     public void setReason(String reason) {\n-        this.reason = reason;\n+    this.reason = reason;\n     }\n \n+\n     public PdfDigitalSignatureDetailsData signatureDate(OffsetDateTime signatureDate) {\n-        this.signatureDate = signatureDate;\n-        return this;\n+    this.signatureDate = signatureDate;\n+    return this;\n     }\n \n     /**\n      * Gets or sets date of the signing.\n     * @return signatureDate\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets date of the signing.\")\n     public OffsetDateTime getSignatureDate() {\n-        return signatureDate;\n+    return signatureDate;\n     }\n \n+\n     public void setSignatureDate(OffsetDateTime signatureDate) {\n-        this.signatureDate = signatureDate;\n+    this.signatureDate = signatureDate;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData)o;\n-    return\n-        Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n+\n+        PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData) o;\n+        return Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n         Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&\n         Objects.equals(this.location, pdfDigitalSignatureDetailsData.location) &&\n-        Objects.equals(this.reason, pdfDigitalSignatureDetailsData.reason) &&\n-        Objects.equals(this.signatureDate, pdfDigitalSignatureDetailsData.signatureDate);\n-  }\n+            Objects.equals(this.reason, pdfDigitalSignatureDetailsData.reason) &&\n+            Objects.equals(this.signatureDate, pdfDigitalSignatureDetailsData.signatureDate);\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(certificateFilename, hashAlgorithm, location, reason, signatureDate);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class PdfDigitalSignatureDetailsData {\\n\");\n     sb.append(\"    certificateFilename: \").append(toIndentedString(certificateFilename)).append(\"\\n\");\n@@ -184,16 +212,19 @@ public class PdfDigitalSignatureDetailsData {\n     sb.append(\"    signatureDate: \").append(toIndentedString(signatureDate)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 69
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/122/PdfDigitalSignatureDetailsData.java\nindex b1bdaf13a0..19bf38a3aa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/122/PdfDigitalSignatureDetailsData.java\n@@ -159,7 +159,7 @@ public class PdfDigitalSignatureDetailsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData)o;\n+    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData) o;\n     return\n         Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n         Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/122/PdfDigitalSignatureDetailsData.java\nindex b1bdaf13a0..2181150590 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/122/PdfDigitalSignatureDetailsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/122/PdfDigitalSignatureDetailsData.java\n@@ -159,7 +159,9 @@ public class PdfDigitalSignatureDetailsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData)o;\n+    PdfDigitalSignatureDetailsData pdfDigitalSignatureDetailsData = (PdfDigitalSignatureDetailsData\n+\n+    ) o;\n     return\n         Objects.equals(this.certificateFilename, pdfDigitalSignatureDetailsData.certificateFilename) &&\n         Objects.equals(this.hashAlgorithm, pdfDigitalSignatureDetailsData.hashAlgorithm) &&\n",
            "diff_size": 3
        }
    ]
}