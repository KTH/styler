{
    "error_id": "241",
    "information": {
        "errors": [
            {
                "line": "191",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/241/ParticipantReader.java\nindex f7aac3ed34..a6c58676cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/241/ParticipantReader.java\n@@ -188,7 +188,7 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/241/ParticipantReader.java\nindex f7aac3ed34..0d21d4be97 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/241/ParticipantReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.video.v1.room;\n@@ -188,7 +188,7 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/241/ParticipantReader.java\nindex f7aac3ed34..e6307d3bd0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/241/ParticipantReader.java\n@@ -33,6 +33,8 @@ public class ParticipantReader extends Reader<Participant> {\n      *\n      * @param pathRoomSid The SID of the room with the Participant resources to read\n      */\n+\n+\n     public ParticipantReader(final String pathRoomSid) {\n         this.pathRoomSid = pathRoomSid;\n     }\n@@ -45,6 +47,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param status Read only the participants with this status\n      * @return this\n      */\n+\n+\n     public ParticipantReader setStatus(final Participant.Status status) {\n         this.status = status;\n         return this;\n@@ -58,6 +62,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param identity Read only the Participants with this user identity value\n      * @return this\n      */\n+\n+\n     public ParticipantReader setIdentity(final String identity) {\n         this.identity = identity;\n         return this;\n@@ -71,6 +77,8 @@ public class ParticipantReader extends Reader<Participant> {\n      *                         in UTC ISO 8601 format\n      * @return this\n      */\n+\n+\n     public ParticipantReader setDateCreatedAfter(final DateTime dateCreatedAfter) {\n         this.dateCreatedAfter = dateCreatedAfter;\n         return this;\n@@ -84,6 +92,8 @@ public class ParticipantReader extends Reader<Participant> {\n      *                          date in ISO 8601 format\n      * @return this\n      */\n+\n+\n     public ParticipantReader setDateCreatedBefore(final DateTime dateCreatedBefore) {\n         this.dateCreatedBefore = dateCreatedBefore;\n         return this;\n@@ -95,6 +105,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Participant ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Participant> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -106,6 +118,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Participant ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Participant> firstPage(final TwilioRestClient client) {\n@@ -113,7 +127,7 @@ public class ParticipantReader extends Reader<Participant> {\n             HttpMethod.GET,\n             Domains.VIDEO.toString(),\n             \"/v1/Rooms/\" + this.pathRoomSid + \"/Participants\"\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -126,14 +140,13 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Participant ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Participant> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Participant> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -144,13 +157,12 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Participant> nextPage(final Page<Participant> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -161,13 +173,12 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Participant> previousPage(final Page<Participant> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -178,9 +189,11 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Participant> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Participant> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Participant read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -188,7 +201,8 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -196,7 +210,7 @@ public class ParticipantReader extends Reader<Participant> {\n             response.getContent(),\n             Participant.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -204,6 +218,8 @@ public class ParticipantReader extends Reader<Participant> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (status != null) {\n             request.addQueryParam(\"Status\", status.toString());\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/241/ParticipantReader.java\nindex f7aac3ed34..a6c58676cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/241/ParticipantReader.java\n@@ -188,7 +188,7 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/241/ParticipantReader.java\nindex f7aac3ed34..902866b2a7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/241/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/241/ParticipantReader.java\n@@ -188,7 +188,8 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}