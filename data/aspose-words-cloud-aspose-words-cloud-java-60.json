{
    "error_id": "60",
    "information": {
        "errors": [
            {
                "line": "257",
                "column": "34",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    Document document = (Document)o;\n    return\n        Objects.equals(this.documentProperties, document.documentProperties) &&\n        Objects.equals(this.fileName, document.fileName) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/60/Document.java\nindex 205e3f8492..dcb11184a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/60/Document.java\n@@ -254,7 +254,7 @@ public class Document {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Document document = (Document)o;\n+    Document document = (Document) o;\n     return\n         Objects.equals(this.documentProperties, document.documentProperties) &&\n         Objects.equals(this.fileName, document.fileName) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/60/Document.java\nindex 205e3f8492..2dc590f160 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/60/Document.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,221 +50,228 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Represents Words document DTO.\")\n public class Document {\n-    /**\n-     * Gets or sets the original format of the document.\n-     */\n-    @JsonAdapter(SourceFormatEnum.Adapter.class)\n-    public enum SourceFormatEnum {\n-        UNKNOWN(\"Unknown\"),\n-        DOC(\"Doc\"),\n-        DOT(\"Dot\"),\n-        DOCPREWORD60(\"DocPreWord60\"),\n-        DOCX(\"Docx\"),\n-        DOCM(\"Docm\"),\n-        DOTX(\"Dotx\"),\n-        DOTM(\"Dotm\"),\n-        FLATOPC(\"FlatOpc\"),\n-        RTF(\"Rtf\"),\n-        WORDML(\"WordML\"),\n-        HTML(\"Html\"),\n-        MHTML(\"Mhtml\"),\n-        EPUB(\"Epub\"),\n-        TEXT(\"Text\"),\n-        ODT(\"Odt\"),\n-        OTT(\"Ott\"),\n-        PDF(\"Pdf\"),\n-        XPS(\"Xps\"),\n-        TIFF(\"Tiff\"),\n-        SVG(\"Svg\");\n-\n-        private String value;\n-\n-        SourceFormatEnum(String value) {\n-            this.value = value;\n-        }\n+  /**\n+   * Gets or sets the original format of the document.\n+   */\n+  @JsonAdapter(SourceFormatEnum.Adapter.class)\n+  public enum SourceFormatEnum {\n+    UNKNOWN(\"Unknown\"),\n+    DOC(\"Doc\"),\n+    DOT(\"Dot\"),\n+    DOCPREWORD60(\"DocPreWord60\"),\n+    DOCX(\"Docx\"),\n+    DOCM(\"Docm\"),\n+    DOTX(\"Dotx\"),\n+    DOTM(\"Dotm\"),\n+    FLATOPC(\"FlatOpc\"),\n+    RTF(\"Rtf\"),\n+    WORDML(\"WordML\"),\n+    HTML(\"Html\"),\n+    MHTML(\"Mhtml\"),\n+    EPUB(\"Epub\"),\n+    TEXT(\"Text\"),\n+    ODT(\"Odt\"),\n+    OTT(\"Ott\"),\n+    PDF(\"Pdf\"),\n+    XPS(\"Xps\"),\n+    TIFF(\"Tiff\"),\n+    SVG(\"Svg\");\n+\n+    private String value;\n+\n+    SourceFormatEnum(String value) {\n+      this.value = value;\n+    }\n \n-        public String getValue() {\n-            return value;\n-        }\n+    public String getValue() {\n+      return value;\n+    }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-        public static SourceFormatEnum fromValue(String text) {\n-            for (SourceFormatEnum b : SourceFormatEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n+    public static SourceFormatEnum fromValue(String text) {\n+      for (SourceFormatEnum b : SourceFormatEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n+    }\n \n-        public static class Adapter extends TypeAdapter< SourceFormatEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final SourceFormatEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public SourceFormatEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return SourceFormatEnum.fromValue(String.valueOf(value));\n-            }\n-        }\n+    public static class Adapter extends TypeAdapter<SourceFormatEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final SourceFormatEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+      @Override\n+      public SourceFormatEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return SourceFormatEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n-    @SerializedName(\"DocumentProperties\")\n-    private DocumentProperties documentProperties = null;\n+  @SerializedName(\"DocumentProperties\")\n+  private DocumentProperties documentProperties = null;\n \n-    @SerializedName(\"FileName\")\n-    private String fileName = null;\n+  @SerializedName(\"FileName\")\n+  private String fileName = null;\n \n-    @SerializedName(\"IsEncrypted\")\n-    private Boolean isEncrypted = null;\n+  @SerializedName(\"IsEncrypted\")\n+  private Boolean isEncrypted = null;\n \n-    @SerializedName(\"IsSigned\")\n-    private Boolean isSigned = null;\n+  @SerializedName(\"IsSigned\")\n+  private Boolean isSigned = null;\n \n-    @SerializedName(\"Links\")\n-    private List<Link> links = null;\n+  @SerializedName(\"Links\")\n+  private List<Link> links = null;\n \n-    @SerializedName(\"SourceFormat\")\n-    private SourceFormatEnum sourceFormat = null;\n-    public Document documentProperties(DocumentProperties documentProperties) {\n-        this.documentProperties = documentProperties;\n-        return this;\n-    }\n+  @SerializedName(\"SourceFormat\")\n+  private SourceFormatEnum sourceFormat = null;\n \n-    /**\n-     * Gets or sets returns document properties.\n-    * @return documentProperties\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets returns document properties.\")\n-    public DocumentProperties getDocumentProperties() {\n-        return documentProperties;\n-    }\n+  public Document documentProperties(DocumentProperties documentProperties) {\n+    this.documentProperties = documentProperties;\n+    return this;\n+  }\n \n-    public void setDocumentProperties(DocumentProperties documentProperties) {\n-        this.documentProperties = documentProperties;\n-    }\n+  /**\n+   * Gets or sets returns document properties.\n+   *\n+   * @return documentProperties\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets returns document properties.\")\n+  public DocumentProperties getDocumentProperties() {\n+    return documentProperties;\n+  }\n \n-    public Document fileName(String fileName) {\n-        this.fileName = fileName;\n-        return this;\n-    }\n+  public void setDocumentProperties(DocumentProperties documentProperties) {\n+    this.documentProperties = documentProperties;\n+  }\n \n-    /**\n-     * Gets or sets the name of the file.\n-    * @return fileName\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the name of the file.\")\n-    public String getFileName() {\n-        return fileName;\n-    }\n+  public Document fileName(String fileName) {\n+    this.fileName = fileName;\n+    return this;\n+  }\n \n-    public void setFileName(String fileName) {\n-        this.fileName = fileName;\n-    }\n+  /**\n+   * Gets or sets the name of the file.\n+   *\n+   * @return fileName\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the name of the file.\")\n+  public String getFileName() {\n+    return fileName;\n+  }\n \n-    public Document isEncrypted(Boolean isEncrypted) {\n-        this.isEncrypted = isEncrypted;\n-        return this;\n-    }\n+  public void setFileName(String fileName) {\n+    this.fileName = fileName;\n+  }\n \n-    /**\n-     * Gets or sets a value indicating whether returns true if the document is encrypted and requires a password to open.\n-    * @return isEncrypted\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether returns true if the document is encrypted and requires a password to open.\")\n-    public Boolean getIsEncrypted() {\n-        return isEncrypted;\n-    }\n+  public Document isEncrypted(Boolean isEncrypted) {\n+    this.isEncrypted = isEncrypted;\n+    return this;\n+  }\n \n-    public void setIsEncrypted(Boolean isEncrypted) {\n-        this.isEncrypted = isEncrypted;\n-    }\n+  /**\n+   * Gets or sets a value indicating whether returns true if the document is encrypted and requires a password to open.\n+   *\n+   * @return isEncrypted\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether returns true if the document is encrypted and requires a password to open.\")\n+  public Boolean getIsEncrypted() {\n+    return isEncrypted;\n+  }\n \n-    public Document isSigned(Boolean isSigned) {\n-        this.isSigned = isSigned;\n-        return this;\n-    }\n+  public void setIsEncrypted(Boolean isEncrypted) {\n+    this.isEncrypted = isEncrypted;\n+  }\n \n-    /**\n-     * Gets or sets a value indicating whether returns true if the document contains a digital signature. This property merely informs that a\n-     * digital signature is present on a document, but it does not specify whether the signature is valid or not.\n-    * @return isSigned\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether returns true if the document contains a digital signature. This property merely informs that a digital signature is present on a document, but it does not specify whether the signature is valid or not.\")\n-    public Boolean getIsSigned() {\n-        return isSigned;\n-    }\n+  public Document isSigned(Boolean isSigned) {\n+    this.isSigned = isSigned;\n+    return this;\n+  }\n \n-    public void setIsSigned(Boolean isSigned) {\n-        this.isSigned = isSigned;\n-    }\n+  /**\n+   * Gets or sets a value indicating whether returns true if the document contains a digital signature. This property merely informs that a\n+   * digital signature is present on a document, but it does not specify whether the signature is valid or not.\n+   *\n+   * @return isSigned\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether returns true if the document contains a digital signature. This property merely informs that a digital signature is present on a document, but it does not specify whether the signature is valid or not.\")\n+  public Boolean getIsSigned() {\n+    return isSigned;\n+  }\n \n-    public Document links(List<Link> links) {\n-        this.links = links;\n-        return this;\n-    }\n+  public void setIsSigned(Boolean isSigned) {\n+    this.isSigned = isSigned;\n+  }\n \n-    public Document addLinksItem(Link linksItem) {\n-        if (this.links == null) {\n-            this.links = new ArrayList<Link>();\n-        }\n-        this.links.add(linksItem);\n-        return this;\n-    }\n+  public Document links(List<Link> links) {\n+    this.links = links;\n+    return this;\n+  }\n \n-    /**\n-     * Gets or sets a list of links that originate from this document.\n-    * @return links\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a list of links that originate from this document.\")\n-    public List<Link> getLinks() {\n-        return links;\n+  public Document addLinksItem(Link linksItem) {\n+    if (this.links == null) {\n+      this.links = new ArrayList<Link>();\n     }\n+    this.links.add(linksItem);\n+    return this;\n+  }\n \n-    public void setLinks(List<Link> links) {\n-        this.links = links;\n-    }\n+  /**\n+   * Gets or sets a list of links that originate from this document.\n+   *\n+   * @return links\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a list of links that originate from this document.\")\n+  public List<Link> getLinks() {\n+    return links;\n+  }\n \n-    public Document sourceFormat(SourceFormatEnum sourceFormat) {\n-        this.sourceFormat = sourceFormat;\n-        return this;\n-    }\n+  public void setLinks(List<Link> links) {\n+    this.links = links;\n+  }\n \n-    /**\n-     * Gets or sets the original format of the document.\n-    * @return sourceFormat\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the original format of the document.\")\n-    public SourceFormatEnum getSourceFormat() {\n-        return sourceFormat;\n-    }\n+  public Document sourceFormat(SourceFormatEnum sourceFormat) {\n+    this.sourceFormat = sourceFormat;\n+    return this;\n+  }\n \n-    public void setSourceFormat(SourceFormatEnum sourceFormat) {\n-        this.sourceFormat = sourceFormat;\n-    }\n+  /**\n+   * Gets or sets the original format of the document.\n+   *\n+   * @return sourceFormat\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the original format of the document.\")\n+  public SourceFormatEnum getSourceFormat() {\n+    return sourceFormat;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    Document document = (Document)o;\n+  public void setSourceFormat(SourceFormatEnum sourceFormat) {\n+    this.sourceFormat = sourceFormat;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    Document document = (Document) o;\n     return\n         Objects.equals(this.documentProperties, document.documentProperties) &&\n-        Objects.equals(this.fileName, document.fileName) &&\n-        Objects.equals(this.isEncrypted, document.isEncrypted) &&\n-        Objects.equals(this.isSigned, document.isSigned) &&\n-        Objects.equals(this.links, document.links) &&\n-        Objects.equals(this.sourceFormat, document.sourceFormat);\n+            Objects.equals(this.fileName, document.fileName) &&\n+            Objects.equals(this.isEncrypted, document.isEncrypted) &&\n+            Objects.equals(this.isSigned, document.isSigned) &&\n+            Objects.equals(this.links, document.links) &&\n+            Objects.equals(this.sourceFormat, document.sourceFormat);\n   }\n \n   @Override\n",
            "diff_size": 234
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/60/Document.java\nindex 205e3f8492..6be4fd552f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/60/Document.java\n@@ -45,72 +45,97 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Represents Words document DTO.\n  */\n+\n+\n @ApiModel(description = \"Represents Words document DTO.\")\n+\n public class Document {\n     /**\n      * Gets or sets the original format of the document.\n      */\n     @JsonAdapter(SourceFormatEnum.Adapter.class)\n     public enum SourceFormatEnum {\n-        UNKNOWN(\"Unknown\"),\n-        DOC(\"Doc\"),\n-        DOT(\"Dot\"),\n-        DOCPREWORD60(\"DocPreWord60\"),\n-        DOCX(\"Docx\"),\n-        DOCM(\"Docm\"),\n-        DOTX(\"Dotx\"),\n-        DOTM(\"Dotm\"),\n-        FLATOPC(\"FlatOpc\"),\n-        RTF(\"Rtf\"),\n-        WORDML(\"WordML\"),\n-        HTML(\"Html\"),\n-        MHTML(\"Mhtml\"),\n-        EPUB(\"Epub\"),\n-        TEXT(\"Text\"),\n-        ODT(\"Odt\"),\n-        OTT(\"Ott\"),\n-        PDF(\"Pdf\"),\n-        XPS(\"Xps\"),\n-        TIFF(\"Tiff\"),\n-        SVG(\"Svg\");\n-\n-        private String value;\n-\n-        SourceFormatEnum(String value) {\n-            this.value = value;\n-        }\n+    UNKNOWN(\"Unknown\"),\n+\n+    DOC(\"Doc\"),\n+\n+    DOT(\"Dot\"),\n+\n+    DOCPREWORD60(\"DocPreWord60\"),\n+\n+    DOCX(\"Docx\"),\n+\n+    DOCM(\"Docm\"),\n+\n+    DOTX(\"Dotx\"),\n+\n+    DOTM(\"Dotm\"),\n+\n+    FLATOPC(\"FlatOpc\"),\n+\n+    RTF(\"Rtf\"),\n+\n+    WORDML(\"WordML\"),\n+\n+    HTML(\"Html\"),\n+\n+    MHTML(\"Mhtml\"),\n+\n+    EPUB(\"Epub\"),\n+\n+    TEXT(\"Text\"),\n+\n+    ODT(\"Odt\"),\n+\n+    OTT(\"Ott\"),\n \n-        public String getValue() {\n-            return value;\n+    PDF(\"Pdf\"),\n+\n+    XPS(\"Xps\"),\n+\n+    TIFF(\"Tiff\"),\n+\n+    SVG(\"Svg\");\n+\n+    private String value;\n+\n+    SourceFormatEnum(String value) {\n+        this.value = value;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+                                     return String.valueOf(value);\n+    }\n+\n+    public static SourceFormatEnum fromValue(String text) {\n+        for (SourceFormatEnum b : SourceFormatEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+                                                                 return b;\n+        }\n         }\n+        return null;\n+    }\n \n+    public static class Adapter extends TypeAdapter<SourceFormatEnum> {\n         @Override\n-        public String toString() {\n-            return String.valueOf(value);\n+        public void write(final JsonWriter jsonWriter, final SourceFormatEnum enumeration) throws IOException {\n+            jsonWriter.value(enumeration.getValue());\n         }\n \n-        public static SourceFormatEnum fromValue(String text) {\n-            for (SourceFormatEnum b : SourceFormatEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n \n-        public static class Adapter extends TypeAdapter< SourceFormatEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final SourceFormatEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public SourceFormatEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return SourceFormatEnum.fromValue(String.valueOf(value));\n-            }\n+        @Override\n+        public SourceFormatEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return SourceFormatEnum.fromValue(String.valueOf(value));\n         }\n     }\n+    }\n+\n \n     @SerializedName(\"DocumentProperties\")\n     private DocumentProperties documentProperties = null;\n@@ -129,63 +154,76 @@ public class Document {\n \n     @SerializedName(\"SourceFormat\")\n     private SourceFormatEnum sourceFormat = null;\n+\n     public Document documentProperties(DocumentProperties documentProperties) {\n-        this.documentProperties = documentProperties;\n-        return this;\n+    this.documentProperties = documentProperties;\n+    return this;\n     }\n \n     /**\n      * Gets or sets returns document properties.\n     * @return documentProperties\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets returns document properties.\")\n     public DocumentProperties getDocumentProperties() {\n-        return documentProperties;\n+    return documentProperties;\n     }\n \n+\n     public void setDocumentProperties(DocumentProperties documentProperties) {\n-        this.documentProperties = documentProperties;\n+    this.documentProperties = documentProperties;\n     }\n \n+\n     public Document fileName(String fileName) {\n-        this.fileName = fileName;\n-        return this;\n+    this.fileName = fileName;\n+    return this;\n     }\n \n     /**\n      * Gets or sets the name of the file.\n     * @return fileName\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the name of the file.\")\n     public String getFileName() {\n-        return fileName;\n+    return fileName;\n     }\n \n+\n     public void setFileName(String fileName) {\n-        this.fileName = fileName;\n+    this.fileName = fileName;\n     }\n \n+\n     public Document isEncrypted(Boolean isEncrypted) {\n-        this.isEncrypted = isEncrypted;\n-        return this;\n+    this.isEncrypted = isEncrypted;\n+    return this;\n     }\n \n     /**\n      * Gets or sets a value indicating whether returns true if the document is encrypted and requires a password to open.\n     * @return isEncrypted\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether returns true if the document is encrypted and requires a password to open.\")\n     public Boolean getIsEncrypted() {\n-        return isEncrypted;\n+    return isEncrypted;\n     }\n \n+\n     public void setIsEncrypted(Boolean isEncrypted) {\n-        this.isEncrypted = isEncrypted;\n+    this.isEncrypted = isEncrypted;\n     }\n \n+\n     public Document isSigned(Boolean isSigned) {\n-        this.isSigned = isSigned;\n-        return this;\n+    this.isSigned = isSigned;\n+    return this;\n     }\n \n     /**\n@@ -193,84 +231,101 @@ public class Document {\n      * digital signature is present on a document, but it does not specify whether the signature is valid or not.\n     * @return isSigned\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether returns true if the document contains a digital signature. This property merely informs that a digital signature is present on a document, but it does not specify whether the signature is valid or not.\")\n     public Boolean getIsSigned() {\n-        return isSigned;\n+    return isSigned;\n     }\n \n+\n     public void setIsSigned(Boolean isSigned) {\n-        this.isSigned = isSigned;\n+    this.isSigned = isSigned;\n     }\n \n+\n     public Document links(List<Link> links) {\n-        this.links = links;\n-        return this;\n+    this.links = links;\n+    return this;\n     }\n \n+\n     public Document addLinksItem(Link linksItem) {\n-        if (this.links == null) {\n-            this.links = new ArrayList<Link>();\n-        }\n-        this.links.add(linksItem);\n-        return this;\n+    if (this.links == null) {\n+        this.links = new ArrayList<Link>();\n+    }\n+    this.links.add(linksItem);\n+    return this;\n     }\n \n     /**\n      * Gets or sets a list of links that originate from this document.\n     * @return links\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a list of links that originate from this document.\")\n     public List<Link> getLinks() {\n-        return links;\n+    return links;\n     }\n \n+\n     public void setLinks(List<Link> links) {\n-        this.links = links;\n+    this.links = links;\n     }\n \n+\n     public Document sourceFormat(SourceFormatEnum sourceFormat) {\n-        this.sourceFormat = sourceFormat;\n-        return this;\n+    this.sourceFormat = sourceFormat;\n+    return this;\n     }\n \n     /**\n      * Gets or sets the original format of the document.\n     * @return sourceFormat\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the original format of the document.\")\n     public SourceFormatEnum getSourceFormat() {\n-        return sourceFormat;\n+    return sourceFormat;\n     }\n \n+\n     public void setSourceFormat(SourceFormatEnum sourceFormat) {\n-        this.sourceFormat = sourceFormat;\n+    this.sourceFormat = sourceFormat;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    Document document = (Document)o;\n-    return\n-        Objects.equals(this.documentProperties, document.documentProperties) &&\n+\n+        Document document = (Document) o;\n+        return Objects.equals(this.documentProperties, document.documentProperties) &&\n         Objects.equals(this.fileName, document.fileName) &&\n         Objects.equals(this.isEncrypted, document.isEncrypted) &&\n         Objects.equals(this.isSigned, document.isSigned) &&\n-        Objects.equals(this.links, document.links) &&\n-        Objects.equals(this.sourceFormat, document.sourceFormat);\n-  }\n+            Objects.equals(this.links, document.links) &&\n+            Objects.equals(this.sourceFormat, document.sourceFormat);\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(documentProperties, fileName, isEncrypted, isSigned, links, sourceFormat);\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n+\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class Document {\\n\");\n     sb.append(\"    documentProperties: \").append(toIndentedString(documentProperties)).append(\"\\n\");\n@@ -281,16 +336,18 @@ public class Document {\n     sb.append(\"    sourceFormat: \").append(toIndentedString(sourceFormat)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 169
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/60/Document.java\nindex 205e3f8492..dcb11184a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/60/Document.java\n@@ -254,7 +254,7 @@ public class Document {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Document document = (Document)o;\n+    Document document = (Document) o;\n     return\n         Objects.equals(this.documentProperties, document.documentProperties) &&\n         Objects.equals(this.fileName, document.fileName) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/60/Document.java\nindex 205e3f8492..050f587b7b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/60/Document.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/60/Document.java\n@@ -254,7 +254,8 @@ public class Document {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Document document = (Document)o;\n+    Document document = (Document\n+) o;\n     return\n         Objects.equals(this.documentProperties, document.documentProperties) &&\n         Objects.equals(this.fileName, document.fileName) &&\n",
            "diff_size": 2
        }
    ]
}