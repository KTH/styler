{
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "141",
                "column": "64",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n    return\n        Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n        Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/22/RtfSaveOptionsData.java\nindex cb6977b3fb..e072626791 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/22/RtfSaveOptionsData.java\n@@ -138,7 +138,7 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n+    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData) o;\n     return\n         Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n         Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/22/RtfSaveOptionsData.java\nindex cb6977b3fb..59c56af682 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/22/RtfSaveOptionsData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,104 +50,109 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"container class for rtf save options.\")\n public class RtfSaveOptionsData extends SaveOptionsData {\n-    @SerializedName(\"ExportCompactSize\")\n-    private Boolean exportCompactSize = null;\n+  @SerializedName(\"ExportCompactSize\")\n+  private Boolean exportCompactSize = null;\n \n-    @SerializedName(\"ExportImagesForOldReaders\")\n-    private Boolean exportImagesForOldReaders = null;\n+  @SerializedName(\"ExportImagesForOldReaders\")\n+  private Boolean exportImagesForOldReaders = null;\n \n-    @SerializedName(\"PrettyFormat\")\n-    private Boolean prettyFormat = null;\n+  @SerializedName(\"PrettyFormat\")\n+  private Boolean prettyFormat = null;\n \n-    @SerializedName(\"SaveImagesAsWmf\")\n-    private Boolean saveImagesAsWmf = null;\n-    public RtfSaveOptionsData exportCompactSize(Boolean exportCompactSize) {\n-        this.exportCompactSize = exportCompactSize;\n-        return this;\n-    }\n+  @SerializedName(\"SaveImagesAsWmf\")\n+  private Boolean saveImagesAsWmf = null;\n \n-    /**\n-     * Gets or sets allows to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.\n-    * @return exportCompactSize\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets allows to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.\")\n-    public Boolean getExportCompactSize() {\n-        return exportCompactSize;\n-    }\n+  public RtfSaveOptionsData exportCompactSize(Boolean exportCompactSize) {\n+    this.exportCompactSize = exportCompactSize;\n+    return this;\n+  }\n \n-    public void setExportCompactSize(Boolean exportCompactSize) {\n-        this.exportCompactSize = exportCompactSize;\n-    }\n+  /**\n+   * Gets or sets allows to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.\n+   *\n+   * @return exportCompactSize\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets allows to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.\")\n+  public Boolean getExportCompactSize() {\n+    return exportCompactSize;\n+  }\n \n-    public RtfSaveOptionsData exportImagesForOldReaders(Boolean exportImagesForOldReaders) {\n-        this.exportImagesForOldReaders = exportImagesForOldReaders;\n-        return this;\n-    }\n+  public void setExportCompactSize(Boolean exportCompactSize) {\n+    this.exportCompactSize = exportCompactSize;\n+  }\n \n-    /**\n-     * Gets or sets specifies whether the keywords for \"old readers\" are written to RTF or not.\n-    * @return exportImagesForOldReaders\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets specifies whether the keywords for \\\"old readers\\\" are written to RTF or not.\")\n-    public Boolean getExportImagesForOldReaders() {\n-        return exportImagesForOldReaders;\n-    }\n+  public RtfSaveOptionsData exportImagesForOldReaders(Boolean exportImagesForOldReaders) {\n+    this.exportImagesForOldReaders = exportImagesForOldReaders;\n+    return this;\n+  }\n \n-    public void setExportImagesForOldReaders(Boolean exportImagesForOldReaders) {\n-        this.exportImagesForOldReaders = exportImagesForOldReaders;\n-    }\n+  /**\n+   * Gets or sets specifies whether the keywords for \"old readers\" are written to RTF or not.\n+   *\n+   * @return exportImagesForOldReaders\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets specifies whether the keywords for \\\"old readers\\\" are written to RTF or not.\")\n+  public Boolean getExportImagesForOldReaders() {\n+    return exportImagesForOldReaders;\n+  }\n \n-    public RtfSaveOptionsData prettyFormat(Boolean prettyFormat) {\n-        this.prettyFormat = prettyFormat;\n-        return this;\n-    }\n+  public void setExportImagesForOldReaders(Boolean exportImagesForOldReaders) {\n+    this.exportImagesForOldReaders = exportImagesForOldReaders;\n+  }\n \n-    /**\n-     * Gets or sets specifies whether or not use pretty formats output.\n-    * @return prettyFormat\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets specifies whether or not use pretty formats output.\")\n-    public Boolean getPrettyFormat() {\n-        return prettyFormat;\n-    }\n+  public RtfSaveOptionsData prettyFormat(Boolean prettyFormat) {\n+    this.prettyFormat = prettyFormat;\n+    return this;\n+  }\n \n-    public void setPrettyFormat(Boolean prettyFormat) {\n-        this.prettyFormat = prettyFormat;\n-    }\n+  /**\n+   * Gets or sets specifies whether or not use pretty formats output.\n+   *\n+   * @return prettyFormat\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets specifies whether or not use pretty formats output.\")\n+  public Boolean getPrettyFormat() {\n+    return prettyFormat;\n+  }\n \n-    public RtfSaveOptionsData saveImagesAsWmf(Boolean saveImagesAsWmf) {\n-        this.saveImagesAsWmf = saveImagesAsWmf;\n-        return this;\n-    }\n+  public void setPrettyFormat(Boolean prettyFormat) {\n+    this.prettyFormat = prettyFormat;\n+  }\n \n-    /**\n-     * Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.\n-    * @return saveImagesAsWmf\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.\")\n-    public Boolean getSaveImagesAsWmf() {\n-        return saveImagesAsWmf;\n-    }\n+  public RtfSaveOptionsData saveImagesAsWmf(Boolean saveImagesAsWmf) {\n+    this.saveImagesAsWmf = saveImagesAsWmf;\n+    return this;\n+  }\n \n-    public void setSaveImagesAsWmf(Boolean saveImagesAsWmf) {\n-        this.saveImagesAsWmf = saveImagesAsWmf;\n-    }\n+  /**\n+   * Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.\n+   *\n+   * @return saveImagesAsWmf\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.\")\n+  public Boolean getSaveImagesAsWmf() {\n+    return saveImagesAsWmf;\n+  }\n+\n+  public void setSaveImagesAsWmf(Boolean saveImagesAsWmf) {\n+    this.saveImagesAsWmf = saveImagesAsWmf;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData) o;\n     return\n         Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n-        Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n-        Objects.equals(this.prettyFormat, rtfSaveOptionsData.prettyFormat) &&\n-        Objects.equals(this.saveImagesAsWmf, rtfSaveOptionsData.saveImagesAsWmf) &&\n-        super.equals(o);\n+            Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n+            Objects.equals(this.prettyFormat, rtfSaveOptionsData.prettyFormat) &&\n+            Objects.equals(this.saveImagesAsWmf, rtfSaveOptionsData.saveImagesAsWmf) &&\n+            super.equals(o);\n   }\n \n   @Override\n",
            "diff_size": 114
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "143",
                    "column": "60",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/22/RtfSaveOptionsData.java\nindex cb6977b3fb..7a7c6ae041 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/22/RtfSaveOptionsData.java\n@@ -58,7 +58,8 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n \n     @SerializedName(\"SaveImagesAsWmf\")\n     private Boolean saveImagesAsWmf = null;\n-    public RtfSaveOptionsData exportCompactSize(Boolean exportCompactSize) {\n+\n+public RtfSaveOptionsData exportCompactSize(Boolean exportCompactSize) {\n         this.exportCompactSize = exportCompactSize;\n         return this;\n     }\n@@ -134,13 +135,13 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n-    return\n-        Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n+\n+RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n+    return Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n         Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n         Objects.equals(this.prettyFormat, rtfSaveOptionsData.prettyFormat) &&\n         Objects.equals(this.saveImagesAsWmf, rtfSaveOptionsData.saveImagesAsWmf) &&\n@@ -175,4 +176,4 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/22/RtfSaveOptionsData.java\nindex cb6977b3fb..004ce989db 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/22/RtfSaveOptionsData.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * container class for rtf save options.\n  */\n+\n+\n @ApiModel(description = \"container class for rtf save options.\")\n+\n public class RtfSaveOptionsData extends SaveOptionsData {\n     @SerializedName(\"ExportCompactSize\")\n     private Boolean exportCompactSize = null;\n@@ -58,102 +61,123 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n \n     @SerializedName(\"SaveImagesAsWmf\")\n     private Boolean saveImagesAsWmf = null;\n+\n     public RtfSaveOptionsData exportCompactSize(Boolean exportCompactSize) {\n-        this.exportCompactSize = exportCompactSize;\n-        return this;\n+    this.exportCompactSize = exportCompactSize;\n+    return this;\n     }\n \n     /**\n      * Gets or sets allows to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.\n     * @return exportCompactSize\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets allows to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.\")\n     public Boolean getExportCompactSize() {\n-        return exportCompactSize;\n+    return exportCompactSize;\n     }\n \n+\n     public void setExportCompactSize(Boolean exportCompactSize) {\n-        this.exportCompactSize = exportCompactSize;\n+    this.exportCompactSize = exportCompactSize;\n     }\n \n+\n     public RtfSaveOptionsData exportImagesForOldReaders(Boolean exportImagesForOldReaders) {\n-        this.exportImagesForOldReaders = exportImagesForOldReaders;\n-        return this;\n+    this.exportImagesForOldReaders = exportImagesForOldReaders;\n+    return this;\n     }\n \n     /**\n      * Gets or sets specifies whether the keywords for \"old readers\" are written to RTF or not.\n     * @return exportImagesForOldReaders\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets specifies whether the keywords for \\\"old readers\\\" are written to RTF or not.\")\n     public Boolean getExportImagesForOldReaders() {\n-        return exportImagesForOldReaders;\n+    return exportImagesForOldReaders;\n     }\n \n+\n     public void setExportImagesForOldReaders(Boolean exportImagesForOldReaders) {\n-        this.exportImagesForOldReaders = exportImagesForOldReaders;\n+    this.exportImagesForOldReaders = exportImagesForOldReaders;\n     }\n \n+\n     public RtfSaveOptionsData prettyFormat(Boolean prettyFormat) {\n-        this.prettyFormat = prettyFormat;\n-        return this;\n+    this.prettyFormat = prettyFormat;\n+    return this;\n     }\n \n     /**\n      * Gets or sets specifies whether or not use pretty formats output.\n     * @return prettyFormat\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets specifies whether or not use pretty formats output.\")\n     public Boolean getPrettyFormat() {\n-        return prettyFormat;\n+    return prettyFormat;\n     }\n \n+\n     public void setPrettyFormat(Boolean prettyFormat) {\n-        this.prettyFormat = prettyFormat;\n+    this.prettyFormat = prettyFormat;\n     }\n \n+\n     public RtfSaveOptionsData saveImagesAsWmf(Boolean saveImagesAsWmf) {\n-        this.saveImagesAsWmf = saveImagesAsWmf;\n-        return this;\n+    this.saveImagesAsWmf = saveImagesAsWmf;\n+    return this;\n     }\n \n     /**\n      * Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.\n     * @return saveImagesAsWmf\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.\")\n     public Boolean getSaveImagesAsWmf() {\n-        return saveImagesAsWmf;\n+    return saveImagesAsWmf;\n     }\n \n+\n     public void setSaveImagesAsWmf(Boolean saveImagesAsWmf) {\n-        this.saveImagesAsWmf = saveImagesAsWmf;\n+    this.saveImagesAsWmf = saveImagesAsWmf;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n-    return\n-        Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n+\n+        RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData) o;\n+        return Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n         Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n         Objects.equals(this.prettyFormat, rtfSaveOptionsData.prettyFormat) &&\n-        Objects.equals(this.saveImagesAsWmf, rtfSaveOptionsData.saveImagesAsWmf) &&\n-        super.equals(o);\n-  }\n+            Objects.equals(this.saveImagesAsWmf, rtfSaveOptionsData.saveImagesAsWmf) &&\n+            super.equals(o);\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(exportCompactSize, exportImagesForOldReaders, prettyFormat, saveImagesAsWmf, super.hashCode());\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class RtfSaveOptionsData {\\n\");\n     sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n@@ -163,16 +187,19 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n     sb.append(\"    saveImagesAsWmf: \").append(toIndentedString(saveImagesAsWmf)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/22/RtfSaveOptionsData.java\nindex cb6977b3fb..e072626791 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/22/RtfSaveOptionsData.java\n@@ -138,7 +138,7 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n+    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData) o;\n     return\n         Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n         Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/22/RtfSaveOptionsData.java\nindex cb6977b3fb..4a782d9d83 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/22/RtfSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/22/RtfSaveOptionsData.java\n@@ -138,7 +138,9 @@ public class RtfSaveOptionsData extends SaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData)o;\n+    RtfSaveOptionsData rtfSaveOptionsData = (RtfSaveOptionsData\n+\n+    ) o;\n     return\n         Objects.equals(this.exportCompactSize, rtfSaveOptionsData.exportCompactSize) &&\n         Objects.equals(this.exportImagesForOldReaders, rtfSaveOptionsData.exportImagesForOldReaders) &&\n",
            "diff_size": 3
        }
    ]
}