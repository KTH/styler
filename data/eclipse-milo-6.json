{
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "182",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 163).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public UaMethodNode getRespondMethodNode() {\n        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n        return (UaMethodNode) methodNode.orElse(null);\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "column": "48",
                    "severity": "error",
                    "message": "'{' at column 48 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler/6/DialogConditionTypeNode.java\nindex fecaf9c27f..249ca31437 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler/6/DialogConditionTypeNode.java\n@@ -178,8 +178,8 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     }\n \n     @Override\n-    public UaMethodNode getRespondMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n-        return (UaMethodNode) methodNode.orElse(null);\n-    }\n+    public UaMethodNode getRespondMethodNode() { Optional\n+        <UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n+    return (UaMethodNode) methodNode.orElse(null);\n+}\n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/6/DialogConditionTypeNode.java\nindex fecaf9c27f..0a8c7fe71d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/6/DialogConditionTypeNode.java\n@@ -179,7 +179,9 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n \n     @Override\n     public UaMethodNode getRespondMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n+        Optional<UaNode> methodNode =\n+            findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode,\n+                Reference.HAS_COMPONENT_PREDICATE);\n         return (UaMethodNode) methodNode.orElse(null);\n     }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/6/DialogConditionTypeNode.java\nindex fecaf9c27f..fb33203d32 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/6/DialogConditionTypeNode.java\n@@ -182,4 +182,4 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n         Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n         return (UaMethodNode) methodNode.orElse(null);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/6/DialogConditionTypeNode.java\nindex fecaf9c27f..75e4248a72 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/6/DialogConditionTypeNode.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.server.model.nodes.objects;\n \n import java.util.Optional;\n-\n import org.eclipse.milo.opcua.sdk.core.Reference;\n import org.eclipse.milo.opcua.sdk.server.api.nodes.VariableNode;\n import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.PropertyTypeNode;\n@@ -29,27 +28,38 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n \n public class DialogConditionTypeNode extends ConditionTypeNode implements DialogConditionType {\n-    public DialogConditionTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                   LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                   UInteger userWriteMask) {\n+    public DialogConditionTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask, UInteger userWriteMask) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n     }\n \n-    public DialogConditionTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                   LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                   UInteger userWriteMask, UByte eventNotifier) {\n+    public DialogConditionTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask,\n+        UInteger userWriteMask, UByte eventNotifier) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, eventNotifier);\n     }\n \n     @Override\n     public PropertyTypeNode getPromptNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.PROMPT);\n+\n         return (PropertyTypeNode) propertyNode.orElse(null);\n     }\n \n     @Override\n     public LocalizedText getPrompt() {\n         Optional<LocalizedText> propertyValue = getProperty(DialogConditionType.PROMPT);\n+\n         return propertyValue.orElse(null);\n     }\n \n@@ -61,12 +71,14 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public PropertyTypeNode getResponseOptionSetNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.RESPONSE_OPTION_SET);\n+\n         return (PropertyTypeNode) propertyNode.orElse(null);\n     }\n \n     @Override\n     public LocalizedText[] getResponseOptionSet() {\n         Optional<LocalizedText[]> propertyValue = getProperty(DialogConditionType.RESPONSE_OPTION_SET);\n+\n         return propertyValue.orElse(null);\n     }\n \n@@ -78,12 +90,14 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public PropertyTypeNode getDefaultResponseNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.DEFAULT_RESPONSE);\n+\n         return (PropertyTypeNode) propertyNode.orElse(null);\n     }\n \n     @Override\n     public Integer getDefaultResponse() {\n         Optional<Integer> propertyValue = getProperty(DialogConditionType.DEFAULT_RESPONSE);\n+\n         return propertyValue.orElse(null);\n     }\n \n@@ -95,12 +109,14 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public PropertyTypeNode getOkResponseNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.OK_RESPONSE);\n+\n         return (PropertyTypeNode) propertyNode.orElse(null);\n     }\n \n     @Override\n     public Integer getOkResponse() {\n         Optional<Integer> propertyValue = getProperty(DialogConditionType.OK_RESPONSE);\n+\n         return propertyValue.orElse(null);\n     }\n \n@@ -112,12 +128,14 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public PropertyTypeNode getCancelResponseNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.CANCEL_RESPONSE);\n+\n         return (PropertyTypeNode) propertyNode.orElse(null);\n     }\n \n     @Override\n     public Integer getCancelResponse() {\n         Optional<Integer> propertyValue = getProperty(DialogConditionType.CANCEL_RESPONSE);\n+\n         return propertyValue.orElse(null);\n     }\n \n@@ -129,12 +147,14 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public PropertyTypeNode getLastResponseNode() {\n         Optional<VariableNode> propertyNode = getPropertyNode(DialogConditionType.LAST_RESPONSE);\n+\n         return (PropertyTypeNode) propertyNode.orElse(null);\n     }\n \n     @Override\n     public Integer getLastResponse() {\n         Optional<Integer> propertyValue = getProperty(DialogConditionType.LAST_RESPONSE);\n+\n         return propertyValue.orElse(null);\n     }\n \n@@ -146,13 +166,16 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public TwoStateVariableTypeNode getEnabledStateNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"EnabledState\");\n+\n         return (TwoStateVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public LocalizedText getEnabledState() {\n         Optional<VariableNode> component = getVariableComponent(\"EnabledState\");\n-        return component.map(node -> (LocalizedText) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (LocalizedText) node.getValue().getValue()\n+                                                                    .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -163,13 +186,16 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     @Override\n     public TwoStateVariableTypeNode getDialogStateNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"DialogState\");\n+\n         return (TwoStateVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public LocalizedText getDialogState() {\n         Optional<VariableNode> component = getVariableComponent(\"DialogState\");\n-        return component.map(node -> (LocalizedText) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (LocalizedText) node.getValue().getValue()\n+                                                                    .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -179,7 +205,14 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n \n     @Override\n     public UaMethodNode getRespondMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n+        Optional<UaNode> methodNode = findNode(\n+            \"http://opcfoundation.org/UA/\",\n+            \"Respond\",\n+            node -> node instanceof UaMethodNode,\n+            Reference.HAS_COMPONENT_PREDICATE\n+        );\n+\n         return (UaMethodNode) methodNode.orElse(null);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "column": "89",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "182",
                    "column": "94",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "column": "94",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "column": "122",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "182",
                    "column": "157",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "182",
                    "column": "158",
                    "severity": "error",
                    "message": "WhitespaceAround: 'return' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "column": "158",
                    "severity": "error",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "column": "202",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_random/6/DialogConditionTypeNode.java\nindex fecaf9c27f..85b769f093 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_random/6/DialogConditionTypeNode.java\n@@ -179,7 +179,6 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n \n     @Override\n     public UaMethodNode getRespondMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n-        return (UaMethodNode) methodNode.orElse(null);\n+        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\",node->nodeinstanceofUaMethodNode,Reference.HAS_COMPONENT_PREDICATE);return(UaMethodNode) methodNode.orElse(null);\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "column": "48",
                    "severity": "error",
                    "message": "'{' at column 48 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_three_grams/6/DialogConditionTypeNode.java\nindex fecaf9c27f..249ca31437 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/6/DialogConditionTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_three_grams/6/DialogConditionTypeNode.java\n@@ -178,8 +178,8 @@ public class DialogConditionTypeNode extends ConditionTypeNode implements Dialog\n     }\n \n     @Override\n-    public UaMethodNode getRespondMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n-        return (UaMethodNode) methodNode.orElse(null);\n-    }\n+    public UaMethodNode getRespondMethodNode() { Optional\n+        <UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"Respond\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n+    return (UaMethodNode) methodNode.orElse(null);\n+}\n }\n",
            "diff_size": 4
        }
    ]
}