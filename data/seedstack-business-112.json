{
    "error_id": "112",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport com.google.common.collect.ArrayListMultimap;\nimport com.google.common.collect.Multimap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/112/DefaultFactoryCollector.java\nindex cdeccac510..d6427ca303 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/112/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/112/DefaultFactoryCollector.java\nindex cdeccac510..4910c038dc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/112/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n@@ -31,7 +32,7 @@ class DefaultFactoryCollector {\n     }\n \n     Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses,\n-            Collection<Class<?>> valueObjectClasses) {\n+                                        Collection<Class<?>> valueObjectClasses) {\n         Collection<BindingStrategy> strategies = new ArrayList<>();\n         boolean bindGuiceFactory = true;\n \n@@ -39,7 +40,7 @@ class DefaultFactoryCollector {\n             strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class,\n                     Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream())\n                             .filter(this::isCandidate)\n-                            .map(candidate -> new Type[]{candidate})\n+                            .map(candidate -> new Type[] {candidate})\n                             .collect(Collectors.toList())));\n             bindGuiceFactory = false;\n         }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/112/DefaultFactoryCollector.java\nindex cdeccac510..d3e6622c07 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/112/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n@@ -30,27 +31,23 @@ class DefaultFactoryCollector {\n         this.bindings = bindings;\n     }\n \n-    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses,\n-            Collection<Class<?>> valueObjectClasses) {\n-        Collection<BindingStrategy> strategies = new ArrayList<>();\n+    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses, Collection<Class<?>> valueObjectClasses) {\n+    Collection<BindingStrategy> strategies = new ArrayList<>();\n         boolean bindGuiceFactory = true;\n-\n-        if (!aggregateClasses.isEmpty() || !valueObjectClasses.isEmpty()) {\n+if (!aggregateClasses.isEmpty() || !valueObjectClasses.isEmpty()) {\n             strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class,\n                     Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream())\n                             .filter(this::isCandidate)\n                             .map(candidate -> new Type[]{candidate})\n                             .collect(Collectors.toList())));\n-            bindGuiceFactory = false;\n+        bindGuiceFactory = false;\n         }\n \n         Multimap<Type, Class<?>> producibleClasses = filterProducibleClasses(bindings);\n         if (!producibleClasses.isEmpty()) {\n-            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses,\n-                    bindGuiceFactory));\n+            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses, bindGuiceFactory));\n         }\n-\n-        return strategies;\n+return strategies;\n     }\n \n     /**\n@@ -66,11 +63,11 @@ class DefaultFactoryCollector {\n                 .stream()\n                 .filter(entry -> isCandidate(entry.getKey()\n                         .getTypeLiteral()\n-                        .getType()))\n-                .forEach(entry -> defaultFactoryToBind.put(entry.getKey()\n+                        .getType())).forEach(entry -> defaultFactoryToBind.put(entry.getKey()\n                         .getTypeLiteral()\n                         .getType(), entry.getValue()));\n-        return defaultFactoryToBind;\n+\n+return defaultFactoryToBind;\n     }\n \n     private boolean isCandidate(Type type) {\n@@ -78,9 +75,8 @@ class DefaultFactoryCollector {\n         if (type instanceof Class<?>) {\n             result = BusinessSpecifications.PRODUCIBLE.isSatisfiedBy((Class<?>) type);\n         } else if (type instanceof ParameterizedType) {\n-            result = BusinessSpecifications.PRODUCIBLE.isSatisfiedBy(\n-                    (Class<?>) ((ParameterizedType) type).getRawType());\n+            result = BusinessSpecifications.PRODUCIBLE.isSatisfiedBy((Class<?>) ((ParameterizedType) type).getRawType());\n         }\n         return result && !bindings.containsKey(Key.get(Types.newParameterizedType(Factory.class, type)));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "warning",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'!' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'::' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'array initialization' child has incorrect indentation level 20, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "27",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/112/DefaultFactoryCollector.java\nindex cdeccac510..1c630e141a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/112/DefaultFactoryCollector.java\n@@ -23,33 +23,32 @@ import org.seedstack.business.internal.BusinessSpecifications;\n import org.seedstack.seed.core.internal.guice.BindingStrategy;\n import org.seedstack.seed.core.internal.guice.GenericBindingStrategy;\n \n+\n class DefaultFactoryCollector {\n+\n     private final Map<Key<?>, Class<?>> bindings;\n \n+\n     DefaultFactoryCollector(Map<Key<?>, Class<?>> bindings) {\n         this.bindings = bindings;\n     }\n \n-    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses,\n-            Collection<Class<?>> valueObjectClasses) {\n+    Collection<BindingStrategy> collect(Collection<Class<?>> aggregateClasses, Collection<Class<?>> valueObjectClasses) {\n         Collection<BindingStrategy> strategies = new ArrayList<>();\n         boolean bindGuiceFactory = true;\n-\n-        if (!aggregateClasses.isEmpty() || !valueObjectClasses.isEmpty()) {\n-            strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class,\n-                    Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream())\n-                            .filter(this::isCandidate)\n-                            .map(candidate -> new Type[]{candidate})\n-                            .collect(Collectors.toList())));\n+        if (! aggregateClasses.isEmpty()||\n+            ! valueObjectClasses.isEmpty()) {\n+            strategies.add(new GenericBindingStrategy<>(Factory.class, DefaultFactory.class, Stream.concat(aggregateClasses.stream(), valueObjectClasses.stream()).filter(this\n+                ::isCandidate)\n+.map(candidate-> new Type [] {\n+                    candidate})\n+.collect(Collectors.toList())));\n             bindGuiceFactory = false;\n         }\n-\n         Multimap<Type, Class<?>> producibleClasses = filterProducibleClasses(bindings);\n-        if (!producibleClasses.isEmpty()) {\n-            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses,\n-                    bindGuiceFactory));\n+        if (! producibleClasses.isEmpty()) {\n+            strategies.add(new DefaultFactoryStrategy<>(Factory.class, DefaultFactory.class, producibleClasses, bindGuiceFactory));\n         }\n-\n         return strategies;\n     }\n \n@@ -60,27 +59,25 @@ class DefaultFactoryCollector {\n      * @param bindings map of interface/implementation\n      * @return producible pairs\n      */\n+\n+\n     private Multimap<Type, Class<?>> filterProducibleClasses(Map<Key<?>, Class<?>> bindings) {\n         Multimap<Type, Class<?>> defaultFactoryToBind = ArrayListMultimap.create();\n-        bindings.entrySet()\n-                .stream()\n-                .filter(entry -> isCandidate(entry.getKey()\n-                        .getTypeLiteral()\n-                        .getType()))\n-                .forEach(entry -> defaultFactoryToBind.put(entry.getKey()\n-                        .getTypeLiteral()\n-                        .getType(), entry.getValue()));\n+        bindings.entrySet().stream()\n+            .filter(entry-> isCandidate(entry.getKey().getTypeLiteral()\n+.getType())).forEach(entry-> defaultFactoryToBind.put(entry.getKey().getTypeLiteral()\n+.getType(), entry.getValue()));\n         return defaultFactoryToBind;\n     }\n \n+\n     private boolean isCandidate(Type type) {\n         boolean result = false;\n         if (type instanceof Class<?>) {\n             result = BusinessSpecifications.PRODUCIBLE.isSatisfiedBy((Class<?>) type);\n         } else if (type instanceof ParameterizedType) {\n-            result = BusinessSpecifications.PRODUCIBLE.isSatisfiedBy(\n-                    (Class<?>) ((ParameterizedType) type).getRawType());\n-        }\n-        return result && !bindings.containsKey(Key.get(Types.newParameterizedType(Factory.class, type)));\n+                   result = BusinessSpecifications.PRODUCIBLE.isSatisfiedBy((Class<?>) ((ParameterizedType) type).getRawType());\n+               }\n+        return result && ! bindings.containsKey(Key.get(Types.newParameterizedType(Factory.class, type)));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/112/DefaultFactoryCollector.java\nindex cdeccac510..d6427ca303 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/112/DefaultFactoryCollector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/112/DefaultFactoryCollector.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import com.google.common.collect.ArrayListMultimap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}