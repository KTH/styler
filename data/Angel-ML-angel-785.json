{
    "error_id": "785",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/785/WorkerFromAttemptEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/785/WorkerFromAttemptEvent.java\nindex 0db0a4cf1a..3924b4fd93 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/785/WorkerFromAttemptEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/785/WorkerFromAttemptEvent.java\n@@ -21,26 +21,30 @@ import com.tencent.angel.worker.WorkerAttemptId;\n /**\n  * Worker events that come from the attempts of worker.\n  */\n-public class WorkerFromAttemptEvent extends AMWorkerEvent{\n-  /**worker attempt id*/\n-  private final WorkerAttemptId workerAttemptId;\n+public class WorkerFromAttemptEvent extends AMWorkerEvent {\n+    /**\n+     * worker attempt id\n+     */\n+    private final WorkerAttemptId workerAttemptId;\n \n-  /**\n-   * Create a WorkerFromAttemptEvent\n-   * @param eventType event type\n-   * @param workerAttemptId worker attempt id\n-   */\n-  public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n-    super(eventType, workerAttemptId.getWorkerId());\n-    this.workerAttemptId = workerAttemptId;\n-  }\n+    /**\n+     * Create a WorkerFromAttemptEvent\n+     *\n+     * @param eventType       event type\n+     * @param workerAttemptId worker attempt id\n+     */\n+    public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n+        super(eventType, workerAttemptId.getWorkerId());\n+        this.workerAttemptId = workerAttemptId;\n+    }\n \n-  /**\n-   * Get worker attempt id\n-   * @return worker attempt id\n-   */\n-  public WorkerAttemptId getWorkerAttemptId() {\n-    return workerAttemptId;\n-  }\n+    /**\n+     * Get worker attempt id\n+     *\n+     * @return worker attempt id\n+     */\n+    public WorkerAttemptId getWorkerAttemptId() {\n+        return workerAttemptId;\n+    }\n \n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/785/WorkerFromAttemptEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/785/WorkerFromAttemptEvent.java\nindex 0db0a4cf1a..770db09430 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/785/WorkerFromAttemptEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/785/WorkerFromAttemptEvent.java\n@@ -21,7 +21,7 @@ import com.tencent.angel.worker.WorkerAttemptId;\n /**\n  * Worker events that come from the attempts of worker.\n  */\n-public class WorkerFromAttemptEvent extends AMWorkerEvent{\n+public class WorkerFromAttemptEvent extends AMWorkerEvent {\n   /**worker attempt id*/\n   private final WorkerAttemptId workerAttemptId;\n \n@@ -43,4 +43,4 @@ public class WorkerFromAttemptEvent extends AMWorkerEvent{\n     return workerAttemptId;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 45.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/785/WorkerFromAttemptEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/785/WorkerFromAttemptEvent.java\nindex 0db0a4cf1a..f68d16a0c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/785/WorkerFromAttemptEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/785/WorkerFromAttemptEvent.java\n@@ -21,26 +21,29 @@ import com.tencent.angel.worker.WorkerAttemptId;\n /**\n  * Worker events that come from the attempts of worker.\n  */\n-public class WorkerFromAttemptEvent extends AMWorkerEvent{\n+\n+public class WorkerFromAttemptEvent extends AMWorkerEvent {\n   /**worker attempt id*/\n-  private final WorkerAttemptId workerAttemptId;\n+    private final WorkerAttemptId workerAttemptId;\n \n   /**\n    * Create a WorkerFromAttemptEvent\n    * @param eventType event type\n    * @param workerAttemptId worker attempt id\n    */\n-  public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n+\n+    public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n     super(eventType, workerAttemptId.getWorkerId());\n     this.workerAttemptId = workerAttemptId;\n-  }\n+    }\n \n   /**\n    * Get worker attempt id\n    * @return worker attempt id\n    */\n-  public WorkerAttemptId getWorkerAttemptId() {\n+\n+    public WorkerAttemptId getWorkerAttemptId() {\n     return workerAttemptId;\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}