{
    "error_id": "305",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\npublic class IOParameter extends BaseElement {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/305/IOParameter.java\nindex 116aacdf0a..a7fd58ca7a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/305/IOParameter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/305/IOParameter.java\nindex 116aacdf0a..6e83b8163e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/305/IOParameter.java\n@@ -13,58 +13,59 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n \n-  protected String source;\n-  protected String sourceExpression;\n-  protected String target;\n-  protected String targetExpression;\n+    protected String source;\n+    protected String sourceExpression;\n+    protected String target;\n+    protected String targetExpression;\n \n-  public String getSource() {\n-    return source;\n-  }\n+    public String getSource() {\n+        return source;\n+    }\n \n-  public void setSource(String source) {\n-    this.source = source;\n-  }\n+    public void setSource(String source) {\n+        this.source = source;\n+    }\n \n-  public String getTarget() {\n-    return target;\n-  }\n+    public String getTarget() {\n+        return target;\n+    }\n \n-  public void setTarget(String target) {\n-    this.target = target;\n-  }\n+    public void setTarget(String target) {\n+        this.target = target;\n+    }\n \n-  public String getSourceExpression() {\n-    return sourceExpression;\n-  }\n+    public String getSourceExpression() {\n+        return sourceExpression;\n+    }\n \n-  public void setSourceExpression(String sourceExpression) {\n-    this.sourceExpression = sourceExpression;\n-  }\n+    public void setSourceExpression(String sourceExpression) {\n+        this.sourceExpression = sourceExpression;\n+    }\n \n-  public String getTargetExpression() {\n-    return targetExpression;\n-  }\n+    public String getTargetExpression() {\n+        return targetExpression;\n+    }\n \n-  public void setTargetExpression(String targetExpression) {\n-    this.targetExpression = targetExpression;\n-  }\n+    public void setTargetExpression(String targetExpression) {\n+        this.targetExpression = targetExpression;\n+    }\n \n-  public IOParameter clone() {\n-    IOParameter clone = new IOParameter();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public IOParameter clone() {\n+        IOParameter clone = new IOParameter();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(IOParameter otherElement) {\n-    super.setValues(otherElement);\n-    setSource(otherElement.getSource());\n-    setSourceExpression(otherElement.getSourceExpression());\n-    setTarget(otherElement.getTarget());\n-    setTargetExpression(otherElement.getTargetExpression());\n-  }\n+    public void setValues(IOParameter otherElement) {\n+        super.setValues(otherElement);\n+        setSource(otherElement.getSource());\n+        setSourceExpression(otherElement.getSourceExpression());\n+        setTarget(otherElement.getTarget());\n+        setTargetExpression(otherElement.getTargetExpression());\n+    }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/305/IOParameter.java\nindex 116aacdf0a..3db71b5688 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/305/IOParameter.java\n@@ -15,56 +15,56 @@\n  */\n package org.activiti.bpmn.model;\n \n-public class IOParameter extends BaseElement {\n \n-  protected String source;\n-  protected String sourceExpression;\n-  protected String target;\n-  protected String targetExpression;\n+public class IOParameter extends BaseElement {\n \n-  public String getSource() {\n+    protected String source;\n+    protected String sourceExpression;\n+    protected String target;\n+    protected String targetExpression;\n+    public String getSource() {\n     return source;\n-  }\n+    }\n \n-  public void setSource(String source) {\n+    public void setSource(String source) {\n     this.source = source;\n-  }\n+    }\n \n-  public String getTarget() {\n+    public String getTarget() {\n     return target;\n-  }\n+    }\n \n-  public void setTarget(String target) {\n+    public void setTarget(String target) {\n     this.target = target;\n-  }\n+    }\n \n-  public String getSourceExpression() {\n+    public String getSourceExpression() {\n     return sourceExpression;\n-  }\n+    }\n \n-  public void setSourceExpression(String sourceExpression) {\n+    public void setSourceExpression(String sourceExpression) {\n     this.sourceExpression = sourceExpression;\n-  }\n+    }\n \n-  public String getTargetExpression() {\n+    public String getTargetExpression() {\n     return targetExpression;\n-  }\n+    }\n \n-  public void setTargetExpression(String targetExpression) {\n+    public void setTargetExpression(String targetExpression) {\n     this.targetExpression = targetExpression;\n-  }\n+    }\n \n-  public IOParameter clone() {\n+    public IOParameter clone() {\n     IOParameter clone = new IOParameter();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(IOParameter otherElement) {\n+    public void setValues(IOParameter otherElement) {\n     super.setValues(otherElement);\n     setSource(otherElement.getSource());\n     setSourceExpression(otherElement.getSourceExpression());\n     setTarget(otherElement.getTarget());\n     setTargetExpression(otherElement.getTargetExpression());\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/305/IOParameter.java\nindex 116aacdf0a..a7fd58ca7a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/305/IOParameter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/305/IOParameter.java\nindex 116aacdf0a..a7fd58ca7a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/305/IOParameter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/305/IOParameter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n",
            "diff_size": 1
        }
    ]
}