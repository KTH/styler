{
    "error_id": "129",
    "information": {
        "errors": [
            {
                "line": "115",
                "column": "61",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n    return\n        Objects.equals(this.errors, filesUploadResult.errors) &&\n        Objects.equals(this.uploaded, filesUploadResult.uploaded);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/129/FilesUploadResult.java\nindex 4bd5d80081..05f149fbfa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/129/FilesUploadResult.java\n@@ -112,7 +112,7 @@ public class FilesUploadResult {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n+    FilesUploadResult filesUploadResult = (FilesUploadResult) o;\n     return\n         Objects.equals(this.errors, filesUploadResult.errors) &&\n         Objects.equals(this.uploaded, filesUploadResult.uploaded);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/129/FilesUploadResult.java\nindex 4bd5d80081..c2f093fdf9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/129/FilesUploadResult.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,75 +50,78 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"File upload result.\")\n public class FilesUploadResult {\n-    @SerializedName(\"Errors\")\n-    private List<Error> errors = null;\n-\n-    @SerializedName(\"Uploaded\")\n-    private List<String> uploaded = null;\n-    public FilesUploadResult errors(List<Error> errors) {\n-        this.errors = errors;\n-        return this;\n-    }\n+  @SerializedName(\"Errors\")\n+  private List<Error> errors = null;\n \n-    public FilesUploadResult addErrorsItem(Error errorsItem) {\n-        if (this.errors == null) {\n-            this.errors = new ArrayList<Error>();\n-        }\n-        this.errors.add(errorsItem);\n-        return this;\n-    }\n+  @SerializedName(\"Uploaded\")\n+  private List<String> uploaded = null;\n \n-    /**\n-     * List of errors.\n-    * @return errors\n-    **/\n-    @ApiModelProperty(value = \"List of errors.\")\n-    public List<Error> getErrors() {\n-        return errors;\n-    }\n+  public FilesUploadResult errors(List<Error> errors) {\n+    this.errors = errors;\n+    return this;\n+  }\n \n-    public void setErrors(List<Error> errors) {\n-        this.errors = errors;\n+  public FilesUploadResult addErrorsItem(Error errorsItem) {\n+    if (this.errors == null) {\n+      this.errors = new ArrayList<Error>();\n     }\n+    this.errors.add(errorsItem);\n+    return this;\n+  }\n \n-    public FilesUploadResult uploaded(List<String> uploaded) {\n-        this.uploaded = uploaded;\n-        return this;\n-    }\n+  /**\n+   * List of errors.\n+   *\n+   * @return errors\n+   **/\n+  @ApiModelProperty(value = \"List of errors.\")\n+  public List<Error> getErrors() {\n+    return errors;\n+  }\n \n-    public FilesUploadResult addUploadedItem(String uploadedItem) {\n-        if (this.uploaded == null) {\n-            this.uploaded = new ArrayList<String>();\n-        }\n-        this.uploaded.add(uploadedItem);\n-        return this;\n-    }\n+  public void setErrors(List<Error> errors) {\n+    this.errors = errors;\n+  }\n \n-    /**\n-     * List of uploaded file names.\n-    * @return uploaded\n-    **/\n-    @ApiModelProperty(value = \"List of uploaded file names.\")\n-    public List<String> getUploaded() {\n-        return uploaded;\n-    }\n+  public FilesUploadResult uploaded(List<String> uploaded) {\n+    this.uploaded = uploaded;\n+    return this;\n+  }\n \n-    public void setUploaded(List<String> uploaded) {\n-        this.uploaded = uploaded;\n+  public FilesUploadResult addUploadedItem(String uploadedItem) {\n+    if (this.uploaded == null) {\n+      this.uploaded = new ArrayList<String>();\n     }\n+    this.uploaded.add(uploadedItem);\n+    return this;\n+  }\n+\n+  /**\n+   * List of uploaded file names.\n+   *\n+   * @return uploaded\n+   **/\n+  @ApiModelProperty(value = \"List of uploaded file names.\")\n+  public List<String> getUploaded() {\n+    return uploaded;\n+  }\n+\n+  public void setUploaded(List<String> uploaded) {\n+    this.uploaded = uploaded;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    FilesUploadResult filesUploadResult = (FilesUploadResult) o;\n     return\n         Objects.equals(this.errors, filesUploadResult.errors) &&\n-        Objects.equals(this.uploaded, filesUploadResult.uploaded);\n+            Objects.equals(this.uploaded, filesUploadResult.uploaded);\n   }\n \n   @Override\n",
            "diff_size": 89
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "117",
                    "column": "57",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/129/FilesUploadResult.java\nindex 4bd5d80081..15f8aacb96 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/129/FilesUploadResult.java\n@@ -52,10 +52,11 @@ public class FilesUploadResult {\n \n     @SerializedName(\"Uploaded\")\n     private List<String> uploaded = null;\n-    public FilesUploadResult errors(List<Error> errors) {\n+\n+public FilesUploadResult errors(List<Error> errors) {\n         this.errors = errors;\n         return this;\n-    }\n+  }\n \n     public FilesUploadResult addErrorsItem(Error errorsItem) {\n         if (this.errors == null) {\n@@ -81,7 +82,7 @@ public class FilesUploadResult {\n     public FilesUploadResult uploaded(List<String> uploaded) {\n         this.uploaded = uploaded;\n         return this;\n-    }\n+  }\n \n     public FilesUploadResult addUploadedItem(String uploadedItem) {\n         if (this.uploaded == null) {\n@@ -108,13 +109,13 @@ public class FilesUploadResult {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n-    return\n-        Objects.equals(this.errors, filesUploadResult.errors) &&\n+\n+FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n+    return Objects.equals(this.errors, filesUploadResult.errors) &&\n         Objects.equals(this.uploaded, filesUploadResult.uploaded);\n   }\n \n@@ -143,4 +144,4 @@ public class FilesUploadResult {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/129/FilesUploadResult.java\nindex 4bd5d80081..5ee83c8363 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/129/FilesUploadResult.java\n@@ -45,102 +45,122 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * File upload result.\n  */\n+\n+\n @ApiModel(description = \"File upload result.\")\n+\n public class FilesUploadResult {\n     @SerializedName(\"Errors\")\n     private List<Error> errors = null;\n \n     @SerializedName(\"Uploaded\")\n     private List<String> uploaded = null;\n+\n     public FilesUploadResult errors(List<Error> errors) {\n-        this.errors = errors;\n-        return this;\n+    this.errors = errors;\n+    return this;\n     }\n \n+\n     public FilesUploadResult addErrorsItem(Error errorsItem) {\n-        if (this.errors == null) {\n-            this.errors = new ArrayList<Error>();\n-        }\n-        this.errors.add(errorsItem);\n-        return this;\n+    if (this.errors == null) {\n+        this.errors = new ArrayList<Error>();\n+    }\n+    this.errors.add(errorsItem);\n+    return this;\n     }\n \n     /**\n      * List of errors.\n     * @return errors\n     **/\n+\n+\n     @ApiModelProperty(value = \"List of errors.\")\n     public List<Error> getErrors() {\n-        return errors;\n+    return errors;\n     }\n \n+\n     public void setErrors(List<Error> errors) {\n-        this.errors = errors;\n+    this.errors = errors;\n     }\n \n+\n     public FilesUploadResult uploaded(List<String> uploaded) {\n-        this.uploaded = uploaded;\n-        return this;\n+    this.uploaded = uploaded;\n+    return this;\n     }\n \n+\n     public FilesUploadResult addUploadedItem(String uploadedItem) {\n-        if (this.uploaded == null) {\n-            this.uploaded = new ArrayList<String>();\n-        }\n-        this.uploaded.add(uploadedItem);\n-        return this;\n+    if (this.uploaded == null) {\n+        this.uploaded = new ArrayList<String>();\n+    }\n+    this.uploaded.add(uploadedItem);\n+    return this;\n     }\n \n     /**\n      * List of uploaded file names.\n     * @return uploaded\n     **/\n+\n+\n     @ApiModelProperty(value = \"List of uploaded file names.\")\n     public List<String> getUploaded() {\n-        return uploaded;\n+    return uploaded;\n     }\n \n+\n     public void setUploaded(List<String> uploaded) {\n-        this.uploaded = uploaded;\n+    this.uploaded = uploaded;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n-    return\n-        Objects.equals(this.errors, filesUploadResult.errors) &&\n+\n+        FilesUploadResult filesUploadResult = (FilesUploadResult) o;\n+        return Objects.equals(this.errors, filesUploadResult.errors) &&\n         Objects.equals(this.uploaded, filesUploadResult.uploaded);\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(errors, uploaded);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class FilesUploadResult {\\n\");\n     sb.append(\"    errors: \").append(toIndentedString(errors)).append(\"\\n\");\n     sb.append(\"    uploaded: \").append(toIndentedString(uploaded)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/129/FilesUploadResult.java\nindex 4bd5d80081..05f149fbfa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/129/FilesUploadResult.java\n@@ -112,7 +112,7 @@ public class FilesUploadResult {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n+    FilesUploadResult filesUploadResult = (FilesUploadResult) o;\n     return\n         Objects.equals(this.errors, filesUploadResult.errors) &&\n         Objects.equals(this.uploaded, filesUploadResult.uploaded);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/129/FilesUploadResult.java\nindex 4bd5d80081..e33a654450 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/129/FilesUploadResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/129/FilesUploadResult.java\n@@ -112,7 +112,8 @@ public class FilesUploadResult {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FilesUploadResult filesUploadResult = (FilesUploadResult)o;\n+    FilesUploadResult filesUploadResult = (FilesUploadResult\n+) o;\n     return\n         Objects.equals(this.errors, filesUploadResult.errors) &&\n         Objects.equals(this.uploaded, filesUploadResult.uploaded);\n",
            "diff_size": 2
        }
    ]
}