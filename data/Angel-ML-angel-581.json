{
    "error_id": "581",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/581/PullPathTailParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/581/PullPathTailParam.java\nindex 5558b53995..d070dc195b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/581/PullPathTailParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/581/PullPathTailParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.getfuncs.pullpathtail;\n \n import com.tencent.angel.PartitionKey;\n@@ -25,50 +26,51 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class PullPathTailParam extends GetParam {\n-  private int partitionId;\n-  private int batchSize = -1;\n+    private int partitionId;\n+    private int batchSize = -1;\n \n-  public PullPathTailParam(int matrixId, int partitionId, int batchSize) {\n-    super(matrixId);\n-    this.partitionId = partitionId;\n-    this.batchSize = batchSize;\n-  }\n+    public PullPathTailParam(int matrixId, int partitionId, int batchSize) {\n+        super(matrixId);\n+        this.partitionId = partitionId;\n+        this.batchSize = batchSize;\n+    }\n \n-  public PullPathTailParam(int matrixId, int partitionId) {\n-    super(matrixId);\n-    this.partitionId = partitionId;\n-  }\n+    public PullPathTailParam(int matrixId, int partitionId) {\n+        super(matrixId);\n+        this.partitionId = partitionId;\n+    }\n+\n+    public PullPathTailParam(int partitionId) {\n+        this.partitionId = partitionId;\n+    }\n \n-  public PullPathTailParam(int partitionId) {\n-    this.partitionId = partitionId;\n-  }\n+    public int getPartitionId() {\n+        return partitionId;\n+    }\n \n-  public int getPartitionId() {\n-    return partitionId;\n-  }\n+    public void setPartitionId(int partitionId) {\n+        this.partitionId = partitionId;\n+    }\n \n-  public void setPartitionId(int partitionId) {\n-    this.partitionId = partitionId;\n-  }\n+    public int getBatchSize() {\n+        return batchSize;\n+    }\n \n-  public int getBatchSize() {\n-    return batchSize;\n-  }\n+    public void setBatchSize(int batchSize) {\n+        this.batchSize = batchSize;\n+    }\n \n-  public void setBatchSize(int batchSize) {\n-    this.batchSize = batchSize;\n-  }\n+    @Override\n+    public List<PartitionGetParam> split() {\n+        List<PartitionKey> parts =\n+                PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n \n-  @Override\n-  public List<PartitionGetParam> split() {\n-    List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n+        List<PartitionGetParam> partParams = new ArrayList<PartitionGetParam>(parts.size());\n \n-    List<PartitionGetParam> partParams = new ArrayList<PartitionGetParam>(parts.size());\n+        for (PartitionKey part : parts) {\n+            partParams.add(new PullPathTailPartitionParam(matrixId, part, partitionId, batchSize));\n+        }\n \n-    for (PartitionKey part: parts) {\n-      partParams.add(new PullPathTailPartitionParam(matrixId, part, partitionId, batchSize));\n+        return partParams;\n     }\n-\n-    return partParams;\n-  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/581/PullPathTailParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/581/PullPathTailParam.java\nindex 5558b53995..a8acba3239 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/581/PullPathTailParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/581/PullPathTailParam.java\n@@ -71,4 +71,4 @@ public class PullPathTailParam extends GetParam {\n \n     return partParams;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/581/PullPathTailParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/581/PullPathTailParam.java\nindex 5558b53995..e0ee6f9272 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/581/PullPathTailParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/581/PullPathTailParam.java\n@@ -20,55 +20,51 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.get.base.GetParam;\n import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetParam;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n public class PullPathTailParam extends GetParam {\n-  private int partitionId;\n-  private int batchSize = -1;\n+    private int partitionId;\n+    private int batchSize = -1;\n \n-  public PullPathTailParam(int matrixId, int partitionId, int batchSize) {\n+    public PullPathTailParam(int matrixId, int partitionId, int batchSize) {\n     super(matrixId);\n     this.partitionId = partitionId;\n     this.batchSize = batchSize;\n-  }\n+    }\n \n-  public PullPathTailParam(int matrixId, int partitionId) {\n+    public PullPathTailParam(int matrixId, int partitionId) {\n     super(matrixId);\n     this.partitionId = partitionId;\n-  }\n+    }\n \n-  public PullPathTailParam(int partitionId) {\n+    public PullPathTailParam(int partitionId) {\n     this.partitionId = partitionId;\n-  }\n+    }\n \n-  public int getPartitionId() {\n+    public int getPartitionId() {\n     return partitionId;\n-  }\n+    }\n \n-  public void setPartitionId(int partitionId) {\n+    public void setPartitionId(int partitionId) {\n     this.partitionId = partitionId;\n-  }\n+    }\n \n-  public int getBatchSize() {\n+    public int getBatchSize() {\n     return batchSize;\n-  }\n+    }\n \n-  public void setBatchSize(int batchSize) {\n+    public void setBatchSize(int batchSize) {\n     this.batchSize = batchSize;\n-  }\n+    }\n \n-  @Override\n-  public List<PartitionGetParam> split() {\n+    @Override\n+    public List<PartitionGetParam> split() {\n     List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n-\n     List<PartitionGetParam> partParams = new ArrayList<PartitionGetParam>(parts.size());\n-\n-    for (PartitionKey part: parts) {\n-      partParams.add(new PullPathTailPartitionParam(matrixId, part, partitionId, batchSize));\n+    for (PartitionKey part : parts) {\n+        partParams.add(new PullPathTailPartitionParam(matrixId, part, partitionId, batchSize));\n     }\n-\n     return partParams;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}