{
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "97",
                "column": "71",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    job.setMapOutputKeyClass(keyType.getSerializationClass());\n    job.setMapOutputValueClass(valueType.getSerializationClass());\n    if ((options == null || options.getSortComparatorClass() == null) &&\n        TupleWritable.class.equals(keyType.getSerializationClass())) {\n      job.setSortComparatorClass(TupleWritable.Comparator.class);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "97",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/styler/3/WritableGroupedTableType.java\nindex c25190563f..b69b56e35b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/styler/3/WritableGroupedTableType.java\n@@ -94,7 +94,7 @@ class WritableGroupedTableType<K, V> extends PGroupedTableType<K, V> {\n     WritableType valueType = (WritableType) tableType.getValueType();\n     job.setMapOutputKeyClass(keyType.getSerializationClass());\n     job.setMapOutputValueClass(valueType.getSerializationClass());\n-    if ((options == null || options.getSortComparatorClass() == null) &&\n+    if ((options == null || options.getSortComparatorClass() == null)&&\n         TupleWritable.class.equals(keyType.getSerializationClass())) {\n       job.setSortComparatorClass(TupleWritable.Comparator.class);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "98",
                    "column": "71",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/intellij/3/WritableGroupedTableType.java\nindex c25190563f..c002f7036f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/intellij/3/WritableGroupedTableType.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.crunch.types.writable;\n \n import org.apache.crunch.GroupingOptions;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/naturalize/3/WritableGroupedTableType.java\nindex c25190563f..a795ada9d0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/naturalize/3/WritableGroupedTableType.java\n@@ -82,7 +82,7 @@ class WritableGroupedTableType<K, V> extends PGroupedTableType<K, V> {\n       Path path,\n       Iterable<Pair<K, Iterable<V>>> contents,\n       int parallelism) throws IOException {\n-    throw new UnsupportedOperationException(\"GroupedTableTypes do not support creating ReadableSources\");\n+  throw new UnsupportedOperationException(\"GroupedTableTypes do not support creating ReadableSources\");\n   }\n \n   @Override\n@@ -94,9 +94,8 @@ class WritableGroupedTableType<K, V> extends PGroupedTableType<K, V> {\n     WritableType valueType = (WritableType) tableType.getValueType();\n     job.setMapOutputKeyClass(keyType.getSerializationClass());\n     job.setMapOutputValueClass(valueType.getSerializationClass());\n-    if ((options == null || options.getSortComparatorClass() == null) &&\n-        TupleWritable.class.equals(keyType.getSerializationClass())) {\n+    if ((options == null || options.getSortComparatorClass() == null) && TupleWritable.class.equals(keyType.getSerializationClass())) {\n       job.setSortComparatorClass(TupleWritable.Comparator.class);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/codebuff/3/WritableGroupedTableType.java\nindex c25190563f..66de1bbd52 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/codebuff/3/WritableGroupedTableType.java\n@@ -27,76 +27,72 @@ import org.apache.crunch.types.PGroupedTableType;\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.fs.Path;\n import org.apache.hadoop.mapreduce.Job;\n-\n import java.io.IOException;\n \n class WritableGroupedTableType<K, V> extends PGroupedTableType<K, V> {\n \n-  private final MapFn inputFn;\n-  private final MapFn outputFn;\n-  private final Converter converter;\n+    private final MapFn inputFn;\n+    private final MapFn outputFn;\n+    private final Converter converter;\n \n-  WritableGroupedTableType(WritableTableType<K, V> tableType) {\n+    WritableGroupedTableType(WritableTableType<K, V> tableType) {\n     super(tableType);\n     WritableType keyType = (WritableType) tableType.getKeyType();\n     WritableType valueType = (WritableType) tableType.getValueType();\n     this.inputFn = new PairIterableMapFn(keyType.getInputMapFn(), valueType.getInputMapFn());\n     this.outputFn = tableType.getOutputMapFn();\n-    this.converter = new WritablePairConverter(keyType.getSerializationClass(),\n-        valueType.getSerializationClass());\n-  }\n+    this.converter = new WritablePairConverter(keyType.getSerializationClass(), valueType.getSerializationClass());\n+    }\n \n-  @Override\n-  public Class<Pair<K, Iterable<V>>> getTypeClass() {\n+    @Override\n+    public Class<Pair<K, Iterable<V>>> getTypeClass() {\n     return (Class<Pair<K, Iterable<V>>>) Pair.of(null, null).getClass();\n-  }\n+    }\n \n-  @Override\n-  public Converter getGroupingConverter() {\n+    @Override\n+    public Converter getGroupingConverter() {\n     return converter;\n-  }\n+    }\n \n-  @Override\n-  public MapFn getInputMapFn() {\n+    @Override\n+    public MapFn getInputMapFn() {\n     return inputFn;\n-  }\n+    }\n \n-  @Override\n-  public MapFn getOutputMapFn() {\n+    @Override\n+    public MapFn getOutputMapFn() {\n     return outputFn;\n-  }\n+    }\n \n-  @Override\n-  public void initialize(Configuration conf) {\n+    @Override\n+    public void initialize(Configuration conf) {\n     this.tableType.initialize(conf);\n-  }\n+    }\n \n-  @Override\n-  public Pair<K, Iterable<V>> getDetachedValue(Pair<K, Iterable<V>> value) {\n+    @Override\n+    public Pair<K, Iterable<V>> getDetachedValue(Pair<K, Iterable<V>> value) {\n     return PTables.getGroupedDetachedValue(this, value);\n-  }\n+    }\n \n-  @Override\n-  public ReadableSource<Pair<K, Iterable<V>>> createSourceTarget(\n-      Configuration conf,\n-      Path path,\n-      Iterable<Pair<K, Iterable<V>>> contents,\n-      int parallelism) throws IOException {\n+    @Override\n+    public ReadableSource<Pair<K, Iterable<V>>> createSourceTarget(\n+        Configuration conf,\n+        Path path,\n+        Iterable<Pair<K, Iterable<V>>> contents, int parallelism) throws IOException {\n     throw new UnsupportedOperationException(\"GroupedTableTypes do not support creating ReadableSources\");\n-  }\n+    }\n \n-  @Override\n-  public void configureShuffle(Job job, GroupingOptions options) {\n+    @Override\n+    public void configureShuffle(Job job, GroupingOptions options) {\n     if (options != null) {\n-      options.configure(job);\n+        options.configure(job);\n     }\n     WritableType keyType = (WritableType) tableType.getKeyType();\n     WritableType valueType = (WritableType) tableType.getValueType();\n     job.setMapOutputKeyClass(keyType.getSerializationClass());\n     job.setMapOutputValueClass(valueType.getSerializationClass());\n-    if ((options == null || options.getSortComparatorClass() == null) &&\n-        TupleWritable.class.equals(keyType.getSerializationClass())) {\n-      job.setSortComparatorClass(TupleWritable.Comparator.class);\n+    if ((options == null || options.getSortComparatorClass() == null) && TupleWritable.class.equals(keyType.getSerializationClass())) {\n+        job.setSortComparatorClass(TupleWritable.Comparator.class);\n+    }\n     }\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "97",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/styler_random/3/WritableGroupedTableType.java\nindex c25190563f..b69b56e35b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/styler_random/3/WritableGroupedTableType.java\n@@ -94,7 +94,7 @@ class WritableGroupedTableType<K, V> extends PGroupedTableType<K, V> {\n     WritableType valueType = (WritableType) tableType.getValueType();\n     job.setMapOutputKeyClass(keyType.getSerializationClass());\n     job.setMapOutputValueClass(valueType.getSerializationClass());\n-    if ((options == null || options.getSortComparatorClass() == null) &&\n+    if ((options == null || options.getSortComparatorClass() == null)&&\n         TupleWritable.class.equals(keyType.getSerializationClass())) {\n       job.setSortComparatorClass(TupleWritable.Comparator.class);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/styler_three_grams/3/WritableGroupedTableType.java\nindex c25190563f..1c8502e4a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/3/WritableGroupedTableType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/styler_three_grams/3/WritableGroupedTableType.java\n@@ -94,9 +94,8 @@ class WritableGroupedTableType<K, V> extends PGroupedTableType<K, V> {\n     WritableType valueType = (WritableType) tableType.getValueType();\n     job.setMapOutputKeyClass(keyType.getSerializationClass());\n     job.setMapOutputValueClass(valueType.getSerializationClass());\n-    if ((options == null || options.getSortComparatorClass() == null) &&\n-        TupleWritable.class.equals(keyType.getSerializationClass())) {\n-      job.setSortComparatorClass(TupleWritable.Comparator.class);\n-    }\n-  }\n+    if ((options == null || options.getSortComparatorClass() == null)&& TupleWritable.class.equals(keyType.getSerializationClass())) {\n+  job.setSortComparatorClass(TupleWritable.Comparator.class);\n+}\n+}\n }\n",
            "diff_size": 5
        }
    ]
}