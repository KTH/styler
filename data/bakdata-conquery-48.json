{
    "error_id": "48",
    "information": {
        "errors": [
            {
                "line": "142",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t@Override\n\tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n\t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n\t\t}\n\t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/48/ManagedQuery.java\nindex c082f405c6..23a57e803c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/48/ManagedQuery.java\n@@ -47,7 +47,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t// Needs to be resolved externally before being executed\n \tprivate IQuery query;\n-\t\n+\n \t@JsonIgnore\n \tprotected transient Namespace namespace;\n \t/**\n@@ -57,7 +57,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \t * @returns the number of contained entities\n \t */\n \tprivate Long lastResultCount;\n-\t\n+\n \t//we don't want to store or send query results or other result metadata\n \t@JsonIgnore\n \tprivate transient int executingThreads;\n@@ -118,13 +118,13 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \tpublic ResultInfoCollector collectResultInfos(PrintSettings config) {\n \t\treturn query.collectResultInfos(config);\n \t}\n-\t\n+\n \t@Override\n \tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n \t\tsuper.setStatusBase(storage, url, user, status);\n \t\tstatus.setNumberOfResults(lastResultCount);\n \t}\n-\t\n+\n \t@Override\n \tpublic Collection<ManagedQuery> toResultQuery() {\n \t\treturn List.of(this);\n@@ -139,7 +139,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t@Override\n \tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n-\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n+\t\tif(context.getDataset().equals(getDataset())) {\n \t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n \t\t}\n \t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/48/ManagedQuery.java\nindex c082f405c6..d05fbe9af2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/48/ManagedQuery.java\n@@ -45,121 +45,122 @@ import lombok.extern.slf4j.Slf4j;\n @CPSType(base = ManagedExecution.class, id = \"MANAGED_QUERY\")\n public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n-\t// Needs to be resolved externally before being executed\n-\tprivate IQuery query;\n-\t\n-\t@JsonIgnore\n-\tprotected transient Namespace namespace;\n-\t/**\n-\t * The number of contained entities the last time this query was executed.\n-\t *\n-\t * @param lastResultCount the new count for JACKSON\n-\t * @returns the number of contained entities\n-\t */\n-\tprivate Long lastResultCount;\n-\t\n-\t//we don't want to store or send query results or other result metadata\n-\t@JsonIgnore\n-\tprivate transient int executingThreads;\n-\t@JsonIgnore\n-\tprivate transient List<EntityResult> results = new ArrayList<>();\n-\n-\tpublic ManagedQuery(IQuery query, UserId owner, DatasetId submittedDataset) {\n-\t\tsuper(owner, submittedDataset);\n-\t\tthis.query = query;\n-\t}\n-\n-\t@Override\n-\tpublic void initExecutable(@NonNull Namespaces namespaces) {\n-\t\tthis.namespace = namespaces.get(getDataset());\n-\t\tthis.executingThreads = namespace.getWorkers().size();\n-\t}\n-\n-\t@Override\n-\tpublic void addResult(@NonNull MasterMetaStorage storage, ShardResult result) {\n-\t\tfor (EntityResult er : result.getResults()) {\n-\t\t\tif (er.isFailed() && state == ExecutionState.RUNNING) {\n-\t\t\t\tfail(storage);\n-\t\t\t\tFailedEntityResult failed = er.asFailed();\n-\t\t\t\tlog.error(\"Failed query \" + queryId + \" at least for the entity \" + failed.getEntityId() + \" with:\\n{}\", failed.getThrowable());\n-\t\t\t}\n-\t\t}\n-\t\tsynchronized (getExecution()) {\n-\t\t\texecutingThreads--;\n-\t\t\tresults.addAll(result.getResults());\n-\t\t\tif (executingThreads == 0 && state == ExecutionState.RUNNING) {\n-\t\t\t\tfinish(storage, ExecutionState.DONE);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void start() {\n-\t\tsuper.start();\n-\n-\t\tif(results != null)\n-\t\t\tresults.clear();\n-\t\telse\n-\t\t\tresults = new ArrayList<>();\n-\t}\n-\n-\t@Override\n-\tprotected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n-\t\tlastResultCount = results.stream().flatMap(ContainedEntityResult::filterCast).count();\n-\n-\t\tsuper.finish(storage, executionState);\n-\t}\n-\n-\tpublic Stream<ContainedEntityResult> fetchContainedEntityResult() {\n-\t\treturn results.stream().flatMap(ContainedEntityResult::filterCast);\n-\t}\n-\n-\t@JsonIgnore\n-\tpublic ResultInfoCollector collectResultInfos(PrintSettings config) {\n-\t\treturn query.collectResultInfos(config);\n-\t}\n-\t\n-\t@Override\n-\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n-\t\tsuper.setStatusBase(storage, url, user, status);\n-\t\tstatus.setNumberOfResults(lastResultCount);\n-\t}\n-\t\n-\t@Override\n-\tpublic Collection<ManagedQuery> toResultQuery() {\n-\t\treturn List.of(this);\n-\t}\n-\n-\t@Override\n-\tpublic Set<NamespacedId> getUsedNamespacedIds() {\n-\t\tNamespacedIdCollector collector = new NamespacedIdCollector();\n-\t\tquery.visit(collector);\n-\t\treturn collector.getIds();\n-\t}\n-\n-\t@Override\n-\tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n-\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n-\t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n-\t\t}\n-\t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n-\t\treturn Collections.emptyMap();\n-\t}\n-\n-\t@Override\n-\tpublic ShardResult getInitializedShardResult(Entry<ManagedExecutionId, QueryPlan> entry) {\n-\t\tShardResult result = new ShardResult();\n-\t\tresult.setQueryId(getId());\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic Set<Namespace> getRequiredNamespaces() {\n-\t\treturn Set.of(namespace);\n-\t}\n-\n-\t@Override\n-\tpublic QueryDescription getSubmitted() {\n-\t\treturn query;\n-\t}\n+    // Needs to be resolved externally before being executed\n+    private IQuery query;\n+\n+    @JsonIgnore\n+    protected transient Namespace namespace;\n+    /**\n+     * The number of contained entities the last time this query was executed.\n+     *\n+     * @param lastResultCount the new count for JACKSON\n+     * @returns the number of contained entities\n+     */\n+    private Long lastResultCount;\n+\n+    //we don't want to store or send query results or other result metadata\n+    @JsonIgnore\n+    private transient int executingThreads;\n+    @JsonIgnore\n+    private transient List<EntityResult> results = new ArrayList<>();\n+\n+    public ManagedQuery(IQuery query, UserId owner, DatasetId submittedDataset) {\n+        super(owner, submittedDataset);\n+        this.query = query;\n+    }\n+\n+    @Override\n+    public void initExecutable(@NonNull Namespaces namespaces) {\n+        this.namespace = namespaces.get(getDataset());\n+        this.executingThreads = namespace.getWorkers().size();\n+    }\n+\n+    @Override\n+    public void addResult(@NonNull MasterMetaStorage storage, ShardResult result) {\n+        for (EntityResult er : result.getResults()) {\n+            if (er.isFailed() && state == ExecutionState.RUNNING) {\n+                fail(storage);\n+                FailedEntityResult failed = er.asFailed();\n+                log.error(\"Failed query \" + queryId + \" at least for the entity \" + failed.getEntityId() + \" with:\\n{}\", failed.getThrowable());\n+            }\n+        }\n+        synchronized (getExecution()) {\n+            executingThreads--;\n+            results.addAll(result.getResults());\n+            if (executingThreads == 0 && state == ExecutionState.RUNNING) {\n+                finish(storage, ExecutionState.DONE);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void start() {\n+        super.start();\n+\n+        if (results != null) {\n+            results.clear();\n+        } else {\n+            results = new ArrayList<>();\n+        }\n+    }\n+\n+    @Override\n+    protected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n+        lastResultCount = results.stream().flatMap(ContainedEntityResult::filterCast).count();\n+\n+        super.finish(storage, executionState);\n+    }\n+\n+    public Stream<ContainedEntityResult> fetchContainedEntityResult() {\n+        return results.stream().flatMap(ContainedEntityResult::filterCast);\n+    }\n+\n+    @JsonIgnore\n+    public ResultInfoCollector collectResultInfos(PrintSettings config) {\n+        return query.collectResultInfos(config);\n+    }\n+\n+    @Override\n+    protected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull User user, @NonNull ExecutionStatus status) {\n+        super.setStatusBase(storage, url, user, status);\n+        status.setNumberOfResults(lastResultCount);\n+    }\n+\n+    @Override\n+    public Collection<ManagedQuery> toResultQuery() {\n+        return List.of(this);\n+    }\n+\n+    @Override\n+    public Set<NamespacedId> getUsedNamespacedIds() {\n+        NamespacedIdCollector collector = new NamespacedIdCollector();\n+        query.visit(collector);\n+        return collector.getIds();\n+    }\n+\n+    @Override\n+    public Map<ManagedExecutionId, QueryPlan> createQueryPlans(QueryPlanContext context) {\n+        if (context.getDataset().equals(getDataset())) {\n+            return Map.of(this.getId(), query.createQueryPlan(context));\n+        }\n+        log.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n+        return Collections.emptyMap();\n+    }\n+\n+    @Override\n+    public ShardResult getInitializedShardResult(Entry<ManagedExecutionId, QueryPlan> entry) {\n+        ShardResult result = new ShardResult();\n+        result.setQueryId(getId());\n+        return result;\n+    }\n+\n+    @Override\n+    public Set<Namespace> getRequiredNamespaces() {\n+        return Set.of(namespace);\n+    }\n+\n+    @Override\n+    public QueryDescription getSubmitted() {\n+        return query;\n+    }\n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'User' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/48/ManagedQuery.java\nindex c082f405c6..f411689eb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/48/ManagedQuery.java\n@@ -106,8 +106,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \t@Override\n \tprotected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n \t\tlastResultCount = results.stream().flatMap(ContainedEntityResult::filterCast).count();\n-\n-\t\tsuper.finish(storage, executionState);\n+super.finish(storage, executionState);\n \t}\n \n \tpublic Stream<ContainedEntityResult> fetchContainedEntityResult() {\n@@ -120,7 +119,8 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \t}\n \t\n \t@Override\n-\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n+\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull\n+User user, @NonNull ExecutionStatus status) {\n \t\tsuper.setStatusBase(storage, url, user, status);\n \t\tstatus.setNumberOfResults(lastResultCount);\n \t}\n@@ -139,8 +139,8 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t@Override\n \tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n-\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n-\t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n+\t\tif(context.getDataset().equals(getDataset())) {\n+\treturn Map.of(this.getId(), query.createQueryPlan(context));\n \t\t}\n \t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n \t\treturn Collections.emptyMap();\n@@ -162,4 +162,4 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \tpublic QueryDescription getSubmitted() {\n \t\treturn query;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/48/ManagedQuery.java\nindex c082f405c6..9df325052a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/48/ManagedQuery.java\n@@ -8,7 +8,6 @@ import java.util.Map;\n import java.util.Map.Entry;\n import java.util.Set;\n import java.util.stream.Stream;\n-\n import com.bakdata.conquery.apiv1.QueryDescription;\n import com.bakdata.conquery.apiv1.URLBuilder;\n import com.bakdata.conquery.io.cps.CPSType;\n@@ -38,128 +37,130 @@ import lombok.ToString;\n import lombok.extern.slf4j.Slf4j;\n \n //@NoArgsConstructor\n+\n @Getter\n @Setter\n-@ToString(callSuper = true)\n+@ToString(callSuper=true)\n @Slf4j\n-@CPSType(base = ManagedExecution.class, id = \"MANAGED_QUERY\")\n+@CPSType(base= ManagedExecution.class, id= \"MANAGED_QUERY\")\n public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n-\t// Needs to be resolved externally before being executed\n-\tprivate IQuery query;\n-\t\n-\t@JsonIgnore\n-\tprotected transient Namespace namespace;\n-\t/**\n-\t * The number of contained entities the last time this query was executed.\n-\t *\n-\t * @param lastResultCount the new count for JACKSON\n-\t * @returns the number of contained entities\n-\t */\n-\tprivate Long lastResultCount;\n-\t\n-\t//we don't want to store or send query results or other result metadata\n-\t@JsonIgnore\n-\tprivate transient int executingThreads;\n-\t@JsonIgnore\n-\tprivate transient List<EntityResult> results = new ArrayList<>();\n-\n-\tpublic ManagedQuery(IQuery query, UserId owner, DatasetId submittedDataset) {\n-\t\tsuper(owner, submittedDataset);\n-\t\tthis.query = query;\n-\t}\n-\n-\t@Override\n-\tpublic void initExecutable(@NonNull Namespaces namespaces) {\n-\t\tthis.namespace = namespaces.get(getDataset());\n-\t\tthis.executingThreads = namespace.getWorkers().size();\n-\t}\n-\n-\t@Override\n-\tpublic void addResult(@NonNull MasterMetaStorage storage, ShardResult result) {\n-\t\tfor (EntityResult er : result.getResults()) {\n-\t\t\tif (er.isFailed() && state == ExecutionState.RUNNING) {\n-\t\t\t\tfail(storage);\n-\t\t\t\tFailedEntityResult failed = er.asFailed();\n-\t\t\t\tlog.error(\"Failed query \" + queryId + \" at least for the entity \" + failed.getEntityId() + \" with:\\n{}\", failed.getThrowable());\n-\t\t\t}\n-\t\t}\n-\t\tsynchronized (getExecution()) {\n-\t\t\texecutingThreads--;\n-\t\t\tresults.addAll(result.getResults());\n-\t\t\tif (executingThreads == 0 && state == ExecutionState.RUNNING) {\n-\t\t\t\tfinish(storage, ExecutionState.DONE);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void start() {\n-\t\tsuper.start();\n-\n-\t\tif(results != null)\n-\t\t\tresults.clear();\n-\t\telse\n-\t\t\tresults = new ArrayList<>();\n-\t}\n-\n-\t@Override\n-\tprotected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n-\t\tlastResultCount = results.stream().flatMap(ContainedEntityResult::filterCast).count();\n-\n-\t\tsuper.finish(storage, executionState);\n-\t}\n-\n-\tpublic Stream<ContainedEntityResult> fetchContainedEntityResult() {\n-\t\treturn results.stream().flatMap(ContainedEntityResult::filterCast);\n-\t}\n-\n-\t@JsonIgnore\n-\tpublic ResultInfoCollector collectResultInfos(PrintSettings config) {\n-\t\treturn query.collectResultInfos(config);\n-\t}\n-\t\n-\t@Override\n-\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n-\t\tsuper.setStatusBase(storage, url, user, status);\n-\t\tstatus.setNumberOfResults(lastResultCount);\n-\t}\n-\t\n-\t@Override\n-\tpublic Collection<ManagedQuery> toResultQuery() {\n-\t\treturn List.of(this);\n-\t}\n-\n-\t@Override\n-\tpublic Set<NamespacedId> getUsedNamespacedIds() {\n-\t\tNamespacedIdCollector collector = new NamespacedIdCollector();\n-\t\tquery.visit(collector);\n-\t\treturn collector.getIds();\n-\t}\n-\n-\t@Override\n-\tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n-\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n-\t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n-\t\t}\n-\t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n-\t\treturn Collections.emptyMap();\n-\t}\n-\n-\t@Override\n-\tpublic ShardResult getInitializedShardResult(Entry<ManagedExecutionId, QueryPlan> entry) {\n-\t\tShardResult result = new ShardResult();\n-\t\tresult.setQueryId(getId());\n-\t\treturn result;\n-\t}\n-\n-\t@Override\n-\tpublic Set<Namespace> getRequiredNamespaces() {\n-\t\treturn Set.of(namespace);\n-\t}\n-\n-\t@Override\n-\tpublic QueryDescription getSubmitted() {\n-\t\treturn query;\n-\t}\n-}\n+    // Needs to be resolved externally before being executed\n+\n+    private IQuery query;\n+    @JsonIgnore\n+    protected transient Namespace namespace;\n+    /**\n+     * The number of contained entities the last time this query was executed.\n+     *\n+     * @param lastResultCount the new count for JACKSON\n+     * @returns the number of contained entities\n+     */\n+    private Long lastResultCount;\n+    \n+    //we don't want to store or send query results or other result metadata\n+    @JsonIgnore\n+    private transient int executingThreads;\n+    @JsonIgnore\n+    private transient List<EntityResult> results = new ArrayList<>();\n+\n+    public ManagedQuery(IQuery query, UserId owner, DatasetId submittedDataset) {\n+        super(owner, submittedDataset);\n+        this.query = query;\n+    }\n+\n+    @Override\n+    public void initExecutable(@NonNull Namespaces namespaces) {\n+        this.namespace = namespaces.get(getDataset());\n+        this.executingThreads = namespace.getWorkers().size();\n+    }\n+\n+    @Override\n+    public void addResult(@NonNull MasterMetaStorage storage, ShardResult result) {\n+        for(EntityResult er : result.getResults()) {\n+            if(er.isFailed() && state == ExecutionState.RUNNING) {\n+                fail(storage);\n+                FailedEntityResult failed = er.asFailed();\n+                log.error(\"Failed query \"+queryId+\" at least for the entity \"+failed.getEntityId()+\" with:\\n{}\",\n+                          failed.getThrowable()\n+                );\n+            }\n+        }\n+        synchronized (getExecution()) {\n+            executingThreads--;\n+            results.addAll(result.getResults());\n+\n+            if(executingThreads ==0 && state == ExecutionState.RUNNING) {\n+                finish(storage, ExecutionState.DONE);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void start() {\n+        super.start();\n+\n+        if(results != null) results.clear();\n+        else results = new ArrayList<>();\n+    }\n+\n+    @Override\n+    protected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n+        lastResultCount = results.stream().flatMap(ContainedEntityResult::filterCast)\n+                                          .count();\n+        super.finish(storage, executionState);\n+    }\n+\n+    public Stream<ContainedEntityResult> fetchContainedEntityResult() {\n+        return results.stream().flatMap(ContainedEntityResult::filterCast);\n+    }\n+\n+    @JsonIgnore\n+    public ResultInfoCollector collectResultInfos(PrintSettings config) {\n+        return query.collectResultInfos(config);\n+    }\n+\n+    @Override\n+    protected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull User user, @NonNull ExecutionStatus status) {\n+        super.setStatusBase(storage, url, user, status);\n+        status.setNumberOfResults(lastResultCount);\n+    }\n+\n+    @Override\n+    public Collection<ManagedQuery> toResultQuery() {\n+        return List.of(this);\n+    }\n+\n+    @Override\n+    public Set<NamespacedId> getUsedNamespacedIds() {\n+        NamespacedIdCollector collector = new NamespacedIdCollector();\n+        query.visit(collector);\n+        return collector.getIds();\n+    }\n+\n+    @Override\n+    public Map<ManagedExecutionId, QueryPlan> createQueryPlans(QueryPlanContext context) {\n+        if(context.getDataset().equals(getDataset())) {\n+            return Map.of(this.getId(), query.createQueryPlan(context));\n+        }\n+        log.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n+        return Collections.emptyMap();\n+    }\n+\n+    @Override\n+    public ShardResult getInitializedShardResult(Entry<ManagedExecutionId, QueryPlan> entry) {\n+        ShardResult result = new ShardResult();\n+        result.setQueryId(getId());\n+        return result;\n+    }\n+\n+    @Override\n+    public Set<Namespace> getRequiredNamespaces() {\n+        return Set.of(namespace);\n+    }\n+\n+    @Override\n+    public QueryDescription getSubmitted() {\n+        return query;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 123
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/48/ManagedQuery.java\nindex c082f405c6..23a57e803c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/48/ManagedQuery.java\n@@ -47,7 +47,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t// Needs to be resolved externally before being executed\n \tprivate IQuery query;\n-\t\n+\n \t@JsonIgnore\n \tprotected transient Namespace namespace;\n \t/**\n@@ -57,7 +57,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \t * @returns the number of contained entities\n \t */\n \tprivate Long lastResultCount;\n-\t\n+\n \t//we don't want to store or send query results or other result metadata\n \t@JsonIgnore\n \tprivate transient int executingThreads;\n@@ -118,13 +118,13 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \tpublic ResultInfoCollector collectResultInfos(PrintSettings config) {\n \t\treturn query.collectResultInfos(config);\n \t}\n-\t\n+\n \t@Override\n \tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n \t\tsuper.setStatusBase(storage, url, user, status);\n \t\tstatus.setNumberOfResults(lastResultCount);\n \t}\n-\t\n+\n \t@Override\n \tpublic Collection<ManagedQuery> toResultQuery() {\n \t\treturn List.of(this);\n@@ -139,7 +139,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t@Override\n \tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n-\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n+\t\tif(context.getDataset().equals(getDataset())) {\n \t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n \t\t}\n \t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/48/ManagedQuery.java\nindex c082f405c6..23a57e803c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/48/ManagedQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/48/ManagedQuery.java\n@@ -47,7 +47,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t// Needs to be resolved externally before being executed\n \tprivate IQuery query;\n-\t\n+\n \t@JsonIgnore\n \tprotected transient Namespace namespace;\n \t/**\n@@ -57,7 +57,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \t * @returns the number of contained entities\n \t */\n \tprivate Long lastResultCount;\n-\t\n+\n \t//we don't want to store or send query results or other result metadata\n \t@JsonIgnore\n \tprivate transient int executingThreads;\n@@ -118,13 +118,13 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \tpublic ResultInfoCollector collectResultInfos(PrintSettings config) {\n \t\treturn query.collectResultInfos(config);\n \t}\n-\t\n+\n \t@Override\n \tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n \t\tsuper.setStatusBase(storage, url, user, status);\n \t\tstatus.setNumberOfResults(lastResultCount);\n \t}\n-\t\n+\n \t@Override\n \tpublic Collection<ManagedQuery> toResultQuery() {\n \t\treturn List.of(this);\n@@ -139,7 +139,7 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \n \t@Override\n \tpublic Map<ManagedExecutionId,QueryPlan> createQueryPlans(QueryPlanContext context) {\n-\t\tif(context.getDataset().equals(getDataset())) {\t\t\t\n+\t\tif(context.getDataset().equals(getDataset())) {\n \t\t\treturn Map.of(this.getId(), query.createQueryPlan(context));\n \t\t}\n \t\tlog.trace(\"Did not create a QueryPlan for the query {} because the plan corresponds to dataset {} but the execution worker belongs to {}.\", getId(), getDataset(), context.getDataset());\n",
            "diff_size": 5
        }
    ]
}