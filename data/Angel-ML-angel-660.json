{
    "error_id": "660",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/660/TreeParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/660/TreeParam.java\nindex cae0c98379..8001382a6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/660/TreeParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/660/TreeParam.java\n@@ -13,6 +13,7 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.algorithm.param;\n \n import org.apache.commons.logging.Log;\n@@ -24,36 +25,37 @@ import org.apache.commons.logging.LogFactory;\n \n public class TreeParam {\n \n-  private static final Log LOG = LogFactory.getLog(TreeParam.class);\n+    private static final Log LOG = LogFactory.getLog(TreeParam.class);\n \n-  // maximum depth of the tree\n-  int maxDepth;\n-  // number of features used for tree construction\n-  int numFeature;\n-  // minimum loss change required for a split, otherwise stop split\n-  double minSplitLoss;\n-  // ----- the rest parameters are less important ----\n-  // default direction choice\n-  int defaultDirection;\n-  // whether we want to do sample data\n-  float rowSample;\n-  // whether to sample columns during tree construction\n-  float colSample;\n-  // whether to use histogram for split\n-  boolean isHist;\n-  // number of histogram units\n-  int numBins;\n-  // whether to print info during training.\n-  boolean silent;\n-  // ----- the rest parameters are obtained after training ----\n-  // total number of nodes\n-  int numNodes = 0;\n-  // number of deleted nodes */\n-  int numDeleted = 0;\n+    // maximum depth of the tree\n+    int maxDepth;\n+    // number of features used for tree construction\n+    int numFeature;\n+    // minimum loss change required for a split, otherwise stop split\n+    double minSplitLoss;\n+    // ----- the rest parameters are less important ----\n+    // default direction choice\n+    int defaultDirection;\n+    // whether we want to do sample data\n+    float rowSample;\n+    // whether to sample columns during tree construction\n+    float colSample;\n+    // whether to use histogram for split\n+    boolean isHist;\n+    // number of histogram units\n+    int numBins;\n+    // whether to print info during training.\n+    boolean silent;\n+    // ----- the rest parameters are obtained after training ----\n+    // total number of nodes\n+    int numNodes = 0;\n+    // number of deleted nodes */\n+    int numDeleted = 0;\n \n-  public void printParam() {\n-    LOG.info(String.format(\"Tree hyper-parameters------\"\n-        + \"maxdepth: %d, numFeature: %d, minSplitLoss: %f, rowSample: %f, colSample: %f\", maxDepth,\n-        numFeature, minSplitLoss, rowSample, colSample));\n-  }\n+    public void printParam() {\n+        LOG.info(String.format(\"Tree hyper-parameters------\"\n+                        + \"maxdepth: %d, numFeature: %d, minSplitLoss: %f, rowSample: %f, colSample: %f\",\n+                maxDepth,\n+                numFeature, minSplitLoss, rowSample, colSample));\n+    }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/660/TreeParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/660/TreeParam.java\nindex cae0c98379..cbc037527c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/660/TreeParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/660/TreeParam.java\n@@ -56,4 +56,4 @@ public class TreeParam {\n         + \"maxdepth: %d, numFeature: %d, minSplitLoss: %f, rowSample: %f, colSample: %f\", maxDepth,\n         numFeature, minSplitLoss, rowSample, colSample));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 30.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 42.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 45.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 51.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/660/TreeParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/660/TreeParam.java\nindex cae0c98379..4e01da3acb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/660/TreeParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/660/TreeParam.java\n@@ -23,37 +23,44 @@ import org.apache.commons.logging.LogFactory;\n  */\n \n public class TreeParam {\n-\n-  private static final Log LOG = LogFactory.getLog(TreeParam.class);\n+    private static final Log LOG = LogFactory.getLog(TreeParam.class);\n \n   // maximum depth of the tree\n-  int maxDepth;\n+\n+    int maxDepth;\n   // number of features used for tree construction\n-  int numFeature;\n+\n+    int numFeature;\n   // minimum loss change required for a split, otherwise stop split\n-  double minSplitLoss;\n+    double minSplitLoss;\n   // ----- the rest parameters are less important ----\n   // default direction choice\n-  int defaultDirection;\n+\n+    int defaultDirection;\n   // whether we want to do sample data\n-  float rowSample;\n+\n+    float rowSample;\n   // whether to sample columns during tree construction\n-  float colSample;\n+\n+    float colSample;\n   // whether to use histogram for split\n-  boolean isHist;\n+\n+    boolean isHist;\n   // number of histogram units\n-  int numBins;\n+\n+    int numBins;\n   // whether to print info during training.\n-  boolean silent;\n+\n+    boolean silent;\n   // ----- the rest parameters are obtained after training ----\n   // total number of nodes\n-  int numNodes = 0;\n+\n+    int numNodes = 0;\n   // number of deleted nodes */\n-  int numDeleted = 0;\n-\n-  public void printParam() {\n-    LOG.info(String.format(\"Tree hyper-parameters------\"\n-        + \"maxdepth: %d, numFeature: %d, minSplitLoss: %f, rowSample: %f, colSample: %f\", maxDepth,\n-        numFeature, minSplitLoss, rowSample, colSample));\n-  }\n-}\n+\n+    int numDeleted = 0;\n+\n+    public void printParam() {\n+    LOG.info(String.format(\"Tree hyper-parameters------\" + \"maxdepth: %d, numFeature: %d, minSplitLoss: %f, rowSample: %f, colSample: %f\", maxDepth, numFeature, minSplitLoss, rowSample, colSample));\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}