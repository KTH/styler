{
    "error_id": "436",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.qp.strategy.optimizer;\n\nimport static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\nimport static org.apache.iotdb.db.qp.constant.SQLConstant.KW_OR;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/436/DnfFilterOptimizer.java\nindex 160e97ace2..826fb01275 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/436/DnfFilterOptimizer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.strategy.optimizer;\n \n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/436/DnfFilterOptimizer.java\nindex 160e97ace2..e74c7dc19f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/436/DnfFilterOptimizer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.strategy.optimizer;\n \n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n@@ -128,7 +129,7 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * If operator is leaf, add it in newChildrenList. If operator is And, add its children to\n    * newChildrenList.\n    *\n-   * @param operator which children should be added in new children list\n+   * @param operator        which children should be added in new children list\n    * @param newChildrenList new children list\n    * @throws LogicalOptimizeException exception in DNF optimizing\n    */\n@@ -148,7 +149,7 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * used by getDnf. If operator is leaf or And, add operator to newChildrenList. Else add\n    * operator's children to newChildrenList\n    *\n-   * @param operator to be added in new children list\n+   * @param operator        to be added in new children list\n    * @param newChildrenList new children list\n    */\n   private void addChildOpInOr(FilterOperator operator, List<FilterOperator> newChildrenList) {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/436/DnfFilterOptimizer.java\nindex 160e97ace2..8b73dd5bc8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/436/DnfFilterOptimizer.java\n@@ -40,9 +40,7 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n     return getDnf(filter);\n   }\n \n-  private void dealWithLeftAndRightAndChildren(\n-      List<FilterOperator> leftAndChildren, List<FilterOperator> rightAndChildren,\n-      List<FilterOperator> newChildrenList) throws LogicalOptimizeException {\n+  private void dealWithLeftAndRightAndChildren(List<FilterOperator> leftAndChildren, List<FilterOperator> rightAndChildren, List<FilterOperator> newChildrenList) throws LogicalOptimizeException {\n     for (FilterOperator leftAndChild : leftAndChildren) {\n       for (FilterOperator rightAndChild : rightAndChildren) {\n         FilterOperator r = mergeToConjunction(leftAndChild.copy(), rightAndChild.copy());\n@@ -58,9 +56,10 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n     List<FilterOperator> childOperators = filter.getChildren();\n     if (childOperators.size() != 2) {\n       throw new LogicalOptimizeException(\n-          \"node :\" + filter.getTokenName() + \" has \" + childOperators.size() + \" children\");\n-\n-    }\n+          \"node :\" + filter.getTokenName()\n+    + \" has \" + childOperators.size()\n+    + \" children\");\n+  }\n     FilterOperator left = getDnf(childOperators.get(0));\n     FilterOperator right = getDnf(childOperators.get(1));\n     List<FilterOperator> newChildrenList = new ArrayList<>();\n@@ -81,7 +80,7 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n       default:\n         throw new LogicalOptimizeException(\n             \"get DNF failed, this tokenType is:\" + filter.getTokenIntType());\n-    }\n+  }\n     filter.setChildren(newChildrenList);\n     return filter;\n   }\n@@ -98,7 +97,7 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    */\n   private FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n       throws LogicalOptimizeException {\n-    List<FilterOperator> retChildrenList = new ArrayList<>();\n+  List<FilterOperator> retChildrenList = new ArrayList<>();\n     addChildOpInAnd(operator1, retChildrenList);\n     addChildOpInAnd(operator2, retChildrenList);\n     FilterOperator ret = new FilterOperator(KW_AND, false);\n@@ -134,14 +133,13 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    */\n   private void addChildOpInAnd(FilterOperator operator, List<FilterOperator> newChildrenList)\n       throws LogicalOptimizeException {\n-    if (operator.isLeaf()) {\n+  if (operator.isLeaf()) {\n       newChildrenList.add(operator);\n     } else if (operator.getTokenIntType() == KW_AND) {\n       newChildrenList.addAll(operator.getChildren());\n     } else {\n-      throw new LogicalOptimizeException(\n-          \"add all children of an OR operator to newChildrenList in AND\");\n-    }\n+      throw new LogicalOptimizeException(\"add all children of an OR operator to newChildrenList in AND\");\n+  }\n   }\n \n   /**\n@@ -159,4 +157,4 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "column": "55",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "42",
                    "column": "55",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "42",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "42",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "42",
                    "column": "136",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "42",
                    "column": "136",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "43",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 206, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "207",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 206, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "63",
                    "column": "60",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 37, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "70",
                    "column": "72",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 37, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 96.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 113.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "column": "18",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "113",
                    "column": "18",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 8, indentation should be the same level as line 118.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "column": "14",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "118",
                    "column": "14",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "118",
                    "column": "52",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 133.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "column": "64",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "133",
                    "column": "64",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "137",
                    "column": "30",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 134, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 134, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 152.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "column": "63",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "152",
                    "column": "63",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "153",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "25",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "54",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/436/DnfFilterOptimizer.java\nindex 160e97ace2..8833a54dfe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/436/DnfFilterOptimizer.java\n@@ -17,10 +17,8 @@\n  * under the License.\n  */\n package org.apache.iotdb.db.qp.strategy.optimizer;\n-\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_OR;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.iotdb.db.exception.query.LogicalOptimizeException;\n@@ -35,56 +33,54 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * @return FilterOperator optimized operator\n    * @throws LogicalOptimizeException exception in DNF optimize\n    */\n-  @Override\n-  public FilterOperator optimize(FilterOperator filter) throws LogicalOptimizeException {\n+\n+\n+    @ Override public FilterOperator optimize(FilterOperator filter) throws LogicalOptimizeException {\n     return getDnf(filter);\n-  }\n+    }\n \n-  private void dealWithLeftAndRightAndChildren(\n-      List<FilterOperator> leftAndChildren, List<FilterOperator> rightAndChildren,\n-      List<FilterOperator> newChildrenList) throws LogicalOptimizeException {\n-    for (FilterOperator leftAndChild : leftAndChildren) {\n-      for (FilterOperator rightAndChild : rightAndChildren) {\n-        FilterOperator r = mergeToConjunction(leftAndChild.copy(), rightAndChild.copy());\n-        newChildrenList.add(r);\n-      }\n+    private void dealWithLeftAndRightAndChildren(List < FilterOperator> leftAndChildren, List < FilterOperator> rightAndChildren, List < FilterOperator> newChildrenList) throws LogicalOptimizeException {\n+    for(FilterOperator leftAndChild : leftAndChildren) {\n+                                                                                                                                                                                                              for(FilterOperator rightAndChild : rightAndChildren) {\n+                                                           FilterOperator r = mergeToConjunction(leftAndChild.copy(), rightAndChild.copy());\n+                                                           newChildrenList.add(r);\n+                                                                                                                                                                                                              }\n+    }\n     }\n-  }\n \n-  private FilterOperator getDnf(FilterOperator filter) throws LogicalOptimizeException {\n+    private FilterOperator getDnf(FilterOperator filter) throws LogicalOptimizeException {\n     if (filter.isLeaf()) {\n-      return filter;\n+        return filter;\n     }\n-    List<FilterOperator> childOperators = filter.getChildren();\n+    List < FilterOperator> childOperators = filter.getChildren();\n     if (childOperators.size() != 2) {\n-      throw new LogicalOptimizeException(\n-          \"node :\" + filter.getTokenName() + \" has \" + childOperators.size() + \" children\");\n-\n+        throw new LogicalOptimizeException(\"node :\" + filter.getTokenName()\n++ \" has \" + childOperators.size()\n+                                               + \" children\");\n     }\n     FilterOperator left = getDnf(childOperators.get(0));\n     FilterOperator right = getDnf(childOperators.get(1));\n-    List<FilterOperator> newChildrenList = new ArrayList<>();\n-    switch (filter.getTokenIntType()) {\n-      case KW_OR:\n-        addChildOpInOr(left, newChildrenList);\n-        addChildOpInOr(right, newChildrenList);\n-        break;\n-      case KW_AND:\n-        if (left.getTokenIntType() != KW_OR && right.getTokenIntType() != KW_OR) {\n-          addChildOpInAnd(left, newChildrenList);\n-          addChildOpInAnd(right, newChildrenList);\n-        } else {\n-          dealWithLeftAndRightAndChildren(getAndChild(left), getAndChild(right), newChildrenList);\n-          filter.setTokenIntType(KW_OR);\n-        }\n-        break;\n-      default:\n-        throw new LogicalOptimizeException(\n-            \"get DNF failed, this tokenType is:\" + filter.getTokenIntType());\n+    List < FilterOperator> newChildrenList = new ArrayList <>();\n+    switch(filter.getTokenIntType()) {\n+    case KW_OR:\n+    addChildOpInOr(left, newChildrenList);\n+    addChildOpInOr(right, newChildrenList);\n+    break;\n+                                     case KW_AND:\n+                                     if(left.getTokenIntType() != KW_OR&& right.getTokenIntType() != KW_OR) {\n+        addChildOpInAnd(left, newChildrenList);\n+        addChildOpInAnd(right, newChildrenList);\n+                                     } else {\n+        dealWithLeftAndRightAndChildren(getAndChild(left), getAndChild(right), newChildrenList);\n+        filter.setTokenIntType(KW_OR);\n+                                     }\n+                                     break;\n+                                     default:\n+                                     throw new LogicalOptimizeException(\"get DNF failed, this tokenType is:\" + filter.getTokenIntType());\n     }\n     filter.setChildren(newChildrenList);\n     return filter;\n-  }\n+    }\n \n   /**\n    * used by getDnf. merge two conjunction filter operators into a conjunction.<br> conjunction\n@@ -96,15 +92,15 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * @return merged operator\n    * @throws LogicalOptimizeException exception in DNF optimizing\n    */\n-  private FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n-      throws LogicalOptimizeException {\n-    List<FilterOperator> retChildrenList = new ArrayList<>();\n+\n+    private FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2) throws LogicalOptimizeException {\n+    List < FilterOperator> retChildrenList = new ArrayList <>();\n     addChildOpInAnd(operator1, retChildrenList);\n     addChildOpInAnd(operator2, retChildrenList);\n     FilterOperator ret = new FilterOperator(KW_AND, false);\n     ret.setChildren(retChildrenList);\n     return ret;\n-  }\n+    }\n \n   /**\n    * used by getDnf. get conjunction node. <br> If child is basic function or AND node, return a\n@@ -113,16 +109,17 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * @param child operator\n    * @return children operator\n    */\n-  private List<FilterOperator> getAndChild(FilterOperator child) {\n-    if (child.getTokenIntType() == KW_OR) {\n-      return child.getChildren();\n+\n+    private List < FilterOperator> getAndChild(FilterOperator child) {\n+    if(child.getTokenIntType()== KW_OR) {\n+        return child.getChildren();\n     } else {\n       // other token type means leaf node or and\n-      List<FilterOperator> ret = new ArrayList<>();\n-      ret.add(child);\n-      return ret;\n+        List < FilterOperator> ret = new ArrayList <>();\n+        ret.add(child);\n+        return ret;\n+    }\n     }\n-  }\n \n   /**\n    * If operator is leaf, add it in newChildrenList. If operator is And, add its children to\n@@ -132,17 +129,17 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * @param newChildrenList new children list\n    * @throws LogicalOptimizeException exception in DNF optimizing\n    */\n-  private void addChildOpInAnd(FilterOperator operator, List<FilterOperator> newChildrenList)\n-      throws LogicalOptimizeException {\n-    if (operator.isLeaf()) {\n-      newChildrenList.add(operator);\n-    } else if (operator.getTokenIntType() == KW_AND) {\n-      newChildrenList.addAll(operator.getChildren());\n-    } else {\n-      throw new LogicalOptimizeException(\n-          \"add all children of an OR operator to newChildrenList in AND\");\n+\n+    private void addChildOpInAnd(FilterOperator operator, List < FilterOperator> newChildrenList) throws LogicalOptimizeException {\n+    if(operator.isLeaf()) {\n+        newChildrenList.add(operator);\n+    } else\n+if(operator.getTokenIntType()== KW_AND) {\n+                                                                                                                                      newChildrenList.addAll(operator.getChildren());\n+} else {\n+                                                                                                                                      throw new LogicalOptimizeException(\"add all children of an OR operator to newChildrenList in AND\");\n+}\n     }\n-  }\n \n   /**\n    * used by getDnf. If operator is leaf or And, add operator to newChildrenList. Else add\n@@ -151,12 +148,13 @@ public class DnfFilterOptimizer implements IFilterOptimizer {\n    * @param operator to be added in new children list\n    * @param newChildrenList new children list\n    */\n-  private void addChildOpInOr(FilterOperator operator, List<FilterOperator> newChildrenList) {\n-    if (operator.isLeaf() || operator.getTokenIntType() == KW_AND) {\n-      newChildrenList.add(operator);\n+\n+    private void addChildOpInOr(FilterOperator operator, List < FilterOperator> newChildrenList) {\n+    if(operator.isLeaf()|| operator.getTokenIntType()== KW_AND) {\n+        newChildrenList.add(operator);\n     } else {\n-      newChildrenList.addAll(operator.getChildren());\n+        newChildrenList.addAll(operator.getChildren());\n+    }\n     }\n-  }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/436/DnfFilterOptimizer.java\nindex 160e97ace2..f96fccb9c5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/436/DnfFilterOptimizer.java\n@@ -16,8 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.qp.strategy.optimizer;\n+package org.apache.iotdb. db.qp.strategy.optimizer\n \n+;\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_OR;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/436/DnfFilterOptimizer.java\nindex 160e97ace2..826fb01275 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/436/DnfFilterOptimizer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/436/DnfFilterOptimizer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.strategy.optimizer;\n \n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n",
            "diff_size": 1
        }
    ]
}