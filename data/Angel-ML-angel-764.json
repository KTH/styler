{
    "error_id": "764",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/764/TMatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/764/TMatrixFactory.java\nindex b313802e25..4d24cd5721 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/764/TMatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/764/TMatrixFactory.java\n@@ -24,26 +24,27 @@ import org.apache.hadoop.conf.Configuration;\n \n public class TMatrixFactory {\n \n-  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n-  public static GenericObjectPool initCOOIntMatrixPool(int row, int col) {\n-    Configuration conf = PSAgentContext.get().getConf();\n-    int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n+    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+    public static GenericObjectPool initCOOIntMatrixPool(int row, int col) {\n+        Configuration conf = PSAgentContext.get().getConf();\n+        int taskNumber =\n+                conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n+                        AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n+                        AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n \n-    GenericObjectPool.Config config = new GenericObjectPool.Config();\n-    config.maxActive = taskNumber * 3;\n-    config.maxWait = 1000;\n-    config.maxIdle = taskNumber;\n-    config.minIdle = 0;\n-    config.testOnBorrow = false;\n-    config.testOnReturn = false;\n-    config.minEvictableIdleTimeMillis = 10000;\n-    config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n-    GenericObjectPool pool =\n-        new GenericObjectPool(\n-            new TMatrixPoolableObjectFactory(row, col, new COOIntMatrixBuilder()), config);\n-    return pool;\n-  }\n+        GenericObjectPool.Config config = new GenericObjectPool.Config();\n+        config.maxActive = taskNumber * 3;\n+        config.maxWait = 1000;\n+        config.maxIdle = taskNumber;\n+        config.minIdle = 0;\n+        config.testOnBorrow = false;\n+        config.testOnReturn = false;\n+        config.minEvictableIdleTimeMillis = 10000;\n+        config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n+        GenericObjectPool pool =\n+                new GenericObjectPool(\n+                        new TMatrixPoolableObjectFactory(row, col, new COOIntMatrixBuilder()),\n+                        config);\n+        return pool;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/764/TMatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/764/TMatrixFactory.java\nindex b313802e25..fd882c8f55 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/764/TMatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/764/TMatrixFactory.java\n@@ -23,16 +23,12 @@ import org.apache.commons.pool.impl.GenericObjectPool;\n import org.apache.hadoop.conf.Configuration;\n \n public class TMatrixFactory {\n-\n   @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n   public static GenericObjectPool initCOOIntMatrixPool(int row, int col) {\n     Configuration conf = PSAgentContext.get().getConf();\n     int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n-\n-    GenericObjectPool.Config config = new GenericObjectPool.Config();\n+        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n+GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n     config.maxIdle = taskNumber;\n@@ -46,4 +42,4 @@ public class TMatrixFactory {\n             new TMatrixPoolableObjectFactory(row, col, new COOIntMatrixBuilder()), config);\n     return pool;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/764/TMatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/764/TMatrixFactory.java\nindex b313802e25..bb0f5bb117 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/764/TMatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/764/TMatrixFactory.java\n@@ -18,20 +18,17 @@ package com.tencent.angel.ml.math.factory;\n \n import com.tencent.angel.conf.AngelConfiguration;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import org.apache.commons.pool.impl.GenericObjectPool;\n import org.apache.hadoop.conf.Configuration;\n \n public class TMatrixFactory {\n \n-  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n-  public static GenericObjectPool initCOOIntMatrixPool(int row, int col) {\n-    Configuration conf = PSAgentContext.get().getConf();\n-    int taskNumber =\n-        conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(\n-            AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n-            AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n \n+    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+    public static GenericObjectPool initCOOIntMatrixPool(int row, int col) {\n+    Configuration conf = PSAgentContext.get().getConf();\n+    int taskNumber = conf.getInt(AngelConfiguration.ANGEL_TASK_ACTUAL_NUM, conf.getInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER,\n+                         AngelConfiguration.DEFAULT_ANGEL_WORKER_TASK_NUMBER));\n     GenericObjectPool.Config config = new GenericObjectPool.Config();\n     config.maxActive = taskNumber * 3;\n     config.maxWait = 1000;\n@@ -41,9 +38,8 @@ public class TMatrixFactory {\n     config.testOnReturn = false;\n     config.minEvictableIdleTimeMillis = 10000;\n     config.whenExhaustedAction = GenericObjectPool.WHEN_EXHAUSTED_BLOCK;\n-    GenericObjectPool pool =\n-        new GenericObjectPool(\n-            new TMatrixPoolableObjectFactory(row, col, new COOIntMatrixBuilder()), config);\n+    GenericObjectPool pool = new GenericObjectPool(new TMatrixPoolableObjectFactory(row, col, new COOIntMatrixBuilder()), config);\n     return pool;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}