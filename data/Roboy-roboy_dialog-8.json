{
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "61",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public synchronized void updateValue(V value) {\n        if(data.size() >= getMaxLimit()) {\n            data.remove(data.firstKey());\n        }\n        data.put(generateKey(), value);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/styler/8/TimestampedValueHistory.java\nindex f0e45fce38..7b249d5ade 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/styler/8/TimestampedValueHistory.java\n@@ -58,7 +58,7 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      */\n     @Override\n     public synchronized void updateValue(V value) {\n-        if(data.size() >= getMaxLimit()) {\n+        if (data.size() >= getMaxLimit()) {\n             data.remove(data.firstKey());\n         }\n         data.put(generateKey(), value);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/intellij/8/TimestampedValueHistory.java\nindex f0e45fce38..f57aae72f9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/intellij/8/TimestampedValueHistory.java\n@@ -6,10 +6,9 @@ import java.util.TreeMap;\n /**\n  * Sample implementation of a ValueHistory using timestamps (longs) as keys\n  * and a TreeMap for data storage.\n- *\n+ * <p>\n  * The timestamps are equal or larger than the time when updateValue() was called.\n  * Implementation does not guarantee perfect timestamp accuracy, but achieves key uniqueness.\n- *\n  */\n public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V> {\n     /**\n@@ -29,7 +28,9 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      */\n     @Override\n     public synchronized V getValue() {\n-        if (data.isEmpty()) return null;\n+        if (data.isEmpty()) {\n+            return null;\n+        }\n         return data.lastEntry().getValue();\n     }\n \n@@ -37,7 +38,7 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      * Get a copy of the last n entries added to the history.\n      * Less values may be returned if there are not enough values in this history.\n      * In case of no values, an empty map is returned.\n-     *\n+     * <p>\n      * Needs to be synchronized because data cannot be changed while working with an Iterator.\n      */\n     @Override\n@@ -58,7 +59,7 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      */\n     @Override\n     public synchronized void updateValue(V value) {\n-        if(data.size() >= getMaxLimit()) {\n+        if (data.size() >= getMaxLimit()) {\n             data.remove(data.firstKey());\n         }\n         data.put(generateKey(), value);\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/naturalize/8/TimestampedValueHistory.java\nindex f0e45fce38..a48aba6d37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/naturalize/8/TimestampedValueHistory.java\n@@ -58,7 +58,7 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      */\n     @Override\n     public synchronized void updateValue(V value) {\n-        if(data.size() >= getMaxLimit()) {\n+        if (data.size() >= getMaxLimit()) {\n             data.remove(data.firstKey());\n         }\n         data.put(generateKey(), value);\n@@ -93,4 +93,4 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n         data.clear();\n         return data.isEmpty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/codebuff/8/TimestampedValueHistory.java\nindex f0e45fce38..386c4829c3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/codebuff/8/TimestampedValueHistory.java\n@@ -11,26 +11,30 @@ import java.util.TreeMap;\n  * Implementation does not guarantee perfect timestamp accuracy, but achieves key uniqueness.\n  *\n  */\n+\n+\n public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V> {\n     /**\n      * Marks the last time a value was added to the history (or initialization).\n      */\n+\n     private volatile long lastTime;\n     private TreeMap<Long, V> data;\n     private int totalValuesAdded;\n \n     public TimestampedValueHistory() {\n-        data = new TreeMap<>();\n-        lastTime = System.nanoTime();\n+    data = new TreeMap<>();\n+    lastTime = System.nanoTime();\n     }\n \n     /**\n      * @return The last element added to this history, or <code>null</code> if not found.\n      */\n+\n     @Override\n     public synchronized V getValue() {\n-        if (data.isEmpty()) return null;\n-        return data.lastEntry().getValue();\n+    if (data.isEmpty()) return null;\n+    return data.lastEntry().getValue();\n     }\n \n     /**\n@@ -40,57 +44,59 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      *\n      * Needs to be synchronized because data cannot be changed while working with an Iterator.\n      */\n+\n     @Override\n     public synchronized TreeMap<Long, V> getLastNValues(int n) {\n-        TreeMap<Long, V> map = new TreeMap<>();\n-        Iterator<Long> keyIterator = data.descendingKeySet().iterator();\n-        Long key;\n-        while (keyIterator.hasNext() && (n > 0)) {\n-            key = keyIterator.next();\n-            map.put(key, data.get(key));\n-            n--;\n-        }\n-        return map;\n+    TreeMap<Long, V> map = new TreeMap<>();\n+    Iterator<Long> keyIterator = data.descendingKeySet().iterator();\n+    Long key;\n+    while (keyIterator.hasNext() && (n > 0)) {\n+        key = keyIterator.next();\n+        map.put(key, data.get(key));\n+        n--;\n+    }\n+    return map;\n     }\n \n     /**\n      * Puts a value into the history in the last place.\n      */\n+\n     @Override\n     public synchronized void updateValue(V value) {\n-        if(data.size() >= getMaxLimit()) {\n-            data.remove(data.firstKey());\n-        }\n-        data.put(generateKey(), value);\n-        totalValuesAdded++;\n+    if (data.size() >= getMaxLimit()) {\n+        data.remove(data.firstKey());\n+    }\n+    data.put(generateKey(), value);\n+    totalValuesAdded++;\n     }\n \n     private synchronized long generateKey() {\n-        long currentTime = System.nanoTime();\n+    long currentTime = System.nanoTime();\n         // Avoid duplicates (synchronized method, so no concurrent modifications to lastTime can happen).\n-        if (lastTime <= currentTime) {\n+    if (lastTime <= currentTime) {\n             // Catch up with system time.\n-            lastTime = currentTime + 1;\n-        } else {\n+        lastTime = currentTime + 1;\n+    } else {\n             // Continue with current counter.\n-            lastTime++;\n-        }\n-        return lastTime;\n+      lastTime++;\n+    }\n+    return lastTime;\n     }\n \n     @Override\n     public int getNumberOfValuesSinceStart() {\n-        return totalValuesAdded;\n+    return totalValuesAdded;\n     }\n \n     @Override\n     public synchronized boolean contains(V value) {\n-        return data.containsValue(value);\n+    return data.containsValue(value);\n     }\n \n     @Override\n     public synchronized boolean purgeHistory() {\n-        data.clear();\n-        return data.isEmpty();\n+    data.clear();\n+    return data.isEmpty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/styler_random/8/TimestampedValueHistory.java\nindex f0e45fce38..7b249d5ade 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/styler_random/8/TimestampedValueHistory.java\n@@ -58,7 +58,7 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      */\n     @Override\n     public synchronized void updateValue(V value) {\n-        if(data.size() >= getMaxLimit()) {\n+        if (data.size() >= getMaxLimit()) {\n             data.remove(data.firstKey());\n         }\n         data.put(generateKey(), value);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "60",
                    "column": "53",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/styler_three_grams/8/TimestampedValueHistory.java\nindex f0e45fce38..58036cd2cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/errored/1/8/TimestampedValueHistory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Roboy-roboy_dialog/styler_three_grams/8/TimestampedValueHistory.java\n@@ -57,40 +57,39 @@ public class TimestampedValueHistory<V> implements AbstractValueHistory<Long, V>\n      * Puts a value into the history in the last place.\n      */\n     @Override\n-    public synchronized void updateValue(V value) {\n-        if(data.size() >= getMaxLimit()) {\n-            data.remove(data.firstKey());\n-        }\n-        data.put(generateKey(), value);\n-        totalValuesAdded++;\n+    public synchronized void updateValue(V value) { if(data.size() >= getMaxLimit()) {\n+        data.remove(data.firstKey());\n     }\n+    data.put(generateKey(), value);\n+    totalValuesAdded++;\n+}\n \n-    private synchronized long generateKey() {\n-        long currentTime = System.nanoTime();\n-        // Avoid duplicates (synchronized method, so no concurrent modifications to lastTime can happen).\n-        if (lastTime <= currentTime) {\n-            // Catch up with system time.\n-            lastTime = currentTime + 1;\n-        } else {\n-            // Continue with current counter.\n-            lastTime++;\n-        }\n-        return lastTime;\n+private synchronized long generateKey() {\n+    long currentTime = System.nanoTime();\n+    // Avoid duplicates (synchronized method, so no concurrent modifications to lastTime can happen).\n+    if (lastTime <= currentTime) {\n+        // Catch up with system time.\n+        lastTime = currentTime + 1;\n+    } else {\n+        // Continue with current counter.\n+        lastTime++;\n     }\n+    return lastTime;\n+}\n \n-    @Override\n-    public int getNumberOfValuesSinceStart() {\n-        return totalValuesAdded;\n-    }\n+@Override\n+public int getNumberOfValuesSinceStart() {\n+    return totalValuesAdded;\n+}\n \n-    @Override\n-    public synchronized boolean contains(V value) {\n-        return data.containsValue(value);\n-    }\n+@Override\n+public synchronized boolean contains(V value) {\n+    return data.containsValue(value);\n+}\n \n-    @Override\n-    public synchronized boolean purgeHistory() {\n-        data.clear();\n-        return data.isEmpty();\n-    }\n+@Override\n+public synchronized boolean purgeHistory() {\n+    data.clear();\n+    return data.isEmpty();\n+}\n }\n",
            "diff_size": 35
        }
    ]
}