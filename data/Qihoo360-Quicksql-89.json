{
    "error_id": "89",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.calcite.plan;\n\n/**\n * Policy by which operands will be matched by relational expressions with",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler/89/RelOptRuleOperandChildPolicy.java\nindex c36e02e27c..d5980feb00 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler/89/RelOptRuleOperandChildPolicy.java\n@@ -1,52 +1,53 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to you under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.apache.calcite.plan;\r\n-\r\n-/**\r\n- * Policy by which operands will be matched by relational expressions with\r\n- * any number of children.\r\n- */\r\n-public enum RelOptRuleOperandChildPolicy {\r\n-  /**\r\n-   * Signifies that operand can have any number of children.\r\n-   */\r\n-  ANY,\r\n-\r\n-  /**\r\n-   * Signifies that operand has no children. Therefore it matches a\r\n-   * leaf node, such as a table scan or VALUES operator.\r\n-   *\r\n-   * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\r\n-   * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\r\n-   * it is more explicit.</p>\r\n-   */\r\n-  LEAF,\r\n-\r\n-  /**\r\n-   * Signifies that the operand's children must precisely match its\r\n-   * child operands, in order.\r\n-   */\r\n-  SOME,\r\n-\r\n-  /**\r\n-   * Signifies that the rule matches any one of its parents' children.\r\n-   * The parent may have one or more children.\r\n-   */\r\n-  UNORDERED,\r\n-}\r\n-\r\n-// End RelOptRuleOperandChildPolicy.java\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.calcite.plan;\n+\n+/**\n+ * Policy by which operands will be matched by relational expressions with\n+ * any number of children.\n+ */\n+public enum RelOptRuleOperandChildPolicy {\n+  /**\n+   * Signifies that operand can have any number of children.\n+   */\n+  ANY,\n+\n+  /**\n+   * Signifies that operand has no children. Therefore it matches a\n+   * leaf node, such as a table scan or VALUES operator.\n+   *\n+   * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\n+   * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\n+   * it is more explicit.</p>\n+   */\n+  LEAF,\n+\n+  /**\n+   * Signifies that the operand's children must precisely match its\n+   * child operands, in order.\n+   */\n+  SOME,\n+\n+  /**\n+   * Signifies that the rule matches any one of its parents' children.\n+   * The parent may have one or more children.\n+   */\n+  UNORDERED,\n+}\n+\n+// End RelOptRuleOperandChildPolicy.java\n",
            "diff_size": 53
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/intellij/89/RelOptRuleOperandChildPolicy.java\nindex c36e02e27c..3e9c3bd68f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/intellij/89/RelOptRuleOperandChildPolicy.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.plan;\r\n \r\n /**\r\n@@ -21,32 +22,32 @@ package org.apache.calcite.plan;\n  * any number of children.\r\n  */\r\n public enum RelOptRuleOperandChildPolicy {\r\n-  /**\r\n-   * Signifies that operand can have any number of children.\r\n-   */\r\n-  ANY,\r\n+    /**\r\n+     * Signifies that operand can have any number of children.\r\n+     */\r\n+    ANY,\r\n \r\n-  /**\r\n-   * Signifies that operand has no children. Therefore it matches a\r\n-   * leaf node, such as a table scan or VALUES operator.\r\n-   *\r\n-   * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\r\n-   * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\r\n-   * it is more explicit.</p>\r\n-   */\r\n-  LEAF,\r\n+    /**\r\n+     * Signifies that operand has no children. Therefore it matches a\r\n+     * leaf node, such as a table scan or VALUES operator.\r\n+     *\r\n+     * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\r\n+     * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\r\n+     * it is more explicit.</p>\r\n+     */\r\n+    LEAF,\r\n \r\n-  /**\r\n-   * Signifies that the operand's children must precisely match its\r\n-   * child operands, in order.\r\n-   */\r\n-  SOME,\r\n+    /**\r\n+     * Signifies that the operand's children must precisely match its\r\n+     * child operands, in order.\r\n+     */\r\n+    SOME,\r\n \r\n-  /**\r\n-   * Signifies that the rule matches any one of its parents' children.\r\n-   * The parent may have one or more children.\r\n-   */\r\n-  UNORDERED,\r\n+    /**\r\n+     * Signifies that the rule matches any one of its parents' children.\r\n+     * The parent may have one or more children.\r\n+     */\r\n+    UNORDERED,\r\n }\r\n \r\n // End RelOptRuleOperandChildPolicy.java\r\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/codebuff/89/RelOptRuleOperandChildPolicy.java\nindex c36e02e27c..d8e0186996 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/codebuff/89/RelOptRuleOperandChildPolicy.java\n@@ -19,12 +19,14 @@ package org.apache.calcite.plan;\n /**\r\n  * Policy by which operands will be matched by relational expressions with\r\n  * any number of children.\r\n- */\r\n+ */\n+\n+\n public enum RelOptRuleOperandChildPolicy {\r\n   /**\r\n    * Signifies that operand can have any number of children.\r\n-   */\r\n-  ANY,\r\n+   */\n+    ANY,\r\n \r\n   /**\r\n    * Signifies that operand has no children. Therefore it matches a\r\n@@ -33,20 +35,15 @@ public enum RelOptRuleOperandChildPolicy {\n    * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\r\n    * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\r\n    * it is more explicit.</p>\r\n-   */\r\n-  LEAF,\r\n+   */ LEAF,\r\n \r\n   /**\r\n    * Signifies that the operand's children must precisely match its\r\n    * child operands, in order.\r\n-   */\r\n-  SOME,\r\n+   */ SOME,\r\n \r\n   /**\r\n    * Signifies that the rule matches any one of its parents' children.\r\n    * The parent may have one or more children.\r\n-   */\r\n-  UNORDERED,\r\n-}\r\n-\r\n-// End RelOptRuleOperandChildPolicy.java\r\n+   */ UNORDERED,\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler_random/89/RelOptRuleOperandChildPolicy.java\nindex c36e02e27c..d5980feb00 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/89/RelOptRuleOperandChildPolicy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler_random/89/RelOptRuleOperandChildPolicy.java\n@@ -1,52 +1,53 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to you under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.apache.calcite.plan;\r\n-\r\n-/**\r\n- * Policy by which operands will be matched by relational expressions with\r\n- * any number of children.\r\n- */\r\n-public enum RelOptRuleOperandChildPolicy {\r\n-  /**\r\n-   * Signifies that operand can have any number of children.\r\n-   */\r\n-  ANY,\r\n-\r\n-  /**\r\n-   * Signifies that operand has no children. Therefore it matches a\r\n-   * leaf node, such as a table scan or VALUES operator.\r\n-   *\r\n-   * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\r\n-   * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\r\n-   * it is more explicit.</p>\r\n-   */\r\n-  LEAF,\r\n-\r\n-  /**\r\n-   * Signifies that the operand's children must precisely match its\r\n-   * child operands, in order.\r\n-   */\r\n-  SOME,\r\n-\r\n-  /**\r\n-   * Signifies that the rule matches any one of its parents' children.\r\n-   * The parent may have one or more children.\r\n-   */\r\n-  UNORDERED,\r\n-}\r\n-\r\n-// End RelOptRuleOperandChildPolicy.java\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.calcite.plan;\n+\n+/**\n+ * Policy by which operands will be matched by relational expressions with\n+ * any number of children.\n+ */\n+public enum RelOptRuleOperandChildPolicy {\n+  /**\n+   * Signifies that operand can have any number of children.\n+   */\n+  ANY,\n+\n+  /**\n+   * Signifies that operand has no children. Therefore it matches a\n+   * leaf node, such as a table scan or VALUES operator.\n+   *\n+   * <p>{@code RelOptRuleOperand(Foo.class, NONE)} is equivalent to\n+   * {@code RelOptRuleOperand(Foo.class)} but we prefer the former because\n+   * it is more explicit.</p>\n+   */\n+  LEAF,\n+\n+  /**\n+   * Signifies that the operand's children must precisely match its\n+   * child operands, in order.\n+   */\n+  SOME,\n+\n+  /**\n+   * Signifies that the rule matches any one of its parents' children.\n+   * The parent may have one or more children.\n+   */\n+  UNORDERED,\n+}\n+\n+// End RelOptRuleOperandChildPolicy.java\n",
            "diff_size": 53
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}