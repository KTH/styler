{
    "error_id": "88",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "84",
                "severity": "error",
                "message": "'}' at column 84 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/88/UniqueSubDataSetAccessWayInDataSetValidator.java\nindex c674ecab82..36fdc1b09f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n@@ -38,20 +38,20 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n       // will be handled by not empty validator\n       return true;\n     }\n-    \n+\n     // ignore the same object (for an update)\n     List<String> foundAccessWays = new ArrayList<>();\n     for (SubDataSet subDataSetFromList : subDataSetList) {\n-      \n+\n       //found and double entry\n       if (foundAccessWays.contains(subDataSetFromList.getAccessWay())) {\n         return false;\n       } else {\n         foundAccessWays.add(subDataSetFromList.getAccessWay());\n       }\n-      \n+\n     }\n-    \n+\n     // if no double found -> good!\n     return true;\n   }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/88/UniqueSubDataSetAccessWayInDataSetValidator.java\nindex c674ecab82..9121b91bcb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n@@ -9,26 +9,26 @@ import javax.validation.ConstraintValidatorContext;\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.SubDataSet;\n \n /**\n- * This annotation is for the validator, which checks the accesways of subdataset within a project. \n+ * This annotation is for the validator, which checks the accesways of subdataset within a project.\n  * The sub data set accessways has to be unique within the data set.\n  *\n  * @author Daniel Katzberg\n- *\n  */\n public class UniqueSubDataSetAccessWayInDataSetValidator\n     implements ConstraintValidator<UniqueSubDatasetAccessWayInDataSet, List<SubDataSet>> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {}\n+  public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n@@ -38,20 +38,20 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n       // will be handled by not empty validator\n       return true;\n     }\n-    \n+\n     // ignore the same object (for an update)\n     List<String> foundAccessWays = new ArrayList<>();\n     for (SubDataSet subDataSetFromList : subDataSetList) {\n-      \n+\n       //found and double entry\n       if (foundAccessWays.contains(subDataSetFromList.getAccessWay())) {\n         return false;\n       } else {\n         foundAccessWays.add(subDataSetFromList.getAccessWay());\n       }\n-      \n+\n     }\n-    \n+\n     // if no double found -> good!\n     return true;\n   }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/88/UniqueSubDataSetAccessWayInDataSetValidator.java\nindex c674ecab82..7168536105 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n@@ -56,4 +56,4 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n     return true;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'List' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 61, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/88/UniqueSubDataSetAccessWayInDataSetValidator.java\nindex c674ecab82..8603355cb9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n@@ -2,10 +2,8 @@ package eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.validation;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.SubDataSet;\n \n /**\n@@ -15,16 +13,21 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.SubDataSet;\n  * @author Daniel Katzberg\n  *\n  */\n-public class UniqueSubDataSetAccessWayInDataSetValidator\n-    implements ConstraintValidator<UniqueSubDatasetAccessWayInDataSet, List<SubDataSet>> {\n+\n+\n+public class UniqueSubDataSetAccessWayInDataSetValidator implements ConstraintValidator<UniqueSubDatasetAccessWayInDataSet,\n+List<SubDataSet>> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -32,28 +35,31 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(List<SubDataSet> subDataSetList, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(List<SubDataSet> subDataSetList,\n+        ConstraintValidatorContext context) {\n     if (subDataSetList == null) {\n       // will be handled by not empty validator\n-      return true;\n+        return true;\n     }\n     \n     // ignore the same object (for an update)\n     List<String> foundAccessWays = new ArrayList<>();\n+\n     for (SubDataSet subDataSetFromList : subDataSetList) {\n       \n       //found and double entry\n-      if (foundAccessWays.contains(subDataSetFromList.getAccessWay())) {\n-        return false;\n-      } else {\n-        foundAccessWays.add(subDataSetFromList.getAccessWay());\n-      }\n-      \n+        if (foundAccessWays.contains(subDataSetFromList.getAccessWay())) {\n+                                                             return false;\n+        } else {\n+          foundAccessWays.add(subDataSetFromList.getAccessWay());\n+        }\n     }\n     \n     // if no double found -> good!\n-    return true;\n-  }\n \n-}\n+    return true;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/88/UniqueSubDataSetAccessWayInDataSetValidator.java\nindex c674ecab82..36fdc1b09f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n@@ -38,20 +38,20 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n       // will be handled by not empty validator\n       return true;\n     }\n-    \n+\n     // ignore the same object (for an update)\n     List<String> foundAccessWays = new ArrayList<>();\n     for (SubDataSet subDataSetFromList : subDataSetList) {\n-      \n+\n       //found and double entry\n       if (foundAccessWays.contains(subDataSetFromList.getAccessWay())) {\n         return false;\n       } else {\n         foundAccessWays.add(subDataSetFromList.getAccessWay());\n       }\n-      \n+\n     }\n-    \n+\n     // if no double found -> good!\n     return true;\n   }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/88/UniqueSubDataSetAccessWayInDataSetValidator.java\nindex c674ecab82..af2491a2f9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/88/UniqueSubDataSetAccessWayInDataSetValidator.java\n@@ -24,9 +24,8 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(UniqueSubDatasetAccessWayInDataSet constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n@@ -38,20 +37,20 @@ public class UniqueSubDataSetAccessWayInDataSetValidator\n       // will be handled by not empty validator\n       return true;\n     }\n-    \n+\n     // ignore the same object (for an update)\n     List<String> foundAccessWays = new ArrayList<>();\n     for (SubDataSet subDataSetFromList : subDataSetList) {\n-      \n+\n       //found and double entry\n       if (foundAccessWays.contains(subDataSetFromList.getAccessWay())) {\n         return false;\n       } else {\n         foundAccessWays.add(subDataSetFromList.getAccessWay());\n       }\n-      \n+\n     }\n-    \n+\n     // if no double found -> good!\n     return true;\n   }\n",
            "diff_size": 7
        }
    ]
}