{
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public ToolsClassLoader() {\n    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n  }\n\n  final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/0/ToolsClassLoader.java\nindex fa19987948..e9094783b1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/0/ToolsClassLoader.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.tools.groovy;\n \n import cz.o2.proxima.tools.groovy.internal.ClassloaderUtils;\n@@ -43,7 +44,8 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   }\n \n   public ToolsClassLoader() {\n-    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n+    super(Thread.currentThread().getContextClassLoader(),\n+        ClassloaderUtils.createConfiguration());\n   }\n \n   final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/0/ToolsClassLoader.java\nindex fa19987948..51faf21dd7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/0/ToolsClassLoader.java\n@@ -61,4 +61,4 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   public byte[] getClassByteCode(String name) {\n     return Objects.requireNonNull(byteCode.get(name));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'class def ident' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/0/ToolsClassLoader.java\nindex fa19987948..47c7956a4f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/0/ToolsClassLoader.java\n@@ -27,38 +27,40 @@ import org.codehaus.groovy.control.CompilationUnit;\n import org.codehaus.groovy.control.SourceUnit;\n \n /** {@link GroovyClassLoader} keeping track of generated bytecode. */\n+\n+\n public class ToolsClassLoader extends GroovyClassLoader {\n \n-  class Collector extends ClassCollector {\n+    class Collector extends ClassCollector {\n \n     Collector(InnerLoader cl, CompilationUnit unit, SourceUnit su) {\n-      super(cl, unit, su);\n+        super(cl, unit, su);\n     }\n \n     @Override\n     protected Class<?> createClass(byte[] code, ClassNode classNode) {\n-      byteCode.put(classNode.getName(), code);\n-      return super.createClass(code, classNode);\n+        byteCode.put(classNode.getName(), code);\n+        return super.createClass(code, classNode);\n+    }\n     }\n-  }\n \n-  public ToolsClassLoader() {\n+    public ToolsClassLoader() {\n     super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n-  }\n+    }\n \n-  final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n+    final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n \n-  @Override\n-  protected ClassCollector createCollector(CompilationUnit unit, SourceUnit su) {\n+    @Override\n+    protected ClassCollector createCollector(CompilationUnit unit, SourceUnit su) {\n     ClassCollector collector = super.createCollector(unit, su);\n     return new Collector((InnerLoader) collector.getDefiningClassLoader(), unit, su);\n-  }\n+    }\n \n-  public Set<String> getDefinedClasses() {\n+    public Set<String> getDefinedClasses() {\n     return new HashSet<>(byteCode.keySet());\n-  }\n+    }\n \n-  public byte[] getClassByteCode(String name) {\n+    public byte[] getClassByteCode(String name) {\n     return Objects.requireNonNull(byteCode.get(name));\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/0/ToolsClassLoader.java\nindex fa19987948..aa23a94ab9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/0/ToolsClassLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/0/ToolsClassLoader.java\n@@ -43,22 +43,25 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   }\n \n   public ToolsClassLoader() {\n-    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n-  }\n+    super(Thread.currentThread().getContextClassLoader(),ClassloaderUtils.createConfiguration()\n+  )\n \n-  final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n+    ; }\n \n-  @Override\n-  protected ClassCollector createCollector(CompilationUnit unit, SourceUnit su) {\n-    ClassCollector collector = super.createCollector(unit, su);\n-    return new Collector((InnerLoader) collector.getDefiningClassLoader(), unit, su);\n-  }\n+    final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n \n-  public Set<String> getDefinedClasses() {\n-    return new HashSet<>(byteCode.keySet());\n-  }\n+    @Override\n+    protected ClassCollector createCollector(CompilationUnit unit, SourceUnit su) {\n+      ClassCollector collector = super.createCollector(unit, su);\n+      return new Collector((InnerLoader) collector.getDefiningClassLoader(), unit, su);\n+    }\n+\n+    public Set<String> getDefinedClasses() {\n+      return new HashSet<>(byteCode.keySet());\n+    }\n \n-  public byte[] getClassByteCode(String name) {\n-    return Objects.requireNonNull(byteCode.get(name));\n+    public byte[] getClassByteCode(String name) {\n+      return Objects.requireNonNull(byteCode.get(name));\n+    }\n   }\n-}\n+  \n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}