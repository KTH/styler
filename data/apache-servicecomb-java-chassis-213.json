{
    "error_id": "213",
    "information": {
        "errors": [
            {
                "line": "105",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n    // we did not remove old InstanceCacheManager now\n\t// microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n\t// must not throw exception\n    String microserviceVersionFactoryClass = serviceRegistryConfig.getMicroserviceVersionFactory();\n    if (microserviceVersionFactoryClass == null) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/213/AbstractServiceRegistry.java\nindex 27e4d4dd77..6fd74b4496 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/213/AbstractServiceRegistry.java\n@@ -102,8 +102,7 @@ public abstract class AbstractServiceRegistry implements ServiceRegistry {\n     appManager = new AppManager(eventBus);\n \n     // we did not remove old InstanceCacheManager now\n-\t// microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n-\t// must not throw exception\n+    // microserviceVersionFactoryClass is null, means use old InstanceCacheManager// must not throw exception\n     String microserviceVersionFactoryClass = serviceRegistryConfig.getMicroserviceVersionFactory();\n     if (microserviceVersionFactoryClass == null) {\n       return;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/213/AbstractServiceRegistry.java\nindex 27e4d4dd77..3c781c1333 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/213/AbstractServiceRegistry.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package io.servicecomb.serviceregistry.registry;\n \n import java.util.HashMap;\n@@ -71,7 +72,7 @@ public abstract class AbstractServiceRegistry implements ServiceRegistry {\n   protected ServiceCenterTask serviceCenterTask;\n \n   public AbstractServiceRegistry(EventBus eventBus, ServiceRegistryConfig serviceRegistryConfig,\n-      MicroserviceDefinition microserviceDefinition) {\n+                                 MicroserviceDefinition microserviceDefinition) {\n     this.eventBus = eventBus;\n     this.serviceRegistryConfig = serviceRegistryConfig;\n     this.microserviceDefinition = microserviceDefinition;\n@@ -102,8 +103,8 @@ public abstract class AbstractServiceRegistry implements ServiceRegistry {\n     appManager = new AppManager(eventBus);\n \n     // we did not remove old InstanceCacheManager now\n-\t// microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n-\t// must not throw exception\n+    // microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n+    // must not throw exception\n     String microserviceVersionFactoryClass = serviceRegistryConfig.getMicroserviceVersionFactory();\n     if (microserviceVersionFactoryClass == null) {\n       return;\n@@ -201,7 +202,7 @@ public abstract class AbstractServiceRegistry implements ServiceRegistry {\n   }\n \n   public List<MicroserviceInstance> findServiceInstance(String appId, String serviceName,\n-      String versionRule) {\n+                                                        String versionRule) {\n     List<MicroserviceInstance> instances = srClient.findServiceInstance(microservice.getServiceId(),\n         appId,\n         serviceName,\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/213/AbstractServiceRegistry.java\nindex 27e4d4dd77..6fd74b4496 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/213/AbstractServiceRegistry.java\n@@ -102,8 +102,7 @@ public abstract class AbstractServiceRegistry implements ServiceRegistry {\n     appManager = new AppManager(eventBus);\n \n     // we did not remove old InstanceCacheManager now\n-\t// microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n-\t// must not throw exception\n+    // microserviceVersionFactoryClass is null, means use old InstanceCacheManager// must not throw exception\n     String microserviceVersionFactoryClass = serviceRegistryConfig.getMicroserviceVersionFactory();\n     if (microserviceVersionFactoryClass == null) {\n       return;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "106",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/213/AbstractServiceRegistry.java\nindex 27e4d4dd77..9290d4d3fa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/213/AbstractServiceRegistry.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/213/AbstractServiceRegistry.java\n@@ -102,7 +102,7 @@ public abstract class AbstractServiceRegistry implements ServiceRegistry {\n     appManager = new AppManager(eventBus);\n \n     // we did not remove old InstanceCacheManager now\n-\t// microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n+    // microserviceVersionFactoryClass is null, means use old InstanceCacheManager\n \t// must not throw exception\n     String microserviceVersionFactoryClass = serviceRegistryConfig.getMicroserviceVersionFactory();\n     if (microserviceVersionFactoryClass == null) {\n",
            "diff_size": 1
        }
    ]
}