{
    "error_id": "146",
    "information": {
        "errors": [
            {
                "line": "24",
                "column": "46",
                "severity": "error",
                "message": "'}' at column 46 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "  private byte[] authentication;\n\n  public OAuth2AuthenticationRefreshToken() {}\n\n  /**\n   * Create the refresh token.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/146/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa..910503fc12 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/146/OAuth2AuthenticationRefreshToken.java\n@@ -48,11 +48,11 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n+    if (this == other) {\n       return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n       return false;\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/146/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa..d7680d66c4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/146/OAuth2AuthenticationRefreshToken.java\n@@ -13,7 +13,7 @@ import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n  * The oauth2 refresh token.\n  */\n @Document(collection = \"oauth2_authentication_refresh_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationRefreshToken {\n \n   @Id\n@@ -21,14 +21,15 @@ public class OAuth2AuthenticationRefreshToken {\n   private byte[] token;\n   private byte[] authentication;\n \n-  public OAuth2AuthenticationRefreshToken() {}\n+  public OAuth2AuthenticationRefreshToken() {\n+  }\n \n   /**\n    * Create the refresh token.\n    */\n   @PersistenceConstructor\n   public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n-      final byte[] authentication) {\n+                                          final byte[] authentication) {\n     this.tokenId = tokenId;\n     this.token = token;\n     this.authentication = authentication;\n@@ -48,11 +49,11 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n+    if (this == other) {\n       return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n       return false;\n     }\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/146/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa..baca02f01c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/146/OAuth2AuthenticationRefreshToken.java\n@@ -13,7 +13,7 @@ import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n  * The oauth2 refresh token.\n  */\n @Document(collection = \"oauth2_authentication_refresh_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationRefreshToken {\n \n   @Id\n@@ -27,7 +27,8 @@ public class OAuth2AuthenticationRefreshToken {\n    * Create the refresh token.\n    */\n   @PersistenceConstructor\n-  public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n+  public OAuth2AuthenticationRefreshToken(final String tokenId,\n+final byte[] token,\n       final byte[] authentication) {\n     this.tokenId = tokenId;\n     this.token = token;\n@@ -48,13 +49,13 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n-      return true;\n+    if (this == other) {\n+  return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n-      return false;\n-    }\n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n+  return false;\n+  }\n \n     OAuth2AuthenticationRefreshToken that = (OAuth2AuthenticationRefreshToken) other;\n \n@@ -73,4 +74,4 @@ public class OAuth2AuthenticationRefreshToken {\n     return new ToStringBuilder(this).append(\"tokenId\", tokenId).append(\"token\", token)\n         .append(\"authentication\", authentication).toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/146/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa..1be7eb7b85 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/146/OAuth2AuthenticationRefreshToken.java\n@@ -6,71 +6,85 @@ import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.springframework.data.annotation.Id;\n import org.springframework.data.annotation.PersistenceConstructor;\n import org.springframework.data.mongodb.core.mapping.Document;\n-\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n \n /**\n  * The oauth2 refresh token.\n  */\n+\n+\n @Document(collection = \"oauth2_authentication_refresh_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationRefreshToken {\n \n-  @Id\n-  private String tokenId;\n-  private byte[] token;\n-  private byte[] authentication;\n+    @Id\n+    private String tokenId;\n \n-  public OAuth2AuthenticationRefreshToken() {}\n+    private byte[] token;\n+\n+    private byte[] authentication;\n+\n+    public OAuth2AuthenticationRefreshToken() {\n+    }\n \n   /**\n    * Create the refresh token.\n    */\n-  @PersistenceConstructor\n-  public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n-      final byte[] authentication) {\n+\n+\n+    @PersistenceConstructor\n+    public OAuth2AuthenticationRefreshToken(final String tokenId, final byte[] token,\n+    final byte[] authentication) {\n     this.tokenId = tokenId;\n     this.token = token;\n     this.authentication = authentication;\n-  }\n+    }\n \n-  public String getTokenId() {\n+    public String getTokenId() {\n     return tokenId;\n-  }\n+    }\n+\n \n-  public byte[] getToken() {\n+    public byte[] getToken() {\n     return token;\n-  }\n+    }\n+\n \n-  public byte[] getAuthentication() {\n+    public byte[] getAuthentication() {\n     return authentication;\n-  }\n+    }\n \n-  @Override\n-  public boolean equals(Object other) {\n-    if (this == other) {      \n-      return true;\n+\n+    @Override\n+    public boolean equals(Object other) {\n+    if (this == other) {\n+        return true;\n+    }\n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n+        return false;\n     }\n+    OAuth2AuthenticationRefreshToken that = (OAuth2AuthenticationRefreshToken) other;\n+    return new EqualsBuilder().append(tokenId, that.tokenId)\n+                              .append(token, that.token)\n+                              .append(authentication, that.authentication)\n+                              .isEquals();\n+    }\n+\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n-      return false;\n+    @Override\n+    public int hashCode() {\n+    return new HashCodeBuilder(17, 37).append(tokenId)\n+                                      .append(token)\n+                                      .append(authentication)\n+                                      .toHashCode();\n     }\n \n-    OAuth2AuthenticationRefreshToken that = (OAuth2AuthenticationRefreshToken) other;\n \n-    return new EqualsBuilder().append(tokenId, that.tokenId).append(token, that.token)\n-        .append(authentication, that.authentication).isEquals();\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return new HashCodeBuilder(17, 37).append(tokenId).append(token).append(authentication)\n-        .toHashCode();\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return new ToStringBuilder(this).append(\"tokenId\", tokenId).append(\"token\", token)\n-        .append(\"authentication\", authentication).toString();\n-  }\n-}\n+    @Override\n+    public String toString() {\n+    return new ToStringBuilder(this).append(\"tokenId\", tokenId)\n+                                    .append(\"token\", token)\n+                                    .append(\"authentication\", authentication)\n+                                    .toString();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 66
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "column": "46",
                    "severity": "error",
                    "message": "'}' at column 46 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/146/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa..910503fc12 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/146/OAuth2AuthenticationRefreshToken.java\n@@ -48,11 +48,11 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n+    if (this == other) {\n       return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n       return false;\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/146/OAuth2AuthenticationRefreshToken.java\nindex dc8722a1aa..fc116e7b2a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/146/OAuth2AuthenticationRefreshToken.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/146/OAuth2AuthenticationRefreshToken.java\n@@ -21,9 +21,9 @@ public class OAuth2AuthenticationRefreshToken {\n   private byte[] token;\n   private byte[] authentication;\n \n-  public OAuth2AuthenticationRefreshToken() {}\n+  public OAuth2AuthenticationRefreshToken() {\n \n-  /**\n+  }/**\n    * Create the refresh token.\n    */\n   @PersistenceConstructor\n@@ -48,11 +48,11 @@ public class OAuth2AuthenticationRefreshToken {\n \n   @Override\n   public boolean equals(Object other) {\n-    if (this == other) {      \n+    if (this == other) {\n       return true;\n     }\n \n-    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {      \n+    if (!(other instanceof OAuth2AuthenticationRefreshToken)) {\n       return false;\n     }\n \n",
            "diff_size": 4
        }
    ]
}