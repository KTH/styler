{
    "error_id": "234",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 190).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<ParkingAreaDto> parkingAreas = BeanConvertUtil.covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n\n        return parkingAreas;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/234/ParkingAreaInnerServiceSMOImpl.java\nindex 2c2f78a254..b44aad3bf7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/234/ParkingAreaInnerServiceSMOImpl.java\n@@ -40,34 +40,39 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             parkingAreaDto.setPage((page - 1) * parkingAreaDto.getRow());\n-        }\n+        } List<ParkingAreaDto>parkingAreas\n \n-        List<ParkingAreaDto> parkingAreas = BeanConvertUtil.covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n \n-        return parkingAreas;\n-    }\n \n+        =\n \n+        BeanConvertUtil .covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n \n+          return parkingAreas;\n+      }\n \n-    @Override\n-    public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n-        return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n-    }\n-\n-    public IParkingAreaServiceDao getParkingAreaServiceDaoImpl() {\n-        return parkingAreaServiceDaoImpl;\n-    }\n-\n-    public void setParkingAreaServiceDaoImpl(IParkingAreaServiceDao parkingAreaServiceDaoImpl) {\n-        this.parkingAreaServiceDaoImpl = parkingAreaServiceDaoImpl;\n-    }\n-\n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n-\n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+\n+\n+\n+      @Override\n+      public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n+          return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n+      }\n+\n+      public IParkingAreaServiceDao getParkingAreaServiceDaoImpl() {\n+          return parkingAreaServiceDaoImpl;\n+      }\n+\n+      public void setParkingAreaServiceDaoImpl(IParkingAreaServiceDao parkingAreaServiceDaoImpl) {\n+          this.parkingAreaServiceDaoImpl = parkingAreaServiceDaoImpl;\n+      }\n+\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n+\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/234/ParkingAreaInnerServiceSMOImpl.java\nindex 2c2f78a254..d23adbc0fa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/234/ParkingAreaInnerServiceSMOImpl.java\n@@ -25,49 +25,48 @@ import java.util.List;\n @RestController\n public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IParkingAreaInnerServiceSMO {\n \n-    @Autowired\n-    private IParkingAreaServiceDao parkingAreaServiceDaoImpl;\n+  @Autowired\n+  private IParkingAreaServiceDao parkingAreaServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<ParkingAreaDto> queryParkingAreas(@RequestBody ParkingAreaDto parkingAreaDto) {\n+  @Override\n+  public List<ParkingAreaDto> queryParkingAreas(@RequestBody ParkingAreaDto parkingAreaDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = parkingAreaDto.getPage();\n+    int page = parkingAreaDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            parkingAreaDto.setPage((page - 1) * parkingAreaDto.getRow());\n-        }\n-\n-        List<ParkingAreaDto> parkingAreas = BeanConvertUtil.covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n-\n-        return parkingAreas;\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      parkingAreaDto.setPage((page - 1) * parkingAreaDto.getRow());\n     }\n \n+    List<ParkingAreaDto> parkingAreas = BeanConvertUtil\n+      .covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n \n+    return parkingAreas;\n+  }\n \n \n-    @Override\n-    public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n-        return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n-    }\n+  @Override\n+  public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n+    return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n+  }\n \n-    public IParkingAreaServiceDao getParkingAreaServiceDaoImpl() {\n-        return parkingAreaServiceDaoImpl;\n-    }\n+  public IParkingAreaServiceDao getParkingAreaServiceDaoImpl() {\n+    return parkingAreaServiceDaoImpl;\n+  }\n \n-    public void setParkingAreaServiceDaoImpl(IParkingAreaServiceDao parkingAreaServiceDaoImpl) {\n-        this.parkingAreaServiceDaoImpl = parkingAreaServiceDaoImpl;\n-    }\n+  public void setParkingAreaServiceDaoImpl(IParkingAreaServiceDao parkingAreaServiceDaoImpl) {\n+    this.parkingAreaServiceDaoImpl = parkingAreaServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/234/ParkingAreaInnerServiceSMOImpl.java\nindex 2c2f78a254..3e16e7f89a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/234/ParkingAreaInnerServiceSMOImpl.java\n@@ -47,10 +47,7 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n         return parkingAreas;\n     }\n \n-\n-\n-\n-    @Override\n+@Override\n     public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n         return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n     }\n@@ -70,4 +67,4 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/234/ParkingAreaInnerServiceSMOImpl.java\nindex 2c2f78a254..780f5122a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/234/ParkingAreaInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.community.dao.IParkingAreaServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.core.smo.community.IParkingAreaInnerServiceSMO;\n@@ -11,7 +10,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IParkingAreaInnerServiceSMO {\n \n@@ -35,9 +35,7 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n     public List<ParkingAreaDto> queryParkingAreas(@RequestBody ParkingAreaDto parkingAreaDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = parkingAreaDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             parkingAreaDto.setPage((page - 1) * parkingAreaDto.getRow());\n         }\n@@ -48,8 +46,6 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n     }\n \n \n-\n-\n     @Override\n     public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n         return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n@@ -70,4 +66,4 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "column": "105",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "40",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "62",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "63",
                    "severity": "error",
                    "message": "'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/234/ParkingAreaInnerServiceSMOImpl.java\nindex 2c2f78a254..c67bd3e987 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/234/ParkingAreaInnerServiceSMOImpl.java\n@@ -41,10 +41,8 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n         if (page != PageDto.DEFAULT_PAGE) {\n             parkingAreaDto.setPage((page - 1) * parkingAreaDto.getRow());\n         }\n-\n-        List<ParkingAreaDto> parkingAreas = BeanConvertUtil.covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n-\n-        return parkingAreas;\n+            List<ParkingAreaDto> parkingAreas = BeanConvertUtil.covertBeanList(parkingAreaServiceDaoImpl. getParkingAreaInfo(BeanConvertUtil\n+        .beanCovertMap(parkingAreaDto)),ParkingAreaDto.class);return parkingAreas;\n     }\n \n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/234/ParkingAreaInnerServiceSMOImpl.java\nindex 2c2f78a254..b44aad3bf7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/234/ParkingAreaInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/234/ParkingAreaInnerServiceSMOImpl.java\n@@ -40,34 +40,39 @@ public class ParkingAreaInnerServiceSMOImpl extends BaseServiceSMO implements IP\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             parkingAreaDto.setPage((page - 1) * parkingAreaDto.getRow());\n-        }\n+        } List<ParkingAreaDto>parkingAreas\n \n-        List<ParkingAreaDto> parkingAreas = BeanConvertUtil.covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n \n-        return parkingAreas;\n-    }\n \n+        =\n \n+        BeanConvertUtil .covertBeanList(parkingAreaServiceDaoImpl.getParkingAreaInfo(BeanConvertUtil.beanCovertMap(parkingAreaDto)), ParkingAreaDto.class);\n \n+          return parkingAreas;\n+      }\n \n-    @Override\n-    public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n-        return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n-    }\n-\n-    public IParkingAreaServiceDao getParkingAreaServiceDaoImpl() {\n-        return parkingAreaServiceDaoImpl;\n-    }\n-\n-    public void setParkingAreaServiceDaoImpl(IParkingAreaServiceDao parkingAreaServiceDaoImpl) {\n-        this.parkingAreaServiceDaoImpl = parkingAreaServiceDaoImpl;\n-    }\n-\n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n-\n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+\n+\n+\n+      @Override\n+      public int queryParkingAreasCount(@RequestBody ParkingAreaDto parkingAreaDto) {\n+          return parkingAreaServiceDaoImpl.queryParkingAreasCount(BeanConvertUtil.beanCovertMap(parkingAreaDto));\n+      }\n+\n+      public IParkingAreaServiceDao getParkingAreaServiceDaoImpl() {\n+          return parkingAreaServiceDaoImpl;\n+      }\n+\n+      public void setParkingAreaServiceDaoImpl(IParkingAreaServiceDao parkingAreaServiceDaoImpl) {\n+          this.parkingAreaServiceDaoImpl = parkingAreaServiceDaoImpl;\n+      }\n+\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n+\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 33
        }
    ]
}