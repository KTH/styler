{
    "error_id": "684",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/684/TMatrixPoolableObjectFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/684/TMatrixPoolableObjectFactory.java\nindex b8d79f5d3c..89e60ef385 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/684/TMatrixPoolableObjectFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/684/TMatrixPoolableObjectFactory.java\n@@ -20,43 +20,43 @@ import com.tencent.angel.ml.math.TMatrix;\n import org.apache.commons.pool.PoolableObjectFactory;\n \n public class TMatrixPoolableObjectFactory<TVF extends TMatrixBuilder> implements\n-    PoolableObjectFactory {\n-\n-  private final int row, col;\n-  private final TVF factory;\n-\n-  public TMatrixPoolableObjectFactory(int row, int col, TVF factory) {\n-    this.row = row;\n-    this.col = col;\n-    this.factory = factory;\n-  }\n-\n-  @Override\n-  public Object makeObject() throws Exception {\n-    TMatrix matrix = factory.build(row, col);\n-    return matrix;\n-  }\n-\n-  @Override\n-  public void destroyObject(Object obj) throws Exception {\n-    TMatrix matrix = (TMatrix) obj;\n-    matrix.clear();\n-  }\n-\n-  @Override\n-  public boolean validateObject(Object obj) {\n-    return true;\n-  }\n-\n-  @Override\n-  public void activateObject(Object obj) throws Exception {\n-    return;\n-  }\n-\n-  @Override\n-  public void passivateObject(Object obj) throws Exception {\n-    TMatrix matrix = (TMatrix) obj;\n-    matrix.clear();\n-  }\n+        PoolableObjectFactory {\n+\n+    private final int row, col;\n+    private final TVF factory;\n+\n+    public TMatrixPoolableObjectFactory(int row, int col, TVF factory) {\n+        this.row = row;\n+        this.col = col;\n+        this.factory = factory;\n+    }\n+\n+    @Override\n+    public Object makeObject() throws Exception {\n+        TMatrix matrix = factory.build(row, col);\n+        return matrix;\n+    }\n+\n+    @Override\n+    public void destroyObject(Object obj) throws Exception {\n+        TMatrix matrix = (TMatrix) obj;\n+        matrix.clear();\n+    }\n+\n+    @Override\n+    public boolean validateObject(Object obj) {\n+        return true;\n+    }\n+\n+    @Override\n+    public void activateObject(Object obj) throws Exception {\n+        return;\n+    }\n+\n+    @Override\n+    public void passivateObject(Object obj) throws Exception {\n+        TMatrix matrix = (TMatrix) obj;\n+        matrix.clear();\n+    }\n \n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/684/TMatrixPoolableObjectFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/684/TMatrixPoolableObjectFactory.java\nindex b8d79f5d3c..37dec68abe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/684/TMatrixPoolableObjectFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/684/TMatrixPoolableObjectFactory.java\n@@ -19,8 +19,7 @@ package com.tencent.angel.ml.math.factory;\n import com.tencent.angel.ml.math.TMatrix;\n import org.apache.commons.pool.PoolableObjectFactory;\n \n-public class TMatrixPoolableObjectFactory<TVF extends TMatrixBuilder> implements\n-    PoolableObjectFactory {\n+public class TMatrixPoolableObjectFactory<TVF extends TMatrixBuilder> implements PoolableObjectFactory {\n \n   private final int row, col;\n   private final TVF factory;\n@@ -59,4 +58,4 @@ public class TMatrixPoolableObjectFactory<TVF extends TMatrixBuilder> implements\n     matrix.clear();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/684/TMatrixPoolableObjectFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/684/TMatrixPoolableObjectFactory.java\nindex b8d79f5d3c..e24e13f47f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/684/TMatrixPoolableObjectFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/684/TMatrixPoolableObjectFactory.java\n@@ -19,44 +19,41 @@ package com.tencent.angel.ml.math.factory;\n import com.tencent.angel.ml.math.TMatrix;\n import org.apache.commons.pool.PoolableObjectFactory;\n \n-public class TMatrixPoolableObjectFactory<TVF extends TMatrixBuilder> implements\n-    PoolableObjectFactory {\n+public class TMatrixPoolableObjectFactory<TVF extends TMatrixBuilder> implements PoolableObjectFactory {\n+    private final int row, col;\n+    private final TVF factory;\n \n-  private final int row, col;\n-  private final TVF factory;\n-\n-  public TMatrixPoolableObjectFactory(int row, int col, TVF factory) {\n+    public TMatrixPoolableObjectFactory(int row, int col, TVF factory) {\n     this.row = row;\n     this.col = col;\n     this.factory = factory;\n-  }\n+    }\n \n-  @Override\n-  public Object makeObject() throws Exception {\n+    @Override\n+    public Object makeObject() throws Exception {\n     TMatrix matrix = factory.build(row, col);\n     return matrix;\n-  }\n+    }\n \n-  @Override\n-  public void destroyObject(Object obj) throws Exception {\n+    @Override\n+    public void destroyObject(Object obj) throws Exception {\n     TMatrix matrix = (TMatrix) obj;\n     matrix.clear();\n-  }\n+    }\n \n-  @Override\n-  public boolean validateObject(Object obj) {\n+    @Override\n+    public boolean validateObject(Object obj) {\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public void activateObject(Object obj) throws Exception {\n+    @Override\n+    public void activateObject(Object obj) throws Exception {\n     return;\n-  }\n+    }\n \n-  @Override\n-  public void passivateObject(Object obj) throws Exception {\n+    @Override\n+    public void passivateObject(Object obj) throws Exception {\n     TMatrix matrix = (TMatrix) obj;\n     matrix.clear();\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}