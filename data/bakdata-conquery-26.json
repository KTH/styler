{
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "103",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\ttry {\n\t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n\t\t\t} catch (JSONException e) {\n\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n\t\t\t}\n\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "103",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/26/ManagedExecution.java\nindex 7d2d7f0c47..047282f0ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/26/ManagedExecution.java\n@@ -49,7 +49,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \tprotected LocalDateTime creationTime = LocalDateTime.now();\n \t@Nullable\n \tprotected UserId owner;\n-\t\n+\n \t//we don't want to store or send query results or other result metadata\n \t@JsonIgnore\n \tprotected transient ExecutionState state = ExecutionState.NEW;\n@@ -113,7 +113,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n \t\t}\n \t}\n-\t\n+\n \tpublic ExecutionStatus buildStatus(URLBuilder url) {\n \t\treturn ExecutionStatus\n \t\t\t.builder()\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/26/ManagedExecution.java\nindex 7d2d7f0c47..b1a4890ce9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/26/ManagedExecution.java\n@@ -39,108 +39,109 @@ import java.util.concurrent.TimeUnit;\n @ToString\n @Slf4j\n @CPSBase\n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, property=\"type\")\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, property = \"type\")\n public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecutionId> {\n \n-\tprotected DatasetId dataset;\n-\tprotected UUID queryId = UUID.randomUUID();\n-\t@NotEmpty\n-\tprotected String label = queryId.toString();\n-\tprotected LocalDateTime creationTime = LocalDateTime.now();\n-\t@Nullable\n-\tprotected UserId owner;\n-\t\n-\t//we don't want to store or send query results or other result metadata\n-\t@JsonIgnore\n-\tprotected transient ExecutionState state = ExecutionState.NEW;\n-\t@JsonIgnore\n-\tprivate final transient CountDownLatch execution = new CountDownLatch(1);\n-\t@JsonIgnore\n-\tprivate transient LocalDateTime startTime;\n-\t@JsonIgnore\n-\tprotected transient LocalDateTime finishTime;\n-\t@JsonIgnore\n-\tprotected transient Namespace namespace;\n-\n-\tpublic ManagedExecution(Namespace namespace, UserId owner) {\n-\t\tthis.owner = owner;\n-\t\tinitExecutable(namespace);\n-\t}\n-\n-\tpublic void initExecutable(@NonNull Namespace namespace) {\n-\t\tthis.namespace = namespace;\n-\t\tthis.dataset = namespace.getStorage().getDataset().getId();\n-\t}\n-\n-\t@Override\n-\tpublic ManagedExecutionId createId() {\n-\t\treturn new ManagedExecutionId(dataset, queryId);\n-\t}\n-\n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n-\t}\n-\n-\tpublic void start() {\n-\t\tstartTime = LocalDateTime.now();\n-\t\tstate = ExecutionState.RUNNING;\n-\t}\n-\n-\tprotected void finish() {\n-\t\tif (getState() == ExecutionState.NEW)\n-\t\t\tlog.error(\"Query {} was never run.\", getId());\n-\n-\t\tsynchronized (execution) {\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\tstate = ExecutionState.DONE;\n-\t\t\texecution.countDown();\n-\t\t\ttry {\n-\t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n-\t\t\t} catch (JSONException e) {\n-\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n-\t\t\t}\n-\t\t}\n-\n-\t\tlog.info(\"{} {} {} within {}\", state, queryId, this.getClass().getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n-\t}\n-\n-\tpublic void awaitDone(int time, TimeUnit unit) {\n-\t\tif(state == ExecutionState.RUNNING) {\n-\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n-\t\t}\n-\t}\n-\t\n-\tpublic ExecutionStatus buildStatus(URLBuilder url) {\n-\t\treturn ExecutionStatus\n-\t\t\t.builder()\n-\t\t\t.label(label)\n-\t\t\t.id(getId())\n-\t\t\t.own(true)\n-\t\t\t.createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.requiredTime((startTime != null && finishTime != null)\n-\t\t\t\t? ChronoUnit.MILLIS.between(startTime, finishTime)\n-\t\t\t\t: null)\n-\t\t\t.status(state)\n-\t\t\t.owner(Optional.ofNullable(owner).orElse(null))\n-\t\t\t.ownerName(Optional.ofNullable(owner).map(user -> namespace.getStorage().getMetaStorage().getUser(user)).map(User::getLabel).orElse(null))\n-\t\t\t.resultUrl(\n-\t\t\t\turl != null && state != ExecutionState.NEW\n-\t\t\t\t? url\n-\t\t\t\t\t.set(ResourceConstants.DATASET, dataset.getName())\n-\t\t\t\t\t.set(ResourceConstants.QUERY, getId().toString())\n-\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n-\t\t\t\t: null\n-\t\t\t)\n-\t\t\t.build();\n-\t}\n-\n-\tpublic ExecutionStatus buildStatus() {\n-\t\treturn buildStatus(null);\n-\t}\n-\n-\tpublic abstract ManagedQuery toResultQuery();\n+    protected DatasetId dataset;\n+    protected UUID queryId = UUID.randomUUID();\n+    @NotEmpty\n+    protected String label = queryId.toString();\n+    protected LocalDateTime creationTime = LocalDateTime.now();\n+    @Nullable\n+    protected UserId owner;\n+\n+    //we don't want to store or send query results or other result metadata\n+    @JsonIgnore\n+    protected transient ExecutionState state = ExecutionState.NEW;\n+    @JsonIgnore\n+    private final transient CountDownLatch execution = new CountDownLatch(1);\n+    @JsonIgnore\n+    private transient LocalDateTime startTime;\n+    @JsonIgnore\n+    protected transient LocalDateTime finishTime;\n+    @JsonIgnore\n+    protected transient Namespace namespace;\n+\n+    public ManagedExecution(Namespace namespace, UserId owner) {\n+        this.owner = owner;\n+        initExecutable(namespace);\n+    }\n+\n+    public void initExecutable(@NonNull Namespace namespace) {\n+        this.namespace = namespace;\n+        this.dataset = namespace.getStorage().getDataset().getId();\n+    }\n+\n+    @Override\n+    public ManagedExecutionId createId() {\n+        return new ManagedExecutionId(dataset, queryId);\n+    }\n+\n+    protected void fail() {\n+        synchronized (execution) {\n+            state = ExecutionState.FAILED;\n+            finishTime = LocalDateTime.now();\n+            execution.countDown();\n+        }\n+    }\n+\n+    public void start() {\n+        startTime = LocalDateTime.now();\n+        state = ExecutionState.RUNNING;\n+    }\n+\n+    protected void finish() {\n+        if (getState() == ExecutionState.NEW) {\n+            log.error(\"Query {} was never run.\", getId());\n+        }\n+\n+        synchronized (execution) {\n+            finishTime = LocalDateTime.now();\n+            state = ExecutionState.DONE;\n+            execution.countDown();\n+            try {\n+                namespace.getStorage().getMetaStorage().updateExecution(this);\n+            } catch (JSONException e) {\n+                log.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n+            }\n+        }\n+\n+        log.info(\"{} {} {} within {}\", state, queryId, this.getClass().getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n+    }\n+\n+    public void awaitDone(int time, TimeUnit unit) {\n+        if (state == ExecutionState.RUNNING) {\n+            Uninterruptibles.awaitUninterruptibly(execution, time, unit);\n+        }\n+    }\n+\n+    public ExecutionStatus buildStatus(URLBuilder url) {\n+        return ExecutionStatus\n+            .builder()\n+            .label(label)\n+            .id(getId())\n+            .own(true)\n+            .createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+            .requiredTime((startTime != null && finishTime != null)\n+                ? ChronoUnit.MILLIS.between(startTime, finishTime)\n+                : null)\n+            .status(state)\n+            .owner(Optional.ofNullable(owner).orElse(null))\n+            .ownerName(Optional.ofNullable(owner).map(user -> namespace.getStorage().getMetaStorage().getUser(user)).map(User::getLabel).orElse(null))\n+            .resultUrl(\n+                url != null && state != ExecutionState.NEW\n+                    ? url\n+                    .set(ResourceConstants.DATASET, dataset.getName())\n+                    .set(ResourceConstants.QUERY, getId().toString())\n+                    .to(ResultCSVResource.GET_CSV_PATH).get()\n+                    : null\n+            )\n+            .build();\n+    }\n+\n+    public ExecutionStatus buildStatus() {\n+        return buildStatus(null);\n+    }\n+\n+    public abstract ManagedQuery toResultQuery();\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/26/ManagedExecution.java\nindex 7d2d7f0c47..b839a3aa16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/26/ManagedExecution.java\n@@ -93,14 +93,14 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \tprotected void finish() {\n \t\tif (getState() == ExecutionState.NEW)\n \t\t\tlog.error(\"Query {} was never run.\", getId());\n-\n-\t\tsynchronized (execution) {\n+synchronized (execution) {\n \t\t\tfinishTime = LocalDateTime.now();\n \t\t\tstate = ExecutionState.DONE;\n \t\t\texecution.countDown();\n \t\t\ttry {\n \t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n-\t\t\t} catch (JSONException e) {\n+\t\t\t}\n+catch (JSONException e) {\n \t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n \t\t\t}\n \t\t}\n@@ -143,4 +143,4 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t}\n \n \tpublic abstract ManagedQuery toResultQuery();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/26/ManagedExecution.java\nindex 7d2d7f0c47..69f216ddb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/26/ManagedExecution.java\n@@ -22,7 +22,6 @@ import lombok.Setter;\n import lombok.ToString;\n import lombok.extern.slf4j.Slf4j;\n import org.hibernate.validator.constraints.NotEmpty;\n-\n import javax.annotation.Nullable;\n import java.time.Duration;\n import java.time.LocalDateTime;\n@@ -39,108 +38,103 @@ import java.util.concurrent.TimeUnit;\n @ToString\n @Slf4j\n @CPSBase\n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, property=\"type\")\n+@JsonTypeInfo(use= JsonTypeInfo.Id.CUSTOM, property= \"type\")\n public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecutionId> {\n \n-\tprotected DatasetId dataset;\n-\tprotected UUID queryId = UUID.randomUUID();\n-\t@NotEmpty\n-\tprotected String label = queryId.toString();\n-\tprotected LocalDateTime creationTime = LocalDateTime.now();\n-\t@Nullable\n-\tprotected UserId owner;\n-\t\n-\t//we don't want to store or send query results or other result metadata\n-\t@JsonIgnore\n-\tprotected transient ExecutionState state = ExecutionState.NEW;\n-\t@JsonIgnore\n-\tprivate final transient CountDownLatch execution = new CountDownLatch(1);\n-\t@JsonIgnore\n-\tprivate transient LocalDateTime startTime;\n-\t@JsonIgnore\n-\tprotected transient LocalDateTime finishTime;\n-\t@JsonIgnore\n-\tprotected transient Namespace namespace;\n-\n-\tpublic ManagedExecution(Namespace namespace, UserId owner) {\n-\t\tthis.owner = owner;\n-\t\tinitExecutable(namespace);\n-\t}\n+    protected DatasetId dataset;\n+    protected UUID queryId = UUID.randomUUID();\n+    @NotEmpty\n+    protected String label = queryId.toString();\n+    protected LocalDateTime creationTime = LocalDateTime.now();\n+    @Nullable\n+    protected UserId owner;\n+    \n+    //we don't want to store or send query results or other result metadata\n+    @JsonIgnore\n+    protected transient ExecutionState state = ExecutionState.NEW;\n+    @JsonIgnore\n+    private final transient CountDownLatch execution = new CountDownLatch(1);\n+    @JsonIgnore\n+    private transient LocalDateTime startTime;\n+    @JsonIgnore\n+    protected transient LocalDateTime finishTime;\n+    @JsonIgnore\n+    protected transient Namespace namespace;\n \n-\tpublic void initExecutable(@NonNull Namespace namespace) {\n-\t\tthis.namespace = namespace;\n-\t\tthis.dataset = namespace.getStorage().getDataset().getId();\n-\t}\n+    public ManagedExecution(Namespace namespace, UserId owner) {\n+        this.owner = owner;\n+        initExecutable(namespace);\n+    }\n \n-\t@Override\n-\tpublic ManagedExecutionId createId() {\n-\t\treturn new ManagedExecutionId(dataset, queryId);\n-\t}\n+    public void initExecutable(@NonNull Namespace namespace) {\n+        this.namespace = namespace;\n+        this.dataset = namespace.getStorage().getDataset()\n+                                             .getId();\n+    }\n \n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n-\t}\n+    @Override\n+    public ManagedExecutionId createId() {\n+        return new ManagedExecutionId(dataset, queryId);\n+    }\n \n-\tpublic void start() {\n-\t\tstartTime = LocalDateTime.now();\n-\t\tstate = ExecutionState.RUNNING;\n-\t}\n+    protected void fail() {\n+        synchronized (execution) {\n+            state = ExecutionState.FAILED;\n+            finishTime = LocalDateTime.now();\n+            execution.countDown();\n+        }\n+    }\n \n-\tprotected void finish() {\n-\t\tif (getState() == ExecutionState.NEW)\n-\t\t\tlog.error(\"Query {} was never run.\", getId());\n+    public void start() {\n+        startTime = LocalDateTime.now();\n+        state = ExecutionState.RUNNING;\n+    }\n \n-\t\tsynchronized (execution) {\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\tstate = ExecutionState.DONE;\n-\t\t\texecution.countDown();\n-\t\t\ttry {\n-\t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n-\t\t\t} catch (JSONException e) {\n-\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n-\t\t\t}\n-\t\t}\n+    protected void finish() {\n+        if(getState() == ExecutionState.NEW)\n+            log.error(\"Query {} was never run.\", getId());\n+        synchronized (execution) {\n+            finishTime = LocalDateTime.now();\n+            state = ExecutionState.DONE;\n+            execution.countDown();\n+            try {\n+                namespace.getStorage().getMetaStorage().updateExecution(this);\n+            }\n+            catch (JSONException e) {\n+                log.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n+            }\n+        }\n+        log.info(\"{} {} {} within {}\", state, queryId, this.getClass()\n+                                                           .getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n+    }\n \n-\t\tlog.info(\"{} {} {} within {}\", state, queryId, this.getClass().getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n-\t}\n+    public void awaitDone(int time, TimeUnit unit) {\n+        if(state == ExecutionState.RUNNING) {\n+            Uninterruptibles.awaitUninterruptibly(execution, time, unit);\n+        }\n+    }\n \n-\tpublic void awaitDone(int time, TimeUnit unit) {\n-\t\tif(state == ExecutionState.RUNNING) {\n-\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n-\t\t}\n-\t}\n-\t\n-\tpublic ExecutionStatus buildStatus(URLBuilder url) {\n-\t\treturn ExecutionStatus\n-\t\t\t.builder()\n-\t\t\t.label(label)\n-\t\t\t.id(getId())\n-\t\t\t.own(true)\n-\t\t\t.createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.requiredTime((startTime != null && finishTime != null)\n-\t\t\t\t? ChronoUnit.MILLIS.between(startTime, finishTime)\n-\t\t\t\t: null)\n-\t\t\t.status(state)\n-\t\t\t.owner(Optional.ofNullable(owner).orElse(null))\n-\t\t\t.ownerName(Optional.ofNullable(owner).map(user -> namespace.getStorage().getMetaStorage().getUser(user)).map(User::getLabel).orElse(null))\n-\t\t\t.resultUrl(\n-\t\t\t\turl != null && state != ExecutionState.NEW\n-\t\t\t\t? url\n-\t\t\t\t\t.set(ResourceConstants.DATASET, dataset.getName())\n-\t\t\t\t\t.set(ResourceConstants.QUERY, getId().toString())\n-\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n-\t\t\t\t: null\n-\t\t\t)\n-\t\t\t.build();\n-\t}\n+    public ExecutionStatus buildStatus(URLBuilder url) {\n+        return ExecutionStatus.builder().label(label)\n+                                        .id(getId())\n+                                        .own(true)\n+                                        .createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+                                        .requiredTime((startTime != null && finishTime != null) ? ChronoUnit.MILLIS.between(startTime, finishTime) : null)\n+                                        .status(state)\n+                                        .owner(Optional.ofNullable(owner).orElse(null))\n+                                        .ownerName(Optional.ofNullable(owner).map(user->namespace.getStorage().getMetaStorage()\n+                                                                                                              .getUser(user))\n+                                                                             .map(User::getLabel)\n+                                                                             .orElse(null))\n+                                        .resultUrl(url != null && state != ExecutionState.NEW ? url.set(ResourceConstants.DATASET, dataset.getName()).set(ResourceConstants.QUERY, getId().toString())\n+                                                                                                                                                     .to(ResultCSVResource.GET_CSV_PATH)\n+                                                                                                                                                     .get() : null)\n+                                        .build();\n+    }\n \n-\tpublic ExecutionStatus buildStatus() {\n-\t\treturn buildStatus(null);\n-\t}\n+    public ExecutionStatus buildStatus() {\n+        return buildStatus(null);\n+    }\n \n-\tpublic abstract ManagedQuery toResultQuery();\n-}\n+    public abstract ManagedQuery toResultQuery();\n+}\n\\ No newline at end of file\n",
            "diff_size": 109
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "103",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/26/ManagedExecution.java\nindex 7d2d7f0c47..047282f0ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/26/ManagedExecution.java\n@@ -49,7 +49,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \tprotected LocalDateTime creationTime = LocalDateTime.now();\n \t@Nullable\n \tprotected UserId owner;\n-\t\n+\n \t//we don't want to store or send query results or other result metadata\n \t@JsonIgnore\n \tprotected transient ExecutionState state = ExecutionState.NEW;\n@@ -113,7 +113,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n \t\t}\n \t}\n-\t\n+\n \tpublic ExecutionStatus buildStatus(URLBuilder url) {\n \t\treturn ExecutionStatus\n \t\t\t.builder()\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "103",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 20, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/26/ManagedExecution.java\nindex 7d2d7f0c47..98b3b9dd42 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/26/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/26/ManagedExecution.java\n@@ -49,7 +49,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \tprotected LocalDateTime creationTime = LocalDateTime.now();\n \t@Nullable\n \tprotected UserId owner;\n-\t\n+\n \t//we don't want to store or send query results or other result metadata\n \t@JsonIgnore\n \tprotected transient ExecutionState state = ExecutionState.NEW;\n@@ -100,47 +100,49 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t\t\texecution.countDown();\n \t\t\ttry {\n \t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n-\t\t\t} catch (JSONException e) {\n-\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n+\t\t\t} catch ( JSONException\n+\t\t\t\te) {\n+\t\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n+\t\t\t\t}\n \t\t\t}\n+\n+\t\t\tlog.info(\"{} {} {} within {}\", state, queryId, this.getClass().getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n \t\t}\n \n-\t\tlog.info(\"{} {} {} within {}\", state, queryId, this.getClass().getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n-\t}\n+\t\tpublic void awaitDone(int time, TimeUnit unit) {\n+\t\t\tif(state == ExecutionState.RUNNING) {\n+\t\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n+\t\t\t}\n+\t\t}\n \n-\tpublic void awaitDone(int time, TimeUnit unit) {\n-\t\tif(state == ExecutionState.RUNNING) {\n-\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n+\t\tpublic ExecutionStatus buildStatus(URLBuilder url) {\n+\t\t\treturn ExecutionStatus\n+\t\t\t\t.builder()\n+\t\t\t\t.label(label)\n+\t\t\t\t.id(getId())\n+\t\t\t\t.own(true)\n+\t\t\t\t.createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+\t\t\t\t.requiredTime((startTime != null && finishTime != null)\n+\t\t\t\t\t? ChronoUnit.MILLIS.between(startTime, finishTime)\n+\t\t\t\t\t: null)\n+\t\t\t\t.status(state)\n+\t\t\t\t.owner(Optional.ofNullable(owner).orElse(null))\n+\t\t\t\t.ownerName(Optional.ofNullable(owner).map(user -> namespace.getStorage().getMetaStorage().getUser(user)).map(User::getLabel).orElse(null))\n+\t\t\t\t.resultUrl(\n+\t\t\t\t\turl != null && state != ExecutionState.NEW\n+\t\t\t\t\t? url\n+\t\t\t\t\t\t.set(ResourceConstants.DATASET, dataset.getName())\n+\t\t\t\t\t\t.set(ResourceConstants.QUERY, getId().toString())\n+\t\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n+\t\t\t\t\t: null\n+\t\t\t\t)\n+\t\t\t\t.build();\n \t\t}\n-\t}\n-\t\n-\tpublic ExecutionStatus buildStatus(URLBuilder url) {\n-\t\treturn ExecutionStatus\n-\t\t\t.builder()\n-\t\t\t.label(label)\n-\t\t\t.id(getId())\n-\t\t\t.own(true)\n-\t\t\t.createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.requiredTime((startTime != null && finishTime != null)\n-\t\t\t\t? ChronoUnit.MILLIS.between(startTime, finishTime)\n-\t\t\t\t: null)\n-\t\t\t.status(state)\n-\t\t\t.owner(Optional.ofNullable(owner).orElse(null))\n-\t\t\t.ownerName(Optional.ofNullable(owner).map(user -> namespace.getStorage().getMetaStorage().getUser(user)).map(User::getLabel).orElse(null))\n-\t\t\t.resultUrl(\n-\t\t\t\turl != null && state != ExecutionState.NEW\n-\t\t\t\t? url\n-\t\t\t\t\t.set(ResourceConstants.DATASET, dataset.getName())\n-\t\t\t\t\t.set(ResourceConstants.QUERY, getId().toString())\n-\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n-\t\t\t\t: null\n-\t\t\t)\n-\t\t\t.build();\n-\t}\n \n-\tpublic ExecutionStatus buildStatus() {\n-\t\treturn buildStatus(null);\n-\t}\n+\t\tpublic ExecutionStatus buildStatus() {\n+\t\t\treturn buildStatus(null);\n+\t\t}\n \n-\tpublic abstract ManagedQuery toResultQuery();\n-}\n+\t\tpublic abstract ManagedQuery toResultQuery();\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 65
        }
    ]
}