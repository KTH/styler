{
    "error_id": "167",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  final Map<String, Object> cfg;\n\n  public GCloudStorageAccessor(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n    super(entityDesc, uri);\n    this.cfg = cfg;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/167/GCloudStorageAccessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/167/GCloudStorageAccessor.java\nindex 984fc6f9df..88bd9534ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/167/GCloudStorageAccessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/167/GCloudStorageAccessor.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.gcloud.storage;\n \n import cz.o2.proxima.direct.batch.BatchLogObservable;\n@@ -38,7 +39,8 @@ class GCloudStorageAccessor extends AbstractStorage implements DataAccessor {\n   @Getter(AccessLevel.PACKAGE)\n   final Map<String, Object> cfg;\n \n-  public GCloudStorageAccessor(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n+  public GCloudStorageAccessor(EntityDescriptor entityDesc, URI uri,\n+                               Map<String, Object> cfg) {\n     super(entityDesc, uri);\n     this.cfg = cfg;\n   }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/167/GCloudStorageAccessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/167/GCloudStorageAccessor.java\nindex 984fc6f9df..2cae743b33 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/167/GCloudStorageAccessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/167/GCloudStorageAccessor.java\n@@ -68,7 +68,7 @@ class GCloudStorageAccessor extends AbstractStorage implements DataAccessor {\n         .orElse(\n             new File(\n                 System.getProperty(\"java.io.tmpdir\")\n-                    + File.separator\n++ File.separator\n                     + \"bulk-cloud-storage-\"\n                     + UUID.randomUUID()));\n   }\n@@ -114,4 +114,4 @@ class GCloudStorageAccessor extends AbstractStorage implements DataAccessor {\n         .map(Integer::valueOf)\n         .orElse(1000);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/167/GCloudStorageAccessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/167/GCloudStorageAccessor.java\nindex 984fc6f9df..7ae022ea09 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/167/GCloudStorageAccessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/167/GCloudStorageAccessor.java\n@@ -33,85 +33,78 @@ import lombok.AccessLevel;\n import lombok.Getter;\n \n /** A {@link DataAccessor} for gcloud storage. */\n-class GCloudStorageAccessor extends AbstractStorage implements DataAccessor {\n \n-  @Getter(AccessLevel.PACKAGE)\n-  final Map<String, Object> cfg;\n \n-  public GCloudStorageAccessor(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n+class GCloudStorageAccessor extends AbstractStorage\n+    implements DataAccessor {\n+\n+        @Getter(AccessLevel.PACKAGE) final Map<String, Object> cfg;\n+\n+        public GCloudStorageAccessor(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n     super(entityDesc, uri);\n     this.cfg = cfg;\n-  }\n+        }\n \n-  @Override\n-  public Optional<AttributeWriterBase> getWriter(Context context) {\n+        @Override\n+        public Optional<AttributeWriterBase> getWriter(Context context) {\n     return Optional.of(new BulkGCloudStorageWriter(getEntityDescriptor(), this, context));\n-  }\n+        }\n \n-  @Override\n-  public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n+        @Override\n+        public Optional<BatchLogObservable> getBatchLogObservable(Context context) {\n     return Optional.of(new GCloudLogObservable(this, context));\n-  }\n+        }\n \n-  FileFormat getFileFormat() {\n+        FileFormat getFileFormat() {\n     return Utils.getFileFormat(\"\", getCfg());\n-  }\n+        }\n \n-  NamingConvention getNamingConvention() {\n+        NamingConvention getNamingConvention() {\n     return Utils.getNamingConvention(\"\", getCfg(), getRollPeriod(), getFileFormat());\n-  }\n-\n-  public File getTmpDir() {\n-    return Optional.ofNullable(cfg.get(\"tmp.dir\"))\n-        .map(Object::toString)\n-        .map(File::new)\n-        .orElse(\n-            new File(\n-                System.getProperty(\"java.io.tmpdir\")\n-                    + File.separator\n-                    + \"bulk-cloud-storage-\"\n-                    + UUID.randomUUID()));\n-  }\n-\n-  public long getRollPeriod() {\n-    return Optional.ofNullable(cfg.get(\"log-roll-interval\"))\n-        .map(Object::toString)\n-        .map(Long::valueOf)\n-        .orElse(3600000L);\n-  }\n-\n-  public int getBufferSize() {\n-    return Optional.ofNullable(cfg.get(\"buffer-size\"))\n-        .map(Object::toString)\n-        .map(Integer::valueOf)\n-        .orElse(1024 * 1024);\n-  }\n-\n-  public long getAllowedLateness() {\n-    return Optional.ofNullable(cfg.get(\"allowed-lateness-ms\"))\n-        .map(Object::toString)\n-        .map(Long::valueOf)\n-        .orElse(5 * 60000L);\n-  }\n-\n-  public long getFlushAttemptDelay() {\n-    return Optional.ofNullable(cfg.get(\"flush-delay-ms\"))\n-        .map(Object::toString)\n-        .map(Long::valueOf)\n-        .orElse(5000L);\n-  }\n-\n-  public long getPartitionMinSize() {\n-    return Optional.ofNullable(cfg.get(\"partition.size\"))\n-        .map(Object::toString)\n-        .map(Long::valueOf)\n-        .orElse(100 * 1024 * 1024L);\n-  }\n-\n-  public int getPartitionMaxNumBlobs() {\n-    return Optional.ofNullable(cfg.get(\"partition.max-blobs\"))\n-        .map(Object::toString)\n-        .map(Integer::valueOf)\n-        .orElse(1000);\n-  }\n-}\n+        }\n+\n+        public File getTmpDir() {\n+    return Optional.ofNullable(cfg.get(\"tmp.dir\")).map(Object::toString)\n+                                                  .map(File::new)\n+                                                  .orElse(new File(System.getProperty(\"java.io.tmpdir\")\n+                                                  + File.separator\n+                                                  + \"bulk-cloud-storage-\"\n+                                                  + UUID.randomUUID()));\n+        }\n+\n+        public long getRollPeriod() {\n+    return Optional.ofNullable(cfg.get(\"log-roll-interval\")).map(Object::toString)\n+                                                            .map(Long::valueOf)\n+                                                            .orElse(3600000L);\n+        }\n+\n+        public int getBufferSize() {\n+    return Optional.ofNullable(cfg.get(\"buffer-size\")).map(Object::toString)\n+                                                      .map(Integer::valueOf)\n+                                                      .orElse(1024 * 1024);\n+        }\n+\n+        public long getAllowedLateness() {\n+    return Optional.ofNullable(cfg.get(\"allowed-lateness-ms\")).map(Object::toString)\n+                                                              .map(Long::valueOf)\n+                                                              .orElse(5 * 60000L);\n+        }\n+\n+        public long getFlushAttemptDelay() {\n+    return Optional.ofNullable(cfg.get(\"flush-delay-ms\")).map(Object::toString)\n+                                                         .map(Long::valueOf)\n+                                                         .orElse(5000L);\n+        }\n+\n+        public long getPartitionMinSize() {\n+    return Optional.ofNullable(cfg.get(\"partition.size\")).map(Object::toString)\n+                                                         .map(Long::valueOf)\n+                                                         .orElse(100 * 1024 * 1024L);\n+        }\n+\n+        public int getPartitionMaxNumBlobs() {\n+    return Optional.ofNullable(cfg.get(\"partition.max-blobs\")).map(Object::toString)\n+                                                              .map(Integer::valueOf)\n+                                                              .orElse(1000);\n+        }\n+}\n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}