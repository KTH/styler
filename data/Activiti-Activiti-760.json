{
    "error_id": "760",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\npublic class Pool extends BaseElement {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/760/Pool.java\nindex ed032a4069..ec6b252ff1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/760/Pool.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class Pool extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/760/Pool.java\nindex ed032a4069..824750b739 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/760/Pool.java\n@@ -1,57 +1,58 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class Pool extends BaseElement {\n \n-  protected String name;\n-  protected String processRef;\n-  protected boolean executable = true;\n-\n-  public String getName() {\n-    return name;\n-  }\n-\n-  public void setName(String name) {\n-    this.name = name;\n-  }\n-\n-  public String getProcessRef() {\n-    return processRef;\n-  }\n-\n-  public void setProcessRef(String processRef) {\n-    this.processRef = processRef;\n-  }\n-\n-  public boolean isExecutable() {\n-    return this.executable;\n-  }\n-\n-  public void setExecutable(boolean executable) {\n-    this.executable = executable;\n-  }\n-\n-  public Pool clone() {\n-    Pool clone = new Pool();\n-    clone.setValues(this);\n-    return clone;\n-  }\n-\n-  public void setValues(Pool otherElement) {\n-    super.setValues(otherElement);\n-    setName(otherElement.getName());\n-    setProcessRef(otherElement.getProcessRef());\n-    setExecutable(otherElement.isExecutable());\n-  }\n+    protected String name;\n+    protected String processRef;\n+    protected boolean executable = true;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getProcessRef() {\n+        return processRef;\n+    }\n+\n+    public void setProcessRef(String processRef) {\n+        this.processRef = processRef;\n+    }\n+\n+    public boolean isExecutable() {\n+        return this.executable;\n+    }\n+\n+    public void setExecutable(boolean executable) {\n+        this.executable = executable;\n+    }\n+\n+    public Pool clone() {\n+        Pool clone = new Pool();\n+        clone.setValues(this);\n+        return clone;\n+    }\n+\n+    public void setValues(Pool otherElement) {\n+        super.setValues(otherElement);\n+        setName(otherElement.getName());\n+        setProcessRef(otherElement.getProcessRef());\n+        setExecutable(otherElement.isExecutable());\n+    }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/760/Pool.java\nindex ed032a4069..028e834dcf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/760/Pool.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class Pool extends BaseElement {\n@@ -54,4 +55,4 @@ public class Pool extends BaseElement {\n     setProcessRef(otherElement.getProcessRef());\n     setExecutable(otherElement.isExecutable());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/760/Pool.java\nindex ed032a4069..97d164a388 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/760/Pool.java\n@@ -12,46 +12,46 @@\n  */\n package org.activiti.bpmn.model;\n \n-public class Pool extends BaseElement {\n \n-  protected String name;\n-  protected String processRef;\n-  protected boolean executable = true;\n+public class Pool extends BaseElement {\n \n-  public String getName() {\n+    protected String name;\n+    protected String processRef;\n+    protected boolean executable = true;\n+    public String getName() {\n     return name;\n-  }\n+    }\n \n-  public void setName(String name) {\n+    public void setName(String name) {\n     this.name = name;\n-  }\n+    }\n \n-  public String getProcessRef() {\n+    public String getProcessRef() {\n     return processRef;\n-  }\n+    }\n \n-  public void setProcessRef(String processRef) {\n+    public void setProcessRef(String processRef) {\n     this.processRef = processRef;\n-  }\n+    }\n \n-  public boolean isExecutable() {\n+    public boolean isExecutable() {\n     return this.executable;\n-  }\n+    }\n \n-  public void setExecutable(boolean executable) {\n+    public void setExecutable(boolean executable) {\n     this.executable = executable;\n-  }\n+    }\n \n-  public Pool clone() {\n+    public Pool clone() {\n     Pool clone = new Pool();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(Pool otherElement) {\n+    public void setValues(Pool otherElement) {\n     super.setValues(otherElement);\n     setName(otherElement.getName());\n     setProcessRef(otherElement.getProcessRef());\n     setExecutable(otherElement.isExecutable());\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/760/Pool.java\nindex ed032a4069..ec6b252ff1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/760/Pool.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class Pool extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/760/Pool.java\nindex ed032a4069..ec6b252ff1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/760/Pool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/760/Pool.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class Pool extends BaseElement {\n",
            "diff_size": 1
        }
    ]
}