{
    "error_id": "349",
    "information": {
        "errors": [
            {
                "line": "79",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        return;\n      default:\n        throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n    }\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/349/MUpdateFunc.java\nindex 56cba617f0..eede654c6e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/349/MUpdateFunc.java\n@@ -75,13 +75,12 @@ public abstract class MUpdateFunc extends UpdateFunc {\n         }\n         doUpdate(sparseRows);\n         return;\n-      default:\n-        throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n-    }\n+      default: throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n   }\n+}\n \n-  protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n+protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n \n-  protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n+protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n \n }\n",
            "diff_size": 6
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/349/MUpdateFunc.java\nindex 56cba617f0..5ceef3f9b8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/349/MUpdateFunc.java\n@@ -28,60 +28,62 @@ import com.tencent.angel.ps.impl.matrix.ServerSparseDoubleLongKeyRow;\n  * `MUpdateFunc` is a POF updater for multi rows in matrix.\n  * Constructor's Parameters include int[] `rowIds`, which correspond to\n  * ServerDenseDoubleRow[] `rows` in `doUpdate` interface.\n- *\n+ * <p>\n  * That is the length of `rowIds` and `rows` is exactly the same, rows[i] is the content of\n  * rowIds[i] row in matrix.\n  */\n public abstract class MUpdateFunc extends UpdateFunc {\n-  protected MUpdateFunc(int matrixId, int[] rowIds) {\n-    super(new MUpdateParam(matrixId, rowIds));\n-  }\n+    protected MUpdateFunc(int matrixId, int[] rowIds) {\n+        super(new MUpdateParam(matrixId, rowIds));\n+    }\n \n-  protected MUpdateFunc() {\n-    super(null);\n-  }\n+    protected MUpdateFunc() {\n+        super(null);\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    ServerPartition part = PSContext.get().getMatrixPartitionManager()\n-        .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        ServerPartition part = PSContext.get().getMatrixPartitionManager()\n+                .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n \n-    if (part != null) {\n-      MUpdateParam.MPartitionUpdateParam m = (MUpdateParam.MPartitionUpdateParam) partParam;\n-      int[] rowIds = m.getRowIds();\n-      if (Utils.withinPart(partParam.getPartKey(), rowIds)) {\n-        ServerRow[] rows = new ServerRow[rowIds.length];\n-        for (int i = 0; i < rowIds.length; i++) {\n-          rows[i] = part.getRow(rowIds[i]);\n+        if (part != null) {\n+            MUpdateParam.MPartitionUpdateParam m = (MUpdateParam.MPartitionUpdateParam) partParam;\n+            int[] rowIds = m.getRowIds();\n+            if (Utils.withinPart(partParam.getPartKey(), rowIds)) {\n+                ServerRow[] rows = new ServerRow[rowIds.length];\n+                for (int i = 0; i < rowIds.length; i++) {\n+                    rows[i] = part.getRow(rowIds[i]);\n+                }\n+                update(rows);\n+            }\n         }\n-        update(rows);\n-      }\n     }\n-  }\n \n-  private void update(ServerRow[] rows) {\n-    switch (rows[0].getRowType()) {\n-      case T_DOUBLE_DENSE:\n-        ServerDenseDoubleRow[] denseRows = new ServerDenseDoubleRow[rows.length];\n-        for (int i = 0; i < rows.length; i++) {\n-          denseRows[i] = (ServerDenseDoubleRow) rows[i];\n-        }\n-        doUpdate(denseRows);\n-        return;\n-      case T_DOUBLE_SPARSE_LONGKEY:\n-        ServerSparseDoubleLongKeyRow[] sparseRows = new ServerSparseDoubleLongKeyRow[rows.length];\n-        for (int i = 0; i < rows.length; i++) {\n-          sparseRows[i] = (ServerSparseDoubleLongKeyRow) rows[i];\n+    private void update(ServerRow[] rows) {\n+        switch (rows[0].getRowType()) {\n+            case T_DOUBLE_DENSE:\n+                ServerDenseDoubleRow[] denseRows = new ServerDenseDoubleRow[rows.length];\n+                for (int i = 0; i < rows.length; i++) {\n+                    denseRows[i] = (ServerDenseDoubleRow) rows[i];\n+                }\n+                doUpdate(denseRows);\n+                return;\n+            case T_DOUBLE_SPARSE_LONGKEY:\n+                ServerSparseDoubleLongKeyRow[] sparseRows =\n+                        new ServerSparseDoubleLongKeyRow[rows.length];\n+                for (int i = 0; i < rows.length; i++) {\n+                    sparseRows[i] = (ServerSparseDoubleLongKeyRow) rows[i];\n+                }\n+                doUpdate(sparseRows);\n+                return;\n+            default:\n+                throw new RuntimeException(\n+                        \"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n         }\n-        doUpdate(sparseRows);\n-        return;\n-      default:\n-        throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n     }\n-  }\n \n-  protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n+    protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n \n-  protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n+    protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n \n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/349/MUpdateFunc.java\nindex 56cba617f0..a7282b5e9e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/349/MUpdateFunc.java\n@@ -84,4 +84,4 @@ public abstract class MUpdateFunc extends UpdateFunc {\n \n   protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/349/MUpdateFunc.java\nindex 56cba617f0..36f01e697f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/349/MUpdateFunc.java\n@@ -32,56 +32,55 @@ import com.tencent.angel.ps.impl.matrix.ServerSparseDoubleLongKeyRow;\n  * That is the length of `rowIds` and `rows` is exactly the same, rows[i] is the content of\n  * rowIds[i] row in matrix.\n  */\n+\n public abstract class MUpdateFunc extends UpdateFunc {\n-  protected MUpdateFunc(int matrixId, int[] rowIds) {\n+\n+    protected MUpdateFunc(int matrixId, int[] rowIds) {\n     super(new MUpdateParam(matrixId, rowIds));\n-  }\n+    }\n \n-  protected MUpdateFunc() {\n+    protected MUpdateFunc() {\n     super(null);\n-  }\n-\n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    ServerPartition part = PSContext.get().getMatrixPartitionManager()\n-        .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n+    }\n \n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+    ServerPartition part = PSContext.get().getMatrixPartitionManager().getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n     if (part != null) {\n-      MUpdateParam.MPartitionUpdateParam m = (MUpdateParam.MPartitionUpdateParam) partParam;\n-      int[] rowIds = m.getRowIds();\n-      if (Utils.withinPart(partParam.getPartKey(), rowIds)) {\n+        MUpdateParam.MPartitionUpdateParam m = (MUpdateParam.MPartitionUpdateParam) partParam;\n+        int[] rowIds = m.getRowIds();\n+        if (Utils.withinPart(partParam.getPartKey(), rowIds)) {\n         ServerRow[] rows = new ServerRow[rowIds.length];\n         for (int i = 0; i < rowIds.length; i++) {\n-          rows[i] = part.getRow(rowIds[i]);\n+                                                                  rows[i] = part.getRow(rowIds[i]);\n         }\n         update(rows);\n-      }\n+        }\n+    }\n     }\n-  }\n \n-  private void update(ServerRow[] rows) {\n+    private void update(ServerRow[] rows) {\n     switch (rows[0].getRowType()) {\n-      case T_DOUBLE_DENSE:\n+        case T_DOUBLE_DENSE:\n         ServerDenseDoubleRow[] denseRows = new ServerDenseDoubleRow[rows.length];\n         for (int i = 0; i < rows.length; i++) {\n-          denseRows[i] = (ServerDenseDoubleRow) rows[i];\n+        denseRows[i] = (ServerDenseDoubleRow) rows[i];\n         }\n         doUpdate(denseRows);\n         return;\n-      case T_DOUBLE_SPARSE_LONGKEY:\n+        case T_DOUBLE_SPARSE_LONGKEY:\n         ServerSparseDoubleLongKeyRow[] sparseRows = new ServerSparseDoubleLongKeyRow[rows.length];\n         for (int i = 0; i < rows.length; i++) {\n-          sparseRows[i] = (ServerSparseDoubleLongKeyRow) rows[i];\n+        sparseRows[i] = (ServerSparseDoubleLongKeyRow) rows[i];\n         }\n         doUpdate(sparseRows);\n         return;\n-      default:\n+        default:\n         throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n     }\n-  }\n-\n-  protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n+    }\n \n-  protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n+    protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n+    protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "171",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/349/MUpdateFunc.java\nindex 56cba617f0..bf926e9302 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/349/MUpdateFunc.java\n@@ -76,12 +76,9 @@ public abstract class MUpdateFunc extends UpdateFunc {\n         doUpdate(sparseRows);\n         return;\n       default:\n-        throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n-    }\n-  }\n+        throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\"); }} protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n \n-  protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n+        protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n \n-  protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n-\n-}\n+      }\n+      \n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/349/MUpdateFunc.java\nindex 56cba617f0..eede654c6e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/349/MUpdateFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/349/MUpdateFunc.java\n@@ -75,13 +75,12 @@ public abstract class MUpdateFunc extends UpdateFunc {\n         }\n         doUpdate(sparseRows);\n         return;\n-      default:\n-        throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n-    }\n+      default: throw new RuntimeException(\"currently only supports T_DOUBLE_DENSE and T_DOUBLE_SPARSE_LONGKEY\");\n   }\n+}\n \n-  protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n+protected abstract void doUpdate(ServerDenseDoubleRow[] rows);\n \n-  protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n+protected abstract void doUpdate(ServerSparseDoubleLongKeyRow[] rows);\n \n }\n",
            "diff_size": 6
        }
    ]
}