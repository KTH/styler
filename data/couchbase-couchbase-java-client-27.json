{
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "89",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    /**\n     * Creates a {@link SerializableDocument} which the document id, content, CAS value, expiration time and status code.\n     *\n     * This factory method is normally only called within the client library when a response is analyzed and a document\n     * is returned which is enriched with the status code. It does not make sense to pre populate the status field from",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/intellij/27/SerializableDocument.java\nindex 18a289ea31..4db3f1f103 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/intellij/27/SerializableDocument.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.java.document;\n \n import java.io.IOException;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/naturalize/27/SerializableDocument.java\nindex 18a289ea31..b032b90c2f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/naturalize/27/SerializableDocument.java\n@@ -166,4 +166,4 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n     private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {\n         readFromSerializedStream(stream);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/codebuff/27/SerializableDocument.java\nindex 18a289ea31..bb49751cc7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/codebuff/27/SerializableDocument.java\n@@ -36,6 +36,8 @@ import java.io.Serializable;\n  * @author Michael Nitschinger\n  * @since 2.0\n  */\n+\n+\n public class SerializableDocument extends AbstractDocument<Serializable> implements Serializable {\n \n     private static final long serialVersionUID = 2153366534711753989L;\n@@ -57,6 +59,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param content the content of the document.\n      * @return a {@link SerializableDocument}.\n      */\n+\n+\n     public static SerializableDocument create(String id, Serializable content) {\n         return new SerializableDocument(id, 0, content, 0);\n     }\n@@ -69,6 +73,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param cas the CAS (compare and swap) value for optimistic concurrency.\n      * @return a {@link SerializableDocument}.\n      */\n+\n+\n     public static SerializableDocument create(String id, Serializable content, long cas) {\n         return new SerializableDocument(id, 0, content, cas);\n     }\n@@ -81,6 +87,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param expiry the expiration time of the document.\n      * @return a {@link SerializableDocument}.\n      */\n+\n+\n     public static SerializableDocument create(String id, int expiry, Serializable content) {\n         return new SerializableDocument(id, expiry, content, 0);\n     }\n@@ -98,6 +106,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param expiry the expiration time of the document.\n      * @return a {@link SerializableDocument}.\n      */\n+\n+\n     public static SerializableDocument create(String id, int expiry, Serializable content, long cas) {\n         return new SerializableDocument(id, expiry, content, cas);\n     }\n@@ -109,6 +119,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param id the per-bucket unique document id.\n      * @return a copied {@link SerializableDocument} with the changed properties.\n      */\n+\n+\n     public static SerializableDocument from(SerializableDocument doc, String id) {\n         return SerializableDocument.create(id, doc.expiry(), doc.content(), doc.cas());\n     }\n@@ -120,6 +132,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param content the content of the document.\n      * @return a copied {@link SerializableDocument} with the changed properties.\n      */\n+\n+\n     public static SerializableDocument from(SerializableDocument doc, Long content) {\n         return SerializableDocument.create(doc.id(), doc.expiry(), content, doc.cas());\n     }\n@@ -132,6 +146,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param content the content of the document.\n      * @return a copied {@link SerializableDocument} with the changed properties.\n      */\n+\n+\n     public static SerializableDocument from(SerializableDocument doc, String id, Long content) {\n         return SerializableDocument.create(id, doc.expiry(), content, doc.cas());\n     }\n@@ -143,6 +159,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param cas the CAS (compare and swap) value for optimistic concurrency.\n      * @return a copied {@link SerializableDocument} with the changed properties.\n      */\n+\n+\n     public static SerializableDocument from(SerializableDocument doc, long cas) {\n         return SerializableDocument.create(doc.id(), doc.expiry(), doc.content(), cas);\n     }\n@@ -155,6 +173,8 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      * @param cas the CAS (compare and swap) value for optimistic concurrency.\n      * @param expiry the expiration time of the document.\n      */\n+\n+\n     private SerializableDocument(String id, int expiry, Serializable content, long cas) {\n         super(id, expiry, content, cas);\n     }\n@@ -166,4 +186,4 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n     private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {\n         readFromSerializedStream(stream);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler_three_grams/27/SerializableDocument.java\nindex 18a289ea31..1279364aa7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/27/SerializableDocument.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler_three_grams/27/SerializableDocument.java\n@@ -83,9 +83,7 @@ public class SerializableDocument extends AbstractDocument<Serializable> impleme\n      */\n     public static SerializableDocument create(String id, int expiry, Serializable content) {\n         return new SerializableDocument(id, expiry, content, 0);\n-    }\n-\n-    /**\n+    } /**\n      * Creates a {@link SerializableDocument} which the document id, content, CAS value, expiration time and status code.\n      *\n      * This factory method is normally only called within the client library when a response is analyzed and a document\n",
            "diff_size": 3
        }
    ]
}