{
    "error_id": "684",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.bpmn.data;\n\nimport java.util.ArrayList;\nimport java.util.Collections;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/684/IOSpecification.java\nindex 2b84f64557..881e19301d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/684/IOSpecification.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.data;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/684/IOSpecification.java\nindex 2b84f64557..4d1b8fcd9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/684/IOSpecification.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.data;\n \n import java.util.ArrayList;\n@@ -20,70 +21,67 @@ import org.activiti.engine.delegate.DelegateExecution;\n \n /**\n  * Implementation of the BPMN 2.0 'ioSpecification'\n- * \n-\n-\n  */\n public class IOSpecification {\n \n-  protected List<Data> dataInputs;\n+    protected List<Data> dataInputs;\n \n-  protected List<Data> dataOutputs;\n+    protected List<Data> dataOutputs;\n \n-  protected List<DataRef> dataInputRefs;\n+    protected List<DataRef> dataInputRefs;\n \n-  protected List<DataRef> dataOutputRefs;\n+    protected List<DataRef> dataOutputRefs;\n \n-  public IOSpecification() {\n-    this.dataInputs = new ArrayList<Data>();\n-    this.dataOutputs = new ArrayList<Data>();\n-    this.dataInputRefs = new ArrayList<DataRef>();\n-    this.dataOutputRefs = new ArrayList<DataRef>();\n-  }\n-\n-  public void initialize(DelegateExecution execution) {\n-    for (Data data : this.dataInputs) {\n-      execution.setVariable(data.getName(), data.getDefinition().createInstance());\n+    public IOSpecification() {\n+        this.dataInputs = new ArrayList<Data>();\n+        this.dataOutputs = new ArrayList<Data>();\n+        this.dataInputRefs = new ArrayList<DataRef>();\n+        this.dataOutputRefs = new ArrayList<DataRef>();\n     }\n \n-    for (Data data : this.dataOutputs) {\n-      execution.setVariable(data.getName(), data.getDefinition().createInstance());\n+    public void initialize(DelegateExecution execution) {\n+        for (Data data : this.dataInputs) {\n+            execution.setVariable(data.getName(), data.getDefinition().createInstance());\n+        }\n+\n+        for (Data data : this.dataOutputs) {\n+            execution.setVariable(data.getName(), data.getDefinition().createInstance());\n+        }\n     }\n-  }\n \n-  public List<Data> getDataInputs() {\n-    return Collections.unmodifiableList(this.dataInputs);\n-  }\n+    public List<Data> getDataInputs() {\n+        return Collections.unmodifiableList(this.dataInputs);\n+    }\n \n-  public List<Data> getDataOutputs() {\n-    return Collections.unmodifiableList(this.dataOutputs);\n-  }\n+    public List<Data> getDataOutputs() {\n+        return Collections.unmodifiableList(this.dataOutputs);\n+    }\n \n-  public void addInput(Data data) {\n-    this.dataInputs.add(data);\n-  }\n+    public void addInput(Data data) {\n+        this.dataInputs.add(data);\n+    }\n \n-  public void addOutput(Data data) {\n-    this.dataOutputs.add(data);\n-  }\n+    public void addOutput(Data data) {\n+        this.dataOutputs.add(data);\n+    }\n \n-  public void addInputRef(DataRef dataRef) {\n-    this.dataInputRefs.add(dataRef);\n-  }\n+    public void addInputRef(DataRef dataRef) {\n+        this.dataInputRefs.add(dataRef);\n+    }\n \n-  public void addOutputRef(DataRef dataRef) {\n-    this.dataOutputRefs.add(dataRef);\n-  }\n+    public void addOutputRef(DataRef dataRef) {\n+        this.dataOutputRefs.add(dataRef);\n+    }\n \n-  public String getFirstDataInputName() {\n-    return this.dataInputs.get(0).getName();\n-  }\n+    public String getFirstDataInputName() {\n+        return this.dataInputs.get(0).getName();\n+    }\n \n-  public String getFirstDataOutputName() {\n-    if (this.dataOutputs != null && !this.dataOutputs.isEmpty()) {\n-      return this.dataOutputs.get(0).getName();\n-    } else {\n-      return null;\n+    public String getFirstDataOutputName() {\n+        if (this.dataOutputs != null && !this.dataOutputs.isEmpty()) {\n+            return this.dataOutputs.get(0).getName();\n+        } else {\n+            return null;\n+        }\n     }\n-  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/684/IOSpecification.java\nindex 2b84f64557..e9c426c6b1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/684/IOSpecification.java\n@@ -15,7 +15,6 @@ package org.activiti.engine.impl.bpmn.data;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-\n import org.activiti.engine.delegate.DelegateExecution;\n \n /**\n@@ -24,66 +23,67 @@ import org.activiti.engine.delegate.DelegateExecution;\n \n \n  */\n-public class IOSpecification {\n-\n-  protected List<Data> dataInputs;\n \n-  protected List<Data> dataOutputs;\n \n-  protected List<DataRef> dataInputRefs;\n+public class IOSpecification {\n \n-  protected List<DataRef> dataOutputRefs;\n+    protected List<Data> dataInputs;\n+    protected List<Data> dataOutputs;\n+    protected List<DataRef> dataInputRefs;\n+    protected List<DataRef> dataOutputRefs;\n \n-  public IOSpecification() {\n+    public IOSpecification() {\n     this.dataInputs = new ArrayList<Data>();\n     this.dataOutputs = new ArrayList<Data>();\n     this.dataInputRefs = new ArrayList<DataRef>();\n     this.dataOutputRefs = new ArrayList<DataRef>();\n-  }\n-\n-  public void initialize(DelegateExecution execution) {\n-    for (Data data : this.dataInputs) {\n-      execution.setVariable(data.getName(), data.getDefinition().createInstance());\n     }\n \n-    for (Data data : this.dataOutputs) {\n-      execution.setVariable(data.getName(), data.getDefinition().createInstance());\n+    public void initialize(DelegateExecution execution) {\n+for (Data data : this.dataInputs) {\n+   execution.setVariable(data.getName(),\n+                         data.getDefinition().createInstance());\n+}\n+\n+for (Data data : this.dataOutputs) {\n+   execution.setVariable(data.getName(),\n+                         data.getDefinition().createInstance());\n+}\n     }\n-  }\n \n-  public List<Data> getDataInputs() {\n+    public List<Data> getDataInputs() {\n     return Collections.unmodifiableList(this.dataInputs);\n-  }\n+    }\n \n-  public List<Data> getDataOutputs() {\n+    public List<Data> getDataOutputs() {\n     return Collections.unmodifiableList(this.dataOutputs);\n-  }\n+    }\n \n-  public void addInput(Data data) {\n+    public void addInput(Data data) {\n     this.dataInputs.add(data);\n-  }\n+    }\n \n-  public void addOutput(Data data) {\n+    public void addOutput(Data data) {\n     this.dataOutputs.add(data);\n-  }\n+    }\n \n-  public void addInputRef(DataRef dataRef) {\n+    public void addInputRef(DataRef dataRef) {\n     this.dataInputRefs.add(dataRef);\n-  }\n+    }\n \n-  public void addOutputRef(DataRef dataRef) {\n+    public void addOutputRef(DataRef dataRef) {\n     this.dataOutputRefs.add(dataRef);\n-  }\n+    }\n \n-  public String getFirstDataInputName() {\n+    public String getFirstDataInputName() {\n     return this.dataInputs.get(0).getName();\n-  }\n+    }\n \n-  public String getFirstDataOutputName() {\n+    public String getFirstDataOutputName() {\n     if (this.dataOutputs != null && !this.dataOutputs.isEmpty()) {\n-      return this.dataOutputs.get(0).getName();\n+        return this.dataOutputs.get(0).getName();\n     } else {\n       return null;\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/684/IOSpecification.java\nindex 2b84f64557..881e19301d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/684/IOSpecification.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.data;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/684/IOSpecification.java\nindex 2b84f64557..881e19301d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/684/IOSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/684/IOSpecification.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.data;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ]
}