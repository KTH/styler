{
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "56",
                "column": "27",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    private void setEnvs(){\n        ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n        ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/2/DeployApiTest.java\nindex 6f3077a9ca..41e08fb966 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/2/DeployApiTest.java\n@@ -53,7 +53,7 @@ public class DeployApiTest extends BaseClientTest {\n         deployApiClient.setPort(Integer.toString(port));\n     }\n \n-    private void setEnvs(){\n+    private void setEnvs() {\n         ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n         ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/2/DeployApiTest.java\nindex 6f3077a9ca..25d5fdefde 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/2/DeployApiTest.java\n@@ -53,7 +53,7 @@ public class DeployApiTest extends BaseClientTest {\n         deployApiClient.setPort(Integer.toString(port));\n     }\n \n-    private void setEnvs(){\n+    private void setEnvs() {\n         ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n         ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n     }\n@@ -62,10 +62,12 @@ public class DeployApiTest extends BaseClientTest {\n     public void example() throws Exception {\n         setEnvs();\n         String endpoint = \"/service/\";\n-        endpoint = endpoint.concat(ThreadProperty.get(\"deploy_api_id\")).concat(\"/deployments\");\n+        endpoint = endpoint.concat(ThreadProperty.get(\"deploy_api_id\"))\n+            .concat(\"/deployments\");\n \n         String responsePath = baseResponsePath.concat(\"getAppsResponseOK.json\");\n-        String response = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource(responsePath).getFile())));\n+        String response = new String(Files.readAllBytes(Paths.get(\n+            getClass().getClassLoader().getResource(responsePath).getFile())));\n \n         new MockServerClient(\"localhost\", port)\n             .when(\n@@ -79,9 +81,12 @@ public class DeployApiTest extends BaseClientTest {\n                     .withBody(response)\n             );\n \n-        BaseResponseList<DeployedApp> responseList = deployApiClient.getDeployedApps();\n-        assertThat(responseList.getList()).as(\"List should not be empty\").isNotEmpty();\n-        assertThat(responseList.getList().size()).as(\"Response elements do not match\").isEqualTo(16);\n+        BaseResponseList<DeployedApp> responseList =\n+            deployApiClient.getDeployedApps();\n+        assertThat(responseList.getList()).as(\"List should not be empty\")\n+            .isNotEmpty();\n+        assertThat(responseList.getList().size())\n+            .as(\"Response elements do not match\").isEqualTo(16);\n     }\n \n     @AfterTest\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/2/DeployApiTest.java\nindex 6f3077a9ca..bb2d3a71ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/2/DeployApiTest.java\n@@ -53,7 +53,7 @@ public class DeployApiTest extends BaseClientTest {\n         deployApiClient.setPort(Integer.toString(port));\n     }\n \n-    private void setEnvs(){\n+    private void setEnvs() {\n         ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n         ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n     }\n@@ -67,19 +67,10 @@ public class DeployApiTest extends BaseClientTest {\n         String responsePath = baseResponsePath.concat(\"getAppsResponseOK.json\");\n         String response = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource(responsePath).getFile())));\n \n-        new MockServerClient(\"localhost\", port)\n-            .when(\n-                request()\n-                    .withMethod(\"GET\")\n-                    .withPath(endpoint)\n-            )\n-            .respond(\n-                response()\n-                    .withStatusCode(200)\n-                    .withBody(response)\n-            );\n-\n-        BaseResponseList<DeployedApp> responseList = deployApiClient.getDeployedApps();\n+        new MockServerClient(\"localhost\", port).when(request().withMethod(\"GET\")\n+                    .withPath(endpoint)).respond(response().withStatusCode(200)\n+                    .withBody(response));\n+BaseResponseList<DeployedApp> responseList = deployApiClient.getDeployedApps();\n         assertThat(responseList.getList()).as(\"List should not be empty\").isNotEmpty();\n         assertThat(responseList.getList().size()).as(\"Response elements do not match\").isEqualTo(16);\n     }\n@@ -89,4 +80,4 @@ public class DeployApiTest extends BaseClientTest {\n         stopMockServer();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/2/DeployApiTest.java\nindex 6f3077a9ca..101abab368 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/2/DeployApiTest.java\n@@ -21,17 +21,16 @@ import com.stratio.qa.models.BaseResponseList;\n import com.stratio.qa.models.cct.deployApi.DeployedApp;\n import com.stratio.qa.utils.ThreadProperty;\n import org.mockserver.client.MockServerClient;\n-\n import org.testng.annotations.AfterTest;\n import org.testng.annotations.BeforeTest;\n import org.testng.annotations.Test;\n-\n import java.nio.file.Files;\n import java.nio.file.Paths;\n \n import static org.assertj.core.api.Assertions.assertThat;\n \n import static org.mockserver.model.HttpRequest.request;\n+\n import static org.mockserver.model.HttpResponse.response;\n \n \n@@ -46,6 +45,7 @@ public class DeployApiTest extends BaseClientTest {\n         return DeployApiClient.getInstance(commong);\n     }\n \n+\n     @BeforeTest\n     public void start() throws Exception {\n         startMockServer();\n@@ -53,40 +53,28 @@ public class DeployApiTest extends BaseClientTest {\n         deployApiClient.setPort(Integer.toString(port));\n     }\n \n-    private void setEnvs(){\n+    private void setEnvs() {\n         ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n         ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n     }\n \n+\n     @Test\n     public void example() throws Exception {\n         setEnvs();\n         String endpoint = \"/service/\";\n         endpoint = endpoint.concat(ThreadProperty.get(\"deploy_api_id\")).concat(\"/deployments\");\n-\n         String responsePath = baseResponsePath.concat(\"getAppsResponseOK.json\");\n         String response = new String(Files.readAllBytes(Paths.get(getClass().getClassLoader().getResource(responsePath).getFile())));\n-\n-        new MockServerClient(\"localhost\", port)\n-            .when(\n-                request()\n-                    .withMethod(\"GET\")\n-                    .withPath(endpoint)\n-            )\n-            .respond(\n-                response()\n-                    .withStatusCode(200)\n-                    .withBody(response)\n-            );\n-\n+        new MockServerClient(\"localhost\", port).when(request().withMethod(\"GET\").withPath(endpoint)).respond(response().withStatusCode(200).withBody(response));\n         BaseResponseList<DeployedApp> responseList = deployApiClient.getDeployedApps();\n         assertThat(responseList.getList()).as(\"List should not be empty\").isNotEmpty();\n         assertThat(responseList.getList().size()).as(\"Response elements do not match\").isEqualTo(16);\n     }\n \n+\n     @AfterTest\n     public void stop() {\n         stopMockServer();\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/2/DeployApiTest.java\nindex 6f3077a9ca..41e08fb966 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/2/DeployApiTest.java\n@@ -53,7 +53,7 @@ public class DeployApiTest extends BaseClientTest {\n         deployApiClient.setPort(Integer.toString(port));\n     }\n \n-    private void setEnvs(){\n+    private void setEnvs() {\n         ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n         ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/2/DeployApiTest.java\nindex 6f3077a9ca..41e08fb966 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/2/DeployApiTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/2/DeployApiTest.java\n@@ -53,7 +53,7 @@ public class DeployApiTest extends BaseClientTest {\n         deployApiClient.setPort(Integer.toString(port));\n     }\n \n-    private void setEnvs(){\n+    private void setEnvs() {\n         ThreadProperty.set(\"EOS_ACCESS_POINT\", \"localhost\");\n         ThreadProperty.set(\"deploy_api_id\", \"deploy-api\");\n     }\n",
            "diff_size": 1
        }
    ]
}