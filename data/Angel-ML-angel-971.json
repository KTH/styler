{
    "error_id": "971",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/971/AngelClientFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/971/AngelClientFactory.java\nindex c6a96d2904..8d4ec8a020 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/971/AngelClientFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/971/AngelClientFactory.java\n@@ -27,13 +27,13 @@ import com.tencent.angel.conf.AngelConf;\n  * Angel client factory, it support two types client now: LOCAL and YARN\n  */\n public class AngelClientFactory {\n-  public static AngelClient get(Configuration conf){\n-    String mode = conf.get(AngelConf.ANGEL_DEPLOY_MODE, AngelConf.DEFAULT_ANGEL_DEPLOY_MODE);\n+    public static AngelClient get(Configuration conf) {\n+        String mode = conf.get(AngelConf.ANGEL_DEPLOY_MODE, AngelConf.DEFAULT_ANGEL_DEPLOY_MODE);\n \n-    if (mode.equals(AngelDeployMode.LOCAL.toString())) {\n-      return new AngelLocalClient(conf);\n-    } else {\n-      return new AngelYarnClient(conf);\n+        if (mode.equals(AngelDeployMode.LOCAL.toString())) {\n+            return new AngelLocalClient(conf);\n+        } else {\n+            return new AngelYarnClient(conf);\n+        }\n     }\n-  }\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/971/AngelClientFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/971/AngelClientFactory.java\nindex c6a96d2904..b3ae309938 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/971/AngelClientFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/971/AngelClientFactory.java\n@@ -27,7 +27,7 @@ import com.tencent.angel.conf.AngelConf;\n  * Angel client factory, it support two types client now: LOCAL and YARN\n  */\n public class AngelClientFactory {\n-  public static AngelClient get(Configuration conf){\n+  public static AngelClient get(Configuration conf) {\n     String mode = conf.get(AngelConf.ANGEL_DEPLOY_MODE, AngelConf.DEFAULT_ANGEL_DEPLOY_MODE);\n \n     if (mode.equals(AngelDeployMode.LOCAL.toString())) {\n@@ -36,4 +36,4 @@ public class AngelClientFactory {\n       return new AngelYarnClient(conf);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/971/AngelClientFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/971/AngelClientFactory.java\nindex c6a96d2904..d42fc66a37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/971/AngelClientFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/971/AngelClientFactory.java\n@@ -17,7 +17,6 @@\n package com.tencent.angel.client;\n \n import org.apache.hadoop.conf.Configuration;\n-\n import com.tencent.angel.AngelDeployMode;\n import com.tencent.angel.client.local.AngelLocalClient;\n import com.tencent.angel.client.yarn.AngelYarnClient;\n@@ -26,14 +25,16 @@ import com.tencent.angel.conf.AngelConf;\n /**\n  * Angel client factory, it support two types client now: LOCAL and YARN\n  */\n+\n public class AngelClientFactory {\n-  public static AngelClient get(Configuration conf){\n-    String mode = conf.get(AngelConf.ANGEL_DEPLOY_MODE, AngelConf.DEFAULT_ANGEL_DEPLOY_MODE);\n \n+    public static AngelClient get(Configuration conf) {\n+    String mode = conf.get(AngelConf.ANGEL_DEPLOY_MODE, AngelConf.DEFAULT_ANGEL_DEPLOY_MODE);\n     if (mode.equals(AngelDeployMode.LOCAL.toString())) {\n-      return new AngelLocalClient(conf);\n+        return new AngelLocalClient(conf);\n     } else {\n       return new AngelYarnClient(conf);\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}