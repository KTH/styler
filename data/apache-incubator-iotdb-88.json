{
    "error_id": "88",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.qp.logical.crud;\n\nimport static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\nimport static org.apache.iotdb.db.qp.constant.SQLConstant.KW_OR;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/88/FilterOperator.java\nindex cfd7ef4f45..710937c15d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/88/FilterOperator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.logical.crud;\n \n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/88/FilterOperator.java\nindex cfd7ef4f45..150aadc111 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/88/FilterOperator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.logical.crud;\n \n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n@@ -145,7 +146,7 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n    * it will be used in BasicFunction Operator.\n    *\n    * @return - pair.left: UnaryQueryFilter constructed by its one child;\n-   *      pair.right: Path represented by this child.\n+   * pair.right: Path represented by this child.\n    * @throws QueryProcessorException exception in filter transforming\n    */\n   protected Pair<IUnaryExpression, String> transformToSingleQueryFilter(\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/88/FilterOperator.java\nindex cfd7ef4f45..0ec3a5d6b0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/88/FilterOperator.java\n@@ -42,12 +42,12 @@ import org.apache.iotdb.tsfile.utils.StringContainer;\n  * the relation is the same among all of its children.(AND or OR), which is identified by tokenType.\n  */\n public class FilterOperator extends Operator implements Comparable<FilterOperator> {\n-\n   // it is the symbol of token. e.g. AND is & and OR is |\n   protected String tokenSymbol;\n \n   protected List<FilterOperator> childOperators;\n-  // leaf filter operator means it doesn't have left and right child filterOperator. Leaf filter\n+\n+// leaf filter operator means it doesn't have left and right child filterOperator. Leaf filter\n   // should set FunctionOperator.\n   protected boolean isLeaf = false;\n   // isSingle being true means all recursive children of this filter belong to one seriesPath.\n@@ -113,17 +113,19 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n    */\n   public IExpression transformToExpression(IQueryProcessExecutor executor)\n       throws QueryProcessorException {\n-    if (isSingle) {\n+  if (isSingle) {\n       Pair<IUnaryExpression, String> ret = transformToSingleQueryFilter(executor);\n       return ret.left;\n     } else {\n       if (childOperators.isEmpty()) {\n-        throw new LogicalOperatorException(\"this filter is not leaf, but it's empty:\"\n-            + tokenIntType);\n-      }\n+        throw new LogicalOperatorException(\"this filter is not leaf, but it's empty:\" + tokenIntType);\n+  }\n       IExpression retFilter = childOperators.get(0).transformToExpression(executor);\n       IExpression currentFilter;\n-      for (int i = 1; i < childOperators.size(); i++) {\n+      for (int i = 1;\n+\n+i < childOperators.size();\n+i++) {\n         currentFilter = childOperators.get(i).transformToExpression(executor);\n         switch (tokenIntType) {\n           case KW_AND:\n@@ -133,8 +135,7 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n             retFilter = BinaryExpression.or(retFilter, currentFilter);\n             break;\n           default:\n-            throw new LogicalOperatorException(\"unknown binary tokenIntType:\" + tokenIntType\n-                + \",maybe it means \" + SQLConstant.tokenNames.get(tokenIntType));\n+            throw new LogicalOperatorException(\"unknown binary tokenIntType:\" + tokenIntType + \",maybe it means \" + SQLConstant.tokenNames.get(tokenIntType));\n         }\n       }\n       return retFilter;\n@@ -148,40 +149,32 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n    *      pair.right: Path represented by this child.\n    * @throws QueryProcessorException exception in filter transforming\n    */\n-  protected Pair<IUnaryExpression, String> transformToSingleQueryFilter(\n-      IQueryProcessExecutor executor)\n+  protected Pair<IUnaryExpression, String> transformToSingleQueryFilter(IQueryProcessExecutor executor)\n       throws QueryProcessorException {\n-    if (childOperators.isEmpty()) {\n-      throw new LogicalOperatorException(\n-          (\"transformToSingleFilter: this filter is not a leaf, but it's empty:{}\"\n-              + tokenIntType));\n-    }\n-    Pair<IUnaryExpression, String> currentPair = childOperators.get(0)\n-        .transformToSingleQueryFilter(executor);\n-\n-    IUnaryExpression retFilter = currentPair.left;\n+  if (childOperators.isEmpty()) {\n+      throw new LogicalOperatorException((\"transformToSingleFilter: this filter is not a leaf, but it's empty:{}\" + tokenIntType));\n+  }\n+    Pair<IUnaryExpression, String> currentPair = childOperators.get(0).transformToSingleQueryFilter(executor);\n+IUnaryExpression retFilter = currentPair.left;\n     String path = currentPair.right;\n \n-    for (int i = 1; i < childOperators.size(); i++) {\n+    for (int i = 1;\n+\n+i < childOperators.size();\n+i++) {\n       currentPair = childOperators.get(i).transformToSingleQueryFilter(executor);\n       if (!path.equals(currentPair.right)) {\n-        throw new LogicalOperatorException(\n-            (\"transformToSingleFilter: paths among children are not inconsistent: one is:\"\n-                + path + \",another is:\" + currentPair.right));\n-      }\n+        throw new LogicalOperatorException((\"transformToSingleFilter: paths among children are not inconsistent: one is:\" + path + \",another is:\" + currentPair.right));\n+  }\n       switch (tokenIntType) {\n         case KW_AND:\n-          retFilter.setFilter(FilterFactory.and(retFilter.getFilter(),\n-              currentPair.left.getFilter()));\n-          break;\n+          retFilter.setFilter(FilterFactory.and(retFilter.getFilter(), currentPair.left.getFilter()));\n+break;\n         case KW_OR:\n-          retFilter.setFilter(FilterFactory.or(retFilter.getFilter(),\n-              currentPair.left.getFilter()));\n-          break;\n+          retFilter.setFilter(FilterFactory.or(retFilter.getFilter(), currentPair.left.getFilter()));\n+break;\n         default:\n-          throw new LogicalOperatorException(\"unknown binary tokenIntType:\"\n-              + tokenIntType + \",maybe it means \"\n-              + SQLConstant.tokenNames.get(tokenIntType));\n+          throw new LogicalOperatorException(\"unknown binary tokenIntType:\" + tokenIntType + \",maybe it means \" + SQLConstant.tokenNames.get(tokenIntType));\n       }\n     }\n     return new Pair<>(retFilter, path);\n@@ -232,7 +225,10 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n \n   public String showTree(int spaceNum) {\n     StringContainer sc = new StringContainer();\n-    for (int i = 0; i < spaceNum; i++) {\n+    for (int i = 0;\n+\n+i < spaceNum;\n+i++) {\n       sc.addTail(\"  \");\n     }\n     sc.addTail(this.tokenName);\n@@ -275,4 +271,4 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n     }\n     return ret;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "column": "68",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "43",
                    "column": "68",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 41, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 41, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "73",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 41, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 41, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 41, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 85, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 85, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 87, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "column": "17",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "86",
                    "column": "17",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 118.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'i' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "column": "10",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'i' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'switch' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 36, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 36, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 36, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 36, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 36, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 155.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 141, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 141, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 141, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'switch' has incorrect indentation level 141, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "column": "142",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 141, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 141, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 141, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 162, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 162, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 162, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 162, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 162, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 308).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 141, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "180",
                    "column": "21",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 187.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "column": "27",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "205",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "210",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "212",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "229",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 45, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 45, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 44, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 49, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/88/FilterOperator.java\nindex cfd7ef4f45..763ec2ceb5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/88/FilterOperator.java\n@@ -17,10 +17,8 @@\n  * under the License.\n  */\n package org.apache.iotdb.db.qp.logical.crud;\n-\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_OR;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.iotdb.db.exception.qp.LogicalOperatorException;\n@@ -41,69 +39,74 @@ import org.apache.iotdb.tsfile.utils.StringContainer;\n  * It may consist of more than two child FilterOperators, but if it's not a leaf operator,\n  * the relation is the same among all of its children.(AND or OR), which is identified by tokenType.\n  */\n-public class FilterOperator extends Operator implements Comparable<FilterOperator> {\n+\n+public class FilterOperator extends Operator implements Comparable < FilterOperator> {\n \n   // it is the symbol of token. e.g. AND is & and OR is |\n-  protected String tokenSymbol;\n \n-  protected List<FilterOperator> childOperators;\n+\n+    protected String tokenSymbol;\n+\n+\n+    protected List < FilterOperator> childOperators;\n   // leaf filter operator means it doesn't have left and right child filterOperator. Leaf filter\n   // should set FunctionOperator.\n-  protected boolean isLeaf = false;\n+\n+\n+    protected boolean isLeaf = false;\n   // isSingle being true means all recursive children of this filter belong to one seriesPath.\n-  protected boolean isSingle = false;\n+\n+\n+    protected boolean isSingle = false;\n   // if isSingle = false, singlePath must be null\n-  protected Path singlePath = null;\n-\n-  public FilterOperator(int tokenType) {\n-    super(tokenType);\n-    operatorType = OperatorType.FILTER;\n-    childOperators = new ArrayList<>();\n-    this.tokenIntType = tokenType;\n-    isLeaf = false;\n-    tokenSymbol = SQLConstant.tokenSymbol.get(tokenType);\n-  }\n-\n-  public FilterOperator(int tokenType, boolean isSingle) {\n-    this(tokenType);\n-    this.isSingle = isSingle;\n-  }\n-\n-  @Override\n-  public int getTokenIntType() {\n+\n+\n+    protected Path singlePath = null;\n+\n+    public FilterOperator(int tokenType) {\n+super(tokenType);\n+                                         operatorType = OperatorType.FILTER;\n+                                         childOperators = new ArrayList <>();\n+                                         this.tokenIntType = tokenType;\n+                                         isLeaf = false;\n+                                         tokenSymbol = SQLConstant.tokenSymbol.get(tokenType);\n+                                                                                     } public FilterOperator(int tokenType, boolean isSingle) {\n+this(tokenType);\n+this.isSingle = isSingle;\n+                                                                                     } @ Override public int getTokenIntType() {\n     return tokenIntType;\n-  }\n+                                                                                       }\n \n-  public void setTokenIntType(int intType) {\n+    public void setTokenIntType(int intType) {\n     this.tokenIntType = intType;\n     this.tokenName = SQLConstant.tokenNames.get(tokenIntType);\n     this.tokenSymbol = SQLConstant.tokenSymbol.get(tokenIntType);\n-  }\n+    }\n \n-  public List<FilterOperator> getChildren() {\n+    public List < FilterOperator> getChildren() {\n     return childOperators;\n-  }\n+    }\n \n-  public void setChildren(List<FilterOperator> children) {\n+    public void setChildren(List < FilterOperator> children) {\n     this.childOperators = children;\n-  }\n+    }\n \n-  public void setIsSingle(boolean b) {\n+    public void setIsSingle(boolean b) {\n     this.isSingle = b;\n-  }\n+    }\n \n-  public Path getSinglePath() {\n+    public Path getSinglePath() {\n     return singlePath;\n-  }\n+    }\n \n-  public void setSinglePath(Path path) {\n+    public void setSinglePath(Path path) {\n     this.singlePath = path;\n-  }\n+    }\n \n-  public boolean addChildOperator(FilterOperator op) {\n+    public boolean addChildOperator(FilterOperator op) {\n     childOperators.add(op);\n     return true;\n-  }\n+    }\n \n   /**\n    * For a filter operator, if isSingle, call transformToSingleQueryFilter.<br>\n@@ -111,35 +114,35 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n    *\n    * @return QueryFilter in TsFile\n    */\n-  public IExpression transformToExpression(IQueryProcessExecutor executor)\n-      throws QueryProcessorException {\n-    if (isSingle) {\n-      Pair<IUnaryExpression, String> ret = transformToSingleQueryFilter(executor);\n-      return ret.left;\n+\n+    public IExpression transformToExpression(IQueryProcessExecutor executor) throws QueryProcessorException {\n+    if(isSingle) {\n+        Pair<IUnaryExpression, String> ret = transformToSingleQueryFilter(executor);\n+        return ret.left;\n     } else {\n-      if (childOperators.isEmpty()) {\n-        throw new LogicalOperatorException(\"this filter is not leaf, but it's empty:\"\n-            + tokenIntType);\n-      }\n-      IExpression retFilter = childOperators.get(0).transformToExpression(executor);\n-      IExpression currentFilter;\n-      for (int i = 1; i < childOperators.size(); i++) {\n-        currentFilter = childOperators.get(i).transformToExpression(executor);\n-        switch (tokenIntType) {\n-          case KW_AND:\n-            retFilter = BinaryExpression.and(retFilter, currentFilter);\n-            break;\n-          case KW_OR:\n-            retFilter = BinaryExpression.or(retFilter, currentFilter);\n-            break;\n-          default:\n-            throw new LogicalOperatorException(\"unknown binary tokenIntType:\" + tokenIntType\n-                + \",maybe it means \" + SQLConstant.tokenNames.get(tokenIntType));\n+        if (childOperators.isEmpty()) {\n+               throw new LogicalOperatorException(\"this filter is not leaf, but it's empty:\" + tokenIntType);\n+        }\n+        IExpression retFilter = childOperators.get(0).transformToExpression(executor);\n+        IExpression currentFilter;\n+        for(int i = 1;\n+        i< childOperators.size();\n+        i++) {\n+               currentFilter = childOperators.get(i).transformToExpression(executor);\n+               switch(tokenIntType) {\n+               case KW_AND:\n+               retFilter = BinaryExpression.and(retFilter, currentFilter);\n+               break;\n+                                    case KW_OR:\n+                                    retFilter = BinaryExpression.or(retFilter, currentFilter);\n+                                    break;\n+                                    default:\n+                                    throw new LogicalOperatorException(\"unknown binary tokenIntType:\" + tokenIntType + \",maybe it means \" + SQLConstant.tokenNames.get(tokenIntType));\n+               }\n         }\n-      }\n-      return retFilter;\n+        return retFilter;\n+    }\n     }\n-  }\n \n   /**\n    * it will be used in BasicFunction Operator.\n@@ -148,131 +151,120 @@ public class FilterOperator extends Operator implements Comparable<FilterOperato\n    *      pair.right: Path represented by this child.\n    * @throws QueryProcessorException exception in filter transforming\n    */\n-  protected Pair<IUnaryExpression, String> transformToSingleQueryFilter(\n-      IQueryProcessExecutor executor)\n-      throws QueryProcessorException {\n+\n+    protected Pair<IUnaryExpression, String> transformToSingleQueryFilter(IQueryProcessExecutor executor) throws QueryProcessorException {\n     if (childOperators.isEmpty()) {\n-      throw new LogicalOperatorException(\n-          (\"transformToSingleFilter: this filter is not a leaf, but it's empty:{}\"\n-              + tokenIntType));\n+        throw new LogicalOperatorException((\"transformToSingleFilter: this filter is not a leaf, but it's empty:{}\" + tokenIntType));\n     }\n-    Pair<IUnaryExpression, String> currentPair = childOperators.get(0)\n-        .transformToSingleQueryFilter(executor);\n-\n+    Pair<IUnaryExpression, String> currentPair = childOperators.get(0).transformToSingleQueryFilter(executor);\n     IUnaryExpression retFilter = currentPair.left;\n     String path = currentPair.right;\n-\n-    for (int i = 1; i < childOperators.size(); i++) {\n-      currentPair = childOperators.get(i).transformToSingleQueryFilter(executor);\n-      if (!path.equals(currentPair.right)) {\n-        throw new LogicalOperatorException(\n-            (\"transformToSingleFilter: paths among children are not inconsistent: one is:\"\n-                + path + \",another is:\" + currentPair.right));\n-      }\n-      switch (tokenIntType) {\n-        case KW_AND:\n-          retFilter.setFilter(FilterFactory.and(retFilter.getFilter(),\n-              currentPair.left.getFilter()));\n-          break;\n-        case KW_OR:\n-          retFilter.setFilter(FilterFactory.or(retFilter.getFilter(),\n-              currentPair.left.getFilter()));\n-          break;\n-        default:\n-          throw new LogicalOperatorException(\"unknown binary tokenIntType:\"\n-              + tokenIntType + \",maybe it means \"\n-              + SQLConstant.tokenNames.get(tokenIntType));\n-      }\n-    }\n-    return new Pair<>(retFilter, path);\n-  }\n+    for(int i = 1;\n+    i< childOperators.size();\n+    i++) {\n+                                                                                                                                             currentPair = childOperators.get(i).transformToSingleQueryFilter(executor);\n+                                                                                                                                             if (!path.equals(currentPair.right)) {\n+             throw new LogicalOperatorException((\"transformToSingleFilter: paths among children are not inconsistent: one is:\" + path + \",another is:\" + currentPair.right));\n+                                                                                                                                             }\n+                                                                                                                                             switch(tokenIntType) {\n+                                                                                                                                             case KW_AND:\n+                                                                                                                                             retFilter.setFilter(FilterFactory.and(retFilter.getFilter(), currentPair.left.getFilter()));\n+                                                                                                                                             break;\n+                                                                                                                                                                  case KW_OR:\n+                                                                                                                                                                  retFilter.setFilter(FilterFactory.or(retFilter.getFilter(), currentPair.left.getFilter()));\n+                                                                                                                                                                  break;\n+                                                                                                                                                                  default:\n+                                                                                                                                                                  throw new LogicalOperatorException(\"unknown binary tokenIntType:\" + tokenIntType + \",maybe it means \" + SQLConstant.tokenNames.get(tokenIntType));\n+                                                                                                                                             }\n+    }\n+    return new Pair <>(retFilter, path);\n+    }\n \n   /**\n    * a filter with null path is no smaller than any other filter.\n    */\n-  @Override\n-  public int compareTo(FilterOperator fil) {\n-    if (singlePath == null && fil.singlePath == null) {\n-      return 0;\n+\n+    @ Override public int compareTo(FilterOperator fil) {\n+    if (singlePath == null&& fil.singlePath == null) {\n+        return 0;\n     }\n     if (singlePath == null) {\n-      return 1;\n+        return 1;\n     }\n     if (fil.singlePath == null) {\n-      return -1;\n+        return -1;\n     }\n     return fil.singlePath.toString().compareTo(singlePath.toString());\n-  }\n+    }\n \n-  @Override\n-  public boolean equals(Object fil) {\n+    @ Override public boolean equals(Object fil) {\n     if (!(fil instanceof FilterOperator)) {\n-      return false;\n+        return false;\n     }\n     FilterOperator operator = (FilterOperator) fil;\n-    return compareTo(operator) == 0;\n-  }\n+    return compareTo(operator)==0;\n+    }\n \n-  @Override\n-  public int hashCode() {\n+    @ Override public int hashCode() {\n     return tokenSymbol.hashCode();\n-  }\n+    }\n \n-  public boolean isLeaf() {\n+    public boolean isLeaf() {\n     return isLeaf;\n-  }\n+    }\n \n-  public boolean isSingle() {\n+    public boolean isSingle() {\n     return isSingle;\n-  }\n+    }\n \n-  public String showTree() {\n+    public String showTree() {\n     return showTree(0);\n-  }\n+    }\n \n-  public String showTree(int spaceNum) {\n+    public String showTree(int spaceNum) {\n     StringContainer sc = new StringContainer();\n-    for (int i = 0; i < spaceNum; i++) {\n-      sc.addTail(\"  \");\n+    for(int i = 0;\n+    i< spaceNum;\n+    i++) {\n+                                             sc.addTail(\"  \");\n     }\n     sc.addTail(this.tokenName);\n     if (isSingle) {\n-      sc.addTail(\"[single:\", getSinglePath().toString(), \"]\");\n+        sc.addTail(\"[single:\", getSinglePath().toString(), \"]\");\n     }\n     sc.addTail(\"\\n\");\n-    for (FilterOperator filter : childOperators) {\n-      sc.addTail(filter.showTree(spaceNum + 1));\n+    for(FilterOperator filter : childOperators) {\n+                                             sc.addTail(filter.showTree(spaceNum + 1));\n     }\n     return sc.toString();\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n+    @ Override public String toString() {\n     StringContainer sc = new StringContainer();\n     sc.addTail(\"[\", this.tokenName);\n     if (isSingle) {\n-      sc.addTail(\"[single:\", getSinglePath().toString(), \"]\");\n+        sc.addTail(\"[single:\", getSinglePath().toString(), \"]\");\n     }\n     sc.addTail(\" \");\n-    for (FilterOperator filter : childOperators) {\n-      sc.addTail(filter.toString());\n+    for(FilterOperator filter : childOperators) {\n+                                            sc.addTail(filter.toString());\n     }\n     sc.addTail(\"]\");\n     return sc.toString();\n-  }\n+    }\n \n-  @Override\n-  public FilterOperator clone() {\n+    @ Override public FilterOperator clone() {\n     FilterOperator ret = new FilterOperator(this.tokenIntType);\n     ret.tokenSymbol = tokenSymbol;\n     ret.isLeaf = isLeaf;\n     ret.isSingle = isSingle;\n     if (singlePath != null) {\n-      ret.singlePath = singlePath.clone();\n+        ret.singlePath = singlePath.clone();\n     }\n-    for (FilterOperator filterOperator : this.childOperators) {\n-      ret.addChildOperator(filterOperator.clone());\n+    for(FilterOperator filterOperator :this.childOperators) {\n+                                                 ret.addChildOperator(filterOperator.clone());\n     }\n     return ret;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 154
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/88/FilterOperator.java\nindex cfd7ef4f45..48f1d89fbf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/88/FilterOperator.java\n@@ -16,8 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.qp.logical.crud;\n+package org.apache.iotdb. db.qp.logical.crud\n \n+;\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_OR;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/88/FilterOperator.java\nindex cfd7ef4f45..710937c15d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/88/FilterOperator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/88/FilterOperator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.logical.crud;\n \n import static org.apache.iotdb.db.qp.constant.SQLConstant.KW_AND;\n",
            "diff_size": 1
        }
    ]
}