{
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "99",
                "column": "64",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n    return\n        Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n        Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/11/PclSaveOptionsData.java\nindex ef0e6dbf85..c7ba97d32a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/11/PclSaveOptionsData.java\n@@ -96,7 +96,7 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n+    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData) o;\n     return\n         Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n         Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/11/PclSaveOptionsData.java\nindex ef0e6dbf85..f83ddd375e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/11/PclSaveOptionsData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,60 +50,63 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Container class for pcl save options.\")\n public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n-    @SerializedName(\"FalllbackFontName\")\n-    private String falllbackFontName = null;\n-\n-    @SerializedName(\"RasterizeTransformedElements\")\n-    private Boolean rasterizeTransformedElements = null;\n-    public PclSaveOptionsData falllbackFontName(String falllbackFontName) {\n-        this.falllbackFontName = falllbackFontName;\n-        return this;\n-    }\n+  @SerializedName(\"FalllbackFontName\")\n+  private String falllbackFontName = null;\n \n-    /**\n-     * Gets or sets name of the font that will be used if no expected font is found in printer and built-in fonts collections.\n-    * @return falllbackFontName\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets name of the font that will be used if no expected font is found in printer and built-in fonts collections.\")\n-    public String getFalllbackFontName() {\n-        return falllbackFontName;\n-    }\n+  @SerializedName(\"RasterizeTransformedElements\")\n+  private Boolean rasterizeTransformedElements = null;\n \n-    public void setFalllbackFontName(String falllbackFontName) {\n-        this.falllbackFontName = falllbackFontName;\n-    }\n+  public PclSaveOptionsData falllbackFontName(String falllbackFontName) {\n+    this.falllbackFontName = falllbackFontName;\n+    return this;\n+  }\n \n-    public PclSaveOptionsData rasterizeTransformedElements(Boolean rasterizeTransformedElements) {\n-        this.rasterizeTransformedElements = rasterizeTransformedElements;\n-        return this;\n-    }\n+  /**\n+   * Gets or sets name of the font that will be used if no expected font is found in printer and built-in fonts collections.\n+   *\n+   * @return falllbackFontName\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets name of the font that will be used if no expected font is found in printer and built-in fonts collections.\")\n+  public String getFalllbackFontName() {\n+    return falllbackFontName;\n+  }\n \n-    /**\n-     * Gets or sets a value determining whether or not complex transformed elements should be rasterized before saving to PCL document.  Default is true.\n-    * @return rasterizeTransformedElements\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value determining whether or not complex transformed elements should be rasterized before saving to PCL document.  Default is true.\")\n-    public Boolean getRasterizeTransformedElements() {\n-        return rasterizeTransformedElements;\n-    }\n+  public void setFalllbackFontName(String falllbackFontName) {\n+    this.falllbackFontName = falllbackFontName;\n+  }\n \n-    public void setRasterizeTransformedElements(Boolean rasterizeTransformedElements) {\n-        this.rasterizeTransformedElements = rasterizeTransformedElements;\n-    }\n+  public PclSaveOptionsData rasterizeTransformedElements(Boolean rasterizeTransformedElements) {\n+    this.rasterizeTransformedElements = rasterizeTransformedElements;\n+    return this;\n+  }\n+\n+  /**\n+   * Gets or sets a value determining whether or not complex transformed elements should be rasterized before saving to PCL document.  Default is true.\n+   *\n+   * @return rasterizeTransformedElements\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value determining whether or not complex transformed elements should be rasterized before saving to PCL document.  Default is true.\")\n+  public Boolean getRasterizeTransformedElements() {\n+    return rasterizeTransformedElements;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n+  public void setRasterizeTransformedElements(Boolean rasterizeTransformedElements) {\n+    this.rasterizeTransformedElements = rasterizeTransformedElements;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData) o;\n     return\n         Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n-        Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n-        super.equals(o);\n+            Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n+            super.equals(o);\n   }\n \n   @Override\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "101",
                    "column": "60",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/11/PclSaveOptionsData.java\nindex ef0e6dbf85..1729c732b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/11/PclSaveOptionsData.java\n@@ -52,7 +52,8 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n \n     @SerializedName(\"RasterizeTransformedElements\")\n     private Boolean rasterizeTransformedElements = null;\n-    public PclSaveOptionsData falllbackFontName(String falllbackFontName) {\n+\n+public PclSaveOptionsData falllbackFontName(String falllbackFontName) {\n         this.falllbackFontName = falllbackFontName;\n         return this;\n     }\n@@ -92,13 +93,13 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n-    return\n-        Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n+\n+PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n+    return Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n         Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n         super.equals(o);\n   }\n@@ -129,4 +130,4 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/11/PclSaveOptionsData.java\nindex ef0e6dbf85..ae5768be9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/11/PclSaveOptionsData.java\n@@ -45,71 +45,87 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Container class for pcl save options.\n  */\n+\n+\n @ApiModel(description = \"Container class for pcl save options.\")\n+\n public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n     @SerializedName(\"FalllbackFontName\")\n     private String falllbackFontName = null;\n \n     @SerializedName(\"RasterizeTransformedElements\")\n     private Boolean rasterizeTransformedElements = null;\n+\n     public PclSaveOptionsData falllbackFontName(String falllbackFontName) {\n-        this.falllbackFontName = falllbackFontName;\n-        return this;\n+    this.falllbackFontName = falllbackFontName;\n+    return this;\n     }\n \n     /**\n      * Gets or sets name of the font that will be used if no expected font is found in printer and built-in fonts collections.\n     * @return falllbackFontName\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets name of the font that will be used if no expected font is found in printer and built-in fonts collections.\")\n     public String getFalllbackFontName() {\n-        return falllbackFontName;\n+    return falllbackFontName;\n     }\n \n+\n     public void setFalllbackFontName(String falllbackFontName) {\n-        this.falllbackFontName = falllbackFontName;\n+    this.falllbackFontName = falllbackFontName;\n     }\n \n+\n     public PclSaveOptionsData rasterizeTransformedElements(Boolean rasterizeTransformedElements) {\n-        this.rasterizeTransformedElements = rasterizeTransformedElements;\n-        return this;\n+    this.rasterizeTransformedElements = rasterizeTransformedElements;\n+    return this;\n     }\n \n     /**\n      * Gets or sets a value determining whether or not complex transformed elements should be rasterized before saving to PCL document.  Default is true.\n     * @return rasterizeTransformedElements\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value determining whether or not complex transformed elements should be rasterized before saving to PCL document.  Default is true.\")\n     public Boolean getRasterizeTransformedElements() {\n-        return rasterizeTransformedElements;\n+    return rasterizeTransformedElements;\n     }\n \n+\n     public void setRasterizeTransformedElements(Boolean rasterizeTransformedElements) {\n-        this.rasterizeTransformedElements = rasterizeTransformedElements;\n+    this.rasterizeTransformedElements = rasterizeTransformedElements;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n-    return\n-        Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n-        Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n-        super.equals(o);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n+\n+        PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData) o;\n+        return Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n+            Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n+            super.equals(o);\n+    }\n+\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(falllbackFontName, rasterizeTransformedElements, super.hashCode());\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class PclSaveOptionsData {\\n\");\n     sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n@@ -117,16 +133,19 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n     sb.append(\"    rasterizeTransformedElements: \").append(toIndentedString(rasterizeTransformedElements)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/11/PclSaveOptionsData.java\nindex ef0e6dbf85..c7ba97d32a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/11/PclSaveOptionsData.java\n@@ -96,7 +96,7 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n+    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData) o;\n     return\n         Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n         Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/11/PclSaveOptionsData.java\nindex ef0e6dbf85..96faf9428b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/11/PclSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/11/PclSaveOptionsData.java\n@@ -96,7 +96,8 @@ public class PclSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData)o;\n+    PclSaveOptionsData pclSaveOptionsData = (PclSaveOptionsData\n+) o;\n     return\n         Objects.equals(this.falllbackFontName, pclSaveOptionsData.falllbackFontName) &&\n         Objects.equals(this.rasterizeTransformedElements, pclSaveOptionsData.rasterizeTransformedElements) &&\n",
            "diff_size": 2
        }
    ]
}