{
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "68",
                "column": "29",
                "severity": "warning",
                "message": "'}' at column 29 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "      CASE_INSENSITIVE);\n\n  private DomainNameUtil() {}\n\n  /**\n   * Checks the validity of the domain name used in an email. To be valid it should be either a",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/14/DomainNameUtil.java\nindex b2960faec0..f1ea2d7965 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/14/DomainNameUtil.java\n@@ -29,7 +29,7 @@ public final class DomainNameUtil {\n    */\n   private static final int MAX_DOMAIN_PART_LENGTH = 255;\n \n-  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\\u0080-\\uFFFF0-9!#$%&'*+/=?^_`{|}~]\";\n+  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\u0080-\uffff0-9!#$%&'*+/=?^_`{|}~]\";\n   private static final String DOMAIN_LABEL =\n       \"(\" + DOMAIN_CHARS_WITHOUT_DASH + \"-*)*\" + DOMAIN_CHARS_WITHOUT_DASH + \"+\";\n   private static final String DOMAIN = DOMAIN_LABEL + \"(\\\\.\" + DOMAIN_LABEL + \")*\";\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/14/DomainNameUtil.java\nindex b2960faec0..ee848602f2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/14/DomainNameUtil.java\n@@ -65,7 +65,8 @@ public final class DomainNameUtil {\n       \"^(\" + DOMAIN + \"|\\\\[\" + IP_DOMAIN + \"\\\\]|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n       CASE_INSENSITIVE);\n \n-  private DomainNameUtil() {}\n+  private DomainNameUtil() {\n+  }\n \n   /**\n    * Checks the validity of the domain name used in an email. To be valid it should be either a\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "29",
                    "severity": "warning",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/14/DomainNameUtil.java\nindex b2960faec0..4432018027 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/14/DomainNameUtil.java\n@@ -46,7 +46,8 @@ public final class DomainNameUtil {\n           + \"(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|\"\n           + \"(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}\"\n           + \"[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\";\n-  private static final String CASE_INSENSITIVE = \"i\";\n+\n+private static final String CASE_INSENSITIVE = \"i\";\n \n   /**\n    * Regular expression for the domain part of an URL.\n@@ -110,4 +111,4 @@ public final class DomainNameUtil {\n     return asciiString.length() <= MAX_DOMAIN_PART_LENGTH;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 746).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "warning",
                    "message": "'}' at column 31 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/14/DomainNameUtil.java\nindex b2960faec0..67ee24d39e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/14/DomainNameUtil.java\n@@ -9,7 +9,6 @@ package org.hibernate.validator.internal.util;\n \n import com.google.gwt.regexp.shared.MatchResult;\n import com.google.gwt.regexp.shared.RegExp;\n-\n import java.net.IDN;\n \n /**\n@@ -19,6 +18,8 @@ import java.net.IDN;\n  * @author Guillaume Smet\n  * @author Manfred Tremmel (GWT port)\n  */\n+\n+\n @SuppressWarnings(\"checkstyle:avoidEscapedUnicodeCharacters\")\n public final class DomainNameUtil {\n \n@@ -27,26 +28,15 @@ public final class DomainNameUtil {\n    * dot) of the domain name must be at most 63 characters long. This is verified by\n    * {@link IDN#toASCII(String)}.\n    */\n-  private static final int MAX_DOMAIN_PART_LENGTH = 255;\n-\n-  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\\u0080-\\uFFFF0-9!#$%&'*+/=?^_`{|}~]\";\n-  private static final String DOMAIN_LABEL =\n-      \"(\" + DOMAIN_CHARS_WITHOUT_DASH + \"-*)*\" + DOMAIN_CHARS_WITHOUT_DASH + \"+\";\n-  private static final String DOMAIN = DOMAIN_LABEL + \"(\\\\.\" + DOMAIN_LABEL + \")*\";\n-\n-  private static final String IP_DOMAIN = \"[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\";\n+    private static final int MAX_DOMAIN_PART_LENGTH = 255;\n+    private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\\u0080-\\uFFFF0-9!#$%&'*+/=?^_`{|}~]\";\n+    private static final String DOMAIN_LABEL = \"(\" + DOMAIN_CHARS_WITHOUT_DASH + \"-*)*\" + DOMAIN_CHARS_WITHOUT_DASH + \"+\";\n+    private static final String DOMAIN = DOMAIN_LABEL + \"(\\\\.\" + DOMAIN_LABEL + \")*\";\n+    private static final String IP_DOMAIN = \"[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\";\n   // IP v6 regex taken from\n   // http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n-  private static final String IP_V6_DOMAIN =\n-      \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}\"\n-          + \":[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:)\"\n-          + \"{1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\"\n-          + \"([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4})\"\n-          + \"{1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::\"\n-          + \"(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|\"\n-          + \"(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}\"\n-          + \"[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\";\n-  private static final String CASE_INSENSITIVE = \"i\";\n+    private static final String IP_V6_DOMAIN = \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}\" + \":[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:)\" + \"{1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|\" + \"([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4})\" + \"{1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::\" + \"(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|\" + \"(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}\" + \"[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\";\n+    private static final String CASE_INSENSITIVE = \"i\";\n \n   /**\n    * Regular expression for the domain part of an URL.\n@@ -55,17 +45,15 @@ public final class DomainNameUtil {\n    * address string, followed by \"]\".\n    * </p>\n    */\n-  private static final RegExp DOMAIN_PATTERN =\n-      RegExp.compile(\"^(\" + DOMAIN + \"|\\\\[\" + IP_V6_DOMAIN + \"\\\\])$\", CASE_INSENSITIVE);\n+    private static final RegExp DOMAIN_PATTERN = RegExp.compile(\"^(\" + DOMAIN + \"|\\\\[\" + IP_V6_DOMAIN + \"\\\\])$\", CASE_INSENSITIVE);\n \n   /**\n    * Regular expression for the domain part of an email address (everything after '@').\n    */\n-  private static final RegExp EMAIL_DOMAIN_PATTERN = RegExp.compile(\n-      \"^(\" + DOMAIN + \"|\\\\[\" + IP_DOMAIN + \"\\\\]|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n-      CASE_INSENSITIVE);\n+    private static final RegExp EMAIL_DOMAIN_PATTERN = RegExp.compile(\"^(\" + DOMAIN + \"|\\\\[\" + IP_DOMAIN + \"\\\\]|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n+                                                       CASE_INSENSITIVE);\n \n-  private DomainNameUtil() {}\n+    private DomainNameUtil() {}\n \n   /**\n    * Checks the validity of the domain name used in an email. To be valid it should be either a\n@@ -74,9 +62,10 @@ public final class DomainNameUtil {\n    * @param domain domain to check for validity\n    * @return {@code true} if the provided string is a valid domain, {@code false} otherwise\n    */\n-  public static boolean isValidEmailDomainAddress(final String domain) {\n+\n+    public static boolean isValidEmailDomainAddress(final String domain) {\n     return isValidDomainAddress(domain, EMAIL_DOMAIN_PATTERN);\n-  }\n+    }\n \n   /**\n    * Checks validity of a domain name.\n@@ -84,30 +73,30 @@ public final class DomainNameUtil {\n    * @param domain the domain to check for validity\n    * @return {@code true} if the provided string is a valid domain, {@code false} otherwise\n    */\n-  public static boolean isValidDomainAddress(final String domain) {\n+\n+    public static boolean isValidDomainAddress(final String domain) {\n     return isValidDomainAddress(domain, DOMAIN_PATTERN);\n-  }\n+    }\n+\n \n-  private static boolean isValidDomainAddress(final String domain, final RegExp pattern) {\n+    private static boolean isValidDomainAddress(final String domain,\n+        final RegExp pattern) {\n     // if we have a trailing dot the domain part we have an invalid email address.\n     // the regular expression match would take care of this, but IDN.toASCII drops the trailing '.'\n     if (domain.endsWith(\".\")) {\n-      return false;\n+        return false;\n     }\n \n     final MatchResult matcher = pattern.exec(domain);\n     if (matcher == null) {\n-      return false;\n+        return false;\n     }\n-\n     String asciiString;\n     try {\n-      asciiString = IDN.toASCII(domain);\n+        asciiString = IDN.toASCII(domain);\n     } catch (final IllegalArgumentException e) {\n       return false;\n     }\n-\n     return asciiString.length() <= MAX_DOMAIN_PART_LENGTH;\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/14/DomainNameUtil.java\nindex b2960faec0..f1ea2d7965 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/14/DomainNameUtil.java\n@@ -29,7 +29,7 @@ public final class DomainNameUtil {\n    */\n   private static final int MAX_DOMAIN_PART_LENGTH = 255;\n \n-  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\\u0080-\\uFFFF0-9!#$%&'*+/=?^_`{|}~]\";\n+  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\u0080-\uffff0-9!#$%&'*+/=?^_`{|}~]\";\n   private static final String DOMAIN_LABEL =\n       \"(\" + DOMAIN_CHARS_WITHOUT_DASH + \"-*)*\" + DOMAIN_CHARS_WITHOUT_DASH + \"+\";\n   private static final String DOMAIN = DOMAIN_LABEL + \"(\\\\.\" + DOMAIN_LABEL + \")*\";\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/14/DomainNameUtil.java\nindex b2960faec0..9be72e7da0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/14/DomainNameUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/14/DomainNameUtil.java\n@@ -29,7 +29,7 @@ public final class DomainNameUtil {\n    */\n   private static final int MAX_DOMAIN_PART_LENGTH = 255;\n \n-  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\\u0080-\\uFFFF0-9!#$%&'*+/=?^_`{|}~]\";\n+  private static final String DOMAIN_CHARS_WITHOUT_DASH = \"[a-z\u0080-\uffff0-9!#$%&'*+/=?^_`{|}~]\";\n   private static final String DOMAIN_LABEL =\n       \"(\" + DOMAIN_CHARS_WITHOUT_DASH + \"-*)*\" + DOMAIN_CHARS_WITHOUT_DASH + \"+\";\n   private static final String DOMAIN = DOMAIN_LABEL + \"(\\\\.\" + DOMAIN_LABEL + \")*\";\n@@ -65,9 +65,7 @@ public final class DomainNameUtil {\n       \"^(\" + DOMAIN + \"|\\\\[\" + IP_DOMAIN + \"\\\\]|\" + \"\\\\[IPv6:\" + IP_V6_DOMAIN + \"\\\\])$\",\n       CASE_INSENSITIVE);\n \n-  private DomainNameUtil() {}\n-\n-  /**\n+  private DomainNameUtil() { } /**\n    * Checks the validity of the domain name used in an email. To be valid it should be either a\n    * valid host name, or an IP address wrapped in [].\n    *\n",
            "diff_size": 4
        }
    ]
}