{
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "76",
                "column": "17",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            fieldModelsByMappedName.put(model.getMappedName(), model);\n            for (final String name : modelBuilder.alternateNames()) {\n                if(fieldModelsByMappedName.put(name, model) != null) {\n                    throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n                }\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/0/EntityModel.java\nindex f71a5d58ad..af95aff52d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/0/EntityModel.java\n@@ -73,7 +73,7 @@ public class EntityModel<T> {\n             FieldModel<?> model = modelBuilder.build();\n             fieldModelsByMappedName.put(model.getMappedName(), model);\n             for (final String name : modelBuilder.alternateNames()) {\n-                if(fieldModelsByMappedName.put(name, model) != null) {\n+                if (fieldModelsByMappedName.put(name, model) != null) {\n                     throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n                 }\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/0/EntityModel.java\nindex f71a5d58ad..a06687756c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/0/EntityModel.java\n@@ -73,7 +73,7 @@ public class EntityModel<T> {\n             FieldModel<?> model = modelBuilder.build();\n             fieldModelsByMappedName.put(model.getMappedName(), model);\n             for (final String name : modelBuilder.alternateNames()) {\n-                if(fieldModelsByMappedName.put(name, model) != null) {\n+                if (fieldModelsByMappedName.put(name, model) != null) {\n                     throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n                 }\n             }\n@@ -249,7 +249,7 @@ public class EntityModel<T> {\n             return false;\n         }\n         if (getLifecycleMethods() != null ? !getLifecycleMethods().equals(that.getLifecycleMethods())\n-                                          : that.getLifecycleMethods() != null) {\n+            : that.getLifecycleMethods() != null) {\n             return false;\n         }\n         return getCollectionName() != null ? getCollectionName().equals(that.getCollectionName()) : that.getCollectionName() == null;\n@@ -258,7 +258,7 @@ public class EntityModel<T> {\n     @Override\n     public String toString() {\n         String fields = fieldModelsByField.values().stream().map(f -> format(\"%s %s\", f.getTypeData(), f.getName()))\n-                                          .collect(Collectors.joining(\", \"));\n+            .collect(Collectors.joining(\", \"));\n         return format(\"%s<%s> { %s } \", EntityModel.class.getSimpleName(), type.getSimpleName(), fields);\n     }\n \n@@ -310,7 +310,7 @@ public class EntityModel<T> {\n             for (final Class<? extends Annotation> annotationClass : LIFECYCLE_ANNOTATIONS) {\n                 if (method.isAnnotationPresent(annotationClass)) {\n                     lifecycleMethods.computeIfAbsent(annotationClass, c -> new ArrayList<>())\n-                                    .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n+                        .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n                 }\n             }\n         }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "261",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/0/EntityModel.java\nindex f71a5d58ad..0a28872068 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/0/EntityModel.java\n@@ -73,7 +73,7 @@ public class EntityModel<T> {\n             FieldModel<?> model = modelBuilder.build();\n             fieldModelsByMappedName.put(model.getMappedName(), model);\n             for (final String name : modelBuilder.alternateNames()) {\n-                if(fieldModelsByMappedName.put(name, model) != null) {\n+                if (fieldModelsByMappedName.put(name, model) != null) {\n                     throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n                 }\n             }\n@@ -258,8 +258,8 @@ public class EntityModel<T> {\n     @Override\n     public String toString() {\n         String fields = fieldModelsByField.values().stream().map(f -> format(\"%s %s\", f.getTypeData(), f.getName()))\n-                                          .collect(Collectors.joining(\", \"));\n-        return format(\"%s<%s> { %s } \", EntityModel.class.getSimpleName(), type.getSimpleName(), fields);\n+.collect(Collectors.joining(\", \"));\n+return format(\"%s<%s> { %s } \", EntityModel.class.getSimpleName(), type.getSimpleName(), fields);\n     }\n \n     public String getDiscriminatorKey() {\n@@ -315,4 +315,4 @@ public class EntityModel<T> {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/0/EntityModel.java\nindex f71a5d58ad..af95aff52d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/0/EntityModel.java\n@@ -73,7 +73,7 @@ public class EntityModel<T> {\n             FieldModel<?> model = modelBuilder.build();\n             fieldModelsByMappedName.put(model.getMappedName(), model);\n             for (final String name : modelBuilder.alternateNames()) {\n-                if(fieldModelsByMappedName.put(name, model) != null) {\n+                if (fieldModelsByMappedName.put(name, model) != null) {\n                     throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n                 }\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "75",
                    "column": "69",
                    "severity": "error",
                    "message": "'{' at column 69 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "71",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "243",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "265",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "275",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "277",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "286",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "289",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "290",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "292",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "296",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "302",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "304",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "307",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "308",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "309",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "310",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "311",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "313",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "314",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/0/EntityModel.java\nindex f71a5d58ad..15270ea662 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/0/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/0/EntityModel.java\n@@ -72,20 +72,19 @@ public class EntityModel<T> {\n         builder.fieldModels().forEach(modelBuilder -> {\n             FieldModel<?> model = modelBuilder.build();\n             fieldModelsByMappedName.put(model.getMappedName(), model);\n-            for (final String name : modelBuilder.alternateNames()) {\n-                if(fieldModelsByMappedName.put(name, model) != null) {\n-                    throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n-                }\n+            for (final String name : modelBuilder.alternateNames()) { if(fieldModelsByMappedName.put(name, model) != null) {\n+                throw new MappingException(Sofia.duplicatedMappedName(type.getCanonicalName(), name));\n             }\n-            fieldModelsByField.putIfAbsent(model.getName(), model);\n-        });\n+        }\n+        fieldModelsByField.putIfAbsent(model.getName(), model);\n+    });\n \n-        this.datastore = builder.getDatastore();\n-        this.collectionName = builder.getCollectionName();\n-        creatorFactory = new InstanceCreatorFactoryImpl<>(this);\n-    }\n+    this.datastore = builder.getDatastore();\n+    this.collectionName = builder.getCollectionName();\n+    creatorFactory = new InstanceCreatorFactoryImpl<>(this);\n+}\n \n-    /**\n+/**\n      * Invokes any lifecycle methods\n      *\n      * @param event    the event to run\n@@ -93,226 +92,226 @@ public class EntityModel<T> {\n      * @param document the document used in persistence\n      * @param mapper   the mapper to use\n      */\n-    public void callLifecycleMethods(final Class<? extends Annotation> event, final Object entity, final Document document,\n-                                     final Mapper mapper) {\n-        final List<ClassMethodPair> methodPairs = getLifecycleMethods().get(event);\n-        if (methodPairs != null) {\n-            for (final ClassMethodPair cm : methodPairs) {\n-                cm.invoke(document, entity);\n-            }\n+public void callLifecycleMethods(final Class<? extends Annotation> event, final Object entity, final Document document,\n+                                 final Mapper mapper) {\n+    final List<ClassMethodPair> methodPairs = getLifecycleMethods().get(event);\n+    if (methodPairs != null) {\n+        for (final ClassMethodPair cm : methodPairs) {\n+            cm.invoke(document, entity);\n         }\n-\n-        callGlobalInterceptors(event, entity, document, mapper);\n     }\n \n-    /**\n+    callGlobalInterceptors(event, entity, document, mapper);\n+}\n+\n+/**\n      * @param clazz the annotation class\n      * @param <A>   the annotation type\n      * @return the annotation instance or null if not found\n      */\n-    public <A> A getAnnotation(final Class<? extends Annotation> clazz) {\n-        final List<Annotation> found = annotations.get(clazz);\n-        return found == null || found.isEmpty() ? null : (A) found.get(found.size() - 1);\n-    }\n+public <A> A getAnnotation(final Class<? extends Annotation> clazz) {\n+    final List<Annotation> found = annotations.get(clazz);\n+    return found == null || found.isEmpty() ? null : (A) found.get(found.size() - 1);\n+}\n \n-    /**\n+/**\n      * @param clazz the annotation class\n      * @param <A>   the annotation type\n      * @return all annotation instance of the given type\n      */\n-    public <A> List<A> getAnnotations(final Class<? extends Annotation> clazz) {\n-        return (List<A>) annotations.get(clazz);\n-    }\n+public <A> List<A> getAnnotations(final Class<? extends Annotation> clazz) {\n+    return (List<A>) annotations.get(clazz);\n+}\n \n-    public String getDiscriminator() {\n-        return discriminator;\n-    }\n+public String getDiscriminator() {\n+    return discriminator;\n+}\n \n-    /**\n+/**\n      * @param name the property name\n      * @return the named FieldModel or null if it does not exist\n      */\n-    public FieldModel<?> getFieldModelByName(final String name) {\n-        return fieldModelsByMappedName.getOrDefault(name, fieldModelsByField.get(name));\n-    }\n+public FieldModel<?> getFieldModelByName(final String name) {\n+    return fieldModelsByMappedName.getOrDefault(name, fieldModelsByField.get(name));\n+}\n \n-    public FieldModel<?> getIdModel() {\n-        return fieldModelsByMappedName.get(\"_id\");\n-    }\n+public FieldModel<?> getIdModel() {\n+    return fieldModelsByMappedName.get(\"_id\");\n+}\n \n-    /**\n+/**\n      * @return a new InstanceCreator instance for the ClassModel\n      */\n-    public MorphiaInstanceCreator<T> getInstanceCreator() {\n-        return creatorFactory.create();\n-    }\n+public MorphiaInstanceCreator<T> getInstanceCreator() {\n+    return creatorFactory.create();\n+}\n \n-    /**\n+/**\n      * @return thee creator factory\n      * @morphia.internal\n      */\n-    public InstanceCreatorFactory<T> getInstanceCreatorFactory() {\n-        return creatorFactory;\n-    }\n+public InstanceCreatorFactory<T> getInstanceCreatorFactory() {\n+    return creatorFactory;\n+}\n \n-    /**\n+/**\n      * @return the lifecycle event methods\n      */\n-    public Map<Class<? extends Annotation>, List<ClassMethodPair>> getLifecycleMethods() {\n-        if (lifecycleMethods == null) {\n-            lifecycleMethods = new HashMap<>();\n-\n-            final EntityListeners entityLisAnn = getAnnotation(EntityListeners.class);\n-            if (entityLisAnn != null && entityLisAnn.value().length != 0) {\n-                for (final Class<?> aClass : entityLisAnn.value()) {\n-                    mapEvent(aClass, true);\n-                }\n+public Map<Class<? extends Annotation>, List<ClassMethodPair>> getLifecycleMethods() {\n+    if (lifecycleMethods == null) {\n+        lifecycleMethods = new HashMap<>();\n+\n+        final EntityListeners entityLisAnn = getAnnotation(EntityListeners.class);\n+        if (entityLisAnn != null && entityLisAnn.value().length != 0) {\n+            for (final Class<?> aClass : entityLisAnn.value()) {\n+                mapEvent(aClass, true);\n             }\n-\n-            mapEvent(getType(), false);\n         }\n-        return lifecycleMethods;\n-    }\n \n-    public String getName() {\n-        return type.getSimpleName();\n+        mapEvent(getType(), false);\n     }\n+    return lifecycleMethods;\n+}\n \n-    public Class<T> getType() {\n-        return type;\n-    }\n+public String getName() {\n+    return type.getSimpleName();\n+}\n \n-    /**\n+public Class<T> getType() {\n+    return type;\n+}\n+\n+/**\n      * @param type the lifecycle event type\n      * @return true if that even has been configured\n      */\n-    public boolean hasLifecycle(final Class<? extends Annotation> type) {\n-        return getLifecycleMethods().containsKey(type);\n-    }\n+public boolean hasLifecycle(final Class<? extends Annotation> type) {\n+    return getLifecycleMethods().containsKey(type);\n+}\n \n-    @Override\n-    public int hashCode() {\n-        int result = super.hashCode();\n-        result = 31 * result + (getAnnotations() != null ? getAnnotations().hashCode() : 0);\n-        result = 31 * result + (getFieldModels() != null ? getFieldModels().hashCode() : 0);\n-        result = 31 * result + (datastore != null ? datastore.hashCode() : 0);\n-        result = 31 * result + (getCollectionName() != null ? getCollectionName().hashCode() : 0);\n-        return result;\n-    }\n+@Override\n+public int hashCode() {\n+    int result = super.hashCode();\n+    result = 31 * result + (getAnnotations() != null ? getAnnotations().hashCode() : 0);\n+    result = 31 * result + (getFieldModels() != null ? getFieldModels().hashCode() : 0);\n+    result = 31 * result + (datastore != null ? datastore.hashCode() : 0);\n+    result = 31 * result + (getCollectionName() != null ? getCollectionName().hashCode() : 0);\n+    return result;\n+}\n \n-    /**\n+/**\n      * Returns all the annotations on this model\n      *\n      * @return the list of annotations\n      */\n-    public Map<Class<? extends Annotation>, List<Annotation>> getAnnotations() {\n-        return annotations;\n-    }\n+public Map<Class<? extends Annotation>, List<Annotation>> getAnnotations() {\n+    return annotations;\n+}\n \n-    /**\n+/**\n      * Returns all the fields on this model\n      *\n      * @return the list of fields\n      */\n-    public Collection<FieldModel<?>> getFieldModels() {\n-        return fieldModelsByField.values();\n-    }\n+public Collection<FieldModel<?>> getFieldModels() {\n+    return fieldModelsByField.values();\n+}\n \n-    /**\n+/**\n      * @return the mapped collection name for the type\n      */\n-    public String getCollectionName() {\n-        return collectionName;\n-    }\n+public String getCollectionName() {\n+    return collectionName;\n+}\n \n-    @Override\n-    public boolean equals(final Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (!(o instanceof EntityModel)) {\n-            return false;\n-        }\n-        if (!super.equals(o)) {\n-            return false;\n-        }\n+@Override\n+public boolean equals(final Object o) {\n+    if (this == o) {\n+        return true;\n+    }\n+    if (!(o instanceof EntityModel)) {\n+        return false;\n+    }\n+    if (!super.equals(o)) {\n+        return false;\n+    }\n \n-        final EntityModel<?> that = (EntityModel<?>) o;\n+    final EntityModel<?> that = (EntityModel<?>) o;\n \n-        if (getAnnotations() != null ? !getAnnotations().equals(that.getAnnotations()) : that.getAnnotations() != null) {\n-            return false;\n-        }\n-        if (getFieldModels() != null ? !getFieldModels().equals(that.getFieldModels()) : that.getFieldModels() != null) {\n-            return false;\n-        }\n-        if (!Objects.equals(datastore, that.datastore)) {\n-            return false;\n-        }\n-        if (getLifecycleMethods() != null ? !getLifecycleMethods().equals(that.getLifecycleMethods())\n-                                          : that.getLifecycleMethods() != null) {\n-            return false;\n-        }\n-        return getCollectionName() != null ? getCollectionName().equals(that.getCollectionName()) : that.getCollectionName() == null;\n+    if (getAnnotations() != null ? !getAnnotations().equals(that.getAnnotations()) : that.getAnnotations() != null) {\n+        return false;\n     }\n-\n-    @Override\n-    public String toString() {\n-        String fields = fieldModelsByField.values().stream().map(f -> format(\"%s %s\", f.getTypeData(), f.getName()))\n-                                          .collect(Collectors.joining(\", \"));\n-        return format(\"%s<%s> { %s } \", EntityModel.class.getSimpleName(), type.getSimpleName(), fields);\n+    if (getFieldModels() != null ? !getFieldModels().equals(that.getFieldModels()) : that.getFieldModels() != null) {\n+        return false;\n     }\n-\n-    public String getDiscriminatorKey() {\n-        return discriminatorKey;\n+    if (!Objects.equals(datastore, that.datastore)) {\n+        return false;\n     }\n-\n-    protected boolean useDiscriminator() {\n-        return discriminatorEnabled;\n+    if (getLifecycleMethods() != null ? !getLifecycleMethods().equals(that.getLifecycleMethods())\n+                                      : that.getLifecycleMethods() != null) {\n+        return false;\n     }\n+    return getCollectionName() != null ? getCollectionName().equals(that.getCollectionName()) : that.getCollectionName() == null;\n+}\n \n-    private void callGlobalInterceptors(final Class<? extends Annotation> event, final Object entity, final Document document,\n-                                        final Mapper mapper) {\n-        for (final EntityInterceptor ei : mapper.getInterceptors()) {\n-            Sofia.logCallingInterceptorMethod(event.getSimpleName(), ei);\n-\n-            if (event.equals(PreLoad.class)) {\n-                ei.preLoad(entity, document, mapper);\n-            } else if (event.equals(PostLoad.class)) {\n-                ei.postLoad(entity, document, mapper);\n-            } else if (event.equals(PrePersist.class)) {\n-                ei.prePersist(entity, document, mapper);\n-            } else if (event.equals(PostPersist.class)) {\n-                ei.postPersist(entity, document, mapper);\n-            }\n-        }\n-    }\n+@Override\n+public String toString() {\n+    String fields = fieldModelsByField.values().stream().map(f -> format(\"%s %s\", f.getTypeData(), f.getName()))\n+                                      .collect(Collectors.joining(\", \"));\n+    return format(\"%s<%s> { %s } \", EntityModel.class.getSimpleName(), type.getSimpleName(), fields);\n+}\n \n-    private List<Method> getDeclaredAndInheritedMethods(final Class<?> type) {\n-        final List<Method> methods = new ArrayList<>();\n-        if ((type == null) || (type == Object.class)) {\n-            return methods;\n-        }\n+public String getDiscriminatorKey() {\n+    return discriminatorKey;\n+}\n \n-        final Class<?> parent = type.getSuperclass();\n-        methods.addAll(getDeclaredAndInheritedMethods(parent));\n+protected boolean useDiscriminator() {\n+    return discriminatorEnabled;\n+}\n \n-        for (final Method m : type.getDeclaredMethods()) {\n-            if (!Modifier.isStatic(m.getModifiers())) {\n-                methods.add(m);\n-            }\n+private void callGlobalInterceptors(final Class<? extends Annotation> event, final Object entity, final Document document,\n+                                    final Mapper mapper) {\n+    for (final EntityInterceptor ei : mapper.getInterceptors()) {\n+        Sofia.logCallingInterceptorMethod(event.getSimpleName(), ei);\n+\n+        if (event.equals(PreLoad.class)) {\n+            ei.preLoad(entity, document, mapper);\n+        } else if (event.equals(PostLoad.class)) {\n+            ei.postLoad(entity, document, mapper);\n+        } else if (event.equals(PrePersist.class)) {\n+            ei.prePersist(entity, document, mapper);\n+        } else if (event.equals(PostPersist.class)) {\n+            ei.postPersist(entity, document, mapper);\n         }\n+    }\n+}\n \n+private List<Method> getDeclaredAndInheritedMethods(final Class<?> type) {\n+    final List<Method> methods = new ArrayList<>();\n+    if ((type == null) || (type == Object.class)) {\n         return methods;\n     }\n \n-    private void mapEvent(final Class<?> type, final boolean entityListener) {\n-        for (final Method method : getDeclaredAndInheritedMethods(type)) {\n-            for (final Class<? extends Annotation> annotationClass : LIFECYCLE_ANNOTATIONS) {\n-                if (method.isAnnotationPresent(annotationClass)) {\n-                    lifecycleMethods.computeIfAbsent(annotationClass, c -> new ArrayList<>())\n-                                    .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n-                }\n+    final Class<?> parent = type.getSuperclass();\n+    methods.addAll(getDeclaredAndInheritedMethods(parent));\n+\n+    for (final Method m : type.getDeclaredMethods()) {\n+        if (!Modifier.isStatic(m.getModifiers())) {\n+            methods.add(m);\n+        }\n+    }\n+\n+    return methods;\n+}\n+\n+private void mapEvent(final Class<?> type, final boolean entityListener) {\n+    for (final Method method : getDeclaredAndInheritedMethods(type)) {\n+        for (final Class<? extends Annotation> annotationClass : LIFECYCLE_ANNOTATIONS) {\n+            if (method.isAnnotationPresent(annotationClass)) {\n+                lifecycleMethods.computeIfAbsent(annotationClass, c -> new ArrayList<>())\n+                                .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n             }\n         }\n     }\n }\n+}\n",
            "diff_size": 202
        }
    ]
}