{
    "error_id": "97",
    "information": {
        "errors": [
            {
                "line": "103",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 106).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * Initializes this implementation by setting the supplied IndexDao and also setting a separate SolrDao.\n   * This is needed for some specific Solr functions (looking up an index from a GUID for example).\n   * @param indexDao The DAO to wrap for our queries\n   * @param threatSort The summary aggregation of the child threat triage scores used",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/97/SolrMetaAlertDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/97/SolrMetaAlertDao.java\nindex e65700fd5c..ce64ab7d70 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/97/SolrMetaAlertDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/97/SolrMetaAlertDao.java\n@@ -61,11 +61,12 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n \n   /**\n    * Wraps an {@link org.apache.metron.indexing.dao.IndexDao} to handle meta alerts.\n+   *\n    * @param indexDao The Dao to wrap\n    */\n   public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao,\n-      SolrMetaAlertUpdateDao metaAlertUpdateDao,\n-      SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao) {\n+                          SolrMetaAlertUpdateDao metaAlertUpdateDao,\n+                          SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao) {\n     this(indexDao, metaAlertSearchDao, metaAlertUpdateDao, metaAlertRetrieveLatestDao,\n         METAALERTS_COLLECTION,\n         MetaAlertConstants.THREAT_FIELD_DEFAULT,\n@@ -74,18 +75,19 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n \n   /**\n    * Wraps an {@link org.apache.metron.indexing.dao.IndexDao} to handle meta alerts.\n-   * @param indexDao The Dao to wrap\n+   *\n+   * @param indexDao         The Dao to wrap\n    * @param triageLevelField The field name to use as the threat scoring field\n-   * @param threatSort The summary aggregation of all child threat triage scores used\n-   *                   as the overall threat triage score for the metaalert. This\n-   *                   can be either max, min, average, count, median, or sum.\n+   * @param threatSort       The summary aggregation of all child threat triage scores used\n+   *                         as the overall threat triage score for the metaalert. This\n+   *                         can be either max, min, average, count, median, or sum.\n    */\n   public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao,\n-      SolrMetaAlertUpdateDao metaAlertUpdateDao,\n-      SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao,\n-      String metaAlertsCollection,\n-      String triageLevelField,\n-      String threatSort) {\n+                          SolrMetaAlertUpdateDao metaAlertUpdateDao,\n+                          SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao,\n+                          String metaAlertsCollection,\n+                          String triageLevelField,\n+                          String threatSort) {\n     init(indexDao, Optional.of(threatSort));\n     this.metaAlertSearchDao = metaAlertSearchDao;\n     this.metaAlertUpdateDao = metaAlertUpdateDao;\n@@ -102,7 +104,8 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n   /**\n    * Initializes this implementation by setting the supplied IndexDao and also setting a separate SolrDao.\n    * This is needed for some specific Solr functions (looking up an index from a GUID for example).\n-   * @param indexDao The DAO to wrap for our queries\n+   *\n+   * @param indexDao   The DAO to wrap for our queries\n    * @param threatSort The summary aggregation of the child threat triage scores used\n    *                   as the overall threat triage score for the metaalert. This\n    *                   can be either max, min, average, count, median, or sum.\n@@ -189,7 +192,7 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n \n   @Override\n   public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n+                    Optional<Long> timestamp)\n       throws OriginalNotFoundException, IOException {\n     metaAlertUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/97/SolrMetaAlertDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/97/SolrMetaAlertDao.java\nindex e65700fd5c..f5a48be5f9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/97/SolrMetaAlertDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/97/SolrMetaAlertDao.java\n@@ -66,10 +66,9 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n   public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao,\n       SolrMetaAlertUpdateDao metaAlertUpdateDao,\n       SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao) {\n-    this(indexDao, metaAlertSearchDao, metaAlertUpdateDao, metaAlertRetrieveLatestDao,\n+  this(indexDao, metaAlertSearchDao, metaAlertUpdateDao, metaAlertRetrieveLatestDao,\n         METAALERTS_COLLECTION,\n-        MetaAlertConstants.THREAT_FIELD_DEFAULT,\n-        MetaAlertConstants.THREAT_SORT_DEFAULT);\n+        MetaAlertConstants.THREAT_FIELD_DEFAULT, MetaAlertConstants.THREAT_SORT_DEFAULT);\n   }\n \n   /**\n@@ -86,7 +85,7 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n       String metaAlertsCollection,\n       String triageLevelField,\n       String threatSort) {\n-    init(indexDao, Optional.of(threatSort));\n+  init(indexDao, Optional.of(threatSort));\n     this.metaAlertSearchDao = metaAlertSearchDao;\n     this.metaAlertUpdateDao = metaAlertUpdateDao;\n     this.metaAlertRetrieveLatestDao = metaAlertRetrieveLatestDao;\n@@ -122,27 +121,17 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n       this.solrDao = (SolrDao) indexDao;\n     } else {\n       throw new IllegalArgumentException(\n-          \"Need a SolrDao when using SolrMetaAlertDao\"\n-      );\n+          \"Need a SolrDao when using SolrMetaAlertDao\");\n     }\n \n-    MetaAlertConfig config = new MetaAlertConfig(\n-        metaAlertsCollection,\n-        threatTriageField,\n-        this.threatSort,\n-        Constants.SENSOR_TYPE\n-    );\n+    MetaAlertConfig config = new MetaAlertConfig(metaAlertsCollection, threatTriageField,\n+        this.threatSort, Constants.SENSOR_TYPE);\n \n     SolrClient solrClient = solrDao.getSolrClient(solrDao.getZkHosts());\n     this.metaAlertSearchDao = new SolrMetaAlertSearchDao(solrClient, solrDao.getSolrSearchDao());\n     this.metaAlertRetrieveLatestDao = new SolrMetaAlertRetrieveLatestDao(solrDao);\n-    this.metaAlertUpdateDao = new SolrMetaAlertUpdateDao(\n-        solrDao,\n-        metaAlertSearchDao,\n-        metaAlertRetrieveLatestDao,\n-        config);\n-\n-    if (threatSort.isPresent()) {\n+    this.metaAlertUpdateDao = new SolrMetaAlertUpdateDao(solrDao, metaAlertSearchDao, metaAlertRetrieveLatestDao, config);\n+if (threatSort.isPresent()) {\n       this.threatSort = threatSort.get();\n     }\n   }\n@@ -188,10 +177,8 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n   }\n \n   @Override\n-  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n-      throws OriginalNotFoundException, IOException {\n-    metaAlertUpdateDao.patch(retrieveLatestDao, request, timestamp);\n+  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request, Optional<Long> timestamp) throws OriginalNotFoundException, IOException {\n+  metaAlertUpdateDao.patch(retrieveLatestDao, request, timestamp);\n   }\n \n   @Override\n@@ -200,26 +187,22 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n   }\n \n   @Override\n-  public MetaAlertCreateResponse createMetaAlert(MetaAlertCreateRequest request)\n-      throws InvalidCreateException, IOException {\n-    return metaAlertUpdateDao.createMetaAlert(request);\n+  public MetaAlertCreateResponse createMetaAlert(MetaAlertCreateRequest request) throws InvalidCreateException, IOException {\n+  return metaAlertUpdateDao.createMetaAlert(request);\n   }\n \n   @Override\n-  public boolean addAlertsToMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests)\n-      throws IOException {\n-    return metaAlertUpdateDao.addAlertsToMetaAlert(metaAlertGuid, alertRequests);\n+  public boolean addAlertsToMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests) throws IOException {\n+  return metaAlertUpdateDao.addAlertsToMetaAlert(metaAlertGuid, alertRequests);\n   }\n \n   @Override\n-  public boolean removeAlertsFromMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests)\n-      throws IOException {\n-    return metaAlertUpdateDao.removeAlertsFromMetaAlert(metaAlertGuid, alertRequests);\n+  public boolean removeAlertsFromMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests) throws IOException {\n+  return metaAlertUpdateDao.removeAlertsFromMetaAlert(metaAlertGuid, alertRequests);\n   }\n \n   @Override\n-  public boolean updateMetaAlertStatus(String metaAlertGuid, MetaAlertStatus status)\n-      throws IOException {\n-    return metaAlertUpdateDao.updateMetaAlertStatus(metaAlertGuid, status);\n+  public boolean updateMetaAlertStatus(String metaAlertGuid, MetaAlertStatus status) throws IOException {\n+  return metaAlertUpdateDao.updateMetaAlertStatus(metaAlertGuid, status);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 266).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 102.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 47, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 65, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 47, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'this' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "195",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "200",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/97/SolrMetaAlertDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/97/SolrMetaAlertDao.java\nindex e65700fd5c..092b8f48de 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/97/SolrMetaAlertDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/97/SolrMetaAlertDao.java\n@@ -48,29 +48,24 @@ import org.apache.solr.client.solrj.SolrClient;\n \n public class SolrMetaAlertDao implements MetaAlertDao {\n \n-  public static final String METAALERTS_COLLECTION = \"metaalert\";\n-\n-  private IndexDao indexDao;\n-  private SolrDao solrDao;\n-  private SolrMetaAlertSearchDao metaAlertSearchDao;\n-  private SolrMetaAlertUpdateDao metaAlertUpdateDao;\n-  private SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao;\n-  protected String metaAlertsCollection = METAALERTS_COLLECTION;\n-  protected String threatTriageField = MetaAlertConstants.THREAT_FIELD_DEFAULT;\n-  protected String threatSort = MetaAlertConstants.THREAT_SORT_DEFAULT;\n+    public static final String METAALERTS_COLLECTION = \"metaalert\";\n+    private IndexDao indexDao;\n+    private SolrDao solrDao;\n+    private SolrMetaAlertSearchDao metaAlertSearchDao;\n+    private SolrMetaAlertUpdateDao metaAlertUpdateDao;\n+    private SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao;\n+    protected String metaAlertsCollection = METAALERTS_COLLECTION;\n+    protected String threatTriageField = MetaAlertConstants.THREAT_FIELD_DEFAULT;\n+    protected String threatSort = MetaAlertConstants.THREAT_SORT_DEFAULT;\n \n   /**\n    * Wraps an {@link org.apache.metron.indexing.dao.IndexDao} to handle meta alerts.\n    * @param indexDao The Dao to wrap\n    */\n-  public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao,\n-      SolrMetaAlertUpdateDao metaAlertUpdateDao,\n-      SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao) {\n-    this(indexDao, metaAlertSearchDao, metaAlertUpdateDao, metaAlertRetrieveLatestDao,\n-        METAALERTS_COLLECTION,\n-        MetaAlertConstants.THREAT_FIELD_DEFAULT,\n-        MetaAlertConstants.THREAT_SORT_DEFAULT);\n-  }\n+\n+    public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao, SolrMetaAlertUpdateDao metaAlertUpdateDao, SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao) {\n+    this(indexDao, metaAlertSearchDao, metaAlertUpdateDao, metaAlertRetrieveLatestDao, METAALERTS_COLLECTION, MetaAlertConstants.THREAT_FIELD_DEFAULT, MetaAlertConstants.THREAT_SORT_DEFAULT);\n+    }\n \n   /**\n    * Wraps an {@link org.apache.metron.indexing.dao.IndexDao} to handle meta alerts.\n@@ -80,12 +75,8 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n    *                   as the overall threat triage score for the metaalert. This\n    *                   can be either max, min, average, count, median, or sum.\n    */\n-  public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao,\n-      SolrMetaAlertUpdateDao metaAlertUpdateDao,\n-      SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao,\n-      String metaAlertsCollection,\n-      String triageLevelField,\n-      String threatSort) {\n+\n+    public SolrMetaAlertDao(IndexDao indexDao, SolrMetaAlertSearchDao metaAlertSearchDao, SolrMetaAlertUpdateDao metaAlertUpdateDao, SolrMetaAlertRetrieveLatestDao metaAlertRetrieveLatestDao, String metaAlertsCollection, String triageLevelField, String threatSort) {\n     init(indexDao, Optional.of(threatSort));\n     this.metaAlertSearchDao = metaAlertSearchDao;\n     this.metaAlertUpdateDao = metaAlertUpdateDao;\n@@ -93,11 +84,11 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n     this.metaAlertsCollection = metaAlertsCollection;\n     this.threatTriageField = triageLevelField;\n     this.threatSort = threatSort;\n-  }\n+    }\n \n-  public SolrMetaAlertDao() {\n+    public SolrMetaAlertDao() {\n     //uninitialized.\n-  }\n+    }\n \n   /**\n    * Initializes this implementation by setting the supplied IndexDao and also setting a separate SolrDao.\n@@ -107,119 +98,104 @@ public class SolrMetaAlertDao implements MetaAlertDao {\n    *                   as the overall threat triage score for the metaalert. This\n    *                   can be either max, min, average, count, median, or sum.\n    */\n-  @Override\n-  public void init(IndexDao indexDao, Optional<String> threatSort) {\n+\n+    @Override\n+    public void init(IndexDao indexDao, Optional<String> threatSort) {\n     if (indexDao instanceof MultiIndexDao) {\n-      this.indexDao = indexDao;\n-      MultiIndexDao multiIndexDao = (MultiIndexDao) indexDao;\n-      for (IndexDao childDao : multiIndexDao.getIndices()) {\n-        if (childDao instanceof SolrDao) {\n-          this.solrDao = (SolrDao) childDao;\n+        this.indexDao = indexDao;\n+        MultiIndexDao multiIndexDao = (MultiIndexDao) indexDao;\n+        for (IndexDao childDao : multiIndexDao.getIndices()) {\n+                                               if (childDao instanceof SolrDao) {\n+                                                                 this.solrDao = (SolrDao) childDao;\n+                                               }\n         }\n-      }\n     } else if (indexDao instanceof SolrDao) {\n-      this.indexDao = indexDao;\n-      this.solrDao = (SolrDao) indexDao;\n-    } else {\n-      throw new IllegalArgumentException(\n-          \"Need a SolrDao when using SolrMetaAlertDao\"\n-      );\n-    }\n-\n-    MetaAlertConfig config = new MetaAlertConfig(\n-        metaAlertsCollection,\n-        threatTriageField,\n-        this.threatSort,\n-        Constants.SENSOR_TYPE\n-    );\n-\n+                                                                         this.indexDao = indexDao;\n+                                                                         this.solrDao = (SolrDao) indexDao;\n+           } else {\n+             throw new IllegalArgumentException(\n+                 \"Need a SolrDao when using SolrMetaAlertDao\");\n+           }\n+    MetaAlertConfig config = new MetaAlertConfig(metaAlertsCollection,\n+                                     threatTriageField,\n+this.threatSort,\n+                                     Constants.SENSOR_TYPE);\n     SolrClient solrClient = solrDao.getSolrClient(solrDao.getZkHosts());\n     this.metaAlertSearchDao = new SolrMetaAlertSearchDao(solrClient, solrDao.getSolrSearchDao());\n     this.metaAlertRetrieveLatestDao = new SolrMetaAlertRetrieveLatestDao(solrDao);\n-    this.metaAlertUpdateDao = new SolrMetaAlertUpdateDao(\n-        solrDao,\n-        metaAlertSearchDao,\n-        metaAlertRetrieveLatestDao,\n-        config);\n-\n+    this.metaAlertUpdateDao = new SolrMetaAlertUpdateDao(solrDao, metaAlertSearchDao, metaAlertRetrieveLatestDao, config);\n     if (threatSort.isPresent()) {\n-      this.threatSort = threatSort.get();\n+        this.threatSort = threatSort.get();\n+    }\n     }\n-  }\n \n-  @Override\n-  public void init(AccessConfig config) {\n+    @Override\n+    public void init(AccessConfig config) {\n     // Do nothing. We're just wrapping a child dao\n-  }\n+    }\n \n-  @Override\n-  public Map<String, FieldType> getColumnMetadata(List<String> indices) throws IOException {\n+    @Override\n+    public Map<String, FieldType> getColumnMetadata(List<String> indices) throws IOException {\n     return indexDao.getColumnMetadata(indices);\n-  }\n+    }\n \n-  @Override\n-  public Document getLatest(String guid, String sensorType) throws IOException {\n+    @Override\n+    public Document getLatest(String guid, String sensorType) throws IOException {\n     return metaAlertRetrieveLatestDao.getLatest(guid, sensorType);\n-  }\n+    }\n \n-  @Override\n-  public Iterable<Document> getAllLatest(List<GetRequest> getRequests) throws IOException {\n+    @Override\n+    public Iterable<Document> getAllLatest(List<GetRequest> getRequests) throws IOException {\n     return metaAlertRetrieveLatestDao.getAllLatest(getRequests);\n-  }\n+    }\n \n-  @Override\n-  public SearchResponse search(SearchRequest searchRequest) throws InvalidSearchException {\n+    @Override\n+    public SearchResponse search(SearchRequest searchRequest) throws InvalidSearchException {\n     return metaAlertSearchDao.search(searchRequest);\n-  }\n+    }\n \n-  @Override\n-  public GroupResponse group(GroupRequest groupRequest) throws InvalidSearchException {\n+    @Override\n+    public GroupResponse group(GroupRequest groupRequest) throws InvalidSearchException {\n     return metaAlertSearchDao.group(groupRequest);\n-  }\n+    }\n \n-  @Override\n-  public void update(Document update, Optional<String> index) throws IOException {\n+    @Override\n+    public void update(Document update, Optional<String> index) throws IOException {\n     metaAlertUpdateDao.update(update, index);\n-  }\n+    }\n \n-  @Override\n-  public void batchUpdate(Map<Document, Optional<String>> updates) {\n+    @Override\n+    public void batchUpdate(Map<Document, Optional<String>> updates) {\n     metaAlertUpdateDao.batchUpdate(updates);\n-  }\n+    }\n \n-  @Override\n-  public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request,\n-      Optional<Long> timestamp)\n-      throws OriginalNotFoundException, IOException {\n+    @Override\n+    public void patch(RetrieveLatestDao retrieveLatestDao, PatchRequest request, Optional<Long> timestamp) throws OriginalNotFoundException, IOException {\n     metaAlertUpdateDao.patch(retrieveLatestDao, request, timestamp);\n-  }\n+    }\n \n-  @Override\n-  public SearchResponse getAllMetaAlertsForAlert(String guid) throws InvalidSearchException {\n+    @Override\n+    public SearchResponse getAllMetaAlertsForAlert(String guid) throws InvalidSearchException {\n     return metaAlertSearchDao.getAllMetaAlertsForAlert(guid);\n-  }\n+    }\n \n-  @Override\n-  public MetaAlertCreateResponse createMetaAlert(MetaAlertCreateRequest request)\n-      throws InvalidCreateException, IOException {\n+    @Override\n+    public MetaAlertCreateResponse createMetaAlert(MetaAlertCreateRequest request) throws InvalidCreateException, IOException {\n     return metaAlertUpdateDao.createMetaAlert(request);\n-  }\n+    }\n \n-  @Override\n-  public boolean addAlertsToMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests)\n-      throws IOException {\n+    @Override\n+    public boolean addAlertsToMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests) throws IOException {\n     return metaAlertUpdateDao.addAlertsToMetaAlert(metaAlertGuid, alertRequests);\n-  }\n+    }\n \n-  @Override\n-  public boolean removeAlertsFromMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests)\n-      throws IOException {\n+    @Override\n+    public boolean removeAlertsFromMetaAlert(String metaAlertGuid, List<GetRequest> alertRequests) throws IOException {\n     return metaAlertUpdateDao.removeAlertsFromMetaAlert(metaAlertGuid, alertRequests);\n-  }\n+    }\n \n-  @Override\n-  public boolean updateMetaAlertStatus(String metaAlertGuid, MetaAlertStatus status)\n-      throws IOException {\n+    @Override\n+    public boolean updateMetaAlertStatus(String metaAlertGuid, MetaAlertStatus status) throws IOException {\n     return metaAlertUpdateDao.updateMetaAlertStatus(metaAlertGuid, status);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 110
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}