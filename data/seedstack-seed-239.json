{
    "error_id": "239",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.seed.diagnostic;\n\nimport java.io.Writer;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "10",
                    "column": "60",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler/239/DiagnosticManager.java\nindex cd69da1ec4..92b72575a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler/239/DiagnosticManager.java\n@@ -5,9 +5,9 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.seed.diagnostic;\n \n-import java.io.Writer;\n+\n+package org.seedstack.seed.diagnostic;import java.io.Writer;\n import java.util.Map;\n import org.seedstack.seed.diagnostic.spi.DiagnosticInfoCollector;\n import org.seedstack.seed.diagnostic.spi.DiagnosticReporter;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/intellij/239/DiagnosticManager.java\nindex cd69da1ec4..4d92490bcc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/intellij/239/DiagnosticManager.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.diagnostic;\n \n import java.io.Writer;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "8",
                    "column": "60",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "81",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "146",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "206",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "12",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "18",
                    "column": "25",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "39",
                    "column": "108",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/codebuff/239/DiagnosticManager.java\nindex cd69da1ec4..a2eb0cf2fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/codebuff/239/DiagnosticManager.java\n@@ -5,39 +5,30 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.seed.diagnostic;\n-\n-import java.io.Writer;\n-import java.util.Map;\n-import org.seedstack.seed.diagnostic.spi.DiagnosticInfoCollector;\n-import org.seedstack.seed.diagnostic.spi.DiagnosticReporter;\n+package org.seedstack.seed.diagnostic;import java.io.Writer;import java.util.Map;import org.seedstack.seed.diagnostic.spi.DiagnosticInfoCollector;import org.seedstack.seed.diagnostic.spi.DiagnosticReporter;\n \n /**\n  * The diagnostic manager enables to access diagnostic information or write it somewhere.\n- */\n-public interface DiagnosticManager {\n+ */public interface DiagnosticManager{\n     /**\n      * Retrieve the diagnostic information as a Map.\n      *\n      * @param t the exception which may be the origin of this diagnostic generation. May be null.\n      * @return the diagnostic information.\n-     */\n-    Map<String, Object> getDiagnosticInfo(Throwable t);\n+     */Map<String,Object>getDiagnosticInfo(Throwable t);\n \n     /**\n      * Dump the diagnostic information through the {@link DiagnosticReporter}.\n      *\n      * @param t the exception which may be the origin of this diagnostic generation. May be null.\n-     */\n-    void dumpDiagnosticReport(Throwable t);\n+     */void dumpDiagnosticReport(Throwable t);\n \n     /**\n      * Writer the diagnostic information to the specified writer through the {@link DiagnosticReporter}.\n      *\n      * @param t      the exception which may be the origin of this diagnostic generation. May be null.\n      * @param writer the writer to output the report to.\n-     */\n-    void writeDiagnosticReport(Throwable t, Writer writer);\n+     */void writeDiagnosticReport(Throwable t,Writer writer);\n \n     /**\n      * Register a diagnostic collector.\n@@ -45,6 +36,4 @@ public interface DiagnosticManager {\n      * @param domain                  the diagnostic collector domain which will be used root node in the diagnostic\n      *                                tree.\n      * @param diagnosticInfoCollector the diagnostic collector to register.\n-     */\n-    void registerDiagnosticInfoCollector(String domain, DiagnosticInfoCollector diagnosticInfoCollector);\n-}\n+     */void registerDiagnosticInfoCollector(String domain,DiagnosticInfoCollector diagnosticInfoCollector);}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "10",
                    "column": "60",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_random/239/DiagnosticManager.java\nindex cd69da1ec4..92b72575a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_random/239/DiagnosticManager.java\n@@ -5,9 +5,9 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.seed.diagnostic;\n \n-import java.io.Writer;\n+\n+package org.seedstack.seed.diagnostic;import java.io.Writer;\n import java.util.Map;\n import org.seedstack.seed.diagnostic.spi.DiagnosticInfoCollector;\n import org.seedstack.seed.diagnostic.spi.DiagnosticReporter;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'org' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'interface def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'interface def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_three_grams/239/DiagnosticManager.java\nindex cd69da1ec4..5a42267363 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/239/DiagnosticManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_three_grams/239/DiagnosticManager.java\n@@ -5,46 +5,49 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.seed.diagnostic;\n+package\n \n-import java.io.Writer;\n-import java.util.Map;\n-import org.seedstack.seed.diagnostic.spi.DiagnosticInfoCollector;\n-import org.seedstack.seed.diagnostic.spi.DiagnosticReporter;\n+org.seedstack.seed.diagnostic;\n \n-/**\n+ import java.io.Writer;\n+ import java.util.Map;\n+ import org.seedstack.seed.diagnostic.spi.DiagnosticInfoCollector;\n+ import org.seedstack.seed.diagnostic.spi.DiagnosticReporter;\n+\n+ /**\n  * The diagnostic manager enables to access diagnostic information or write it somewhere.\n  */\n-public interface DiagnosticManager {\n-    /**\n+ public interface DiagnosticManager {\n+     /**\n      * Retrieve the diagnostic information as a Map.\n      *\n      * @param t the exception which may be the origin of this diagnostic generation. May be null.\n      * @return the diagnostic information.\n      */\n-    Map<String, Object> getDiagnosticInfo(Throwable t);\n+     Map<String, Object> getDiagnosticInfo(Throwable t);\n \n-    /**\n+     /**\n      * Dump the diagnostic information through the {@link DiagnosticReporter}.\n      *\n      * @param t the exception which may be the origin of this diagnostic generation. May be null.\n      */\n-    void dumpDiagnosticReport(Throwable t);\n+     void dumpDiagnosticReport(Throwable t);\n \n-    /**\n+     /**\n      * Writer the diagnostic information to the specified writer through the {@link DiagnosticReporter}.\n      *\n      * @param t      the exception which may be the origin of this diagnostic generation. May be null.\n      * @param writer the writer to output the report to.\n      */\n-    void writeDiagnosticReport(Throwable t, Writer writer);\n+     void writeDiagnosticReport(Throwable t, Writer writer);\n \n-    /**\n+     /**\n      * Register a diagnostic collector.\n      *\n      * @param domain                  the diagnostic collector domain which will be used root node in the diagnostic\n      *                                tree.\n      * @param diagnosticInfoCollector the diagnostic collector to register.\n      */\n-    void registerDiagnosticInfoCollector(String domain, DiagnosticInfoCollector diagnosticInfoCollector);\n-}\n+     void registerDiagnosticInfoCollector(String domain, DiagnosticInfoCollector diagnosticInfoCollector);\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 22
        }
    ]
}