{
    "error_id": "102",
    "information": {
        "errors": [
            {
                "line": "162",
                "column": "43",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    StorageFile storageFile = (StorageFile)o;\n    return\n        Objects.equals(this.isFolder, storageFile.isFolder) &&\n        Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/102/StorageFile.java\nindex 6a3ebb4e23..613f6fc614 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/102/StorageFile.java\n@@ -159,7 +159,7 @@ public class StorageFile {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StorageFile storageFile = (StorageFile)o;\n+    StorageFile storageFile = (StorageFile) o;\n     return\n         Objects.equals(this.isFolder, storageFile.isFolder) &&\n         Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/102/StorageFile.java\nindex 6a3ebb4e23..29dbc4160e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/102/StorageFile.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,125 +50,131 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"File or folder information.\")\n public class StorageFile {\n-    @SerializedName(\"IsFolder\")\n-    private Boolean isFolder = null;\n+  @SerializedName(\"IsFolder\")\n+  private Boolean isFolder = null;\n \n-    @SerializedName(\"ModifiedDate\")\n-    private OffsetDateTime modifiedDate = null;\n+  @SerializedName(\"ModifiedDate\")\n+  private OffsetDateTime modifiedDate = null;\n \n-    @SerializedName(\"Name\")\n-    private String name = null;\n+  @SerializedName(\"Name\")\n+  private String name = null;\n \n-    @SerializedName(\"Path\")\n-    private String path = null;\n+  @SerializedName(\"Path\")\n+  private String path = null;\n \n-    @SerializedName(\"Size\")\n-    private Integer size = null;\n-    public StorageFile isFolder(Boolean isFolder) {\n-        this.isFolder = isFolder;\n-        return this;\n-    }\n+  @SerializedName(\"Size\")\n+  private Integer size = null;\n \n-    /**\n-     * True if it is a folder.\n-    * @return isFolder\n-    **/\n-    @ApiModelProperty(value = \"True if it is a folder.\")\n-    public Boolean getIsFolder() {\n-        return isFolder;\n-    }\n+  public StorageFile isFolder(Boolean isFolder) {\n+    this.isFolder = isFolder;\n+    return this;\n+  }\n \n-    public void setIsFolder(Boolean isFolder) {\n-        this.isFolder = isFolder;\n-    }\n+  /**\n+   * True if it is a folder.\n+   *\n+   * @return isFolder\n+   **/\n+  @ApiModelProperty(value = \"True if it is a folder.\")\n+  public Boolean getIsFolder() {\n+    return isFolder;\n+  }\n \n-    public StorageFile modifiedDate(OffsetDateTime modifiedDate) {\n-        this.modifiedDate = modifiedDate;\n-        return this;\n-    }\n+  public void setIsFolder(Boolean isFolder) {\n+    this.isFolder = isFolder;\n+  }\n \n-    /**\n-     * File or folder last modified DateTime.\n-    * @return modifiedDate\n-    **/\n-    @ApiModelProperty(value = \"File or folder last modified DateTime.\")\n-    public OffsetDateTime getModifiedDate() {\n-        return modifiedDate;\n-    }\n+  public StorageFile modifiedDate(OffsetDateTime modifiedDate) {\n+    this.modifiedDate = modifiedDate;\n+    return this;\n+  }\n \n-    public void setModifiedDate(OffsetDateTime modifiedDate) {\n-        this.modifiedDate = modifiedDate;\n-    }\n+  /**\n+   * File or folder last modified DateTime.\n+   *\n+   * @return modifiedDate\n+   **/\n+  @ApiModelProperty(value = \"File or folder last modified DateTime.\")\n+  public OffsetDateTime getModifiedDate() {\n+    return modifiedDate;\n+  }\n \n-    public StorageFile name(String name) {\n-        this.name = name;\n-        return this;\n-    }\n+  public void setModifiedDate(OffsetDateTime modifiedDate) {\n+    this.modifiedDate = modifiedDate;\n+  }\n \n-    /**\n-     * File or folder name.\n-    * @return name\n-    **/\n-    @ApiModelProperty(value = \"File or folder name.\")\n-    public String getName() {\n-        return name;\n-    }\n+  public StorageFile name(String name) {\n+    this.name = name;\n+    return this;\n+  }\n \n-    public void setName(String name) {\n-        this.name = name;\n-    }\n+  /**\n+   * File or folder name.\n+   *\n+   * @return name\n+   **/\n+  @ApiModelProperty(value = \"File or folder name.\")\n+  public String getName() {\n+    return name;\n+  }\n \n-    public StorageFile path(String path) {\n-        this.path = path;\n-        return this;\n-    }\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n \n-    /**\n-     * File or folder path.\n-    * @return path\n-    **/\n-    @ApiModelProperty(value = \"File or folder path.\")\n-    public String getPath() {\n-        return path;\n-    }\n+  public StorageFile path(String path) {\n+    this.path = path;\n+    return this;\n+  }\n \n-    public void setPath(String path) {\n-        this.path = path;\n-    }\n+  /**\n+   * File or folder path.\n+   *\n+   * @return path\n+   **/\n+  @ApiModelProperty(value = \"File or folder path.\")\n+  public String getPath() {\n+    return path;\n+  }\n \n-    public StorageFile size(Integer size) {\n-        this.size = size;\n-        return this;\n-    }\n+  public void setPath(String path) {\n+    this.path = path;\n+  }\n \n-    /**\n-     * File or folder size.\n-    * @return size\n-    **/\n-    @ApiModelProperty(value = \"File or folder size.\")\n-    public Integer getSize() {\n-        return size;\n-    }\n+  public StorageFile size(Integer size) {\n+    this.size = size;\n+    return this;\n+  }\n \n-    public void setSize(Integer size) {\n-        this.size = size;\n-    }\n+  /**\n+   * File or folder size.\n+   *\n+   * @return size\n+   **/\n+  @ApiModelProperty(value = \"File or folder size.\")\n+  public Integer getSize() {\n+    return size;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    StorageFile storageFile = (StorageFile)o;\n+  public void setSize(Integer size) {\n+    this.size = size;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    StorageFile storageFile = (StorageFile) o;\n     return\n         Objects.equals(this.isFolder, storageFile.isFolder) &&\n-        Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n-        Objects.equals(this.name, storageFile.name) &&\n-        Objects.equals(this.path, storageFile.path) &&\n-        Objects.equals(this.size, storageFile.size);\n+            Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n+            Objects.equals(this.name, storageFile.name) &&\n+            Objects.equals(this.path, storageFile.path) &&\n+            Objects.equals(this.size, storageFile.size);\n   }\n \n   @Override\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "164",
                    "column": "39",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/102/StorageFile.java\nindex 6a3ebb4e23..89ca8ef132 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/102/StorageFile.java\n@@ -61,7 +61,8 @@ public class StorageFile {\n \n     @SerializedName(\"Size\")\n     private Integer size = null;\n-    public StorageFile isFolder(Boolean isFolder) {\n+\n+public StorageFile isFolder(Boolean isFolder) {\n         this.isFolder = isFolder;\n         return this;\n     }\n@@ -155,13 +156,13 @@ public class StorageFile {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StorageFile storageFile = (StorageFile)o;\n-    return\n-        Objects.equals(this.isFolder, storageFile.isFolder) &&\n+\n+StorageFile storageFile = (StorageFile)o;\n+    return Objects.equals(this.isFolder, storageFile.isFolder) &&\n         Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n         Objects.equals(this.name, storageFile.name) &&\n         Objects.equals(this.path, storageFile.path) &&\n@@ -196,4 +197,4 @@ public class StorageFile {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/102/StorageFile.java\nindex 6a3ebb4e23..f76d505483 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/102/StorageFile.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * File or folder information.\n  */\n+\n+\n @ApiModel(description = \"File or folder information.\")\n+\n public class StorageFile {\n     @SerializedName(\"IsFolder\")\n     private Boolean isFolder = null;\n@@ -61,120 +64,145 @@ public class StorageFile {\n \n     @SerializedName(\"Size\")\n     private Integer size = null;\n+\n     public StorageFile isFolder(Boolean isFolder) {\n-        this.isFolder = isFolder;\n-        return this;\n+    this.isFolder = isFolder;\n+    return this;\n     }\n \n     /**\n      * True if it is a folder.\n     * @return isFolder\n     **/\n+\n+\n     @ApiModelProperty(value = \"True if it is a folder.\")\n     public Boolean getIsFolder() {\n-        return isFolder;\n+    return isFolder;\n     }\n \n+\n     public void setIsFolder(Boolean isFolder) {\n-        this.isFolder = isFolder;\n+    this.isFolder = isFolder;\n     }\n \n+\n     public StorageFile modifiedDate(OffsetDateTime modifiedDate) {\n-        this.modifiedDate = modifiedDate;\n-        return this;\n+    this.modifiedDate = modifiedDate;\n+    return this;\n     }\n \n     /**\n      * File or folder last modified DateTime.\n     * @return modifiedDate\n     **/\n+\n+\n     @ApiModelProperty(value = \"File or folder last modified DateTime.\")\n     public OffsetDateTime getModifiedDate() {\n-        return modifiedDate;\n+    return modifiedDate;\n     }\n \n+\n     public void setModifiedDate(OffsetDateTime modifiedDate) {\n-        this.modifiedDate = modifiedDate;\n+    this.modifiedDate = modifiedDate;\n     }\n \n+\n     public StorageFile name(String name) {\n-        this.name = name;\n-        return this;\n+    this.name = name;\n+    return this;\n     }\n \n     /**\n      * File or folder name.\n     * @return name\n     **/\n+\n+\n     @ApiModelProperty(value = \"File or folder name.\")\n     public String getName() {\n-        return name;\n+    return name;\n     }\n \n+\n     public void setName(String name) {\n-        this.name = name;\n+    this.name = name;\n     }\n \n+\n     public StorageFile path(String path) {\n-        this.path = path;\n-        return this;\n+    this.path = path;\n+    return this;\n     }\n \n     /**\n      * File or folder path.\n     * @return path\n     **/\n+\n+\n     @ApiModelProperty(value = \"File or folder path.\")\n     public String getPath() {\n-        return path;\n+    return path;\n     }\n \n+\n     public void setPath(String path) {\n-        this.path = path;\n+    this.path = path;\n     }\n \n+\n     public StorageFile size(Integer size) {\n-        this.size = size;\n-        return this;\n+    this.size = size;\n+    return this;\n     }\n \n     /**\n      * File or folder size.\n     * @return size\n     **/\n+\n+\n     @ApiModelProperty(value = \"File or folder size.\")\n     public Integer getSize() {\n-        return size;\n+    return size;\n     }\n \n+\n     public void setSize(Integer size) {\n-        this.size = size;\n+    this.size = size;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    StorageFile storageFile = (StorageFile)o;\n-    return\n-        Objects.equals(this.isFolder, storageFile.isFolder) &&\n+\n+        StorageFile storageFile = (StorageFile) o;\n+        return Objects.equals(this.isFolder, storageFile.isFolder) &&\n         Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n         Objects.equals(this.name, storageFile.name) &&\n-        Objects.equals(this.path, storageFile.path) &&\n-        Objects.equals(this.size, storageFile.size);\n-  }\n+            Objects.equals(this.path, storageFile.path) &&\n+            Objects.equals(this.size, storageFile.size);\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(isFolder, modifiedDate, name, path, size);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class StorageFile {\\n\");\n     sb.append(\"    isFolder: \").append(toIndentedString(isFolder)).append(\"\\n\");\n@@ -184,16 +212,19 @@ public class StorageFile {\n     sb.append(\"    size: \").append(toIndentedString(size)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 69
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/102/StorageFile.java\nindex 6a3ebb4e23..613f6fc614 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/102/StorageFile.java\n@@ -159,7 +159,7 @@ public class StorageFile {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StorageFile storageFile = (StorageFile)o;\n+    StorageFile storageFile = (StorageFile) o;\n     return\n         Objects.equals(this.isFolder, storageFile.isFolder) &&\n         Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/102/StorageFile.java\nindex 6a3ebb4e23..66588034fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/102/StorageFile.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/102/StorageFile.java\n@@ -159,7 +159,9 @@ public class StorageFile {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    StorageFile storageFile = (StorageFile)o;\n+    StorageFile storageFile = (StorageFile\n+\n+    ) o;\n     return\n         Objects.equals(this.isFolder, storageFile.isFolder) &&\n         Objects.equals(this.modifiedDate, storageFile.modifiedDate) &&\n",
            "diff_size": 3
        }
    ]
}