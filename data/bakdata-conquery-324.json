{
    "error_id": "324",
    "information": {
        "errors": [
            {
                "line": "31",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\tif (row[yearColumn] == null || row[quarterColumn] == null) {\n\t\t\treturn NULL;\n\t\t} else {\n\t\t\treturn Collections.singletonList(\n\t\t\t\tCDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n\t\t\t\t\t\tInteger.parseInt(row[yearColumn]),",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 3 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/324/QuarterToFirstDayOutput.java\nindex 8d3c2e5295..5dbc9b2a21 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/324/QuarterToFirstDayOutput.java\n@@ -17,29 +17,29 @@ import lombok.Data;\n @CPSType(id = \"QUARTER_TO_FIRST_DAY\", base = Output.class)\n public class QuarterToFirstDayOutput extends Output {\n \n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Min(0)\n-\tprivate int yearColumn;\n-\t@Min(0)\n-\tprivate int quarterColumn;\n-\n-\t@Override\n-\tpublic List<Object> createOutput(Parser<?> type, String[] row, int source, long sourceLine) {\n-\t\tif (row[yearColumn] == null || row[quarterColumn] == null) {\n-\t\t\treturn NULL;\n-\t\t} else {\n-\t\t\treturn Collections.singletonList(\n-\t\t\t\tCDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n-\t\t\t\t\t\tInteger.parseInt(row[yearColumn]),\n-\t\t\t\t\t\tInteger.parseInt(row[quarterColumn]))\n-\t\t\t\t)\n-\t\t\t);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic MajorTypeId getResultType() {\n-\t\treturn MajorTypeId.DATE;\n-\t}\n+    private static final long serialVersionUID = 1L;\n+\n+    @Min(0)\n+    private int yearColumn;\n+    @Min(0)\n+    private int quarterColumn;\n+\n+    @Override\n+    public List<Object> createOutput(Parser<?> type, String[] row, int source, long sourceLine) {\n+        if (row[yearColumn] == null || row[quarterColumn] == null) {\n+            return NULL;\n+        } else {\n+            return Collections.singletonList(\n+                CDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n+                    Integer.parseInt(row[yearColumn]),\n+                    Integer.parseInt(row[quarterColumn]))\n+                )\n+            );\n+        }\n+    }\n+\n+    @Override\n+    public MajorTypeId getResultType() {\n+        return MajorTypeId.DATE;\n+    }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/324/QuarterToFirstDayOutput.java\nindex 8d3c2e5295..15a2dcccd7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/324/QuarterToFirstDayOutput.java\n@@ -28,7 +28,8 @@ public class QuarterToFirstDayOutput extends Output {\n \tpublic List<Object> createOutput(Parser<?> type, String[] row, int source, long sourceLine) {\n \t\tif (row[yearColumn] == null || row[quarterColumn] == null) {\n \t\t\treturn NULL;\n-\t\t} else {\n+\t\t}\n+else {\n \t\t\treturn Collections.singletonList(\n \t\t\t\tCDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n \t\t\t\t\t\tInteger.parseInt(row[yearColumn]),\n@@ -42,4 +43,4 @@ public class QuarterToFirstDayOutput extends Output {\n \tpublic MajorTypeId getResultType() {\n \t\treturn MajorTypeId.DATE;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/324/QuarterToFirstDayOutput.java\nindex 8d3c2e5295..49ec5fcfb2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/324/QuarterToFirstDayOutput.java\n@@ -2,44 +2,35 @@ package com.bakdata.conquery.models.preproc.outputs;\n \n import java.util.Collections;\n import java.util.List;\n-\n import javax.validation.constraints.Min;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.common.CDate;\n import com.bakdata.conquery.models.common.QuarterUtils;\n import com.bakdata.conquery.models.types.MajorTypeId;\n import com.bakdata.conquery.models.types.parser.Parser;\n-\n import lombok.Data;\n \n @Data\n-@CPSType(id = \"QUARTER_TO_FIRST_DAY\", base = Output.class)\n+@CPSType(id= \"QUARTER_TO_FIRST_DAY\", base= Output.class)\n public class QuarterToFirstDayOutput extends Output {\n \n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Min(0)\n-\tprivate int yearColumn;\n-\t@Min(0)\n-\tprivate int quarterColumn;\n-\n-\t@Override\n-\tpublic List<Object> createOutput(Parser<?> type, String[] row, int source, long sourceLine) {\n-\t\tif (row[yearColumn] == null || row[quarterColumn] == null) {\n-\t\t\treturn NULL;\n-\t\t} else {\n-\t\t\treturn Collections.singletonList(\n-\t\t\t\tCDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n-\t\t\t\t\t\tInteger.parseInt(row[yearColumn]),\n-\t\t\t\t\t\tInteger.parseInt(row[quarterColumn]))\n-\t\t\t\t)\n-\t\t\t);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic MajorTypeId getResultType() {\n-\t\treturn MajorTypeId.DATE;\n-\t}\n-}\n+    private static final long serialVersionUID = 1L;\n+    @Min(0)\n+    private int yearColumn;\n+    @Min(0)\n+    private int quarterColumn;\n+    @Override\n+    public List<Object> createOutput(Parser<?> type, String[] row, int source, long sourceLine) {\n+        if(row[yearColumn]== null || row[quarterColumn]== null) {\n+            return NULL;\n+        }\n+        else {\n+            return Collections.singletonList(CDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(Integer.parseInt(row[yearColumn]), Integer.parseInt(row[quarterColumn]))));\n+        }\n+    }\n+\n+    @Override\n+    public MajorTypeId getResultType() {\n+        return MajorTypeId.DATE;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 3 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/324/QuarterToFirstDayOutput.java\nindex 8d3c2e5295..2fe29e1a82 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/324/QuarterToFirstDayOutput.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/324/QuarterToFirstDayOutput.java\n@@ -28,18 +28,20 @@ public class QuarterToFirstDayOutput extends Output {\n \tpublic List<Object> createOutput(Parser<?> type, String[] row, int source, long sourceLine) {\n \t\tif (row[yearColumn] == null || row[quarterColumn] == null) {\n \t\t\treturn NULL;\n-\t\t} else {\n-\t\t\treturn Collections.singletonList(\n-\t\t\t\tCDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n-\t\t\t\t\t\tInteger.parseInt(row[yearColumn]),\n-\t\t\t\t\t\tInteger.parseInt(row[quarterColumn]))\n-\t\t\t\t)\n-\t\t\t);\n \t\t}\n-\t}\n+\t\telse {\n+\t\t\t\treturn Collections.singletonList(\n+\t\t\t\t\tCDate.ofLocalDate(QuarterUtils.getFirstDayOfQuarter(\n+\t\t\t\t\t\t\tInteger.parseInt(row[yearColumn]),\n+\t\t\t\t\t\t\tInteger.parseInt(row[quarterColumn]))\n+\t\t\t\t\t)\n+\t\t\t\t);\n+\t\t\t}\n+\t\t}\n \n-\t@Override\n-\tpublic MajorTypeId getResultType() {\n-\t\treturn MajorTypeId.DATE;\n-\t}\n-}\n+\t\t@Override\n+\t\tpublic MajorTypeId getResultType() {\n+\t\t\treturn MajorTypeId.DATE;\n+\t\t}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 22
        }
    ]
}