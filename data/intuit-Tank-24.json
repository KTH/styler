{
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 151).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import javax.xml.bind.annotation.XmlType;\n\n@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\", \"cookieValue\", \"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlRootElement\npublic class CookieStep extends TestStep {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "column": "14",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/24/CookieStep.java\nindex 4176e44d89..41b75cbca8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/24/CookieStep.java\n@@ -19,95 +19,97 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\", \"cookieValue\", \"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n-@XmlRootElement\n-public class CookieStep extends TestStep {\n+@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\",\n+\"cookieValue\",\"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+ @XmlAccessorType(XmlAccessType.FIELD)\n+ @XmlRootElement\n+ public class CookieStep extends TestStep {\n \n-    @XmlElement\n-    private String cookieName = \"\";\n+     @XmlElement\n+     private String cookieName = \"\";\n \n-    @XmlElement\n-    private String cookieValue = \"\";\n+     @XmlElement\n+     private String cookieValue = \"\";\n \n-    @XmlElement\n-    private String cookieDomain = \"\";\n+     @XmlElement\n+     private String cookieDomain = \"\";\n \n-    @XmlElement\n-    private String cookiePath = \"/\";\n+     @XmlElement\n+     private String cookiePath = \"/\";\n \n-    /**\n+     /**\n      * @return the cookieName\n      */\n-    public String getCookieName() {\n-        return cookieName;\n-    }\n+     public String getCookieName() {\n+         return cookieName;\n+     }\n \n-    /**\n+     /**\n      * @param cookieName\n      *            the cookieName to set\n      */\n-    public void setCookieName(String cookieName) {\n-        this.cookieName = cookieName;\n-    }\n+     public void setCookieName(String cookieName) {\n+         this.cookieName = cookieName;\n+     }\n \n-    /**\n+     /**\n      * @return the cookieValue\n      */\n-    public String getCookieValue() {\n-        return cookieValue;\n-    }\n+     public String getCookieValue() {\n+         return cookieValue;\n+     }\n \n-    /**\n+     /**\n      * @param cookieValue\n      *            the cookieValue to set\n      */\n-    public void setCookieValue(String cookieValue) {\n-        this.cookieValue = cookieValue;\n-    }\n+     public void setCookieValue(String cookieValue) {\n+         this.cookieValue = cookieValue;\n+     }\n \n-    /**\n+     /**\n      * @return the cookieDomain\n      */\n-    public String getCookieDomain() {\n-        return cookieDomain;\n-    }\n+     public String getCookieDomain() {\n+         return cookieDomain;\n+     }\n \n-    /**\n+     /**\n      * @return the cookiePath\n      */\n-    public String getCookiePath() {\n-        return cookiePath;\n-    }\n+     public String getCookiePath() {\n+         return cookiePath;\n+     }\n \n-    /**\n+     /**\n      * @param cookiePath\n      *            the cookiePath to set\n      */\n-    public void setCookiePath(String cookiePath) {\n-        this.cookiePath = cookiePath;\n-    }\n+     public void setCookiePath(String cookiePath) {\n+         this.cookiePath = cookiePath;\n+     }\n \n-    /**\n+     /**\n      * @param cookieDomain\n      *            the cookieDomain to set\n      */\n-    public void setCookieDomain(String cookieDomain) {\n-        this.cookieDomain = cookieDomain;\n-    }\n+     public void setCookieDomain(String cookieDomain) {\n+         this.cookieDomain = cookieDomain;\n+     }\n \n-    @Override\n-    public String getInfo() {\n-        return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n-                .append(\" = \").append(cookieValue).toString();\n-    }\n+     @Override\n+     public String getInfo() {\n+         return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n+                 .append(\" = \").append(cookieValue).toString();\n+     }\n \n-    /**\n+     /**\n      * @inheritDoc\n      */\n-    @Override\n-    public String toString() {\n-        return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n-    }\n+     @Override\n+     public String toString() {\n+         return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/24/CookieStep.java\nindex 4176e44d89..50da93e78b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/24/CookieStep.java\n@@ -19,95 +19,92 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\", \"cookieValue\", \"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name = \"cookieStep\", propOrder = {\"cookieName\", \"cookieValue\", \"cookieDomain\",\n+  \"cookiePath\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class CookieStep extends TestStep {\n \n-    @XmlElement\n-    private String cookieName = \"\";\n-\n-    @XmlElement\n-    private String cookieValue = \"\";\n-\n-    @XmlElement\n-    private String cookieDomain = \"\";\n-\n-    @XmlElement\n-    private String cookiePath = \"/\";\n-\n-    /**\n-     * @return the cookieName\n-     */\n-    public String getCookieName() {\n-        return cookieName;\n-    }\n-\n-    /**\n-     * @param cookieName\n-     *            the cookieName to set\n-     */\n-    public void setCookieName(String cookieName) {\n-        this.cookieName = cookieName;\n-    }\n-\n-    /**\n-     * @return the cookieValue\n-     */\n-    public String getCookieValue() {\n-        return cookieValue;\n-    }\n-\n-    /**\n-     * @param cookieValue\n-     *            the cookieValue to set\n-     */\n-    public void setCookieValue(String cookieValue) {\n-        this.cookieValue = cookieValue;\n-    }\n-\n-    /**\n-     * @return the cookieDomain\n-     */\n-    public String getCookieDomain() {\n-        return cookieDomain;\n-    }\n-\n-    /**\n-     * @return the cookiePath\n-     */\n-    public String getCookiePath() {\n-        return cookiePath;\n-    }\n-\n-    /**\n-     * @param cookiePath\n-     *            the cookiePath to set\n-     */\n-    public void setCookiePath(String cookiePath) {\n-        this.cookiePath = cookiePath;\n-    }\n-\n-    /**\n-     * @param cookieDomain\n-     *            the cookieDomain to set\n-     */\n-    public void setCookieDomain(String cookieDomain) {\n-        this.cookieDomain = cookieDomain;\n-    }\n-\n-    @Override\n-    public String getInfo() {\n-        return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n-                .append(\" = \").append(cookieValue).toString();\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public String toString() {\n-        return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n-    }\n+  @XmlElement\n+  private String cookieName = \"\";\n+\n+  @XmlElement\n+  private String cookieValue = \"\";\n+\n+  @XmlElement\n+  private String cookieDomain = \"\";\n+\n+  @XmlElement\n+  private String cookiePath = \"/\";\n+\n+  /**\n+   * @return the cookieName\n+   */\n+  public String getCookieName() {\n+    return cookieName;\n+  }\n+\n+  /**\n+   * @param cookieName the cookieName to set\n+   */\n+  public void setCookieName(String cookieName) {\n+    this.cookieName = cookieName;\n+  }\n+\n+  /**\n+   * @return the cookieValue\n+   */\n+  public String getCookieValue() {\n+    return cookieValue;\n+  }\n+\n+  /**\n+   * @param cookieValue the cookieValue to set\n+   */\n+  public void setCookieValue(String cookieValue) {\n+    this.cookieValue = cookieValue;\n+  }\n+\n+  /**\n+   * @return the cookieDomain\n+   */\n+  public String getCookieDomain() {\n+    return cookieDomain;\n+  }\n+\n+  /**\n+   * @return the cookiePath\n+   */\n+  public String getCookiePath() {\n+    return cookiePath;\n+  }\n+\n+  /**\n+   * @param cookiePath the cookiePath to set\n+   */\n+  public void setCookiePath(String cookiePath) {\n+    this.cookiePath = cookiePath;\n+  }\n+\n+  /**\n+   * @param cookieDomain the cookieDomain to set\n+   */\n+  public void setCookieDomain(String cookieDomain) {\n+    this.cookieDomain = cookieDomain;\n+  }\n+\n+  @Override\n+  public String getInfo() {\n+    return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n+      .append(\" = \").append(cookieValue).toString();\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public String toString() {\n+    return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n+  }\n \n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/24/CookieStep.java\nindex 4176e44d89..de44ebd2ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/24/CookieStep.java\n@@ -110,4 +110,4 @@ public class CookieStep extends TestStep {\n         return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/24/CookieStep.java\nindex 4176e44d89..323da03149 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/24/CookieStep.java\n@@ -13,6 +13,8 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n@@ -47,6 +49,8 @@ public class CookieStep extends TestStep {\n      * @param cookieName\n      *            the cookieName to set\n      */\n+\n+\n     public void setCookieName(String cookieName) {\n         this.cookieName = cookieName;\n     }\n@@ -54,6 +58,8 @@ public class CookieStep extends TestStep {\n     /**\n      * @return the cookieValue\n      */\n+\n+\n     public String getCookieValue() {\n         return cookieValue;\n     }\n@@ -62,6 +68,8 @@ public class CookieStep extends TestStep {\n      * @param cookieValue\n      *            the cookieValue to set\n      */\n+\n+\n     public void setCookieValue(String cookieValue) {\n         this.cookieValue = cookieValue;\n     }\n@@ -69,6 +77,8 @@ public class CookieStep extends TestStep {\n     /**\n      * @return the cookieDomain\n      */\n+\n+\n     public String getCookieDomain() {\n         return cookieDomain;\n     }\n@@ -76,6 +86,8 @@ public class CookieStep extends TestStep {\n     /**\n      * @return the cookiePath\n      */\n+\n+\n     public String getCookiePath() {\n         return cookiePath;\n     }\n@@ -84,6 +96,8 @@ public class CookieStep extends TestStep {\n      * @param cookiePath\n      *            the cookiePath to set\n      */\n+\n+\n     public void setCookiePath(String cookiePath) {\n         this.cookiePath = cookiePath;\n     }\n@@ -92,22 +106,26 @@ public class CookieStep extends TestStep {\n      * @param cookieDomain\n      *            the cookieDomain to set\n      */\n+\n+\n     public void setCookieDomain(String cookieDomain) {\n         this.cookieDomain = cookieDomain;\n     }\n \n+\n     @Override\n     public String getInfo() {\n-        return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n-                .append(\" = \").append(cookieValue).toString();\n+        return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName).append(\" = \").append(cookieValue).toString();\n     }\n \n     /**\n      * @inheritDoc\n      */\n+\n+\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "column": "14",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/24/CookieStep.java\nindex 4176e44d89..41b75cbca8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/24/CookieStep.java\n@@ -19,95 +19,97 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\", \"cookieValue\", \"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n-@XmlRootElement\n-public class CookieStep extends TestStep {\n+@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\",\n+\"cookieValue\",\"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+ @XmlAccessorType(XmlAccessType.FIELD)\n+ @XmlRootElement\n+ public class CookieStep extends TestStep {\n \n-    @XmlElement\n-    private String cookieName = \"\";\n+     @XmlElement\n+     private String cookieName = \"\";\n \n-    @XmlElement\n-    private String cookieValue = \"\";\n+     @XmlElement\n+     private String cookieValue = \"\";\n \n-    @XmlElement\n-    private String cookieDomain = \"\";\n+     @XmlElement\n+     private String cookieDomain = \"\";\n \n-    @XmlElement\n-    private String cookiePath = \"/\";\n+     @XmlElement\n+     private String cookiePath = \"/\";\n \n-    /**\n+     /**\n      * @return the cookieName\n      */\n-    public String getCookieName() {\n-        return cookieName;\n-    }\n+     public String getCookieName() {\n+         return cookieName;\n+     }\n \n-    /**\n+     /**\n      * @param cookieName\n      *            the cookieName to set\n      */\n-    public void setCookieName(String cookieName) {\n-        this.cookieName = cookieName;\n-    }\n+     public void setCookieName(String cookieName) {\n+         this.cookieName = cookieName;\n+     }\n \n-    /**\n+     /**\n      * @return the cookieValue\n      */\n-    public String getCookieValue() {\n-        return cookieValue;\n-    }\n+     public String getCookieValue() {\n+         return cookieValue;\n+     }\n \n-    /**\n+     /**\n      * @param cookieValue\n      *            the cookieValue to set\n      */\n-    public void setCookieValue(String cookieValue) {\n-        this.cookieValue = cookieValue;\n-    }\n+     public void setCookieValue(String cookieValue) {\n+         this.cookieValue = cookieValue;\n+     }\n \n-    /**\n+     /**\n      * @return the cookieDomain\n      */\n-    public String getCookieDomain() {\n-        return cookieDomain;\n-    }\n+     public String getCookieDomain() {\n+         return cookieDomain;\n+     }\n \n-    /**\n+     /**\n      * @return the cookiePath\n      */\n-    public String getCookiePath() {\n-        return cookiePath;\n-    }\n+     public String getCookiePath() {\n+         return cookiePath;\n+     }\n \n-    /**\n+     /**\n      * @param cookiePath\n      *            the cookiePath to set\n      */\n-    public void setCookiePath(String cookiePath) {\n-        this.cookiePath = cookiePath;\n-    }\n+     public void setCookiePath(String cookiePath) {\n+         this.cookiePath = cookiePath;\n+     }\n \n-    /**\n+     /**\n      * @param cookieDomain\n      *            the cookieDomain to set\n      */\n-    public void setCookieDomain(String cookieDomain) {\n-        this.cookieDomain = cookieDomain;\n-    }\n+     public void setCookieDomain(String cookieDomain) {\n+         this.cookieDomain = cookieDomain;\n+     }\n \n-    @Override\n-    public String getInfo() {\n-        return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n-                .append(\" = \").append(cookieValue).toString();\n-    }\n+     @Override\n+     public String getInfo() {\n+         return new StringBuilder().append(\"Set Cookie: domain: \").append(cookieDomain).append(\"; \").append(cookieName)\n+                 .append(\" = \").append(cookieValue).toString();\n+     }\n \n-    /**\n+     /**\n      * @inheritDoc\n      */\n-    @Override\n-    public String toString() {\n-        return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n-    }\n+     @Override\n+     public String toString() {\n+         return getClass().getSimpleName() + \" : \" + cookieName + \"=\" + cookieValue;\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "column": "89",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "89",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "22",
                    "column": "105",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "22",
                    "column": "116",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "116",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/24/CookieStep.java\nindex 4176e44d89..1746754c73 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/24/CookieStep.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/24/CookieStep.java\n@@ -19,8 +19,8 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\", \"cookieValue\", \"cookieDomain\", \"cookiePath\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"cookieStep\", propOrder = { \"cookieName\", \"cookieValue\", \"cookieDomain\" ,\"cookiePath\" } , namespace=HarnessDataNamespace.\n+NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class CookieStep extends TestStep {\n \n",
            "diff_size": 2
        }
    ]
}