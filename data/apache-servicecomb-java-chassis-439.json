{
    "error_id": "439",
    "information": {
        "errors": [
            {
                "line": "179",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        LOGGER\n            .warn(\n                \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",\n                key, cseKey);\n      }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/439/ConfigUtil.java\nindex 8f8922dcb9..5b1f45a25a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/439/ConfigUtil.java\n@@ -176,7 +176,7 @@ public final class ConfigUtil {\n       } else {\n         LOGGER\n             .warn(\n-                \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",\n+            \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",\n                 key, cseKey);\n       }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/439/ConfigUtil.java\nindex 8f8922dcb9..f358667aa3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/439/ConfigUtil.java\n@@ -183,16 +183,16 @@ public final class ConfigUtil {\n   }\n \n   private static void duplicateServiceCombConfigToCse(ConcurrentCompositeConfiguration compositeConfiguration,\n-      AbstractConfiguration source,\n-      String sourceName) {\n+                                                      AbstractConfiguration source,\n+                                                      String sourceName) {\n     duplicateServiceCombConfigToCse(source);\n \n     compositeConfiguration.addConfiguration(source, sourceName);\n   }\n \n   private static void duplicateServiceCombConfigToCseAtFront(ConcurrentCompositeConfiguration compositeConfiguration,\n-      AbstractConfiguration source,\n-      String sourceName) {\n+                                                             AbstractConfiguration source,\n+                                                             String sourceName) {\n     duplicateServiceCombConfigToCse(source);\n \n     compositeConfiguration.addConfigurationAtFront(source, sourceName);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/439/ConfigUtil.java\nindex 8f8922dcb9..b968401f0c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/439/ConfigUtil.java\n@@ -130,7 +130,7 @@ public final class ConfigUtil {\n     duplicateServiceCombConfigToCse(config,\n         convertEnvVariable(new ConcurrentMapConfiguration(new EnvironmentConfiguration())),\n         \"configFromEnvironment\");\n-    // If there is extra configurations, add it into config.\n+// If there is extra configurations, add it into config.\n     EXTRA_CONFIG_MAP.entrySet()\n         .stream()\n         .filter(mapEntry -> !mapEntry.getValue().isEmpty())\n@@ -183,16 +183,14 @@ public final class ConfigUtil {\n   }\n \n   private static void duplicateServiceCombConfigToCse(ConcurrentCompositeConfiguration compositeConfiguration,\n-      AbstractConfiguration source,\n-      String sourceName) {\n+      AbstractConfiguration source, String sourceName) {\n     duplicateServiceCombConfigToCse(source);\n \n     compositeConfiguration.addConfiguration(source, sourceName);\n   }\n \n   private static void duplicateServiceCombConfigToCseAtFront(ConcurrentCompositeConfiguration compositeConfiguration,\n-      AbstractConfiguration source,\n-      String sourceName) {\n+      AbstractConfiguration source, String sourceName) {\n     duplicateServiceCombConfigToCse(source);\n \n     compositeConfiguration.addConfigurationAtFront(source, sourceName);\n@@ -216,8 +214,7 @@ public final class ConfigUtil {\n   }\n \n   private static void createDynamicWatchedConfiguration(\n-      ConcurrentCompositeConfiguration localConfiguration,\n-      ConfigCenterConfigurationSource configCenterConfigurationSource) {\n+      ConcurrentCompositeConfiguration localConfiguration, ConfigCenterConfigurationSource configCenterConfigurationSource) {\n     ConcurrentMapConfiguration injectConfig = new ConcurrentMapConfiguration();\n     localConfiguration.addConfigurationAtFront(injectConfig, \"extraInjectConfig\");\n     configCenterConfigurationSource.addUpdateListener(new ServiceCombPropertyUpdateListener(injectConfig));\n@@ -316,4 +313,4 @@ public final class ConfigUtil {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "179",
                    "column": "124",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "179",
                    "column": "128",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/439/ConfigUtil.java\nindex 8f8922dcb9..90d1fd35f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/439/ConfigUtil.java\n@@ -176,8 +176,7 @@ public final class ConfigUtil {\n       } else {\n         LOGGER\n             .warn(\n-                \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",\n-                key, cseKey);\n+                \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",key,cseKey);\n       }\n     }\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/439/ConfigUtil.java\nindex 8f8922dcb9..5b1f45a25a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/439/ConfigUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/439/ConfigUtil.java\n@@ -176,7 +176,7 @@ public final class ConfigUtil {\n       } else {\n         LOGGER\n             .warn(\n-                \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",\n+            \"Key {} with an ambiguous item {} exists, please use the same prefix or will get unexpected merged value.\",\n                 key, cseKey);\n       }\n     }\n",
            "diff_size": 1
        }
    ]
}