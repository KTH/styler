{
    "error_id": "118",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    private VectorClockImpl(int dimensions, long initialStamp) {\n      Preconditions.checkArgument(dimensions > 0, \"Number of dimensions must be positive\");\n      this.dimensions = new long[dimensions];\n      for (int i = 0; i < dimensions; i++) {\n        this.dimensions[i] = initialStamp;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/118/VectorClock.java\nindex 4868e0beb9..8d65a0d6bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/118/VectorClock.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.time;\n \n import com.google.common.base.Preconditions;\n@@ -53,7 +54,8 @@ public interface VectorClock extends WatermarkSupplier {\n     final long[] dimensions;\n \n     private VectorClockImpl(int dimensions, long initialStamp) {\n-      Preconditions.checkArgument(dimensions > 0, \"Number of dimensions must be positive\");\n+      Preconditions\n+          .checkArgument(dimensions > 0, \"Number of dimensions must be positive\");\n       this.dimensions = new long[dimensions];\n       for (int i = 0; i < dimensions; i++) {\n         this.dimensions[i] = initialStamp;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/118/VectorClock.java\nindex 4868e0beb9..5548c6866c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/118/VectorClock.java\n@@ -108,4 +108,4 @@ public interface VectorClock extends WatermarkSupplier {\n   public default long getWatermark() {\n     return getStamp();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 92.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/118/VectorClock.java\nindex 4868e0beb9..f936aa19ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/118/VectorClock.java\n@@ -19,6 +19,8 @@ import com.google.common.base.Preconditions;\n import cz.o2.proxima.annotations.Internal;\n \n /** Vector clock implementation. */\n+\n+\n @Internal\n public interface VectorClock extends WatermarkSupplier {\n \n@@ -28,9 +30,11 @@ public interface VectorClock extends WatermarkSupplier {\n    * @param dimensions dimensions of the clock\n    * @return new instance\n    */\n-  public static VectorClock of(int dimensions) {\n+\n+\n+    public static VectorClock of(int dimensions) {\n     return of(dimensions, Long.MIN_VALUE);\n-  }\n+    }\n \n   /**\n    * Create new instance of VectorClock.\n@@ -39,73 +43,81 @@ public interface VectorClock extends WatermarkSupplier {\n    * @param initialStamp timestamp to initialize all dimensions to\n    * @return new instance\n    */\n-  public static VectorClock of(int dimensions, long initialStamp) {\n+\n+\n+    public static VectorClock of(int dimensions, long initialStamp) {\n     if (dimensions > 0) {\n-      return new VectorClockImpl(dimensions, initialStamp);\n+        return new VectorClockImpl(dimensions, initialStamp);\n     }\n     return new ProcessingTimeClock();\n-  }\n+    }\n \n-  final class VectorClockImpl implements VectorClock {\n \n-    private static final long serialVersionUID = 1L;\n+    final class VectorClockImpl implements VectorClock {\n \n+    private static final long serialVersionUID = 1L;\n     final long[] dimensions;\n \n     private VectorClockImpl(int dimensions, long initialStamp) {\n-      Preconditions.checkArgument(dimensions > 0, \"Number of dimensions must be positive\");\n-      this.dimensions = new long[dimensions];\n-      for (int i = 0; i < dimensions; i++) {\n+        Preconditions.checkArgument(dimensions > 0, \"Number of dimensions must be positive\");\n+        this.dimensions = new long[dimensions];\n+        for (int i = 0; i < dimensions; i++) {\n         this.dimensions[i] = initialStamp;\n-      }\n+        }\n     }\n \n     @Override\n     public void update(int dimension, long stamp) {\n-      if (dimensions[dimension] < stamp) {\n+        if (dimensions[dimension] < stamp) {\n         dimensions[dimension] = stamp;\n-      }\n+        }\n     }\n \n     @Override\n     public long getStamp() {\n-      long ret = Long.MAX_VALUE;\n-      for (long t : dimensions) {\n+        long ret = Long.MAX_VALUE;\n+        for (long t : dimensions) {\n         if (t < ret) {\n-          ret = t;\n+                                      ret = t;\n         }\n-      }\n-      return ret;\n+        }\n+        return ret;\n+    }\n     }\n-  }\n \n   // a fallback implementation that is used when supplied dimensions\n   // is empty\n-  final class ProcessingTimeClock implements VectorClock {\n+\n+\n+    final class ProcessingTimeClock implements VectorClock {\n \n     private static final long serialVersionUID = 1L;\n \n     @Override\n     public void update(int dimension, long stamp) {\n       // nop\n+\n     }\n \n     @Override\n     public long getStamp() {\n-      return getProcessingStamp();\n+        return getProcessingStamp();\n+    }\n     }\n-  }\n \n-  void update(int dimension, long stamp);\n+    void update(int dimension, long stamp);\n \n-  long getStamp();\n \n-  default long getProcessingStamp() {\n+    long getStamp();\n+\n+\n+    default long getProcessingStamp() {\n     return System.currentTimeMillis();\n-  }\n+    }\n \n-  @Override\n-  public default long getWatermark() {\n+\n+    @Override\n+    public default long getWatermark() {\n     return getStamp();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "column": "131",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/118/VectorClock.java\nindex 4868e0beb9..f572dac898 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/118/VectorClock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/118/VectorClock.java\n@@ -53,8 +53,7 @@ public interface VectorClock extends WatermarkSupplier {\n     final long[] dimensions;\n \n     private VectorClockImpl(int dimensions, long initialStamp) {\n-      Preconditions.checkArgument(dimensions > 0, \"Number of dimensions must be positive\");\n-      this.dimensions = new long[dimensions];\n+      Preconditions.checkArgument(dimensions > 0, \"Number of dimensions must be positive\"); this.dimensions = new long[dimensions];\n       for (int i = 0; i < dimensions; i++) {\n         this.dimensions[i] = initialStamp;\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}