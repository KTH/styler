{
    "error_id": "74",
    "information": {
        "errors": [
            {
                "line": "83",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                    if (response.status() == ResponseStatus.NOT_EXISTS) {\n                        LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n                    } else {\n                        LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n                        return Observable.just(response);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/74/HttpLoader.java\nindex b67e8f79cf..79f67882f6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/74/HttpLoader.java\n@@ -80,7 +80,7 @@ public class HttpLoader extends AbstractLoader {\n \n                     if (response.status() == ResponseStatus.NOT_EXISTS) {\n                         LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n-                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n+                        return cluster().send(newBucketConfigRequest(VERBOSE_PATH ,hostname,bucket,username,password));\n                     } else {\n                         LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n                         return Observable.just(response);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/74/HttpLoader.java\nindex b67e8f79cf..347cbf8504 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/74/HttpLoader.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.config.loader;\n \n import com.couchbase.client.core.ClusterFacade;\n@@ -47,7 +48,7 @@ public class HttpLoader extends AbstractLoader {\n     /**\n      * Creates a new {@link HttpLoader}.\n      *\n-     * @param cluster the cluster reference.\n+     * @param cluster     the cluster reference.\n      * @param environment the environment to use.\n      */\n     public HttpLoader(ClusterFacade cluster, CoreEnvironment environment) {\n@@ -61,7 +62,7 @@ public class HttpLoader extends AbstractLoader {\n \n     @Override\n     protected Observable<String> discoverConfig(final String bucket, final String username, final String password,\n-        final String hostname) {\n+                                                final String hostname) {\n         if (!env().bootstrapHttpEnabled()) {\n             LOGGER.info(\"HTTP Bootstrap manually disabled.\");\n             return Observable.error(new ConfigurationException(\"HTTP Bootstrap disabled through configuration.\"));\n@@ -80,7 +81,8 @@ public class HttpLoader extends AbstractLoader {\n \n                     if (response.status() == ResponseStatus.NOT_EXISTS) {\n                         LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n-                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n+                        return cluster()\n+                            .send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n                     } else {\n                         LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n                         return Observable.just(response);\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/74/HttpLoader.java\nindex b67e8f79cf..1ad6761aab 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/74/HttpLoader.java\n@@ -62,7 +62,7 @@ public class HttpLoader extends AbstractLoader {\n     @Override\n     protected Observable<String> discoverConfig(final String bucket, final String username, final String password,\n         final String hostname) {\n-        if (!env().bootstrapHttpEnabled()) {\n+    if (!env().bootstrapHttpEnabled()) {\n             LOGGER.info(\"HTTP Bootstrap manually disabled.\");\n             return Observable.error(new ConfigurationException(\"HTTP Bootstrap disabled through configuration.\"));\n         }\n@@ -91,13 +91,12 @@ public class HttpLoader extends AbstractLoader {\n                 @Override\n                 public String call(BucketConfigResponse response) {\n                     if (!response.status().isSuccess()) {\n-                        throw new IllegalStateException(\"Could not load bucket configuration: \"\n-                            + response.status() + \"(\" + response.config() + \")\");\n-                    }\n+                        throw new IllegalStateException(\"Could not load bucket configuration: \" + response.status() + \"(\" + response.config() + \")\");\n+    }\n \n                     LOGGER.debug(\"Successfully loaded config through HTTP.\");\n                     return replaceHostWildcard(response.config(), hostname);\n                 }\n             });\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 204).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 131, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 135, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 139, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 139, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 135, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 135, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 139, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 139, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 135, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 139, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 139, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 135, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 131, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 126, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 133, expected level should be one of the following: 130, 134.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 137, expected level should be one of the following: 134, 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 141, expected level should be one of the following: 138, 142.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 266).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 137, expected level should be one of the following: 134, 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 137, expected level should be one of the following: 134, 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 137, expected level should be one of the following: 134, 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 133, expected level should be one of the following: 130, 134.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 128, expected level should be one of the following: 126, 130.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/74/HttpLoader.java\nindex b67e8f79cf..662939878d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/74/HttpLoader.java\n@@ -34,13 +34,15 @@ import rx.functions.Func1;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n+\n public class HttpLoader extends AbstractLoader {\n \n     /**\n      * The logger used.\n      */\n-    private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(HttpLoader.class);\n \n+    private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(HttpLoader.class);\n     public static final String TERSE_PATH = \"/pools/default/b/\";\n     public static final String VERBOSE_PATH = \"/pools/default/buckets/\";\n \n@@ -50,6 +52,7 @@ public class HttpLoader extends AbstractLoader {\n      * @param cluster the cluster reference.\n      * @param environment the environment to use.\n      */\n+\n     public HttpLoader(ClusterFacade cluster, CoreEnvironment environment) {\n         super(LoaderType.HTTP, ServiceType.CONFIG, cluster, environment);\n     }\n@@ -60,44 +63,39 @@ public class HttpLoader extends AbstractLoader {\n     }\n \n     @Override\n-    protected Observable<String> discoverConfig(final String bucket, final String username, final String password,\n-        final String hostname) {\n+    protected Observable<String> discoverConfig(final String bucket, final String username, final String password, final String hostname) {\n         if (!env().bootstrapHttpEnabled()) {\n             LOGGER.info(\"HTTP Bootstrap manually disabled.\");\n             return Observable.error(new ConfigurationException(\"HTTP Bootstrap disabled through configuration.\"));\n         }\n-        LOGGER.debug(\"Starting to discover config through HTTP Bootstrap\");\n \n-        return cluster()\n-            .<BucketConfigResponse>send(new BucketConfigRequest(TERSE_PATH, hostname, bucket, username, password))\n-            .flatMap(new Func1<BucketConfigResponse, Observable<BucketConfigResponse>>() {\n-                @Override\n-                public Observable<BucketConfigResponse> call(BucketConfigResponse response) {\n-                    if (response.status().isSuccess()) {\n-                        LOGGER.debug(\"Successfully got config from terse bucket remote.\");\n-                        return Observable.just(response);\n-                    }\n+        LOGGER.debug(\"Starting to discover config through HTTP Bootstrap\");\n+        return cluster().<BucketConfigResponse>send(new BucketConfigRequest(TERSE_PATH, hostname, bucket, username, password)).flatMap(new Func1<BucketConfigResponse, Observable<BucketConfigResponse>>() {\n+                                                                                                                                   @Override\n+                                                                                                                                   public Observable<BucketConfigResponse> call(BucketConfigResponse response) {\n+                                                                                                                                       if (response.status().isSuccess()) {\n+                                                                                                                                           LOGGER.debug(\"Successfully got config from terse bucket remote.\");\n+                                                                                                                                           return Observable.just(response);\n+                                                                                                                                       }\n \n-                    if (response.status() == ResponseStatus.NOT_EXISTS) {\n-                        LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n-                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n-                    } else {\n-                        LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n-                        return Observable.just(response);\n-                    }\n-                }\n-            })\n-            .map(new Func1<BucketConfigResponse, String>() {\n-                @Override\n-                public String call(BucketConfigResponse response) {\n-                    if (!response.status().isSuccess()) {\n-                        throw new IllegalStateException(\"Could not load bucket configuration: \"\n-                            + response.status() + \"(\" + response.config() + \")\");\n-                    }\n+                                                                                                                                       if (response.status() == ResponseStatus.NOT_EXISTS) {\n+                                                                                                                                           LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n+                                                                                                                                           return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n+                                                                                                                                       } else {\n+                                                                                                                                           LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n+                                                                                                                                           return Observable.just(response);\n+                                                                                                                                       }\n+                                                                                                                                   }\n+                                                                                                                              }).map(new Func1<BucketConfigResponse, String>() {\n+                                                                                                                                     @Override\n+                                                                                                                                     public String call(BucketConfigResponse response) {\n+                                                                                                                                         if (!response.status().isSuccess()) {\n+                                                                                                                                             throw new IllegalStateException(\"Could not load bucket configuration: \" + response.status() + \"(\" + response.config() + \")\");\n+                                                                                                                                         }\n \n-                    LOGGER.debug(\"Successfully loaded config through HTTP.\");\n-                    return replaceHostWildcard(response.config(), hostname);\n-                }\n-            });\n+                                                                                                                                         LOGGER.debug(\"Successfully loaded config through HTTP.\");\n+                                                                                                                                         return replaceHostWildcard(response.config(), hostname);\n+                                                                                                                                     }\n+                                                                                                                                });\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/74/HttpLoader.java\nindex b67e8f79cf..79f67882f6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/74/HttpLoader.java\n@@ -80,7 +80,7 @@ public class HttpLoader extends AbstractLoader {\n \n                     if (response.status() == ResponseStatus.NOT_EXISTS) {\n                         LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n-                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n+                        return cluster().send(newBucketConfigRequest(VERBOSE_PATH ,hostname,bucket,username,password));\n                     } else {\n                         LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n                         return Observable.just(response);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "84",
                    "column": "21",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/74/HttpLoader.java\nindex b67e8f79cf..6ff0e07697 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/74/HttpLoader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/74/HttpLoader.java\n@@ -80,7 +80,8 @@ public class HttpLoader extends AbstractLoader {\n \n                     if (response.status() == ResponseStatus.NOT_EXISTS) {\n                         LOGGER.debug(\"Terse bucket config failed (not found), falling back to verbose.\");\n-                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname, bucket, username, password));\n+                        return cluster().send(new BucketConfigRequest(VERBOSE_PATH, hostname,bucket\n+                    , username , password));\n                     } else {\n                         LOGGER.debug(\"Terse bucket config failed, propagating failed response\");\n                         return Observable.just(response);\n",
            "diff_size": 2
        }
    ]
}