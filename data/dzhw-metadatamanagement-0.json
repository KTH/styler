{
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public Optional<Question> findPredecessorOfShadowCopy(Question shadowCopy, String previousVersion) {\n    String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n    return questionRepository.findById(shadowCopyId);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/0/QuestionShadowCopyDataSource.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/0/QuestionShadowCopyDataSource.java\nindex cbd6970010..904c0c2b29 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/0/QuestionShadowCopyDataSource.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/0/QuestionShadowCopyDataSource.java\n@@ -44,7 +44,8 @@ public class QuestionShadowCopyDataSource implements ShadowCopyDataSource<Questi\n   }\n \n   @Override\n-  public Optional<Question> findPredecessorOfShadowCopy(Question shadowCopy, String previousVersion) {\n+  public Optional<Question> findPredecessorOfShadowCopy(Question shadowCopy,\n+                                                        String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return questionRepository.findById(shadowCopyId);\n   }\n@@ -61,7 +62,7 @@ public class QuestionShadowCopyDataSource implements ShadowCopyDataSource<Questi\n \n   @Override\n   public Stream<Question> findShadowCopiesWithDeletedMasters(String projectId,\n-      String lastVersion) {\n+                                                             String lastVersion) {\n     String oldProjectId = projectId + \"-\" + lastVersion;\n     return questionRepository\n         .streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId)\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/0/QuestionShadowCopyDataSource.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/0/QuestionShadowCopyDataSource.java\nindex cbd6970010..9109d7f339 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/0/QuestionShadowCopyDataSource.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/0/QuestionShadowCopyDataSource.java\n@@ -72,4 +72,4 @@ public class QuestionShadowCopyDataSource implements ShadowCopyDataSource<Questi\n     return successorIds.stream().map(successorId -> successorId + \"-\" + version)\n         .collect(Collectors.toList());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/0/QuestionShadowCopyDataSource.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/0/QuestionShadowCopyDataSource.java\nindex cbd6970010..b968019481 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/0/QuestionShadowCopyDataSource.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/0/QuestionShadowCopyDataSource.java\n@@ -4,10 +4,8 @@ import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Service;\n-\n import eu.dzhw.fdz.metadatamanagement.common.service.ShadowCopyDataSource;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.Question;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.repository.QuestionRepository;\n@@ -15,23 +13,27 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.repository.QuestionRepo\n /**\n  * Provides data for creating shadow copies of {@link Question}.\n  */\n+\n+\n @Service\n public class QuestionShadowCopyDataSource implements ShadowCopyDataSource<Question> {\n \n-  private QuestionRepository questionRepository;\n+    private QuestionRepository questionRepository;\n \n-  public QuestionShadowCopyDataSource(QuestionRepository questionRepository) {\n+    public QuestionShadowCopyDataSource(QuestionRepository questionRepository) {\n     this.questionRepository = questionRepository;\n-  }\n+    }\n+\n \n-  @Override\n-  public Stream<Question> getMasters(String dataAcquisitionProjectId) {\n-    return questionRepository\n-        .streamByDataAcquisitionProjectIdAndShadowIsFalse(dataAcquisitionProjectId);\n-  }\n+    @Override\n+    public Stream<Question> getMasters(String dataAcquisitionProjectId) {\n+    return questionRepository.streamByDataAcquisitionProjectIdAndShadowIsFalse(dataAcquisitionProjectId);\n+    }\n \n-  @Override\n-  public Question createShadowCopy(Question source, String version) {\n+\n+    @Override\n+    public Question createShadowCopy(Question source,\n+        String version) {\n     String derivedId = source.getId() + \"-\" + version;\n     Question copy = questionRepository.findById(derivedId).orElseGet(Question::new);\n     BeanUtils.copyProperties(source, copy, \"version\");\n@@ -41,35 +43,39 @@ public class QuestionShadowCopyDataSource implements ShadowCopyDataSource<Questi\n     copy.setInstrumentId(source.getInstrumentId() + \"-\" + version);\n     copy.setSuccessors(createDerivedSuccessorIds(source.getSuccessors(), version));\n     return copy;\n-  }\n+    }\n+\n \n-  @Override\n-  public Optional<Question> findPredecessorOfShadowCopy(Question shadowCopy, String previousVersion) {\n+    @Override\n+    public Optional<Question> findPredecessorOfShadowCopy(Question shadowCopy,\n+        String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return questionRepository.findById(shadowCopyId);\n-  }\n+    }\n+\n \n-  @Override\n-  public void updatePredecessor(Question predecessor) {\n+    @Override\n+    public void updatePredecessor(Question predecessor) {\n     questionRepository.save(predecessor);\n-  }\n+    }\n \n-  @Override\n-  public void saveShadowCopy(Question shadowCopy) {\n+\n+    @Override\n+    public void saveShadowCopy(Question shadowCopy) {\n     questionRepository.save(shadowCopy);\n-  }\n+    }\n+\n \n-  @Override\n-  public Stream<Question> findShadowCopiesWithDeletedMasters(String projectId,\n-      String lastVersion) {\n+    @Override\n+    public Stream<Question> findShadowCopiesWithDeletedMasters(String projectId,\n+        String lastVersion) {\n     String oldProjectId = projectId + \"-\" + lastVersion;\n-    return questionRepository\n-        .streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId)\n-        .filter(shadowCopy -> !questionRepository.existsById(shadowCopy.getMasterId()));\n-  }\n+    return questionRepository.streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId).filter(shadowCopy -> !questionRepository.existsById(shadowCopy.getMasterId()));\n+    }\n \n-  private List<String> createDerivedSuccessorIds(List<String> successorIds, String version) {\n+    private List<String> createDerivedSuccessorIds(List<String> successorIds,\n+        String version) {\n     return successorIds.stream().map(successorId -> successorId + \"-\" + version)\n-        .collect(Collectors.toList());\n-  }\n-}\n+                                .collect(Collectors.toList());\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}