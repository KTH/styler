{
    "error_id": "68",
    "information": {
        "errors": [
            {
                "line": "306",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "        list.add(VARIABLE, \"@\");\n        list.add(QUERY_TIMEOUT, \"QUERY_TIMEOUT\");\n        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\"); //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n        list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n        list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n        list.add(RETENTION_TIME, \"RETENTION_TIME\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler/68/SetTypes.java\nindex 43c650ebba..3e57b6b455 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler/68/SetTypes.java\n@@ -303,45 +303,48 @@ public class SetTypes {\n         list.add(CREATE_BUILD, \"CREATE_BUILD\");\n         list.add(VARIABLE, \"@\");\n         list.add(QUERY_TIMEOUT, \"QUERY_TIMEOUT\");\n-        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\"); //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n-        list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n-        list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n-        list.add(RETENTION_TIME, \"RETENTION_TIME\");\n-        list.add(QUERY_STATISTICS, \"QUERY_STATISTICS\");\n-        list.add(QUERY_STATISTICS_MAX_ENTRIES, \"QUERY_STATISTICS_MAX_ENTRIES\");\n-        list.add(ROW_FACTORY, \"ROW_FACTORY\");\n-        list.add(BATCH_JOINS, \"BATCH_JOINS\");\n-        list.add(FORCE_JOIN_ORDER, \"FORCE_JOIN_ORDER\");\n-        list.add(LAZY_QUERY_EXECUTION, \"LAZY_QUERY_EXECUTION\");\n-        list.add(BUILTIN_ALIAS_OVERRIDE, \"BUILTIN_ALIAS_OVERRIDE\");\n-        list.add(COLUMN_NAME_RULES, \"COLUMN_NAME_RULES\");\n-        list.add(AUTHENTICATOR, \"AUTHENTICATOR\");\n-        list.add(LOCAL_RESULT_FACTORY, \"LOCAL_RESULT_FACTORY\");\n-        TYPES = list;\n-    }\n-\n-    /**\n+        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\");\n+\n+        //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n+         list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n+         list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n+         list.add(RETENTION_TIME, \"RETENTION_TIME\");\n+         list.add(QUERY_STATISTICS, \"QUERY_STATISTICS\");\n+         list.add(QUERY_STATISTICS_MAX_ENTRIES, \"QUERY_STATISTICS_MAX_ENTRIES\");\n+         list.add(ROW_FACTORY, \"ROW_FACTORY\");\n+         list.add(BATCH_JOINS, \"BATCH_JOINS\");\n+         list.add(FORCE_JOIN_ORDER, \"FORCE_JOIN_ORDER\");\n+         list.add(LAZY_QUERY_EXECUTION, \"LAZY_QUERY_EXECUTION\");\n+         list.add(BUILTIN_ALIAS_OVERRIDE, \"BUILTIN_ALIAS_OVERRIDE\");\n+         list.add(COLUMN_NAME_RULES, \"COLUMN_NAME_RULES\");\n+         list.add(AUTHENTICATOR, \"AUTHENTICATOR\");\n+         list.add(LOCAL_RESULT_FACTORY, \"LOCAL_RESULT_FACTORY\");\n+         TYPES = list;\n+     }\n+\n+     /**\n      * Get the set type number.\n      *\n      * @param name the set type name\n      * @return the number\n      */\n-    public static int getType(String name) {\n-        return TYPES.indexOf(name);\n-    }\n+     public static int getType(String name) {\n+         return TYPES.indexOf(name);\n+     }\n \n-    public static ArrayList<String> getTypes() {\n-        return TYPES;\n-    }\n+     public static ArrayList<String> getTypes() {\n+         return TYPES;\n+     }\n \n-    /**\n+     /**\n      * Get the set type name.\n      *\n      * @param type the type number\n      * @return the name\n      */\n-    public static String getTypeName(int type) {\n-        return TYPES.get(type);\n-    }\n+     public static String getTypeName(int type) {\n+         return TYPES.get(type);\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "307",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/intellij/68/SetTypes.java\nindex 43c650ebba..09e951674a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/intellij/68/SetTypes.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (http://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.command.dml;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/naturalize/68/SetTypes.java\nindex 43c650ebba..4baf1c3390 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/naturalize/68/SetTypes.java\n@@ -303,7 +303,8 @@ public class SetTypes {\n         list.add(CREATE_BUILD, \"CREATE_BUILD\");\n         list.add(VARIABLE, \"@\");\n         list.add(QUERY_TIMEOUT, \"QUERY_TIMEOUT\");\n-        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\"); //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n+        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\");\n+//\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n         list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n         list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n         list.add(RETENTION_TIME, \"RETENTION_TIME\");\n@@ -344,4 +345,4 @@ public class SetTypes {\n         return TYPES.get(type);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "405",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/codebuff/68/SetTypes.java\nindex 43c650ebba..2d600c9e5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/codebuff/68/SetTypes.java\n@@ -10,263 +10,362 @@ import java.util.ArrayList;\n /**\n  * The list of setting for a SET statement.\n  */\n+\n+\n public class SetTypes {\n \n     /**\n      * The type of a SET IGNORECASE statement.\n      */\n+\n+\n     public static final int IGNORECASE = 1;\n \n     /**\n      * The type of a SET MAX_LOG_SIZE statement.\n      */\n+\n+\n     public static final int MAX_LOG_SIZE = 2;\n \n     /**\n      * The type of a SET MODE statement.\n      */\n+\n+\n     public static final int MODE = 3;\n \n     /**\n      * The type of a SET READONLY statement.\n      */\n+\n+\n     public static final int READONLY = 4;\n \n     /**\n      * The type of a SET LOCK_TIMEOUT statement.\n      */\n+\n+\n     public static final int LOCK_TIMEOUT = 5;\n \n     /**\n      * The type of a SET DEFAULT_LOCK_TIMEOUT statement.\n      */\n+\n+\n     public static final int DEFAULT_LOCK_TIMEOUT = 6;\n \n     /**\n      * The type of a SET DEFAULT_TABLE_TYPE statement.\n      */\n+\n+\n     public static final int DEFAULT_TABLE_TYPE = 7;\n \n     /**\n      * The type of a SET CACHE_SIZE statement.\n      */\n+\n+\n     public static final int CACHE_SIZE = 8;\n \n     /**\n      * The type of a SET TRACE_LEVEL_SYSTEM_OUT statement.\n      */\n+\n+\n     public static final int TRACE_LEVEL_SYSTEM_OUT = 9;\n \n     /**\n      * The type of a SET TRACE_LEVEL_FILE statement.\n      */\n+\n+\n     public static final int TRACE_LEVEL_FILE = 10;\n \n     /**\n      * The type of a SET TRACE_MAX_FILE_SIZE statement.\n      */\n+\n+\n     public static final int TRACE_MAX_FILE_SIZE = 11;\n \n     /**\n      * The type of a SET COLLATION  statement.\n      */\n+\n+\n     public static final int COLLATION = 12;\n \n     /**\n      * The type of a SET CLUSTER statement.\n      */\n+\n+\n     public static final int CLUSTER = 13;\n \n     /**\n      * The type of a SET WRITE_DELAY statement.\n      */\n+\n+\n     public static final int WRITE_DELAY = 14;\n \n     /**\n      * The type of a SET DATABASE_EVENT_LISTENER statement.\n      */\n+\n+\n     public static final int DATABASE_EVENT_LISTENER = 15;\n \n     /**\n      * The type of a SET MAX_MEMORY_ROWS statement.\n      */\n+\n+\n     public static final int MAX_MEMORY_ROWS = 16;\n \n     /**\n      * The type of a SET LOCK_MODE statement.\n      */\n+\n+\n     public static final int LOCK_MODE = 17;\n \n     /**\n      * The type of a SET DB_CLOSE_DELAY statement.\n      */\n+\n+\n     public static final int DB_CLOSE_DELAY = 18;\n \n     /**\n      * The type of a SET LOG statement.\n      */\n+\n+\n     public static final int LOG = 19;\n \n     /**\n      * The type of a SET THROTTLE statement.\n      */\n+\n+\n     public static final int THROTTLE = 20;\n \n     /**\n      * The type of a SET MAX_MEMORY_UNDO statement.\n      */\n+\n+\n     public static final int MAX_MEMORY_UNDO = 21;\n \n     /**\n      * The type of a SET MAX_LENGTH_INPLACE_LOB statement.\n      */\n+\n+\n     public static final int MAX_LENGTH_INPLACE_LOB = 22;\n \n     /**\n      * The type of a SET COMPRESS_LOB statement.\n      */\n+\n+\n     public static final int COMPRESS_LOB = 23;\n \n     /**\n      * The type of a SET ALLOW_LITERALS statement.\n      */\n+\n+\n     public static final int ALLOW_LITERALS = 24;\n \n     /**\n      * The type of a SET MULTI_THREADED statement.\n      */\n+\n+\n     public static final int MULTI_THREADED = 25;\n \n     /**\n      * The type of a SET SCHEMA statement.\n      */\n+\n+\n     public static final int SCHEMA = 26;\n \n     /**\n      * The type of a SET OPTIMIZE_REUSE_RESULTS statement.\n      */\n+\n+\n     public static final int OPTIMIZE_REUSE_RESULTS = 27;\n \n     /**\n      * The type of a SET SCHEMA_SEARCH_PATH statement.\n      */\n+\n+\n     public static final int SCHEMA_SEARCH_PATH = 28;\n \n     /**\n      * The type of a SET UNDO_LOG statement.\n      */\n+\n+\n     public static final int UNDO_LOG = 29;\n \n     /**\n      * The type of a SET REFERENTIAL_INTEGRITY statement.\n      */\n+\n+\n     public static final int REFERENTIAL_INTEGRITY = 30;\n \n     /**\n      * The type of a SET MAX_OPERATION_MEMORY statement.\n      */\n+\n+\n     public static final int MAX_OPERATION_MEMORY = 31;\n \n     /**\n      * The type of a SET EXCLUSIVE statement.\n      */\n+\n+\n     public static final int EXCLUSIVE = 32;\n \n     /**\n      * The type of a SET CREATE_BUILD statement.\n      */\n+\n+\n     public static final int CREATE_BUILD = 33;\n \n     /**\n      * The type of a SET \\@VARIABLE statement.\n      */\n+\n+\n     public static final int VARIABLE = 34;\n \n     /**\n      * The type of a SET QUERY_TIMEOUT statement.\n      */\n+\n+\n     public static final int QUERY_TIMEOUT = 35;\n \n     /**\n      * The type of a SET REDO_LOG_BINARY statement.\n      */\n+\n+\n     public static final int REDO_LOG_BINARY = 36;\n \n     /**\n      * The type of a SET BINARY_COLLATION statement.\n      */\n+\n+\n     public static final int BINARY_COLLATION = 37;\n \n     /**\n      * The type of a SET JAVA_OBJECT_SERIALIZER statement.\n      */\n+\n+\n     public static final int JAVA_OBJECT_SERIALIZER = 38;\n \n     /**\n      * The type of a SET RETENTION_TIME statement.\n      */\n+\n+\n     public static final int RETENTION_TIME = 39;\n \n     /**\n      * The type of a SET QUERY_STATISTICS statement.\n      */\n+\n+\n     public static final int QUERY_STATISTICS = 40;\n \n     /**\n      * The type of a SET QUERY_STATISTICS_MAX_ENTRIES statement.\n      */\n+\n+\n     public static final int QUERY_STATISTICS_MAX_ENTRIES = 41;\n \n     /**\n      * The type of a SET ROW_FACTORY statement.\n      */\n+\n+\n     public static final int ROW_FACTORY = 42;\n \n     /**\n      * The type of SET BATCH_JOINS statement.\n      */\n+\n+\n     public static final int BATCH_JOINS = 43;\n \n     /**\n      * The type of SET FORCE_JOIN_ORDER statement.\n      */\n+\n+\n     public static final int FORCE_JOIN_ORDER = 44;\n \n     /**\n      * The type of SET LAZY_QUERY_EXECUTION statement.\n      */\n+\n+\n     public static final int LAZY_QUERY_EXECUTION = 45;\n \n     /**\n      * The type of SET BUILTIN_ALIAS_OVERRIDE statement.\n      */\n+\n+\n     public static final int BUILTIN_ALIAS_OVERRIDE = 46;\n \n     /**\n      * The type of a SET COLUMN_NAME_RULES statement.\n      */\n+\n+\n     public static final int COLUMN_NAME_RULES = 47;\n \n     /**\n      * The type of a SET AUTHENTICATOR statement.\n      */\n+\n+\n     public static final int AUTHENTICATOR = 48;\n \n     /**\n      * The type of a SET LOCAL_RESULT_FACTORY statement.\n      */\n-    public static final int LOCAL_RESULT_FACTORY = 49;\n \n-    private static final int COUNT = LOCAL_RESULT_FACTORY + 1;\n \n+    public static final int LOCAL_RESULT_FACTORY = 49;\n+    private static final int COUNT = LOCAL_RESULT_FACTORY + 1;\n     private static final ArrayList<String> TYPES;\n \n     private SetTypes() {\n         // utility class\n+\n     }\n \n     static {\n-        ArrayList<String> list = new ArrayList<>(COUNT);\n+        ArrayList<String> list = new ArrayList< >(COUNT);\n         list.add(null);\n         list.add(IGNORECASE, \"IGNORECASE\");\n         list.add(MAX_LOG_SIZE, \"MAX_LOG_SIZE\");\n@@ -308,7 +407,8 @@ public class SetTypes {\n         list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n         list.add(RETENTION_TIME, \"RETENTION_TIME\");\n         list.add(QUERY_STATISTICS, \"QUERY_STATISTICS\");\n-        list.add(QUERY_STATISTICS_MAX_ENTRIES, \"QUERY_STATISTICS_MAX_ENTRIES\");\n+        list.add(QUERY_STATISTICS_MAX_ENTRIES,\n+                 \"QUERY_STATISTICS_MAX_ENTRIES\");\n         list.add(ROW_FACTORY, \"ROW_FACTORY\");\n         list.add(BATCH_JOINS, \"BATCH_JOINS\");\n         list.add(FORCE_JOIN_ORDER, \"FORCE_JOIN_ORDER\");\n@@ -326,10 +426,13 @@ public class SetTypes {\n      * @param name the set type name\n      * @return the number\n      */\n+\n+\n     public static int getType(String name) {\n         return TYPES.indexOf(name);\n     }\n \n+\n     public static ArrayList<String> getTypes() {\n         return TYPES;\n     }\n@@ -340,8 +443,10 @@ public class SetTypes {\n      * @param type the type number\n      * @return the name\n      */\n+\n+\n     public static String getTypeName(int type) {\n         return TYPES.get(type);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 112
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "305",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "305",
                    "column": "49",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_random/68/SetTypes.java\nindex 43c650ebba..1fac4ab088 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_random/68/SetTypes.java\n@@ -302,8 +302,7 @@ public class SetTypes {\n         list.add(EXCLUSIVE, \"EXCLUSIVE\");\n         list.add(CREATE_BUILD, \"CREATE_BUILD\");\n         list.add(VARIABLE, \"@\");\n-        list.add(QUERY_TIMEOUT, \"QUERY_TIMEOUT\");\n-        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\"); //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n+        list.add(QUERY_TIMEOUT, \"QUERY_TIMEOUT\");list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\"); //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n         list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n         list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n         list.add(RETENTION_TIME, \"RETENTION_TIME\");\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_three_grams/68/SetTypes.java\nindex 43c650ebba..3e57b6b455 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/68/SetTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_three_grams/68/SetTypes.java\n@@ -303,45 +303,48 @@ public class SetTypes {\n         list.add(CREATE_BUILD, \"CREATE_BUILD\");\n         list.add(VARIABLE, \"@\");\n         list.add(QUERY_TIMEOUT, \"QUERY_TIMEOUT\");\n-        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\"); //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n-        list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n-        list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n-        list.add(RETENTION_TIME, \"RETENTION_TIME\");\n-        list.add(QUERY_STATISTICS, \"QUERY_STATISTICS\");\n-        list.add(QUERY_STATISTICS_MAX_ENTRIES, \"QUERY_STATISTICS_MAX_ENTRIES\");\n-        list.add(ROW_FACTORY, \"ROW_FACTORY\");\n-        list.add(BATCH_JOINS, \"BATCH_JOINS\");\n-        list.add(FORCE_JOIN_ORDER, \"FORCE_JOIN_ORDER\");\n-        list.add(LAZY_QUERY_EXECUTION, \"LAZY_QUERY_EXECUTION\");\n-        list.add(BUILTIN_ALIAS_OVERRIDE, \"BUILTIN_ALIAS_OVERRIDE\");\n-        list.add(COLUMN_NAME_RULES, \"COLUMN_NAME_RULES\");\n-        list.add(AUTHENTICATOR, \"AUTHENTICATOR\");\n-        list.add(LOCAL_RESULT_FACTORY, \"LOCAL_RESULT_FACTORY\");\n-        TYPES = list;\n-    }\n-\n-    /**\n+        list.add(REDO_LOG_BINARY, \"REDO_LOG_BINARY\");\n+\n+        //\u5b98\u65b9\u6587\u6863\u6ca1\u63d0\u5230\n+         list.add(BINARY_COLLATION, \"BINARY_COLLATION\");\n+         list.add(JAVA_OBJECT_SERIALIZER, \"JAVA_OBJECT_SERIALIZER\");\n+         list.add(RETENTION_TIME, \"RETENTION_TIME\");\n+         list.add(QUERY_STATISTICS, \"QUERY_STATISTICS\");\n+         list.add(QUERY_STATISTICS_MAX_ENTRIES, \"QUERY_STATISTICS_MAX_ENTRIES\");\n+         list.add(ROW_FACTORY, \"ROW_FACTORY\");\n+         list.add(BATCH_JOINS, \"BATCH_JOINS\");\n+         list.add(FORCE_JOIN_ORDER, \"FORCE_JOIN_ORDER\");\n+         list.add(LAZY_QUERY_EXECUTION, \"LAZY_QUERY_EXECUTION\");\n+         list.add(BUILTIN_ALIAS_OVERRIDE, \"BUILTIN_ALIAS_OVERRIDE\");\n+         list.add(COLUMN_NAME_RULES, \"COLUMN_NAME_RULES\");\n+         list.add(AUTHENTICATOR, \"AUTHENTICATOR\");\n+         list.add(LOCAL_RESULT_FACTORY, \"LOCAL_RESULT_FACTORY\");\n+         TYPES = list;\n+     }\n+\n+     /**\n      * Get the set type number.\n      *\n      * @param name the set type name\n      * @return the number\n      */\n-    public static int getType(String name) {\n-        return TYPES.indexOf(name);\n-    }\n+     public static int getType(String name) {\n+         return TYPES.indexOf(name);\n+     }\n \n-    public static ArrayList<String> getTypes() {\n-        return TYPES;\n-    }\n+     public static ArrayList<String> getTypes() {\n+         return TYPES;\n+     }\n \n-    /**\n+     /**\n      * Get the set type name.\n      *\n      * @param type the type number\n      * @return the name\n      */\n-    public static String getTypeName(int type) {\n-        return TYPES.get(type);\n-    }\n+     public static String getTypeName(int type) {\n+         return TYPES.get(type);\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 32
        }
    ]
}