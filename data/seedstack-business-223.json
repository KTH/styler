{
    "error_id": "223",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.assembler.dsl;\n\nimport org.javatuples.Decade;\nimport org.javatuples.Ennead;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/223/MergeMultiple.java\nindex 47bae17d5d..19aa079320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/223/MergeMultiple.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/223/MergeMultiple.java\nindex 47bae17d5d..e940c6f1b6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/223/MergeMultiple.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n@@ -28,25 +29,31 @@ public interface MergeMultiple {\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first,\n-            Class<A1> second);\n+                                                                                         Class<A1> second);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third);\n+                                                                                                Class<A1> second,\n+                                                                                                Class<A2> third);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth);\n+                                                                                                    Class<A1> second,\n+                                                                                                    Class<A2> third,\n+                                                                                                    Class<A3> fourth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>,\n             A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);\n+                                                                                                        Class<A1> second,\n+                                                                                                        Class<A2> third,\n+                                                                                                        Class<A3> fourth,\n+                                                                                                        Class<A4> fifth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -100,5 +107,5 @@ public interface MergeMultiple {\n             A8 extends AggregateRoot<?>,\n             A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8,\n             A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth,\n-            Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth);\n+                       Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth);\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 3,118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "column": "147",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "341",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "342",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "587",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "588",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "883",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "884",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "1228",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "1229",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "1625",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "1626",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "2072",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "2073",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "2570",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "30",
                    "column": "2571",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "3118",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/223/MergeMultiple.java\nindex 47bae17d5d..761a4f7d96 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/223/MergeMultiple.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n@@ -26,79 +27,5 @@ public interface MergeMultiple {\n \n     <A extends AggregateRoot<I>, I> MergeFromRepository<MergeAs<A>> into(Class<A> aggregateRootClass);\n \n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first,\n-            Class<A1> second);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8,\n-            A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth,\n-            Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth);\n-}\n+    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first, Class<A1> second);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first, Class<A1> second, Class<A2> third);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth);\n+}\n\\ No newline at end of file\n",
            "diff_size": 77
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 3,264).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "column": "132",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "276",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "276",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "473",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "473",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "721",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "721",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "1019",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "1019",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "1366",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "1366",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "1765",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "1765",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "2214",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "2214",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "2714",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "2714",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "27",
                    "column": "3264",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "3264",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/223/MergeMultiple.java\nindex 47bae17d5d..09993dae86 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/223/MergeMultiple.java\n@@ -22,83 +22,7 @@ import org.seedstack.business.domain.AggregateRoot;\n  * An element of the {@link FluentAssembler DSL} allowing to merge multiple DTO into aggregates or\n  * tuples of aggregates.\n  **/\n-public interface MergeMultiple {\n \n-    <A extends AggregateRoot<I>, I> MergeFromRepository<MergeAs<A>> into(Class<A> aggregateRootClass);\n \n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first,\n-            Class<A1> second);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8,\n-            A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth,\n-            Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth);\n-}\n+public interface MergeMultiple { <A extends AggregateRoot<I>, I> MergeFromRepository<MergeAs<A>> into(Class<A> aggregateRootClass) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first, Class<A1> second) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first, Class<A1> second, Class<A2> third) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 78
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/223/MergeMultiple.java\nindex 47bae17d5d..19aa079320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/223/MergeMultiple.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/223/MergeMultiple.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}