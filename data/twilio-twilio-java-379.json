{
    "error_id": "379",
    "information": {
        "errors": [
            {
                "line": "194",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/379/CompositionHookReader.java\nindex ec16d4ea22..ac1e3e8e5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/379/CompositionHookReader.java\n@@ -191,7 +191,7 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/379/CompositionHookReader.java\nindex ec16d4ea22..12572620c8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/379/CompositionHookReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.video.v1;\n@@ -191,7 +191,7 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/379/CompositionHookReader.java\nindex ec16d4ea22..370efa4208 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/379/CompositionHookReader.java\n@@ -26,6 +26,7 @@ import org.joda.time.DateTime;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class CompositionHookReader extends Reader<CompositionHook> {\n     private Boolean enabled;\n     private DateTime dateCreatedAfter;\n@@ -40,6 +41,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      *                that matches this parameter\n      * @return this\n      */\n+\n+\n     public CompositionHookReader setEnabled(final Boolean enabled) {\n         this.enabled = enabled;\n         return this;\n@@ -53,6 +56,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      *                         after this ISO 8601 datetime with time zone\n      * @return this\n      */\n+\n+\n     public CompositionHookReader setDateCreatedAfter(final DateTime dateCreatedAfter) {\n         this.dateCreatedAfter = dateCreatedAfter;\n         return this;\n@@ -66,6 +71,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      *                          this ISO 8601 datetime with time zone\n      * @return this\n      */\n+\n+\n     public CompositionHookReader setDateCreatedBefore(final DateTime dateCreatedBefore) {\n         this.dateCreatedBefore = dateCreatedBefore;\n         return this;\n@@ -80,6 +87,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      *                     that match this string\n      * @return this\n      */\n+\n+\n     public CompositionHookReader setFriendlyName(final String friendlyName) {\n         this.friendlyName = friendlyName;\n         return this;\n@@ -91,6 +100,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      * @param client TwilioRestClient with which to make the request\n      * @return CompositionHook ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<CompositionHook> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -102,6 +113,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      * @param client TwilioRestClient with which to make the request\n      * @return CompositionHook ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<CompositionHook> firstPage(final TwilioRestClient client) {\n@@ -110,7 +123,7 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             Domains.VIDEO.toString(),\n             \"/v1/CompositionHooks\",\n             client.getRegion()\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -123,14 +136,13 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      * @param client TwilioRestClient with which to make the request\n      * @return CompositionHook ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<CompositionHook> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<CompositionHook> getPage(final String targetUrl,\n+                                         final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -141,16 +153,15 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<CompositionHook> nextPage(final Page<CompositionHook> page,\n                                           final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.VIDEO.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getNextPageUrl(Domains.VIDEO.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -161,16 +172,15 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<CompositionHook> previousPage(final Page<CompositionHook> page,\n                                               final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.VIDEO.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getPreviousPageUrl(Domains.VIDEO.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -181,9 +191,11 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<CompositionHook> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<CompositionHook> pageForRequest(final TwilioRestClient client,\n+                                                 final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"CompositionHook read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -191,7 +203,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -199,7 +212,7 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             response.getContent(),\n             CompositionHook.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -207,6 +220,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (enabled != null) {\n             request.addQueryParam(\"Enabled\", enabled.toString());\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/379/CompositionHookReader.java\nindex ec16d4ea22..ac1e3e8e5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/379/CompositionHookReader.java\n@@ -191,7 +191,7 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/379/CompositionHookReader.java\nindex ec16d4ea22..3c63cd7da3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/379/CompositionHookReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/379/CompositionHookReader.java\n@@ -191,7 +191,8 @@ public class CompositionHookReader extends Reader<CompositionHook> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}