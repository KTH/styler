{
    "error_id": "528",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/528/LongArrayElement.java\nindex 6cfda0596f..736a4f9034 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/528/LongArrayElement.java\n@@ -28,70 +28,70 @@ import java.io.IOException;\n  */\n public class LongArrayElement implements IElement {\n \n-  private long[] data;\n-\n-  public LongArrayElement(long[] data) {\n-    this.data = data;\n-  }\n-\n-  public LongArrayElement() {\n-    this(null);\n-  }\n-\n-  public long[] getData() {\n-    return data;\n-  }\n-\n-  public void setData(long[] data) {\n-    this.data = data;\n-  }\n-\n-  @Override\n-  public LongArrayElement deepClone() {\n-    long[] newData = new long[data.length];\n-    System.arraycopy(data, 0, newData, 0, data.length);\n-    return new LongArrayElement(newData);\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf output) {\n-    output.writeInt(data.length);\n-    for (int i = 0; i < data.length; i++) {\n-      output.writeLong(data[i]);\n+    private long[] data;\n+\n+    public LongArrayElement(long[] data) {\n+        this.data = data;\n+    }\n+\n+    public LongArrayElement() {\n+        this(null);\n+    }\n+\n+    public long[] getData() {\n+        return data;\n+    }\n+\n+    public void setData(long[] data) {\n+        this.data = data;\n     }\n-  }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    data = new long[input.readInt()];\n-    for (int i = 0; i < data.length; i++) {\n-      data[i] = input.readLong();\n+    @Override\n+    public LongArrayElement deepClone() {\n+        long[] newData = new long[data.length];\n+        System.arraycopy(data, 0, newData, 0, data.length);\n+        return new LongArrayElement(newData);\n     }\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    return 4 + data.length * 8;\n-  }\n-\n-  @Override\n-  public void serialize(DataOutputStream output) throws IOException {\n-    output.writeInt(data.length);\n-    for (int i = 0; i < data.length; i++) {\n-      output.writeLong(data[i]);\n+\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        output.writeInt(data.length);\n+        for (int i = 0; i < data.length; i++) {\n+            output.writeLong(data[i]);\n+        }\n     }\n-  }\n \n-  @Override\n-  public void deserialize(DataInputStream input) throws IOException {\n-    data = new long[input.readInt()];\n-    for (int i = 0; i < data.length; i++) {\n-      data[i] = input.readLong();\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        data = new long[input.readInt()];\n+        for (int i = 0; i < data.length; i++) {\n+            data[i] = input.readLong();\n+        }\n     }\n-  }\n \n-  @Override\n-  public int dataLen() {\n-    return bufferLen();\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return 4 + data.length * 8;\n+    }\n+\n+    @Override\n+    public void serialize(DataOutputStream output) throws IOException {\n+        output.writeInt(data.length);\n+        for (int i = 0; i < data.length; i++) {\n+            output.writeLong(data[i]);\n+        }\n+    }\n+\n+    @Override\n+    public void deserialize(DataInputStream input) throws IOException {\n+        data = new long[input.readInt()];\n+        for (int i = 0; i < data.length; i++) {\n+            data[i] = input.readLong();\n+        }\n+    }\n+\n+    @Override\n+    public int dataLen() {\n+        return bufferLen();\n+    }\n }\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/528/LongArrayElement.java\nindex 6cfda0596f..a2b53f07ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/528/LongArrayElement.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ps.storage.vector.element;\n \n import io.netty.buffer.ByteBuf;\n@@ -94,4 +93,4 @@ public class LongArrayElement implements IElement {\n   public int dataLen() {\n     return bufferLen();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/528/LongArrayElement.java\nindex 6cfda0596f..0376561ebd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/528/LongArrayElement.java\n@@ -26,72 +26,72 @@ import java.io.IOException;\n /**\n  * The complex object that contains a integer array,, it can be stored in PS\n  */\n-public class LongArrayElement implements IElement {\n \n-  private long[] data;\n+public class LongArrayElement implements IElement {\n+    private long[] data;\n \n-  public LongArrayElement(long[] data) {\n+    public LongArrayElement(long[] data) {\n     this.data = data;\n-  }\n+    }\n \n-  public LongArrayElement() {\n+    public LongArrayElement() {\n     this(null);\n-  }\n+    }\n \n-  public long[] getData() {\n+    public long[] getData() {\n     return data;\n-  }\n+    }\n \n-  public void setData(long[] data) {\n+    public void setData(long[] data) {\n     this.data = data;\n-  }\n+    }\n \n-  @Override\n-  public LongArrayElement deepClone() {\n+    @Override\n+    public LongArrayElement deepClone() {\n     long[] newData = new long[data.length];\n     System.arraycopy(data, 0, newData, 0, data.length);\n     return new LongArrayElement(newData);\n-  }\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n+    @Override\n+    public void serialize(ByteBuf output) {\n     output.writeInt(data.length);\n     for (int i = 0; i < data.length; i++) {\n-      output.writeLong(data[i]);\n+        output.writeLong(data[i]);\n+    }\n     }\n-  }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n+    @Override\n+    public void deserialize(ByteBuf input) {\n     data = new long[input.readInt()];\n     for (int i = 0; i < data.length; i++) {\n-      data[i] = input.readLong();\n+        data[i] = input.readLong();\n+    }\n     }\n-  }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return 4 + data.length * 8;\n-  }\n+    }\n \n-  @Override\n-  public void serialize(DataOutputStream output) throws IOException {\n+    @Override\n+    public void serialize(DataOutputStream output) throws IOException {\n     output.writeInt(data.length);\n     for (int i = 0; i < data.length; i++) {\n-      output.writeLong(data[i]);\n+        output.writeLong(data[i]);\n+    }\n     }\n-  }\n \n-  @Override\n-  public void deserialize(DataInputStream input) throws IOException {\n+    @Override\n+    public void deserialize(DataInputStream input) throws IOException {\n     data = new long[input.readInt()];\n     for (int i = 0; i < data.length; i++) {\n-      data[i] = input.readLong();\n+        data[i] = input.readLong();\n+    }\n     }\n-  }\n \n-  @Override\n-  public int dataLen() {\n+    @Override\n+    public int dataLen() {\n     return bufferLen();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/528/LongArrayElement.java\nindex 6cfda0596f..c27e5f42ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/528/LongArrayElement.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/528/LongArrayElement.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ps.storage.vector.element;\n \n import io.netty.buffer.ByteBuf;\n",
            "diff_size": 1
        }
    ]
}