{
    "error_id": "142",
    "information": {
        "errors": [
            {
                "line": "67",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 156).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     */\n    public static VMRegion getRegionFromZone(String zone) {\n        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n    }\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/142/VMRegion.java\nindex 40dac7da32..276be86bf8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/142/VMRegion.java\n@@ -64,38 +64,44 @@ public enum VMRegion {\n      * @return\n      */\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n-    }\n+        return Arrays.stream(VMRegion.values()).filter(vmr->\n+                zone.toLowerCase().startsWith(vmr.region.toLowerCase()\n+    )\n \n-    /**\n+        )\n+        .findFirst().orElse(VMRegion.US_EAST);\n+     }\n+\n+     /**\n      * the human description of the region\n      * \n      * @return\n      */\n-    public String getDescription() {\n-        return description;\n-    }\n+     public String getDescription() {\n+         return description;\n+     }\n \n-    /**\n+     /**\n      * \n      * @inheritDoc\n      */\n-    public String toString() {\n-        return description;\n-    }\n+     public String toString() {\n+         return description;\n+     }\n \n-    /**\n+     /**\n      * @return the endpoint\n      */\n-    public String getEndpoint() {\n-        return endpoint;\n-    }\n+     public String getEndpoint() {\n+         return endpoint;\n+     }\n \n-    /**\n+     /**\n      * @return the region\n      */\n-    public String getRegion() {\n-        return region;\n-    }\n+     public String getRegion() {\n+         return region;\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/142/VMRegion.java\nindex 40dac7da32..c11eeb0cf6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/142/VMRegion.java\n@@ -17,85 +17,82 @@ import java.util.Arrays;\n \n /**\n  * represents a geographic data center that the vm will run in.\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public enum VMRegion {\n-    STANDALONE(\"standalone-agent\", \"Standalone\", \"Standalone Agent\", \"\"),\n-    US_EAST(\"us-east-1\", \"Virginia\", \"US East (Northern Virginia)\", \"ec2.us-east-1.amazonaws.com\"),\n-    US_EAST_2(\"us-east-2\", \"Ohio\", \"US East (Ohio)\", \"ec2.us-east-2.amazonaws.com\"),\n-    US_WEST_1(\"us-west-1\", \"Northern California\", \"US West (Northern California)\", \"ec2.us-west-1.amazonaws.com\"),\n-    US_WEST_2(\"us-west-2\", \"Oregon\", \"US West (Oregon)\", \"ec2.us-west-2.amazonaws.com\"),\n-    EUROPE(\"eu-west-1\", \"Ireland\", \"EU (Ireland)\", \"ec2.eu-west-1.amazonaws.com\"),\n-    ASIA_1(\"ap-southeast-1\", \"Singapore\", \"Asia Pacific (Singapore)\", \"ec2.ap-southeast-1.amazonaws.com\"),\n-    ASIA_2(\"ap-southeast-2\", \"Sydney\", \"Asia Pacific (Sydney)\", \"ec2.ap-southeast-2.amazonaws.com\"),\n-    ASIA_3(\"ap-northeast-1\", \"Tokyo\", \"Asia Pacific (Tokyo)\", \"ec2.ap-northeast-1.amazonaws.com\"),\n-    SOUTH_AMERICA(\"sa-east-1\", \"Sao Paulo\", \"South America (Sao Paulo)\", \"ec2.sa-east-1.amazonaws.com\");\n+  STANDALONE(\"standalone-agent\", \"Standalone\", \"Standalone Agent\", \"\"),\n+  US_EAST(\"us-east-1\", \"Virginia\", \"US East (Northern Virginia)\", \"ec2.us-east-1.amazonaws.com\"),\n+  US_EAST_2(\"us-east-2\", \"Ohio\", \"US East (Ohio)\", \"ec2.us-east-2.amazonaws.com\"),\n+  US_WEST_1(\"us-west-1\", \"Northern California\", \"US West (Northern California)\", \"ec2.us-west-1.amazonaws.com\"),\n+  US_WEST_2(\"us-west-2\", \"Oregon\", \"US West (Oregon)\", \"ec2.us-west-2.amazonaws.com\"),\n+  EUROPE(\"eu-west-1\", \"Ireland\", \"EU (Ireland)\", \"ec2.eu-west-1.amazonaws.com\"),\n+  ASIA_1(\"ap-southeast-1\", \"Singapore\", \"Asia Pacific (Singapore)\", \"ec2.ap-southeast-1.amazonaws.com\"),\n+  ASIA_2(\"ap-southeast-2\", \"Sydney\", \"Asia Pacific (Sydney)\", \"ec2.ap-southeast-2.amazonaws.com\"),\n+  ASIA_3(\"ap-northeast-1\", \"Tokyo\", \"Asia Pacific (Tokyo)\", \"ec2.ap-northeast-1.amazonaws.com\"),\n+  SOUTH_AMERICA(\"sa-east-1\", \"Sao Paulo\", \"South America (Sao Paulo)\", \"ec2.sa-east-1.amazonaws.com\");\n \n-    private String description;\n-    private String name;\n-    private String endpoint;\n-    private String region;\n+  private String description;\n+  private String name;\n+  private String endpoint;\n+  private String region;\n \n-    /**\n-     * \n-     * @param region\n-     * @param desc\n-     * @param endpoint\n-     */\n-    private VMRegion(String region, String name, String desc, String endpoint) {\n-        this.description = desc;\n-        this.name = name;\n-        this.endpoint = endpoint;\n-        this.region = region;\n-    }\n+  /**\n+   * @param region\n+   * @param desc\n+   * @param endpoint\n+   */\n+  private VMRegion(String region, String name, String desc, String endpoint) {\n+    this.description = desc;\n+    this.name = name;\n+    this.endpoint = endpoint;\n+    this.region = region;\n+  }\n \n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n+  /**\n+   * @return the name\n+   */\n+  public String getName() {\n+    return name;\n+  }\n \n-    /**\n-     * \n-     * @param zone\n-     * @return\n-     */\n-    public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n-    }\n+  /**\n+   * @param zone\n+   * @return\n+   */\n+  public static VMRegion getRegionFromZone(String zone) {\n+    return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase()))\n+      .findFirst().orElse(VMRegion.US_EAST);\n+  }\n \n-    /**\n-     * the human description of the region\n-     * \n-     * @return\n-     */\n-    public String getDescription() {\n-        return description;\n-    }\n+  /**\n+   * the human description of the region\n+   *\n+   * @return\n+   */\n+  public String getDescription() {\n+    return description;\n+  }\n \n-    /**\n-     * \n-     * @inheritDoc\n-     */\n-    public String toString() {\n-        return description;\n-    }\n+  /**\n+   * @inheritDoc\n+   */\n+  public String toString() {\n+    return description;\n+  }\n \n-    /**\n-     * @return the endpoint\n-     */\n-    public String getEndpoint() {\n-        return endpoint;\n-    }\n+  /**\n+   * @return the endpoint\n+   */\n+  public String getEndpoint() {\n+    return endpoint;\n+  }\n \n-    /**\n-     * @return the region\n-     */\n-    public String getRegion() {\n-        return region;\n-    }\n+  /**\n+   * @return the region\n+   */\n+  public String getRegion() {\n+    return region;\n+  }\n \n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/142/VMRegion.java\nindex 40dac7da32..7f835e9066 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/142/VMRegion.java\n@@ -98,4 +98,4 @@ public enum VMRegion {\n         return region;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/142/VMRegion.java\nindex 40dac7da32..36304cdbf9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/142/VMRegion.java\n@@ -13,6 +13,8 @@ package com.intuit.tank.vm.api.enumerated;\n  * #L%\n  */\n \n+\n+\n import java.util.Arrays;\n \n /**\n@@ -21,8 +23,12 @@ import java.util.Arrays;\n  * @author dangleton\n  * \n  */\n+\n public enum VMRegion {\n-    STANDALONE(\"standalone-agent\", \"Standalone\", \"Standalone Agent\", \"\"),\n+    STANDALONE(\"standalone-agent\",\n+\"Standalone\",\n+\"Standalone Agent\",\n+\"\"),\n     US_EAST(\"us-east-1\", \"Virginia\", \"US East (Northern Virginia)\", \"ec2.us-east-1.amazonaws.com\"),\n     US_EAST_2(\"us-east-2\", \"Ohio\", \"US East (Ohio)\", \"ec2.us-east-2.amazonaws.com\"),\n     US_WEST_1(\"us-west-1\", \"Northern California\", \"US West (Northern California)\", \"ec2.us-west-1.amazonaws.com\"),\n@@ -44,6 +50,7 @@ public enum VMRegion {\n      * @param desc\n      * @param endpoint\n      */\n+\n     private VMRegion(String region, String name, String desc, String endpoint) {\n         this.description = desc;\n         this.name = name;\n@@ -54,6 +61,8 @@ public enum VMRegion {\n     /**\n      * @return the name\n      */\n+\n+\n     public String getName() {\n         return name;\n     }\n@@ -63,8 +72,10 @@ public enum VMRegion {\n      * @param zone\n      * @return\n      */\n+\n+\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n+        return Arrays.stream(VMRegion.values()).filter(vmr-> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n     }\n \n     /**\n@@ -72,6 +83,8 @@ public enum VMRegion {\n      * \n      * @return\n      */\n+\n+\n     public String getDescription() {\n         return description;\n     }\n@@ -80,6 +93,8 @@ public enum VMRegion {\n      * \n      * @inheritDoc\n      */\n+\n+\n     public String toString() {\n         return description;\n     }\n@@ -87,6 +102,8 @@ public enum VMRegion {\n     /**\n      * @return the endpoint\n      */\n+\n+\n     public String getEndpoint() {\n         return endpoint;\n     }\n@@ -94,8 +111,10 @@ public enum VMRegion {\n     /**\n      * @return the region\n      */\n+\n+\n     public String getRegion() {\n         return region;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "56",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/142/VMRegion.java\nindex 40dac7da32..8e5ebc8d6f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/142/VMRegion.java\n@@ -64,38 +64,35 @@ public enum VMRegion {\n      * @return\n      */\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n-    }\n-\n-    /**\n+        return Arrays .stream(VMRegion.values()).filter( vmr->zone.toLowerCase() .startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);}/**\n      * the human description of the region\n      * \n      * @return\n-     */\n-    public String getDescription() {\n-        return description;\n-    }\n+     */public String getDescription() {\n+            return description;\n+        }\n \n-    /**\n+        /**\n      * \n      * @inheritDoc\n      */\n-    public String toString() {\n-        return description;\n-    }\n+        public String toString() {\n+            return description;\n+        }\n \n-    /**\n+        /**\n      * @return the endpoint\n      */\n-    public String getEndpoint() {\n-        return endpoint;\n-    }\n+        public String getEndpoint() {\n+            return endpoint;\n+        }\n \n-    /**\n+        /**\n      * @return the region\n      */\n-    public String getRegion() {\n-        return region;\n-    }\n+        public String getRegion() {\n+            return region;\n+        }\n \n-}\n+    }\n+    \n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/142/VMRegion.java\nindex 40dac7da32..276be86bf8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/142/VMRegion.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/142/VMRegion.java\n@@ -64,38 +64,44 @@ public enum VMRegion {\n      * @return\n      */\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.US_EAST);\n-    }\n+        return Arrays.stream(VMRegion.values()).filter(vmr->\n+                zone.toLowerCase().startsWith(vmr.region.toLowerCase()\n+    )\n \n-    /**\n+        )\n+        .findFirst().orElse(VMRegion.US_EAST);\n+     }\n+\n+     /**\n      * the human description of the region\n      * \n      * @return\n      */\n-    public String getDescription() {\n-        return description;\n-    }\n+     public String getDescription() {\n+         return description;\n+     }\n \n-    /**\n+     /**\n      * \n      * @inheritDoc\n      */\n-    public String toString() {\n-        return description;\n-    }\n+     public String toString() {\n+         return description;\n+     }\n \n-    /**\n+     /**\n      * @return the endpoint\n      */\n-    public String getEndpoint() {\n-        return endpoint;\n-    }\n+     public String getEndpoint() {\n+         return endpoint;\n+     }\n \n-    /**\n+     /**\n      * @return the region\n      */\n-    public String getRegion() {\n-        return region;\n-    }\n+     public String getRegion() {\n+         return region;\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 25
        }
    ]
}