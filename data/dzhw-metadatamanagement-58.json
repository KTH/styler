{
    "error_id": "58",
    "information": {
        "errors": [
            {
                "line": "40",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n          + \" If the id is postfixed with the version number it will return exactly the \"\n          + \"requested version, if available.\")\n  @GetMapping(value = \"/variables/{id:.+}\")",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/58/VariableResourceController.java\nindex 7bd9633b83..dde0e88fb2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/58/VariableResourceController.java\n@@ -38,7 +38,7 @@ public class VariableResourceController\n \n   @Override\n   @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n+      + \" If the id is postfixed with the version number it will return exactly the \"\n           + \"requested version, if available.\")\n   @GetMapping(value = \"/variables/{id:.+}\")\n   public ResponseEntity<Variable> getDomainObject(@PathVariable String id) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/58/VariableResourceController.java\nindex 7bd9633b83..e8495a163e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/58/VariableResourceController.java\n@@ -22,7 +22,7 @@ import io.swagger.v3.oas.annotations.tags.Tag;\n \n /**\n  * Variable REST Controller which overrides default spring data rest methods.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n @RepositoryRestController\n@@ -32,12 +32,13 @@ public class VariableResourceController\n     extends GenericDomainObjectResourceController<Variable, CrudService<Variable>> {\n \n   public VariableResourceController(CrudService<Variable> crudService,\n-      UserInformationProvider userInformationProvider) {\n+                                    UserInformationProvider userInformationProvider) {\n     super(crudService, userInformationProvider);\n   }\n \n   @Override\n-  @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n+  @Operation(description =\n+      \"Get the variable. Public users will get the latest version of the variables.\"\n           + \" If the id is postfixed with the version number it will return exactly the \"\n           + \"requested version, if available.\")\n   @GetMapping(value = \"/variables/{id:.+}\")\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Annotation 'PostMapping' have incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/58/VariableResourceController.java\nindex 7bd9633b83..a8d5f5406a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/58/VariableResourceController.java\n@@ -45,8 +45,7 @@ public class VariableResourceController\n     return super.getDomainObject(id);\n   }\n \n-\n-  @Override\n+@Override\n   @PostMapping(value = \"/variables\")\n   public ResponseEntity<?> postDomainObject(@RequestBody Variable variable) {\n     return super.postDomainObject(variable);\n@@ -68,4 +67,4 @@ public class VariableResourceController\n   protected URI buildLocationHeaderUri(Variable domainObject) {\n     return UriComponentsBuilder.fromPath(\"/api/variables/\" + domainObject.getId()).build().toUri();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/58/VariableResourceController.java\nindex 7bd9633b83..7c587d5527 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/58/VariableResourceController.java\n@@ -1,7 +1,6 @@\n package eu.dzhw.fdz.metadatamanagement.variablemanagement.rest;\n \n import java.net.URI;\n-\n import org.springframework.data.rest.webmvc.RepositoryRestController;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.DeleteMapping;\n@@ -12,7 +11,6 @@ import org.springframework.web.bind.annotation.PutMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.util.UriComponentsBuilder;\n-\n import eu.dzhw.fdz.metadatamanagement.common.rest.GenericDomainObjectResourceController;\n import eu.dzhw.fdz.metadatamanagement.common.service.CrudService;\n import eu.dzhw.fdz.metadatamanagement.usermanagement.security.UserInformationProvider;\n@@ -25,47 +23,53 @@ import io.swagger.v3.oas.annotations.tags.Tag;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n @RepositoryRestController\n-@Tag(name = \"Variable Resource\", description = \"Endpoints used by the MDM to manage variables.\")\n+@Tag(name = \"Variable Resource\",\n+    description = \"Endpoints used by the MDM to manage variables.\")\n @RequestMapping(\"/api\")\n-public class VariableResourceController\n-    extends GenericDomainObjectResourceController<Variable, CrudService<Variable>> {\n+public class VariableResourceController extends GenericDomainObjectResourceController<Variable, CrudService<Variable>> {\n \n-  public VariableResourceController(CrudService<Variable> crudService,\n-      UserInformationProvider userInformationProvider) {\n+    public VariableResourceController(CrudService<Variable> crudService,\n+        UserInformationProvider userInformationProvider) {\n     super(crudService, userInformationProvider);\n-  }\n+    }\n \n-  @Override\n-  @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n-          + \"requested version, if available.\")\n-  @GetMapping(value = \"/variables/{id:.+}\")\n-  public ResponseEntity<Variable> getDomainObject(@PathVariable String id) {\n+\n+    @Override\n+    @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\" + \" If the id is postfixed with the version number it will return exactly the \" + \"requested version, if available.\")\n+    @GetMapping(value = \"/variables/{id:.+}\")\n+    public ResponseEntity<Variable> getDomainObject(@PathVariable String id) {\n     return super.getDomainObject(id);\n-  }\n+    }\n \n \n-  @Override\n-  @PostMapping(value = \"/variables\")\n-  public ResponseEntity<?> postDomainObject(@RequestBody Variable variable) {\n+    @Override\n+    @PostMapping(value = \"/variables\")\n+    public ResponseEntity<?> postDomainObject(@RequestBody Variable variable) {\n     return super.postDomainObject(variable);\n-  }\n+    }\n+\n \n-  @Override\n-  @PutMapping(value = \"/variables/{id:.+}\")\n-  public ResponseEntity<?> putDomainObject(@RequestBody Variable domainObject) {\n+    @Override\n+    @PutMapping(value = \"/variables/{id:.+}\")\n+    public ResponseEntity<?> putDomainObject(@RequestBody Variable domainObject) {\n     return super.putDomainObject(domainObject);\n-  }\n+    }\n \n-  @Override\n-  @DeleteMapping(\"/variables/{id:.+}\")\n-  public ResponseEntity<?> deleteDomainObject(@PathVariable String id) {\n+\n+    @Override\n+    @DeleteMapping(\"/variables/{id:.+}\")\n+    public ResponseEntity<?> deleteDomainObject(@PathVariable String id) {\n     return super.deleteDomainObject(id);\n-  }\n+    }\n+\n \n-  @Override\n-  protected URI buildLocationHeaderUri(Variable domainObject) {\n-    return UriComponentsBuilder.fromPath(\"/api/variables/\" + domainObject.getId()).build().toUri();\n-  }\n-}\n+    @Override\n+    protected URI buildLocationHeaderUri(Variable domainObject) {\n+    return UriComponentsBuilder.fromPath(\"/api/variables/\"\n+                                             + domainObject.getId()).build()\n+                                                                    .toUri();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/58/VariableResourceController.java\nindex 7bd9633b83..dde0e88fb2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/58/VariableResourceController.java\n@@ -38,7 +38,7 @@ public class VariableResourceController\n \n   @Override\n   @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n+      + \" If the id is postfixed with the version number it will return exactly the \"\n           + \"requested version, if available.\")\n   @GetMapping(value = \"/variables/{id:.+}\")\n   public ResponseEntity<Variable> getDomainObject(@PathVariable String id) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Annotation 'Operation' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/58/VariableResourceController.java\nindex 7bd9633b83..c775404f2a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/58/VariableResourceController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/58/VariableResourceController.java\n@@ -36,8 +36,7 @@ public class VariableResourceController\n     super(crudService, userInformationProvider);\n   }\n \n-  @Override\n-  @Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n+  @Override @ Operation(description = \"Get the variable. Public users will get the latest version of the variables.\"\n           + \" If the id is postfixed with the version number it will return exactly the \"\n           + \"requested version, if available.\")\n   @GetMapping(value = \"/variables/{id:.+}\")\n",
            "diff_size": 2
        }
    ]
}