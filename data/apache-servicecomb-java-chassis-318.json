{
    "error_id": "318",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "54",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "\n    throw new IllegalArgumentException(\n        \"only support String or TagFinder, but got \" +\n            (obj == null ? \"null\" : obj.getClass().getName()));\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/318/TagFinder.java\nindex 0762afb8de..39068629fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/318/TagFinder.java\n@@ -29,17 +29,16 @@ public interface TagFinder {\n     }\n \n     throw new IllegalArgumentException(\n-        \"only support String or TagFinder, but got \" +\n-            (obj == null ? \"null\" : obj.getClass().getName()));\n-  }\n+        \"only support String or TagFinder, but got \" + (obj == null ? \"null\" : obj.getClass().getName()));\n+}\n \n-  default boolean skipOnNull() {\n-    return false;\n-  }\n+default boolean skipOnNull() {\n+  return false;\n+}\n \n-  String getTagKey();\n+String getTagKey();\n \n-  // read target tag from tags\n-  // return directly or do some change and then return\n-  Tag find(Iterable<Tag> tags);\n+// read target tag from tags\n+// return directly or do some change and then return\n+Tag find(Iterable<Tag> tags);\n }\n",
            "diff_size": 10
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "33",
                    "column": "54",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/318/TagFinder.java\nindex 0762afb8de..08d1e1e023 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/318/TagFinder.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.foundation.metrics.publish.spectator;\n \n import com.netflix.spectator.api.Tag;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/318/TagFinder.java\nindex 0762afb8de..3dde47b5f2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/318/TagFinder.java\n@@ -29,8 +29,7 @@ public interface TagFinder {\n     }\n \n     throw new IllegalArgumentException(\n-        \"only support String or TagFinder, but got \" +\n-            (obj == null ? \"null\" : obj.getClass().getName()));\n+        \"only support String or TagFinder, but got \" + (obj == null ? \"null\" : obj.getClass().getName()));\n   }\n \n   default boolean skipOnNull() {\n@@ -42,4 +41,4 @@ public interface TagFinder {\n   // read target tag from tags\n   // return directly or do some change and then return\n   Tag find(Iterable<Tag> tags);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/318/TagFinder.java\nindex 0762afb8de..39068629fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/318/TagFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/318/TagFinder.java\n@@ -29,17 +29,16 @@ public interface TagFinder {\n     }\n \n     throw new IllegalArgumentException(\n-        \"only support String or TagFinder, but got \" +\n-            (obj == null ? \"null\" : obj.getClass().getName()));\n-  }\n+        \"only support String or TagFinder, but got \" + (obj == null ? \"null\" : obj.getClass().getName()));\n+}\n \n-  default boolean skipOnNull() {\n-    return false;\n-  }\n+default boolean skipOnNull() {\n+  return false;\n+}\n \n-  String getTagKey();\n+String getTagKey();\n \n-  // read target tag from tags\n-  // return directly or do some change and then return\n-  Tag find(Iterable<Tag> tags);\n+// read target tag from tags\n+// return directly or do some change and then return\n+Tag find(Iterable<Tag> tags);\n }\n",
            "diff_size": 10
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "column": "54",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}