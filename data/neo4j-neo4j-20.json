{
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "131",
                "column": "40",
                "severity": "error",
                "message": "')' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n            MemoryTracker memoryTracker)\n    {\n        EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n                memoryTracker ) );",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/20/FusionIndexProvider.java\nindex a44d0c3b1d..2d30cdaf58 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/20/FusionIndexProvider.java\n@@ -128,7 +128,7 @@ public class FusionIndexProvider extends IndexProvider\n \n     @Override\n     public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n-            MemoryTracker memoryTracker)\n+            MemoryTracker memoryTracker )\n     {\n         EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n                 memoryTracker ) );\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "109",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/20/FusionIndexProvider.java\nindex a44d0c3b1d..88cbbd3dce 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/20/FusionIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import org.eclipse.collections.api.tuple.Pair;\n@@ -68,113 +69,113 @@ public class FusionIndexProvider extends IndexProvider\n     private final FileSystemAbstraction fs;\n \n     public FusionIndexProvider(\n-            // good to be strict with specific providers here since this is dev facing\n-            IndexProvider genericProvider,\n-            IndexProvider luceneProvider,\n-            SlotSelector slotSelector,\n-            IndexProviderDescriptor descriptor,\n-            IndexDirectoryStructure.Factory directoryStructure,\n-            FileSystemAbstraction fs,\n-            boolean archiveFailedIndex )\n+        // good to be strict with specific providers here since this is dev facing\n+        IndexProvider genericProvider,\n+        IndexProvider luceneProvider,\n+        SlotSelector slotSelector,\n+        IndexProviderDescriptor descriptor,\n+        IndexDirectoryStructure.Factory directoryStructure,\n+        FileSystemAbstraction fs,\n+        boolean archiveFailedIndex)\n     {\n-        super( descriptor, directoryStructure );\n+        super(descriptor, directoryStructure);\n         this.archiveFailedIndex = archiveFailedIndex;\n         this.slotSelector = slotSelector;\n         this.providers = new InstanceSelector<>();\n         this.fs = fs;\n-        fillProvidersSelector( providers, genericProvider, luceneProvider );\n-        slotSelector.validateSatisfied( providers );\n+        fillProvidersSelector(providers, genericProvider, luceneProvider);\n+        slotSelector.validateSatisfied(providers);\n     }\n \n-    private static void fillProvidersSelector( InstanceSelector<IndexProvider> providers, IndexProvider genericProvider, IndexProvider luceneProvider )\n+    private static void fillProvidersSelector(InstanceSelector<IndexProvider> providers, IndexProvider genericProvider, IndexProvider luceneProvider)\n     {\n-        providers.put( GENERIC, genericProvider );\n-        providers.put( LUCENE, luceneProvider );\n+        providers.put(GENERIC, genericProvider);\n+        providers.put(LUCENE, luceneProvider);\n     }\n \n     @Override\n-    public IndexDescriptor completeConfiguration( IndexDescriptor index )\n+    public IndexDescriptor completeConfiguration(IndexDescriptor index)\n     {\n-        EnumMap<IndexSlot,IndexDescriptor> descriptors = new EnumMap<>( IndexSlot.class );\n-        EnumMap<IndexSlot,IndexCapability> capabilities = new EnumMap<>( IndexSlot.class );\n-        for ( IndexSlot slot : IndexSlot.values() )\n+        EnumMap<IndexSlot, IndexDescriptor> descriptors = new EnumMap<>(IndexSlot.class);\n+        EnumMap<IndexSlot, IndexCapability> capabilities = new EnumMap<>(IndexSlot.class);\n+        for (IndexSlot slot : IndexSlot.values())\n         {\n-            IndexDescriptor result = providers.select( slot ).completeConfiguration( index );\n-            descriptors.put( slot, result );\n-            capabilities.put( slot, result.getCapability() );\n+            IndexDescriptor result = providers.select(slot).completeConfiguration(index);\n+            descriptors.put(slot, result);\n+            capabilities.put(slot, result.getCapability());\n         }\n         IndexConfig config = index.getIndexConfig();\n-        for ( IndexDescriptor result : descriptors.values() )\n+        for (IndexDescriptor result : descriptors.values())\n         {\n             IndexConfig resultConfig = result.getIndexConfig();\n-            for ( Pair<String,Value> entry : resultConfig.entries() )\n+            for (Pair<String, Value> entry : resultConfig.entries())\n             {\n-                config = config.withIfAbsent( entry.getOne(), entry.getTwo() );\n+                config = config.withIfAbsent(entry.getOne(), entry.getTwo());\n             }\n         }\n-        index = index.withIndexConfig( config );\n-        if ( index.getCapability().equals( IndexCapability.NO_CAPABILITY ) )\n+        index = index.withIndexConfig(config);\n+        if (index.getCapability().equals(IndexCapability.NO_CAPABILITY))\n         {\n-            index = index.withIndexCapability( new FusionIndexCapability( slotSelector, new InstanceSelector<>( capabilities ) ) );\n+            index = index.withIndexCapability(new FusionIndexCapability(slotSelector, new InstanceSelector<>(capabilities)));\n         }\n         return index;\n     }\n \n     @Override\n-    public MinimalIndexAccessor getMinimalIndexAccessor( IndexDescriptor descriptor )\n+    public MinimalIndexAccessor getMinimalIndexAccessor(IndexDescriptor descriptor)\n     {\n-        return new NativeMinimalIndexAccessor( descriptor, indexFiles( descriptor ) );\n+        return new NativeMinimalIndexAccessor(descriptor, indexFiles(descriptor));\n     }\n \n     @Override\n-    public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n-            MemoryTracker memoryTracker)\n+    public IndexPopulator getPopulator(IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n+                                       MemoryTracker memoryTracker)\n     {\n-        EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n-                memoryTracker ) );\n-        IndexFiles indexFiles = indexFiles( descriptor );\n-        return new FusionIndexPopulator( slotSelector, new InstanceSelector<>( populators ), indexFiles, archiveFailedIndex );\n+        EnumMap<IndexSlot, IndexPopulator> populators = providers.map(provider -> provider.getPopulator(descriptor, samplingConfig, bufferFactory,\n+            memoryTracker));\n+        IndexFiles indexFiles = indexFiles(descriptor);\n+        return new FusionIndexPopulator(slotSelector, new InstanceSelector<>(populators), indexFiles, archiveFailedIndex);\n     }\n \n     @Override\n-    public IndexAccessor getOnlineAccessor( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig ) throws IOException\n+    public IndexAccessor getOnlineAccessor(IndexDescriptor descriptor, IndexSamplingConfig samplingConfig) throws IOException\n     {\n-        EnumMap<IndexSlot,IndexAccessor> accessors = providers.map( provider -> provider.getOnlineAccessor( descriptor, samplingConfig ) );\n-        IndexFiles indexFiles = indexFiles( descriptor );\n-        return new FusionIndexAccessor( slotSelector, new InstanceSelector<>( accessors ), descriptor, indexFiles );\n+        EnumMap<IndexSlot, IndexAccessor> accessors = providers.map(provider -> provider.getOnlineAccessor(descriptor, samplingConfig));\n+        IndexFiles indexFiles = indexFiles(descriptor);\n+        return new FusionIndexAccessor(slotSelector, new InstanceSelector<>(accessors), descriptor, indexFiles);\n     }\n \n     @Override\n-    public String getPopulationFailure( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+    public String getPopulationFailure(IndexDescriptor descriptor, PageCursorTracer cursorTracer)\n     {\n         StringBuilder builder = new StringBuilder();\n-        providers.forAll( p -> writeFailure( p.getClass().getSimpleName(), builder, p, descriptor, cursorTracer ) );\n+        providers.forAll(p -> writeFailure(p.getClass().getSimpleName(), builder, p, descriptor, cursorTracer));\n         return builder.toString();\n     }\n \n-    private void writeFailure( String indexName, StringBuilder builder, IndexProvider provider, IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+    private void writeFailure(String indexName, StringBuilder builder, IndexProvider provider, IndexDescriptor descriptor, PageCursorTracer cursorTracer)\n     {\n-        String failure = provider.getPopulationFailure( descriptor, cursorTracer );\n-        if ( isNotEmpty( failure ) )\n+        String failure = provider.getPopulationFailure(descriptor, cursorTracer);\n+        if (isNotEmpty(failure))\n         {\n-            builder.append( indexName );\n-            builder.append( \": \" );\n-            builder.append( failure );\n-            builder.append( ' ' );\n+            builder.append(indexName);\n+            builder.append(\": \");\n+            builder.append(failure);\n+            builder.append(' ');\n         }\n     }\n \n     @Override\n-    public InternalIndexState getInitialState( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+    public InternalIndexState getInitialState(IndexDescriptor descriptor, PageCursorTracer cursorTracer)\n     {\n-        Iterable<InternalIndexState> statesIterable = providers.transform( p -> p.getInitialState( descriptor, cursorTracer ) );\n-        List<InternalIndexState> states = Iterables.asList( statesIterable );\n-        if ( states.contains( FAILED ) )\n+        Iterable<InternalIndexState> statesIterable = providers.transform(p -> p.getInitialState(descriptor, cursorTracer));\n+        List<InternalIndexState> states = Iterables.asList(statesIterable);\n+        if (states.contains(FAILED))\n         {\n             // One of the state is FAILED, the whole state must be considered FAILED\n             return FAILED;\n         }\n-        if ( states.contains( POPULATING ) )\n+        if (states.contains(POPULATING))\n         {\n             // No state is FAILED and one of the state is POPULATING, the whole state must be considered POPULATING\n             return POPULATING;\n@@ -184,23 +185,23 @@ public class FusionIndexProvider extends IndexProvider\n     }\n \n     @Override\n-    public void validatePrototype( IndexPrototype prototype )\n+    public void validatePrototype(IndexPrototype prototype)\n     {\n-        super.validatePrototype( prototype );\n-        for ( IndexSlot slot : IndexSlot.values() )\n+        super.validatePrototype(prototype);\n+        for (IndexSlot slot : IndexSlot.values())\n         {\n-            providers.select( slot ).validatePrototype( prototype );\n+            providers.select(slot).validatePrototype(prototype);\n         }\n     }\n \n     @Override\n-    public StoreMigrationParticipant storeMigrationParticipant( FileSystemAbstraction fs, PageCache pageCache, StorageEngineFactory storageEngineFactory )\n+    public StoreMigrationParticipant storeMigrationParticipant(FileSystemAbstraction fs, PageCache pageCache, StorageEngineFactory storageEngineFactory)\n     {\n-        return new SchemaIndexMigrator( \"Schema indexes\", fs, this.directoryStructure(), storageEngineFactory );\n+        return new SchemaIndexMigrator(\"Schema indexes\", fs, this.directoryStructure(), storageEngineFactory);\n     }\n \n-    private IndexFiles indexFiles( IndexDescriptor descriptor )\n+    private IndexFiles indexFiles(IndexDescriptor descriptor)\n     {\n-        return new IndexFiles( fs, directoryStructure(), descriptor.getId() );\n+        return new IndexFiles(fs, directoryStructure(), descriptor.getId());\n     }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/20/FusionIndexProvider.java\nindex a44d0c3b1d..8fb542fd61 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/20/FusionIndexProvider.java\n@@ -128,8 +128,8 @@ public class FusionIndexProvider extends IndexProvider\n \n     @Override\n     public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n-            MemoryTracker memoryTracker)\n-    {\n+            MemoryTracker memoryTracker )\n+{\n         EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n                 memoryTracker ) );\n         IndexFiles indexFiles = indexFiles( descriptor );\n@@ -203,4 +203,4 @@ public class FusionIndexProvider extends IndexProvider\n     {\n         return new IndexFiles( fs, directoryStructure(), descriptor.getId() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/20/FusionIndexProvider.java\nindex a44d0c3b1d..2d30cdaf58 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/20/FusionIndexProvider.java\n@@ -128,7 +128,7 @@ public class FusionIndexProvider extends IndexProvider\n \n     @Override\n     public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n-            MemoryTracker memoryTracker)\n+            MemoryTracker memoryTracker )\n     {\n         EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n                 memoryTracker ) );\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "131",
                    "column": "43",
                    "severity": "error",
                    "message": "'{' at column 43 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/20/FusionIndexProvider.java\nindex a44d0c3b1d..fafa7a51dc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/20/FusionIndexProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/20/FusionIndexProvider.java\n@@ -128,79 +128,79 @@ public class FusionIndexProvider extends IndexProvider\n \n     @Override\n     public IndexPopulator getPopulator( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig, ByteBufferFactory bufferFactory,\n-            MemoryTracker memoryTracker)\n-    {\n-        EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n-                memoryTracker ) );\n-        IndexFiles indexFiles = indexFiles( descriptor );\n-        return new FusionIndexPopulator( slotSelector, new InstanceSelector<>( populators ), indexFiles, archiveFailedIndex );\n-    }\n+            MemoryTracker memoryTracker ) {\n+                EnumMap<IndexSlot,IndexPopulator> populators = providers.map( provider -> provider.getPopulator( descriptor, samplingConfig, bufferFactory,\n+                        memoryTracker ) );\n+                IndexFiles indexFiles = indexFiles( descriptor );\n+                return new FusionIndexPopulator( slotSelector, new InstanceSelector<>( populators ), indexFiles, archiveFailedIndex );\n+            }\n \n-    @Override\n-    public IndexAccessor getOnlineAccessor( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n-        EnumMap<IndexSlot,IndexAccessor> accessors = providers.map( provider -> provider.getOnlineAccessor( descriptor, samplingConfig ) );\n-        IndexFiles indexFiles = indexFiles( descriptor );\n-        return new FusionIndexAccessor( slotSelector, new InstanceSelector<>( accessors ), descriptor, indexFiles );\n-    }\n+            @Override\n+            public IndexAccessor getOnlineAccessor( IndexDescriptor descriptor, IndexSamplingConfig samplingConfig ) throws IOException\n+            {\n+                EnumMap<IndexSlot,IndexAccessor> accessors = providers.map( provider -> provider.getOnlineAccessor( descriptor, samplingConfig ) );\n+                IndexFiles indexFiles = indexFiles( descriptor );\n+                return new FusionIndexAccessor( slotSelector, new InstanceSelector<>( accessors ), descriptor, indexFiles );\n+            }\n \n-    @Override\n-    public String getPopulationFailure( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n-    {\n-        StringBuilder builder = new StringBuilder();\n-        providers.forAll( p -> writeFailure( p.getClass().getSimpleName(), builder, p, descriptor, cursorTracer ) );\n-        return builder.toString();\n-    }\n+            @Override\n+            public String getPopulationFailure( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+            {\n+                StringBuilder builder = new StringBuilder();\n+                providers.forAll( p -> writeFailure( p.getClass().getSimpleName(), builder, p, descriptor, cursorTracer ) );\n+                return builder.toString();\n+            }\n \n-    private void writeFailure( String indexName, StringBuilder builder, IndexProvider provider, IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n-    {\n-        String failure = provider.getPopulationFailure( descriptor, cursorTracer );\n-        if ( isNotEmpty( failure ) )\n-        {\n-            builder.append( indexName );\n-            builder.append( \": \" );\n-            builder.append( failure );\n-            builder.append( ' ' );\n-        }\n-    }\n+            private void writeFailure( String indexName, StringBuilder builder, IndexProvider provider, IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+            {\n+                String failure = provider.getPopulationFailure( descriptor, cursorTracer );\n+                if ( isNotEmpty( failure ) )\n+                {\n+                    builder.append( indexName );\n+                    builder.append( \": \" );\n+                    builder.append( failure );\n+                    builder.append( ' ' );\n+                }\n+            }\n \n-    @Override\n-    public InternalIndexState getInitialState( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n-    {\n-        Iterable<InternalIndexState> statesIterable = providers.transform( p -> p.getInitialState( descriptor, cursorTracer ) );\n-        List<InternalIndexState> states = Iterables.asList( statesIterable );\n-        if ( states.contains( FAILED ) )\n-        {\n-            // One of the state is FAILED, the whole state must be considered FAILED\n-            return FAILED;\n-        }\n-        if ( states.contains( POPULATING ) )\n-        {\n-            // No state is FAILED and one of the state is POPULATING, the whole state must be considered POPULATING\n-            return POPULATING;\n-        }\n-        // This means that all parts are ONLINE\n-        return InternalIndexState.ONLINE;\n-    }\n+            @Override\n+            public InternalIndexState getInitialState( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+            {\n+                Iterable<InternalIndexState> statesIterable = providers.transform( p -> p.getInitialState( descriptor, cursorTracer ) );\n+                List<InternalIndexState> states = Iterables.asList( statesIterable );\n+                if ( states.contains( FAILED ) )\n+                {\n+                    // One of the state is FAILED, the whole state must be considered FAILED\n+                    return FAILED;\n+                }\n+                if ( states.contains( POPULATING ) )\n+                {\n+                    // No state is FAILED and one of the state is POPULATING, the whole state must be considered POPULATING\n+                    return POPULATING;\n+                }\n+                // This means that all parts are ONLINE\n+                return InternalIndexState.ONLINE;\n+            }\n \n-    @Override\n-    public void validatePrototype( IndexPrototype prototype )\n-    {\n-        super.validatePrototype( prototype );\n-        for ( IndexSlot slot : IndexSlot.values() )\n-        {\n-            providers.select( slot ).validatePrototype( prototype );\n-        }\n-    }\n+            @Override\n+            public void validatePrototype( IndexPrototype prototype )\n+            {\n+                super.validatePrototype( prototype );\n+                for ( IndexSlot slot : IndexSlot.values() )\n+                {\n+                    providers.select( slot ).validatePrototype( prototype );\n+                }\n+            }\n \n-    @Override\n-    public StoreMigrationParticipant storeMigrationParticipant( FileSystemAbstraction fs, PageCache pageCache, StorageEngineFactory storageEngineFactory )\n-    {\n-        return new SchemaIndexMigrator( \"Schema indexes\", fs, this.directoryStructure(), storageEngineFactory );\n-    }\n+            @Override\n+            public StoreMigrationParticipant storeMigrationParticipant( FileSystemAbstraction fs, PageCache pageCache, StorageEngineFactory storageEngineFactory )\n+            {\n+                return new SchemaIndexMigrator( \"Schema indexes\", fs, this.directoryStructure(), storageEngineFactory );\n+            }\n \n-    private IndexFiles indexFiles( IndexDescriptor descriptor )\n-    {\n-        return new IndexFiles( fs, directoryStructure(), descriptor.getId() );\n-    }\n-}\n+            private IndexFiles indexFiles( IndexDescriptor descriptor )\n+            {\n+                return new IndexFiles( fs, directoryStructure(), descriptor.getId() );\n+            }\n+        }\n+        \n\\ No newline at end of file\n",
            "diff_size": 70
        }
    ]
}