{
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * All job execution info should be in this entity\n *\n * @author tnine\n */\npublic class JobStat extends TypedEntity {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/40/JobStat.java\nindex 3185e3f187..4025675572 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/40/JobStat.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.entities;\n \n \n@@ -31,146 +32,168 @@ import org.apache.usergrid.persistence.annotations.EntityProperty;\n public class JobStat extends TypedEntity {\n \n \n-    @EntityProperty(required = true, basic = true, indexed = true)\n-    private String jobName;\n-\n-    @EntityProperty(required = true, basic = true, indexed = true)\n-    private UUID jobId;\n-\n-    @EntityProperty(required = true, basic = true, indexed = true)\n-    private long startTime;\n-\n-    @EntityProperty(required = true, basic = true, indexed = true)\n-    private int runCount;\n-\n-    @EntityProperty(required = true, basic = true, indexed = true)\n-    private int delayCount;\n-\n-    @EntityProperty(required = true, basic = true, indexed = true)\n-    private long duration;\n-\n-\n-    /**\n-     * @param jobName\n-     * @param startTime\n-     */\n-    public JobStat() {\n-    }\n-\n-\n-    /**\n-     * @param jobName\n-     * @param jobId\n-     */\n-    public JobStat( String jobName, UUID jobId ) {\n-        super();\n-        this.jobName = jobName;\n-        this.jobId = jobId;\n-    }\n-\n-\n-    /** @return the jobName */\n-    public String getJobName() {\n-        return jobName;\n-    }\n-\n-\n-    /** @param jobName the jobName to set */\n-    public void setJobName( String jobName ) {\n-        this.jobName = jobName;\n-    }\n-\n+  @EntityProperty(required = true, basic = true, indexed = true)\n+  private String jobName;\n \n-    /** @return the fireTime */\n-    public long getStartTime() {\n-        return startTime;\n-    }\n+  @EntityProperty(required = true, basic = true, indexed = true)\n+  private UUID jobId;\n \n+  @EntityProperty(required = true, basic = true, indexed = true)\n+  private long startTime;\n \n-    /**\n-     * Don't set this, it won't accomplish anything.  This is overwritten by the job as an audit record\n-     *\n-     * @param startTime the fireTime to set\n-     */\n-    public void setStartTime( long startTime ) {\n-        this.startTime = startTime;\n-    }\n+  @EntityProperty(required = true, basic = true, indexed = true)\n+  private int runCount;\n \n+  @EntityProperty(required = true, basic = true, indexed = true)\n+  private int delayCount;\n \n-    /** Increment the run count */\n-    public void incrementRuns() {\n-        runCount++;\n-    }\n+  @EntityProperty(required = true, basic = true, indexed = true)\n+  private long duration;\n \n \n-    /** Increment the run count */\n-    public void incrementDelays() {\n-        delayCount++;\n-    }\n+  /**\n+   * @param jobName\n+   * @param startTime\n+   */\n+  public JobStat() {\n+  }\n \n \n-    /** Get the number of times this job has failed */\n-    public int getRunCount() {\n-        return runCount;\n-    }\n+  /**\n+   * @param jobName\n+   * @param jobId\n+   */\n+  public JobStat(String jobName, UUID jobId) {\n+    super();\n+    this.jobName = jobName;\n+    this.jobId = jobId;\n+  }\n \n \n-    /**\n-     * DON'T CALL THIS, USE THE INRECMENT METHOD!\n-     *\n-     * @param failCount the failCount to set\n-     */\n-    public void setRunCount( int runCount ) {\n-        this.runCount = runCount;\n-    }\n+  /**\n+   * @return the jobName\n+   */\n+  public String getJobName() {\n+    return jobName;\n+  }\n \n \n-    /**\n-     * Return the total number of attempts that have resulted in an error and not an explicit delay\n-     * <p/>\n-     * runCount - delayCount\n-     */\n-    public int getTotalAttempts() {\n-        return runCount - delayCount;\n-    }\n+  /**\n+   * @param jobName the jobName to set\n+   */\n+  public void setJobName(String jobName) {\n+    this.jobName = jobName;\n+  }\n \n \n-    /** @return the delayCount */\n-    public int getDelayCount() {\n-        return delayCount;\n-    }\n+  /**\n+   * @return the fireTime\n+   */\n+  public long getStartTime() {\n+    return startTime;\n+  }\n \n \n-    /**\n-     * DON'T CALL THIS, USE THE INRECMENT METHOD!\n-     *\n-     * @param delayCount the delayCount to set\n-     */\n-    public void setDelayCount( int delayCount ) {\n-        this.delayCount = delayCount;\n-    }\n+  /**\n+   * Don't set this, it won't accomplish anything.  This is overwritten by the job as an audit record\n+   *\n+   * @param startTime the fireTime to set\n+   */\n+  public void setStartTime(long startTime) {\n+    this.startTime = startTime;\n+  }\n \n \n-    /** @return the duration */\n-    public long getDuration() {\n-        return duration;\n-    }\n+  /**\n+   * Increment the run count\n+   */\n+  public void incrementRuns() {\n+    runCount++;\n+  }\n \n \n-    /** @param duration the duration to set */\n-    public void setDuration( long duration ) {\n-        this.duration = duration;\n-    }\n+  /**\n+   * Increment the run count\n+   */\n+  public void incrementDelays() {\n+    delayCount++;\n+  }\n \n \n-    /** @return the jobId */\n-    public UUID getJobId() {\n-        return jobId;\n-    }\n+  /**\n+   * Get the number of times this job has failed\n+   */\n+  public int getRunCount() {\n+    return runCount;\n+  }\n \n \n-    /** @param jobId the jobId to set */\n-    public void setJobId( UUID jobId ) {\n-        this.jobId = jobId;\n-    }\n+  /**\n+   * DON'T CALL THIS, USE THE INRECMENT METHOD!\n+   *\n+   * @param failCount the failCount to set\n+   */\n+  public void setRunCount(int runCount) {\n+    this.runCount = runCount;\n+  }\n+\n+\n+  /**\n+   * Return the total number of attempts that have resulted in an error and not an explicit delay\n+   * <p/>\n+   * runCount - delayCount\n+   */\n+  public int getTotalAttempts() {\n+    return runCount - delayCount;\n+  }\n+\n+\n+  /**\n+   * @return the delayCount\n+   */\n+  public int getDelayCount() {\n+    return delayCount;\n+  }\n+\n+\n+  /**\n+   * DON'T CALL THIS, USE THE INRECMENT METHOD!\n+   *\n+   * @param delayCount the delayCount to set\n+   */\n+  public void setDelayCount(int delayCount) {\n+    this.delayCount = delayCount;\n+  }\n+\n+\n+  /**\n+   * @return the duration\n+   */\n+  public long getDuration() {\n+    return duration;\n+  }\n+\n+\n+  /**\n+   * @param duration the duration to set\n+   */\n+  public void setDuration(long duration) {\n+    this.duration = duration;\n+  }\n+\n+\n+  /**\n+   * @return the jobId\n+   */\n+  public UUID getJobId() {\n+    return jobId;\n+  }\n+\n+\n+  /**\n+   * @param jobId the jobId to set\n+   */\n+  public void setJobId(UUID jobId) {\n+    this.jobId = jobId;\n+  }\n }\n",
            "diff_size": 201
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/40/JobStat.java\nindex 3185e3f187..d01999548a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/40/JobStat.java\n@@ -30,7 +30,6 @@ import org.apache.usergrid.persistence.annotations.EntityProperty;\n  */\n public class JobStat extends TypedEntity {\n \n-\n     @EntityProperty(required = true, basic = true, indexed = true)\n     private String jobName;\n \n@@ -173,4 +172,4 @@ public class JobStat extends TypedEntity {\n     public void setJobId( UUID jobId ) {\n         this.jobId = jobId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/40/JobStat.java\nindex 3185e3f187..e140dcd7f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/40/JobStat.java\n@@ -18,7 +18,6 @@ package org.apache.usergrid.persistence.entities;\n \n \n import java.util.UUID;\n-\n import org.apache.usergrid.persistence.TypedEntity;\n import org.apache.usergrid.persistence.annotations.EntityProperty;\n \n@@ -28,9 +27,10 @@ import org.apache.usergrid.persistence.annotations.EntityProperty;\n  *\n  * @author tnine\n  */\n-public class JobStat extends TypedEntity {\n \n \n+public class JobStat extends TypedEntity {\n+\n     @EntityProperty(required = true, basic = true, indexed = true)\n     private String jobName;\n \n@@ -54,6 +54,8 @@ public class JobStat extends TypedEntity {\n      * @param jobName\n      * @param startTime\n      */\n+\n+\n     public JobStat() {\n     }\n \n@@ -62,6 +64,8 @@ public class JobStat extends TypedEntity {\n      * @param jobName\n      * @param jobId\n      */\n+\n+\n     public JobStat( String jobName, UUID jobId ) {\n         super();\n         this.jobName = jobName;\n@@ -70,18 +74,24 @@ public class JobStat extends TypedEntity {\n \n \n     /** @return the jobName */\n+\n+\n     public String getJobName() {\n         return jobName;\n     }\n \n \n     /** @param jobName the jobName to set */\n+\n+\n     public void setJobName( String jobName ) {\n         this.jobName = jobName;\n     }\n \n \n     /** @return the fireTime */\n+\n+\n     public long getStartTime() {\n         return startTime;\n     }\n@@ -92,24 +102,32 @@ public class JobStat extends TypedEntity {\n      *\n      * @param startTime the fireTime to set\n      */\n+\n+\n     public void setStartTime( long startTime ) {\n         this.startTime = startTime;\n     }\n \n \n     /** Increment the run count */\n+\n+\n     public void incrementRuns() {\n         runCount++;\n     }\n \n \n     /** Increment the run count */\n+\n+\n     public void incrementDelays() {\n         delayCount++;\n     }\n \n \n     /** Get the number of times this job has failed */\n+\n+\n     public int getRunCount() {\n         return runCount;\n     }\n@@ -120,6 +138,8 @@ public class JobStat extends TypedEntity {\n      *\n      * @param failCount the failCount to set\n      */\n+\n+\n     public void setRunCount( int runCount ) {\n         this.runCount = runCount;\n     }\n@@ -130,12 +150,16 @@ public class JobStat extends TypedEntity {\n      * <p/>\n      * runCount - delayCount\n      */\n+\n+\n     public int getTotalAttempts() {\n         return runCount - delayCount;\n     }\n \n \n     /** @return the delayCount */\n+\n+\n     public int getDelayCount() {\n         return delayCount;\n     }\n@@ -146,31 +170,41 @@ public class JobStat extends TypedEntity {\n      *\n      * @param delayCount the delayCount to set\n      */\n+\n+\n     public void setDelayCount( int delayCount ) {\n         this.delayCount = delayCount;\n     }\n \n \n     /** @return the duration */\n+\n+\n     public long getDuration() {\n         return duration;\n     }\n \n \n     /** @param duration the duration to set */\n+\n+\n     public void setDuration( long duration ) {\n         this.duration = duration;\n     }\n \n \n     /** @return the jobId */\n+\n+\n     public UUID getJobId() {\n         return jobId;\n     }\n \n \n     /** @param jobId the jobId to set */\n+\n+\n     public void setJobId( UUID jobId ) {\n         this.jobId = jobId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/40/JobStat.java\nindex 3185e3f187..21251db19a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/40/JobStat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/40/JobStat.java\n@@ -22,7 +22,6 @@ import java.util.UUID;\n import org.apache.usergrid.persistence.TypedEntity;\n import org.apache.usergrid.persistence.annotations.EntityProperty;\n \n-\n /**\n  * All job execution info should be in this entity\n  *\n",
            "diff_size": 1
        }
    ]
}