{
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "88",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @return the closure\n   */\n  public static <T> Closure<T> fromArray(Object owner, UnaryFunction<Object[], T> lambda) {\n    return new Closure<T>(owner) {\n      @Override\n      public T call(Object... args) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/11/Closures.java\nindex b02ae05148..4a974d9f23 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/11/Closures.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.tools.groovy.util;\n \n import com.google.common.base.Preconditions;\n@@ -85,7 +86,8 @@ public class Closures {\n    * @param <T> type parameter\n    * @return the closure\n    */\n-  public static <T> Closure<T> fromArray(Object owner, UnaryFunction<Object[], T> lambda) {\n+  public static <T> Closure<T> fromArray(Object owner,\n+                                         UnaryFunction<Object[], T> lambda) {\n     return new Closure<T>(owner) {\n       @Override\n       public T call(Object... args) {\n@@ -95,5 +97,6 @@ public class Closures {\n   }\n \n   // do not construct\n-  private Closures() {}\n+  private Closures() {\n+  }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/11/Closures.java\nindex b02ae05148..1533be2113 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/11/Closures.java\n@@ -72,7 +72,7 @@ public class Closures {\n       public T call(Object... args) {\n         Preconditions.checkArgument(\n             args.length == 2, \"Need exactly two arguments, got \", args.length);\n-        return lambda.apply(args[0], args[1]);\n+return lambda.apply(args[0], args[1]);\n       }\n     };\n   }\n@@ -96,4 +96,4 @@ public class Closures {\n \n   // do not construct\n   private Closures() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 76.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 96.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/11/Closures.java\nindex b02ae05148..0419c912cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/11/Closures.java\n@@ -22,6 +22,8 @@ import cz.o2.proxima.functional.UnaryFunction;\n import groovy.lang.Closure;\n \n /** Utilities related to creating {@link Closure}s from Java. */\n+\n+\n public class Closures {\n \n   /**\n@@ -32,14 +34,16 @@ public class Closures {\n    * @param <T> type parameter\n    * @return the closure\n    */\n-  public static <T> Closure<T> from(Object owner, Factory<T> lambda) {\n+\n+    public static <T> Closure<T> from(Object owner, Factory<T> lambda) {\n     return new Closure<T>(owner) {\n-      @Override\n-      public T call() {\n-        return lambda.apply();\n-      }\n+\n+        @Override\n+        public T call() {\n+               return lambda.apply();\n+        }\n     };\n-  }\n+    }\n \n   /**\n    * Create {@link Closure} from provided java lambda.\n@@ -49,14 +53,16 @@ public class Closures {\n    * @param <T> type parameter\n    * @return the closure\n    */\n-  public static <T> Closure<T> from(Object owner, UnaryFunction<Object, T> lambda) {\n+\n+    public static <T> Closure<T> from(Object owner, UnaryFunction<Object, T> lambda) {\n     return new Closure<T>(owner) {\n-      @Override\n-      public T call(Object arg) {\n-        return lambda.apply(arg);\n-      }\n+\n+        @Override\n+        public T call(Object arg) {\n+               return lambda.apply(arg);\n+        }\n     };\n-  }\n+    }\n \n   /**\n    * Create {@link Closure} from provided java lambda.\n@@ -66,16 +72,17 @@ public class Closures {\n    * @param <T> type parameter\n    * @return the closure\n    */\n-  public static <T> Closure<T> from(Object owner, BiFunction<Object, Object, T> lambda) {\n+\n+    public static <T> Closure<T> from(Object owner, BiFunction<Object, Object, T> lambda) {\n     return new Closure<T>(owner) {\n-      @Override\n-      public T call(Object... args) {\n-        Preconditions.checkArgument(\n-            args.length == 2, \"Need exactly two arguments, got \", args.length);\n-        return lambda.apply(args[0], args[1]);\n-      }\n+\n+        @Override\n+        public T call(Object... args) {\n+               Preconditions.checkArgument(args.length == 2, \"Need exactly two arguments, got \", args.length);\n+               return lambda.apply(args[0], args[1]);\n+        }\n     };\n-  }\n+    }\n \n   /**\n    * Create {@link Closure} from provided java lambda.\n@@ -85,15 +92,18 @@ public class Closures {\n    * @param <T> type parameter\n    * @return the closure\n    */\n-  public static <T> Closure<T> fromArray(Object owner, UnaryFunction<Object[], T> lambda) {\n+\n+    public static <T> Closure<T> fromArray(Object owner, UnaryFunction<Object[], T> lambda) {\n     return new Closure<T>(owner) {\n-      @Override\n-      public T call(Object... args) {\n-        return lambda.apply(args);\n-      }\n+\n+        @Override\n+        public T call(Object... args) {\n+               return lambda.apply(args);\n+        }\n     };\n-  }\n+    }\n \n   // do not construct\n-  private Closures() {}\n-}\n+\n+    private Closures() {}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "88",
                    "column": "20",
                    "severity": "error",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "88",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "88",
                    "column": "69",
                    "severity": "error",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'Object' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/11/Closures.java\nindex b02ae05148..6879ad44d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/11/Closures.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/11/Closures.java\n@@ -85,7 +85,8 @@ public class Closures {\n    * @param <T> type parameter\n    * @return the closure\n    */\n-  public static <T> Closure<T> fromArray(Object owner, UnaryFunction<Object[], T> lambda) {\n+  public static <T>Closure <T>fromArray (Object owner ,UnaryFunction <\n+    Object [ ], T> lambda) {\n     return new Closure<T>(owner) {\n       @Override\n       public T call(Object... args) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}