{
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "209",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/26/RecordingReader.java\nindex 0e4543c9db..62e5cc1dd2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/26/RecordingReader.java\n@@ -206,7 +206,7 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/26/RecordingReader.java\nindex 0e4543c9db..fcb20af454 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/26/RecordingReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account;\n@@ -206,7 +206,7 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/26/RecordingReader.java\nindex 0e4543c9db..7b017c4622 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/26/RecordingReader.java\n@@ -32,6 +32,8 @@ public class RecordingReader extends Reader<Recording> {\n     /**\n      * Construct a new RecordingReader.\n      */\n+\n+\n     public RecordingReader() {\n     }\n \n@@ -41,6 +43,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param pathAccountSid The SID of the Account that created the resources to\n      *                       read\n      */\n+\n+\n     public RecordingReader(final String pathAccountSid) {\n         this.pathAccountSid = pathAccountSid;\n     }\n@@ -57,6 +61,8 @@ public class RecordingReader extends Reader<Recording> {\n      *                            date\n      * @return this\n      */\n+\n+\n     public RecordingReader setDateCreated(final DateTime absoluteDateCreated) {\n         this.rangeDateCreated = null;\n         this.absoluteDateCreated = absoluteDateCreated;\n@@ -75,6 +81,8 @@ public class RecordingReader extends Reader<Recording> {\n      *                         date\n      * @return this\n      */\n+\n+\n     public RecordingReader setDateCreated(final Range<DateTime> rangeDateCreated) {\n         this.absoluteDateCreated = null;\n         this.rangeDateCreated = rangeDateCreated;\n@@ -88,6 +96,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param callSid The Call SID of the resources to read\n      * @return this\n      */\n+\n+\n     public RecordingReader setCallSid(final String callSid) {\n         this.callSid = callSid;\n         return this;\n@@ -100,6 +110,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param conferenceSid Read by unique Conference SID for the recording\n      * @return this\n      */\n+\n+\n     public RecordingReader setConferenceSid(final String conferenceSid) {\n         this.conferenceSid = conferenceSid;\n         return this;\n@@ -111,6 +123,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Recording ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Recording> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -122,6 +136,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Recording ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Recording> firstPage(final TwilioRestClient client) {\n@@ -130,7 +146,7 @@ public class RecordingReader extends Reader<Recording> {\n             HttpMethod.GET,\n             Domains.API.toString(),\n             \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Recordings.json\"\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -143,15 +159,14 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Recording ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Recording> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<Recording> getPage(final String targetUrl,\n+                                   final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -162,13 +177,12 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Recording> nextPage(final Page<Recording> page,\n                                     final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -179,13 +193,12 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Recording> previousPage(final Page<Recording> page,\n                                         final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -196,9 +209,11 @@ public class RecordingReader extends Reader<Recording> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Recording> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Recording> pageForRequest(final TwilioRestClient client,\n+                                           final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Recording read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -206,15 +221,11 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"recordings\",\n-            response.getContent(),\n-            Recording.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"recordings\", response.getContent(), Recording.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -222,9 +233,12 @@ public class RecordingReader extends Reader<Recording> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (absoluteDateCreated != null) {\n-            request.addQueryParam(\"DateCreated\", absoluteDateCreated.toString(Request.QUERY_STRING_DATE_TIME_FORMAT));\n+            request.addQueryParam(\"DateCreated\",\n+                                  absoluteDateCreated.toString(Request.QUERY_STRING_DATE_TIME_FORMAT));\n         } else if (rangeDateCreated != null) {\n             request.addQueryDateTimeRange(\"DateCreated\", rangeDateCreated);\n         }\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/26/RecordingReader.java\nindex 0e4543c9db..62e5cc1dd2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/26/RecordingReader.java\n@@ -206,7 +206,7 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/26/RecordingReader.java\nindex 0e4543c9db..f0934aef53 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/26/RecordingReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/26/RecordingReader.java\n@@ -206,7 +206,8 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}