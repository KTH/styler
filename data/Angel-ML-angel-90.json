{
    "error_id": "90",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/90/OpLogMessage.java\nindex 7677b6608b..10c9524890 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/90/OpLogMessage.java\n@@ -1,62 +1,62 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/Apache-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- *\r\n- */\r\n-\r\n-\r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.psagent.task.TaskContext;\r\n-\r\n-public class OpLogMessage {\r\n-\r\n-  private final int matrixId;\r\n-  private final OpLogMessageType type;\r\n-  private final TaskContext context;\r\n-  private final int seqId;\r\n-\r\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\r\n-    this.seqId = seqId;\r\n-    this.matrixId = matrixId;\r\n-    this.type = type;\r\n-    this.context = context;\r\n-  }\r\n-\r\n-  public OpLogMessageType getType() {\r\n-    return type;\r\n-  }\r\n-\r\n-  public TaskContext getContext() {\r\n-    return context;\r\n-  }\r\n-\r\n-  public int getMatrixId() {\r\n-    return matrixId;\r\n-  }\r\n-\r\n-  public int message() {\r\n-    return seqId;\r\n-  }\r\n-\r\n-  @Override\r\n-  public String toString() {\r\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\r\n-        + \", seqId=\" + seqId + \"]\";\r\n-  }\r\n-\r\n-  public int getSeqId() {\r\n-    return seqId;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/Apache-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.psagent.task.TaskContext;\n+\n+public class OpLogMessage {\n+\n+  private final int matrixId;\n+  private final OpLogMessageType type;\n+  private final TaskContext context;\n+  private final int seqId;\n+\n+  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+    this.seqId = seqId;\n+    this.matrixId = matrixId;\n+    this.type = type;\n+    this.context = context;\n+  }\n+\n+  public OpLogMessageType getType() {\n+    return type;\n+  }\n+\n+  public TaskContext getContext() {\n+    return context;\n+  }\n+\n+  public int getMatrixId() {\n+    return matrixId;\n+  }\n+\n+  public int message() {\n+    return seqId;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n+        + \", seqId=\" + seqId + \"]\";\n+  }\n+\n+  public int getSeqId() {\n+    return seqId;\n+  }\n+}\n",
            "diff_size": 62
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/90/OpLogMessage.java\nindex 7677b6608b..e3d809f9bc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/90/OpLogMessage.java\n@@ -22,41 +22,41 @@ import com.tencent.angel.psagent.task.TaskContext;\n \r\n public class OpLogMessage {\r\n \r\n-  private final int matrixId;\r\n-  private final OpLogMessageType type;\r\n-  private final TaskContext context;\r\n-  private final int seqId;\r\n-\r\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\r\n-    this.seqId = seqId;\r\n-    this.matrixId = matrixId;\r\n-    this.type = type;\r\n-    this.context = context;\r\n-  }\r\n-\r\n-  public OpLogMessageType getType() {\r\n-    return type;\r\n-  }\r\n-\r\n-  public TaskContext getContext() {\r\n-    return context;\r\n-  }\r\n-\r\n-  public int getMatrixId() {\r\n-    return matrixId;\r\n-  }\r\n-\r\n-  public int message() {\r\n-    return seqId;\r\n-  }\r\n-\r\n-  @Override\r\n-  public String toString() {\r\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\r\n-        + \", seqId=\" + seqId + \"]\";\r\n-  }\r\n-\r\n-  public int getSeqId() {\r\n-    return seqId;\r\n-  }\r\n+    private final int matrixId;\r\n+    private final OpLogMessageType type;\r\n+    private final TaskContext context;\r\n+    private final int seqId;\r\n+\r\n+    public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\r\n+        this.seqId = seqId;\r\n+        this.matrixId = matrixId;\r\n+        this.type = type;\r\n+        this.context = context;\r\n+    }\r\n+\r\n+    public OpLogMessageType getType() {\r\n+        return type;\r\n+    }\r\n+\r\n+    public TaskContext getContext() {\r\n+        return context;\r\n+    }\r\n+\r\n+    public int getMatrixId() {\r\n+        return matrixId;\r\n+    }\r\n+\r\n+    public int message() {\r\n+        return seqId;\r\n+    }\r\n+\r\n+    @Override\r\n+    public String toString() {\r\n+        return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\r\n+                + \", seqId=\" + seqId + \"]\";\r\n+    }\r\n+\r\n+    public int getSeqId() {\r\n+        return seqId;\r\n+    }\r\n }\r\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/90/OpLogMessage.java\nindex 7677b6608b..b5b552716e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/90/OpLogMessage.java\n@@ -13,9 +13,8 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\r\n  * the License.\r\n  *\r\n- */\r\n-\r\n-\r\n+ */\n+\n package com.tencent.angel.psagent.matrix.oplog.cache;\r\n \r\n import com.tencent.angel.psagent.task.TaskContext;\r\n@@ -59,4 +58,4 @@ public class OpLogMessage {\n   public int getSeqId() {\r\n     return seqId;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/90/OpLogMessage.java\nindex 7677b6608b..048bc95d91 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/90/OpLogMessage.java\n@@ -16,47 +16,46 @@\n  */\r\n \r\n \r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.psagent.task.TaskContext;\r\n-\r\n-public class OpLogMessage {\r\n-\r\n-  private final int matrixId;\r\n-  private final OpLogMessageType type;\r\n-  private final TaskContext context;\r\n-  private final int seqId;\r\n-\r\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\r\n-    this.seqId = seqId;\r\n-    this.matrixId = matrixId;\r\n-    this.type = type;\r\n-    this.context = context;\r\n-  }\r\n-\r\n-  public OpLogMessageType getType() {\r\n-    return type;\r\n-  }\r\n-\r\n-  public TaskContext getContext() {\r\n-    return context;\r\n-  }\r\n-\r\n-  public int getMatrixId() {\r\n-    return matrixId;\r\n-  }\r\n-\r\n-  public int message() {\r\n-    return seqId;\r\n-  }\r\n-\r\n-  @Override\r\n-  public String toString() {\r\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\r\n-        + \", seqId=\" + seqId + \"]\";\r\n-  }\r\n-\r\n-  public int getSeqId() {\r\n-    return seqId;\r\n-  }\r\n-}\r\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.psagent.task.TaskContext;\n+\n+public class OpLogMessage {\n+    private final int matrixId;\n+    private final OpLogMessageType type;\n+    private final TaskContext context;\n+    private final int seqId;\n+\n+    public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+    this.seqId = seqId;\n+    this.matrixId = matrixId;\n+    this.type = type;\n+    this.context = context;\n+    }\n+\n+    public OpLogMessageType getType() {\n+    return type;\n+    }\n+\n+    public TaskContext getContext() {\n+    return context;\n+    }\n+\n+    public int getMatrixId() {\n+    return matrixId;\n+    }\n+\n+    public int message() {\n+    return seqId;\n+    }\n+\n+    @Override\n+    public String toString() {\n+    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context + \", seqId=\" + seqId + \"]\";\n+    }\n+\n+    public int getSeqId() {\n+    return seqId;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/90/OpLogMessage.java\nindex 7677b6608b..10c9524890 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/90/OpLogMessage.java\n@@ -1,62 +1,62 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/Apache-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- *\r\n- */\r\n-\r\n-\r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.psagent.task.TaskContext;\r\n-\r\n-public class OpLogMessage {\r\n-\r\n-  private final int matrixId;\r\n-  private final OpLogMessageType type;\r\n-  private final TaskContext context;\r\n-  private final int seqId;\r\n-\r\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\r\n-    this.seqId = seqId;\r\n-    this.matrixId = matrixId;\r\n-    this.type = type;\r\n-    this.context = context;\r\n-  }\r\n-\r\n-  public OpLogMessageType getType() {\r\n-    return type;\r\n-  }\r\n-\r\n-  public TaskContext getContext() {\r\n-    return context;\r\n-  }\r\n-\r\n-  public int getMatrixId() {\r\n-    return matrixId;\r\n-  }\r\n-\r\n-  public int message() {\r\n-    return seqId;\r\n-  }\r\n-\r\n-  @Override\r\n-  public String toString() {\r\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\r\n-        + \", seqId=\" + seqId + \"]\";\r\n-  }\r\n-\r\n-  public int getSeqId() {\r\n-    return seqId;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/Apache-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.psagent.task.TaskContext;\n+\n+public class OpLogMessage {\n+\n+  private final int matrixId;\n+  private final OpLogMessageType type;\n+  private final TaskContext context;\n+  private final int seqId;\n+\n+  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+    this.seqId = seqId;\n+    this.matrixId = matrixId;\n+    this.type = type;\n+    this.context = context;\n+  }\n+\n+  public OpLogMessageType getType() {\n+    return type;\n+  }\n+\n+  public TaskContext getContext() {\n+    return context;\n+  }\n+\n+  public int getMatrixId() {\n+    return matrixId;\n+  }\n+\n+  public int message() {\n+    return seqId;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n+        + \", seqId=\" + seqId + \"]\";\n+  }\n+\n+  public int getSeqId() {\n+    return seqId;\n+  }\n+}\n",
            "diff_size": 62
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/90/OpLogMessage.java\nindex 7677b6608b..aa75c6d80a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/90/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/90/OpLogMessage.java\n@@ -1,62 +1,60 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/Apache-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- *\r\n- */\r\n-\r\n-\r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.psagent.task.TaskContext;\r\n-\r\n-public class OpLogMessage {\r\n-\r\n-  private final int matrixId;\r\n-  private final OpLogMessageType type;\r\n-  private final TaskContext context;\r\n-  private final int seqId;\r\n-\r\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\r\n-    this.seqId = seqId;\r\n-    this.matrixId = matrixId;\r\n-    this.type = type;\r\n-    this.context = context;\r\n-  }\r\n-\r\n-  public OpLogMessageType getType() {\r\n-    return type;\r\n-  }\r\n-\r\n-  public TaskContext getContext() {\r\n-    return context;\r\n-  }\r\n-\r\n-  public int getMatrixId() {\r\n-    return matrixId;\r\n-  }\r\n-\r\n-  public int message() {\r\n-    return seqId;\r\n-  }\r\n-\r\n-  @Override\r\n-  public String toString() {\r\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\r\n-        + \", seqId=\" + seqId + \"]\";\r\n-  }\r\n-\r\n-  public int getSeqId() {\r\n-    return seqId;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/Apache-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.psagent.task.TaskContext;\n+\n+public class OpLogMessage {\n+\n+  private final int matrixId;\n+  private final OpLogMessageType type;\n+  private final TaskContext context;\n+  private final int seqId;\n+\n+  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+    this.seqId = seqId;\n+    this.matrixId = matrixId;\n+    this.type = type;\n+    this.context = context;\n+  }\n+\n+  public OpLogMessageType getType() {\n+    return type;\n+  }\n+\n+  public TaskContext getContext() {\n+    return context;\n+  }\n+\n+  public int getMatrixId() {\n+    return matrixId;\n+  }\n+\n+  public int message() {\n+    return seqId;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n+        + \", seqId=\" + seqId + \"]\";\n+  }\n+\n+  public int getSeqId() {\n+    return seqId;\n+  }\n+}\n",
            "diff_size": 62
        }
    ]
}