{
    "error_id": "73",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public KafkaAccessor createAccessor(\n      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n\n    return new KafkaAccessor(entityDesc, uri, cfg);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/73/KafkaStorage.java\nindex 7308a28a17..eca7ffaae2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/73/KafkaStorage.java\n@@ -28,7 +28,7 @@ public class KafkaStorage implements DataAccessorFactory {\n   public KafkaAccessor createAccessor(\n       DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n \n-    return new KafkaAccessor(entityDesc, uri, cfg);\n+        return new KafkaAccessor(entityDesc, uri, cfg);\n   }\n \n   @Override\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/73/KafkaStorage.java\nindex 7308a28a17..1a2e61c852 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/73/KafkaStorage.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.kafka;\n \n import cz.o2.proxima.direct.core.DataAccessorFactory;\n@@ -26,7 +27,8 @@ public class KafkaStorage implements DataAccessorFactory {\n \n   @Override\n   public KafkaAccessor createAccessor(\n-      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n+      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri,\n+      Map<String, Object> cfg) {\n \n     return new KafkaAccessor(entityDesc, uri, cfg);\n   }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/73/KafkaStorage.java\nindex 7308a28a17..44caa6972e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/73/KafkaStorage.java\n@@ -35,4 +35,4 @@ public class KafkaStorage implements DataAccessorFactory {\n   public Accept accepts(URI uri) {\n     return uri.getScheme().equals(\"kafka\") ? Accept.ACCEPT : Accept.REJECT;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/73/KafkaStorage.java\nindex 7308a28a17..4b463840be 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/73/KafkaStorage.java\n@@ -22,17 +22,17 @@ import java.net.URI;\n import java.util.Map;\n \n /** Storage using {@code KafkaProducer}. */\n-public class KafkaStorage implements DataAccessorFactory {\n \n-  @Override\n-  public KafkaAccessor createAccessor(\n-      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n \n+public class KafkaStorage implements DataAccessorFactory {\n+\n+    @Override\n+    public KafkaAccessor createAccessor(DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n     return new KafkaAccessor(entityDesc, uri, cfg);\n-  }\n+    }\n \n-  @Override\n-  public Accept accepts(URI uri) {\n+    @Override\n+    public Accept accepts(URI uri) {\n     return uri.getScheme().equals(\"kafka\") ? Accept.ACCEPT : Accept.REJECT;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "column": "75",
                    "severity": "error",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def rparen' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "column": "7",
                    "severity": "error",
                    "message": "'{' at column 7 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/73/KafkaStorage.java\nindex 7308a28a17..bf6f2a7348 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/73/KafkaStorage.java\n@@ -26,13 +26,14 @@ public class KafkaStorage implements DataAccessorFactory {\n \n   @Override\n   public KafkaAccessor createAccessor(\n-      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n+      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map <String , Object> cfg\n \n-    return new KafkaAccessor(entityDesc, uri, cfg);\n-  }\n+    ) { return new KafkaAccessor(entityDesc, uri, cfg);\n+    }\n \n-  @Override\n-  public Accept accepts(URI uri) {\n-    return uri.getScheme().equals(\"kafka\") ? Accept.ACCEPT : Accept.REJECT;\n+    @Override\n+    public Accept accepts(URI uri) {\n+      return uri.getScheme().equals(\"kafka\") ? Accept.ACCEPT : Accept.REJECT;\n+    }\n   }\n-}\n+  \n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/73/KafkaStorage.java\nindex 7308a28a17..eca7ffaae2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/73/KafkaStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/73/KafkaStorage.java\n@@ -28,7 +28,7 @@ public class KafkaStorage implements DataAccessorFactory {\n   public KafkaAccessor createAccessor(\n       DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n \n-    return new KafkaAccessor(entityDesc, uri, cfg);\n+        return new KafkaAccessor(entityDesc, uri, cfg);\n   }\n \n   @Override\n",
            "diff_size": 1
        }
    ]
}