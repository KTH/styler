{
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "48",
                "column": "13",
                "severity": "error",
                "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            JsonNode entryValue = entry.getValue();\n\n            if(!entryValue.isNull()) {\n                String type = entryValue.get(\"type\").textValue();\n                String value = entryValue.get(\"value\").asText();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/11/ProcessVariablesMapDeserializer.java\nindex da481289ab..39d280faed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/11/ProcessVariablesMapDeserializer.java\n@@ -45,7 +45,7 @@ public class ProcessVariablesMapDeserializer extends JsonDeserializer<ProcessVar\n             String name = entry.getKey();\n             JsonNode entryValue = entry.getValue();\n \n-            if(!entryValue.isNull()) {\n+            if (!entryValue.isNull()) {\n                 String type = entryValue.get(\"type\").textValue();\n                 String value = entryValue.get(\"value\").asText();\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/11/ProcessVariablesMapDeserializer.java\nindex da481289ab..7a7b731f7b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/11/ProcessVariablesMapDeserializer.java\n@@ -36,7 +36,7 @@ public class ProcessVariablesMapDeserializer extends JsonDeserializer<ProcessVar\n \n     @Override\n     public ProcessVariablesMap<String, Object> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException,\n-                                                                                                              JsonProcessingException {\n+            JsonProcessingException {\n         ProcessVariablesMap<String, Object> map = new ProcessVariablesMap<>();\n \n         JsonNode node = jp.getCodec().readTree(jp);\n@@ -45,7 +45,7 @@ public class ProcessVariablesMapDeserializer extends JsonDeserializer<ProcessVar\n             String name = entry.getKey();\n             JsonNode entryValue = entry.getValue();\n \n-            if(!entryValue.isNull()) {\n+            if (!entryValue.isNull()) {\n                 String type = entryValue.get(\"type\").textValue();\n                 String value = entryValue.get(\"value\").asText();\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/11/ProcessVariablesMapDeserializer.java\nindex da481289ab..8a8e416273 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/11/ProcessVariablesMapDeserializer.java\n@@ -17,51 +17,44 @@\n package org.activiti.api.runtime.model.impl;\n \n import java.io.IOException;\n-\n import org.springframework.core.convert.ConversionService;\n-\n import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n import com.fasterxml.jackson.databind.JsonNode;\n \n+\n public class ProcessVariablesMapDeserializer extends JsonDeserializer<ProcessVariablesMap<String, Object>> {\n \n     private final ConversionService conversionService;\n \n     public ProcessVariablesMapDeserializer(ConversionService conversionService) {\n-        this.conversionService = conversionService;\n+    this.conversionService = conversionService;\n     }\n \n     @Override\n-    public ProcessVariablesMap<String, Object> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException,\n-                                                                                                              JsonProcessingException {\n-        ProcessVariablesMap<String, Object> map = new ProcessVariablesMap<>();\n-\n-        JsonNode node = jp.getCodec().readTree(jp);\n-\n-        node.fields().forEachRemaining(entry -> {\n-            String name = entry.getKey();\n-            JsonNode entryValue = entry.getValue();\n-\n-            if(!entryValue.isNull()) {\n-                String type = entryValue.get(\"type\").textValue();\n-                String value = entryValue.get(\"value\").asText();\n-\n-                try {\n-                    Class<?> clazz = Class.forName(type);\n-                    Object result = conversionService.convert(value, clazz);\n-\n-                    map.put(name, result);\n-                } catch (ClassNotFoundException e) {\n-                    map.put(name, null);\n-                }\n-            } else {\n-                map.put(name, null);\n-            }\n-        });\n-\n-        return map;\n+    public ProcessVariablesMap<String, Object> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException {\n+    ProcessVariablesMap<String, Object> map = new ProcessVariablesMap<>();\n+    JsonNode node = jp.getCodec().readTree(jp);\n+    node.fields().forEachRemaining(entry -> {\n+                     String name = entry.getKey();\n+                     JsonNode entryValue = entry.getValue();\n+                     if (!entryValue.isNull()) {\n+                                       String type = entryValue.get(\"type\").textValue();\n+                                       String value = entryValue.get(\"value\").asText();\n+                                       try {\n+                                           Class<?> clazz = Class.forName(type);\n+                                           Object result = conversionService.convert(value, clazz);\n+                                           map.put(name, result);\n+                                       } catch (ClassNotFoundException e) {\n+                                         map.put(name, null);\n+                                       }\n+                     } else {\n+                         map.put(name, null);\n+                     }\n+                 });\n+    return map;\n     }\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/11/ProcessVariablesMapDeserializer.java\nindex da481289ab..39d280faed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/11/ProcessVariablesMapDeserializer.java\n@@ -45,7 +45,7 @@ public class ProcessVariablesMapDeserializer extends JsonDeserializer<ProcessVar\n             String name = entry.getKey();\n             JsonNode entryValue = entry.getValue();\n \n-            if(!entryValue.isNull()) {\n+            if (!entryValue.isNull()) {\n                 String type = entryValue.get(\"type\").textValue();\n                 String value = entryValue.get(\"value\").asText();\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/11/ProcessVariablesMapDeserializer.java\nindex da481289ab..39d280faed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/11/ProcessVariablesMapDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/11/ProcessVariablesMapDeserializer.java\n@@ -45,7 +45,7 @@ public class ProcessVariablesMapDeserializer extends JsonDeserializer<ProcessVar\n             String name = entry.getKey();\n             JsonNode entryValue = entry.getValue();\n \n-            if(!entryValue.isNull()) {\n+            if (!entryValue.isNull()) {\n                 String type = entryValue.get(\"type\").textValue();\n                 String value = entryValue.get(\"value\").asText();\n \n",
            "diff_size": 1
        }
    ]
}