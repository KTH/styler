{
    "error_id": "105",
    "information": {
        "errors": [
            {
                "line": "34",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 100).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * @return A byte array containing the encoded data\n     * @throws EncoderException\n     *             thrown if the Encoder encounters a failure condition during the encoding process.\n     */\n    byte[] encode(byte[] source) throws EncoderException;\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler/105/BinaryEncoder.java\nindex 75049022d0..b8063be931 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler/105/BinaryEncoder.java\n@@ -1,38 +1,38 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.commons.codec;\r\n-\r\n-/**\r\n- * Defines common encoding methods for byte array encoders.\r\n- *\r\n- * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\r\n- */\r\n-public interface BinaryEncoder extends Encoder {\r\n-\r\n-    /**\r\n-     * Encodes a byte array and return the encoded data as a byte array.\r\n-     *\r\n-     * @param source\r\n-     *            Data to be encoded\r\n-     * @return A byte array containing the encoded data\r\n-     * @throws EncoderException\r\n-     *             thrown if the Encoder encounters a failure condition during the encoding process.\r\n-     */\r\n-    byte[] encode(byte[] source) throws EncoderException;\r\n-}\r\n-\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.codec;\n+\n+/**\n+ * Defines common encoding methods for byte array encoders.\n+ *\n+ * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\n+ */\n+public interface BinaryEncoder extends Encoder {\n+\n+    /**\n+     * Encodes a byte array and return the encoded data as a byte array.\n+     *\n+     * @param source\n+     *            Data to be encoded\n+     * @return A byte array containing the encoded data\n+     * @throws EncoderException\n+     *             thrown if the Encoder encounters a failure condition during the encoding process.\n+     */\n+    byte[] encode(byte[] source) throws EncoderException;\n+}\n+\n",
            "diff_size": 38
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/intellij/105/BinaryEncoder.java\nindex 75049022d0..0432c8e311 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/intellij/105/BinaryEncoder.java\n@@ -24,15 +24,13 @@ package org.apache.commons.codec;\n  */\r\n public interface BinaryEncoder extends Encoder {\r\n \r\n-    /**\r\n-     * Encodes a byte array and return the encoded data as a byte array.\r\n-     *\r\n-     * @param source\r\n-     *            Data to be encoded\r\n-     * @return A byte array containing the encoded data\r\n-     * @throws EncoderException\r\n-     *             thrown if the Encoder encounters a failure condition during the encoding process.\r\n-     */\r\n-    byte[] encode(byte[] source) throws EncoderException;\r\n+  /**\r\n+   * Encodes a byte array and return the encoded data as a byte array.\r\n+   *\r\n+   * @param source Data to be encoded\r\n+   * @return A byte array containing the encoded data\r\n+   * @throws EncoderException thrown if the Encoder encounters a failure condition during the encoding process.\r\n+   */\r\n+  byte[] encode(byte[] source) throws EncoderException;\r\n }\r\n \r\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/naturalize/105/BinaryEncoder.java\nindex 75049022d0..2f6c803305 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/naturalize/105/BinaryEncoder.java\n@@ -34,5 +34,4 @@ public interface BinaryEncoder extends Encoder {\n      *             thrown if the Encoder encounters a failure condition during the encoding process.\r\n      */\r\n     byte[] encode(byte[] source) throws EncoderException;\r\n-}\r\n-\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/codebuff/105/BinaryEncoder.java\nindex 75049022d0..276fc224a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/codebuff/105/BinaryEncoder.java\n@@ -21,7 +21,9 @@ package org.apache.commons.codec;\n  * Defines common encoding methods for byte array encoders.\r\n  *\r\n  * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\r\n- */\r\n+ */\n+\n+\n public interface BinaryEncoder extends Encoder {\r\n \r\n     /**\r\n@@ -32,7 +34,9 @@ public interface BinaryEncoder extends Encoder {\n      * @return A byte array containing the encoded data\r\n      * @throws EncoderException\r\n      *             thrown if the Encoder encounters a failure condition during the encoding process.\r\n-     */\r\n-    byte[] encode(byte[] source) throws EncoderException;\r\n-}\r\n-\r\n+     */\n+\n+\n+    byte[] encode(byte[] source) throws EncoderException;\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_random/105/BinaryEncoder.java\nindex 75049022d0..b8063be931 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_random/105/BinaryEncoder.java\n@@ -1,38 +1,38 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.commons.codec;\r\n-\r\n-/**\r\n- * Defines common encoding methods for byte array encoders.\r\n- *\r\n- * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\r\n- */\r\n-public interface BinaryEncoder extends Encoder {\r\n-\r\n-    /**\r\n-     * Encodes a byte array and return the encoded data as a byte array.\r\n-     *\r\n-     * @param source\r\n-     *            Data to be encoded\r\n-     * @return A byte array containing the encoded data\r\n-     * @throws EncoderException\r\n-     *             thrown if the Encoder encounters a failure condition during the encoding process.\r\n-     */\r\n-    byte[] encode(byte[] source) throws EncoderException;\r\n-}\r\n-\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.codec;\n+\n+/**\n+ * Defines common encoding methods for byte array encoders.\n+ *\n+ * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\n+ */\n+public interface BinaryEncoder extends Encoder {\n+\n+    /**\n+     * Encodes a byte array and return the encoded data as a byte array.\n+     *\n+     * @param source\n+     *            Data to be encoded\n+     * @return A byte array containing the encoded data\n+     * @throws EncoderException\n+     *             thrown if the Encoder encounters a failure condition during the encoding process.\n+     */\n+    byte[] encode(byte[] source) throws EncoderException;\n+}\n+\n",
            "diff_size": 38
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_three_grams/105/BinaryEncoder.java\nindex 75049022d0..a2de9064a4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/105/BinaryEncoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_three_grams/105/BinaryEncoder.java\n@@ -1,38 +1,37 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.commons.codec;\r\n-\r\n-/**\r\n- * Defines common encoding methods for byte array encoders.\r\n- *\r\n- * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\r\n- */\r\n-public interface BinaryEncoder extends Encoder {\r\n-\r\n-    /**\r\n-     * Encodes a byte array and return the encoded data as a byte array.\r\n-     *\r\n-     * @param source\r\n-     *            Data to be encoded\r\n-     * @return A byte array containing the encoded data\r\n-     * @throws EncoderException\r\n-     *             thrown if the Encoder encounters a failure condition during the encoding process.\r\n-     */\r\n-    byte[] encode(byte[] source) throws EncoderException;\r\n-}\r\n-\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.codec;\n+\n+/**\n+ * Defines common encoding methods for byte array encoders.\n+ *\n+ * @version $Id: BinaryEncoder.java 1379145 2012-08-30 21:02:52Z tn $\n+ */\n+public interface BinaryEncoder extends Encoder {\n+\n+/**\n+     * Encodes a byte array and return the encoded data as a byte array.\n+     *\n+     * @param source\n+     *            Data to be encoded\n+     * @return A byte array containing the encoded data\n+     * @throws EncoderException\n+     *             thrown if the Encoder encounters a failure condition during the encoding process.\n+     */ byte[] encode(byte[] source) throws EncoderException;\n+}\n+\n",
            "diff_size": 38
        }
    ]
}