{
    "error_id": "67",
    "information": {
        "errors": [
            {
                "line": "71",
                "column": "9",
                "severity": "warning",
                "message": "'while' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        boolean triedToCreateOrg = false;\n        boolean triedToCreateProj = false;\n        while(true) {\n            projectMap = clients.get().get(organisation);\n            if (projectMap == null) {\n                //TODO add org validation",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler/67/SentryClientHolder.java\nindex c2b7d60bd5..7798f61ab3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler/67/SentryClientHolder.java\n@@ -68,7 +68,7 @@ public class SentryClientHolder {\n         boolean triedToUpdate = false;\n         boolean triedToCreateOrg = false;\n         boolean triedToCreateProj = false;\n-        while(true) {\n+        while (true) {\n             projectMap = clients.get().get(organisation);\n             if (projectMap == null) {\n                 //TODO add org validation\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/intellij/67/SentryClientHolder.java\nindex c2b7d60bd5..78c0cac02d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/intellij/67/SentryClientHolder.java\n@@ -50,15 +50,16 @@ public class SentryClientHolder {\n \n     public SentryClientHolder(SentryApiClient sentryApiClient) {\n         this.sentryApiClient = sentryApiClient;\n-        this.scheduledExecutor.scheduleAtFixedRate(this::update, 0,10000, TimeUnit.MILLISECONDS);\n+        this.scheduledExecutor.scheduleAtFixedRate(this::update, 0, 10000, TimeUnit.MILLISECONDS);\n     }\n \n     // TODO: Add default client\n+\n     /**\n      * Get Sentry client by pair of an organisation and a project\n      *\n      * @param organisation the organisation\n-     * @param project the project\n+     * @param project      the project\n      * @return the {@link Optional} describing SentryClient matching an organisation and a project\n      */\n     public Optional<SentryClient> getClient(String organisation, String project) {\n@@ -68,7 +69,7 @@ public class SentryClientHolder {\n         boolean triedToUpdate = false;\n         boolean triedToCreateOrg = false;\n         boolean triedToCreateProj = false;\n-        while(true) {\n+        while (true) {\n             projectMap = clients.get().get(organisation);\n             if (projectMap == null) {\n                 //TODO add org validation\n@@ -137,9 +138,9 @@ public class SentryClientHolder {\n                 }\n \n                 Optional<String> dsn = publicDsn.get().stream()\n-                        .findAny()\n-                        .map(KeyInfo::getDsn)\n-                        .map(DsnInfo::getPublicDsn);\n+                    .findAny()\n+                    .map(KeyInfo::getDsn)\n+                    .map(DsnInfo::getPublicDsn);\n                 if (dsn.isPresent()) {\n                     String dsnString = dsn.get();\n                     try {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/naturalize/67/SentryClientHolder.java\nindex c2b7d60bd5..34d67b202c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/naturalize/67/SentryClientHolder.java\n@@ -68,7 +68,7 @@ public class SentryClientHolder {\n         boolean triedToUpdate = false;\n         boolean triedToCreateOrg = false;\n         boolean triedToCreateProj = false;\n-        while(true) {\n+        while (true) {\n             projectMap = clients.get().get(organisation);\n             if (projectMap == null) {\n                 //TODO add org validation\n@@ -175,9 +175,8 @@ public class SentryClientHolder {\n      * @return the dsn with settings\n      */\n     private String applySettings(String dsn) {\n-        return dsn + \"?\" + String.join(\"&\",\n-            DISABLE_UNCAUGHT_EXCEPTION_HANDLING,\n+        return dsn + \"?\" + String.join(\"&\", DISABLE_UNCAUGHT_EXCEPTION_HANDLING,\n             DISABLE_IN_APP_WARN_MESSAGE\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/codebuff/67/SentryClientHolder.java\nindex c2b7d60bd5..da553c4aa7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/codebuff/67/SentryClientHolder.java\n@@ -10,7 +10,6 @@ import ru.kontur.vostok.hercules.sentry.api.model.DsnInfo;\n import ru.kontur.vostok.hercules.sentry.api.model.KeyInfo;\n import ru.kontur.vostok.hercules.sentry.api.model.ProjectInfo;\n import ru.kontur.vostok.hercules.util.functional.Result;\n-\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.Collections;\n@@ -29,11 +28,13 @@ import java.util.concurrent.atomic.AtomicReference;\n  *\n  * @author Kirill Sulim\n  */\n-public class SentryClientHolder {\n \n+\n+public class SentryClientHolder {\n     private static final Logger LOGGER = LoggerFactory.getLogger(SentryClientHolder.class);\n \n     private static final String DISABLE_UNCAUGHT_EXCEPTION_HANDLING = DefaultSentryClientFactory.UNCAUGHT_HANDLER_ENABLED_OPTION + \"=false\";\n+\n     private static final String DISABLE_IN_APP_WARN_MESSAGE = DefaultSentryClientFactory.IN_APP_FRAMES_OPTION + \"=%20\"; // Empty value disables warn message\n \n     /**\n@@ -42,15 +43,18 @@ public class SentryClientHolder {\n      * The nested Map matching this organisation contains the \"project\" Strings as a keys\n      * and the SentryClients as values.\n      */\n+\n     private final AtomicReference<Map<String, Map<String, SentryClient>>> clients = new AtomicReference<>(Collections.emptyMap());\n+\n     private final ScheduledExecutorService scheduledExecutor = Executors.newScheduledThreadPool(1);\n \n     private final SentryApiClient sentryApiClient;\n+\n     private final SentryClientFactory sentryClientFactory = new CustomClientFactory();\n \n     public SentryClientHolder(SentryApiClient sentryApiClient) {\n         this.sentryApiClient = sentryApiClient;\n-        this.scheduledExecutor.scheduleAtFixedRate(this::update, 0,10000, TimeUnit.MILLISECONDS);\n+        this.scheduledExecutor.scheduleAtFixedRate(this::update, 0, 10000, TimeUnit.MILLISECONDS);\n     }\n \n     // TODO: Add default client\n@@ -61,15 +65,16 @@ public class SentryClientHolder {\n      * @param project the project\n      * @return the {@link Optional} describing SentryClient matching an organisation and a project\n      */\n-    public Optional<SentryClient> getClient(String organisation, String project) {\n \n+    public Optional<SentryClient> getClient(String organisation, String project) {\n         Map<String, SentryClient> projectMap;\n         SentryClient sentryClient;\n         boolean triedToUpdate = false;\n         boolean triedToCreateOrg = false;\n         boolean triedToCreateProj = false;\n-        while(true) {\n-            projectMap = clients.get().get(organisation);\n+        while (true) {\n+            projectMap = clients.get()\n+            .get(organisation);\n             if (projectMap == null) {\n                 //TODO add org validation\n                 LOGGER.info(String.format(\"Cannot find organization '%s'\", organisation));\n@@ -79,17 +84,20 @@ public class SentryClientHolder {\n                     triedToUpdate = true;\n                     continue;\n                 } else if (!triedToCreateOrg) {\n-                    sentryApiClient.createOrganization(organisation);\n-                    sentryApiClient.createTeam(organisation);\n-                    triedToCreateOrg = true;\n-                    LOGGER.info(\"Force update Sentry clients to pull differences from Sentry\");\n-                    update();\n-                    continue;\n+                           sentryApiClient.createOrganization(organisation);\n+                           sentryApiClient.createTeam(organisation);\n+                           triedToCreateOrg = true;\n+                           LOGGER.info(\"Force update Sentry clients to pull differences from Sentry\");\n+                           update();\n+                           continue;\n                 } else {\n-                    LOGGER.error(String.format(\"Error of creating in Sentry or updating into Sentry Sink of organisation %s\", organisation));\n-                    return Optional.empty();\n-                }\n+                           LOGGER.error(String.format(\"Error of creating in Sentry or updating into Sentry Sink of organisation %s\",\n+                                                      organisation\n+                           ));\n+                           return Optional.empty();\n+                       }\n             }\n+\n             sentryClient = projectMap.get(project);\n             if (sentryClient == null) {\n                 //TODO add project validation\n@@ -100,14 +108,16 @@ public class SentryClientHolder {\n                     triedToUpdate = true;\n                 } else if (!triedToCreateProj) {\n                     //TODO find team\n-                    sentryApiClient.createProject(organisation, project);\n-                    triedToCreateProj = true;\n-                    LOGGER.info(\"Force update Sentry clients to pull differences from Sentry\");\n-                    update();\n+                           sentryApiClient.createProject(organisation, project);\n+                           triedToCreateProj = true;\n+                           LOGGER.info(\"Force update Sentry clients to pull differences from Sentry\");\n+                           update();\n                 } else {\n-                    LOGGER.error(String.format(\"Error of creating in Sentry or updating into Sentry Sink of project '%s'\", project));\n-                    return Optional.empty();\n-                }\n+                           LOGGER.error(String.format(\"Error of creating in Sentry or updating into Sentry Sink of project '%s'\",\n+                                                      project\n+                           ));\n+                           return Optional.empty();\n+                       }\n             } else {\n                 break;\n             }\n@@ -119,6 +129,7 @@ public class SentryClientHolder {\n      * Update clients in this class by information about project clients from Sentry.\n      * This method executes by schedule\n      */\n+\n     private void update() {\n         try {\n             Result<List<ProjectInfo>, String> projects = sentryApiClient.getProjects();\n@@ -128,27 +139,34 @@ public class SentryClientHolder {\n             }\n \n             Map<String, Map<String, SentryClient>> organisationMap = new HashMap<>();\n-\n             for (ProjectInfo projectInfo : projects.get()) {\n                 Result<List<KeyInfo>, String> publicDsn = sentryApiClient.getPublicDsn(projectInfo);\n                 if (!publicDsn.isOk()) {\n-                    LOGGER.error(\"Cannot get public dsn for project '{}' due to: {}\", projectInfo.getSlug(), publicDsn.getError());\n+                    LOGGER.error(\n+                        \"Cannot get public dsn for project '{}' due to: {}\",\n+                        projectInfo.getSlug(),\n+                        publicDsn.getError()\n+                    );\n                     return;\n                 }\n \n-                Optional<String> dsn = publicDsn.get().stream()\n-                        .findAny()\n-                        .map(KeyInfo::getDsn)\n-                        .map(DsnInfo::getPublicDsn);\n+                Optional<String> dsn = publicDsn.get()\n+                .stream()\n+                .findAny()\n+                .map(KeyInfo::getDsn)\n+                .map(DsnInfo::getPublicDsn);\n                 if (dsn.isPresent()) {\n                     String dsnString = dsn.get();\n                     try {\n                         new URL(dsnString);\n                     } catch (MalformedURLException e) {\n-                        throw new Exception(String.format(\"Malformed dsn '%s', there might be an error in sentry configuration\", dsnString));\n+                        throw new Exception(String.format(\"Malformed dsn '%s', there might be an error in sentry configuration\",\n+                                                          dsnString\n+                              ));\n                     }\n \n-                    String organization = projectInfo.getOrganization().getSlug();\n+                    String organization = projectInfo.getOrganization()\n+                    .getSlug();\n                     Map<String, SentryClient> projectMap = organisationMap.get(organization);\n                     if (projectMap == null) {\n                         projectMap = new HashMap<>();\n@@ -156,7 +174,10 @@ public class SentryClientHolder {\n                     }\n \n                     String project = projectInfo.getSlug();\n-                    projectMap.put(project, SentryClientFactory.sentryClient(applySettings(dsnString), sentryClientFactory));\n+                    projectMap.put(\n+                        project,\n+                        SentryClientFactory.sentryClient(applySettings(dsnString), sentryClientFactory)\n+                    );\n                 }\n             }\n \n@@ -174,10 +195,8 @@ public class SentryClientHolder {\n      * @param dsn the source dsn\n      * @return the dsn with settings\n      */\n+\n     private String applySettings(String dsn) {\n-        return dsn + \"?\" + String.join(\"&\",\n-            DISABLE_UNCAUGHT_EXCEPTION_HANDLING,\n-            DISABLE_IN_APP_WARN_MESSAGE\n-        );\n+        return dsn + \"?\" + String.join(\"&\", DISABLE_UNCAUGHT_EXCEPTION_HANDLING, DISABLE_IN_APP_WARN_MESSAGE);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler_random/67/SentryClientHolder.java\nindex c2b7d60bd5..7798f61ab3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler_random/67/SentryClientHolder.java\n@@ -68,7 +68,7 @@ public class SentryClientHolder {\n         boolean triedToUpdate = false;\n         boolean triedToCreateOrg = false;\n         boolean triedToCreateProj = false;\n-        while(true) {\n+        while (true) {\n             projectMap = clients.get().get(organisation);\n             if (projectMap == null) {\n                 //TODO add org validation\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler_three_grams/67/SentryClientHolder.java\nindex c2b7d60bd5..7798f61ab3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/67/SentryClientHolder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler_three_grams/67/SentryClientHolder.java\n@@ -68,7 +68,7 @@ public class SentryClientHolder {\n         boolean triedToUpdate = false;\n         boolean triedToCreateOrg = false;\n         boolean triedToCreateProj = false;\n-        while(true) {\n+        while (true) {\n             projectMap = clients.get().get(organisation);\n             if (projectMap == null) {\n                 //TODO add org validation\n",
            "diff_size": 1
        }
    ]
}