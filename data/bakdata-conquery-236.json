{
    "error_id": "236",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tShardResult result = context.getQueryExecutor().execute(new QueryExecutionContext(context.getStorage()), entry);\n\t\t\t\tresult.getFuture().addListener(()->result.send(context), MoreExecutors.directExecutor());\n\t\t\t} catch(Exception e) {\n\t\t\t\tShardResult result = new ShardResult();\n\t\t\t\tresult.setFinishTime(LocalDateTime.now());\n\t\t\t\tresult.setQueryId(execution.getId());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/236/ExecuteQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/236/ExecuteQuery.java\nindex 97bfe8a28f..f6287ea7d5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/236/ExecuteQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/236/ExecuteQuery.java\n@@ -25,26 +25,30 @@ import lombok.ToString;\n /**\n  * Send message to worker to execute {@code query} on the workers associated entities.\n  */\n-@CPSType(id=\"EXECUTE_QUERY\", base=NamespacedMessage.class)\n-@AllArgsConstructor @NoArgsConstructor @Getter @Setter @ToString(callSuper=true)\n+@CPSType(id = \"EXECUTE_QUERY\", base = NamespacedMessage.class)\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Getter\n+@Setter\n+@ToString(callSuper = true)\n public class ExecuteQuery extends WorkerMessage {\n \n-\tprivate ManagedExecution execution;\n+    private ManagedExecution execution;\n \n-\t@Override\n-\tpublic void react(Worker context) throws Exception {\n-\t\tfor(Entry<ManagedExecutionId, QueryPlan> entry : execution.createQueryPlans(new QueryPlanContext(context)).entrySet()) {\n-\t\t\texecution.start();\n-\t\t\ttry {\n-\t\t\t\tShardResult result = context.getQueryExecutor().execute(new QueryExecutionContext(context.getStorage()), entry);\n-\t\t\t\tresult.getFuture().addListener(()->result.send(context), MoreExecutors.directExecutor());\n-\t\t\t} catch(Exception e) {\n-\t\t\t\tShardResult result = new ShardResult();\n-\t\t\t\tresult.setFinishTime(LocalDateTime.now());\n-\t\t\t\tresult.setQueryId(execution.getId());\n-\t\t\t\tresult.setResults(Collections.singletonList(EntityResult.failed(-1, e)));\n-\t\t\t\tcontext.send(new CollectQueryResult(result));\n-\t\t\t}\n-\t\t}\n-\t}\n+    @Override\n+    public void react(Worker context) throws Exception {\n+        for (Entry<ManagedExecutionId, QueryPlan> entry : execution.createQueryPlans(new QueryPlanContext(context)).entrySet()) {\n+            execution.start();\n+            try {\n+                ShardResult result = context.getQueryExecutor().execute(new QueryExecutionContext(context.getStorage()), entry);\n+                result.getFuture().addListener(() -> result.send(context), MoreExecutors.directExecutor());\n+            } catch (Exception e) {\n+                ShardResult result = new ShardResult();\n+                result.setFinishTime(LocalDateTime.now());\n+                result.setQueryId(execution.getId());\n+                result.setResults(Collections.singletonList(EntityResult.failed(-1, e)));\n+                context.send(new CollectQueryResult(result));\n+            }\n+        }\n+    }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/236/ExecuteQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/236/ExecuteQuery.java\nindex 97bfe8a28f..c5af111e75 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/236/ExecuteQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/236/ExecuteQuery.java\n@@ -38,7 +38,8 @@ public class ExecuteQuery extends WorkerMessage {\n \t\t\ttry {\n \t\t\t\tShardResult result = context.getQueryExecutor().execute(new QueryExecutionContext(context.getStorage()), entry);\n \t\t\t\tresult.getFuture().addListener(()->result.send(context), MoreExecutors.directExecutor());\n-\t\t\t} catch(Exception e) {\n+\t\t\t}\n+catch(Exception e) {\n \t\t\t\tShardResult result = new ShardResult();\n \t\t\t\tresult.setFinishTime(LocalDateTime.now());\n \t\t\t\tresult.setQueryId(execution.getId());\n@@ -47,4 +48,4 @@ public class ExecuteQuery extends WorkerMessage {\n \t\t\t}\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/236/ExecuteQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/236/ExecuteQuery.java\nindex 97bfe8a28f..8c4ac334f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/236/ExecuteQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/236/ExecuteQuery.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.messages.namespaces.specific;\n import java.time.LocalDateTime;\n import java.util.Collections;\n import java.util.Map.Entry;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.execution.ManagedExecution;\n import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n@@ -25,26 +24,31 @@ import lombok.ToString;\n /**\n  * Send message to worker to execute {@code query} on the workers associated entities.\n  */\n-@CPSType(id=\"EXECUTE_QUERY\", base=NamespacedMessage.class)\n-@AllArgsConstructor @NoArgsConstructor @Getter @Setter @ToString(callSuper=true)\n-public class ExecuteQuery extends WorkerMessage {\n \n-\tprivate ManagedExecution execution;\n+@CPSType(id= \"EXECUTE_QUERY\", base= NamespacedMessage.class)\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Getter\n+@Setter\n+@ToString(callSuper=true)\n+public class ExecuteQuery extends WorkerMessage {\n \n-\t@Override\n-\tpublic void react(Worker context) throws Exception {\n-\t\tfor(Entry<ManagedExecutionId, QueryPlan> entry : execution.createQueryPlans(new QueryPlanContext(context)).entrySet()) {\n-\t\t\texecution.start();\n-\t\t\ttry {\n-\t\t\t\tShardResult result = context.getQueryExecutor().execute(new QueryExecutionContext(context.getStorage()), entry);\n-\t\t\t\tresult.getFuture().addListener(()->result.send(context), MoreExecutors.directExecutor());\n-\t\t\t} catch(Exception e) {\n-\t\t\t\tShardResult result = new ShardResult();\n-\t\t\t\tresult.setFinishTime(LocalDateTime.now());\n-\t\t\t\tresult.setQueryId(execution.getId());\n-\t\t\t\tresult.setResults(Collections.singletonList(EntityResult.failed(-1, e)));\n-\t\t\t\tcontext.send(new CollectQueryResult(result));\n-\t\t\t}\n-\t\t}\n-\t}\n-}\n+    private ManagedExecution execution;\n+    @Override\n+    public void react(Worker context) throws Exception {\n+        for(Entry<ManagedExecutionId, QueryPlan> entry : execution.createQueryPlans(new QueryPlanContext(context)).entrySet()) {\n+            execution.start();\n+            try {\n+                ShardResult result = context.getQueryExecutor().execute(new QueryExecutionContext(context.getStorage()), entry);\n+                result.getFuture().addListener(()->result.send(context), MoreExecutors.directExecutor());\n+            }\n+            catch (Exception e) {\n+                ShardResult result = new ShardResult();\n+                result.setFinishTime(LocalDateTime.now());\n+                result.setQueryId(execution.getId());\n+                result.setResults(Collections.singletonList(EntityResult.failed(-1, e)));\n+                context.send(new CollectQueryResult(result));\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}