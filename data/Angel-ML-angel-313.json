{
    "error_id": "313",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/313/DotPartitionParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/313/DotPartitionParam.java\nindex 4fceef4b11..ee52a8a844 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/313/DotPartitionParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/313/DotPartitionParam.java\n@@ -23,45 +23,45 @@ import io.netty.buffer.ByteBuf;\n \n public class DotPartitionParam extends PartitionGetParam {\n \n-  int seed;\n-  int partitionId;\n-  private byte[] bufData;\n-  ByteBuf edgeBuf;\n-  private int bufLength;\n+    int seed;\n+    int partitionId;\n+    private byte[] bufData;\n+    ByteBuf edgeBuf;\n+    private int bufLength;\n \n-  public DotPartitionParam(int matrixId,\n-                           PartitionKey pkey,\n-                           byte[] bufData,\n-                           int bufLength) {\n-    super(matrixId, pkey);\n-    this.bufData = bufData;\n-    this.bufLength = bufLength;\n-  }\n+    public DotPartitionParam(int matrixId,\n+                             PartitionKey pkey,\n+                             byte[] bufData,\n+                             int bufLength) {\n+        super(matrixId, pkey);\n+        this.bufData = bufData;\n+        this.bufLength = bufLength;\n+    }\n \n-  public DotPartitionParam() {\n-  }\n+    public DotPartitionParam() {\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeBytes(bufData);\n-  }\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeBytes(bufData);\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    this.seed = buf.readInt();\n-    this.partitionId = buf.readInt();\n-    this.edgeBuf = buf;\n-    buf.retain();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        this.seed = buf.readInt();\n+        this.partitionId = buf.readInt();\n+        this.edgeBuf = buf;\n+        buf.retain();\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    return super.bufferLen() + this.bufLength;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return super.bufferLen() + this.bufLength;\n+    }\n \n-  public void clear() {\n-    edgeBuf.release();\n-  }\n+    public void clear() {\n+        edgeBuf.release();\n+    }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/313/DotPartitionParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/313/DotPartitionParam.java\nindex 4fceef4b11..4d0cd74c51 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/313/DotPartitionParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/313/DotPartitionParam.java\n@@ -29,11 +29,10 @@ public class DotPartitionParam extends PartitionGetParam {\n   ByteBuf edgeBuf;\n   private int bufLength;\n \n-  public DotPartitionParam(int matrixId,\n-                           PartitionKey pkey,\n+  public DotPartitionParam(int matrixId, PartitionKey pkey,\n                            byte[] bufData,\n                            int bufLength) {\n-    super(matrixId, pkey);\n+  super(matrixId, pkey);\n     this.bufData = bufData;\n     this.bufLength = bufLength;\n   }\n@@ -64,4 +63,4 @@ public class DotPartitionParam extends PartitionGetParam {\n   public void clear() {\n     edgeBuf.release();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/313/DotPartitionParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/313/DotPartitionParam.java\nindex 4fceef4b11..c860dbde7f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/313/DotPartitionParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/313/DotPartitionParam.java\n@@ -23,45 +23,43 @@ import io.netty.buffer.ByteBuf;\n \n public class DotPartitionParam extends PartitionGetParam {\n \n-  int seed;\n-  int partitionId;\n-  private byte[] bufData;\n-  ByteBuf edgeBuf;\n-  private int bufLength;\n+    int seed;\n \n-  public DotPartitionParam(int matrixId,\n-                           PartitionKey pkey,\n-                           byte[] bufData,\n-                           int bufLength) {\n+    int partitionId;\n+    private byte[] bufData;\n+    ByteBuf edgeBuf;\n+    private int bufLength;\n+\n+    public DotPartitionParam(int matrixId, PartitionKey pkey, byte[] bufData, int bufLength) {\n     super(matrixId, pkey);\n     this.bufData = bufData;\n     this.bufLength = bufLength;\n-  }\n+    }\n \n-  public DotPartitionParam() {\n-  }\n+    public DotPartitionParam() {}\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n+    @Override\n+    public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeBytes(bufData);\n-  }\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     this.seed = buf.readInt();\n     this.partitionId = buf.readInt();\n     this.edgeBuf = buf;\n     buf.retain();\n-  }\n+    }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return super.bufferLen() + this.bufLength;\n-  }\n+    }\n \n-  public void clear() {\n+    public void clear() {\n     edgeBuf.release();\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}