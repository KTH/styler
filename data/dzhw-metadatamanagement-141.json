{
    "error_id": "141",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "60",
                "severity": "error",
                "message": "'}' at column 60 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(UniqueCode constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "60",
                    "severity": "error",
                    "message": "'}' at column 60 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/141/UniqueCodeValidator.java\nindex db03306074..0c6c082b55 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/141/UniqueCodeValidator.java\n@@ -35,18 +35,18 @@ public class UniqueCodeValidator\n     if (missings == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> codes = new HashSet<>();\n-    \n+\n     for (Missing value : missings) {\n       if (value.getCode() != null) {\n         if (codes.contains(value.getCode())) {\n           return false;\n         }\n-        codes.add(value.getCode());        \n+        codes.add(value.getCode());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/141/UniqueCodeValidator.java\nindex db03306074..1efb72c8c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/141/UniqueCodeValidator.java\n@@ -10,7 +10,7 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Missing;\n \n /**\n  * Ensure that missing.code is unique within the variable.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n public class UniqueCodeValidator\n@@ -18,15 +18,16 @@ public class UniqueCodeValidator\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueCode constraintAnnotation) {}\n+  public void initialize(UniqueCode constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n@@ -35,18 +36,18 @@ public class UniqueCodeValidator\n     if (missings == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> codes = new HashSet<>();\n-    \n+\n     for (Missing value : missings) {\n       if (value.getCode() != null) {\n         if (codes.contains(value.getCode())) {\n           return false;\n         }\n-        codes.add(value.getCode());        \n+        codes.add(value.getCode());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "column": "60",
                    "severity": "error",
                    "message": "'}' at column 60 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 5, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/141/UniqueCodeValidator.java\nindex db03306074..d0de9f1091 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/141/UniqueCodeValidator.java\n@@ -43,10 +43,9 @@ public class UniqueCodeValidator\n         if (codes.contains(value.getCode())) {\n           return false;\n         }\n-        codes.add(value.getCode());        \n-      }\n-    }\n-    \n-    return true;\n+        codes.add(value.getCode());\n+     }\n+        }\n+return true;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 39, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 39, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 39, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/141/UniqueCodeValidator.java\nindex db03306074..0a154739a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/141/UniqueCodeValidator.java\n@@ -2,10 +2,8 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import java.util.HashSet;\n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Missing;\n \n /**\n@@ -13,16 +11,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Missing;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class UniqueCodeValidator\n-    implements ConstraintValidator<UniqueCode, List<Missing>> {\n+\n+\n+public class UniqueCodeValidator implements ConstraintValidator<UniqueCode, List<Missing>> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(UniqueCode constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(UniqueCode constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -30,23 +32,25 @@ public class UniqueCodeValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(List<Missing> missings, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(List<Missing> missings,\n+        ConstraintValidatorContext context) {\n     if (missings == null) {\n-      return true;\n+        return true;\n     }\n-    \n     HashSet<String> codes = new HashSet<>();\n-    \n+\n     for (Missing value : missings) {\n-      if (value.getCode() != null) {\n-        if (codes.contains(value.getCode())) {\n-          return false;\n+        if (value.getCode() != null) {\n+                                       if (codes.contains(value.getCode())) {\n+                                         return false;\n+                                       }\n+                                       codes.add(value.getCode());\n         }\n-        codes.add(value.getCode());        \n-      }\n     }\n-    \n+\n     return true;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "60",
                    "severity": "error",
                    "message": "'}' at column 60 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/141/UniqueCodeValidator.java\nindex db03306074..0c6c082b55 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/141/UniqueCodeValidator.java\n@@ -35,18 +35,18 @@ public class UniqueCodeValidator\n     if (missings == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> codes = new HashSet<>();\n-    \n+\n     for (Missing value : missings) {\n       if (value.getCode() != null) {\n         if (codes.contains(value.getCode())) {\n           return false;\n         }\n-        codes.add(value.getCode());        \n+        codes.add(value.getCode());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/141/UniqueCodeValidator.java\nindex db03306074..16087388b7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/141/UniqueCodeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/141/UniqueCodeValidator.java\n@@ -22,9 +22,8 @@ public class UniqueCodeValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(UniqueCode constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(UniqueCode constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n@@ -35,18 +34,18 @@ public class UniqueCodeValidator\n     if (missings == null) {\n       return true;\n     }\n-    \n+\n     HashSet<String> codes = new HashSet<>();\n-    \n+\n     for (Missing value : missings) {\n       if (value.getCode() != null) {\n         if (codes.contains(value.getCode())) {\n           return false;\n         }\n-        codes.add(value.getCode());        \n+        codes.add(value.getCode());\n       }\n     }\n-    \n+\n     return true;\n   }\n }\n",
            "diff_size": 7
        }
    ]
}