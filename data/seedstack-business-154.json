{
    "error_id": "154",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.specification;\n\nimport static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/154/AttributeSpecification.java\nindex d416bd89fd..abac14960b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/154/AttributeSpecification.java\n@@ -5,32 +5,33 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.specification;\n \n-import static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n+package org .seedstack.business.specification;import\n \n-import java.lang.reflect.Field;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Map;\n-import java.util.Optional;\n-import org.seedstack.business.internal.utils.FieldUtils;\n+static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n \n-/**\n+ import java.lang.reflect.Field;\n+ import java.util.Arrays;\n+ import java.util.Collection;\n+ import java.util.Map;\n+ import java.util.Optional;\n+ import org.seedstack.business.internal.utils.FieldUtils;\n+\n+ /**\n  * A specification that restricts the application of another specification to an attribute of the\n  * candidate object. It supports nested attributes with a dot notation.\n  *\n  * @param <T> the type of the candidate object the specification applies to.\n  * @param <V> the type of the attribute which is targeted by this specification.\n  */\n-public class AttributeSpecification<T, V> implements Specification<T> {\n-    private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n+ public class AttributeSpecification<T, V> implements Specification<T> {\n+     private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n \n-    private final String path;\n-    private final String[] splitPath;\n-    private final Specification<V> valueSpecification;\n+     private final String path;\n+     private final String[] splitPath;\n+     private final Specification<V> valueSpecification;\n \n-    /**\n+     /**\n      * Creates an attribute specification.\n      *\n      * @param path               the path to the target attribute, supporting dot notation for nested\n@@ -38,69 +39,70 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n      * @param valueSpecification the specification that the value of the target attribute must\n      *                           satisfy.\n      */\n-    public AttributeSpecification(String path, Specification<V> valueSpecification) {\n-        this.path = path;\n-        this.splitPath = path.split(ATTRIBUTE_PATH_PATTERN);\n-        this.valueSpecification = valueSpecification;\n-    }\n+     public AttributeSpecification(String path, Specification<V> valueSpecification) {\n+         this.path = path;\n+         this.splitPath = path.split(ATTRIBUTE_PATH_PATTERN);\n+         this.valueSpecification = valueSpecification;\n+     }\n \n-    /**\n+     /**\n      * Returns the path.\n      *\n      * @return the path to the target attribute.\n      */\n-    public String getPath() {\n-        return path;\n-    }\n+     public String getPath() {\n+         return path;\n+     }\n \n-    /**\n+     /**\n      * Returns the specification on the value.\n      *\n      * @return the specification that the value of the target attribute must satisfy.\n      */\n-    public Specification<V> getValueSpecification() {\n-        return valueSpecification;\n-    }\n+     public Specification<V> getValueSpecification() {\n+         return valueSpecification;\n+     }\n \n-    @Override\n-    public boolean isSatisfiedBy(T candidate) {\n-        return isSatisfiedBy(candidate, 0);\n-    }\n+     @Override\n+     public boolean isSatisfiedBy(T candidate) {\n+         return isSatisfiedBy(candidate, 0);\n+     }\n \n-    private boolean isSatisfiedBy(Object candidate, int pathIndex) {\n-        if (candidate != null) {\n-            Optional<Field> fieldOptional = FieldUtils.resolveField(candidate.getClass(), splitPath[pathIndex]);\n-            if (fieldOptional.isPresent()) {\n-                Object result = getFieldValue(candidate, fieldOptional.get());\n-                if (pathIndex < splitPath.length - 1) {\n-                    if (result instanceof Collection) {\n-                        return ((Collection<?>) result).stream()\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else if (result.getClass()\n-                            .isArray()) {\n-                        return Arrays.stream((Object[]) result)\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else if (result instanceof Map) {\n-                        return ((Collection<?>) ((Map<?, ?>) result).values()).stream()\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else {\n-                        return isSatisfiedBy(result, pathIndex + 1);\n-                    }\n-                } else {\n-                    return isSatisfiedByValue(result);\n-                }\n-            }\n-        }\n-        return false;\n-    }\n+     private boolean isSatisfiedBy(Object candidate, int pathIndex) {\n+         if (candidate != null) {\n+             Optional<Field> fieldOptional = FieldUtils.resolveField(candidate.getClass(), splitPath[pathIndex]);\n+             if (fieldOptional.isPresent()) {\n+                 Object result = getFieldValue(candidate, fieldOptional.get());\n+                 if (pathIndex < splitPath.length - 1) {\n+                     if (result instanceof Collection) {\n+                         return ((Collection<?>) result).stream()\n+                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n+                     } else if (result.getClass()\n+                             .isArray()) {\n+                         return Arrays.stream((Object[]) result)\n+                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n+                     } else if (result instanceof Map) {\n+                         return ((Collection<?>) ((Map<?, ?>) result).values()).stream()\n+                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n+                     } else {\n+                         return isSatisfiedBy(result, pathIndex + 1);\n+                     }\n+                 } else {\n+                     return isSatisfiedByValue(result);\n+                 }\n+             }\n+         }\n+         return false;\n+     }\n \n-    @Override\n-    public String toString() {\n-        return path + \" \" + String.valueOf(valueSpecification);\n-    }\n+     @Override\n+     public String toString() {\n+         return path + \" \" + String.valueOf(valueSpecification);\n+     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private boolean isSatisfiedByValue(Object result) {\n-        return valueSpecification.isSatisfiedBy((V) result);\n-    }\n-}\n+     @SuppressWarnings(\"unchecked\")\n+     private boolean isSatisfiedByValue(Object result) {\n+         return valueSpecification.isSatisfiedBy((V) result);\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/154/AttributeSpecification.java\nindex d416bd89fd..09f08a411c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/154/AttributeSpecification.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.specification;\n \n import static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/154/AttributeSpecification.java\nindex d416bd89fd..d3a086eee6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/154/AttributeSpecification.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.specification;\n \n import static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n@@ -25,8 +26,7 @@ import org.seedstack.business.internal.utils.FieldUtils;\n  */\n public class AttributeSpecification<T, V> implements Specification<T> {\n     private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n-\n-    private final String path;\n+private final String path;\n     private final String[] splitPath;\n     private final Specification<V> valueSpecification;\n \n@@ -78,7 +78,7 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n                     } else if (result.getClass()\n                             .isArray()) {\n-                        return Arrays.stream((Object[]) result)\n+    return Arrays.stream((Object[]) result)\n                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n                     } else if (result instanceof Map) {\n                         return ((Collection<?>) ((Map<?, ?>) result).values()).stream()\n@@ -103,4 +103,4 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n     private boolean isSatisfiedByValue(Object result) {\n         return valueSpecification.isSatisfiedBy((V) result);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "column": "37",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "83",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "48",
                    "severity": "warning",
                    "message": "WhitespaceAround: '-' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "86",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "column": "28",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "column": "86",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "35",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "column": "20",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/154/AttributeSpecification.java\nindex d416bd89fd..9fca393d4c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/154/AttributeSpecification.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.specification;\n \n import static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n-\n import java.lang.reflect.Field;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -23,9 +22,11 @@ import org.seedstack.business.internal.utils.FieldUtils;\n  * @param <T> the type of the candidate object the specification applies to.\n  * @param <V> the type of the attribute which is targeted by this specification.\n  */\n-public class AttributeSpecification<T, V> implements Specification<T> {\n-    private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n \n+\n+public class AttributeSpecification <T, V> implements Specification<T> {\n+\n+    private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n     private final String path;\n     private final String[] splitPath;\n     private final Specification<V> valueSpecification;\n@@ -38,6 +39,8 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n      * @param valueSpecification the specification that the value of the target attribute must\n      *                           satisfy.\n      */\n+\n+\n     public AttributeSpecification(String path, Specification<V> valueSpecification) {\n         this.path = path;\n         this.splitPath = path.split(ATTRIBUTE_PATH_PATTERN);\n@@ -49,6 +52,8 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n      *\n      * @return the path to the target attribute.\n      */\n+\n+\n     public String getPath() {\n         return path;\n     }\n@@ -58,6 +63,8 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n      *\n      * @return the specification that the value of the target attribute must satisfy.\n      */\n+\n+\n     public Specification<V> getValueSpecification() {\n         return valueSpecification;\n     }\n@@ -67,25 +74,26 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n         return isSatisfiedBy(candidate, 0);\n     }\n \n+\n     private boolean isSatisfiedBy(Object candidate, int pathIndex) {\n         if (candidate != null) {\n             Optional<Field> fieldOptional = FieldUtils.resolveField(candidate.getClass(), splitPath[pathIndex]);\n             if (fieldOptional.isPresent()) {\n                 Object result = getFieldValue(candidate, fieldOptional.get());\n-                if (pathIndex < splitPath.length - 1) {\n+                if (pathIndex <splitPath.length- 1) {\n                     if (result instanceof Collection) {\n                         return ((Collection<?>) result).stream()\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else if (result.getClass()\n-                            .isArray()) {\n-                        return Arrays.stream((Object[]) result)\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else if (result instanceof Map) {\n-                        return ((Collection<?>) ((Map<?, ?>) result).values()).stream()\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else {\n-                        return isSatisfiedBy(result, pathIndex + 1);\n-                    }\n+.anyMatch(item-> isSatisfiedBy(item, pathIndex + 1));\n+                    } else if(result.getClass().isArray()) {\n+                               return Arrays.stream((Object []) result).anyMatch(item-> isSatisfiedBy(item, pathIndex + 1));\n+                           } else if(result instanceof Map) {\n+                                      return ((Collection<?>) ((Map<?, ?>) result).values()\n+                                          )\n+                                              .stream()\n+.anyMatch(item-> isSatisfiedBy(item, pathIndex + 1));\n+                                  } else {\n+                                      return isSatisfiedBy(result, pathIndex + 1);\n+                                  }\n                 } else {\n                     return isSatisfiedByValue(result);\n                 }\n@@ -96,11 +104,10 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n \n     @Override\n     public String toString() {\n-        return path + \" \" + String.valueOf(valueSpecification);\n+        return path+ \" \" + String.valueOf(valueSpecification);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private boolean isSatisfiedByValue(Object result) {\n+    @SuppressWarnings(\"unchecked\") private boolean isSatisfiedByValue(Object result) {\n         return valueSpecification.isSatisfiedBy((V) result);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 25, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/154/AttributeSpecification.java\nindex d416bd89fd..abac14960b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/154/AttributeSpecification.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/154/AttributeSpecification.java\n@@ -5,32 +5,33 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.specification;\n \n-import static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n+package org .seedstack.business.specification;import\n \n-import java.lang.reflect.Field;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Map;\n-import java.util.Optional;\n-import org.seedstack.business.internal.utils.FieldUtils;\n+static org.seedstack.business.internal.utils.FieldUtils.getFieldValue;\n \n-/**\n+ import java.lang.reflect.Field;\n+ import java.util.Arrays;\n+ import java.util.Collection;\n+ import java.util.Map;\n+ import java.util.Optional;\n+ import org.seedstack.business.internal.utils.FieldUtils;\n+\n+ /**\n  * A specification that restricts the application of another specification to an attribute of the\n  * candidate object. It supports nested attributes with a dot notation.\n  *\n  * @param <T> the type of the candidate object the specification applies to.\n  * @param <V> the type of the attribute which is targeted by this specification.\n  */\n-public class AttributeSpecification<T, V> implements Specification<T> {\n-    private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n+ public class AttributeSpecification<T, V> implements Specification<T> {\n+     private static final String ATTRIBUTE_PATH_PATTERN = \"\\\\.\";\n \n-    private final String path;\n-    private final String[] splitPath;\n-    private final Specification<V> valueSpecification;\n+     private final String path;\n+     private final String[] splitPath;\n+     private final Specification<V> valueSpecification;\n \n-    /**\n+     /**\n      * Creates an attribute specification.\n      *\n      * @param path               the path to the target attribute, supporting dot notation for nested\n@@ -38,69 +39,70 @@ public class AttributeSpecification<T, V> implements Specification<T> {\n      * @param valueSpecification the specification that the value of the target attribute must\n      *                           satisfy.\n      */\n-    public AttributeSpecification(String path, Specification<V> valueSpecification) {\n-        this.path = path;\n-        this.splitPath = path.split(ATTRIBUTE_PATH_PATTERN);\n-        this.valueSpecification = valueSpecification;\n-    }\n+     public AttributeSpecification(String path, Specification<V> valueSpecification) {\n+         this.path = path;\n+         this.splitPath = path.split(ATTRIBUTE_PATH_PATTERN);\n+         this.valueSpecification = valueSpecification;\n+     }\n \n-    /**\n+     /**\n      * Returns the path.\n      *\n      * @return the path to the target attribute.\n      */\n-    public String getPath() {\n-        return path;\n-    }\n+     public String getPath() {\n+         return path;\n+     }\n \n-    /**\n+     /**\n      * Returns the specification on the value.\n      *\n      * @return the specification that the value of the target attribute must satisfy.\n      */\n-    public Specification<V> getValueSpecification() {\n-        return valueSpecification;\n-    }\n+     public Specification<V> getValueSpecification() {\n+         return valueSpecification;\n+     }\n \n-    @Override\n-    public boolean isSatisfiedBy(T candidate) {\n-        return isSatisfiedBy(candidate, 0);\n-    }\n+     @Override\n+     public boolean isSatisfiedBy(T candidate) {\n+         return isSatisfiedBy(candidate, 0);\n+     }\n \n-    private boolean isSatisfiedBy(Object candidate, int pathIndex) {\n-        if (candidate != null) {\n-            Optional<Field> fieldOptional = FieldUtils.resolveField(candidate.getClass(), splitPath[pathIndex]);\n-            if (fieldOptional.isPresent()) {\n-                Object result = getFieldValue(candidate, fieldOptional.get());\n-                if (pathIndex < splitPath.length - 1) {\n-                    if (result instanceof Collection) {\n-                        return ((Collection<?>) result).stream()\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else if (result.getClass()\n-                            .isArray()) {\n-                        return Arrays.stream((Object[]) result)\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else if (result instanceof Map) {\n-                        return ((Collection<?>) ((Map<?, ?>) result).values()).stream()\n-                                .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n-                    } else {\n-                        return isSatisfiedBy(result, pathIndex + 1);\n-                    }\n-                } else {\n-                    return isSatisfiedByValue(result);\n-                }\n-            }\n-        }\n-        return false;\n-    }\n+     private boolean isSatisfiedBy(Object candidate, int pathIndex) {\n+         if (candidate != null) {\n+             Optional<Field> fieldOptional = FieldUtils.resolveField(candidate.getClass(), splitPath[pathIndex]);\n+             if (fieldOptional.isPresent()) {\n+                 Object result = getFieldValue(candidate, fieldOptional.get());\n+                 if (pathIndex < splitPath.length - 1) {\n+                     if (result instanceof Collection) {\n+                         return ((Collection<?>) result).stream()\n+                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n+                     } else if (result.getClass()\n+                             .isArray()) {\n+                         return Arrays.stream((Object[]) result)\n+                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n+                     } else if (result instanceof Map) {\n+                         return ((Collection<?>) ((Map<?, ?>) result).values()).stream()\n+                                 .anyMatch(item -> isSatisfiedBy(item, pathIndex + 1));\n+                     } else {\n+                         return isSatisfiedBy(result, pathIndex + 1);\n+                     }\n+                 } else {\n+                     return isSatisfiedByValue(result);\n+                 }\n+             }\n+         }\n+         return false;\n+     }\n \n-    @Override\n-    public String toString() {\n-        return path + \" \" + String.valueOf(valueSpecification);\n-    }\n+     @Override\n+     public String toString() {\n+         return path + \" \" + String.valueOf(valueSpecification);\n+     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private boolean isSatisfiedByValue(Object result) {\n-        return valueSpecification.isSatisfiedBy((V) result);\n-    }\n-}\n+     @SuppressWarnings(\"unchecked\")\n+     private boolean isSatisfiedByValue(Object result) {\n+         return valueSpecification.isSatisfiedBy((V) result);\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}