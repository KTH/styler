{
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "144",
                "column": "40",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    ListInsert listInsert = (ListInsert)o;\n    return\n        Objects.equals(this.template, listInsert.template);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/46/ListInsert.java\nindex 584c3c7bba..ac53080464 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/46/ListInsert.java\n@@ -141,7 +141,7 @@ public class ListInsert {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListInsert listInsert = (ListInsert)o;\n+    ListInsert listInsert = (ListInsert) o;\n     return\n         Objects.equals(this.template, listInsert.template);\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/46/ListInsert.java\nindex 584c3c7bba..2f5363bf1f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/46/ListInsert.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,101 +50,103 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Insert document to document list.\")\n public class ListInsert {\n-    /**\n-     * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\n-     */\n-    @JsonAdapter(TemplateEnum.Adapter.class)\n-    public enum TemplateEnum {\n-        BULLETDEFAULT(\"BulletDefault\"),\n-        BULLETDISK(\"BulletDisk\"),\n-        BULLETCIRCLE(\"BulletCircle\"),\n-        BULLETSQUARE(\"BulletSquare\"),\n-        BULLETDIAMONDS(\"BulletDiamonds\"),\n-        BULLETARROWHEAD(\"BulletArrowHead\"),\n-        BULLETTICK(\"BulletTick\"),\n-        NUMBERDEFAULT(\"NumberDefault\"),\n-        NUMBERARABICDOT(\"NumberArabicDot\"),\n-        NUMBERARABICPARENTHESIS(\"NumberArabicParenthesis\"),\n-        NUMBERUPPERCASEROMANDOT(\"NumberUppercaseRomanDot\"),\n-        NUMBERUPPERCASELETTERDOT(\"NumberUppercaseLetterDot\"),\n-        NUMBERLOWERCASELETTERPARENTHESIS(\"NumberLowercaseLetterParenthesis\"),\n-        NUMBERLOWERCASELETTERDOT(\"NumberLowercaseLetterDot\"),\n-        NUMBERLOWERCASEROMANDOT(\"NumberLowercaseRomanDot\"),\n-        OUTLINENUMBERS(\"OutlineNumbers\"),\n-        OUTLINELEGAL(\"OutlineLegal\"),\n-        OUTLINEBULLETS(\"OutlineBullets\"),\n-        OUTLINEHEADINGSARTICLESECTION(\"OutlineHeadingsArticleSection\"),\n-        OUTLINEHEADINGSLEGAL(\"OutlineHeadingsLegal\"),\n-        OUTLINEHEADINGSNUMBERS(\"OutlineHeadingsNumbers\"),\n-        OUTLINEHEADINGSCHAPTER(\"OutlineHeadingsChapter\");\n-\n-        private String value;\n-\n-        TemplateEnum(String value) {\n-            this.value = value;\n-        }\n-\n-        public String getValue() {\n-            return value;\n-        }\n+  /**\n+   * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\n+   */\n+  @JsonAdapter(TemplateEnum.Adapter.class)\n+  public enum TemplateEnum {\n+    BULLETDEFAULT(\"BulletDefault\"),\n+    BULLETDISK(\"BulletDisk\"),\n+    BULLETCIRCLE(\"BulletCircle\"),\n+    BULLETSQUARE(\"BulletSquare\"),\n+    BULLETDIAMONDS(\"BulletDiamonds\"),\n+    BULLETARROWHEAD(\"BulletArrowHead\"),\n+    BULLETTICK(\"BulletTick\"),\n+    NUMBERDEFAULT(\"NumberDefault\"),\n+    NUMBERARABICDOT(\"NumberArabicDot\"),\n+    NUMBERARABICPARENTHESIS(\"NumberArabicParenthesis\"),\n+    NUMBERUPPERCASEROMANDOT(\"NumberUppercaseRomanDot\"),\n+    NUMBERUPPERCASELETTERDOT(\"NumberUppercaseLetterDot\"),\n+    NUMBERLOWERCASELETTERPARENTHESIS(\"NumberLowercaseLetterParenthesis\"),\n+    NUMBERLOWERCASELETTERDOT(\"NumberLowercaseLetterDot\"),\n+    NUMBERLOWERCASEROMANDOT(\"NumberLowercaseRomanDot\"),\n+    OUTLINENUMBERS(\"OutlineNumbers\"),\n+    OUTLINELEGAL(\"OutlineLegal\"),\n+    OUTLINEBULLETS(\"OutlineBullets\"),\n+    OUTLINEHEADINGSARTICLESECTION(\"OutlineHeadingsArticleSection\"),\n+    OUTLINEHEADINGSLEGAL(\"OutlineHeadingsLegal\"),\n+    OUTLINEHEADINGSNUMBERS(\"OutlineHeadingsNumbers\"),\n+    OUTLINEHEADINGSCHAPTER(\"OutlineHeadingsChapter\");\n+\n+    private String value;\n+\n+    TemplateEnum(String value) {\n+      this.value = value;\n+    }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    public String getValue() {\n+      return value;\n+    }\n \n-        public static TemplateEnum fromValue(String text) {\n-            for (TemplateEnum b : TemplateEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-        public static class Adapter extends TypeAdapter< TemplateEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public TemplateEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return TemplateEnum.fromValue(String.valueOf(value));\n-            }\n+    public static TemplateEnum fromValue(String text) {\n+      for (TemplateEnum b : TemplateEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n     }\n \n-    @SerializedName(\"Template\")\n-    private TemplateEnum template = null;\n-    public ListInsert template(TemplateEnum template) {\n-        this.template = template;\n-        return this;\n+    public static class Adapter extends TypeAdapter<TemplateEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+      @Override\n+      public TemplateEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return TemplateEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n-    /**\n-     * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\n-    * @return template\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\")\n-    public TemplateEnum getTemplate() {\n-        return template;\n-    }\n+  @SerializedName(\"Template\")\n+  private TemplateEnum template = null;\n \n-    public void setTemplate(TemplateEnum template) {\n-        this.template = template;\n-    }\n+  public ListInsert template(TemplateEnum template) {\n+    this.template = template;\n+    return this;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    ListInsert listInsert = (ListInsert)o;\n+  /**\n+   * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\n+   *\n+   * @return template\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\")\n+  public TemplateEnum getTemplate() {\n+    return template;\n+  }\n+\n+  public void setTemplate(TemplateEnum template) {\n+    this.template = template;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    ListInsert listInsert = (ListInsert) o;\n     return\n         Objects.equals(this.template, listInsert.template);\n   }\n",
            "diff_size": 114
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "167",
                    "column": "36",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/46/ListInsert.java\nindex 584c3c7bba..8a486a3ea8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/46/ListInsert.java\n@@ -53,27 +53,48 @@ public class ListInsert {\n     @JsonAdapter(TemplateEnum.Adapter.class)\n     public enum TemplateEnum {\n         BULLETDEFAULT(\"BulletDefault\"),\n-        BULLETDISK(\"BulletDisk\"),\n-        BULLETCIRCLE(\"BulletCircle\"),\n-        BULLETSQUARE(\"BulletSquare\"),\n-        BULLETDIAMONDS(\"BulletDiamonds\"),\n-        BULLETARROWHEAD(\"BulletArrowHead\"),\n-        BULLETTICK(\"BulletTick\"),\n-        NUMBERDEFAULT(\"NumberDefault\"),\n-        NUMBERARABICDOT(\"NumberArabicDot\"),\n-        NUMBERARABICPARENTHESIS(\"NumberArabicParenthesis\"),\n-        NUMBERUPPERCASEROMANDOT(\"NumberUppercaseRomanDot\"),\n-        NUMBERUPPERCASELETTERDOT(\"NumberUppercaseLetterDot\"),\n-        NUMBERLOWERCASELETTERPARENTHESIS(\"NumberLowercaseLetterParenthesis\"),\n-        NUMBERLOWERCASELETTERDOT(\"NumberLowercaseLetterDot\"),\n-        NUMBERLOWERCASEROMANDOT(\"NumberLowercaseRomanDot\"),\n-        OUTLINENUMBERS(\"OutlineNumbers\"),\n-        OUTLINELEGAL(\"OutlineLegal\"),\n-        OUTLINEBULLETS(\"OutlineBullets\"),\n-        OUTLINEHEADINGSARTICLESECTION(\"OutlineHeadingsArticleSection\"),\n-        OUTLINEHEADINGSLEGAL(\"OutlineHeadingsLegal\"),\n-        OUTLINEHEADINGSNUMBERS(\"OutlineHeadingsNumbers\"),\n-        OUTLINEHEADINGSCHAPTER(\"OutlineHeadingsChapter\");\n+\n+BULLETDISK(\"BulletDisk\"),\n+\n+BULLETCIRCLE(\"BulletCircle\"),\n+\n+BULLETSQUARE(\"BulletSquare\"),\n+\n+BULLETDIAMONDS(\"BulletDiamonds\"),\n+\n+BULLETARROWHEAD(\"BulletArrowHead\"),\n+\n+BULLETTICK(\"BulletTick\"),\n+\n+NUMBERDEFAULT(\"NumberDefault\"),\n+\n+NUMBERARABICDOT(\"NumberArabicDot\"),\n+\n+NUMBERARABICPARENTHESIS(\"NumberArabicParenthesis\"),\n+\n+NUMBERUPPERCASEROMANDOT(\"NumberUppercaseRomanDot\"),\n+\n+NUMBERUPPERCASELETTERDOT(\"NumberUppercaseLetterDot\"),\n+\n+NUMBERLOWERCASELETTERPARENTHESIS(\"NumberLowercaseLetterParenthesis\"),\n+\n+NUMBERLOWERCASELETTERDOT(\"NumberLowercaseLetterDot\"),\n+\n+NUMBERLOWERCASEROMANDOT(\"NumberLowercaseRomanDot\"),\n+\n+OUTLINENUMBERS(\"OutlineNumbers\"),\n+\n+OUTLINELEGAL(\"OutlineLegal\"),\n+\n+OUTLINEBULLETS(\"OutlineBullets\"),\n+\n+OUTLINEHEADINGSARTICLESECTION(\"OutlineHeadingsArticleSection\"),\n+\n+OUTLINEHEADINGSLEGAL(\"OutlineHeadingsLegal\"),\n+\n+OUTLINEHEADINGSNUMBERS(\"OutlineHeadingsNumbers\"),\n+\n+OUTLINEHEADINGSCHAPTER(\"OutlineHeadingsChapter\");\n \n         private String value;\n \n@@ -99,7 +120,7 @@ public class ListInsert {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< TemplateEnum > {\n+        public static class Adapter extends TypeAdapter<TemplateEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -115,7 +136,8 @@ public class ListInsert {\n \n     @SerializedName(\"Template\")\n     private TemplateEnum template = null;\n-    public ListInsert template(TemplateEnum template) {\n+\n+public ListInsert template(TemplateEnum template) {\n         this.template = template;\n         return this;\n     }\n@@ -137,13 +159,13 @@ public class ListInsert {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListInsert listInsert = (ListInsert)o;\n-    return\n-        Objects.equals(this.template, listInsert.template);\n+\n+ListInsert listInsert = (ListInsert)o;\n+    return Objects.equals(this.template, listInsert.template);\n   }\n \n   @Override\n@@ -170,4 +192,4 @@ public class ListInsert {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/46/ListInsert.java\nindex 584c3c7bba..d00ed14352 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/46/ListInsert.java\n@@ -45,129 +45,166 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Insert document to document list.\n  */\n+\n+\n @ApiModel(description = \"Insert document to document list.\")\n+\n public class ListInsert {\n     /**\n      * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\n      */\n     @JsonAdapter(TemplateEnum.Adapter.class)\n     public enum TemplateEnum {\n-        BULLETDEFAULT(\"BulletDefault\"),\n-        BULLETDISK(\"BulletDisk\"),\n-        BULLETCIRCLE(\"BulletCircle\"),\n-        BULLETSQUARE(\"BulletSquare\"),\n-        BULLETDIAMONDS(\"BulletDiamonds\"),\n-        BULLETARROWHEAD(\"BulletArrowHead\"),\n-        BULLETTICK(\"BulletTick\"),\n-        NUMBERDEFAULT(\"NumberDefault\"),\n-        NUMBERARABICDOT(\"NumberArabicDot\"),\n-        NUMBERARABICPARENTHESIS(\"NumberArabicParenthesis\"),\n-        NUMBERUPPERCASEROMANDOT(\"NumberUppercaseRomanDot\"),\n-        NUMBERUPPERCASELETTERDOT(\"NumberUppercaseLetterDot\"),\n-        NUMBERLOWERCASELETTERPARENTHESIS(\"NumberLowercaseLetterParenthesis\"),\n-        NUMBERLOWERCASELETTERDOT(\"NumberLowercaseLetterDot\"),\n-        NUMBERLOWERCASEROMANDOT(\"NumberLowercaseRomanDot\"),\n-        OUTLINENUMBERS(\"OutlineNumbers\"),\n-        OUTLINELEGAL(\"OutlineLegal\"),\n-        OUTLINEBULLETS(\"OutlineBullets\"),\n-        OUTLINEHEADINGSARTICLESECTION(\"OutlineHeadingsArticleSection\"),\n-        OUTLINEHEADINGSLEGAL(\"OutlineHeadingsLegal\"),\n-        OUTLINEHEADINGSNUMBERS(\"OutlineHeadingsNumbers\"),\n-        OUTLINEHEADINGSCHAPTER(\"OutlineHeadingsChapter\");\n-\n-        private String value;\n-\n-        TemplateEnum(String value) {\n-            this.value = value;\n-        }\n+    BULLETDEFAULT(\"BulletDefault\"),\n+\n+    BULLETDISK(\"BulletDisk\"),\n+\n+    BULLETCIRCLE(\"BulletCircle\"),\n+\n+    BULLETSQUARE(\"BulletSquare\"),\n+\n+    BULLETDIAMONDS(\"BulletDiamonds\"),\n+\n+    BULLETARROWHEAD(\"BulletArrowHead\"),\n+\n+    BULLETTICK(\"BulletTick\"),\n+\n+    NUMBERDEFAULT(\"NumberDefault\"),\n+\n+    NUMBERARABICDOT(\"NumberArabicDot\"),\n+\n+    NUMBERARABICPARENTHESIS(\"NumberArabicParenthesis\"),\n+\n+    NUMBERUPPERCASEROMANDOT(\"NumberUppercaseRomanDot\"),\n+\n+    NUMBERUPPERCASELETTERDOT(\"NumberUppercaseLetterDot\"),\n \n-        public String getValue() {\n-            return value;\n+    NUMBERLOWERCASELETTERPARENTHESIS(\"NumberLowercaseLetterParenthesis\"),\n+\n+    NUMBERLOWERCASELETTERDOT(\"NumberLowercaseLetterDot\"),\n+\n+    NUMBERLOWERCASEROMANDOT(\"NumberLowercaseRomanDot\"),\n+\n+    OUTLINENUMBERS(\"OutlineNumbers\"),\n+\n+    OUTLINELEGAL(\"OutlineLegal\"),\n+\n+    OUTLINEBULLETS(\"OutlineBullets\"),\n+\n+    OUTLINEHEADINGSARTICLESECTION(\"OutlineHeadingsArticleSection\"),\n+\n+    OUTLINEHEADINGSLEGAL(\"OutlineHeadingsLegal\"),\n+\n+    OUTLINEHEADINGSNUMBERS(\"OutlineHeadingsNumbers\"),\n+\n+    OUTLINEHEADINGSCHAPTER(\"OutlineHeadingsChapter\");\n+\n+    private String value;\n+\n+    TemplateEnum(String value) {\n+        this.value = value;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+                                 return String.valueOf(value);\n+    }\n+\n+    public static TemplateEnum fromValue(String text) {\n+        for (TemplateEnum b : TemplateEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+                                                         return b;\n         }\n+        }\n+        return null;\n+    }\n \n+    public static class Adapter extends TypeAdapter<TemplateEnum> {\n         @Override\n-        public String toString() {\n-            return String.valueOf(value);\n+        public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {\n+            jsonWriter.value(enumeration.getValue());\n         }\n \n-        public static TemplateEnum fromValue(String text) {\n-            for (TemplateEnum b : TemplateEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n \n-        public static class Adapter extends TypeAdapter< TemplateEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public TemplateEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return TemplateEnum.fromValue(String.valueOf(value));\n-            }\n+        @Override\n+        public TemplateEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return TemplateEnum.fromValue(String.valueOf(value));\n         }\n     }\n+    }\n+\n \n     @SerializedName(\"Template\")\n     private TemplateEnum template = null;\n+\n     public ListInsert template(TemplateEnum template) {\n-        this.template = template;\n-        return this;\n+    this.template = template;\n+    return this;\n     }\n \n     /**\n      * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\n     * @return template\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.\")\n     public TemplateEnum getTemplate() {\n-        return template;\n+    return template;\n     }\n \n+\n     public void setTemplate(TemplateEnum template) {\n-        this.template = template;\n+    this.template = template;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    ListInsert listInsert = (ListInsert)o;\n-    return\n-        Objects.equals(this.template, listInsert.template);\n-  }\n \n-  @Override\n-  public int hashCode() {\n+        ListInsert listInsert = (ListInsert) o;\n+        return Objects.equals(this.template, listInsert.template);\n+    }\n+\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(template);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class ListInsert {\\n\");\n     sb.append(\"    template: \").append(toIndentedString(template)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 132
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/46/ListInsert.java\nindex 584c3c7bba..ac53080464 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/46/ListInsert.java\n@@ -141,7 +141,7 @@ public class ListInsert {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListInsert listInsert = (ListInsert)o;\n+    ListInsert listInsert = (ListInsert) o;\n     return\n         Objects.equals(this.template, listInsert.template);\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/46/ListInsert.java\nindex 584c3c7bba..8a300ea4b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/46/ListInsert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/46/ListInsert.java\n@@ -141,7 +141,8 @@ public class ListInsert {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListInsert listInsert = (ListInsert)o;\n+    ListInsert listInsert = (ListInsert\n+) o;\n     return\n         Objects.equals(this.template, listInsert.template);\n   }\n",
            "diff_size": 2
        }
    ]
}