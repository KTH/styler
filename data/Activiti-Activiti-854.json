{
    "error_id": "854",
    "information": {
        "errors": [
            {
                "line": "70",
                "severity": "error",
                "message": "'METHOD_DEF' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(activityId,\n                            configuration,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/854/StartMessageSubscriptionImpl.java\nindex 55f1fce0c5..7484d42e8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/854/StartMessageSubscriptionImpl.java\n@@ -22,7 +22,7 @@ import java.util.Objects;\n import org.activiti.api.process.model.StartMessageSubscription;\n \n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n     private String eventName;\n     private String processDefinitionId;\n@@ -41,32 +41,31 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n+\n     public String getId() {\n         return id;\n     }\n-    \n+\n     public String getEventName() {\n         return eventName;\n     }\n-    \n+\n     public String getProcessDefinitionId() {\n         return processDefinitionId;\n     }\n-    \n+\n     public String getConfiguration() {\n         return configuration;\n     }\n-    \n+\n     public String getActivityId() {\n         return activityId;\n     }\n-    \n+\n     public Date getCreated() {\n         return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n@@ -89,11 +88,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return false;\n         }\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n+        return Objects.equals(activityId, other.activityId) &&\n+                Objects.equals(configuration, other.configuration) &&\n+                Objects.equals(created, other.created) &&\n+                Objects.equals(eventName, other.eventName) &&\n+                Objects.equals(id, other.id) &&\n                 Objects.equals(processDefinitionId, other.processDefinitionId);\n     }\n \n@@ -123,7 +122,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     public static Builder builder() {\n         return new Builder();\n     }\n-    \n+\n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl} and initialize it with the given object.\n      * @param startMessageSubscriptionImpl to initialize the builder with\n",
            "diff_size": 14
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/854/StartMessageSubscriptionImpl.java\nindex 55f1fce0c5..7bd21d9bca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/854/StartMessageSubscriptionImpl.java\n@@ -22,7 +22,7 @@ import java.util.Objects;\n import org.activiti.api.process.model.StartMessageSubscription;\n \n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n     private String eventName;\n     private String processDefinitionId;\n@@ -41,27 +41,27 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n+\n     public String getId() {\n         return id;\n     }\n-    \n+\n     public String getEventName() {\n         return eventName;\n     }\n-    \n+\n     public String getProcessDefinitionId() {\n         return processDefinitionId;\n     }\n-    \n+\n     public String getConfiguration() {\n         return configuration;\n     }\n-    \n+\n     public String getActivityId() {\n         return activityId;\n     }\n-    \n+\n     public Date getCreated() {\n         return created;\n     }\n@@ -70,11 +70,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n-                            configuration,\n-                            created,\n-                            eventName,\n-                            id,\n-                            processDefinitionId);\n+                configuration,\n+                created,\n+                eventName,\n+                id,\n+                processDefinitionId);\n     }\n \n     @Override\n@@ -89,11 +89,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return false;\n         }\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n+        return Objects.equals(activityId, other.activityId) &&\n+                Objects.equals(configuration, other.configuration) &&\n+                Objects.equals(created, other.created) &&\n+                Objects.equals(eventName, other.eventName) &&\n+                Objects.equals(id, other.id) &&\n                 Objects.equals(processDefinitionId, other.processDefinitionId);\n     }\n \n@@ -118,14 +118,16 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl}.\n+     *\n      * @return created builder\n      */\n     public static Builder builder() {\n         return new Builder();\n     }\n-    \n+\n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl} and initialize it with the given object.\n+     *\n      * @param startMessageSubscriptionImpl to initialize the builder with\n      * @return created builder\n      */\n@@ -158,69 +160,76 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         }\n \n         /**\n-        * Builder method for id parameter.\n-        * @param id field to set\n-        * @return builder\n-        */\n+         * Builder method for id parameter.\n+         *\n+         * @param id field to set\n+         * @return builder\n+         */\n         public Builder withId(String id) {\n             this.id = id;\n             return this;\n         }\n \n         /**\n-        * Builder method for eventName parameter.\n-        * @param eventName field to set\n-        * @return builder\n-        */\n+         * Builder method for eventName parameter.\n+         *\n+         * @param eventName field to set\n+         * @return builder\n+         */\n         public Builder withEventName(String eventName) {\n             this.eventName = eventName;\n             return this;\n         }\n \n         /**\n-        * Builder method for processDefinitionId parameter.\n-        * @param processDefinitionId field to set\n-        * @return builder\n-        */\n+         * Builder method for processDefinitionId parameter.\n+         *\n+         * @param processDefinitionId field to set\n+         * @return builder\n+         */\n         public Builder withProcessDefinitionId(String processDefinitionId) {\n             this.processDefinitionId = processDefinitionId;\n             return this;\n         }\n \n         /**\n-        * Builder method for configuration parameter.\n-        * @param configuration field to set\n-        * @return builder\n-        */\n+         * Builder method for configuration parameter.\n+         *\n+         * @param configuration field to set\n+         * @return builder\n+         */\n         public Builder withConfiguration(String configuration) {\n             this.configuration = configuration;\n             return this;\n         }\n \n         /**\n-        * Builder method for activityId parameter.\n-        * @param activityId field to set\n-        * @return builder\n-        */\n+         * Builder method for activityId parameter.\n+         *\n+         * @param activityId field to set\n+         * @return builder\n+         */\n         public Builder withActivityId(String activityId) {\n             this.activityId = activityId;\n             return this;\n         }\n \n         /**\n-        * Builder method for created parameter.\n-        * @param created field to set\n-        * @return builder\n-        */\n+         * Builder method for created parameter.\n+         *\n+         * @param created field to set\n+         * @return builder\n+         */\n         public Builder withCreated(Date created) {\n             this.created = created;\n             return this;\n         }\n \n         /**\n-        * Builder method of the builder.\n-        * @return built class\n-        */\n+         * Builder method of the builder.\n+         *\n+         * @return built class\n+         */\n         public StartMessageSubscriptionImpl build() {\n             return new StartMessageSubscriptionImpl(this);\n         }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 130.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/854/StartMessageSubscriptionImpl.java\nindex 55f1fce0c5..eb1df47e49 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/854/StartMessageSubscriptionImpl.java\n@@ -22,9 +22,9 @@ import java.util.Objects;\n import org.activiti.api.process.model.StartMessageSubscription;\n \n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n-    private String eventName;\n+private String eventName;\n     private String processDefinitionId;\n     private String configuration;\n     private String activityId;\n@@ -41,8 +41,8 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n-    public String getId() {\n+\n+public String getId() {\n         return id;\n     }\n     \n@@ -66,11 +66,10 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         return created;\n     }\n \n-\n-    @Override\n+@Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n-                            configuration,\n+configuration,\n                             created,\n                             eventName,\n                             id,\n@@ -89,8 +88,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return false;\n         }\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n+        return Objects.equals(activityId, other.activityId) && Objects.equals(configuration, other.configuration) && \n                 Objects.equals(created, other.created) && \n                 Objects.equals(eventName, other.eventName) && \n                 Objects.equals(id, other.id) && \n@@ -129,7 +127,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n      * @param startMessageSubscriptionImpl to initialize the builder with\n      * @return created builder\n      */\n-    public static Builder builderFrom(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n+public static Builder builderFrom(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n         return new Builder(startMessageSubscriptionImpl);\n     }\n \n@@ -165,7 +163,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         public Builder withId(String id) {\n             this.id = id;\n             return this;\n-        }\n+  }\n \n         /**\n         * Builder method for eventName parameter.\n@@ -175,7 +173,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         public Builder withEventName(String eventName) {\n             this.eventName = eventName;\n             return this;\n-        }\n+  }\n \n         /**\n         * Builder method for processDefinitionId parameter.\n@@ -185,7 +183,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         public Builder withProcessDefinitionId(String processDefinitionId) {\n             this.processDefinitionId = processDefinitionId;\n             return this;\n-        }\n+  }\n \n         /**\n         * Builder method for configuration parameter.\n@@ -195,7 +193,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         public Builder withConfiguration(String configuration) {\n             this.configuration = configuration;\n             return this;\n-        }\n+  }\n \n         /**\n         * Builder method for activityId parameter.\n@@ -205,7 +203,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         public Builder withActivityId(String activityId) {\n             this.activityId = activityId;\n             return this;\n-        }\n+  }\n \n         /**\n         * Builder method for created parameter.\n@@ -215,7 +213,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         public Builder withCreated(Date created) {\n             this.created = created;\n             return this;\n-        }\n+  }\n \n         /**\n         * Builder method of the builder.\n@@ -225,4 +223,4 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return new StartMessageSubscriptionImpl(this);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 272).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 279).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 311).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 165.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 176.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 187.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 198.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 209.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 220.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 230.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/854/StartMessageSubscriptionImpl.java\nindex 55f1fce0c5..cc6e1fcd2c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/854/StartMessageSubscriptionImpl.java\n@@ -18,55 +18,59 @@ package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n import java.util.Objects;\n-\n import org.activiti.api.process.model.StartMessageSubscription;\n \n+\n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n+\n     private String eventName;\n+\n     private String processDefinitionId;\n+\n     private String configuration;\n+\n     private String activityId;\n+\n     private Date created;\n \n     private StartMessageSubscriptionImpl(Builder builder) {\n-        this.id = builder.id;\n-        this.eventName = builder.eventName;\n-        this.processDefinitionId = builder.processDefinitionId;\n-        this.configuration = builder.configuration;\n-        this.activityId = builder.activityId;\n-        this.created = builder.created;\n+    this.id = builder.id;\n+    this.eventName = builder.eventName;\n+    this.processDefinitionId = builder.processDefinitionId;\n+    this.configuration = builder.configuration;\n+    this.activityId = builder.activityId;\n+    this.created = builder.created;\n     }\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n+\n     public String getId() {\n-        return id;\n+    return id;\n     }\n-    \n+\n     public String getEventName() {\n-        return eventName;\n+    return eventName;\n     }\n-    \n+\n     public String getProcessDefinitionId() {\n-        return processDefinitionId;\n+    return processDefinitionId;\n     }\n-    \n+\n     public String getConfiguration() {\n-        return configuration;\n+    return configuration;\n     }\n-    \n+\n     public String getActivityId() {\n-        return activityId;\n+    return activityId;\n     }\n-    \n+\n     public Date getCreated() {\n-        return created;\n+    return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n@@ -80,46 +84,34 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     @Override\n     public boolean equals(Object obj) {\n         if (this == obj) {\n-            return true;\n+        return true;\n         }\n+\n         if (obj == null) {\n-            return false;\n+        return false;\n         }\n+\n         if (getClass() != obj.getClass()) {\n-            return false;\n+        return false;\n         }\n+\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n-                Objects.equals(processDefinitionId, other.processDefinitionId);\n+        return Objects.equals(activityId, other.activityId) && Objects.equals(configuration, other.configuration) && Objects.equals(created, other.created) && Objects.equals(eventName, other.eventName) && Objects.equals(id, other.id) && Objects.equals(processDefinitionId,\n+                                                                                                                                                                                                                                                            other.processDefinitionId);\n     }\n \n     @Override\n     public String toString() {\n-        StringBuilder builder2 = new StringBuilder();\n-        builder2.append(\"MessageEventSubscriptionImpl [id=\")\n-                .append(id)\n-                .append(\", eventName=\")\n-                .append(eventName)\n-                .append(\", processDefinitionId=\")\n-                .append(processDefinitionId)\n-                .append(\", configuration=\")\n-                .append(configuration)\n-                .append(\", activityId=\")\n-                .append(activityId)\n-                .append(\", created=\")\n-                .append(created)\n-                .append(\"]\");\n-        return builder2.toString();\n+    StringBuilder builder2 = new StringBuilder();\n+    builder2.append(\"MessageEventSubscriptionImpl [id=\").append(id).append(\", eventName=\").append(eventName).append(\", processDefinitionId=\").append(processDefinitionId).append(\", configuration=\").append(configuration).append(\", activityId=\").append(activityId).append(\", created=\").append(created).append(\"]\");\n+    return builder2.toString();\n     }\n \n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl}.\n      * @return created builder\n      */\n+\n     public static Builder builder() {\n         return new Builder();\n     }\n@@ -129,6 +121,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n      * @param startMessageSubscriptionImpl to initialize the builder with\n      * @return created builder\n      */\n+\n     public static Builder builderFrom(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n         return new Builder(startMessageSubscriptionImpl);\n     }\n@@ -136,93 +129,108 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     /**\n      * Builder to build {@link StartMessageSubscriptionImpl}.\n      */\n+\n     public static final class Builder {\n \n-        private String id;\n-        private String eventName;\n-        private String processDefinitionId;\n-        private String configuration;\n-        private String activityId;\n-        private Date created;\n+    private String id;\n \n-        public Builder() {\n-        }\n+    private String eventName;\n \n-        private Builder(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n-            this.id = startMessageSubscriptionImpl.id;\n-            this.eventName = startMessageSubscriptionImpl.eventName;\n-            this.processDefinitionId = startMessageSubscriptionImpl.processDefinitionId;\n-            this.configuration = startMessageSubscriptionImpl.configuration;\n-            this.activityId = startMessageSubscriptionImpl.activityId;\n-            this.created = startMessageSubscriptionImpl.created;\n-        }\n+    private String processDefinitionId;\n+\n+    private String configuration;\n+\n+    private String activityId;\n+\n+    private Date created;\n+\n+    public Builder() {\n+    }\n+\n+    private Builder(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n+        this.id = startMessageSubscriptionImpl.id;\n+        this.eventName = startMessageSubscriptionImpl.eventName;\n+        this.processDefinitionId = startMessageSubscriptionImpl.processDefinitionId;\n+        this.configuration = startMessageSubscriptionImpl.configuration;\n+        this.activityId = startMessageSubscriptionImpl.activityId;\n+        this.created = startMessageSubscriptionImpl.created;\n+    }\n \n         /**\n         * Builder method for id parameter.\n         * @param id field to set\n         * @return builder\n         */\n-        public Builder withId(String id) {\n-            this.id = id;\n-            return this;\n-        }\n+\n+    public Builder withId(String id) {\n+        this.id = id;\n+        return this;\n+    }\n \n         /**\n         * Builder method for eventName parameter.\n         * @param eventName field to set\n         * @return builder\n         */\n-        public Builder withEventName(String eventName) {\n-            this.eventName = eventName;\n-            return this;\n-        }\n+\n+    public Builder withEventName(String eventName) {\n+        this.eventName = eventName;\n+        return this;\n+    }\n \n         /**\n         * Builder method for processDefinitionId parameter.\n         * @param processDefinitionId field to set\n         * @return builder\n         */\n-        public Builder withProcessDefinitionId(String processDefinitionId) {\n-            this.processDefinitionId = processDefinitionId;\n-            return this;\n-        }\n+\n+    public Builder withProcessDefinitionId(String processDefinitionId) {\n+        this.processDefinitionId = processDefinitionId;\n+        return this;\n+    }\n \n         /**\n         * Builder method for configuration parameter.\n         * @param configuration field to set\n         * @return builder\n         */\n-        public Builder withConfiguration(String configuration) {\n-            this.configuration = configuration;\n-            return this;\n-        }\n+\n+    public Builder withConfiguration(String configuration) {\n+        this.configuration = configuration;\n+        return this;\n+    }\n \n         /**\n         * Builder method for activityId parameter.\n         * @param activityId field to set\n         * @return builder\n         */\n-        public Builder withActivityId(String activityId) {\n-            this.activityId = activityId;\n-            return this;\n-        }\n+\n+    public Builder withActivityId(String activityId) {\n+        this.activityId = activityId;\n+        return this;\n+    }\n \n         /**\n         * Builder method for created parameter.\n         * @param created field to set\n         * @return builder\n         */\n-        public Builder withCreated(Date created) {\n-            this.created = created;\n-            return this;\n-        }\n+\n+    public Builder withCreated(Date created) {\n+        this.created = created;\n+        return this;\n+    }\n \n         /**\n         * Builder method of the builder.\n         * @return built class\n         */\n-        public StartMessageSubscriptionImpl build() {\n-            return new StartMessageSubscriptionImpl(this);\n-        }\n+\n+    public StartMessageSubscriptionImpl build() {\n+        return new StartMessageSubscriptionImpl(this);\n+    }\n+\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 121
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/854/StartMessageSubscriptionImpl.java\nindex 55f1fce0c5..7484d42e8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/854/StartMessageSubscriptionImpl.java\n@@ -22,7 +22,7 @@ import java.util.Objects;\n import org.activiti.api.process.model.StartMessageSubscription;\n \n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n     private String eventName;\n     private String processDefinitionId;\n@@ -41,32 +41,31 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n+\n     public String getId() {\n         return id;\n     }\n-    \n+\n     public String getEventName() {\n         return eventName;\n     }\n-    \n+\n     public String getProcessDefinitionId() {\n         return processDefinitionId;\n     }\n-    \n+\n     public String getConfiguration() {\n         return configuration;\n     }\n-    \n+\n     public String getActivityId() {\n         return activityId;\n     }\n-    \n+\n     public Date getCreated() {\n         return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n@@ -89,11 +88,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return false;\n         }\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n+        return Objects.equals(activityId, other.activityId) &&\n+                Objects.equals(configuration, other.configuration) &&\n+                Objects.equals(created, other.created) &&\n+                Objects.equals(eventName, other.eventName) &&\n+                Objects.equals(id, other.id) &&\n                 Objects.equals(processDefinitionId, other.processDefinitionId);\n     }\n \n@@ -123,7 +122,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     public static Builder builder() {\n         return new Builder();\n     }\n-    \n+\n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl} and initialize it with the given object.\n      * @param startMessageSubscriptionImpl to initialize the builder with\n",
            "diff_size": 14
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/854/StartMessageSubscriptionImpl.java\nindex 55f1fce0c5..7484d42e8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/854/StartMessageSubscriptionImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/854/StartMessageSubscriptionImpl.java\n@@ -22,7 +22,7 @@ import java.util.Objects;\n import org.activiti.api.process.model.StartMessageSubscription;\n \n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n     private String eventName;\n     private String processDefinitionId;\n@@ -41,32 +41,31 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n+\n     public String getId() {\n         return id;\n     }\n-    \n+\n     public String getEventName() {\n         return eventName;\n     }\n-    \n+\n     public String getProcessDefinitionId() {\n         return processDefinitionId;\n     }\n-    \n+\n     public String getConfiguration() {\n         return configuration;\n     }\n-    \n+\n     public String getActivityId() {\n         return activityId;\n     }\n-    \n+\n     public Date getCreated() {\n         return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n@@ -89,11 +88,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return false;\n         }\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n+        return Objects.equals(activityId, other.activityId) &&\n+                Objects.equals(configuration, other.configuration) &&\n+                Objects.equals(created, other.created) &&\n+                Objects.equals(eventName, other.eventName) &&\n+                Objects.equals(id, other.id) &&\n                 Objects.equals(processDefinitionId, other.processDefinitionId);\n     }\n \n@@ -123,7 +122,7 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     public static Builder builder() {\n         return new Builder();\n     }\n-    \n+\n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl} and initialize it with the given object.\n      * @param startMessageSubscriptionImpl to initialize the builder with\n",
            "diff_size": 14
        }
    ]
}