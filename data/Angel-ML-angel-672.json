{
    "error_id": "672",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/672/TNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/672/TNode.java\nindex 4fabd2c116..368103caf9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/672/TNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/672/TNode.java\n@@ -13,6 +13,7 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.algorithm.tree;\n \n /**\n@@ -21,73 +22,73 @@ package com.tencent.angel.ml.algorithm.tree;\n \n public class TNode {\n \n-  public int nid; // node id in the tree\n-  public int parent; // node id of parent in the tree, start with 0\n-  public int leftChild; // node id of left child in the tree\n-  public int rightChild; // node id of right child in the tree\n-  private boolean isLeaf;\n-  private float leafValue;\n-\n-  public TNode(int nid, int parent, int left, int right) {\n-    this.parent = parent;\n-    this.leftChild = left;\n-    this.rightChild = right;\n-    this.isLeaf = false;\n-  }\n-\n-  public TNode(int nid) {\n-    new TNode(nid, -1, -1, -1);\n-  }\n-\n-  public TNode() {\n-    new TNode(-1);\n-  }\n-\n-  public boolean isLeaf() {\n-    return isLeaf;\n-  }\n-\n-  public void chgToLeaf() {\n-    this.isLeaf = true;\n-  }\n-\n-  public int getParent() {\n-    return parent;\n-  }\n-\n-  public void setParent(int parent) {\n-    this.parent = parent;\n-  }\n-\n-  public int getLeftChild() {\n-    return leftChild;\n-  }\n-\n-  public void setLeftChild(int leftChild) {\n-    this.leftChild = leftChild;\n-  }\n-\n-  public int getRightChild() {\n-    return rightChild;\n-  }\n-\n-  public void setRightChild(int rightChild) {\n-    this.rightChild = rightChild;\n-  }\n-\n-  public float getLeafValue() {\n-    return leafValue;\n-  }\n-\n-  public void setLeafValue(float leafValue) {\n-    this.leafValue = leafValue;\n-  }\n-\n-  public int getNid() {\n-    return nid;\n-  }\n-\n-  public void setNid(int nid) {\n-    this.nid = nid;\n-  }\n+    public int nid; // node id in the tree\n+    public int parent; // node id of parent in the tree, start with 0\n+    public int leftChild; // node id of left child in the tree\n+    public int rightChild; // node id of right child in the tree\n+    private boolean isLeaf;\n+    private float leafValue;\n+\n+    public TNode(int nid, int parent, int left, int right) {\n+        this.parent = parent;\n+        this.leftChild = left;\n+        this.rightChild = right;\n+        this.isLeaf = false;\n+    }\n+\n+    public TNode(int nid) {\n+        new TNode(nid, -1, -1, -1);\n+    }\n+\n+    public TNode() {\n+        new TNode(-1);\n+    }\n+\n+    public boolean isLeaf() {\n+        return isLeaf;\n+    }\n+\n+    public void chgToLeaf() {\n+        this.isLeaf = true;\n+    }\n+\n+    public int getParent() {\n+        return parent;\n+    }\n+\n+    public void setParent(int parent) {\n+        this.parent = parent;\n+    }\n+\n+    public int getLeftChild() {\n+        return leftChild;\n+    }\n+\n+    public void setLeftChild(int leftChild) {\n+        this.leftChild = leftChild;\n+    }\n+\n+    public int getRightChild() {\n+        return rightChild;\n+    }\n+\n+    public void setRightChild(int rightChild) {\n+        this.rightChild = rightChild;\n+    }\n+\n+    public float getLeafValue() {\n+        return leafValue;\n+    }\n+\n+    public void setLeafValue(float leafValue) {\n+        this.leafValue = leafValue;\n+    }\n+\n+    public int getNid() {\n+        return nid;\n+    }\n+\n+    public void setNid(int nid) {\n+        this.nid = nid;\n+    }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/672/TNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/672/TNode.java\nindex 4fabd2c116..8dd4168a7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/672/TNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/672/TNode.java\n@@ -90,4 +90,4 @@ public class TNode {\n   public void setNid(int nid) {\n     this.nid = nid;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/672/TNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/672/TNode.java\nindex 4fabd2c116..c6c3b885aa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/672/TNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/672/TNode.java\n@@ -19,75 +19,80 @@ package com.tencent.angel.ml.algorithm.tree;\n  * Description: Basic Tree node\n  */\n \n+\n public class TNode {\n \n-  public int nid; // node id in the tree\n-  public int parent; // node id of parent in the tree, start with 0\n-  public int leftChild; // node id of left child in the tree\n-  public int rightChild; // node id of right child in the tree\n-  private boolean isLeaf;\n-  private float leafValue;\n+    public int nid; // node id in the tree\n+\n+    public int parent; // node id of parent in the tree, start with 0\n+\n+    public int leftChild; // node id of left child in the tree\n \n-  public TNode(int nid, int parent, int left, int right) {\n+    public int rightChild; // node id of right child in the tree\n+    private boolean isLeaf;\n+    private float leafValue;\n+\n+    public TNode(int nid, int parent, int left, int right) {\n     this.parent = parent;\n     this.leftChild = left;\n     this.rightChild = right;\n     this.isLeaf = false;\n-  }\n+    }\n \n-  public TNode(int nid) {\n+    public TNode(int nid) {\n     new TNode(nid, -1, -1, -1);\n-  }\n+    }\n \n-  public TNode() {\n+    public TNode() {\n     new TNode(-1);\n-  }\n+    }\n \n-  public boolean isLeaf() {\n+    public boolean isLeaf() {\n     return isLeaf;\n-  }\n+    }\n \n-  public void chgToLeaf() {\n+    public void chgToLeaf() {\n     this.isLeaf = true;\n-  }\n+    }\n \n-  public int getParent() {\n+    public int getParent() {\n     return parent;\n-  }\n+    }\n \n-  public void setParent(int parent) {\n+    public void setParent(int parent) {\n     this.parent = parent;\n-  }\n+    }\n \n-  public int getLeftChild() {\n+    public int getLeftChild() {\n     return leftChild;\n-  }\n+    }\n \n-  public void setLeftChild(int leftChild) {\n+    public void setLeftChild(int leftChild) {\n     this.leftChild = leftChild;\n-  }\n+    }\n \n-  public int getRightChild() {\n+    public int getRightChild() {\n     return rightChild;\n-  }\n+    }\n \n-  public void setRightChild(int rightChild) {\n+    public void setRightChild(int rightChild) {\n     this.rightChild = rightChild;\n-  }\n+    }\n \n-  public float getLeafValue() {\n+    public float getLeafValue() {\n     return leafValue;\n-  }\n+    }\n \n-  public void setLeafValue(float leafValue) {\n+    public void setLeafValue(float leafValue) {\n     this.leafValue = leafValue;\n-  }\n+    }\n \n-  public int getNid() {\n+    public int getNid() {\n     return nid;\n-  }\n+    }\n \n-  public void setNid(int nid) {\n+    public void setNid(int nid) {\n     this.nid = nid;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}