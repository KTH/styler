{
    "error_id": "92",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "34",
                "severity": "error",
                "message": "'}' at column 34 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class UInt64Conversions {\n\n    private UInt64Conversions() {}\n\n    @Nonnull\n    static Boolean uInt64ToBoolean(@Nonnull ULong ul) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/92/UInt64Conversions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/92/UInt64Conversions.java\nindex 6e6ee0d1e8..f899655152 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/92/UInt64Conversions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/92/UInt64Conversions.java\n@@ -26,7 +26,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt64Conversions {\n \n-    private UInt64Conversions() {}\n+    private UInt64Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean uInt64ToBoolean(@Nonnull ULong ul) {\n@@ -161,16 +162,26 @@ final class UInt64Conversions {\n     static Object explicitConversion(@Nonnull ULong ul, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:       return uInt64ToBoolean(ul);\n-            case Byte:          return uInt64ToByte(ul);\n-            case Int16:         return uInt64ToInt16(ul);\n-            case Int32:         return uInt64ToInt32(ul);\n-            case SByte:         return uInt64ToSByte(ul);\n-            case StatusCode:    return uInt64ToStatusCode(ul);\n-            case String:        return uInt64ToString(ul);\n-            case UInt16:        return uInt64ToUInt16(ul);\n-            case UInt32:        return uInt64ToUInt32(ul);\n-            default:            return implicitConversion(ul, targetType);\n+            case Boolean:\n+                return uInt64ToBoolean(ul);\n+            case Byte:\n+                return uInt64ToByte(ul);\n+            case Int16:\n+                return uInt64ToInt16(ul);\n+            case Int32:\n+                return uInt64ToInt32(ul);\n+            case SByte:\n+                return uInt64ToSByte(ul);\n+            case StatusCode:\n+                return uInt64ToStatusCode(ul);\n+            case String:\n+                return uInt64ToString(ul);\n+            case UInt16:\n+                return uInt64ToUInt16(ul);\n+            case UInt32:\n+                return uInt64ToUInt32(ul);\n+            default:\n+                return implicitConversion(ul, targetType);\n         }\n         //@formatter:on\n     }\n@@ -179,10 +190,14 @@ final class UInt64Conversions {\n     static Object implicitConversion(@Nonnull ULong ul, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:        return uInt64ToDouble(ul);\n-            case Float:         return uInt64ToFloat(ul);\n-            case Int64:         return uInt64ToInt64(ul);\n-            default:            return null;\n+            case Double:\n+                return uInt64ToDouble(ul);\n+            case Float:\n+                return uInt64ToFloat(ul);\n+            case Int64:\n+                return uInt64ToInt64(ul);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/92/UInt64Conversions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/92/UInt64Conversions.java\nindex 6e6ee0d1e8..27a7a2aa8e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/92/UInt64Conversions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/92/UInt64Conversions.java\n@@ -163,9 +163,12 @@ final class UInt64Conversions {\n         switch (targetType) {\n             case Boolean:       return uInt64ToBoolean(ul);\n             case Byte:          return uInt64ToByte(ul);\n-            case Int16:         return uInt64ToInt16(ul);\n-            case Int32:         return uInt64ToInt32(ul);\n-            case SByte:         return uInt64ToSByte(ul);\n+            case Int16:\n+    return uInt64ToInt16(ul);\n+            case Int32:\n+    return uInt64ToInt32(ul);\n+            case SByte:\n+    return uInt64ToSByte(ul);\n             case StatusCode:    return uInt64ToStatusCode(ul);\n             case String:        return uInt64ToString(ul);\n             case UInt16:        return uInt64ToUInt16(ul);\n@@ -180,11 +183,13 @@ final class UInt64Conversions {\n         //@formatter:off\n         switch (targetType) {\n             case Double:        return uInt64ToDouble(ul);\n-            case Float:         return uInt64ToFloat(ul);\n-            case Int64:         return uInt64ToInt64(ul);\n+            case Float:\n+    return uInt64ToFloat(ul);\n+            case Int64:\n+    return uInt64ToInt64(ul);\n             default:            return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/92/UInt64Conversions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/92/UInt64Conversions.java\nindex 6e6ee0d1e8..d3fa638f45 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/92/UInt64Conversions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/92/UInt64Conversions.java\n@@ -12,7 +12,6 @@ package org.eclipse.milo.opcua.sdk.server.events.conversions;\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.stack.core.BuiltinDataType;\n import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n@@ -26,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt64Conversions {\n \n-    private UInt64Conversions() {}\n+    private UInt64Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean uInt64ToBoolean(@Nonnull ULong ul) {\n@@ -145,13 +145,12 @@ final class UInt64Conversions {\n     }\n \n     @Nullable\n-    static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n+    static Object convert(@Nullable Object o, BuiltinDataType targetType,\n+                          boolean implicit) {\n         if (o instanceof ULong) {\n             ULong ul = (ULong) o;\n \n-            return implicit ?\n-                implicitConversion(ul, targetType) :\n-                explicitConversion(ul, targetType);\n+            return implicit ? implicitConversion(ul, targetType) : explicitConversion(ul, targetType);\n         } else {\n             return null;\n         }\n@@ -161,16 +160,26 @@ final class UInt64Conversions {\n     static Object explicitConversion(@Nonnull ULong ul, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:       return uInt64ToBoolean(ul);\n-            case Byte:          return uInt64ToByte(ul);\n-            case Int16:         return uInt64ToInt16(ul);\n-            case Int32:         return uInt64ToInt32(ul);\n-            case SByte:         return uInt64ToSByte(ul);\n-            case StatusCode:    return uInt64ToStatusCode(ul);\n-            case String:        return uInt64ToString(ul);\n-            case UInt16:        return uInt64ToUInt16(ul);\n-            case UInt32:        return uInt64ToUInt32(ul);\n-            default:            return implicitConversion(ul, targetType);\n+            case Boolean:\n+                return uInt64ToBoolean(ul);\n+            case Byte:\n+                return uInt64ToByte(ul);\n+            case Int16:\n+                return uInt64ToInt16(ul);\n+            case Int32:\n+                return uInt64ToInt32(ul);\n+            case SByte:\n+                return uInt64ToSByte(ul);\n+            case StatusCode:\n+                return uInt64ToStatusCode(ul);\n+            case String:\n+                return uInt64ToString(ul);\n+            case UInt16:\n+                return uInt64ToUInt16(ul);\n+            case UInt32:\n+                return uInt64ToUInt32(ul);\n+            default:\n+                return implicitConversion(ul, targetType);\n         }\n         //@formatter:on\n     }\n@@ -179,12 +188,16 @@ final class UInt64Conversions {\n     static Object implicitConversion(@Nonnull ULong ul, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:        return uInt64ToDouble(ul);\n-            case Float:         return uInt64ToFloat(ul);\n-            case Int64:         return uInt64ToInt64(ul);\n-            default:            return null;\n+            case Double:\n+                return uInt64ToDouble(ul);\n+            case Float:\n+                return uInt64ToFloat(ul);\n+            case Int64:\n+                return uInt64ToInt64(ul);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}