{
    "error_id": "90",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tClass<?> base();\n\t/**\n\t * When true, it indicates that the class uses sub-typing information in its id, which is saved in objects. if so, the class must implement \n\t * {@link SubTyped}. The consumed and produced type ids used by serdes (Jackson) are of the form &lt;TYPE-ID&gt;{@link CPSTypeIdResolver#SEPARATOR_SUB_TYPE}&lt;SUBTYPE-ID&gt;.\n\t */\n\tboolean subTyped() default false;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/90/CPSType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/90/CPSType.java\nindex a5fc2eb920..85250444f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/90/CPSType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/90/CPSType.java\n@@ -10,11 +10,13 @@ import java.lang.annotation.Target;\n @Target(ElementType.TYPE)\n @Repeatable(CPSTypes.class)\n public @interface CPSType {\n-\tString id();\n-\tClass<?> base();\n-\t/**\n-\t * When true, it indicates that the class uses sub-typing information in its id, which is saved in objects. if so, the class must implement \n-\t * {@link SubTyped}. The consumed and produced type ids used by serdes (Jackson) are of the form &lt;TYPE-ID&gt;{@link CPSTypeIdResolver#SEPARATOR_SUB_TYPE}&lt;SUBTYPE-ID&gt;.\n-\t */\n-\tboolean subTyped() default false;\n+    String id();\n+\n+    Class<?> base();\n+\n+    /**\n+     * When true, it indicates that the class uses sub-typing information in its id, which is saved in objects. if so, the class must implement\n+     * {@link SubTyped}. The consumed and produced type ids used by serdes (Jackson) are of the form &lt;TYPE-ID&gt;{@link CPSTypeIdResolver#SEPARATOR_SUB_TYPE}&lt;SUBTYPE-ID&gt;.\n+     */\n+    boolean subTyped() default false;\n }\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/90/CPSType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/90/CPSType.java\nindex a5fc2eb920..92810ae4d7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/90/CPSType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/90/CPSType.java\n@@ -10,11 +10,14 @@ import java.lang.annotation.Target;\n @Target(ElementType.TYPE)\n @Repeatable(CPSTypes.class)\n public @interface CPSType {\n-\tString id();\n-\tClass<?> base();\n-\t/**\n-\t * When true, it indicates that the class uses sub-typing information in its id, which is saved in objects. if so, the class must implement \n-\t * {@link SubTyped}. The consumed and produced type ids used by serdes (Jackson) are of the form &lt;TYPE-ID&gt;{@link CPSTypeIdResolver#SEPARATOR_SUB_TYPE}&lt;SUBTYPE-ID&gt;.\n-\t */\n-\tboolean subTyped() default false;\n+\n+    String id();\n+\n+    Class<?> base();\n+    /**\n+     * When true, it indicates that the class uses sub-typing information in its id, which is saved in objects. if so, the class must implement \n+     * {@link SubTyped}. The consumed and produced type ids used by serdes (Jackson) are of the form &lt;TYPE-ID&gt;{@link CPSTypeIdResolver#SEPARATOR_SUB_TYPE}&lt;SUBTYPE-ID&gt;.\n+     */\n+\n+    boolean subTyped() default false;\n }\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}