{
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "76",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 140).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * @param bucket the the name of the bucket.\n     */\n    public InsertRequest(final String key, final ByteBuf content, final int exp, final int flags, final String bucket, final boolean json) {\n        super(key, bucket, null);\n        this.content = content;\n        this.expiration = exp;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/11/InsertRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/11/InsertRequest.java\nindex 9804aa6410..a122a9d2f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/11/InsertRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/11/InsertRequest.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.core.message.kv;\n \n import io.netty.buffer.ByteBuf;\n@@ -73,7 +74,8 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      * @param flags optional flags.\n      * @param bucket the the name of the bucket.\n      */\n-    public InsertRequest(final String key, final ByteBuf content, final int exp, final int flags, final String bucket, final boolean json) {\n+    public InsertRequest(final String key, final ByteBuf content, final int exp, final int flags, final String bucket,\n+                         final boolean json) {\n         super(key, bucket, null);\n         this.content = content;\n         this.expiration = exp;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/11/InsertRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/11/InsertRequest.java\nindex 9804aa6410..1315ffbc3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/11/InsertRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/11/InsertRequest.java\n@@ -63,8 +63,7 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n         this(key, content, 0, 0, bucket, json);\n     }\n \n-\n-    /**\n+/**\n      * Creates a new {@link InsertRequest}.\n      *\n      * @param key the key of the document.\n@@ -115,4 +114,4 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n     public boolean isJson() {\n         return json;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/11/InsertRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/11/InsertRequest.java\nindex 9804aa6410..e342bd8ab8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/11/InsertRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/11/InsertRequest.java\n@@ -29,11 +29,14 @@ import io.netty.buffer.ByteBuf;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n+\n public class InsertRequest extends AbstractKeyValueRequest implements BinaryStoreRequest {\n \n     /**\n      * The content of the document.\n      */\n+\n     private final ByteBuf content;\n \n     /**\n@@ -45,7 +48,6 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      * The optional flags.\n      */\n     private final int flags;\n-\n     private final boolean json;\n \n     /**\n@@ -55,11 +57,15 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      * @param content the content of the document.\n      * @param bucket the name of the bucket.\n      */\n+\n     public InsertRequest(final String key, final ByteBuf content, final String bucket) {\n         this(key, content, 0, 0, bucket, false);\n     }\n \n-    public InsertRequest(final String key, final ByteBuf content, final String bucket, final boolean json) {\n+    public InsertRequest(\n+        final String key,\n+        final ByteBuf content,\n+        final String bucket, final boolean json) {\n         this(key, content, 0, 0, bucket, json);\n     }\n \n@@ -73,6 +79,7 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      * @param flags optional flags.\n      * @param bucket the the name of the bucket.\n      */\n+\n     public InsertRequest(final String key, final ByteBuf content, final int exp, final int flags, final String bucket, final boolean json) {\n         super(key, bucket, null);\n         this.content = content;\n@@ -82,7 +89,12 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n     }\n \n     public InsertRequest(final String key, final ByteBuf content, final int exp, final int flags, final String bucket) {\n-        this(key, content, exp, flags, bucket, false);\n+        this(key,\n+content,\n+exp,\n+flags,\n+bucket,\n+false);\n     }\n \n     /**\n@@ -90,6 +102,7 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      *\n      * @return the expiration time.\n      */\n+\n     public int expiration() {\n         return expiration;\n     }\n@@ -99,6 +112,7 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      *\n      * @return the flags.\n      */\n+\n     public int flags() {\n         return flags;\n     }\n@@ -108,6 +122,7 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n      *\n      * @return the content.\n      */\n+\n     public ByteBuf content() {\n         return content;\n     }\n@@ -115,4 +130,4 @@ public class InsertRequest extends AbstractKeyValueRequest implements BinaryStor\n     public boolean isJson() {\n         return json;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}