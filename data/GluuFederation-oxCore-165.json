{
    "error_id": "165",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    boolean authenticate(String baseDN, String userName, String password);\n\n\tvoid persist(Object entry);\n\n\t<T> T merge(T entry);\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/165/PersistenceEntryManager.java\nindex 422fa3ab0c..63c1f209d1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/165/PersistenceEntryManager.java\n@@ -35,7 +35,7 @@ public interface PersistenceEntryManager extends EntityManager {\n     boolean authenticate(String bindDn, String password);\n     boolean authenticate(String baseDN, String userName, String password);\n \n-\tvoid persist(Object entry);\n+    void persist(Object entry);\n \n \t<T> T merge(T entry);\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/165/PersistenceEntryManager.java\nindex 422fa3ab0c..e314c112ec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/165/PersistenceEntryManager.java\n@@ -33,18 +33,22 @@ import javax.persistence.Query;\n public interface PersistenceEntryManager extends EntityManager {\n \n     boolean authenticate(String bindDn, String password);\n+\n     boolean authenticate(String baseDN, String userName, String password);\n \n-\tvoid persist(Object entry);\n+    void persist(Object entry);\n \n-\t<T> T merge(T entry);\n+    <T> T merge(T entry);\n \n     <T> boolean contains(String primaryKey, Class<T> entryClass);\n+\n     <T> boolean contains(String primaryKey, Class<T> entryClass, Filter filter);\n \n     <T> int countEntries(Object entry);\n+\n     <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter);\n-    <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter,  SearchScope scope);\n+\n+    <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope);\n \n     <T> List<T> createEntities(Class<T> entryClass, Map<String, List<AttributeData>> entriesAttributes);\n \n@@ -57,14 +61,20 @@ public interface PersistenceEntryManager extends EntityManager {\n      * @return Result entries\n      */\n     <T> List<T> findEntries(Object entry);\n+\n     <T> List<T> findEntries(Object entry, int count);\n \n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, int count);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, int count);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n                             int start, int count, int chunkSize);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n                             BatchOperation<T> batchOperation, int start, int count, int chunkSize);\n \n@@ -72,11 +82,14 @@ public interface PersistenceEntryManager extends EntityManager {\n     <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy,\n                                         SortOrder sortOrder, int start, int count, int chunkSize);\n \n-\tvoid remove(Object entry);\n+    void remove(Object entry);\n+\n     void removeRecursively(String dn);\n+\n     boolean hasBranchesSupport(String dn);\n \n     Date decodeTime(String baseDN, String date);\n+\n     String encodeTime(String baseDN, Date date);\n \n     int getHashCode(Object entry);\n@@ -87,6 +100,7 @@ public interface PersistenceEntryManager extends EntityManager {\n                                               String sumByProperties);\n \n     void addDeleteSubscriber(DeleteNotifier subscriber);\n+\n     void removeDeleteSubscriber(DeleteNotifier subscriber);\n \n     <T> void sortListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String... sortByProperties);\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/165/PersistenceEntryManager.java\nindex 422fa3ab0c..c9847e20dc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/165/PersistenceEntryManager.java\n@@ -35,16 +35,19 @@ public interface PersistenceEntryManager extends EntityManager {\n     boolean authenticate(String bindDn, String password);\n     boolean authenticate(String baseDN, String userName, String password);\n \n-\tvoid persist(Object entry);\n+void persist(Object entry);\n \n \t<T> T merge(T entry);\n \n-    <T> boolean contains(String primaryKey, Class<T> entryClass);\n-    <T> boolean contains(String primaryKey, Class<T> entryClass, Filter filter);\n+<T> boolean contains(String primaryKey, Class<T> entryClass);\n+\n+<T> boolean contains(String primaryKey, Class<T> entryClass, Filter filter);\n \n     <T> int countEntries(Object entry);\n-    <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter);\n-    <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter,  SearchScope scope);\n+\n+<T> int countEntries(String baseDN, Class<T> entryClass, Filter filter);\n+\n+<T> int countEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope);\n \n     <T> List<T> createEntities(Class<T> entryClass, Map<String, List<AttributeData>> entriesAttributes);\n \n@@ -57,23 +60,27 @@ public interface PersistenceEntryManager extends EntityManager {\n      * @return Result entries\n      */\n     <T> List<T> findEntries(Object entry);\n-    <T> List<T> findEntries(Object entry, int count);\n+\n+<T> List<T> findEntries(Object entry, int count);\n \n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, int count);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, int count);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-                            int start, int count, int chunkSize);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-                            BatchOperation<T> batchOperation, int start, int count, int chunkSize);\n-\n-    // TODO: Combine sortBy and SortOrder into Sort\n-    <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy,\n-                                        SortOrder sortOrder, int start, int count, int chunkSize);\n-\n-\tvoid remove(Object entry);\n-    void removeRecursively(String dn);\n+\n+<T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, int count);\n+\n+<T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes);\n+\n+<T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, int count);\n+\n+<T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes, int start, int count, int chunkSize);\n+\n+<T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes, BatchOperation<T> batchOperation, int start, int count, int chunkSize);\n+\n+// TODO: Combine sortBy and SortOrder into Sort\n+    <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, int start, int count, int chunkSize);\n+\n+void remove(Object entry);\n+\n+void removeRecursively(String dn);\n     boolean hasBranchesSupport(String dn);\n \n     Date decodeTime(String baseDN, String date);\n@@ -83,11 +90,11 @@ public interface PersistenceEntryManager extends EntityManager {\n \n     String[] getObjectClasses(Object entry, Class<?> entryClass);\n \n-    <T> Map<T, List<T>> groupListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String groupByProperties,\n-                                              String sumByProperties);\n+    <T> Map<T, List<T>> groupListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String groupByProperties, String sumByProperties);\n+\n+void addDeleteSubscriber(DeleteNotifier subscriber);\n \n-    void addDeleteSubscriber(DeleteNotifier subscriber);\n-    void removeDeleteSubscriber(DeleteNotifier subscriber);\n+void removeDeleteSubscriber(DeleteNotifier subscriber);\n \n     <T> void sortListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String... sortByProperties);\n \n@@ -96,7 +103,6 @@ public interface PersistenceEntryManager extends EntityManager {\n     PersistenceOperationService getOperationService();\n \n     boolean destroy();\n-\n     default void clear() {\n         throw new UnsupportedOperationException(\"Method not implemented.\");\n     }\n@@ -165,4 +171,4 @@ public interface PersistenceEntryManager extends EntityManager {\n         throw new UnsupportedOperationException(\"Method not implemented.\");\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/165/PersistenceEntryManager.java\nindex 422fa3ab0c..ebbd3fa4d7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/165/PersistenceEntryManager.java\n@@ -9,7 +9,6 @@ package org.gluu.persist;\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n-\n import org.gluu.persist.event.DeleteNotifier;\n import org.gluu.persist.model.AttributeData;\n import org.gluu.persist.model.BatchOperation;\n@@ -18,7 +17,6 @@ import org.gluu.persist.model.SearchScope;\n import org.gluu.persist.model.SortOrder;\n import org.gluu.persist.operation.PersistenceOperationService;\n import org.gluu.search.filter.Filter;\n-\n import javax.persistence.EntityManager;\n import javax.persistence.EntityTransaction;\n import javax.persistence.FlushModeType;\n@@ -30,21 +28,27 @@ import javax.persistence.Query;\n  *\n  * @author Yuriy Movchan Date: 01/29/2018\n  */\n+\n+\n public interface PersistenceEntryManager extends EntityManager {\n \n     boolean authenticate(String bindDn, String password);\n+\n     boolean authenticate(String baseDN, String userName, String password);\n \n-\tvoid persist(Object entry);\n+    void persist(Object entry);\n \n-\t<T> T merge(T entry);\n+    <T> T merge(T entry);\n \n     <T> boolean contains(String primaryKey, Class<T> entryClass);\n+\n     <T> boolean contains(String primaryKey, Class<T> entryClass, Filter filter);\n \n     <T> int countEntries(Object entry);\n+\n     <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter);\n-    <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter,  SearchScope scope);\n+\n+    <T> int countEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope);\n \n     <T> List<T> createEntities(Class<T> entryClass, Map<String, List<AttributeData>> entriesAttributes);\n \n@@ -56,37 +60,48 @@ public interface PersistenceEntryManager extends EntityManager {\n      * @param entry Sample\n      * @return Result entries\n      */\n+\n     <T> List<T> findEntries(Object entry);\n+\n     <T> List<T> findEntries(Object entry, int count);\n \n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, int count);\n+\n     <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, int count);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-                            int start, int count, int chunkSize);\n-    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes,\n-                            BatchOperation<T> batchOperation, int start, int count, int chunkSize);\n+\n+    <T> List<T> findEntries(String baseDN,\n+            Class<T> entryClass,\n+            Filter filter,\n+            String[] ldapReturnAttributes, int count);\n+\n+    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes, int start, int count, int chunkSize);\n+\n+    <T> List<T> findEntries(String baseDN, Class<T> entryClass, Filter filter, SearchScope scope, String[] ldapReturnAttributes, BatchOperation<T> batchOperation, int start, int count, int chunkSize);\n \n     // TODO: Combine sortBy and SortOrder into Sort\n-    <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy,\n-                                        SortOrder sortOrder, int start, int count, int chunkSize);\n \n-\tvoid remove(Object entry);\n+    <T> PagedResult<T> findPagedEntries(String baseDN, Class<T> entryClass, Filter filter, String[] ldapReturnAttributes, String sortBy, SortOrder sortOrder, int start, int count, int chunkSize);\n+\n+    void remove(Object entry);\n+\n     void removeRecursively(String dn);\n+\n     boolean hasBranchesSupport(String dn);\n \n     Date decodeTime(String baseDN, String date);\n+\n     String encodeTime(String baseDN, Date date);\n \n     int getHashCode(Object entry);\n \n     String[] getObjectClasses(Object entry, Class<?> entryClass);\n \n-    <T> Map<T, List<T>> groupListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String groupByProperties,\n-                                              String sumByProperties);\n+    <T> Map<T, List<T>> groupListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String groupByProperties, String sumByProperties);\n \n     void addDeleteSubscriber(DeleteNotifier subscriber);\n+\n     void removeDeleteSubscriber(DeleteNotifier subscriber);\n \n     <T> void sortListByProperties(Class<T> entryClass, List<T> entries, boolean caseSensetive, String... sortByProperties);\n@@ -165,4 +180,4 @@ public interface PersistenceEntryManager extends EntityManager {\n         throw new UnsupportedOperationException(\"Method not implemented.\");\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/165/PersistenceEntryManager.java\nindex 422fa3ab0c..63c1f209d1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/165/PersistenceEntryManager.java\n@@ -35,7 +35,7 @@ public interface PersistenceEntryManager extends EntityManager {\n     boolean authenticate(String bindDn, String password);\n     boolean authenticate(String baseDN, String userName, String password);\n \n-\tvoid persist(Object entry);\n+    void persist(Object entry);\n \n \t<T> T merge(T entry);\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/165/PersistenceEntryManager.java\nindex 422fa3ab0c..63c1f209d1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/165/PersistenceEntryManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/165/PersistenceEntryManager.java\n@@ -35,7 +35,7 @@ public interface PersistenceEntryManager extends EntityManager {\n     boolean authenticate(String bindDn, String password);\n     boolean authenticate(String baseDN, String userName, String password);\n \n-\tvoid persist(Object entry);\n+    void persist(Object entry);\n \n \t<T> T merge(T entry);\n \n",
            "diff_size": 1
        }
    ]
}