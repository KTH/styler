{
    "error_id": "755",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.child;\n\nimport javax.xml.stream.XMLStreamReader;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/755/MultiInstanceParser.java\nindex d231c1ba09..2d8b4f1807 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/755/MultiInstanceParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/755/MultiInstanceParser.java\nindex d231c1ba09..e8d3105766 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/755/MultiInstanceParser.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n@@ -34,18 +35,18 @@ public class MultiInstanceParser extends BaseChildElementParser {\n         }\n         MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n         BpmnXMLUtil.addXMLLocation(multiInstanceDef,\n-                                   xtr);\n+                xtr);\n         if (xtr.getAttributeValue(null,\n-                                  ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL) != null) {\n+                ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL) != null) {\n             multiInstanceDef.setSequential(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                                 ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL)));\n+                    ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL)));\n         }\n         multiInstanceDef.setInputDataItem(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n+                ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n         multiInstanceDef.setElementVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                  ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n+                ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n         multiInstanceDef.setElementIndexVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                       ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n+                ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n \n         boolean readyWithMultiInstance = false;\n         try {\n@@ -57,9 +58,9 @@ public class MultiInstanceParser extends BaseChildElementParser {\n                     multiInstanceDef.setInputDataItem(xtr.getElementText());\n                 } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAITEM.equalsIgnoreCase(xtr.getLocalName())) {\n                     if (xtr.getAttributeValue(null,\n-                                              ATTRIBUTE_NAME) != null) {\n+                            ATTRIBUTE_NAME) != null) {\n                         multiInstanceDef.setElementVariable(xtr.getAttributeValue(null,\n-                                                                                  ATTRIBUTE_NAME));\n+                                ATTRIBUTE_NAME));\n                     }\n                 } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CONDITION.equalsIgnoreCase(xtr.getLocalName())) {\n                     multiInstanceDef.setCompletionCondition(xtr.getElementText());\n@@ -69,7 +70,7 @@ public class MultiInstanceParser extends BaseChildElementParser {\n             }\n         } catch (Exception e) {\n             LOGGER.warn(\"Error parsing multi instance definition\",\n-                        e);\n+                    e);\n         }\n         ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n     }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/755/MultiInstanceParser.java\nindex d231c1ba09..843e353ca5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/755/MultiInstanceParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n@@ -29,38 +30,30 @@ public class MultiInstanceParser extends BaseChildElementParser {\n     public void parseChildElement(XMLStreamReader xtr,\n                                   BaseElement parentElement,\n                                   BpmnModel model) throws Exception {\n-        if (!(parentElement instanceof Activity)) {\n+  if (!(parentElement instanceof Activity)) {\n             return;\n         }\n         MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n-        BpmnXMLUtil.addXMLLocation(multiInstanceDef,\n-                                   xtr);\n-        if (xtr.getAttributeValue(null,\n-                                  ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL) != null) {\n-            multiInstanceDef.setSequential(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                                 ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL)));\n-        }\n-        multiInstanceDef.setInputDataItem(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n-        multiInstanceDef.setElementVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                  ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n-        multiInstanceDef.setElementIndexVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                       ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n+        BpmnXMLUtil.addXMLLocation(multiInstanceDef, xtr);\n+if (xtr.getAttributeValue(null, ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL) != null) {\n+  multiInstanceDef.setSequential(Boolean.valueOf(xtr.getAttributeValue(null, ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL)));\n+  }\n+        multiInstanceDef.setInputDataItem(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE, ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n+multiInstanceDef.setElementVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE, ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n+multiInstanceDef.setElementIndexVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE, ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n \n-        boolean readyWithMultiInstance = false;\n+boolean readyWithMultiInstance = false;\n         try {\n-            while (!readyWithMultiInstance && xtr.hasNext()) {\n+  while (!readyWithMultiInstance && xtr.hasNext()) {\n                 xtr.next();\n                 if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CARDINALITY.equalsIgnoreCase(xtr.getLocalName())) {\n                     multiInstanceDef.setLoopCardinality(xtr.getElementText());\n                 } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAINPUT.equalsIgnoreCase(xtr.getLocalName())) {\n                     multiInstanceDef.setInputDataItem(xtr.getElementText());\n                 } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAITEM.equalsIgnoreCase(xtr.getLocalName())) {\n-                    if (xtr.getAttributeValue(null,\n-                                              ATTRIBUTE_NAME) != null) {\n-                        multiInstanceDef.setElementVariable(xtr.getAttributeValue(null,\n-                                                                                  ATTRIBUTE_NAME));\n-                    }\n+                    if (xtr.getAttributeValue(null, ATTRIBUTE_NAME) != null) {\n+  multiInstanceDef.setElementVariable(xtr.getAttributeValue(null, ATTRIBUTE_NAME));\n+    }\n                 } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CONDITION.equalsIgnoreCase(xtr.getLocalName())) {\n                     multiInstanceDef.setCompletionCondition(xtr.getElementText());\n                 } else if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n@@ -68,9 +61,8 @@ public class MultiInstanceParser extends BaseChildElementParser {\n                 }\n             }\n         } catch (Exception e) {\n-            LOGGER.warn(\"Error parsing multi instance definition\",\n-                        e);\n-        }\n+            LOGGER.warn(\"Error parsing multi instance definition\", e);\n+  }\n         ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/755/MultiInstanceParser.java\nindex d231c1ba09..160e50aa7c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/755/MultiInstanceParser.java\n@@ -13,64 +13,60 @@\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n-\n import org.activiti.bpmn.converter.util.BpmnXMLUtil;\n import org.activiti.bpmn.model.Activity;\n import org.activiti.bpmn.model.BaseElement;\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.bpmn.model.MultiInstanceLoopCharacteristics;\n \n+\n public class MultiInstanceParser extends BaseChildElementParser {\n \n     public String getElementName() {\n-        return ELEMENT_MULTIINSTANCE;\n+    return ELEMENT_MULTIINSTANCE;\n     }\n \n-    public void parseChildElement(XMLStreamReader xtr,\n-                                  BaseElement parentElement,\n-                                  BpmnModel model) throws Exception {\n-        if (!(parentElement instanceof Activity)) {\n-            return;\n-        }\n-        MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n-        BpmnXMLUtil.addXMLLocation(multiInstanceDef,\n-                                   xtr);\n-        if (xtr.getAttributeValue(null,\n-                                  ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL) != null) {\n-            multiInstanceDef.setSequential(Boolean.valueOf(xtr.getAttributeValue(null,\n-                                                                                 ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL)));\n-        }\n-        multiInstanceDef.setInputDataItem(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n-        multiInstanceDef.setElementVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                  ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n-        multiInstanceDef.setElementIndexVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-                                                                       ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n+    public void parseChildElement(XMLStreamReader xtr, BaseElement parentElement, BpmnModel model) throws Exception {\n+    if (!(parentElement instanceof Activity)) {\n+        return;\n+    }\n \n-        boolean readyWithMultiInstance = false;\n-        try {\n-            while (!readyWithMultiInstance && xtr.hasNext()) {\n-                xtr.next();\n-                if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CARDINALITY.equalsIgnoreCase(xtr.getLocalName())) {\n-                    multiInstanceDef.setLoopCardinality(xtr.getElementText());\n-                } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAINPUT.equalsIgnoreCase(xtr.getLocalName())) {\n-                    multiInstanceDef.setInputDataItem(xtr.getElementText());\n-                } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAITEM.equalsIgnoreCase(xtr.getLocalName())) {\n-                    if (xtr.getAttributeValue(null,\n-                                              ATTRIBUTE_NAME) != null) {\n-                        multiInstanceDef.setElementVariable(xtr.getAttributeValue(null,\n-                                                                                  ATTRIBUTE_NAME));\n-                    }\n-                } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CONDITION.equalsIgnoreCase(xtr.getLocalName())) {\n-                    multiInstanceDef.setCompletionCondition(xtr.getElementText());\n-                } else if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n-                    readyWithMultiInstance = true;\n-                }\n-            }\n-        } catch (Exception e) {\n-            LOGGER.warn(\"Error parsing multi instance definition\",\n-                        e);\n+    MultiInstanceLoopCharacteristics multiInstanceDef = new MultiInstanceLoopCharacteristics();\n+    BpmnXMLUtil.addXMLLocation(multiInstanceDef, xtr);\n+    if (xtr.getAttributeValue(null, ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL) != null) {\n+        multiInstanceDef.setSequential(Boolean.valueOf(xtr.getAttributeValue(null, ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL)));\n+    }\n+    multiInstanceDef.setInputDataItem(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n+                                                            ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n+    multiInstanceDef.setElementVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n+                                                              ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n+    multiInstanceDef.setElementIndexVariable(xtr.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n+                                                                   ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n+\n+\n+    boolean readyWithMultiInstance = false;\n+    try {\n+        while (!readyWithMultiInstance && xtr.hasNext()) {\n+        xtr.next();\n+        if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CARDINALITY.equalsIgnoreCase(xtr.getLocalName())) {\n+                                                             multiInstanceDef.setLoopCardinality(xtr.getElementText());\n+        } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAINPUT.equalsIgnoreCase(xtr.getLocalName())) {\n+          multiInstanceDef.setInputDataItem(xtr.getElementText());\n+        } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_DATAITEM.equalsIgnoreCase(xtr.getLocalName())) {\n+          if (xtr.getAttributeValue(null, ATTRIBUTE_NAME) != null) {\n+              multiInstanceDef.setElementVariable(xtr.getAttributeValue(null, ATTRIBUTE_NAME));\n+          }\n+               } else if (xtr.isStartElement() && ELEMENT_MULTIINSTANCE_CONDITION.equalsIgnoreCase(xtr.getLocalName())) {\n+                 multiInstanceDef.setCompletionCondition(xtr.getElementText());\n+               } else if (xtr.isEndElement() && getElementName().equalsIgnoreCase(xtr.getLocalName())) {\n+                 readyWithMultiInstance = true;\n+                      }\n         }\n-        ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n+    } catch (Exception e) {\n+      LOGGER.warn(\"Error parsing multi instance definition\",\n+                  e);\n+    }\n+\n+    ((Activity) parentElement).setLoopCharacteristics(multiInstanceDef);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/755/MultiInstanceParser.java\nindex d231c1ba09..2d8b4f1807 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/755/MultiInstanceParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/755/MultiInstanceParser.java\nindex d231c1ba09..2d8b4f1807 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/755/MultiInstanceParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/755/MultiInstanceParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        }
    ]
}