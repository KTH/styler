{
    "error_id": "415",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/415/AMWorkerEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/415/AMWorkerEvent.java\nindex be1ea09ac1..6654818e04 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/415/AMWorkerEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/415/AMWorkerEvent.java\n@@ -23,24 +23,28 @@ import org.apache.hadoop.yarn.event.AbstractEvent;\n  * Base class of worker event.\n  */\n public class AMWorkerEvent extends AbstractEvent<AMWorkerEventType> {\n-  /**worker id*/\n-  private final WorkerId workerId;\n+    /**\n+     * worker id\n+     */\n+    private final WorkerId workerId;\n \n-  /**\n-   * Create a AMWorkerEvent\n-   * @param eventType event type\n-   * @param workerId worker id\n-   */\n-  public AMWorkerEvent(AMWorkerEventType eventType, WorkerId workerId) {\n-    super(eventType);\n-    this.workerId = workerId;\n-  }\n+    /**\n+     * Create a AMWorkerEvent\n+     *\n+     * @param eventType event type\n+     * @param workerId  worker id\n+     */\n+    public AMWorkerEvent(AMWorkerEventType eventType, WorkerId workerId) {\n+        super(eventType);\n+        this.workerId = workerId;\n+    }\n \n-  /**\n-   * Get worker id\n-   * @return worker id\n-   */\n-  public WorkerId getWorkerId() {\n-    return workerId;\n-  }\n+    /**\n+     * Get worker id\n+     *\n+     * @return worker id\n+     */\n+    public WorkerId getWorkerId() {\n+        return workerId;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/415/AMWorkerEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/415/AMWorkerEvent.java\nindex be1ea09ac1..c774d83aa7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/415/AMWorkerEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/415/AMWorkerEvent.java\n@@ -43,4 +43,4 @@ public class AMWorkerEvent extends AbstractEvent<AMWorkerEventType> {\n   public WorkerId getWorkerId() {\n     return workerId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/415/AMWorkerEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/415/AMWorkerEvent.java\nindex be1ea09ac1..5e182b8f7c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/415/AMWorkerEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/415/AMWorkerEvent.java\n@@ -22,25 +22,29 @@ import org.apache.hadoop.yarn.event.AbstractEvent;\n /**\n  * Base class of worker event.\n  */\n+\n public class AMWorkerEvent extends AbstractEvent<AMWorkerEventType> {\n   /**worker id*/\n-  private final WorkerId workerId;\n+    private final WorkerId workerId;\n \n   /**\n    * Create a AMWorkerEvent\n    * @param eventType event type\n    * @param workerId worker id\n    */\n-  public AMWorkerEvent(AMWorkerEventType eventType, WorkerId workerId) {\n+\n+    public AMWorkerEvent(AMWorkerEventType eventType, WorkerId workerId) {\n     super(eventType);\n     this.workerId = workerId;\n-  }\n+    }\n \n   /**\n    * Get worker id\n    * @return worker id\n    */\n-  public WorkerId getWorkerId() {\n+\n+    public WorkerId getWorkerId() {\n     return workerId;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}