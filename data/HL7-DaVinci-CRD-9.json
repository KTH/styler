{
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n\n    // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n    FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/9/OrderSelectService.java\nindex d0b5c2f276..45e738775e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/9/OrderSelectService.java\n@@ -44,7 +44,6 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n \n   @Override\n   public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n-\n     // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n     fhirBundleProcessor.processDeviceRequests();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/9/OrderSelectService.java\nindex d0b5c2f276..57c4b3d731 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/9/OrderSelectService.java\n@@ -19,7 +19,7 @@ import org.springframework.stereotype.Component;\n \n \n @Component(\"stu3_OrderSelectService\")\n-public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n+public class OrderSelectService extends CdsService<OrderSelectRequest> {\n \n   public static final String ID = \"order-select-crd\";\n   public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n@@ -29,21 +29,22 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n   static final Logger logger = LoggerFactory.getLogger(OrderSelectService.class);\n   public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n   public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-        CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n-        CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.VISION_PRESCRIPTION_BUNDLE\n-    );\n+      CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n+      CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.VISION_PRESCRIPTION_BUNDLE\n+  );\n \n   public OrderSelectService() {\n     super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n   }\n \n   @Override\n-  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n+  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest,\n+                                                                        CoverageRequirementRuleFinder ruleFinder) {\n \n     // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/9/OrderSelectService.java\nindex d0b5c2f276..6c4addce14 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/9/OrderSelectService.java\n@@ -19,7 +19,8 @@ import org.springframework.stereotype.Component;\n \n \n @Component(\"stu3_OrderSelectService\")\n-public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n+public class OrderSelectService extends CdsService<OrderSelectRequest> {\n+\n \n   public static final String ID = \"order-select-crd\";\n   public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n@@ -28,8 +29,7 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n       \"Get information regarding the coverage requirements for durable medical equipment\";\n   static final Logger logger = LoggerFactory.getLogger(OrderSelectService.class);\n   public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n-  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-        CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n+  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n         CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n         CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n         CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n@@ -38,14 +38,14 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n         CrdPrefetchTemplateElements.VISION_PRESCRIPTION_BUNDLE\n     );\n \n-  public OrderSelectService() {\n+\n+public OrderSelectService() {\n     super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n   }\n \n   @Override\n   public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n-\n-    // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n+  // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n     fhirBundleProcessor.processDeviceRequests();\n     fhirBundleProcessor.processMedicationRequests();\n@@ -56,4 +56,4 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n     }\n     return results;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 460).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/9/OrderSelectService.java\nindex d0b5c2f276..3c4395bbff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/9/OrderSelectService.java\n@@ -19,41 +19,33 @@ import org.springframework.stereotype.Component;\n \n \n @Component(\"stu3_OrderSelectService\")\n-public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n-\n-  public static final String ID = \"order-select-crd\";\n-  public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n-  public static final Hook HOOK = Hook.ORDER_SELECT;\n-  public static final String DESCRIPTION =\n-      \"Get information regarding the coverage requirements for durable medical equipment\";\n-  static final Logger logger = LoggerFactory.getLogger(OrderSelectService.class);\n-  public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n-  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-        CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n-        CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.VISION_PRESCRIPTION_BUNDLE\n-    );\n-\n-  public OrderSelectService() {\n+public class OrderSelectService extends CdsService<OrderSelectRequest> {\n+\n+\n+    public static final String ID = \"order-select-crd\";\n+    public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n+    public static final Hook HOOK = Hook.ORDER_SELECT;\n+    public static final String DESCRIPTION = \"Get information regarding the coverage requirements for durable medical equipment\";\n+    static final Logger logger = LoggerFactory.getLogger(OrderSelectService.class);\n+    public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n+    public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE, CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE, CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE, CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE, CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE, CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE, CrdPrefetchTemplateElements.VISION_PRESCRIPTION_BUNDLE);\n+\n+    public OrderSelectService() {\n     super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n-  }\n+    }\n \n-  @Override\n-  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n+\n+    @Override\n+    public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n \n     // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n     fhirBundleProcessor.processDeviceRequests();\n     fhirBundleProcessor.processMedicationRequests();\n     List<CoverageRequirementRuleResult> results = fhirBundleProcessor.getResults();\n-\n     if (results.isEmpty()) {\n-      throw RequestIncompleteException.NoSupportedBundlesFound();\n+        throw RequestIncompleteException.NoSupportedBundlesFound();\n     }\n     return results;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "72",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'ruleFinder' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "16",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "17",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "17",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/9/OrderSelectService.java\nindex d0b5c2f276..51e95f7728 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/9/OrderSelectService.java\n@@ -43,10 +43,10 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n   }\n \n   @Override\n-  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n+  public List<CoverageRequirementRuleResult> createCqlExecutionContexts( OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder\n+    ruleFinder ){// Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.FhirBundleProcessor\n \n-    // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n-    FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n+  fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n     fhirBundleProcessor.processDeviceRequests();\n     fhirBundleProcessor.processMedicationRequests();\n     List<CoverageRequirementRuleResult> results = fhirBundleProcessor.getResults();\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/9/OrderSelectService.java\nindex d0b5c2f276..45e738775e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/9/OrderSelectService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/9/OrderSelectService.java\n@@ -44,7 +44,6 @@ public class OrderSelectService extends CdsService<OrderSelectRequest>  {\n \n   @Override\n   public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSelectRequest orderSelectRequest, CoverageRequirementRuleFinder ruleFinder) {\n-\n     // Note: the selections array is currently ignored, all of the draftOrders are processed, not just those selected.\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSelectRequest.getPrefetch(), ruleFinder);\n     fhirBundleProcessor.processDeviceRequests();\n",
            "diff_size": 1
        }
    ]
}