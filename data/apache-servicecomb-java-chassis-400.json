{
    "error_id": "400",
    "information": {
        "errors": [
            {
                "line": "62",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "          .equals(annotation.annotationType().getCanonicalName())) {\n        LOGGER.info(\n            \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n                + \"If this is unexpected, maybe you should check your dependency jar files.\");\n      }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/400/PojoSwaggerGeneratorContext.java\nindex 2eadf0c80e..3cd31989ad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/400/PojoSwaggerGeneratorContext.java\n@@ -59,7 +59,7 @@ public class PojoSwaggerGeneratorContext extends AbstractSwaggerGeneratorContext\n           || \"org.springframework.web.bind.annotation.RequestMapping\"\n           .equals(annotation.annotationType().getCanonicalName())) {\n         LOGGER.info(\n-            \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n+        \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n                 + \"If this is unexpected, maybe you should check your dependency jar files.\");\n       }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/400/PojoSwaggerGeneratorContext.java\nindex 2eadf0c80e..bb007c1649 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/400/PojoSwaggerGeneratorContext.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.swagger.generator.pojo;\n \n import java.lang.annotation.Annotation;\n@@ -124,7 +125,7 @@ public class PojoSwaggerGeneratorContext extends AbstractSwaggerGeneratorContext\n   }\n \n   protected void mergeBodyBasedParameters(OperationGenerator operationGenerator,\n-      List<BodyParameter> bodyParameters) {\n+                                          List<BodyParameter> bodyParameters) {\n     List<Parameter> swaggerParameters = operationGenerator.getSwaggerParameters();\n     swaggerParameters.removeAll(bodyParameters);\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/400/PojoSwaggerGeneratorContext.java\nindex 2eadf0c80e..f5d6dfca8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/400/PojoSwaggerGeneratorContext.java\n@@ -56,8 +56,7 @@ public class PojoSwaggerGeneratorContext extends AbstractSwaggerGeneratorContext\n     for (Annotation annotation : cls.getAnnotations()) {\n       // we check the annotations by class name to avoid importing extra dependencies in this module\n       if (\"javax.ws.rs.Path\".equals(annotation.annotationType().getCanonicalName())\n-          || \"org.springframework.web.bind.annotation.RequestMapping\"\n-          .equals(annotation.annotationType().getCanonicalName())) {\n+          || \"org.springframework.web.bind.annotation.RequestMapping\".equals(annotation.annotationType().getCanonicalName())) {\n         LOGGER.info(\n             \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n                 + \"If this is unexpected, maybe you should check your dependency jar files.\");\n@@ -148,4 +147,4 @@ public class PojoSwaggerGeneratorContext extends AbstractSwaggerGeneratorContext\n     correctHttpMethod(operationGenerator);\n     handlePendingBody(operationGenerator);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/400/PojoSwaggerGeneratorContext.java\nindex 2eadf0c80e..9c97b7685b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/400/PojoSwaggerGeneratorContext.java\n@@ -59,93 +59,93 @@ public class PojoSwaggerGeneratorContext extends AbstractSwaggerGeneratorContext\n           || \"org.springframework.web.bind.annotation.RequestMapping\"\n           .equals(annotation.annotationType().getCanonicalName())) {\n         LOGGER.info(\n-            \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n-                + \"If this is unexpected, maybe you should check your dependency jar files.\");\n-      }\n-    }\n-    return true;\n+            \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \" + \"If this is unexpected, maybe you should check your dependency jar files.\"\n+        );\n   }\n+}\n+return true;\n+}\n \n-  @Override\n-  public boolean canProcess(Method method) {\n-    return true;\n+@Override\n+public boolean canProcess(Method method) {\n+  return true;\n+}\n+\n+@Override\n+protected void initDefaultParameterProcessor() {\n+  defaultParameterProcessor = new PojoDefaultParameterProcessor();\n+}\n+\n+protected void correctPath(OperationGenerator operationGenerator) {\n+  String path = operationGenerator.getPath();\n+  if (StringUtils.isEmpty(path)) {\n+    path = \"/\" + operationGenerator.getOperation().getOperationId();\n   }\n+  operationGenerator.setPath(path);\n+}\n \n-  @Override\n-  protected void initDefaultParameterProcessor() {\n-    defaultParameterProcessor = new PojoDefaultParameterProcessor();\n+// \u5fc5\u987b\u5168\u662fbody\uff0c\u6216\u5168\u662fpending\uff0c\u5982\u679c\u662f\u6df7\u5408\u7684\uff0c\u76f4\u63a5\u62a5\u9519\n+protected void handlePendingBody(OperationGenerator operationGenerator) {\n+  List<BodyParameter> bodyParameters = collectBodyBasedParameters(operationGenerator);\n+  if (bodyParameters.isEmpty()) {\n+    return;\n   }\n \n-  protected void correctPath(OperationGenerator operationGenerator) {\n-    String path = operationGenerator.getPath();\n-    if (StringUtils.isEmpty(path)) {\n-      path = \"/\" + operationGenerator.getOperation().getOperationId();\n-    }\n-    operationGenerator.setPath(path);\n+  if (bodyParameters.size() == 1) {\n+    Parameter bodyParameter = bodyParameters.get(0);\n+    replaceBodyBasedParameter(operationGenerator, bodyParameter);\n+    return;\n   }\n \n-  // \u5fc5\u987b\u5168\u662fbody\uff0c\u6216\u5168\u662fpending\uff0c\u5982\u679c\u662f\u6df7\u5408\u7684\uff0c\u76f4\u63a5\u62a5\u9519\n-  protected void handlePendingBody(OperationGenerator operationGenerator) {\n-    List<BodyParameter> bodyParameters = collectBodyBasedParameters(operationGenerator);\n-    if (bodyParameters.isEmpty()) {\n-      return;\n-    }\n+  // \u5c06\u591a\u4e2apending\u5408\u5e76\u6210\u4e00\u4e2abody\n+  mergeBodyBasedParameters(operationGenerator, bodyParameters);\n+}\n \n-    if (bodyParameters.size() == 1) {\n-      Parameter bodyParameter = bodyParameters.get(0);\n-      replaceBodyBasedParameter(operationGenerator, bodyParameter);\n-      return;\n+protected List<BodyParameter> collectBodyBasedParameters(OperationGenerator operationGenerator) {\n+  List<BodyParameter> bodyParameters = new ArrayList<>();\n+  for (Parameter parameter : operationGenerator.getSwaggerParameters()) {\n+    if (BodyParameter.class.isInstance(parameter)) {\n+      bodyParameters.add((BodyParameter) parameter);\n     }\n-\n-    // \u5c06\u591a\u4e2apending\u5408\u5e76\u6210\u4e00\u4e2abody\n-    mergeBodyBasedParameters(operationGenerator, bodyParameters);\n   }\n+  return bodyParameters;\n+}\n \n-  protected List<BodyParameter> collectBodyBasedParameters(OperationGenerator operationGenerator) {\n-    List<BodyParameter> bodyParameters = new ArrayList<>();\n-    for (Parameter parameter : operationGenerator.getSwaggerParameters()) {\n-      if (BodyParameter.class.isInstance(parameter)) {\n-        bodyParameters.add((BodyParameter) parameter);\n-      }\n-    }\n-    return bodyParameters;\n+protected void replaceBodyBasedParameter(OperationGenerator operationGenerator, Parameter bodyBasedParameter) {\n+  if (ParamUtils.isRealBodyParameter(bodyBasedParameter)) {\n+    return;\n   }\n \n-  protected void replaceBodyBasedParameter(OperationGenerator operationGenerator, Parameter bodyBasedParameter) {\n-    if (ParamUtils.isRealBodyParameter(bodyBasedParameter)) {\n-      return;\n-    }\n-\n-    List<Parameter> swaggerParameters = operationGenerator.getSwaggerParameters();\n-    int idx = swaggerParameters.indexOf(bodyBasedParameter);\n-    String bodyParamName = bodyBasedParameter.getName();\n-    BodyParameter bodyParameter = ((PendingBodyParameter) bodyBasedParameter).createBodyParameter(bodyParamName);\n-    swaggerParameters.set(idx, bodyParameter);\n-  }\n+  List<Parameter> swaggerParameters = operationGenerator.getSwaggerParameters();\n+  int idx = swaggerParameters.indexOf(bodyBasedParameter);\n+  String bodyParamName = bodyBasedParameter.getName();\n+  BodyParameter bodyParameter = ((PendingBodyParameter) bodyBasedParameter).createBodyParameter(bodyParamName);\n+  swaggerParameters.set(idx, bodyParameter);\n+}\n \n-  protected void mergeBodyBasedParameters(OperationGenerator operationGenerator,\n-      List<BodyParameter> bodyParameters) {\n-    List<Parameter> swaggerParameters = operationGenerator.getSwaggerParameters();\n-    swaggerParameters.removeAll(bodyParameters);\n-\n-    // \u5c06\u8fd9\u4e9bbody\u5305\u88c5\u4e3a\u4e00\u4e2aclass\uff0c\u6574\u4f53\u505a\u4e3a\u4e00\u4e2abody\u53c2\u6570\n-    String bodyParamName = ParamUtils.generateBodyParameterName(operationGenerator.getProviderMethod());\n-    Class<?> cls = ClassUtils.getOrCreateBodyClass(operationGenerator, bodyParameters, bodyParamName);\n-    BodyParameter bodyParameter =\n-        ParamUtils.createBodyParameter(operationGenerator.getSwagger(), bodyParamName, cls);\n-    swaggerParameters.add(bodyParameter);\n-  }\n+protected void mergeBodyBasedParameters(OperationGenerator operationGenerator,\n+    List<BodyParameter> bodyParameters) {\n+  List<Parameter> swaggerParameters = operationGenerator.getSwaggerParameters();\n+  swaggerParameters.removeAll(bodyParameters);\n+\n+  // \u5c06\u8fd9\u4e9bbody\u5305\u88c5\u4e3a\u4e00\u4e2aclass\uff0c\u6574\u4f53\u505a\u4e3a\u4e00\u4e2abody\u53c2\u6570\n+  String bodyParamName = ParamUtils.generateBodyParameterName(operationGenerator.getProviderMethod());\n+  Class<?> cls = ClassUtils.getOrCreateBodyClass(operationGenerator, bodyParameters, bodyParamName);\n+  BodyParameter bodyParameter =\n+      ParamUtils.createBodyParameter(operationGenerator.getSwagger(), bodyParamName, cls);\n+  swaggerParameters.add(bodyParameter);\n+}\n \n-  protected void correctHttpMethod(OperationGenerator operationGenerator) {\n-    if (StringUtils.isEmpty(operationGenerator.getHttpMethod())) {\n-      operationGenerator.setHttpMethod(HttpMethod.POST);\n-    }\n+protected void correctHttpMethod(OperationGenerator operationGenerator) {\n+  if (StringUtils.isEmpty(operationGenerator.getHttpMethod())) {\n+    operationGenerator.setHttpMethod(HttpMethod.POST);\n   }\n+}\n \n-  @Override\n-  public void postProcessOperation(OperationGenerator operationGenerator) {\n-    correctPath(operationGenerator);\n-    correctHttpMethod(operationGenerator);\n-    handlePendingBody(operationGenerator);\n-  }\n+@Override\n+public void postProcessOperation(OperationGenerator operationGenerator) {\n+  correctPath(operationGenerator);\n+  correctHttpMethod(operationGenerator);\n+  handlePendingBody(operationGenerator);\n+}\n }\n",
            "diff_size": 93
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/400/PojoSwaggerGeneratorContext.java\nindex 2eadf0c80e..3cd31989ad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/400/PojoSwaggerGeneratorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/400/PojoSwaggerGeneratorContext.java\n@@ -59,7 +59,7 @@ public class PojoSwaggerGeneratorContext extends AbstractSwaggerGeneratorContext\n           || \"org.springframework.web.bind.annotation.RequestMapping\"\n           .equals(annotation.annotationType().getCanonicalName())) {\n         LOGGER.info(\n-            \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n+        \"There is @RequestMapping or @Path annotation on the REST interface class, but POJO swagger context is chosen. \"\n                 + \"If this is unexpected, maybe you should check your dependency jar files.\");\n       }\n     }\n",
            "diff_size": 1
        }
    ]
}