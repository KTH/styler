{
    "error_id": "239",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 160).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n\n\n        return repairs;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/239/RepairInnerServiceSMOImpl.java\nindex 6b5bfc7824..263e7387b5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/239/RepairInnerServiceSMOImpl.java\n@@ -40,33 +40,38 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             repairDto.setPage((page - 1) * repairDto.getRow());\n-        }\n+        } List<RepairDto>repairs\n \n-        List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n \n-        return repairs;\n-    }\n+        =\n \n+        BeanConvertUtil .covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n-    @Override\n-    public int queryRepairsCount(@RequestBody RepairDto repairDto) {\n-        return repairServiceDaoImpl.queryRepairsCount(BeanConvertUtil.beanCovertMap(repairDto));\n-    }\n-\n-    public IRepairServiceDao getRepairServiceDaoImpl() {\n-        return repairServiceDaoImpl;\n-    }\n-\n-    public void setRepairServiceDaoImpl(IRepairServiceDao repairServiceDaoImpl) {\n-        this.repairServiceDaoImpl = repairServiceDaoImpl;\n-    }\n-\n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n-\n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+\n+          return repairs;\n+      }\n+\n+\n+      @Override\n+      public int queryRepairsCount(@RequestBody RepairDto repairDto) {\n+          return repairServiceDaoImpl.queryRepairsCount(BeanConvertUtil.beanCovertMap(repairDto));\n+      }\n+\n+      public IRepairServiceDao getRepairServiceDaoImpl() {\n+          return repairServiceDaoImpl;\n+      }\n+\n+      public void setRepairServiceDaoImpl(IRepairServiceDao repairServiceDaoImpl) {\n+          this.repairServiceDaoImpl = repairServiceDaoImpl;\n+      }\n+\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n+\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/239/RepairInnerServiceSMOImpl.java\nindex 6b5bfc7824..3a15b393e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/239/RepairInnerServiceSMOImpl.java\n@@ -25,48 +25,49 @@ import java.util.List;\n @RestController\n public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepairInnerServiceSMO {\n \n-    @Autowired\n-    private IRepairServiceDao repairServiceDaoImpl;\n+  @Autowired\n+  private IRepairServiceDao repairServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<RepairDto> queryRepairs(@RequestBody RepairDto repairDto) {\n+  @Override\n+  public List<RepairDto> queryRepairs(@RequestBody RepairDto repairDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = repairDto.getPage();\n+    int page = repairDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            repairDto.setPage((page - 1) * repairDto.getRow());\n-        }\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      repairDto.setPage((page - 1) * repairDto.getRow());\n+    }\n \n-        List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n+    List<RepairDto> repairs =\n+      BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n \n-        return repairs;\n-    }\n+    return repairs;\n+  }\n \n \n-    @Override\n-    public int queryRepairsCount(@RequestBody RepairDto repairDto) {\n-        return repairServiceDaoImpl.queryRepairsCount(BeanConvertUtil.beanCovertMap(repairDto));\n-    }\n+  @Override\n+  public int queryRepairsCount(@RequestBody RepairDto repairDto) {\n+    return repairServiceDaoImpl.queryRepairsCount(BeanConvertUtil.beanCovertMap(repairDto));\n+  }\n \n-    public IRepairServiceDao getRepairServiceDaoImpl() {\n-        return repairServiceDaoImpl;\n-    }\n+  public IRepairServiceDao getRepairServiceDaoImpl() {\n+    return repairServiceDaoImpl;\n+  }\n \n-    public void setRepairServiceDaoImpl(IRepairServiceDao repairServiceDaoImpl) {\n-        this.repairServiceDaoImpl = repairServiceDaoImpl;\n-    }\n+  public void setRepairServiceDaoImpl(IRepairServiceDao repairServiceDaoImpl) {\n+    this.repairServiceDaoImpl = repairServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/239/RepairInnerServiceSMOImpl.java\nindex 6b5bfc7824..0395d87d1e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/239/RepairInnerServiceSMOImpl.java\n@@ -44,8 +44,7 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n \n         List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n-\n-        return repairs;\n+return repairs;\n     }\n \n \n@@ -69,4 +68,4 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/239/RepairInnerServiceSMOImpl.java\nindex 6b5bfc7824..bb68a1897e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/239/RepairInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.community.dao.IRepairServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.core.smo.community.IRepairInnerServiceSMO;\n@@ -11,7 +10,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepairInnerServiceSMO {\n \n@@ -35,16 +35,13 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n     public List<RepairDto> queryRepairs(@RequestBody RepairDto repairDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = repairDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             repairDto.setPage((page - 1) * repairDto.getRow());\n         }\n \n         List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n-\n         return repairs;\n     }\n \n@@ -69,4 +66,4 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "column": "86",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "53",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "53",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/239/RepairInnerServiceSMOImpl.java\nindex 6b5bfc7824..53d5a31cbf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/239/RepairInnerServiceSMOImpl.java\n@@ -41,11 +41,8 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n         if (page != PageDto.DEFAULT_PAGE) {\n             repairDto.setPage((page - 1) * repairDto.getRow());\n         }\n-\n-        List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n-\n-\n-        return repairs;\n+        List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl. getRepairInfo(BeanConvertUtil\n+        .beanCovertMap(repairDto)),RepairDto.class) ;returnrepairs;\n     }\n \n \n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/239/RepairInnerServiceSMOImpl.java\nindex 6b5bfc7824..263e7387b5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/239/RepairInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/239/RepairInnerServiceSMOImpl.java\n@@ -40,33 +40,38 @@ public class RepairInnerServiceSMOImpl extends BaseServiceSMO implements IRepair\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             repairDto.setPage((page - 1) * repairDto.getRow());\n-        }\n+        } List<RepairDto>repairs\n \n-        List<RepairDto> repairs = BeanConvertUtil.covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n \n-        return repairs;\n-    }\n+        =\n \n+        BeanConvertUtil .covertBeanList(repairServiceDaoImpl.getRepairInfo(BeanConvertUtil.beanCovertMap(repairDto)), RepairDto.class);\n \n-    @Override\n-    public int queryRepairsCount(@RequestBody RepairDto repairDto) {\n-        return repairServiceDaoImpl.queryRepairsCount(BeanConvertUtil.beanCovertMap(repairDto));\n-    }\n-\n-    public IRepairServiceDao getRepairServiceDaoImpl() {\n-        return repairServiceDaoImpl;\n-    }\n-\n-    public void setRepairServiceDaoImpl(IRepairServiceDao repairServiceDaoImpl) {\n-        this.repairServiceDaoImpl = repairServiceDaoImpl;\n-    }\n-\n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n-\n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+\n+          return repairs;\n+      }\n+\n+\n+      @Override\n+      public int queryRepairsCount(@RequestBody RepairDto repairDto) {\n+          return repairServiceDaoImpl.queryRepairsCount(BeanConvertUtil.beanCovertMap(repairDto));\n+      }\n+\n+      public IRepairServiceDao getRepairServiceDaoImpl() {\n+          return repairServiceDaoImpl;\n+      }\n+\n+      public void setRepairServiceDaoImpl(IRepairServiceDao repairServiceDaoImpl) {\n+          this.repairServiceDaoImpl = repairServiceDaoImpl;\n+      }\n+\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n+\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 32
        }
    ]
}