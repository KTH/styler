{
    "error_id": "112",
    "information": {
        "errors": [
            {
                "line": "10",
                "column": "132",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": " * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n **/\npublic abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n    protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/112/AbstractOrderNotifyDataFlowContext.java\nindex 2d3ca58fba..b299937479 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/112/AbstractOrderNotifyDataFlowContext.java\n@@ -7,7 +7,7 @@ import java.util.Date;\n  * @create 2019-02-07 \u4e0b\u53487:01\n  * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n  **/\n-public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n+public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext, IOrderResponse {\n     protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n \n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/112/AbstractOrderNotifyDataFlowContext.java\nindex 2d3ca58fba..b5862477e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/112/AbstractOrderNotifyDataFlowContext.java\n@@ -7,88 +7,88 @@ import java.util.Date;\n  * @create 2019-02-07 \u4e0b\u53487:01\n  * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n  **/\n-public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n-    protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n+public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext, IOrderResponse {\n+  protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n \n-    }\n+  }\n \n \n-    private String transactionId;\n-    private Date responseTime;\n-    private String orderTypeCd;\n-    private String businessType;\n+  private String transactionId;\n+  private Date responseTime;\n+  private String orderTypeCd;\n+  private String businessType;\n \n-    private String code;\n+  private String code;\n \n-    private String message;\n+  private String message;\n \n-    private String bId;\n+  private String bId;\n \n-    private String businessTypeCd;\n+  private String businessTypeCd;\n \n-    public String getCode() {\n-        return code;\n-    }\n+  public String getCode() {\n+    return code;\n+  }\n \n-    public void setCode(String code) {\n-        this.code = code;\n-    }\n+  public void setCode(String code) {\n+    this.code = code;\n+  }\n \n-    public String getMessage() {\n-        return message;\n-    }\n+  public String getMessage() {\n+    return message;\n+  }\n \n-    public void setMessage(String message) {\n-        this.message = message;\n-    }\n+  public void setMessage(String message) {\n+    this.message = message;\n+  }\n \n-    public String getTransactionId() {\n-        return transactionId;\n-    }\n+  public String getTransactionId() {\n+    return transactionId;\n+  }\n \n-    public void setTransactionId(String transactionId) {\n-        this.transactionId = transactionId;\n-    }\n+  public void setTransactionId(String transactionId) {\n+    this.transactionId = transactionId;\n+  }\n \n-    public Date getResponseTime() {\n-        return responseTime;\n-    }\n+  public Date getResponseTime() {\n+    return responseTime;\n+  }\n \n-    public void setResponseTime(Date responseTime) {\n-        this.responseTime = responseTime;\n-    }\n+  public void setResponseTime(Date responseTime) {\n+    this.responseTime = responseTime;\n+  }\n \n-    public String getOrderTypeCd() {\n-        return orderTypeCd;\n-    }\n+  public String getOrderTypeCd() {\n+    return orderTypeCd;\n+  }\n \n-    public void setOrderTypeCd(String orderTypeCd) {\n-        this.orderTypeCd = orderTypeCd;\n-    }\n+  public void setOrderTypeCd(String orderTypeCd) {\n+    this.orderTypeCd = orderTypeCd;\n+  }\n \n-    public String getBusinessType() {\n-        return businessType;\n-    }\n+  public String getBusinessType() {\n+    return businessType;\n+  }\n \n-    public void setBusinessType(String businessType) {\n-        this.businessType = businessType;\n-    }\n+  public void setBusinessType(String businessType) {\n+    this.businessType = businessType;\n+  }\n \n-    public String getbId() {\n-        return bId;\n-    }\n+  public String getbId() {\n+    return bId;\n+  }\n \n-    public void setbId(String bId) {\n-        this.bId = bId;\n-    }\n+  public void setbId(String bId) {\n+    this.bId = bId;\n+  }\n \n-    public String getBusinessTypeCd() {\n-        return businessTypeCd;\n-    }\n+  public String getBusinessTypeCd() {\n+    return businessTypeCd;\n+  }\n \n-    public void setBusinessTypeCd(String businessTypeCd) {\n-        this.businessTypeCd = businessTypeCd;\n-    }\n+  public void setBusinessTypeCd(String businessTypeCd) {\n+    this.businessTypeCd = businessTypeCd;\n+  }\n \n \n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/112/AbstractOrderNotifyDataFlowContext.java\nindex 2d3ca58fba..1b3806b4fa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/112/AbstractOrderNotifyDataFlowContext.java\n@@ -7,7 +7,8 @@ import java.util.Date;\n  * @create 2019-02-07 \u4e0b\u53487:01\n  * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n  **/\n-public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n+public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext, IOrderResponse {\n+\n     protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n \n     }\n@@ -91,4 +92,4 @@ public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlo\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/112/AbstractOrderNotifyDataFlowContext.java\nindex 2d3ca58fba..89ef60cbc5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/112/AbstractOrderNotifyDataFlowContext.java\n@@ -7,9 +7,11 @@ import java.util.Date;\n  * @create 2019-02-07 \u4e0b\u53487:01\n  * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n  **/\n-public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n-    protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n \n+\n+public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext, IOrderResponse {\n+\n+    protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n     }\n \n \n@@ -17,15 +19,10 @@ public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlo\n     private Date responseTime;\n     private String orderTypeCd;\n     private String businessType;\n-\n     private String code;\n-\n     private String message;\n-\n     private String bId;\n-\n     private String businessTypeCd;\n-\n     public String getCode() {\n         return code;\n     }\n@@ -89,6 +86,4 @@ public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlo\n     public void setBusinessTypeCd(String businessTypeCd) {\n         this.businessTypeCd = businessTypeCd;\n     }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/112/AbstractOrderNotifyDataFlowContext.java\nindex 2d3ca58fba..b299937479 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/112/AbstractOrderNotifyDataFlowContext.java\n@@ -7,7 +7,7 @@ import java.util.Date;\n  * @create 2019-02-07 \u4e0b\u53487:01\n  * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n  **/\n-public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n+public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext, IOrderResponse {\n     protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n \n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "10",
                    "column": "133",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "10",
                    "column": "133",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/112/AbstractOrderNotifyDataFlowContext.java\nindex 2d3ca58fba..041ac2382e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/112/AbstractOrderNotifyDataFlowContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/112/AbstractOrderNotifyDataFlowContext.java\n@@ -7,7 +7,7 @@ import java.util.Date;\n  * @create 2019-02-07 \u4e0b\u53487:01\n  * @desc \u8ba2\u5355\u901a\u77e5\u6570\u636e\u6d41\u4fe1\u606f\n  **/\n-public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext,IOrderResponse {\n+public abstract class AbstractOrderNotifyDataFlowContext extends AbstractDataFlowContextPlus implements IOrderNotifyDataFlowContext ,IOrderResponse {\n     protected AbstractOrderNotifyDataFlowContext(Date startDate, String code) {\n \n     }\n",
            "diff_size": 1
        }
    ]
}