{
    "error_id": "327",
    "information": {
        "errors": [
            {
                "line": "64",
                "column": "68",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n\n    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n      // producer invocation\n      requestDeserializer = mapper",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "64",
                    "column": "68",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "column": "68",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/327/OperationProtobuf.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/327/OperationProtobuf.java\nindex 60449d6db6..bcb46a5ae6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/327/OperationProtobuf.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/327/OperationProtobuf.java\n@@ -61,15 +61,13 @@ public class OperationProtobuf {\n     ProtoMapper mapper = scopedProtobufSchemaManager.getOrCreateProtoMapper(operationMeta.getSchemaMeta());\n     Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n \n-    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n-        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n+    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null && ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n       // producer invocation\n       requestDeserializer = mapper\n           .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n               ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod()));\n-    } else if (operationMeta.getExtData(Const.CONSUMER_OPERATION) != null\n-        && ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()\n-        != null) {\n+  } else if (operationMeta.getExtData(Const.CONSUMER_OPERATION) != null\n+        && ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod() != null) {\n       // consumer pojo invocation\n       requestSerializer = mapper.createRequestRootSerializer(requestMessage, (Map<String, Type>) null, true);\n     } else {\n@@ -121,4 +119,4 @@ public class OperationProtobuf {\n     // TODO : WEAK handles only one response type.\n     throw new IllegalStateException(\"not implemented now, statusCode = \" + statusCode);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "column": "68",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "64",
                    "column": "68",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}