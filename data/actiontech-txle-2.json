{
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "21",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public interface IAutoCompensateDao {\n\n\t/**\n\t * To execute the dynamic auto-compensation SQL.\n\t *\n\t * @param autoCompensateSql SQL for auto compensation.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/styler/2/IAutoCompensateDao.java\nindex 03c7c6f472..bf6f0a0b58 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/styler/2/IAutoCompensateDao.java\n@@ -18,7 +18,7 @@ import java.util.Map;\n  */\n public interface IAutoCompensateDao {\n \n-\t/**\n+    /**\n \t * To execute the dynamic auto-compensation SQL.\n \t *\n \t * @param autoCompensateSql SQL for auto compensation.\n@@ -26,7 +26,7 @@ public interface IAutoCompensateDao {\n \t * @author Gannalyo\n \t * @since 201807-30\n \t */\n-\tboolean executeAutoCompensateSql(String autoCompensateSql);\n+ boolean executeAutoCompensateSql(String autoCompensateSql);\n \n \tList<Map<String, Object>> execute(String sql, Object... params);\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/intellij/2/IAutoCompensateDao.java\nindex 03c7c6f472..b6526bc4e4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/intellij/2/IAutoCompensateDao.java\n@@ -18,18 +18,18 @@ import java.util.Map;\n  */\n public interface IAutoCompensateDao {\n \n-\t/**\n-\t * To execute the dynamic auto-compensation SQL.\n-\t *\n-\t * @param autoCompensateSql SQL for auto compensation.\n-\t * @return result\n-\t * @author Gannalyo\n-\t * @since 201807-30\n-\t */\n-\tboolean executeAutoCompensateSql(String autoCompensateSql);\n+    /**\n+     * To execute the dynamic auto-compensation SQL.\n+     *\n+     * @param autoCompensateSql SQL for auto compensation.\n+     * @return result\n+     * @author Gannalyo\n+     * @since 201807-30\n+     */\n+    boolean executeAutoCompensateSql(String autoCompensateSql);\n \n-\tList<Map<String, Object>> execute(String sql, Object... params);\n+    List<Map<String, Object>> execute(String sql, Object... params);\n \n-\tvoid setDataSource(DataSource dataSource);\n+    void setDataSource(DataSource dataSource);\n \n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/naturalize/2/IAutoCompensateDao.java\nindex 03c7c6f472..7e42e8ea7e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/naturalize/2/IAutoCompensateDao.java\n@@ -18,7 +18,7 @@ import java.util.Map;\n  */\n public interface IAutoCompensateDao {\n \n-\t/**\n+  /**\n \t * To execute the dynamic auto-compensation SQL.\n \t *\n \t * @param autoCompensateSql SQL for auto compensation.\n@@ -31,5 +31,4 @@ public interface IAutoCompensateDao {\n \tList<Map<String, Object>> execute(String sql, Object... params);\n \n \tvoid setDataSource(DataSource dataSource);\n-\n-}\n+  }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/codebuff/2/IAutoCompensateDao.java\nindex 03c7c6f472..7b50d27a54 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/codebuff/2/IAutoCompensateDao.java\n@@ -16,20 +16,20 @@ import java.util.Map;\n  * @author Gannalyo\n  * @since 201807-30\n  */\n-public interface IAutoCompensateDao {\n \n-\t/**\n-\t * To execute the dynamic auto-compensation SQL.\n-\t *\n-\t * @param autoCompensateSql SQL for auto compensation.\n-\t * @return result\n-\t * @author Gannalyo\n-\t * @since 201807-30\n-\t */\n-\tboolean executeAutoCompensateSql(String autoCompensateSql);\n+public interface IAutoCompensateDao {\n \n-\tList<Map<String, Object>> execute(String sql, Object... params);\n+    /**\n+     * To execute the dynamic auto-compensation SQL.\n+     *\n+     * @param autoCompensateSql SQL for auto compensation.\n+     * @return result\n+     * @author Gannalyo\n+     * @since 201807-30\n+     */\n+    boolean executeAutoCompensateSql(String autoCompensateSql);\n \n-\tvoid setDataSource(DataSource dataSource);\n+    List<Map<String, Object>> execute(String sql, Object... params);\n \n-}\n+    void setDataSource(DataSource dataSource);\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/styler_random/2/IAutoCompensateDao.java\nindex 03c7c6f472..f09de5b405 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/styler_random/2/IAutoCompensateDao.java\n@@ -18,15 +18,14 @@ import java.util.Map;\n  */\n public interface IAutoCompensateDao {\n \n-\t/**\n+    /**\n \t * To execute the dynamic auto-compensation SQL.\n \t *\n \t * @param autoCompensateSql SQL for auto compensation.\n \t * @return result\n \t * @author Gannalyo\n \t * @since 201807-30\n-\t */\n-\tboolean executeAutoCompensateSql(String autoCompensateSql);\n+\t */ boolean executeAutoCompensateSql(String autoCompensateSql);\n \n \tList<Map<String, Object>> execute(String sql, Object... params);\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/styler_three_grams/2/IAutoCompensateDao.java\nindex 03c7c6f472..bf6f0a0b58 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/errored/1/2/IAutoCompensateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/actiontech-txle/styler_three_grams/2/IAutoCompensateDao.java\n@@ -18,7 +18,7 @@ import java.util.Map;\n  */\n public interface IAutoCompensateDao {\n \n-\t/**\n+    /**\n \t * To execute the dynamic auto-compensation SQL.\n \t *\n \t * @param autoCompensateSql SQL for auto compensation.\n@@ -26,7 +26,7 @@ public interface IAutoCompensateDao {\n \t * @author Gannalyo\n \t * @since 201807-30\n \t */\n-\tboolean executeAutoCompensateSql(String autoCompensateSql);\n+ boolean executeAutoCompensateSql(String autoCompensateSql);\n \n \tList<Map<String, Object>> execute(String sql, Object... params);\n \n",
            "diff_size": 2
        }
    ]
}