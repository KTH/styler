{
    "error_id": "351",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.engine.memtable;\n\nimport java.io.IOException;\nimport java.util.ArrayList;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/351/AbstractMemTable.java\nindex b1399a770f..bb1d193b16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/351/AbstractMemTable.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.memtable;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/351/AbstractMemTable.java\nindex b1399a770f..8e49e88cc6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/351/AbstractMemTable.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.memtable;\n \n import java.io.IOException;\n@@ -71,7 +72,7 @@ public abstract class AbstractMemTable implements IMemTable {\n   }\n \n   private IWritableMemChunk createIfNotExistAndGet(String deviceId, String measurement,\n-      TSDataType dataType) {\n+                                                   TSDataType dataType) {\n     if (!memTableMap.containsKey(deviceId)) {\n       memTableMap.put(deviceId, new HashMap<>());\n     }\n@@ -157,7 +158,7 @@ public abstract class AbstractMemTable implements IMemTable {\n \n   @Override\n   public void write(String deviceId, String measurement, TSDataType dataType, long insertTime,\n-      Object objectValue) {\n+                    Object objectValue) {\n     IWritableMemChunk memSeries = createIfNotExistAndGet(deviceId, measurement, dataType);\n     memSeries.write(insertTime, objectValue);\n   }\n@@ -203,7 +204,8 @@ public abstract class AbstractMemTable implements IMemTable {\n \n   @Override\n   public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType dataType,\n-      TSEncoding encoding, Map<String, String> props, long timeLowerBound) throws IOException {\n+                                TSEncoding encoding, Map<String, String> props, long timeLowerBound)\n+      throws IOException {\n     if (!checkPath(deviceId, measurement)) {\n       return null;\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 2, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/351/AbstractMemTable.java\nindex b1399a770f..0a034f9fd9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/351/AbstractMemTable.java\n@@ -70,9 +70,8 @@ public abstract class AbstractMemTable implements IMemTable {\n     return memTableMap.containsKey(deviceId) && memTableMap.get(deviceId).containsKey(measurement);\n   }\n \n-  private IWritableMemChunk createIfNotExistAndGet(String deviceId, String measurement,\n-      TSDataType dataType) {\n-    if (!memTableMap.containsKey(deviceId)) {\n+  private IWritableMemChunk createIfNotExistAndGet(String deviceId, String measurement, TSDataType dataType) {\n+  if (!memTableMap.containsKey(deviceId)) {\n       memTableMap.put(deviceId, new HashMap<>());\n     }\n     Map<String, IWritableMemChunk> memSeries = memTableMap.get(deviceId);\n@@ -87,12 +86,13 @@ public abstract class AbstractMemTable implements IMemTable {\n   @Override\n   public void insert(InsertPlan insertPlan) throws PlannerException {\n     try {\n-      for (int i = 0; i < insertPlan.getValues().length; i++) {\n+      for (int i = 0;\n \n-        Object value = parseValue(insertPlan.getDataTypes()[i], insertPlan.getValues()[i]);\n-        write(insertPlan.getDeviceId(), insertPlan.getMeasurements()[i],\n-            insertPlan.getDataTypes()[i], insertPlan.getTime(), value);\n-      }\n+i < insertPlan.getValues().length;\n+i++) {\n+  Object value = parseValue(insertPlan.getDataTypes()[i], insertPlan.getValues()[i]);\n+        write(insertPlan.getDeviceId(), insertPlan.getMeasurements()[i], insertPlan.getDataTypes()[i], insertPlan.getTime(), value);\n+  }\n       long recordSizeInByte = MemUtils.getRecordSize(insertPlan);\n       memSize += recordSizeInByte;\n     } catch (RuntimeException e) {\n@@ -105,16 +105,13 @@ public abstract class AbstractMemTable implements IMemTable {\n       switch (dataType) {\n         case BOOLEAN:\n           value = value.toLowerCase();\n-          if (SQLConstant.BOOLEAN_FALSE_NUM.equals(value) || SQLConstant.BOOLEN_FALSE\n-              .equals(value)) {\n-            return false;\n-          } else if (SQLConstant.BOOLEAN_TRUE_NUM.equals(value) || SQLConstant.BOOLEN_TRUE\n-              .equals(value)) {\n-            return true;\n+          if (SQLConstant.BOOLEAN_FALSE_NUM.equals(value) || SQLConstant.BOOLEN_FALSE.equals(value)) {\n+  return false;\n+          } else if (SQLConstant.BOOLEAN_TRUE_NUM.equals(value) || SQLConstant.BOOLEN_TRUE.equals(value)) {\n+  return true;\n           } else {\n-            throw new PlannerException(\n-                \"The BOOLEAN data type should be true/TRUE, false/FALSE or 0/1\");\n-          }\n+            throw new PlannerException(\"The BOOLEAN data type should be true/TRUE, false/FALSE or 0/1\");\n+  }\n         case INT32:\n           return Integer.parseInt(value);\n         case INT64:\n@@ -126,7 +123,7 @@ public abstract class AbstractMemTable implements IMemTable {\n         case TEXT:\n           if ((value.startsWith(SQLConstant.QUOTE) && value.endsWith(SQLConstant.QUOTE))\n               || (value.startsWith(SQLConstant.DQUOTE) && value.endsWith(SQLConstant.DQUOTE))) {\n-            if (value.length() == 1) {\n+  if (value.length() == 1) {\n               return new Binary(value);\n             } else {\n               return new Binary(value.substring(1, value.length() - 1));\n@@ -136,7 +133,7 @@ public abstract class AbstractMemTable implements IMemTable {\n           }\n         default:\n           throw new PlannerException(\"Unsupported data type:\" + dataType);\n-      }\n+  }\n     } catch (NumberFormatException e) {\n       throw new PlannerException(e.getMessage());\n     }\n@@ -145,7 +142,7 @@ public abstract class AbstractMemTable implements IMemTable {\n   @Override\n   public void insertBatch(BatchInsertPlan batchInsertPlan, int start, int end)\n       throws PlannerException {\n-    try {\n+  try {\n       write(batchInsertPlan, start, end);\n       long recordSizeInByte = MemUtils.getRecordSize(batchInsertPlan);\n       memSize += recordSizeInByte;\n@@ -153,27 +150,23 @@ public abstract class AbstractMemTable implements IMemTable {\n       throw new PlannerException(e.getMessage());\n     }\n   }\n-\n-\n   @Override\n-  public void write(String deviceId, String measurement, TSDataType dataType, long insertTime,\n-      Object objectValue) {\n-    IWritableMemChunk memSeries = createIfNotExistAndGet(deviceId, measurement, dataType);\n+  public void write(String deviceId, String measurement, TSDataType dataType, long insertTime, Object objectValue) {\n+  IWritableMemChunk memSeries = createIfNotExistAndGet(deviceId, measurement, dataType);\n     memSeries.write(insertTime, objectValue);\n   }\n \n   @Override\n   public void write(BatchInsertPlan batchInsertPlan, int start, int end) {\n-    for (int i = 0; i < batchInsertPlan.getMeasurements().length; i++) {\n-      IWritableMemChunk memSeries = createIfNotExistAndGet(batchInsertPlan.getDeviceId(),\n-          batchInsertPlan.getMeasurements()[i], batchInsertPlan.getDataTypes()[i]);\n-      memSeries.write(batchInsertPlan.getTimes(), batchInsertPlan.getColumns()[i],\n-          batchInsertPlan.getDataTypes()[i], start, end);\n-    }\n-  }\n+    for (int i = 0;\n \n-\n-  @Override\n+i < batchInsertPlan.getMeasurements().length;\n+i++) {\n+      IWritableMemChunk memSeries = createIfNotExistAndGet(batchInsertPlan.getDeviceId(), batchInsertPlan.getMeasurements()[i], batchInsertPlan.getDataTypes()[i]);\n+memSeries.write(batchInsertPlan.getTimes(), batchInsertPlan.getColumns()[i], batchInsertPlan.getDataTypes()[i], start, end);\n+  }\n+  }\n+@Override\n   public long size() {\n     long sum = 0;\n     for (Map<String, IWritableMemChunk> seriesMap : memTableMap.values()) {\n@@ -202,28 +195,25 @@ public abstract class AbstractMemTable implements IMemTable {\n   }\n \n   @Override\n-  public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType dataType,\n-      TSEncoding encoding, Map<String, String> props, long timeLowerBound) throws IOException {\n-    if (!checkPath(deviceId, measurement)) {\n+  public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType dataType, TSEncoding encoding, Map<String, String> props, long timeLowerBound) throws IOException {\n+  if (!checkPath(deviceId, measurement)) {\n       return null;\n     }\n     long undeletedTime = findUndeletedTime(deviceId, measurement, timeLowerBound);\n     IWritableMemChunk memChunk = memTableMap.get(deviceId).get(measurement);\n     TVList chunkCopy = memChunk.getTVList().clone();\n-\n-    chunkCopy.setTimeOffset(undeletedTime);\n+chunkCopy.setTimeOffset(undeletedTime);\n     return new ReadOnlyMemChunk(measurement, dataType, encoding, chunkCopy, props, getVersion());\n   }\n \n-\n-  private long findUndeletedTime(String deviceId, String measurement, long timeLowerBound) {\n+private long findUndeletedTime(String deviceId, String measurement, long timeLowerBound) {\n     long undeletedTime = Long.MIN_VALUE;\n     for (Modification modification : modifications) {\n       if (modification instanceof Deletion) {\n         Deletion deletion = (Deletion) modification;\n         if (deletion.getDevice().equals(deviceId) && deletion.getMeasurement().equals(measurement)\n             && deletion.getTimestamp() > undeletedTime) {\n-          undeletedTime = deletion.getTimestamp();\n+  undeletedTime = deletion.getTimestamp();\n         }\n       }\n     }\n@@ -263,4 +253,4 @@ public abstract class AbstractMemTable implements IMemTable {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "column": "18",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "46",
                    "column": "18",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "46",
                    "column": "64",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 60, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 60, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 62, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 68.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "47",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'i' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'i' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "91",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'switch' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "58",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 12, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 14, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 25, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 25, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 25, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 25, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 25, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 25, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 25, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 25, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "column": "26",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "65",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "102",
                    "severity": "warning",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "122",
                    "column": "102",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "column": "70",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "30",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "30",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 113, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 113, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 25, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 25, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 27, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 90, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 248).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "column": "247",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 90, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 38, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 77, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 38, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 97, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 55, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 55, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "203",
                    "column": "97",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "145",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "203",
                    "column": "171",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 139, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 55, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 97, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 41, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "236",
                    "column": "42",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 90, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "238",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 41, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/351/AbstractMemTable.java\nindex b1399a770f..3ca8d78b78 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/351/AbstractMemTable.java\n@@ -17,7 +17,6 @@\n  * under the License.\n  */\n package org.apache.iotdb.db.engine.memtable;\n-\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.HashMap;\n@@ -40,227 +39,204 @@ import org.apache.iotdb.tsfile.utils.Binary;\n \n public abstract class AbstractMemTable implements IMemTable {\n \n-  private long version = Long.MAX_VALUE;\n \n-  private List<Modification> modifications = new ArrayList<>();\n+    private long version = Long.MAX_VALUE;\n+\n+\n+    private List < Modification> modifications = new ArrayList <>();\n \n-  private final Map<String, Map<String, IWritableMemChunk>> memTableMap;\n \n-  private long memSize = 0;\n+    private final Map<String, Map<String, IWritableMemChunk>> memTableMap;\n \n-  public AbstractMemTable() {\n-    this.memTableMap = new HashMap<>();\n-  }\n \n-  public AbstractMemTable(Map<String, Map<String, IWritableMemChunk>> memTableMap) {\n-    this.memTableMap = memTableMap;\n-  }\n+    private long memSize = 0;\n \n-  @Override\n-  public Map<String, Map<String, IWritableMemChunk>> getMemTableMap() {\n+    public AbstractMemTable() {\n+this.memTableMap = new HashMap <>();\n+                                                            } public AbstractMemTable(Map<String, Map<String, IWritableMemChunk>> memTableMap) {\n+this.memTableMap = memTableMap;\n+                                                            } @ Override public Map<String, Map<String, IWritableMemChunk>> getMemTableMap() {\n     return memTableMap;\n-  }\n+                                                              }\n \n   /**\n    * check whether the given seriesPath is within this memtable.\n    *\n    * @return true if seriesPath is within this memtable\n    */\n-  private boolean checkPath(String deviceId, String measurement) {\n-    return memTableMap.containsKey(deviceId) && memTableMap.get(deviceId).containsKey(measurement);\n-  }\n \n-  private IWritableMemChunk createIfNotExistAndGet(String deviceId, String measurement,\n-      TSDataType dataType) {\n+    private boolean checkPath(String deviceId, String measurement) {\n+    return memTableMap.containsKey(deviceId)&& memTableMap.get(deviceId).containsKey(measurement);\n+    }\n+\n+    private IWritableMemChunk createIfNotExistAndGet(String deviceId, String measurement, TSDataType dataType) {\n     if (!memTableMap.containsKey(deviceId)) {\n-      memTableMap.put(deviceId, new HashMap<>());\n+        memTableMap.put(deviceId, new HashMap <>());\n     }\n     Map<String, IWritableMemChunk> memSeries = memTableMap.get(deviceId);\n     if (!memSeries.containsKey(measurement)) {\n-      memSeries.put(measurement, genMemSeries(dataType));\n+        memSeries.put(measurement, genMemSeries(dataType));\n     }\n     return memSeries.get(measurement);\n-  }\n+    }\n+\n+    protected abstract IWritableMemChunk genMemSeries(TSDataType dataType);\n \n-  protected abstract IWritableMemChunk genMemSeries(TSDataType dataType);\n \n-  @Override\n-  public void insert(InsertPlan insertPlan) throws PlannerException {\n+    @ Override public void insert(InsertPlan insertPlan) throws PlannerException {\n     try {\n-      for (int i = 0; i < insertPlan.getValues().length; i++) {\n-\n-        Object value = parseValue(insertPlan.getDataTypes()[i], insertPlan.getValues()[i]);\n-        write(insertPlan.getDeviceId(), insertPlan.getMeasurements()[i],\n-            insertPlan.getDataTypes()[i], insertPlan.getTime(), value);\n-      }\n-      long recordSizeInByte = MemUtils.getRecordSize(insertPlan);\n-      memSize += recordSizeInByte;\n+        for(int i = 0;\n+        i< insertPlan.getValues().length;\n+        i++) {\n+        Object value = parseValue(insertPlan.getDataTypes()[i], insertPlan.getValues()[i] );\n+        write(insertPlan.getDeviceId(), insertPlan.getMeasurements()[i], insertPlan.getDataTypes()[i], insertPlan.getTime(), value);\n+        }\n+        long recordSizeInByte = MemUtils.getRecordSize(insertPlan);\n+        memSize += recordSizeInByte;\n     } catch (RuntimeException e) {\n       throw new PlannerException(e.getMessage());\n     }\n-  }\n+    }\n \n-  private static Object parseValue(TSDataType dataType, String value) throws PlannerException {\n+    private static Object parseValue(TSDataType dataType, String value) throws PlannerException {\n     try {\n-      switch (dataType) {\n+        switch(dataType) {\n         case BOOLEAN:\n-          value = value.toLowerCase();\n-          if (SQLConstant.BOOLEAN_FALSE_NUM.equals(value) || SQLConstant.BOOLEN_FALSE\n-              .equals(value)) {\n+        value = value.toLowerCase();\n+        if(SQLConstant.BOOLEAN_FALSE_NUM.equals(value)|| SQLConstant.BOOLEN_FALSE.equals(value)) {\n             return false;\n-          } else if (SQLConstant.BOOLEAN_TRUE_NUM.equals(value) || SQLConstant.BOOLEN_TRUE\n-              .equals(value)) {\n+        } else\n+            if(SQLConstant.BOOLEAN_TRUE_NUM.equals(value)|| SQLConstant.BOOLEN_TRUE.equals(value)) {\n             return true;\n-          } else {\n-            throw new PlannerException(\n-                \"The BOOLEAN data type should be true/TRUE, false/FALSE or 0/1\");\n-          }\n-        case INT32:\n-          return Integer.parseInt(value);\n-        case INT64:\n-          return Long.parseLong(value);\n-        case FLOAT:\n-          return Float.parseFloat(value);\n-        case DOUBLE:\n-          return Double.parseDouble(value);\n-        case TEXT:\n-          if ((value.startsWith(SQLConstant.QUOTE) && value.endsWith(SQLConstant.QUOTE))\n-              || (value.startsWith(SQLConstant.DQUOTE) && value.endsWith(SQLConstant.DQUOTE))) {\n-            if (value.length() == 1) {\n-              return new Binary(value);\n             } else {\n-              return new Binary(value.substring(1, value.length() - 1));\n+            throw new PlannerException(\"The BOOLEAN data type should be true/TRUE, false/FALSE or 0/1\");\n+            } case INT32:\n+              return Integer.parseInt(value);\n+                         case INT64:\n+                         return Long.parseLong(value);\n+                         case FLOAT:\n+                         return Float.parseFloat(value);\n+                         case DOUBLE:\n+                         return Double.parseDouble(value);\n+                         case TEXT:\n+                         if((value.startsWith(SQLConstant.QUOTE)&& value.endsWith(SQLConstant.QUOTE))||\n+                                (value.startsWith(SQLConstant.DQUOTE)&& value.endsWith(SQLConstant.DQUOTE))) {\n+            if(value.length()==1) {\n+                                                                                                                 return new Binary(value);\n+            } else {\n+                                                                                                                 return new Binary(value.substring(1, value.length() - 1));\n             }\n-          } else {\n+                         } else {\n             throw new PlannerException(\"The TEXT data type should be covered by \\\" or '\");\n-          }\n-        default:\n-          throw new PlannerException(\"Unsupported data type:\" + dataType);\n-      }\n+                         } default:\n+                           throw new PlannerException(\"Unsupported data type:\" + dataType);\n+        }\n     } catch (NumberFormatException e) {\n       throw new PlannerException(e.getMessage());\n     }\n-  }\n+    }\n \n-  @Override\n-  public void insertBatch(BatchInsertPlan batchInsertPlan, int start, int end)\n-      throws PlannerException {\n+    @ Override public void insertBatch(BatchInsertPlan batchInsertPlan, int start, int end) throws PlannerException {\n     try {\n-      write(batchInsertPlan, start, end);\n-      long recordSizeInByte = MemUtils.getRecordSize(batchInsertPlan);\n-      memSize += recordSizeInByte;\n+        write(batchInsertPlan, start, end);\n+        long recordSizeInByte = MemUtils.getRecordSize(batchInsertPlan);\n+        memSize += recordSizeInByte;\n     } catch (RuntimeException e) {\n       throw new PlannerException(e.getMessage());\n     }\n-  }\n-\n+    }\n \n-  @Override\n-  public void write(String deviceId, String measurement, TSDataType dataType, long insertTime,\n-      Object objectValue) {\n+    @ Override public void write(String deviceId, String measurement, TSDataType dataType, long insertTime, Object objectValue) {\n     IWritableMemChunk memSeries = createIfNotExistAndGet(deviceId, measurement, dataType);\n     memSeries.write(insertTime, objectValue);\n-  }\n-\n-  @Override\n-  public void write(BatchInsertPlan batchInsertPlan, int start, int end) {\n-    for (int i = 0; i < batchInsertPlan.getMeasurements().length; i++) {\n-      IWritableMemChunk memSeries = createIfNotExistAndGet(batchInsertPlan.getDeviceId(),\n-          batchInsertPlan.getMeasurements()[i], batchInsertPlan.getDataTypes()[i]);\n-      memSeries.write(batchInsertPlan.getTimes(), batchInsertPlan.getColumns()[i],\n-          batchInsertPlan.getDataTypes()[i], start, end);\n     }\n-  }\n \n+    @ Override public void write(BatchInsertPlan batchInsertPlan, int start, int end) {\n+    for(int i = 0;\n+    i< batchInsertPlan.getMeasurements().length;\n+    i++) {\n+                                                                                          IWritableMemChunk memSeries = createIfNotExistAndGet(batchInsertPlan.getDeviceId(), batchInsertPlan.getMeasurements()[i], batchInsertPlan.getDataTypes()[i] );\n+                                                                                          memSeries.write(batchInsertPlan.getTimes(), batchInsertPlan.getColumns()[i], batchInsertPlan.getDataTypes()[i], start, end);\n+    }\n+    }\n \n-  @Override\n-  public long size() {\n+    @ Override public long size() {\n     long sum = 0;\n-    for (Map<String, IWritableMemChunk> seriesMap : memTableMap.values()) {\n-      for (IWritableMemChunk writableMemChunk : seriesMap.values()) {\n-        sum += writableMemChunk.count();\n-      }\n+    for(Map<String, IWritableMemChunk> seriesMap : memTableMap.values()) {\n+                                      for(IWritableMemChunk writableMemChunk : seriesMap.values()) {\n+                                                                             sum += writableMemChunk.count();\n+                                      }\n     }\n     return sum;\n-  }\n+    }\n \n-  @Override\n-  public long memSize() {\n+    @ Override public long memSize() {\n     return memSize;\n-  }\n+    }\n \n-  @Override\n-  public void clear() {\n+    @ Override public void clear() {\n     memTableMap.clear();\n     modifications.clear();\n     memSize = 0;\n-  }\n+    }\n \n-  @Override\n-  public boolean isEmpty() {\n+    @ Override public boolean isEmpty() {\n     return memTableMap.isEmpty();\n-  }\n+    }\n \n-  @Override\n-  public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType dataType,\n-      TSEncoding encoding, Map<String, String> props, long timeLowerBound) throws IOException {\n+    @ Override public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType dataType, TSEncoding encoding, Map<String, String> props, long timeLowerBound) throws IOException {\n     if (!checkPath(deviceId, measurement)) {\n-      return null;\n+        return null;\n     }\n     long undeletedTime = findUndeletedTime(deviceId, measurement, timeLowerBound);\n     IWritableMemChunk memChunk = memTableMap.get(deviceId).get(measurement);\n     TVList chunkCopy = memChunk.getTVList().clone();\n-\n     chunkCopy.setTimeOffset(undeletedTime);\n     return new ReadOnlyMemChunk(measurement, dataType, encoding, chunkCopy, props, getVersion());\n-  }\n-\n+    }\n \n-  private long findUndeletedTime(String deviceId, String measurement, long timeLowerBound) {\n+    private long findUndeletedTime(String deviceId, String measurement, long timeLowerBound) {\n     long undeletedTime = Long.MIN_VALUE;\n-    for (Modification modification : modifications) {\n-      if (modification instanceof Deletion) {\n-        Deletion deletion = (Deletion) modification;\n-        if (deletion.getDevice().equals(deviceId) && deletion.getMeasurement().equals(measurement)\n-            && deletion.getTimestamp() > undeletedTime) {\n-          undeletedTime = deletion.getTimestamp();\n-        }\n-      }\n+    for(Modification modification : modifications) {\n+                                                                                                 if (modification instanceof Deletion) {\n+                                                       Deletion deletion = (Deletion) modification;\n+                                                       if (deletion.getDevice().equals(deviceId)&& deletion.getMeasurement().equals(measurement)&& deletion.getTimestamp()> undeletedTime) {\n+                                                                                                                                           undeletedTime = deletion.getTimestamp();\n+                                                       }\n+                                                                                                 }\n     }\n     return Math.max(undeletedTime + 1, timeLowerBound);\n-  }\n+    }\n \n-  @Override\n-  public void delete(String deviceId, String measurementId, long timestamp) {\n+    @ Override public void delete(String deviceId, String measurementId, long timestamp) {\n     Map<String, IWritableMemChunk> deviceMap = memTableMap.get(deviceId);\n     if (deviceMap != null) {\n-      IWritableMemChunk chunk = deviceMap.get(measurementId);\n-      if (chunk == null) {\n-        return;\n-      }\n-      chunk.delete(timestamp);\n+        IWritableMemChunk chunk = deviceMap.get(measurementId);\n+        if (chunk == null) {\n+                               return;\n+        }\n+        chunk.delete(timestamp);\n+    }\n     }\n-  }\n \n-  @Override\n-  public void delete(Deletion deletion) {\n+    @ Override public void delete(Deletion deletion) {\n     this.modifications.add(deletion);\n-  }\n+    }\n \n-  public void setVersion(long version) {\n+    public void setVersion(long version) {\n     this.version = version;\n-  }\n+    }\n \n-  public long getVersion() {\n+    public long getVersion() {\n     return version;\n-  }\n-\n-  @Override\n-  public void release() {\n-    for (Entry<String, Map<String, IWritableMemChunk>> entry : memTableMap.entrySet()) {\n-      for (Entry<String, IWritableMemChunk> subEntry : entry.getValue().entrySet()) {\n-        TVListAllocator.getInstance().release(subEntry.getValue().getTVList());\n-      }\n     }\n-  }\n-}\n+\n+    @ Override public void release() {\n+    for(Entry<String, Map<String, IWritableMemChunk>> entry : memTableMap.entrySet()) {\n+                                         for(Entry<String, IWritableMemChunk> subEntry : entry.getValue().entrySet()) {\n+                                                                                          TVListAllocator.getInstance().release(subEntry.getValue().getTVList());\n+                                         }\n+    }\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 186
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'engine' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/351/AbstractMemTable.java\nindex b1399a770f..ee35b001bc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/351/AbstractMemTable.java\n@@ -16,7 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.engine.memtable;\n+package org.apache.iotdb.db.\n+engine.memtable;\n \n import java.io.IOException;\n import java.util.ArrayList;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/351/AbstractMemTable.java\nindex b1399a770f..bb1d193b16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/351/AbstractMemTable.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/351/AbstractMemTable.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.memtable;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ]
}