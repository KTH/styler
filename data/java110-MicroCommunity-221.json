{
    "error_id": "221",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<InspectionPlanDto> inspectionPlans = BeanConvertUtil.covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n\n        return inspectionPlans;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/221/InspectionPlanInnerServiceSMOImpl.java\nindex cb9506f4ac..686e290e75 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/221/InspectionPlanInnerServiceSMOImpl.java\n@@ -40,33 +40,39 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             inspectionPlanDto.setPage((page - 1) * inspectionPlanDto.getRow());\n-        }\n+        } List<InspectionPlanDto>inspectionPlans\n \n-        List<InspectionPlanDto> inspectionPlans = BeanConvertUtil.covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n \n-        return inspectionPlans;\n-    }\n \n \n+        =\n \n+        BeanConvertUtil .covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n \n-    @Override\n-    public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n-        return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n+          return inspectionPlans;\n+      }\n+\n+\n+\n+\n+      @Override\n+      public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n+          return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n \n-    public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n-        return inspectionPlanServiceDaoImpl;\n-    }\n+      public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n+          return inspectionPlanServiceDaoImpl;\n+      }\n \n-    public void setInspectionPlanServiceDaoImpl(IInspectionPlanServiceDao inspectionPlanServiceDaoImpl) {\n-        this.inspectionPlanServiceDaoImpl = inspectionPlanServiceDaoImpl;\n-    }\n+      public void setInspectionPlanServiceDaoImpl(IInspectionPlanServiceDao inspectionPlanServiceDaoImpl) {\n+          this.inspectionPlanServiceDaoImpl = inspectionPlanServiceDaoImpl;\n+      }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/221/InspectionPlanInnerServiceSMOImpl.java\nindex cb9506f4ac..9b9d46d6fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/221/InspectionPlanInnerServiceSMOImpl.java\n@@ -25,48 +25,48 @@ import java.util.List;\n @RestController\n public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements IInspectionPlanInnerServiceSMO {\n \n-    @Autowired\n-    private IInspectionPlanServiceDao inspectionPlanServiceDaoImpl;\n+  @Autowired\n+  private IInspectionPlanServiceDao inspectionPlanServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<InspectionPlanDto> queryInspectionPlans(@RequestBody  InspectionPlanDto inspectionPlanDto) {\n+  @Override\n+  public List<InspectionPlanDto> queryInspectionPlans(@RequestBody InspectionPlanDto inspectionPlanDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = inspectionPlanDto.getPage();\n+    int page = inspectionPlanDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            inspectionPlanDto.setPage((page - 1) * inspectionPlanDto.getRow());\n-        }\n-\n-        List<InspectionPlanDto> inspectionPlans = BeanConvertUtil.covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n-\n-        return inspectionPlans;\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      inspectionPlanDto.setPage((page - 1) * inspectionPlanDto.getRow());\n     }\n \n+    List<InspectionPlanDto> inspectionPlans = BeanConvertUtil\n+      .covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n \n+    return inspectionPlans;\n+  }\n \n \n-    @Override\n-    public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n-        return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n+  @Override\n+  public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n+    return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));\n+  }\n \n-    public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n-        return inspectionPlanServiceDaoImpl;\n-    }\n+  public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n+    return inspectionPlanServiceDaoImpl;\n+  }\n \n-    public void setInspectionPlanServiceDaoImpl(IInspectionPlanServiceDao inspectionPlanServiceDaoImpl) {\n-        this.inspectionPlanServiceDaoImpl = inspectionPlanServiceDaoImpl;\n-    }\n+  public void setInspectionPlanServiceDaoImpl(IInspectionPlanServiceDao inspectionPlanServiceDaoImpl) {\n+    this.inspectionPlanServiceDaoImpl = inspectionPlanServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/221/InspectionPlanInnerServiceSMOImpl.java\nindex cb9506f4ac..83bab88d90 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/221/InspectionPlanInnerServiceSMOImpl.java\n@@ -47,10 +47,7 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n         return inspectionPlans;\n     }\n \n-\n-\n-\n-    @Override\n+@Override\n     public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n         return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n \n@@ -69,4 +66,4 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/221/InspectionPlanInnerServiceSMOImpl.java\nindex cb9506f4ac..8af42e5b6a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/221/InspectionPlanInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.community.dao.IInspectionPlanServiceDao;\n import com.java110.dto.inspectionPlan.InspectionPlanDto;\n import com.java110.utils.util.BeanConvertUtil;\n@@ -11,7 +10,6 @@ import com.java110.dto.PageDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements IInspectionPlanInnerServiceSMO {\n \n@@ -32,12 +32,10 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<InspectionPlanDto> queryInspectionPlans(@RequestBody  InspectionPlanDto inspectionPlanDto) {\n+    public List<InspectionPlanDto> queryInspectionPlans(@RequestBody InspectionPlanDto inspectionPlanDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = inspectionPlanDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             inspectionPlanDto.setPage((page - 1) * inspectionPlanDto.getRow());\n         }\n@@ -48,11 +46,10 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n     }\n \n \n-\n-\n     @Override\n     public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n-        return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n+        return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));\n+    }\n \n     public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n         return inspectionPlanServiceDaoImpl;\n@@ -69,4 +66,4 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "114",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "43",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "68",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "45",
                    "column": "69",
                    "severity": "error",
                    "message": "'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/221/InspectionPlanInnerServiceSMOImpl.java\nindex cb9506f4ac..665a29c157 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/221/InspectionPlanInnerServiceSMOImpl.java\n@@ -41,10 +41,8 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n         if (page != PageDto.DEFAULT_PAGE) {\n             inspectionPlanDto.setPage((page - 1) * inspectionPlanDto.getRow());\n         }\n-\n-        List<InspectionPlanDto> inspectionPlans = BeanConvertUtil.covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n-\n-        return inspectionPlans;\n+            List<InspectionPlanDto> inspectionPlans = BeanConvertUtil.covertBeanList(inspectionPlanServiceDaoImpl. getInspectionPlanInfo(BeanConvertUtil\n+        .beanCovertMap(inspectionPlanDto)),InspectionPlanDto.class);return inspectionPlans;\n     }\n \n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/221/InspectionPlanInnerServiceSMOImpl.java\nindex cb9506f4ac..686e290e75 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/221/InspectionPlanInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/221/InspectionPlanInnerServiceSMOImpl.java\n@@ -40,33 +40,39 @@ public class InspectionPlanInnerServiceSMOImpl extends BaseServiceSMO implements\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             inspectionPlanDto.setPage((page - 1) * inspectionPlanDto.getRow());\n-        }\n+        } List<InspectionPlanDto>inspectionPlans\n \n-        List<InspectionPlanDto> inspectionPlans = BeanConvertUtil.covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n \n-        return inspectionPlans;\n-    }\n \n \n+        =\n \n+        BeanConvertUtil .covertBeanList(inspectionPlanServiceDaoImpl.getInspectionPlanInfo(BeanConvertUtil.beanCovertMap(inspectionPlanDto)), InspectionPlanDto.class);\n \n-    @Override\n-    public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n-        return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n+          return inspectionPlans;\n+      }\n+\n+\n+\n+\n+      @Override\n+      public int queryInspectionPlansCount(@RequestBody InspectionPlanDto inspectionPlanDto) {\n+          return inspectionPlanServiceDaoImpl.queryInspectionPlansCount(BeanConvertUtil.beanCovertMap(inspectionPlanDto));    }\n \n-    public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n-        return inspectionPlanServiceDaoImpl;\n-    }\n+      public IInspectionPlanServiceDao getInspectionPlanServiceDaoImpl() {\n+          return inspectionPlanServiceDaoImpl;\n+      }\n \n-    public void setInspectionPlanServiceDaoImpl(IInspectionPlanServiceDao inspectionPlanServiceDaoImpl) {\n-        this.inspectionPlanServiceDaoImpl = inspectionPlanServiceDaoImpl;\n-    }\n+      public void setInspectionPlanServiceDaoImpl(IInspectionPlanServiceDao inspectionPlanServiceDaoImpl) {\n+          this.inspectionPlanServiceDaoImpl = inspectionPlanServiceDaoImpl;\n+      }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 29
        }
    ]
}