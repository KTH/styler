{
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "113",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public Contracts contracts() {\n        final Contracts assigned;\n        if(this.contracts == null) {\n            assigned = this.storage.contracts().ofContributor(this);\n        } else {\n            assigned = this.contracts;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/14/StoredContributor.java\nindex 63fb289b76..2417c58b16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/14/StoredContributor.java\n@@ -110,7 +110,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "73",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/14/StoredContributor.java\nindex 63fb289b76..35adc39c33 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/14/StoredContributor.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.contributors;\n \n import com.selfxdsd.api.Contracts;\n@@ -31,14 +32,15 @@ import java.util.Objects;\n \n /**\n  * A Contributor stored in Self.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.1\n  * @todo #192:30min Method tasks() here should return the tasks with\n- *  respect ot the encapsulated Contracts. If the Contracts exist (!= null),\n- *  then the method should only return the Tasks from these contracts.\n- *  Otherwise, it should return all the Tasks of the contributor, as it\n- *  does now.\n+ * respect ot the encapsulated Contracts. If the Contracts exist (!= null),\n+ * then the method should only return the Tasks from these contracts.\n+ * Otherwise, it should return all the Tasks of the contributor, as it\n+ * does now.\n+ * @since 0.0.1\n  */\n public final class StoredContributor implements Contributor {\n \n@@ -65,9 +67,10 @@ public final class StoredContributor implements Contributor {\n \n     /**\n      * Constructor.\n+     *\n      * @param username Username.\n      * @param provider Provider.\n-     * @param storage Storage.\n+     * @param storage  Storage.\n      */\n     public StoredContributor(\n         final String username,\n@@ -80,10 +83,11 @@ public final class StoredContributor implements Contributor {\n     /**\n      * Constructor. Use this when you want to load\n      * the Contributor's Contracts eagerly.\n-     * @param username Username.\n-     * @param provider Provider.\n+     *\n+     * @param username  Username.\n+     * @param provider  Provider.\n      * @param contracts Contributor's Contracts.\n-     * @param storage Storage.\n+     * @param storage   Storage.\n      */\n     public StoredContributor(\n         final String username,\n@@ -110,7 +114,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "113",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/14/StoredContributor.java\nindex 63fb289b76..107c34028c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/14/StoredContributor.java\n@@ -137,7 +137,6 @@ public final class StoredContributor implements Contributor {\n             return false;\n         }\n         final Contributor other = (Contributor) obj;\n-        return this.username.equals(other.username())\n-            && this.provider.equals(other.provider());\n+        return this.username.equals(other.username())&& this.provider.equals(other.provider());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 34, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "'}' at column 35 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 23, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "14",
                    "severity": "error",
                    "message": "'!' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "146",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/14/StoredContributor.java\nindex 63fb289b76..cdb3a402bd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/14/StoredContributor.java\n@@ -26,7 +26,6 @@ import com.selfxdsd.api.Contracts;\n import com.selfxdsd.api.Contributor;\n import com.selfxdsd.api.Tasks;\n import com.selfxdsd.api.storage.Storage;\n-\n import java.util.Objects;\n \n /**\n@@ -40,27 +39,37 @@ import java.util.Objects;\n  *  Otherwise, it should return all the Tasks of the contributor, as it\n  *  does now.\n  */\n+\n+\n public final class StoredContributor implements Contributor {\n \n     /**\n      * Username.\n      */\n+\n+\n     private final String username;\n \n     /**\n      * Provider.\n      */\n+\n+\n     private final String provider;\n \n     /**\n      * This contributor's Contracts. If they are missing,\n      * they will be read from the storage.\n      */\n+\n+\n     private final Contracts contracts;\n \n     /**\n      * Self's Storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -69,11 +78,9 @@ public final class StoredContributor implements Contributor {\n      * @param provider Provider.\n      * @param storage Storage.\n      */\n-    public StoredContributor(\n-        final String username,\n-        final String provider,\n-        final Storage storage\n-    ) {\n+\n+\n+    public StoredContributor(final String username, final String provider, final Storage storage) {\n         this(username, provider, null, storage);\n     }\n \n@@ -85,11 +92,12 @@ public final class StoredContributor implements Contributor {\n      * @param contracts Contributor's Contracts.\n      * @param storage Storage.\n      */\n+\n+\n     public StoredContributor(\n         final String username,\n         final String provider,\n-        final Contracts contracts,\n-        final Storage storage\n+        final Contracts contracts, final Storage storage\n     ) {\n         this.username = username;\n         this.provider = provider;\n@@ -110,11 +118,13 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n-            assigned = this.storage.contracts().ofContributor(this);\n-        } else {\n-            assigned = this.contracts;\n-        }\n+        if(this.contracts== null) {\n+                                      assigned = this.storage.contracts().ofContributor(this);\n+                                  }\n+\n+else {\n+         assigned = this.contracts;\n+     }\n         return assigned;\n     }\n \n@@ -130,14 +140,15 @@ public final class StoredContributor implements Contributor {\n \n     @Override\n     public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (!(obj instanceof Contributor)) {\n-            return false;\n-        }\n-        final Contributor other = (Contributor) obj;\n-        return this.username.equals(other.username())\n-            && this.provider.equals(other.provider());\n+        if(this== obj) {\n+                           return true;\n+                       }\n+        if( ! ( obj instanceof Contributor)) {\n+                                                 return false;\n+                                             }\n+\n+        final Contributor other = ( Contributor) obj;\n+        return this.username.equals(other.username())&&\n+                   this.provider.equals(other.provider());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/14/StoredContributor.java\nindex 63fb289b76..2417c58b16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/14/StoredContributor.java\n@@ -110,7 +110,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/14/StoredContributor.java\nindex 63fb289b76..2417c58b16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/14/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/14/StoredContributor.java\n@@ -110,7 +110,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 1
        }
    ]
}