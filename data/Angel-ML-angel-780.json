{
    "error_id": "780",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/780/TVectorPoolableObjectFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/780/TVectorPoolableObjectFactory.java\nindex c5190c70dc..96eb066d96 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/780/TVectorPoolableObjectFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/780/TVectorPoolableObjectFactory.java\n@@ -20,42 +20,42 @@ import com.tencent.angel.ml.math.TVector;\n import org.apache.commons.pool.PoolableObjectFactory;\n \n public class TVectorPoolableObjectFactory<TVF extends TVectorBuilder> implements\n-    PoolableObjectFactory {\n-\n-  private final int dimension;\n-  private final TVF factory;\n-\n-  public TVectorPoolableObjectFactory(int dimension, TVF factory) {\n-    this.dimension = dimension;\n-    this.factory = factory;\n-  }\n-\n-  @Override\n-  public Object makeObject() throws Exception {\n-    TVector vector = factory.build(dimension);\n-    return vector;\n-  }\n-\n-  @Override\n-  public void destroyObject(Object obj) throws Exception {\n-    TVector vector = (TVector) obj;\n-    vector.clear();\n-  }\n-\n-  @Override\n-  public boolean validateObject(Object obj) {\n-    return true;\n-  }\n-\n-  @Override\n-  public void activateObject(Object obj) throws Exception {\n-    return;\n-  }\n-\n-  @Override\n-  public void passivateObject(Object obj) throws Exception {\n-    TVector vector = (TVector) obj;\n-    vector.clear();\n-  }\n+        PoolableObjectFactory {\n+\n+    private final int dimension;\n+    private final TVF factory;\n+\n+    public TVectorPoolableObjectFactory(int dimension, TVF factory) {\n+        this.dimension = dimension;\n+        this.factory = factory;\n+    }\n+\n+    @Override\n+    public Object makeObject() throws Exception {\n+        TVector vector = factory.build(dimension);\n+        return vector;\n+    }\n+\n+    @Override\n+    public void destroyObject(Object obj) throws Exception {\n+        TVector vector = (TVector) obj;\n+        vector.clear();\n+    }\n+\n+    @Override\n+    public boolean validateObject(Object obj) {\n+        return true;\n+    }\n+\n+    @Override\n+    public void activateObject(Object obj) throws Exception {\n+        return;\n+    }\n+\n+    @Override\n+    public void passivateObject(Object obj) throws Exception {\n+        TVector vector = (TVector) obj;\n+        vector.clear();\n+    }\n \n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/780/TVectorPoolableObjectFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/780/TVectorPoolableObjectFactory.java\nindex c5190c70dc..17859b7864 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/780/TVectorPoolableObjectFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/780/TVectorPoolableObjectFactory.java\n@@ -19,8 +19,7 @@ package com.tencent.angel.ml.math.factory;\n import com.tencent.angel.ml.math.TVector;\n import org.apache.commons.pool.PoolableObjectFactory;\n \n-public class TVectorPoolableObjectFactory<TVF extends TVectorBuilder> implements\n-    PoolableObjectFactory {\n+public class TVectorPoolableObjectFactory<TVF extends TVectorBuilder> implements PoolableObjectFactory {\n \n   private final int dimension;\n   private final TVF factory;\n@@ -58,4 +57,4 @@ public class TVectorPoolableObjectFactory<TVF extends TVectorBuilder> implements\n     vector.clear();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/780/TVectorPoolableObjectFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/780/TVectorPoolableObjectFactory.java\nindex c5190c70dc..961a7ee3f1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/780/TVectorPoolableObjectFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/780/TVectorPoolableObjectFactory.java\n@@ -19,43 +19,40 @@ package com.tencent.angel.ml.math.factory;\n import com.tencent.angel.ml.math.TVector;\n import org.apache.commons.pool.PoolableObjectFactory;\n \n-public class TVectorPoolableObjectFactory<TVF extends TVectorBuilder> implements\n-    PoolableObjectFactory {\n+public class TVectorPoolableObjectFactory<TVF extends TVectorBuilder> implements PoolableObjectFactory {\n+    private final int dimension;\n+    private final TVF factory;\n \n-  private final int dimension;\n-  private final TVF factory;\n-\n-  public TVectorPoolableObjectFactory(int dimension, TVF factory) {\n+    public TVectorPoolableObjectFactory(int dimension, TVF factory) {\n     this.dimension = dimension;\n     this.factory = factory;\n-  }\n+    }\n \n-  @Override\n-  public Object makeObject() throws Exception {\n+    @Override\n+    public Object makeObject() throws Exception {\n     TVector vector = factory.build(dimension);\n     return vector;\n-  }\n+    }\n \n-  @Override\n-  public void destroyObject(Object obj) throws Exception {\n+    @Override\n+    public void destroyObject(Object obj) throws Exception {\n     TVector vector = (TVector) obj;\n     vector.clear();\n-  }\n+    }\n \n-  @Override\n-  public boolean validateObject(Object obj) {\n+    @Override\n+    public boolean validateObject(Object obj) {\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public void activateObject(Object obj) throws Exception {\n+    @Override\n+    public void activateObject(Object obj) throws Exception {\n     return;\n-  }\n+    }\n \n-  @Override\n-  public void passivateObject(Object obj) throws Exception {\n+    @Override\n+    public void passivateObject(Object obj) throws Exception {\n     TVector vector = (TVector) obj;\n     vector.clear();\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}