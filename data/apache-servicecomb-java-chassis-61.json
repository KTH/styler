{
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "137",
                "column": "36",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "        if (BeanParamAnnotationProcessor.SUPPORTED_PARAM_ANNOTATIONS.contains(setterAnnotation.annotationType())) {\n          producerToSwaggerParamNameMapper.put(\n              methodName.substring( // setParamName() -> \"paramName\"\n                  SETTER_METHOD_PREFIX.length(), SETTER_METHOD_PREFIX.length() + 1).toLowerCase()\n                  + methodName.substring(SETTER_METHOD_PREFIX.length() + 1),\n              retrieveVisibleParamName(setterAnnotation));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/61/JaxRSProducerArgumentsMapperFactory.java\nindex d0b84cd211..3b22612643 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/61/JaxRSProducerArgumentsMapperFactory.java\n@@ -134,7 +134,7 @@ public class JaxRSProducerArgumentsMapperFactory extends ProducerArgumentsMapper\n       for (Annotation setterAnnotation : method.getAnnotations()) {\n         if (BeanParamAnnotationProcessor.SUPPORTED_PARAM_ANNOTATIONS.contains(setterAnnotation.annotationType())) {\n           producerToSwaggerParamNameMapper.put(\n-              methodName.substring( // setParamName() -> \"paramName\"\n+              methodName.substring(// setParamName() -> \"paramName\"\n                   SETTER_METHOD_PREFIX.length(), SETTER_METHOD_PREFIX.length() + 1).toLowerCase()\n                   + methodName.substring(SETTER_METHOD_PREFIX.length() + 1),\n               retrieveVisibleParamName(setterAnnotation));\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "138",
                    "column": "36",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/61/JaxRSProducerArgumentsMapperFactory.java\nindex d0b84cd211..e25d96de08 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/61/JaxRSProducerArgumentsMapperFactory.java\n@@ -48,7 +48,7 @@ public class JaxRSProducerArgumentsMapperFactory extends ProducerArgumentsMapper\n \n   @Override\n   protected Set<String> findAggregatedParamNames(Map<String, ProviderParameter> providerParamMap,\n-      Map<String, ParamWrapper<Parameter>> swaggerParamMap) {\n+                                                 Map<String, ParamWrapper<Parameter>> swaggerParamMap) {\n     Set<String> aggregatedParamNames = new HashSet<>();\n     for (Entry<String, ProviderParameter> providerParameterEntry : providerParamMap.entrySet()) {\n       if (null == providerParameterEntry.getValue().getAnnotations()) {\n@@ -67,8 +67,9 @@ public class JaxRSProducerArgumentsMapperFactory extends ProducerArgumentsMapper\n \n   @Override\n   protected void generateAggregatedParamMapper(ArgumentsMapperConfig config,\n-      Map<String, ProviderParameter> providerParamMap, Map<String, ParamWrapper<Parameter>> swaggerParamMap,\n-      Set<String> aggregatedParamNames) {\n+                                               Map<String, ProviderParameter> providerParamMap,\n+                                               Map<String, ParamWrapper<Parameter>> swaggerParamMap,\n+                                               Set<String> aggregatedParamNames) {\n     for (String aggregatedProducerParamName : aggregatedParamNames) {\n       ProviderParameter aggregatedParam = providerParamMap.get(aggregatedProducerParamName);\n       // producer param name -> swagger param name\n@@ -105,8 +106,8 @@ public class JaxRSProducerArgumentsMapperFactory extends ProducerArgumentsMapper\n    * </pre>\n    * Given a BeanParam like above, will return a map like below:\n    * {\n-   *   \"pathProducerParam\" -> \"pathSwaggerParam\",\n-   *   \"queryProducerParam\" -> \"querySwaggerParam\"\n+   * \"pathProducerParam\" -> \"pathSwaggerParam\",\n+   * \"queryProducerParam\" -> \"querySwaggerParam\"\n    * }\n    */\n   private Map<String, String> getProducerToSwaggerParamNameMap(ProviderParameter aggregatedParam) {\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/61/JaxRSProducerArgumentsMapperFactory.java\nindex d0b84cd211..3b22612643 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/61/JaxRSProducerArgumentsMapperFactory.java\n@@ -134,7 +134,7 @@ public class JaxRSProducerArgumentsMapperFactory extends ProducerArgumentsMapper\n       for (Annotation setterAnnotation : method.getAnnotations()) {\n         if (BeanParamAnnotationProcessor.SUPPORTED_PARAM_ANNOTATIONS.contains(setterAnnotation.annotationType())) {\n           producerToSwaggerParamNameMapper.put(\n-              methodName.substring( // setParamName() -> \"paramName\"\n+              methodName.substring(// setParamName() -> \"paramName\"\n                   SETTER_METHOD_PREFIX.length(), SETTER_METHOD_PREFIX.length() + 1).toLowerCase()\n                   + methodName.substring(SETTER_METHOD_PREFIX.length() + 1),\n               retrieveVisibleParamName(setterAnnotation));\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "137",
                    "column": "36",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "137",
                    "column": "37",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/61/JaxRSProducerArgumentsMapperFactory.java\nindex d0b84cd211..d913b9c14f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/61/JaxRSProducerArgumentsMapperFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/61/JaxRSProducerArgumentsMapperFactory.java\n@@ -134,7 +134,7 @@ public class JaxRSProducerArgumentsMapperFactory extends ProducerArgumentsMapper\n       for (Annotation setterAnnotation : method.getAnnotations()) {\n         if (BeanParamAnnotationProcessor.SUPPORTED_PARAM_ANNOTATIONS.contains(setterAnnotation.annotationType())) {\n           producerToSwaggerParamNameMapper.put(\n-              methodName.substring( // setParamName() -> \"paramName\"\n+              methodName.substring ( // setParamName() -> \"paramName\"\n                   SETTER_METHOD_PREFIX.length(), SETTER_METHOD_PREFIX.length() + 1).toLowerCase()\n                   + methodName.substring(SETTER_METHOD_PREFIX.length() + 1),\n               retrieveVisibleParamName(setterAnnotation));\n",
            "diff_size": 1
        }
    ]
}