{
    "error_id": "108",
    "information": {
        "errors": [
            {
                "line": "64",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public EntityDescriptor decode(InputStream inStream) throws CoderException, IOException {\n    return repo().getEntity(STRING_CODER.decode(inStream));\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/108/EntityDescriptorCoder.java\nindex 31a8484e4b..06bf70de4b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/108/EntityDescriptorCoder.java\n@@ -61,7 +61,7 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n   }\n \n   @Override\n-  public EntityDescriptor decode(InputStream inStream) throws CoderException, IOException {\n+  public EntityDescriptordecode(InputStream inStream) throws CoderException, IOException {\n     return repo().getEntity(STRING_CODER.decode(inStream));\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/108/EntityDescriptorCoder.java\nindex 31a8484e4b..cd6878fac8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/108/EntityDescriptorCoder.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core.io;\n \n import cz.o2.proxima.repository.EntityDescriptor;\n@@ -61,7 +62,8 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n   }\n \n   @Override\n-  public EntityDescriptor decode(InputStream inStream) throws CoderException, IOException {\n+  public EntityDescriptor decode(InputStream inStream)\n+      throws CoderException, IOException {\n     return repo().getEntity(STRING_CODER.decode(inStream));\n   }\n \n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/108/EntityDescriptorCoder.java\nindex 31a8484e4b..bbc9066524 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/108/EntityDescriptorCoder.java\n@@ -57,7 +57,7 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n   @Override\n   public void encode(EntityDescriptor value, OutputStream outStream)\n       throws CoderException, IOException {\n-    STRING_CODER.encode(value.getName(), outStream);\n+  STRING_CODER.encode(value.getName(), outStream);\n   }\n \n   @Override\n@@ -69,4 +69,4 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n   public TypeDescriptor<EntityDescriptor> getEncodedTypeDescriptor() {\n     return TypeDescriptor.of(EntityDescriptor.class);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/108/EntityDescriptorCoder.java\nindex 31a8484e4b..34fe86ac87 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/108/EntityDescriptorCoder.java\n@@ -26,6 +26,7 @@ import org.apache.beam.sdk.coders.CoderException;\n import org.apache.beam.sdk.coders.StringUtf8Coder;\n import org.apache.beam.sdk.values.TypeDescriptor;\n \n+\n public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescriptor> {\n \n   /**\n@@ -34,9 +35,10 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n    * @param repo the repository\n    * @return the coder\n    */\n-  public static EntityDescriptorCoder of(Repository repo) {\n+\n+    public static EntityDescriptorCoder of(Repository repo) {\n     return of(repo.asFactory());\n-  }\n+    }\n \n   /**\n    * Construct the coder from repository factory\n@@ -44,29 +46,29 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n    * @param factory the factory\n    * @return the coder\n    */\n-  public static EntityDescriptorCoder of(RepositoryFactory factory) {\n+\n+    public static EntityDescriptorCoder of(RepositoryFactory factory) {\n     return new EntityDescriptorCoder(factory);\n-  }\n+    }\n \n-  private static final Coder<String> STRING_CODER = StringUtf8Coder.of();\n+    private static final Coder<String> STRING_CODER = StringUtf8Coder.of();\n \n-  private EntityDescriptorCoder(RepositoryFactory repositoryFactory) {\n+    private EntityDescriptorCoder(RepositoryFactory repositoryFactory) {\n     super(repositoryFactory);\n-  }\n+    }\n \n-  @Override\n-  public void encode(EntityDescriptor value, OutputStream outStream)\n-      throws CoderException, IOException {\n+    @Override\n+    public void encode(EntityDescriptor value, OutputStream outStream) throws CoderException, IOException {\n     STRING_CODER.encode(value.getName(), outStream);\n-  }\n+    }\n \n-  @Override\n-  public EntityDescriptor decode(InputStream inStream) throws CoderException, IOException {\n+    @Override\n+    public EntityDescriptor decode(InputStream inStream) throws CoderException, IOException {\n     return repo().getEntity(STRING_CODER.decode(inStream));\n-  }\n+    }\n \n-  @Override\n-  public TypeDescriptor<EntityDescriptor> getEncodedTypeDescriptor() {\n+    @Override\n+    public TypeDescriptor<EntityDescriptor> getEncodedTypeDescriptor() {\n     return TypeDescriptor.of(EntityDescriptor.class);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/108/EntityDescriptorCoder.java\nindex 31a8484e4b..06bf70de4b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/108/EntityDescriptorCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/108/EntityDescriptorCoder.java\n@@ -61,7 +61,7 @@ public class EntityDescriptorCoder extends AbstractRepositoryCoder<EntityDescrip\n   }\n \n   @Override\n-  public EntityDescriptor decode(InputStream inStream) throws CoderException, IOException {\n+  public EntityDescriptordecode(InputStream inStream) throws CoderException, IOException {\n     return repo().getEntity(STRING_CODER.decode(inStream));\n   }\n \n",
            "diff_size": 1
        }
    ]
}