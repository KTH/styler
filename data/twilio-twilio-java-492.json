{
    "error_id": "492",
    "information": {
        "errors": [
            {
                "line": "233",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/492/WorkerReader.java\nindex e699361c7c..1b3c8bfc92 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/492/WorkerReader.java\n@@ -230,7 +230,7 @@ public class WorkerReader extends Reader<Worker> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/492/WorkerReader.java\nindex e699361c7c..c71a988788 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/492/WorkerReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.taskrouter.v1.workspace;\n@@ -230,7 +230,7 @@ public class WorkerReader extends Reader<Worker> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/492/WorkerReader.java\nindex e699361c7c..a5d1f0b008 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/492/WorkerReader.java\n@@ -34,6 +34,8 @@ public class WorkerReader extends Reader<Worker> {\n      *\n      * @param pathWorkspaceSid The SID of the Workspace with the Workers to read\n      */\n+\n+\n     public WorkerReader(final String pathWorkspaceSid) {\n         this.pathWorkspaceSid = pathWorkspaceSid;\n     }\n@@ -44,6 +46,8 @@ public class WorkerReader extends Reader<Worker> {\n      * @param activityName The activity_name of the Worker resources to read\n      * @return this\n      */\n+\n+\n     public WorkerReader setActivityName(final String activityName) {\n         this.activityName = activityName;\n         return this;\n@@ -55,6 +59,8 @@ public class WorkerReader extends Reader<Worker> {\n      * @param activitySid The activity_sid of the Worker resources to read\n      * @return this\n      */\n+\n+\n     public WorkerReader setActivitySid(final String activitySid) {\n         this.activitySid = activitySid;\n         return this;\n@@ -70,6 +76,8 @@ public class WorkerReader extends Reader<Worker> {\n      *                  unavailable\n      * @return this\n      */\n+\n+\n     public WorkerReader setAvailable(final String available) {\n         this.available = available;\n         return this;\n@@ -81,6 +89,8 @@ public class WorkerReader extends Reader<Worker> {\n      * @param friendlyName The friendly_name of the Worker resources to read\n      * @return this\n      */\n+\n+\n     public WorkerReader setFriendlyName(final String friendlyName) {\n         this.friendlyName = friendlyName;\n         return this;\n@@ -94,6 +104,8 @@ public class WorkerReader extends Reader<Worker> {\n      *                                expression on a TaskQueue\n      * @return this\n      */\n+\n+\n     public WorkerReader setTargetWorkersExpression(final String targetWorkersExpression) {\n         this.targetWorkersExpression = targetWorkersExpression;\n         return this;\n@@ -107,6 +119,8 @@ public class WorkerReader extends Reader<Worker> {\n      *                      read are eligible for\n      * @return this\n      */\n+\n+\n     public WorkerReader setTaskQueueName(final String taskQueueName) {\n         this.taskQueueName = taskQueueName;\n         return this;\n@@ -119,6 +133,8 @@ public class WorkerReader extends Reader<Worker> {\n      *                     eligible for\n      * @return this\n      */\n+\n+\n     public WorkerReader setTaskQueueSid(final String taskQueueSid) {\n         this.taskQueueSid = taskQueueSid;\n         return this;\n@@ -130,6 +146,8 @@ public class WorkerReader extends Reader<Worker> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Worker ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Worker> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -141,6 +159,8 @@ public class WorkerReader extends Reader<Worker> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Worker ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Worker> firstPage(final TwilioRestClient client) {\n@@ -149,7 +169,7 @@ public class WorkerReader extends Reader<Worker> {\n             Domains.TASKROUTER.toString(),\n             \"/v1/Workspaces/\" + this.pathWorkspaceSid + \"/Workers\",\n             client.getRegion()\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -162,14 +182,13 @@ public class WorkerReader extends Reader<Worker> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Worker ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Worker> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Worker> getPage(final String targetUrl,\n+                                final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -180,16 +199,15 @@ public class WorkerReader extends Reader<Worker> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Worker> nextPage(final Page<Worker> page,\n                                  final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.TASKROUTER.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getNextPageUrl(Domains.TASKROUTER.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -200,16 +218,15 @@ public class WorkerReader extends Reader<Worker> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Worker> previousPage(final Page<Worker> page,\n                                      final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.TASKROUTER.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getPreviousPageUrl(Domains.TASKROUTER.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -220,9 +237,11 @@ public class WorkerReader extends Reader<Worker> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Worker> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Worker> pageForRequest(final TwilioRestClient client,\n+                                        final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Worker read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -230,15 +249,11 @@ public class WorkerReader extends Reader<Worker> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"workers\",\n-            response.getContent(),\n-            Worker.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"workers\", response.getContent(), Worker.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -246,6 +261,8 @@ public class WorkerReader extends Reader<Worker> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (activityName != null) {\n             request.addQueryParam(\"ActivityName\", activityName);\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/492/WorkerReader.java\nindex e699361c7c..1b3c8bfc92 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/492/WorkerReader.java\n@@ -230,7 +230,7 @@ public class WorkerReader extends Reader<Worker> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/492/WorkerReader.java\nindex e699361c7c..c6466bf25b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/492/WorkerReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/492/WorkerReader.java\n@@ -230,7 +230,8 @@ public class WorkerReader extends Reader<Worker> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}