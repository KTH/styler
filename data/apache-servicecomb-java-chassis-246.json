{
    "error_id": "246",
    "information": {
        "errors": [
            {
                "line": "187",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    DynamicIntProperty property =\n        DynamicPropertyFactory.getInstance()\n            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n    int timeout = property.get();\n    return timeout < 1 ? DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS : timeout;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/246/ServiceRegistryConfig.java\nindex 23824a8005..3af2e8c3d6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/246/ServiceRegistryConfig.java\n@@ -184,7 +184,7 @@ public final class ServiceRegistryConfig {\n   public int getHeartBeatRequestTimeout() {\n     DynamicIntProperty property =\n         DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n+        .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n     int timeout = property.get();\n     return timeout < 1 ? DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS : timeout;\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/246/ServiceRegistryConfig.java\nindex 23824a8005..f461c259b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/246/ServiceRegistryConfig.java\n@@ -184,7 +184,8 @@ public final class ServiceRegistryConfig {\n   public int getHeartBeatRequestTimeout() {\n     DynamicIntProperty property =\n         DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n+            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\",\n+                DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n     int timeout = property.get();\n     return timeout < 1 ? DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS : timeout;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/246/ServiceRegistryConfig.java\nindex 23824a8005..fb6aaaf2e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/246/ServiceRegistryConfig.java\n@@ -86,13 +86,11 @@ public final class ServiceRegistryConfig {\n \n   public static final String PROXY_PASSWD = PROXY_PRE_NAME + \"passwd\";\n \n-\n-  private ServiceRegistryConfig() {\n+private ServiceRegistryConfig() {\n \n   }\n \n-\n-  public String getMicroserviceVersionFactory() {\n+public String getMicroserviceVersionFactory() {\n     return DynamicPropertyFactory.getInstance().getStringProperty(MICROSERVICE_VERSION_FACTORY, null).get();\n   }\n \n@@ -315,4 +313,4 @@ public final class ServiceRegistryConfig {\n       return defaultValue;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "188",
                    "column": "48",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "50",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "188",
                    "column": "63",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/246/ServiceRegistryConfig.java\nindex 23824a8005..90e8f668b0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/246/ServiceRegistryConfig.java\n@@ -184,135 +184,136 @@ public final class ServiceRegistryConfig {\n   public int getHeartBeatRequestTimeout() {\n     DynamicIntProperty property =\n         DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n-    int timeout = property.get();\n-    return timeout < 1 ? DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS : timeout;\n-  }\n-\n-  public int getHeartbeatInterval() {\n-    DynamicIntProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.instance.healthCheck.interval\",\n-                DEFAULT_CHECK_INTERVAL_IN_S);\n-    int interval = property.get();\n-    return interval < 0 ? DEFAULT_CHECK_INTERVAL_IN_S : interval;\n-  }\n-\n-  public int getInstancePullInterval() {\n-    DynamicIntProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.instance.pull.interval\",\n-                DEFAULT_CHECK_INTERVAL_IN_S);\n-    int interval = property.get();\n-    return interval < 0 ? DEFAULT_CHECK_INTERVAL_IN_S : interval;\n-  }\n-\n-  public boolean isRegistryAutoDiscovery() {\n-    DynamicBooleanProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getBooleanProperty(\"servicecomb.service.registry.autodiscovery\",\n-                false);\n-    return property.get();\n-  }\n-\n-  public int getResendHeartBeatTimes() {\n-    DynamicIntProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.instance.healthCheck.times\",\n-                DEFAULT_CHECK_TIMES);\n-    int times = property.get();\n-    return times < 0 ? DEFAULT_CHECK_TIMES : times;\n-  }\n-\n-  public boolean isEmptyInstanceProtectionEnabled() {\n-    DynamicBooleanProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getBooleanProperty(\"servicecomb.service.registry.instance.empty.protection\",\n-                true);\n-    return property.get();\n-  }\n-\n-  public boolean isPreferIpAddress() {\n-    DynamicBooleanProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getBooleanProperty(\"servicecomb.service.registry.instance.preferIpAddress\",\n-                false);\n-    return property.get();\n-  }\n-\n-  public boolean isWatch() {\n-    DynamicBooleanProperty property =\n-        DynamicPropertyFactory.getInstance()\n-            .getBooleanProperty(\"servicecomb.service.registry.instance.watch\",\n-                true);\n-    return property.get();\n-  }\n-\n-  public boolean isClientAuthEnabled() {\n-    String isAuthEnabled = getProperty(\"false\", AUTH_ENABLED);\n-    return Boolean.parseBoolean(isAuthEnabled);\n-  }\n-\n-  public String getRegistryApiVersion() {\n-    return getProperty(\"v4\", REGISTRY_API_VERSION);\n-  }\n-\n-  public String getTenantName() {\n-    return getProperty(NO_TENANT, TENANT_NAME);\n-  }\n-\n-  public String getDomainName() {\n-    return getProperty(NO_DOMAIN, DOMAIN_NAME);\n-  }\n-\n-  public String getAccessKey() {\n-    String tenantName = getProperty(null, TENANT_ACCESS_KEY);\n-    return tenantName;\n-  }\n-\n-  public String getSecretKey() {\n-    String tenantName = getProperty(null, TENANT_SECRET_KEY);\n-    return tenantName;\n-  }\n-\n-  public Boolean isProxyEnable() {\n-    String enable = getProperty(\"false\", PROXY_ENABLE);\n-    return Boolean.parseBoolean(enable);\n-  }\n-\n-  public String getProxyHost() {\n-    String host = getProperty(\"127.0.0.1\", PROXY_HOST);\n-    return host;\n-  }\n-\n-  public int getProxyPort() {\n-    String port = getProperty(\"8080\", PROXY_PORT);\n-    return Integer.parseInt(port);\n-  }\n-\n-  public String getProxyUsername() {\n-    String username = getProperty(\"user\", PROXY_USERNAME);\n-    return username;\n-  }\n-\n-  public String getProxyPasswd() {\n-    String passwd = getProperty(\"passwd\", PROXY_PASSWD);\n-    return passwd;\n-  }\n-\n-  private String getProperty(String defaultValue, String... keys) {\n-    String property = null;\n-    for (String key : keys) {\n-      property = DynamicPropertyFactory.getInstance().getStringProperty(key, null).get();\n-      if (property != null) {\n-        break;\n-      }\n-    }\n-\n-    if (property != null) {\n-      return property;\n-    } else {\n-      return defaultValue;\n-    }\n-  }\n-}\n+            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\",\n+        DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS ) ; inttimeout= property.get();\n+             return timeout < 1 ? DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS : timeout;\n+           }\n+\n+           public int getHeartbeatInterval() {\n+             DynamicIntProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getIntProperty(\"servicecomb.service.registry.instance.healthCheck.interval\",\n+                         DEFAULT_CHECK_INTERVAL_IN_S);\n+             int interval = property.get();\n+             return interval < 0 ? DEFAULT_CHECK_INTERVAL_IN_S : interval;\n+           }\n+\n+           public int getInstancePullInterval() {\n+             DynamicIntProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getIntProperty(\"servicecomb.service.registry.instance.pull.interval\",\n+                         DEFAULT_CHECK_INTERVAL_IN_S);\n+             int interval = property.get();\n+             return interval < 0 ? DEFAULT_CHECK_INTERVAL_IN_S : interval;\n+           }\n+\n+           public boolean isRegistryAutoDiscovery() {\n+             DynamicBooleanProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getBooleanProperty(\"servicecomb.service.registry.autodiscovery\",\n+                         false);\n+             return property.get();\n+           }\n+\n+           public int getResendHeartBeatTimes() {\n+             DynamicIntProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getIntProperty(\"servicecomb.service.registry.instance.healthCheck.times\",\n+                         DEFAULT_CHECK_TIMES);\n+             int times = property.get();\n+             return times < 0 ? DEFAULT_CHECK_TIMES : times;\n+           }\n+\n+           public boolean isEmptyInstanceProtectionEnabled() {\n+             DynamicBooleanProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getBooleanProperty(\"servicecomb.service.registry.instance.empty.protection\",\n+                         true);\n+             return property.get();\n+           }\n+\n+           public boolean isPreferIpAddress() {\n+             DynamicBooleanProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getBooleanProperty(\"servicecomb.service.registry.instance.preferIpAddress\",\n+                         false);\n+             return property.get();\n+           }\n+\n+           public boolean isWatch() {\n+             DynamicBooleanProperty property =\n+                 DynamicPropertyFactory.getInstance()\n+                     .getBooleanProperty(\"servicecomb.service.registry.instance.watch\",\n+                         true);\n+             return property.get();\n+           }\n+\n+           public boolean isClientAuthEnabled() {\n+             String isAuthEnabled = getProperty(\"false\", AUTH_ENABLED);\n+             return Boolean.parseBoolean(isAuthEnabled);\n+           }\n+\n+           public String getRegistryApiVersion() {\n+             return getProperty(\"v4\", REGISTRY_API_VERSION);\n+           }\n+\n+           public String getTenantName() {\n+             return getProperty(NO_TENANT, TENANT_NAME);\n+           }\n+\n+           public String getDomainName() {\n+             return getProperty(NO_DOMAIN, DOMAIN_NAME);\n+           }\n+\n+           public String getAccessKey() {\n+             String tenantName = getProperty(null, TENANT_ACCESS_KEY);\n+             return tenantName;\n+           }\n+\n+           public String getSecretKey() {\n+             String tenantName = getProperty(null, TENANT_SECRET_KEY);\n+             return tenantName;\n+           }\n+\n+           public Boolean isProxyEnable() {\n+             String enable = getProperty(\"false\", PROXY_ENABLE);\n+             return Boolean.parseBoolean(enable);\n+           }\n+\n+           public String getProxyHost() {\n+             String host = getProperty(\"127.0.0.1\", PROXY_HOST);\n+             return host;\n+           }\n+\n+           public int getProxyPort() {\n+             String port = getProperty(\"8080\", PROXY_PORT);\n+             return Integer.parseInt(port);\n+           }\n+\n+           public String getProxyUsername() {\n+             String username = getProperty(\"user\", PROXY_USERNAME);\n+             return username;\n+           }\n+\n+           public String getProxyPasswd() {\n+             String passwd = getProperty(\"passwd\", PROXY_PASSWD);\n+             return passwd;\n+           }\n+\n+           private String getProperty(String defaultValue, String... keys) {\n+             String property = null;\n+             for (String key : keys) {\n+               property = DynamicPropertyFactory.getInstance().getStringProperty(key, null).get();\n+               if (property != null) {\n+                 break;\n+               }\n+             }\n+\n+             if (property != null) {\n+               return property;\n+             } else {\n+               return defaultValue;\n+             }\n+           }\n+         }\n+         \n\\ No newline at end of file\n",
            "diff_size": 133
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/246/ServiceRegistryConfig.java\nindex 23824a8005..3af2e8c3d6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/246/ServiceRegistryConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/246/ServiceRegistryConfig.java\n@@ -184,7 +184,7 @@ public final class ServiceRegistryConfig {\n   public int getHeartBeatRequestTimeout() {\n     DynamicIntProperty property =\n         DynamicPropertyFactory.getInstance()\n-            .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n+        .getIntProperty(\"servicecomb.service.registry.client.timeout.heartbeat\", DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS);\n     int timeout = property.get();\n     return timeout < 1 ? DEFAULT_REQUEST_HEARTBEAT_TIMEOUT_IN_MS : timeout;\n   }\n",
            "diff_size": 1
        }
    ]
}