{
    "error_id": "150",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 85).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * The field or method to which this annotation is applied is marked as experimental.\n */\n@Documented\n@Target({ElementType.METHOD, ElementType.TYPE})",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler/150/Experimental.java\nindex e1672278c6..85c819d3eb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler/150/Experimental.java\n@@ -1,42 +1,42 @@\n-/*\r\n- * ====================================================================\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- * ====================================================================\r\n- *\r\n- * This software consists of voluntary contributions made by many\r\n- * individuals on behalf of the Apache Software Foundation.  For more\r\n- * information on the Apache Software Foundation, please see\r\n- * <http://www.apache.org/>.\r\n- *\r\n- */\r\n-package org.apache.http.annotation;\r\n-\r\n-import java.lang.annotation.Documented;\r\n-import java.lang.annotation.ElementType;\r\n-import java.lang.annotation.Retention;\r\n-import java.lang.annotation.RetentionPolicy;\r\n-import java.lang.annotation.Target;\r\n-\r\n-/**\r\n- * The field or method to which this annotation is applied is marked as experimental.\r\n- */\r\n-@Documented\r\n-@Target({ElementType.METHOD, ElementType.TYPE})\r\n-@Retention(RetentionPolicy.CLASS)\r\n-public @interface Experimental {\r\n-}\r\n+/*\n+ * ====================================================================\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.http.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The field or method to which this annotation is applied is marked as experimental.\n+ */\n+@Documented\n+@Target({ElementType.METHOD, ElementType.TYPE})\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Experimental {\n+}\n",
            "diff_size": 42
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/intellij/150/Experimental.java\nindex e1672278c6..615c2099b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/intellij/150/Experimental.java\n@@ -24,6 +24,7 @@\n  * <http://www.apache.org/>.\r\n  *\r\n  */\r\n+\r\n package org.apache.http.annotation;\r\n \r\n import java.lang.annotation.Documented;\r\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/naturalize/150/Experimental.java\nindex e1672278c6..db3afb6db5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/naturalize/150/Experimental.java\n@@ -39,4 +39,4 @@ import java.lang.annotation.Target;\n @Target({ElementType.METHOD, ElementType.TYPE})\r\n @Retention(RetentionPolicy.CLASS)\r\n public @interface Experimental {\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/codebuff/150/Experimental.java\nindex e1672278c6..b67a936100 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/codebuff/150/Experimental.java\n@@ -24,19 +24,21 @@\n  * <http://www.apache.org/>.\r\n  *\r\n  */\r\n-package org.apache.http.annotation;\r\n-\r\n-import java.lang.annotation.Documented;\r\n-import java.lang.annotation.ElementType;\r\n-import java.lang.annotation.Retention;\r\n-import java.lang.annotation.RetentionPolicy;\r\n+package org.apache.http.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\r\n \r\n /**\r\n  * The field or method to which this annotation is applied is marked as experimental.\r\n- */\r\n-@Documented\r\n-@Target({ElementType.METHOD, ElementType.TYPE})\r\n-@Retention(RetentionPolicy.CLASS)\r\n-public @interface Experimental {\r\n-}\r\n+ */\n+\n+\n+@Documented\n+@Target({ElementType.METHOD, ElementType.TYPE})\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Experimental {\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_random/150/Experimental.java\nindex e1672278c6..85c819d3eb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_random/150/Experimental.java\n@@ -1,42 +1,42 @@\n-/*\r\n- * ====================================================================\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- * ====================================================================\r\n- *\r\n- * This software consists of voluntary contributions made by many\r\n- * individuals on behalf of the Apache Software Foundation.  For more\r\n- * information on the Apache Software Foundation, please see\r\n- * <http://www.apache.org/>.\r\n- *\r\n- */\r\n-package org.apache.http.annotation;\r\n-\r\n-import java.lang.annotation.Documented;\r\n-import java.lang.annotation.ElementType;\r\n-import java.lang.annotation.Retention;\r\n-import java.lang.annotation.RetentionPolicy;\r\n-import java.lang.annotation.Target;\r\n-\r\n-/**\r\n- * The field or method to which this annotation is applied is marked as experimental.\r\n- */\r\n-@Documented\r\n-@Target({ElementType.METHOD, ElementType.TYPE})\r\n-@Retention(RetentionPolicy.CLASS)\r\n-public @interface Experimental {\r\n-}\r\n+/*\n+ * ====================================================================\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.http.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The field or method to which this annotation is applied is marked as experimental.\n+ */\n+@Documented\n+@Target({ElementType.METHOD, ElementType.TYPE})\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Experimental {\n+}\n",
            "diff_size": 42
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_three_grams/150/Experimental.java\nindex e1672278c6..b1c965a021 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/errored/1/150/Experimental.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ibinti-bugvm/styler_three_grams/150/Experimental.java\n@@ -1,42 +1,39 @@\n-/*\r\n- * ====================================================================\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- * ====================================================================\r\n- *\r\n- * This software consists of voluntary contributions made by many\r\n- * individuals on behalf of the Apache Software Foundation.  For more\r\n- * information on the Apache Software Foundation, please see\r\n- * <http://www.apache.org/>.\r\n- *\r\n- */\r\n-package org.apache.http.annotation;\r\n-\r\n-import java.lang.annotation.Documented;\r\n-import java.lang.annotation.ElementType;\r\n-import java.lang.annotation.Retention;\r\n-import java.lang.annotation.RetentionPolicy;\r\n-import java.lang.annotation.Target;\r\n-\r\n-/**\r\n- * The field or method to which this annotation is applied is marked as experimental.\r\n- */\r\n-@Documented\r\n-@Target({ElementType.METHOD, ElementType.TYPE})\r\n-@Retention(RetentionPolicy.CLASS)\r\n-public @interface Experimental {\r\n-}\r\n+/*\n+ * ====================================================================\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.http.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target; /**\n+ * The field or method to which this annotation is applied is marked as experimental.\n+ */@Documented\n+@Target({ElementType.METHOD, ElementType.TYPE})\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Experimental {\n+}\n",
            "diff_size": 42
        }
    ]
}