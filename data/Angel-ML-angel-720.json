{
    "error_id": "720",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/720/MyThreadPool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/720/MyThreadPool.java\nindex adb28d1dab..6e52180ca0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/720/MyThreadPool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/720/MyThreadPool.java\n@@ -27,21 +27,21 @@ import java.util.concurrent.Executors;\n  */\n public class MyThreadPool {\n \n-  private static Log logger = LogFactory.getLog(MyThreadPool.class);\n-  private final ExecutorService pool;\n-\n-  public MyThreadPool(int maxThreadNum) {\n-    this.pool = Executors.newFixedThreadPool(maxThreadNum);\n-  }\n-\n-  /**\n-   * Gets thread pool.\n-   *\n-   * @return the pool\n-   */\n-  public ExecutorService getPool() {\n-    return pool;\n-  }\n+    private static Log logger = LogFactory.getLog(MyThreadPool.class);\n+    private final ExecutorService pool;\n+\n+    public MyThreadPool(int maxThreadNum) {\n+        this.pool = Executors.newFixedThreadPool(maxThreadNum);\n+    }\n+\n+    /**\n+     * Gets thread pool.\n+     *\n+     * @return the pool\n+     */\n+    public ExecutorService getPool() {\n+        return pool;\n+    }\n }\n \n \n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 42.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/720/MyThreadPool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/720/MyThreadPool.java\nindex adb28d1dab..08678a0a0c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/720/MyThreadPool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/720/MyThreadPool.java\n@@ -18,31 +18,29 @@ package com.tencent.angel.ml.algorithm.utils;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n \n /**\n  * Description: Thread pool\n  */\n-public class MyThreadPool {\n \n-  private static Log logger = LogFactory.getLog(MyThreadPool.class);\n-  private final ExecutorService pool;\n+public class MyThreadPool {\n+    private static Log logger = LogFactory.getLog(MyThreadPool.class);\n+    private final ExecutorService pool;\n \n-  public MyThreadPool(int maxThreadNum) {\n+    public MyThreadPool(int maxThreadNum) {\n     this.pool = Executors.newFixedThreadPool(maxThreadNum);\n-  }\n+    }\n \n   /**\n    * Gets thread pool.\n    *\n    * @return the pool\n    */\n-  public ExecutorService getPool() {\n-    return pool;\n-  }\n-}\n \n+    public ExecutorService getPool() {\n+    return pool;\n+    }\n \n-// ~ Formatted by Jindent --- http://www.jindent.com\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}