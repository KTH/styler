{
    "error_id": "214",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/214/CompLongDoubleVectorSplitter.java\nindex 70b5f60b42..9f4e64c256 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/214/CompLongDoubleVectorSplitter.java\n@@ -33,16 +33,16 @@ import java.util.Map;\n  */\n public class CompLongDoubleVectorSplitter implements ISplitter {\n \n-  @Override\n-  public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n-    LongDoubleVector[] vecParts = ((CompLongDoubleVector) vector).getPartitions();\n-    assert vecParts.length == parts.size();\n+    @Override\n+    public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n+        LongDoubleVector[] vecParts = ((CompLongDoubleVector) vector).getPartitions();\n+        assert vecParts.length == parts.size();\n \n-    Map<PartitionKey, RowUpdateSplit> updateSplitMap = new HashMap<>(parts.size());\n-    for (int i = 0; i < vecParts.length; i++) {\n-      updateSplitMap.put(parts.get(i),\n-          new CompLongDoubleRowUpdateSplit(vector.getRowId(), vecParts[i]));\n+        Map<PartitionKey, RowUpdateSplit> updateSplitMap = new HashMap<>(parts.size());\n+        for (int i = 0; i < vecParts.length; i++) {\n+            updateSplitMap.put(parts.get(i),\n+                    new CompLongDoubleRowUpdateSplit(vector.getRowId(), vecParts[i]));\n+        }\n+        return updateSplitMap;\n     }\n-    return updateSplitMap;\n-  }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/214/CompLongDoubleVectorSplitter.java\nindex 70b5f60b42..677623537c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/214/CompLongDoubleVectorSplitter.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache.splitter;\n \n import com.tencent.angel.PartitionKey;\n@@ -32,7 +31,6 @@ import java.util.Map;\n  * Component long key double value vector splitter\n  */\n public class CompLongDoubleVectorSplitter implements ISplitter {\n-\n   @Override\n   public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n     LongDoubleVector[] vecParts = ((CompLongDoubleVector) vector).getPartitions();\n@@ -40,9 +38,8 @@ public class CompLongDoubleVectorSplitter implements ISplitter {\n \n     Map<PartitionKey, RowUpdateSplit> updateSplitMap = new HashMap<>(parts.size());\n     for (int i = 0; i < vecParts.length; i++) {\n-      updateSplitMap.put(parts.get(i),\n-          new CompLongDoubleRowUpdateSplit(vector.getRowId(), vecParts[i]));\n-    }\n+      updateSplitMap.put(parts.get(i), new CompLongDoubleRowUpdateSplit(vector.getRowId(), vecParts[i]));\n+  }\n     return updateSplitMap;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/214/CompLongDoubleVectorSplitter.java\nindex 70b5f60b42..fffd0e7e91 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/214/CompLongDoubleVectorSplitter.java\n@@ -31,18 +31,19 @@ import java.util.Map;\n /**\n  * Component long key double value vector splitter\n  */\n+\n public class CompLongDoubleVectorSplitter implements ISplitter {\n \n-  @Override\n-  public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n+\n+    @Override\n+    public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n     LongDoubleVector[] vecParts = ((CompLongDoubleVector) vector).getPartitions();\n     assert vecParts.length == parts.size();\n-\n     Map<PartitionKey, RowUpdateSplit> updateSplitMap = new HashMap<>(parts.size());\n     for (int i = 0; i < vecParts.length; i++) {\n-      updateSplitMap.put(parts.get(i),\n-          new CompLongDoubleRowUpdateSplit(vector.getRowId(), vecParts[i]));\n+        updateSplitMap.put(parts.get(i), new CompLongDoubleRowUpdateSplit(vector.getRowId(), vecParts[i]));\n     }\n     return updateSplitMap;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/214/CompLongDoubleVectorSplitter.java\nindex 70b5f60b42..9c85076f82 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/214/CompLongDoubleVectorSplitter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/214/CompLongDoubleVectorSplitter.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache.splitter;\n \n import com.tencent.angel.PartitionKey;\n",
            "diff_size": 1
        }
    ]
}