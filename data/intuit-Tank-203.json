{
    "error_id": "203",
    "information": {
        "errors": [
            {
                "line": "62",
                "column": "67",
                "severity": "warning",
                "message": "'?' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     * @return users\n     */\n    public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n        return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/203/JobUtil.java\nindex 9af6cddc82..b43c689bdf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/203/JobUtil.java\n@@ -59,7 +59,7 @@ public final class JobUtil {\n      * \n      * @return users\n      */\n-    public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n+    public static final int calculateTotalVirtualUsers(Collection< ? extends RegionRequest> jobRegions) {\n         return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "62",
                    "column": "65",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/203/JobUtil.java\nindex 9af6cddc82..ee2610fad3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/203/JobUtil.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.vm.vmManager;\n \n /*\n@@ -23,44 +24,43 @@ import org.apache.logging.log4j.Logger;\n \n /**\n  * JobUtil\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public final class JobUtil {\n \n-    private static final Logger LOG = LogManager.getLogger(JobUtil.class);\n+  private static final Logger LOG = LogManager.getLogger(JobUtil.class);\n \n-    /**\n-     * private constructor to implement util\n-     */\n-    private JobUtil() {\n+  /**\n+   * private constructor to implement util\n+   */\n+  private JobUtil() {\n \n-    }\n+  }\n \n-    /**\n-     * @param users\n-     * @param total\n-     * @return users\n-     */\n-    public static final int parseUserString(String users) {\n-        int result = 0;\n-        String u = users.trim();\n-        try {\n-            result = Integer.valueOf(u);\n-        } catch (NumberFormatException e) {\n-            LOG.error(\"Error parsing number of users value of \" + users);\n-        }\n-        return result;\n+  /**\n+   * @param users\n+   * @param total\n+   * @return users\n+   */\n+  public static final int parseUserString(String users) {\n+    int result = 0;\n+    String u = users.trim();\n+    try {\n+      result = Integer.valueOf(u);\n+    } catch (NumberFormatException e) {\n+      LOG.error(\"Error parsing number of users value of \" + users);\n     }\n+    return result;\n+  }\n \n-    /**\n-     * calculates total number of virtual users by summing the regions.\n-     * \n-     * @return users\n-     */\n-    public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n-        return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n-    }\n+  /**\n+   * calculates total number of virtual users by summing the regions.\n+   *\n+   * @return users\n+   */\n+  public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n+    return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n+  }\n \n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "62",
                    "column": "67",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/203/JobUtil.java\nindex 9af6cddc82..6fa371822b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/203/JobUtil.java\n@@ -63,4 +63,4 @@ public final class JobUtil {\n         return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "68",
                    "column": "67",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/203/JobUtil.java\nindex 9af6cddc82..fe53f37e4d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/203/JobUtil.java\n@@ -16,8 +16,9 @@ package com.intuit.tank.vm.vmManager;\n  * #L%\n  */\n \n-import java.util.Collection;\n \n+\n+import java.util.Collection;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n \n@@ -27,6 +28,7 @@ import org.apache.logging.log4j.Logger;\n  * @author dangleton\n  * \n  */\n+\n public final class JobUtil {\n \n     private static final Logger LOG = LogManager.getLogger(JobUtil.class);\n@@ -34,8 +36,8 @@ public final class JobUtil {\n     /**\n      * private constructor to implement util\n      */\n-    private JobUtil() {\n \n+    private JobUtil() {\n     }\n \n     /**\n@@ -43,6 +45,8 @@ public final class JobUtil {\n      * @param total\n      * @return users\n      */\n+\n+\n     public static final int parseUserString(String users) {\n         int result = 0;\n         String u = users.trim();\n@@ -59,8 +63,10 @@ public final class JobUtil {\n      * \n      * @return users\n      */\n+\n+\n     public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n-        return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n+        return jobRegions.stream().mapToInt(region-> JobUtil.parseUserString(region.getUsers())).sum();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/203/JobUtil.java\nindex 9af6cddc82..b43c689bdf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/203/JobUtil.java\n@@ -59,7 +59,7 @@ public final class JobUtil {\n      * \n      * @return users\n      */\n-    public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n+    public static final int calculateTotalVirtualUsers(Collection< ? extends RegionRequest> jobRegions) {\n         return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/203/JobUtil.java\nindex 9af6cddc82..b43c689bdf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/203/JobUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/203/JobUtil.java\n@@ -59,7 +59,7 @@ public final class JobUtil {\n      * \n      * @return users\n      */\n-    public static final int calculateTotalVirtualUsers(Collection<? extends RegionRequest> jobRegions) {\n+    public static final int calculateTotalVirtualUsers(Collection< ? extends RegionRequest> jobRegions) {\n         return jobRegions.stream().mapToInt(region -> JobUtil.parseUserString(region.getUsers())).sum();\n     }\n \n",
            "diff_size": 1
        }
    ]
}