{
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "79",
                "severity": "error",
                "message": "Two or more consecutive empty lines",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
            }
        ]
    },
    "source_code": "        var database = fabricDatabaseManager.getDatabase( databaseName );\n        return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n                                              transactionBookmarkManagerFactory );\n    }\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/12/BoltFabricDatabaseManagementService.java\nindex c5b2fd5bd1..5eb29fe064 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/12/BoltFabricDatabaseManagementService.java\n@@ -76,9 +76,8 @@ public class BoltFabricDatabaseManagementService implements BoltGraphDatabaseMan\n     {\n         var database = fabricDatabaseManager.getDatabase( databaseName );\n         return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n-                                              transactionBookmarkManagerFactory );\n-    }\n-\n+                                          transactionBookmarkManagerFactory );\n+}\n \n     @Override\n     public Optional<CustomBookmarkFormatParser> getCustomBookmarkFormatParser()\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "50",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "79",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/12/BoltFabricDatabaseManagementService.java\nindex c5b2fd5bd1..169e5ed517 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/12/BoltFabricDatabaseManagementService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.bolt;\n \n import java.util.Optional;\n@@ -46,9 +47,9 @@ public class BoltFabricDatabaseManagementService implements BoltGraphDatabaseMan\n     private final LocalGraphTransactionIdTracker transactionIdTracker;\n     private final TransactionBookmarkManagerFactory transactionBookmarkManagerFactory;\n \n-    public BoltFabricDatabaseManagementService( FabricExecutor fabricExecutor, FabricConfig config, TransactionManager transactionManager,\n-            FabricDatabaseManager fabricDatabaseManager, LocalGraphTransactionIdTracker transactionIdTracker,\n-            TransactionBookmarkManagerFactory transactionBookmarkManagerFactory )\n+    public BoltFabricDatabaseManagementService(FabricExecutor fabricExecutor, FabricConfig config, TransactionManager transactionManager,\n+                                               FabricDatabaseManager fabricDatabaseManager, LocalGraphTransactionIdTracker transactionIdTracker,\n+                                               TransactionBookmarkManagerFactory transactionBookmarkManagerFactory)\n     {\n         this.fabricExecutor = fabricExecutor;\n         this.config = config;\n@@ -59,30 +60,29 @@ public class BoltFabricDatabaseManagementService implements BoltGraphDatabaseMan\n     }\n \n     @Override\n-    public BoltGraphDatabaseServiceSPI database( String databaseName ) throws UnavailableException, DatabaseNotFoundException\n+    public BoltGraphDatabaseServiceSPI database(String databaseName) throws UnavailableException, DatabaseNotFoundException\n     {\n         try\n         {\n-            return getDatabase( databaseName );\n-        }\n-        catch ( DatabaseShutdownException | UnavailableException e )\n+            return getDatabase(databaseName);\n+        } catch (DatabaseShutdownException | UnavailableException e)\n         {\n             // The failure expected over bolt\n-            throw new UnavailableException( format( \"Database '%s' is unavailable.\", databaseName ) );\n+            throw new UnavailableException(format(\"Database '%s' is unavailable.\", databaseName));\n         }\n     }\n \n-    public BoltGraphDatabaseServiceSPI getDatabase( String databaseName ) throws UnavailableException, DatabaseNotFoundException\n+    public BoltGraphDatabaseServiceSPI getDatabase(String databaseName) throws UnavailableException, DatabaseNotFoundException\n     {\n-        var database = fabricDatabaseManager.getDatabase( databaseName );\n-        return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n-                                              transactionBookmarkManagerFactory );\n+        var database = fabricDatabaseManager.getDatabase(databaseName);\n+        return new BoltFabricDatabaseService(database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n+            transactionBookmarkManagerFactory);\n     }\n \n \n     @Override\n     public Optional<CustomBookmarkFormatParser> getCustomBookmarkFormatParser()\n     {\n-        return Optional.of( fabricBookmarkParser );\n+        return Optional.of(fabricBookmarkParser);\n     }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/12/BoltFabricDatabaseManagementService.java\nindex c5b2fd5bd1..dd3dbc29d2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/12/BoltFabricDatabaseManagementService.java\n@@ -75,14 +75,12 @@ public class BoltFabricDatabaseManagementService implements BoltGraphDatabaseMan\n     public BoltGraphDatabaseServiceSPI getDatabase( String databaseName ) throws UnavailableException, DatabaseNotFoundException\n     {\n         var database = fabricDatabaseManager.getDatabase( databaseName );\n-        return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n-                                              transactionBookmarkManagerFactory );\n+        return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker, transactionBookmarkManagerFactory );\n     }\n \n-\n-    @Override\n+@Override\n     public Optional<CustomBookmarkFormatParser> getCustomBookmarkFormatParser()\n     {\n         return Optional.of( fabricBookmarkParser );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/12/BoltFabricDatabaseManagementService.java\nindex c5b2fd5bd1..5eb29fe064 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/12/BoltFabricDatabaseManagementService.java\n@@ -76,9 +76,8 @@ public class BoltFabricDatabaseManagementService implements BoltGraphDatabaseMan\n     {\n         var database = fabricDatabaseManager.getDatabase( databaseName );\n         return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n-                                              transactionBookmarkManagerFactory );\n-    }\n-\n+                                          transactionBookmarkManagerFactory );\n+}\n \n     @Override\n     public Optional<CustomBookmarkFormatParser> getCustomBookmarkFormatParser()\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/12/BoltFabricDatabaseManagementService.java\nindex c5b2fd5bd1..2003ef3eee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/12/BoltFabricDatabaseManagementService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/12/BoltFabricDatabaseManagementService.java\n@@ -75,14 +75,13 @@ public class BoltFabricDatabaseManagementService implements BoltGraphDatabaseMan\n     public BoltGraphDatabaseServiceSPI getDatabase( String databaseName ) throws UnavailableException, DatabaseNotFoundException\n     {\n         var database = fabricDatabaseManager.getDatabase( databaseName );\n-        return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker,\n-                                              transactionBookmarkManagerFactory );\n-    }\n+        return new BoltFabricDatabaseService( database.databaseId(), fabricExecutor, config, transactionManager, transactionIdTracker, transactionBookmarkManagerFactory );\n+}\n \n \n-    @Override\n-    public Optional<CustomBookmarkFormatParser> getCustomBookmarkFormatParser()\n-    {\n-        return Optional.of( fabricBookmarkParser );\n-    }\n+@Override\n+public Optional<CustomBookmarkFormatParser> getCustomBookmarkFormatParser()\n+{\n+    return Optional.of( fabricBookmarkParser );\n+}\n }\n",
            "diff_size": 8
        }
    ]
}