{
    "error_id": "435",
    "information": {
        "errors": [
            {
                "line": "129",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/435/WebChannelReader.java\nindex a05b7c2761..e383a380f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/435/WebChannelReader.java\n@@ -126,7 +126,7 @@ public class WebChannelReader extends Reader<WebChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/435/WebChannelReader.java\nindex a05b7c2761..2a8d28b405 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/435/WebChannelReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.flexapi.v1;\n@@ -126,7 +126,7 @@ public class WebChannelReader extends Reader<WebChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/435/WebChannelReader.java\nindex a05b7c2761..2e8a683b07 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/435/WebChannelReader.java\n@@ -26,6 +26,7 @@ public class WebChannelReader extends Reader<WebChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return WebChannel ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<WebChannel> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -37,6 +38,8 @@ public class WebChannelReader extends Reader<WebChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return WebChannel ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<WebChannel> firstPage(final TwilioRestClient client) {\n@@ -45,7 +48,7 @@ public class WebChannelReader extends Reader<WebChannel> {\n             Domains.FLEXAPI.toString(),\n             \"/v1/WebChannels\",\n             client.getRegion()\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -58,14 +61,13 @@ public class WebChannelReader extends Reader<WebChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return WebChannel ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<WebChannel> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<WebChannel> getPage(final String targetUrl,\n+                                    final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -76,16 +78,15 @@ public class WebChannelReader extends Reader<WebChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<WebChannel> nextPage(final Page<WebChannel> page,\n                                      final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.FLEXAPI.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getNextPageUrl(Domains.FLEXAPI.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -96,16 +97,15 @@ public class WebChannelReader extends Reader<WebChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<WebChannel> previousPage(final Page<WebChannel> page,\n                                          final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.FLEXAPI.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getPreviousPageUrl(Domains.FLEXAPI.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -116,9 +116,11 @@ public class WebChannelReader extends Reader<WebChannel> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<WebChannel> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<WebChannel> pageForRequest(final TwilioRestClient client,\n+                                            final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"WebChannel read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -126,7 +128,8 @@ public class WebChannelReader extends Reader<WebChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -134,7 +137,7 @@ public class WebChannelReader extends Reader<WebChannel> {\n             response.getContent(),\n             WebChannel.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -142,6 +145,8 @@ public class WebChannelReader extends Reader<WebChannel> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/435/WebChannelReader.java\nindex a05b7c2761..e383a380f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/435/WebChannelReader.java\n@@ -126,7 +126,7 @@ public class WebChannelReader extends Reader<WebChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/435/WebChannelReader.java\nindex a05b7c2761..0cd7b05e6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/435/WebChannelReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/435/WebChannelReader.java\n@@ -126,7 +126,8 @@ public class WebChannelReader extends Reader<WebChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}