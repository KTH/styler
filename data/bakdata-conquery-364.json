{
    "error_id": "364",
    "information": {
        "errors": [
            {
                "line": "97",
                "column": "34",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t\n\t@Data\n\tpublic static class JWTConfig{\n\t\t@Min(1)\n\t\tprivate Duration jwtDuration = Duration.hours(8);\n\t\t",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/364/ConqueryTokenRealm.java\nindex 9fa349643a..25d6344206 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/364/ConqueryTokenRealm.java\n@@ -35,11 +35,11 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n \n \tprivate final MasterMetaStorage storage;\n-\t\n+\n \t@Setter\n \tprivate JWTConfig jwtConfig = new JWTConfig();\n-\t\n-\t\n+\n+\n \tpublic ConqueryTokenRealm(MasterMetaStorage storage) {\n \t\tthis.storage = storage;\n \t\tsetAuthenticationTokenClass(TOKEN_CLASS);\n@@ -83,26 +83,26 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \n \t\treturn new ConqueryAuthenticationInfo(userId, token, this);\n \t}\n-\t\n \n-\t\n+\n+\n \tpublic String createTokenForUser(UserId userId) {\n \t\tif(storage.getUser(userId) == null) {\n \t\t\tthrow new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n \t\t}\n \t\treturn TokenHandler.createToken(userId.toString(), jwtConfig.getJwtDuration(), getName(), jwtConfig.getTokenSignAlgorithm());\n \t}\n-\t\n+\n \t@Data\n-\tpublic static class JWTConfig{\n+\tpublic static class JWTConfig {\n \t\t@Min(1)\n \t\tprivate Duration jwtDuration = Duration.hours(8);\n-\t\t\n+\n \t\t@JsonIgnore\n \t\tprivate Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n \t\t@JsonIgnore\n \t\tprivate JWTVerifier tokenVerifier;\n-\t\t\n+\n \t\t@JsonIgnore\n \t\tpublic JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n \t\t\tif(tokenVerifier == null) {\n@@ -110,7 +110,7 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \t\t\t}\n \t\t\treturn tokenVerifier;\n \t\t}\n-\t\t\n+\n \n \t}\n \n",
            "diff_size": 11
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/364/ConqueryTokenRealm.java\nindex 9fa349643a..c474dc62e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/364/ConqueryTokenRealm.java\n@@ -32,91 +32,87 @@ import org.apache.shiro.authc.IncorrectCredentialsException;\n @Slf4j\n public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \n-\tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n-\n-\tprivate final MasterMetaStorage storage;\n-\t\n-\t@Setter\n-\tprivate JWTConfig jwtConfig = new JWTConfig();\n-\t\n-\t\n-\tpublic ConqueryTokenRealm(MasterMetaStorage storage) {\n-\t\tthis.storage = storage;\n-\t\tsetAuthenticationTokenClass(TOKEN_CLASS);\n-\t\tsetCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t}\n-\n-\t@Override\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\tif (!(TOKEN_CLASS.isAssignableFrom(token.getClass()))) {\n-\t\t\t// Incompatible token\n-\t\t\treturn null;\n-\t\t}\n-\t\tDecodedJWT decodedToken = null;\n-\t\ttry {\n-\t\t\tdecodedToken = jwtConfig.getTokenVerifier().verify((String) token.getCredentials());\n-\t\t}\n-\t\tcatch (TokenExpiredException e) {\n-\t\t\tlog.trace(\"The provided token is expired.\");\n-\t\t\tthrow new ExpiredCredentialsException(e);\n-\t\t}\n-\t\tcatch (SignatureVerificationException | InvalidClaimException e) {\n-\t\t\tlog.trace(\"The provided token was not successfully verified against its signature or claims.\");\n-\t\t\tthrow new IncorrectCredentialsException(e);\n-\t\t}\n-\t\tcatch (JWTVerificationException e) {\n-\t\t\tlog.trace(\"The provided token could not be verified.\");\n-\t\t\tthrow new AuthenticationException(e);\n-\t\t}\n-\n-\t\tString username = decodedToken.getSubject();\n-\n-\t\tUserId userId = UserId.Parser.INSTANCE.parse(username);\n-\t\tUser user = storage.getUser(userId);\n-\t\t// try to construct a new User if none could be found in the storage\n-\t\tif (user == null) {\n-\t\t\tlog.warn(\n-\t\t\t\t\"Provided credentials were valid, but a corresponding user was not found in the System. You need to add a user to the system with the id: {}\",\n-\t\t\t\tuserId);\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\treturn new ConqueryAuthenticationInfo(userId, token, this);\n-\t}\n-\t\n-\n-\t\n-\tpublic String createTokenForUser(UserId userId) {\n-\t\tif(storage.getUser(userId) == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n-\t\t}\n-\t\treturn TokenHandler.createToken(userId.toString(), jwtConfig.getJwtDuration(), getName(), jwtConfig.getTokenSignAlgorithm());\n-\t}\n-\t\n-\t@Data\n-\tpublic static class JWTConfig{\n-\t\t@Min(1)\n-\t\tprivate Duration jwtDuration = Duration.hours(8);\n-\t\t\n-\t\t@JsonIgnore\n-\t\tprivate Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n-\t\t@JsonIgnore\n-\t\tprivate JWTVerifier tokenVerifier;\n-\t\t\n-\t\t@JsonIgnore\n-\t\tpublic JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n-\t\t\tif(tokenVerifier == null) {\n-\t\t\t\ttokenVerifier = JWT.require(tokenSignAlgorithm).withIssuer(realm.getName()).build();\n-\t\t\t}\n-\t\t\treturn tokenVerifier;\n-\t\t}\n-\t\t\n-\n-\t}\n-\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\treturn TokenHandler.extractToken(request);\n-\t}\n+    private static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n+\n+    private final MasterMetaStorage storage;\n+\n+    @Setter\n+    private JWTConfig jwtConfig = new JWTConfig();\n+\n+\n+    public ConqueryTokenRealm(MasterMetaStorage storage) {\n+        this.storage = storage;\n+        setAuthenticationTokenClass(TOKEN_CLASS);\n+        setCredentialsMatcher(new SkippingCredentialsMatcher());\n+    }\n+\n+    @Override\n+    protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        if (!(TOKEN_CLASS.isAssignableFrom(token.getClass()))) {\n+            // Incompatible token\n+            return null;\n+        }\n+        DecodedJWT decodedToken = null;\n+        try {\n+            decodedToken = jwtConfig.getTokenVerifier().verify((String) token.getCredentials());\n+        } catch (TokenExpiredException e) {\n+            log.trace(\"The provided token is expired.\");\n+            throw new ExpiredCredentialsException(e);\n+        } catch (SignatureVerificationException | InvalidClaimException e) {\n+            log.trace(\"The provided token was not successfully verified against its signature or claims.\");\n+            throw new IncorrectCredentialsException(e);\n+        } catch (JWTVerificationException e) {\n+            log.trace(\"The provided token could not be verified.\");\n+            throw new AuthenticationException(e);\n+        }\n+\n+        String username = decodedToken.getSubject();\n+\n+        UserId userId = UserId.Parser.INSTANCE.parse(username);\n+        User user = storage.getUser(userId);\n+        // try to construct a new User if none could be found in the storage\n+        if (user == null) {\n+            log.warn(\n+                \"Provided credentials were valid, but a corresponding user was not found in the System. You need to add a user to the system with the id: {}\",\n+                userId);\n+            return null;\n+        }\n+\n+        return new ConqueryAuthenticationInfo(userId, token, this);\n+    }\n+\n+\n+    public String createTokenForUser(UserId userId) {\n+        if (storage.getUser(userId) == null) {\n+            throw new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n+        }\n+        return TokenHandler.createToken(userId.toString(), jwtConfig.getJwtDuration(), getName(), jwtConfig.getTokenSignAlgorithm());\n+    }\n+\n+    @Data\n+    public static class JWTConfig {\n+        @Min(1)\n+        private Duration jwtDuration = Duration.hours(8);\n+\n+        @JsonIgnore\n+        private Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n+        @JsonIgnore\n+        private JWTVerifier tokenVerifier;\n+\n+        @JsonIgnore\n+        public JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n+            if (tokenVerifier == null) {\n+                tokenVerifier = JWT.require(tokenSignAlgorithm).withIssuer(realm.getName()).build();\n+            }\n+            return tokenVerifier;\n+        }\n+\n+\n+    }\n+\n+    @Override\n+    public AuthenticationToken extractToken(ContainerRequestContext request) {\n+        return TokenHandler.extractToken(request);\n+    }\n \n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/364/ConqueryTokenRealm.java\nindex 9fa349643a..f0cf8b1523 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/364/ConqueryTokenRealm.java\n@@ -83,10 +83,8 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \n \t\treturn new ConqueryAuthenticationInfo(userId, token, this);\n \t}\n-\t\n \n-\t\n-\tpublic String createTokenForUser(UserId userId) {\n+public String createTokenForUser(UserId userId) {\n \t\tif(storage.getUser(userId) == null) {\n \t\t\tthrow new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n \t\t}\n@@ -94,7 +92,7 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \t}\n \t\n \t@Data\n-\tpublic static class JWTConfig{\n+\tpublic static class JWTConfig {\n \t\t@Min(1)\n \t\tprivate Duration jwtDuration = Duration.hours(8);\n \t\t\n@@ -110,7 +108,6 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \t\t\t}\n \t\t\treturn tokenVerifier;\n \t\t}\n-\t\t\n \n \t}\n \n@@ -119,4 +116,4 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \t\treturn TokenHandler.extractToken(request);\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/364/ConqueryTokenRealm.java\nindex 9fa349643a..a5026ea9dc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/364/ConqueryTokenRealm.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.models.auth.conquerytoken;\n \n import javax.validation.constraints.Min;\n import javax.ws.rs.container.ContainerRequestContext;\n-\n import com.auth0.jwt.JWT;\n import com.auth0.jwt.JWTVerifier;\n import com.auth0.jwt.algorithms.Algorithm;\n@@ -32,91 +31,85 @@ import org.apache.shiro.authc.IncorrectCredentialsException;\n @Slf4j\n public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \n-\tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n-\n-\tprivate final MasterMetaStorage storage;\n-\t\n-\t@Setter\n-\tprivate JWTConfig jwtConfig = new JWTConfig();\n-\t\n-\t\n-\tpublic ConqueryTokenRealm(MasterMetaStorage storage) {\n-\t\tthis.storage = storage;\n-\t\tsetAuthenticationTokenClass(TOKEN_CLASS);\n-\t\tsetCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t}\n+    private static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n+    private final MasterMetaStorage storage;\n+    @Setter\n+    private JWTConfig jwtConfig = new JWTConfig();\n \n-\t@Override\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\tif (!(TOKEN_CLASS.isAssignableFrom(token.getClass()))) {\n-\t\t\t// Incompatible token\n-\t\t\treturn null;\n-\t\t}\n-\t\tDecodedJWT decodedToken = null;\n-\t\ttry {\n-\t\t\tdecodedToken = jwtConfig.getTokenVerifier().verify((String) token.getCredentials());\n-\t\t}\n-\t\tcatch (TokenExpiredException e) {\n-\t\t\tlog.trace(\"The provided token is expired.\");\n-\t\t\tthrow new ExpiredCredentialsException(e);\n-\t\t}\n-\t\tcatch (SignatureVerificationException | InvalidClaimException e) {\n-\t\t\tlog.trace(\"The provided token was not successfully verified against its signature or claims.\");\n-\t\t\tthrow new IncorrectCredentialsException(e);\n-\t\t}\n-\t\tcatch (JWTVerificationException e) {\n-\t\t\tlog.trace(\"The provided token could not be verified.\");\n-\t\t\tthrow new AuthenticationException(e);\n-\t\t}\n+    public ConqueryTokenRealm(MasterMetaStorage storage) {\n+        this.storage = storage;\n+        setAuthenticationTokenClass(TOKEN_CLASS);\n+        setCredentialsMatcher(new SkippingCredentialsMatcher());\n+    }\n \n-\t\tString username = decodedToken.getSubject();\n+    @Override\n+    protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        if(!(TOKEN_CLASS.isAssignableFrom(token.getClass()))) {\n+            // Incompatible token\n+            return null;\n+        }\n \n-\t\tUserId userId = UserId.Parser.INSTANCE.parse(username);\n-\t\tUser user = storage.getUser(userId);\n-\t\t// try to construct a new User if none could be found in the storage\n-\t\tif (user == null) {\n-\t\t\tlog.warn(\n-\t\t\t\t\"Provided credentials were valid, but a corresponding user was not found in the System. You need to add a user to the system with the id: {}\",\n-\t\t\t\tuserId);\n-\t\t\treturn null;\n-\t\t}\n+        DecodedJWT decodedToken = null;\n+        try {\n+            decodedToken = jwtConfig.getTokenVerifier().verify((String)token.getCredentials());\n+        }\n+        catch (TokenExpiredException e) {\n+            log.trace(\"The provided token is expired.\");\n+            throw new ExpiredCredentialsException(e);\n+        }\n+        catch (SignatureVerificationException | InvalidClaimException e) {\n+            log.trace(\"The provided token was not successfully verified against its signature or claims.\");\n+            throw new IncorrectCredentialsException(e);\n+        }\n+        catch (JWTVerificationException e) {\n+            log.trace(\"The provided token could not be verified.\");\n+            throw new AuthenticationException(e);\n+        }\n \n-\t\treturn new ConqueryAuthenticationInfo(userId, token, this);\n-\t}\n-\t\n+        String username = decodedToken.getSubject();\n+        UserId userId = UserId.Parser.INSTANCE.parse(username);\n+        User user = storage.getUser(userId);\n+        // try to construct a new User if none could be found in the storage\n+        if(user == null) {\n+            log.warn(\"Provided credentials were valid, but a corresponding user was not found in the System. You need to add a user to the system with the id: {}\", userId);\n+            return null;\n+        }\n+        return new ConqueryAuthenticationInfo(userId, token, this);\n+    }\n \n-\t\n-\tpublic String createTokenForUser(UserId userId) {\n-\t\tif(storage.getUser(userId) == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n-\t\t}\n-\t\treturn TokenHandler.createToken(userId.toString(), jwtConfig.getJwtDuration(), getName(), jwtConfig.getTokenSignAlgorithm());\n-\t}\n-\t\n-\t@Data\n-\tpublic static class JWTConfig{\n-\t\t@Min(1)\n-\t\tprivate Duration jwtDuration = Duration.hours(8);\n-\t\t\n-\t\t@JsonIgnore\n-\t\tprivate Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n-\t\t@JsonIgnore\n-\t\tprivate JWTVerifier tokenVerifier;\n-\t\t\n-\t\t@JsonIgnore\n-\t\tpublic JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n-\t\t\tif(tokenVerifier == null) {\n-\t\t\t\ttokenVerifier = JWT.require(tokenSignAlgorithm).withIssuer(realm.getName()).build();\n-\t\t\t}\n-\t\t\treturn tokenVerifier;\n-\t\t}\n-\t\t\n+    public String createTokenForUser(UserId userId) {\n+        if(storage.getUser(userId) == null) {\n+            throw new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \"+userId);\n+        }\n+        return TokenHandler.createToken(\n+            userId.toString(),\n+            jwtConfig.getJwtDuration(),\n+            getName(),\n+            jwtConfig.getTokenSignAlgorithm()\n+        );\n+    }\n \n-\t}\n+    @Data\n+    public static class JWTConfig {\n \n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\treturn TokenHandler.extractToken(request);\n-\t}\n+        @Min(1)\n+        private Duration jwtDuration = Duration.hours(8);\n+        @JsonIgnore\n+        private Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n+        @JsonIgnore\n+        private JWTVerifier tokenVerifier;\n+        @JsonIgnore\n+        public JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n+            if(tokenVerifier == null) {\n+                tokenVerifier = JWT.require(tokenSignAlgorithm).withIssuer(realm.getName())\n+                                                               .build();\n+            }\n+            return tokenVerifier;\n+        }\n+    }\n \n-}\n+    @Override\n+    public AuthenticationToken extractToken(ContainerRequestContext request) {\n+        return TokenHandler.extractToken(request);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 116
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/364/ConqueryTokenRealm.java\nindex 9fa349643a..25d6344206 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/364/ConqueryTokenRealm.java\n@@ -35,11 +35,11 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n \n \tprivate final MasterMetaStorage storage;\n-\t\n+\n \t@Setter\n \tprivate JWTConfig jwtConfig = new JWTConfig();\n-\t\n-\t\n+\n+\n \tpublic ConqueryTokenRealm(MasterMetaStorage storage) {\n \t\tthis.storage = storage;\n \t\tsetAuthenticationTokenClass(TOKEN_CLASS);\n@@ -83,26 +83,26 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \n \t\treturn new ConqueryAuthenticationInfo(userId, token, this);\n \t}\n-\t\n \n-\t\n+\n+\n \tpublic String createTokenForUser(UserId userId) {\n \t\tif(storage.getUser(userId) == null) {\n \t\t\tthrow new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n \t\t}\n \t\treturn TokenHandler.createToken(userId.toString(), jwtConfig.getJwtDuration(), getName(), jwtConfig.getTokenSignAlgorithm());\n \t}\n-\t\n+\n \t@Data\n-\tpublic static class JWTConfig{\n+\tpublic static class JWTConfig {\n \t\t@Min(1)\n \t\tprivate Duration jwtDuration = Duration.hours(8);\n-\t\t\n+\n \t\t@JsonIgnore\n \t\tprivate Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n \t\t@JsonIgnore\n \t\tprivate JWTVerifier tokenVerifier;\n-\t\t\n+\n \t\t@JsonIgnore\n \t\tpublic JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n \t\t\tif(tokenVerifier == null) {\n@@ -110,7 +110,7 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \t\t\t}\n \t\t\treturn tokenVerifier;\n \t\t}\n-\t\t\n+\n \n \t}\n \n",
            "diff_size": 11
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/364/ConqueryTokenRealm.java\nindex 9fa349643a..25d6344206 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/364/ConqueryTokenRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/364/ConqueryTokenRealm.java\n@@ -35,11 +35,11 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n \n \tprivate final MasterMetaStorage storage;\n-\t\n+\n \t@Setter\n \tprivate JWTConfig jwtConfig = new JWTConfig();\n-\t\n-\t\n+\n+\n \tpublic ConqueryTokenRealm(MasterMetaStorage storage) {\n \t\tthis.storage = storage;\n \t\tsetAuthenticationTokenClass(TOKEN_CLASS);\n@@ -83,26 +83,26 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \n \t\treturn new ConqueryAuthenticationInfo(userId, token, this);\n \t}\n-\t\n \n-\t\n+\n+\n \tpublic String createTokenForUser(UserId userId) {\n \t\tif(storage.getUser(userId) == null) {\n \t\t\tthrow new IllegalArgumentException(\"Cannot create a JWT for unknown user with id: \" + userId);\n \t\t}\n \t\treturn TokenHandler.createToken(userId.toString(), jwtConfig.getJwtDuration(), getName(), jwtConfig.getTokenSignAlgorithm());\n \t}\n-\t\n+\n \t@Data\n-\tpublic static class JWTConfig{\n+\tpublic static class JWTConfig {\n \t\t@Min(1)\n \t\tprivate Duration jwtDuration = Duration.hours(8);\n-\t\t\n+\n \t\t@JsonIgnore\n \t\tprivate Algorithm tokenSignAlgorithm = Algorithm.HMAC256(TokenHandler.generateTokenSecret());\n \t\t@JsonIgnore\n \t\tprivate JWTVerifier tokenVerifier;\n-\t\t\n+\n \t\t@JsonIgnore\n \t\tpublic JWTVerifier getTokenVerifier(ConqueryAuthenticationRealm realm) {\n \t\t\tif(tokenVerifier == null) {\n@@ -110,7 +110,7 @@ public class ConqueryTokenRealm extends ConqueryAuthenticationRealm {\n \t\t\t}\n \t\t\treturn tokenVerifier;\n \t\t}\n-\t\t\n+\n \n \t}\n \n",
            "diff_size": 11
        }
    ]
}