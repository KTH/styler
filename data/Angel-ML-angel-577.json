{
    "error_id": "577",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/577/PushPathTailParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/577/PushPathTailParam.java\nindex 76f7f194a0..cb8ec43c34 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/577/PushPathTailParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/577/PushPathTailParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.pushpathtail;\n \n import com.tencent.angel.PartitionKey;\n@@ -24,22 +25,22 @@ import it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap;\n import java.util.Arrays;\n \n public class PushPathTailParam extends UpdateParamWithKeyIds {\n-  private Long2LongOpenHashMap pathTail;\n+    private Long2LongOpenHashMap pathTail;\n \n-  public PushPathTailParam(int matrixId, boolean updateClock, Long2LongOpenHashMap pathTail) {\n-    super(matrixId, updateClock);\n-    this.pathTail = pathTail;\n+    public PushPathTailParam(int matrixId, boolean updateClock, Long2LongOpenHashMap pathTail) {\n+        super(matrixId, updateClock);\n+        this.pathTail = pathTail;\n \n-    keyIds = pathTail.keySet().toLongArray();\n-    Arrays.sort(keyIds);\n-  }\n+        keyIds = pathTail.keySet().toLongArray();\n+        Arrays.sort(keyIds);\n+    }\n \n-  public PushPathTailParam(int matrixId, Long2LongOpenHashMap pathTail) {\n-    this(matrixId, false, pathTail);\n-  }\n+    public PushPathTailParam(int matrixId, Long2LongOpenHashMap pathTail) {\n+        this(matrixId, false, pathTail);\n+    }\n \n-  @Override\n-  protected PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx, int endIdx) {\n-    return new PushPathTailPartitionParam(matrixId, part, pathTail, keyIds, startIdx, endIdx);\n-  }\n+    @Override\n+    protected PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx, int endIdx) {\n+        return new PushPathTailPartitionParam(matrixId, part, pathTail, keyIds, startIdx, endIdx);\n+    }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/577/PushPathTailParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/577/PushPathTailParam.java\nindex 76f7f194a0..2a3a18109f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/577/PushPathTailParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/577/PushPathTailParam.java\n@@ -42,4 +42,4 @@ public class PushPathTailParam extends UpdateParamWithKeyIds {\n   protected PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx, int endIdx) {\n     return new PushPathTailPartitionParam(matrixId, part, pathTail, keyIds, startIdx, endIdx);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/577/PushPathTailParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/577/PushPathTailParam.java\nindex 76f7f194a0..fdcbccd010 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/577/PushPathTailParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/577/PushPathTailParam.java\n@@ -20,26 +20,25 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.graph.client.node2vec.params.UpdateParamWithKeyIds;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap;\n-\n import java.util.Arrays;\n \n public class PushPathTailParam extends UpdateParamWithKeyIds {\n-  private Long2LongOpenHashMap pathTail;\n+    private Long2LongOpenHashMap pathTail;\n \n-  public PushPathTailParam(int matrixId, boolean updateClock, Long2LongOpenHashMap pathTail) {\n+    public PushPathTailParam(int matrixId, boolean updateClock, Long2LongOpenHashMap pathTail) {\n     super(matrixId, updateClock);\n     this.pathTail = pathTail;\n-\n     keyIds = pathTail.keySet().toLongArray();\n     Arrays.sort(keyIds);\n-  }\n+    }\n \n-  public PushPathTailParam(int matrixId, Long2LongOpenHashMap pathTail) {\n+    public PushPathTailParam(int matrixId, Long2LongOpenHashMap pathTail) {\n     this(matrixId, false, pathTail);\n-  }\n+    }\n \n-  @Override\n-  protected PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx, int endIdx) {\n+    @Override\n+    protected PartitionUpdateParam getPartitionParam(PartitionKey part, int startIdx, int endIdx) {\n     return new PushPathTailPartitionParam(matrixId, part, pathTail, keyIds, startIdx, endIdx);\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}