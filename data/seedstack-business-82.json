{
    "error_id": "82",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.assembler.dsl;\n\nimport java.lang.annotation.Annotation;\nimport java.util.stream.Stream;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/82/MergeMultipleImpl.java\nindex 9fb4414f5a..892b4cd451 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/82/MergeMultipleImpl.java\n@@ -5,8 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n \n+package org.seedstack.business.internal.assembler.dsl;\n import java.lang.annotation.Annotation;\n import java.util.stream.Stream;\n import org.javatuples.Decade;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/82/MergeMultipleImpl.java\nindex 9fb4414f5a..7f0c24de9f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/82/MergeMultipleImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -42,7 +43,7 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n     @Override\n     public <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first,\n-            Class<A1> second) {\n+                                                                                         Class<A1> second) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second);\n     }\n \n@@ -50,7 +51,8 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n     public <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n+                                                                                                Class<A1> second,\n+                                                                                                Class<A2> third) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third);\n     }\n \n@@ -58,7 +60,9 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n     public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+                                                                                                    Class<A1> second,\n+                                                                                                    Class<A2> third,\n+                                                                                                    Class<A3> fourth) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth);\n     }\n@@ -69,7 +73,10 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>,\n             A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+                                                                                                        Class<A1> second,\n+                                                                                                        Class<A2> third,\n+                                                                                                        Class<A3> fourth,\n+                                                                                                        Class<A4> fifth) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth);\n     }\n@@ -142,7 +149,7 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n             A8 extends AggregateRoot<?>,\n             A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8,\n             A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth,\n-            Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n+                       Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth, sixth, seventh, eighth, ninth, tenth);\n     }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 308).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 357).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 409).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 459).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 510).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 560).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/82/MergeMultipleImpl.java\nindex 9fb4414f5a..b34695a988 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/82/MergeMultipleImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -40,110 +41,53 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first,\n-            Class<A1> second) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first, Class<A1> second) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first, Class<A1> second, Class<A2> third) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth, sixth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth, sixth, seventh);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth, sixth, seventh, eighth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth, sixth, seventh, eighth, ninth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8,\n-            A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth,\n-            Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n+    return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n                 fourth, fifth, sixth, seventh, eighth, ninth, tenth);\n     }\n \n@@ -162,4 +106,4 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n     Context getContext() {\n         return context;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 77
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 308).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 357).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 409).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 459).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 510).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 560).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/82/MergeMultipleImpl.java\nindex 9fb4414f5a..e8f83ca339 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/82/MergeMultipleImpl.java\n@@ -24,11 +24,13 @@ import org.seedstack.business.assembler.dsl.MergeMultiple;\n import org.seedstack.business.assembler.dsl.MergeMultipleWithQualifier;\n import org.seedstack.business.domain.AggregateRoot;\n \n+\n class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n \n     private final Context context;\n     private final Stream<D> dtoStream;\n \n+\n     MergeMultipleImpl(Context context, Stream<D> dtoStream) {\n         this.context = context;\n         this.dtoStream = dtoStream;\n@@ -40,111 +42,48 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first,\n-            Class<A1> second) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Pair<A0, A1>>> into(Class<A0> first, Class<A1> second) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Triplet<A0, A1, A2>>> into(Class<A0> first, Class<A1> second, Class<A2> third) {\n         return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quartet<A0, A1, A2, A3>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth, fifth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Quintet<A0, A1, A2, A3, A4>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth, fifth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth, fifth, sixth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Sextet<A0, A1, A2, A3, A4, A5>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth, fifth, sixth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth, fifth, sixth, seventh);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Septet<A0, A1, A2, A3, A4, A5, A6>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth, fifth, sixth, seventh);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth, fifth, sixth, seventh, eighth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Octet<A0, A1, A2, A3, A4, A5, A6, A7>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth, fifth, sixth, seventh, eighth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth, fifth, sixth, seventh, eighth, ninth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth, fifth, sixth, seventh, eighth, ninth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8,\n-            A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth,\n-            Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n-        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third,\n-                fourth, fifth, sixth, seventh, eighth, ninth, tenth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<MergeAs<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n+        return new MergeMultipleTuplesFromRepositoryImpl<>(context, dtoStream, first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth);\n     }\n \n     @Override\n@@ -159,7 +98,8 @@ class MergeMultipleImpl<D> implements MergeMultipleWithQualifier {\n         return this;\n     }\n \n+\n     Context getContext() {\n         return context;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 83
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/82/MergeMultipleImpl.java\nindex 9fb4414f5a..892b4cd451 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/82/MergeMultipleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/82/MergeMultipleImpl.java\n@@ -5,8 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n \n+package org.seedstack.business.internal.assembler.dsl;\n import java.lang.annotation.Annotation;\n import java.util.stream.Stream;\n import org.javatuples.Decade;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}