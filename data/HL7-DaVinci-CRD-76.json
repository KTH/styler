{
    "error_id": "76",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 145).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      int age, char genderCode, String equipmentCode, String codeSystem, String patientAddressState,\n      String providerAddressState) {\n    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n        age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n\n    List<CoverageRequirementRule> ruleList = repository.findRules(",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/76/CoverageRequirementRuleFinder.java\nindex 61d2d32444..3f78367d29 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/76/CoverageRequirementRuleFinder.java\n@@ -21,15 +21,16 @@ public class CoverageRequirementRuleFinder {\n   /**\n    * Find and return the relevant coverage rule in the database.\n    *\n-   * @param age Patient age in years.\n-   * @param genderCode Patient gender as a character.\n+   * @param age           Patient age in years.\n+   * @param genderCode    Patient gender as a character.\n    * @param equipmentCode desired code\n-   * @param codeSystem URL for the code system of the equipmentCode\n+   * @param codeSystem    URL for the code system of the equipmentCode\n    */\n   public List<CoverageRequirementRule> findRules(\n       int age, char genderCode, String equipmentCode, String codeSystem, String patientAddressState,\n       String providerAddressState) {\n-    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n+    String queryString = String.format(\n+        \"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n         age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n \n     List<CoverageRequirementRule> ruleList = repository.findRules(\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/76/CoverageRequirementRuleFinder.java\nindex 61d2d32444..6f0ff26013 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/76/CoverageRequirementRuleFinder.java\n@@ -15,8 +15,7 @@ public class CoverageRequirementRuleFinder {\n   @Autowired\n   DataRepository repository;\n \n-  public CoverageRequirementRuleFinder() {\n-  }\n+  public CoverageRequirementRuleFinder() {}\n \n   /**\n    * Find and return the relevant coverage rule in the database.\n@@ -29,14 +28,12 @@ public class CoverageRequirementRuleFinder {\n   public List<CoverageRequirementRule> findRules(\n       int age, char genderCode, String equipmentCode, String codeSystem, String patientAddressState,\n       String providerAddressState) {\n-    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n-        age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n+    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\", age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n \n-    List<CoverageRequirementRule> ruleList = repository.findRules(\n-        age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n-    if (ruleList.size() == 0) {\n+    List<CoverageRequirementRule> ruleList = repository.findRules(age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n+if (ruleList.size() == 0) {\n       logger.debug(\"RuleFinder returned no results for query: \" + queryString);\n     }\n     return ruleList;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/76/CoverageRequirementRuleFinder.java\nindex 61d2d32444..b1b12366ff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/76/CoverageRequirementRuleFinder.java\n@@ -6,17 +6,15 @@ import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n+\n @Component\n public class CoverageRequirementRuleFinder {\n+    static final Logger logger = LoggerFactory.getLogger(CoverageRequirementRuleFinder.class);\n \n-  static final Logger logger =\n-      LoggerFactory.getLogger(CoverageRequirementRuleFinder.class);\n \n-  @Autowired\n-  DataRepository repository;\n+    @Autowired DataRepository repository;\n \n-  public CoverageRequirementRuleFinder() {\n-  }\n+    public CoverageRequirementRuleFinder() {}\n \n   /**\n    * Find and return the relevant coverage rule in the database.\n@@ -26,17 +24,19 @@ public class CoverageRequirementRuleFinder {\n    * @param equipmentCode desired code\n    * @param codeSystem URL for the code system of the equipmentCode\n    */\n-  public List<CoverageRequirementRule> findRules(\n-      int age, char genderCode, String equipmentCode, String codeSystem, String patientAddressState,\n-      String providerAddressState) {\n-    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n-        age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n-\n-    List<CoverageRequirementRule> ruleList = repository.findRules(\n-        age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n+\n+\n+    public List<CoverageRequirementRule> findRules(\n+        int age,\n+        char genderCode,\n+        String equipmentCode,\n+        String codeSystem,\n+        String patientAddressState, String providerAddressState) {\n+    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\", age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n+    List<CoverageRequirementRule> ruleList = repository.findRules(age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n     if (ruleList.size() == 0) {\n-      logger.debug(\"RuleFinder returned no results for query: \" + queryString);\n+        logger.debug(\"RuleFinder returned no results for query: \" + queryString);\n     }\n     return ruleList;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'age' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/76/CoverageRequirementRuleFinder.java\nindex 61d2d32444..d903fd6155 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/76/CoverageRequirementRuleFinder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/76/CoverageRequirementRuleFinder.java\n@@ -29,8 +29,8 @@ public class CoverageRequirementRuleFinder {\n   public List<CoverageRequirementRule> findRules(\n       int age, char genderCode, String equipmentCode, String codeSystem, String patientAddressState,\n       String providerAddressState) {\n-    String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n-        age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n+        String queryString = String.format(\"age=%d, genderCode=%c, equipmentCode=%s, codeSystem=%s, patientAddressState=%s, providerAddressState=%s\",\n+        age,genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n \n     List<CoverageRequirementRule> ruleList = repository.findRules(\n         age, genderCode, equipmentCode, codeSystem, patientAddressState, providerAddressState);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}