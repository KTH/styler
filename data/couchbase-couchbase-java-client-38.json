{
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "137",
                "column": "93",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "                ViewQueryResponse response = mock(ViewQueryResponse.class);\n                when(response.responseCode()).thenReturn(404);\n                when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\" +\n                        \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n                        + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\",\n                    CharsetUtil.UTF_8)));",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "137",
                    "column": "93",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'\"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler/38/ViewRetryHandlerTest.java\nindex 155866ae61..6823584171 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler/38/ViewRetryHandlerTest.java\n@@ -135,7 +135,7 @@ public class ViewRetryHandlerTest {\n                 ViewQueryResponse response = mock(ViewQueryResponse.class);\n                 when(response.responseCode()).thenReturn(404);\n                 when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\" +\n-                        \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n+                \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n                         + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\",\n                     CharsetUtil.UTF_8)));\n                 subscriber.onNext(response);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "138",
                    "column": "93",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/intellij/38/ViewRetryHandlerTest.java\nindex 155866ae61..0d3adcffc1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/intellij/38/ViewRetryHandlerTest.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.java.view;\n \n import com.couchbase.client.core.message.view.ViewQueryResponse;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 51, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 51, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 51, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 323).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 59, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 55, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 51, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/codebuff/38/ViewRetryHandlerTest.java\nindex 155866ae61..177e5d0b78 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/codebuff/38/ViewRetryHandlerTest.java\n@@ -28,13 +28,14 @@ import org.junit.Test;\n import rx.Observable;\n import rx.Subscriber;\n import rx.observers.TestSubscriber;\n-\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicInteger;\n-\n import static org.junit.Assert.assertEquals;\n+\n import static org.junit.Assert.assertTrue;\n+\n import static org.mockito.Mockito.mock;\n+\n import static org.mockito.Mockito.when;\n \n /**\n@@ -43,28 +44,26 @@ import static org.mockito.Mockito.when;\n  * @author Michael Nitschinger\n  * @since 2.0.2\n  */\n-public class ViewRetryHandlerTest {\n \n+\n+public class ViewRetryHandlerTest {\n     @Test\n     public void shouldNotRetrySuccess() {\n         TestSubscriber<ViewQueryResponse> subscriber = new TestSubscriber<ViewQueryResponse>();\n-\n         final AtomicInteger subscriberCount = new AtomicInteger();\n-        Observable<ViewQueryResponse> observable = Observable.create(new Observable.OnSubscribe<ViewQueryResponse>() {\n-            @Override\n-            public void call(Subscriber<? super ViewQueryResponse> subscriber) {\n-                subscriberCount.incrementAndGet();\n-                ViewQueryResponse response = mock(ViewQueryResponse.class);\n-                when(response.responseCode()).thenReturn(200);\n-                subscriber.onNext(response);\n-                subscriber.onCompleted();\n-            }\n-        });\n-\n-        ViewRetryHandler\n-            .retryOnCondition(observable)\n-            .subscribe(subscriber);\n-\n+        Observable<ViewQueryResponse> observable = Observable.create(new Observable. OnSubscribe<ViewQueryResponse>() {\n+                                                       @Override\n+                                                       public void call(Subscriber<?\n+                                                                                       super ViewQueryResponse> subscriber) {\n+                                                           subscriberCount.incrementAndGet();\n+\n+                                                           ViewQueryResponse response = mock(ViewQueryResponse.class);\n+                                                           when(response.responseCode()).thenReturn(200);\n+                                                           subscriber.onNext(response);\n+                                                           subscriber.onCompleted();\n+                                                       }\n+                                                   });\n+        ViewRetryHandler.retryOnCondition(observable).subscribe(subscriber);\n         subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n         subscriber.assertNoErrors();\n         assertEquals(1, subscriber.getOnNextEvents().size());\n@@ -74,26 +73,22 @@ public class ViewRetryHandlerTest {\n     @Test\n     public void shouldRetryOnStatusCodes() {\n         TestSubscriber<ViewQueryResponse> subscriber = new TestSubscriber<ViewQueryResponse>();\n-\n         final AtomicInteger subscriberCount = new AtomicInteger();\n-        Observable<ViewQueryResponse> observable = Observable.create(new Observable.OnSubscribe<ViewQueryResponse>() {\n-            @Override\n-            public void call(Subscriber<? super ViewQueryResponse> subscriber) {\n-                subscriberCount.incrementAndGet();\n-                ViewQueryResponse response = mock(ViewQueryResponse.class);\n-                int statusCode = subscriberCount.get() == 5 ? 200 : 300;\n-                when(response.responseCode()).thenReturn(statusCode);\n-                when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"{\\\"err\\\": true}\",\n-                    CharsetUtil.UTF_8)));\n-                subscriber.onNext(response);\n-                subscriber.onCompleted();\n-            }\n-        });\n-\n-        ViewRetryHandler\n-            .retryOnCondition(observable)\n-            .subscribe(subscriber);\n-\n+        Observable<ViewQueryResponse> observable = Observable.create(new Observable. OnSubscribe<ViewQueryResponse>() {\n+                                                       @Override\n+                                                       public void call(Subscriber<?\n+                                                                                       super ViewQueryResponse> subscriber) {\n+                                                           subscriberCount.incrementAndGet();\n+\n+                                                           ViewQueryResponse response = mock(ViewQueryResponse.class);\n+                                                           int statusCode = subscriberCount.get() == 5 ? 200 : 300;\n+                                                           when(response.responseCode()).thenReturn(statusCode);\n+                                                           when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"{\\\"err\\\": true}\", CharsetUtil.UTF_8)));\n+                                                           subscriber.onNext(response);\n+                                                           subscriber.onCompleted();\n+                                                       }\n+                                                   });\n+        ViewRetryHandler.retryOnCondition(observable).subscribe(subscriber);\n         subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n         subscriber.assertNoErrors();\n         assertEquals(1, subscriber.getOnNextEvents().size());\n@@ -103,20 +98,16 @@ public class ViewRetryHandlerTest {\n     @Test\n     public void shouldPassThroughExceptions() {\n         TestSubscriber<ViewQueryResponse> subscriber = new TestSubscriber<ViewQueryResponse>();\n-\n         final AtomicInteger subscriberCount = new AtomicInteger();\n-        Observable<ViewQueryResponse> observable = Observable.create(new Observable.OnSubscribe<ViewQueryResponse>() {\n-            @Override\n-            public void call(Subscriber<? super ViewQueryResponse> subscriber) {\n-                subscriberCount.incrementAndGet();\n-                subscriber.onError(new IllegalStateException());\n-            }\n-        });\n-\n-        ViewRetryHandler\n-            .retryOnCondition(observable)\n-            .subscribe(subscriber);\n-\n+        Observable<ViewQueryResponse> observable = Observable.create(new Observable. OnSubscribe<ViewQueryResponse>() {\n+                                                       @Override\n+                                                       public void call(Subscriber<?\n+                                                                                       super ViewQueryResponse> subscriber) {\n+                                                           subscriberCount.incrementAndGet();\n+                                                           subscriber.onError(new IllegalStateException());\n+                                                       }\n+                                                   });\n+        ViewRetryHandler.retryOnCondition(observable).subscribe(subscriber);\n         subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n         assertEquals(1, subscriber.getOnErrorEvents().size());\n         assertTrue(subscriber.getOnErrorEvents().get(0) instanceof IllegalStateException);\n@@ -126,30 +117,25 @@ public class ViewRetryHandlerTest {\n     @Test\n     public void shouldNotRetryDesignDocNotFound() {\n         TestSubscriber<ViewQueryResponse> subscriber = new TestSubscriber<ViewQueryResponse>();\n-\n         final AtomicInteger subscriberCount = new AtomicInteger();\n-        Observable<ViewQueryResponse> observable = Observable.create(new Observable.OnSubscribe<ViewQueryResponse>() {\n-            @Override\n-            public void call(Subscriber<? super ViewQueryResponse> subscriber) {\n-                subscriberCount.incrementAndGet();\n-                ViewQueryResponse response = mock(ViewQueryResponse.class);\n-                when(response.responseCode()).thenReturn(404);\n-                when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\" +\n-                        \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n-                        + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\",\n-                    CharsetUtil.UTF_8)));\n-                subscriber.onNext(response);\n-                subscriber.onCompleted();\n-            }\n-        });\n-\n-        ViewRetryHandler\n-            .retryOnCondition(observable)\n-            .subscribe(subscriber);\n-\n+        Observable<ViewQueryResponse> observable = Observable.create(new Observable. OnSubscribe<ViewQueryResponse>() {\n+                                                       @Override\n+                                                       public void call(Subscriber<?\n+                                                                                       super ViewQueryResponse> subscriber) {\n+                                                           subscriberCount.incrementAndGet();\n+\n+                                                           ViewQueryResponse response = mock(ViewQueryResponse.class);\n+                                                           when(response.responseCode()).thenReturn(404);\n+                                                           when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\" + \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \" + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\", CharsetUtil.UTF_8)));\n+                                                           subscriber.onNext(response);\n+                                                           subscriber.onCompleted();\n+                                                       }\n+                                                   });\n+        ViewRetryHandler.retryOnCondition(observable).subscribe(subscriber);\n         subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n         subscriber.assertNoErrors();\n-        assertEquals(404, subscriber.getOnNextEvents().get(0).responseCode());\n+        assertEquals(404, subscriber.getOnNextEvents().get(0)\n+                                                      .responseCode());\n         assertEquals(1, subscriberCount.get());\n         assertEquals(1, subscriber.getOnNextEvents().size());\n     }\n",
            "diff_size": 78
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "137",
                    "column": "93",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'\"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler_random/38/ViewRetryHandlerTest.java\nindex 155866ae61..6823584171 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler_random/38/ViewRetryHandlerTest.java\n@@ -135,7 +135,7 @@ public class ViewRetryHandlerTest {\n                 ViewQueryResponse response = mock(ViewQueryResponse.class);\n                 when(response.responseCode()).thenReturn(404);\n                 when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\" +\n-                        \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n+                \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n                         + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\",\n                     CharsetUtil.UTF_8)));\n                 subscriber.onNext(response);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 17, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'CharsetUtil' has incorrect indentation level 13, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 1, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 1, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 5, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 1, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 1, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 1, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 1, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 1, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler_three_grams/38/ViewRetryHandlerTest.java\nindex 155866ae61..5395545118 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/errored/1/38/ViewRetryHandlerTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-java-client/styler_three_grams/38/ViewRetryHandlerTest.java\n@@ -134,23 +134,23 @@ public class ViewRetryHandlerTest {\n                 subscriberCount.incrementAndGet();\n                 ViewQueryResponse response = mock(ViewQueryResponse.class);\n                 when(response.responseCode()).thenReturn(404);\n-                when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\" +\n-                        \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n-                        + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\",\n-                    CharsetUtil.UTF_8)));\n-                subscriber.onNext(response);\n-                subscriber.onCompleted();\n-            }\n-        });\n-\n-        ViewRetryHandler\n-            .retryOnCondition(observable)\n-            .subscribe(subscriber);\n-\n-        subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n-        subscriber.assertNoErrors();\n-        assertEquals(404, subscriber.getOnNextEvents().get(0).responseCode());\n-        assertEquals(1, subscriberCount.get());\n-        assertEquals(1, subscriber.getOnNextEvents().size());\n-    }\n+                when(response.info()).thenReturn(Observable.just(Unpooled.copiedBuffer(\"\\n\"\n+                + \"{\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"Error opening view `al1l`, from set `default`, \"\n+                 + \"design document `_design/users`: {not_found,\\\\nmissing_named_view}\\\"}\\n\",\n+             CharsetUtil.UTF_8)));\n+         subscriber.onNext(response);\n+         subscriber.onCompleted();\n+     }\n+ });\n+\n+ ViewRetryHandler\n+     .retryOnCondition(observable)\n+     .subscribe(subscriber);\n+\n+ subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n+ subscriber.assertNoErrors();\n+ assertEquals(404, subscriber.getOnNextEvents().get(0).responseCode());\n+ assertEquals(1, subscriberCount.get());\n+ assertEquals(1, subscriber.getOnNextEvents().size());\n+}\n }\n\\ No newline at end of file\n",
            "diff_size": 19
        }
    ]
}