{
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "115",
                "column": "56",
                "severity": "error",
                "message": "'...' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n        Connection conn = null;\n        try {\n            conn = this.connFactory.getConnection();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/6/LdapUtils.java\nindex 238efa9351..fc1e7dfd0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/6/LdapUtils.java\n@@ -112,7 +112,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/6/LdapUtils.java\nindex 238efa9351..88436497f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/6/LdapUtils.java\n@@ -53,16 +53,27 @@ public class LdapUtils {\n \n     public LdapUtils() {\n         if (System.getProperty(\"LDAP_BASE\") != null) {\n-            this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + System.getProperty(\"LDAP_BASE\");\n+            this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" +\n+                System.getProperty(\"LDAP_BASE\");\n         } else {\n-            this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + ThreadProperty.get(\"LDAP_BASE\");\n+            this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" +\n+                ThreadProperty.get(\"LDAP_BASE\");\n         }\n \n         this.password = System.getProperty(\"LDAP_PASSWORD\");\n-        this.ssl = (System.getProperty(\"LDAP_SSL\", \"true\")).equals(\"true\") ? true : false;\n-        String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") : ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\") : \"\";\n-        String ldapPort = System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") : ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\") : \"\";\n-        this.url = (this.ssl == true ? \"ldaps://\" : \"ldap://\") + ldapUrl + \":\" + ldapPort;\n+        this.ssl =\n+            (System.getProperty(\"LDAP_SSL\", \"true\")).equals(\"true\") ? true :\n+                false;\n+        String ldapUrl = System.getProperty(\"LDAP_URL\") != null ?\n+            System.getProperty(\"LDAP_URL\") :\n+            ThreadProperty.get(\"LDAP_URL\") != null ?\n+                ThreadProperty.get(\"LDAP_URL\") : \"\";\n+        String ldapPort = System.getProperty(\"LDAP_PORT\") != null ?\n+            System.getProperty(\"LDAP_PORT\") :\n+            ThreadProperty.get(\"LDAP_PORT\") != null ?\n+                ThreadProperty.get(\"LDAP_PORT\") : \"\";\n+        this.url = (this.ssl == true ? \"ldaps://\" : \"ldap://\") + ldapUrl + \":\" +\n+            ldapPort;\n     }\n \n     public void connect(String ldapCaTrust) {\n@@ -76,8 +87,10 @@ public class LdapUtils {\n         sslCfg.setCredentialConfig(crdCfg);\n         this.config.setSslConfig(sslCfg);\n \n-        this.config.setConnectionInitializer(new BindConnectionInitializer(queryUser, new Credential(password)));\n-        this.pool = new BlockingConnectionPool(new DefaultConnectionFactory(this.config));\n+        this.config.setConnectionInitializer(\n+            new BindConnectionInitializer(queryUser, new Credential(password)));\n+        this.pool = new BlockingConnectionPool(\n+            new DefaultConnectionFactory(this.config));\n         if (!this.pool.isInitialized()) {\n             this.pool.initialize();\n         }\n@@ -112,7 +125,8 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications)\n+        throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n@@ -138,7 +152,8 @@ public class LdapUtils {\n         }\n     }\n \n-    public String hashPassword(String password) throws NoSuchAlgorithmException {\n+    public String hashPassword(String password)\n+        throws NoSuchAlgorithmException {\n         SecureRandom secureRandom = new SecureRandom();\n         byte[] salt = new byte[4];\n         secureRandom.nextBytes(salt);\n@@ -154,8 +169,8 @@ public class LdapUtils {\n         System.arraycopy(salt, 0, hashPlusSalt, hash.length, salt.length);\n \n         return new StringBuilder().append(\"{SSHA}\")\n-                .append(Base64.getEncoder().encodeToString(hashPlusSalt))\n-                .toString();\n+            .append(Base64.getEncoder().encodeToString(hashPlusSalt))\n+            .toString();\n     }\n \n     public int getLDAPMaxUidNumber() throws LdapException {\n@@ -184,7 +199,8 @@ public class LdapUtils {\n                 break;\n         }\n \n-        Matcher matcher = this.getSearchResult(base, \"cn=*\", attr, \".*?\" + attr + \"\\\\[(\\\\d+)\\\\].*?\");\n+        Matcher matcher = this.getSearchResult(base, \"cn=*\", attr,\n+            \".*?\" + attr + \"\\\\[(\\\\d+)\\\\].*?\");\n         int actualId;\n         while (matcher.find()) {\n             actualId = Integer.parseInt(matcher.group(1));\n@@ -198,17 +214,24 @@ public class LdapUtils {\n     public int getLDAPgidNumber(String groupCn) throws LdapException {\n         int gid = 0;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"gidNumber\", \".*gidNumber\\\\[(\\\\d+)\\\\].*\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"),\n+                \"cn=\" + groupCn, \"gidNumber\", \".*gidNumber\\\\[(\\\\d+)\\\\].*\");\n         if (matcher.matches()) {\n             gid = Integer.parseInt(matcher.group(1));\n         }\n         return gid;\n     }\n \n-    public ArrayList<String> getLDAPgroupsContainingUserAsAttribute(String userUid, String attr) throws LdapException {\n+    public ArrayList<String> getLDAPgroupsContainingUserAsAttribute(\n+        String userUid, String attr) throws LdapException {\n         ArrayList<String> groupsList = new ArrayList<>();\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), attr + \"=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\"), \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"),\n+                attr + \"=uid=\" + userUid + \",\" +\n+                    ThreadProperty.get(\"LDAP_USER_DN\"), \"cn\",\n+                \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         while (matcher.find()) {\n             groupsList.add(matcher.group(1));\n         }\n@@ -216,8 +239,11 @@ public class LdapUtils {\n         return groupsList;\n     }\n \n-    public void deleteLDAPuserFromAllGroupsAttribute(String userUid, String attr) throws LdapException {\n-        ArrayList<String> groupsList = this.getLDAPgroupsContainingUserAsAttribute(userUid, attr);\n+    public void deleteLDAPuserFromAllGroupsAttribute(String userUid,\n+                                                     String attr)\n+        throws LdapException {\n+        ArrayList<String> groupsList =\n+            this.getLDAPgroupsContainingUserAsAttribute(userUid, attr);\n \n         Iterator<String> iter = groupsList.iterator();\n         while (iter.hasNext()) {\n@@ -225,18 +251,29 @@ public class LdapUtils {\n         }\n     }\n \n-    public void deleteLDAPuserFromGroupAttribute(String userUid, String groupCn, String attr) throws LdapException {\n-        String groupDn = \"cn=\" + groupCn + \",\" + ThreadProperty.get(\"LDAP_GROUP_DN\");\n-        String userDn = \"uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\");\n-\n-        AttributeModification newAttr = new AttributeModification(AttributeModificationType.REMOVE, new LdapAttribute(attr, userDn));\n+    public void deleteLDAPuserFromGroupAttribute(String userUid, String groupCn,\n+                                                 String attr)\n+        throws LdapException {\n+        String groupDn =\n+            \"cn=\" + groupCn + \",\" + ThreadProperty.get(\"LDAP_GROUP_DN\");\n+        String userDn =\n+            \"uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\");\n+\n+        AttributeModification newAttr =\n+            new AttributeModification(AttributeModificationType.REMOVE,\n+                new LdapAttribute(attr, userDn));\n         this.modify(groupDn, newAttr);\n     }\n \n-    public boolean isLDAPuserInGroup(String userUid, String groupCn) throws LdapException {\n+    public boolean isLDAPuserInGroup(String userUid, String groupCn)\n+        throws LdapException {\n         boolean userBelongsToGroup = false;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"(&(cn=\" + groupCn + \")(member=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\") + \"))\", \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"),\n+                \"(&(cn=\" + groupCn + \")(member=uid=\" + userUid + \",\" +\n+                    ThreadProperty.get(\"LDAP_USER_DN\") + \"))\", \"cn\",\n+                \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             userBelongsToGroup = true;\n         }\n@@ -247,7 +284,9 @@ public class LdapUtils {\n     public boolean userLDAPexists(String userUid) throws LdapException {\n         boolean userExists = false;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_USER_DN\"), \"uid=\" + userUid, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_USER_DN\"),\n+                \"uid=\" + userUid, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             userExists = true;\n         }\n@@ -258,7 +297,9 @@ public class LdapUtils {\n     public boolean groupLDAPexists(String groupCn) throws LdapException {\n         boolean groupExists = false;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"),\n+                \"cn=\" + groupCn, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             groupExists = true;\n         }\n@@ -266,8 +307,11 @@ public class LdapUtils {\n         return groupExists;\n     }\n \n-    private Matcher getSearchResult(String baseDn, String searchFilter, String attribute, String REGEX) throws LdapException {\n-        SearchResult search = this.search(new SearchRequest(baseDn, searchFilter, attribute));\n+    private Matcher getSearchResult(String baseDn, String searchFilter,\n+                                    String attribute, String REGEX)\n+        throws LdapException {\n+        SearchResult search =\n+            this.search(new SearchRequest(baseDn, searchFilter, attribute));\n         String INPUT = search.toString();\n         Pattern pattern = Pattern.compile(REGEX);\n \n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/6/LdapUtils.java\nindex 238efa9351..b4b6d7c578 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/6/LdapUtils.java\n@@ -57,8 +57,7 @@ public class LdapUtils {\n         } else {\n             this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + ThreadProperty.get(\"LDAP_BASE\");\n         }\n-\n-        this.password = System.getProperty(\"LDAP_PASSWORD\");\n+this.password = System.getProperty(\"LDAP_PASSWORD\");\n         this.ssl = (System.getProperty(\"LDAP_SSL\", \"true\")).equals(\"true\") ? true : false;\n         String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") : ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\") : \"\";\n         String ldapPort = System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") : ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\") : \"\";\n@@ -112,7 +111,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n@@ -274,4 +273,4 @@ public class LdapUtils {\n         return pattern.matcher(INPUT);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "62",
                    "column": "171",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "column": "176",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/6/LdapUtils.java\nindex 238efa9351..f97b2f56f9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/6/LdapUtils.java\n@@ -32,7 +32,6 @@ import org.ldaptive.ssl.X509CredentialConfig;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-\n public class LdapUtils {\n \n     private final Logger logger = LoggerFactory.getLogger(LdapUtils.class);\n@@ -51,17 +50,17 @@ public class LdapUtils {\n \n     private String url;\n \n+\n     public LdapUtils() {\n         if (System.getProperty(\"LDAP_BASE\") != null) {\n             this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + System.getProperty(\"LDAP_BASE\");\n         } else {\n             this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + ThreadProperty.get(\"LDAP_BASE\");\n         }\n-\n         this.password = System.getProperty(\"LDAP_PASSWORD\");\n         this.ssl = (System.getProperty(\"LDAP_SSL\", \"true\")).equals(\"true\") ? true : false;\n-        String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") : ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\") : \"\";\n-        String ldapPort = System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") : ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\") : \"\";\n+        String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") : ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\"): \"\";\n+        String ldapPort = System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") : ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\"): \"\";\n         this.url = (this.ssl == true ? \"ldaps://\" : \"ldap://\") + ldapUrl + \":\" + ldapPort;\n     }\n \n@@ -75,7 +74,6 @@ public class LdapUtils {\n         crdCfg.setTrustCertificates(\"file:\" + ldapCaTrust);\n         sslCfg.setCredentialConfig(crdCfg);\n         this.config.setSslConfig(sslCfg);\n-\n         this.config.setConnectionInitializer(new BindConnectionInitializer(queryUser, new Credential(password)));\n         this.pool = new BlockingConnectionPool(new DefaultConnectionFactory(this.config));\n         if (!this.pool.isInitialized()) {\n@@ -84,6 +82,7 @@ public class LdapUtils {\n         this.connFactory = new PooledConnectionFactory(this.pool);\n     }\n \n+\n     public SearchResult search(SearchRequest request) throws LdapException {\n         Connection conn = null;\n         try {\n@@ -99,6 +98,7 @@ public class LdapUtils {\n         }\n     }\n \n+\n     public void add(LdapEntry entry) throws LdapException {\n         Connection conn = null;\n         try {\n@@ -112,7 +112,8 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n@@ -125,6 +126,7 @@ public class LdapUtils {\n         }\n     }\n \n+\n     public void delete(String dn) throws LdapException {\n         Connection conn = null;\n         try {\n@@ -138,30 +140,29 @@ public class LdapUtils {\n         }\n     }\n \n+\n     public String hashPassword(String password) throws NoSuchAlgorithmException {\n         SecureRandom secureRandom = new SecureRandom();\n         byte[] salt = new byte[4];\n         secureRandom.nextBytes(salt);\n-\n         MessageDigest crypt = MessageDigest.getInstance(\"SHA-1\");\n         crypt.reset();\n         crypt.update(password.getBytes());\n         crypt.update(salt);\n-        byte[] hash = crypt.digest();\n \n+        byte[] hash = crypt.digest();\n         byte[] hashPlusSalt = new byte[hash.length + salt.length];\n         System.arraycopy(hash, 0, hashPlusSalt, 0, hash.length);\n         System.arraycopy(salt, 0, hashPlusSalt, hash.length, salt.length);\n-\n-        return new StringBuilder().append(\"{SSHA}\")\n-                .append(Base64.getEncoder().encodeToString(hashPlusSalt))\n-                .toString();\n+        return new StringBuilder().append(\"{SSHA}\").append(Base64.getEncoder().encodeToString(hashPlusSalt)).toString();\n     }\n \n+\n     public int getLDAPMaxUidNumber() throws LdapException {\n         return this.getLDAPMaxNumber(\"UID\");\n     }\n \n+\n     public int getLDAPMaxGidNumber() throws LdapException {\n         return this.getLDAPMaxNumber(\"GID\");\n     }\n@@ -170,7 +171,6 @@ public class LdapUtils {\n         String base = \"\";\n         String attr = \"\";\n         int maxId = 0;\n-\n         switch (type) {\n             case \"UID\":\n                 base = ThreadProperty.get(\"LDAP_USER_DN\");\n@@ -195,9 +195,9 @@ public class LdapUtils {\n         return maxId;\n     }\n \n+\n     public int getLDAPgidNumber(String groupCn) throws LdapException {\n         int gid = 0;\n-\n         Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"gidNumber\", \".*gidNumber\\\\[(\\\\d+)\\\\].*\");\n         if (matcher.matches()) {\n             gid = Integer.parseInt(matcher.group(1));\n@@ -205,64 +205,60 @@ public class LdapUtils {\n         return gid;\n     }\n \n+\n     public ArrayList<String> getLDAPgroupsContainingUserAsAttribute(String userUid, String attr) throws LdapException {\n         ArrayList<String> groupsList = new ArrayList<>();\n-\n         Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), attr + \"=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\"), \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         while (matcher.find()) {\n             groupsList.add(matcher.group(1));\n         }\n-\n         return groupsList;\n     }\n \n+\n     public void deleteLDAPuserFromAllGroupsAttribute(String userUid, String attr) throws LdapException {\n         ArrayList<String> groupsList = this.getLDAPgroupsContainingUserAsAttribute(userUid, attr);\n-\n         Iterator<String> iter = groupsList.iterator();\n         while (iter.hasNext()) {\n             this.deleteLDAPuserFromGroupAttribute(userUid, iter.next(), attr);\n         }\n     }\n \n+\n     public void deleteLDAPuserFromGroupAttribute(String userUid, String groupCn, String attr) throws LdapException {\n         String groupDn = \"cn=\" + groupCn + \",\" + ThreadProperty.get(\"LDAP_GROUP_DN\");\n         String userDn = \"uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\");\n-\n         AttributeModification newAttr = new AttributeModification(AttributeModificationType.REMOVE, new LdapAttribute(attr, userDn));\n         this.modify(groupDn, newAttr);\n     }\n \n+\n     public boolean isLDAPuserInGroup(String userUid, String groupCn) throws LdapException {\n         boolean userBelongsToGroup = false;\n-\n         Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"(&(cn=\" + groupCn + \")(member=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\") + \"))\", \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             userBelongsToGroup = true;\n         }\n-\n         return userBelongsToGroup;\n     }\n \n+\n     public boolean userLDAPexists(String userUid) throws LdapException {\n         boolean userExists = false;\n-\n         Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_USER_DN\"), \"uid=\" + userUid, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             userExists = true;\n         }\n-\n         return userExists;\n     }\n \n+\n     public boolean groupLDAPexists(String groupCn) throws LdapException {\n         boolean groupExists = false;\n-\n         Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             groupExists = true;\n         }\n-\n         return groupExists;\n     }\n \n@@ -270,8 +266,6 @@ public class LdapUtils {\n         SearchResult search = this.search(new SearchRequest(baseDn, searchFilter, attribute));\n         String INPUT = search.toString();\n         Pattern pattern = Pattern.compile(REGEX);\n-\n         return pattern.matcher(INPUT);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/6/LdapUtils.java\nindex 238efa9351..fc1e7dfd0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/6/LdapUtils.java\n@@ -112,7 +112,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/6/LdapUtils.java\nindex 238efa9351..fc1e7dfd0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/6/LdapUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/6/LdapUtils.java\n@@ -112,7 +112,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n",
            "diff_size": 1
        }
    ]
}