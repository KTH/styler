{
    "error_id": "88",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/88/DenseDoubleRowUpdateSplit.java\nindex f417d06c85..05231eb27b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/88/DenseDoubleRowUpdateSplit.java\n@@ -1,83 +1,83 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/Apache-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- *\r\n- */\r\n-\r\n-\r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.ml.math2.VFactory;\r\n-import com.tencent.angel.ml.matrix.RowType;\r\n-import io.netty.buffer.ByteBuf;\r\n-\r\n-/**\r\n- * Row split of dense double row update.\r\n- */\r\n-public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\r\n-\r\n-  /**\r\n-   * values of row\r\n-   */\r\n-  private final double[] values;\r\n-\r\n-  /**\r\n-   * Create a new dense double row split update\r\n-   *\r\n-   * @param start start position\r\n-   * @param end end position\r\n-   * @param values values of row update\r\n-   */\r\n-  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\r\n-    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\r\n-    this.values = values;\r\n-  }\r\n-\r\n-  public DenseDoubleRowUpdateSplit() {\r\n-    this(-1, -1, -1, null);\r\n-  }\r\n-\r\n-  /**\r\n-   * Get values of row update\r\n-   *\r\n-   * @return double[] values of row update\r\n-   */\r\n-  public double[] getValues() {\r\n-    return values;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    super.serialize(buf);\r\n-    buf.writeInt(end - start);\r\n-    for (int i = start; i < end; i++) {\r\n-      buf.writeDouble(values[i]);\r\n-    }\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    super.deserialize(buf);\r\n-    double[] data = new double[buf.readInt()];\r\n-    for (int i = 0; i < data.length; i++) {\r\n-      data[i] = buf.readDouble();\r\n-    }\r\n-    vector = VFactory.denseDoubleVector(data);\r\n-  }\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 4 + super.bufferLen() + (end - start) * 8;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/Apache-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.ml.math2.VFactory;\n+import com.tencent.angel.ml.matrix.RowType;\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Row split of dense double row update.\n+ */\n+public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\n+\n+  /**\n+   * values of row\n+   */\n+  private final double[] values;\n+\n+  /**\n+   * Create a new dense double row split update\n+   *\n+   * @param start start position\n+   * @param end end position\n+   * @param values values of row update\n+   */\n+  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\n+    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\n+    this.values = values;\n+  }\n+\n+  public DenseDoubleRowUpdateSplit() {\n+    this(-1, -1, -1, null);\n+  }\n+\n+  /**\n+   * Get values of row update\n+   *\n+   * @return double[] values of row update\n+   */\n+  public double[] getValues() {\n+    return values;\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf buf) {\n+    super.serialize(buf);\n+    buf.writeInt(end - start);\n+    for (int i = start; i < end; i++) {\n+      buf.writeDouble(values[i]);\n+    }\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n+    super.deserialize(buf);\n+    double[] data = new double[buf.readInt()];\n+    for (int i = 0; i < data.length; i++) {\n+      data[i] = buf.readDouble();\n+    }\n+    vector = VFactory.denseDoubleVector(data);\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    return 4 + super.bufferLen() + (end - start) * 8;\n+  }\n+}\n",
            "diff_size": 83
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/88/DenseDoubleRowUpdateSplit.java\nindex f417d06c85..ec0b50b8e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/88/DenseDoubleRowUpdateSplit.java\n@@ -27,57 +27,57 @@ import io.netty.buffer.ByteBuf;\n  */\r\n public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\r\n \r\n-  /**\r\n-   * values of row\r\n-   */\r\n-  private final double[] values;\r\n+    /**\r\n+     * values of row\r\n+     */\r\n+    private final double[] values;\r\n \r\n-  /**\r\n-   * Create a new dense double row split update\r\n-   *\r\n-   * @param start start position\r\n-   * @param end end position\r\n-   * @param values values of row update\r\n-   */\r\n-  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\r\n-    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\r\n-    this.values = values;\r\n-  }\r\n+    /**\r\n+     * Create a new dense double row split update\r\n+     *\r\n+     * @param start  start position\r\n+     * @param end    end position\r\n+     * @param values values of row update\r\n+     */\r\n+    public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\r\n+        super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\r\n+        this.values = values;\r\n+    }\r\n \r\n-  public DenseDoubleRowUpdateSplit() {\r\n-    this(-1, -1, -1, null);\r\n-  }\r\n+    public DenseDoubleRowUpdateSplit() {\r\n+        this(-1, -1, -1, null);\r\n+    }\r\n \r\n-  /**\r\n-   * Get values of row update\r\n-   *\r\n-   * @return double[] values of row update\r\n-   */\r\n-  public double[] getValues() {\r\n-    return values;\r\n-  }\r\n+    /**\r\n+     * Get values of row update\r\n+     *\r\n+     * @return double[] values of row update\r\n+     */\r\n+    public double[] getValues() {\r\n+        return values;\r\n+    }\r\n \r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    super.serialize(buf);\r\n-    buf.writeInt(end - start);\r\n-    for (int i = start; i < end; i++) {\r\n-      buf.writeDouble(values[i]);\r\n+    @Override\r\n+    public void serialize(ByteBuf buf) {\r\n+        super.serialize(buf);\r\n+        buf.writeInt(end - start);\r\n+        for (int i = start; i < end; i++) {\r\n+            buf.writeDouble(values[i]);\r\n+        }\r\n     }\r\n-  }\r\n \r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    super.deserialize(buf);\r\n-    double[] data = new double[buf.readInt()];\r\n-    for (int i = 0; i < data.length; i++) {\r\n-      data[i] = buf.readDouble();\r\n+    @Override\r\n+    public void deserialize(ByteBuf buf) {\r\n+        super.deserialize(buf);\r\n+        double[] data = new double[buf.readInt()];\r\n+        for (int i = 0; i < data.length; i++) {\r\n+            data[i] = buf.readDouble();\r\n+        }\r\n+        vector = VFactory.denseDoubleVector(data);\r\n     }\r\n-    vector = VFactory.denseDoubleVector(data);\r\n-  }\r\n \r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 4 + super.bufferLen() + (end - start) * 8;\r\n-  }\r\n+    @Override\r\n+    public int bufferLen() {\r\n+        return 4 + super.bufferLen() + (end - start) * 8;\r\n+    }\r\n }\r\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/88/DenseDoubleRowUpdateSplit.java\nindex f417d06c85..597df632c2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/88/DenseDoubleRowUpdateSplit.java\n@@ -13,9 +13,8 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\r\n  * the License.\r\n  *\r\n- */\r\n-\r\n-\r\n+ */\n+\n package com.tencent.angel.psagent.matrix.oplog.cache;\r\n \r\n import com.tencent.angel.ml.math2.VFactory;\r\n@@ -80,4 +79,4 @@ public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\n   public int bufferLen() {\r\n     return 4 + super.bufferLen() + (end - start) * 8;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 59.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/88/DenseDoubleRowUpdateSplit.java\nindex f417d06c85..025061d078 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/88/DenseDoubleRowUpdateSplit.java\n@@ -16,21 +16,22 @@\n  */\r\n \r\n \r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.ml.math2.VFactory;\r\n-import com.tencent.angel.ml.matrix.RowType;\r\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.ml.math2.VFactory;\n+import com.tencent.angel.ml.matrix.RowType;\n import io.netty.buffer.ByteBuf;\r\n \r\n /**\r\n  * Row split of dense double row update.\r\n- */\r\n+ */\n+\n public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\r\n \r\n   /**\r\n    * values of row\r\n-   */\r\n-  private final double[] values;\r\n+   */\n+    private final double[] values;\r\n \r\n   /**\r\n    * Create a new dense double row split update\r\n@@ -38,46 +39,49 @@ public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\n    * @param start start position\r\n    * @param end end position\r\n    * @param values values of row update\r\n-   */\r\n-  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\r\n-    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\r\n-    this.values = values;\r\n-  }\r\n-\r\n-  public DenseDoubleRowUpdateSplit() {\r\n-    this(-1, -1, -1, null);\r\n-  }\r\n+   */\n+\n+    public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\n+    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\n+    this.values = values;\n+    }\n+\n+    public DenseDoubleRowUpdateSplit() {\n+    this(-1, -1, -1, null);\n+    }\r\n \r\n   /**\r\n    * Get values of row update\r\n    *\r\n    * @return double[] values of row update\r\n-   */\r\n-  public double[] getValues() {\r\n-    return values;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    super.serialize(buf);\r\n-    buf.writeInt(end - start);\r\n-    for (int i = start; i < end; i++) {\r\n-      buf.writeDouble(values[i]);\r\n-    }\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    super.deserialize(buf);\r\n-    double[] data = new double[buf.readInt()];\r\n-    for (int i = 0; i < data.length; i++) {\r\n-      data[i] = buf.readDouble();\r\n-    }\r\n-    vector = VFactory.denseDoubleVector(data);\r\n-  }\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 4 + super.bufferLen() + (end - start) * 8;\r\n-  }\r\n-}\r\n+   */\n+\n+    public double[] getValues() {\n+    return values;\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+    super.serialize(buf);\n+    buf.writeInt(end - start);\n+    for (int i = start; i < end; i++) {\n+        buf.writeDouble(values[i]);\n+    }\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+    super.deserialize(buf);\n+    double[] data = new double[buf.readInt()];\n+    for (int i = 0; i < data.length; i++) {\n+        data[i] = buf.readDouble();\n+    }\n+    vector = VFactory.denseDoubleVector(data);\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+    return 4 + super.bufferLen() + (end - start) * 8;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/88/DenseDoubleRowUpdateSplit.java\nindex f417d06c85..05231eb27b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/88/DenseDoubleRowUpdateSplit.java\n@@ -1,83 +1,83 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/Apache-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- *\r\n- */\r\n-\r\n-\r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.ml.math2.VFactory;\r\n-import com.tencent.angel.ml.matrix.RowType;\r\n-import io.netty.buffer.ByteBuf;\r\n-\r\n-/**\r\n- * Row split of dense double row update.\r\n- */\r\n-public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\r\n-\r\n-  /**\r\n-   * values of row\r\n-   */\r\n-  private final double[] values;\r\n-\r\n-  /**\r\n-   * Create a new dense double row split update\r\n-   *\r\n-   * @param start start position\r\n-   * @param end end position\r\n-   * @param values values of row update\r\n-   */\r\n-  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\r\n-    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\r\n-    this.values = values;\r\n-  }\r\n-\r\n-  public DenseDoubleRowUpdateSplit() {\r\n-    this(-1, -1, -1, null);\r\n-  }\r\n-\r\n-  /**\r\n-   * Get values of row update\r\n-   *\r\n-   * @return double[] values of row update\r\n-   */\r\n-  public double[] getValues() {\r\n-    return values;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    super.serialize(buf);\r\n-    buf.writeInt(end - start);\r\n-    for (int i = start; i < end; i++) {\r\n-      buf.writeDouble(values[i]);\r\n-    }\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    super.deserialize(buf);\r\n-    double[] data = new double[buf.readInt()];\r\n-    for (int i = 0; i < data.length; i++) {\r\n-      data[i] = buf.readDouble();\r\n-    }\r\n-    vector = VFactory.denseDoubleVector(data);\r\n-  }\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 4 + super.bufferLen() + (end - start) * 8;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/Apache-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.ml.math2.VFactory;\n+import com.tencent.angel.ml.matrix.RowType;\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Row split of dense double row update.\n+ */\n+public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\n+\n+  /**\n+   * values of row\n+   */\n+  private final double[] values;\n+\n+  /**\n+   * Create a new dense double row split update\n+   *\n+   * @param start start position\n+   * @param end end position\n+   * @param values values of row update\n+   */\n+  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\n+    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\n+    this.values = values;\n+  }\n+\n+  public DenseDoubleRowUpdateSplit() {\n+    this(-1, -1, -1, null);\n+  }\n+\n+  /**\n+   * Get values of row update\n+   *\n+   * @return double[] values of row update\n+   */\n+  public double[] getValues() {\n+    return values;\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf buf) {\n+    super.serialize(buf);\n+    buf.writeInt(end - start);\n+    for (int i = start; i < end; i++) {\n+      buf.writeDouble(values[i]);\n+    }\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n+    super.deserialize(buf);\n+    double[] data = new double[buf.readInt()];\n+    for (int i = 0; i < data.length; i++) {\n+      data[i] = buf.readDouble();\n+    }\n+    vector = VFactory.denseDoubleVector(data);\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    return 4 + super.bufferLen() + (end - start) * 8;\n+  }\n+}\n",
            "diff_size": 83
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/88/DenseDoubleRowUpdateSplit.java\nindex f417d06c85..ab4faaa7cf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/88/DenseDoubleRowUpdateSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/88/DenseDoubleRowUpdateSplit.java\n@@ -1,83 +1,81 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/Apache-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- *\r\n- */\r\n-\r\n-\r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.ml.math2.VFactory;\r\n-import com.tencent.angel.ml.matrix.RowType;\r\n-import io.netty.buffer.ByteBuf;\r\n-\r\n-/**\r\n- * Row split of dense double row update.\r\n- */\r\n-public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\r\n-\r\n-  /**\r\n-   * values of row\r\n-   */\r\n-  private final double[] values;\r\n-\r\n-  /**\r\n-   * Create a new dense double row split update\r\n-   *\r\n-   * @param start start position\r\n-   * @param end end position\r\n-   * @param values values of row update\r\n-   */\r\n-  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\r\n-    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\r\n-    this.values = values;\r\n-  }\r\n-\r\n-  public DenseDoubleRowUpdateSplit() {\r\n-    this(-1, -1, -1, null);\r\n-  }\r\n-\r\n-  /**\r\n-   * Get values of row update\r\n-   *\r\n-   * @return double[] values of row update\r\n-   */\r\n-  public double[] getValues() {\r\n-    return values;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    super.serialize(buf);\r\n-    buf.writeInt(end - start);\r\n-    for (int i = start; i < end; i++) {\r\n-      buf.writeDouble(values[i]);\r\n-    }\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    super.deserialize(buf);\r\n-    double[] data = new double[buf.readInt()];\r\n-    for (int i = 0; i < data.length; i++) {\r\n-      data[i] = buf.readDouble();\r\n-    }\r\n-    vector = VFactory.denseDoubleVector(data);\r\n-  }\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 4 + super.bufferLen() + (end - start) * 8;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/Apache-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.ml.math2.VFactory;\n+import com.tencent.angel.ml.matrix.RowType;\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Row split of dense double row update.\n+ */\n+public class DenseDoubleRowUpdateSplit extends RowUpdateSplit {\n+\n+  /**\n+   * values of row\n+   */\n+  private final double[] values;\n+\n+  /**\n+   * Create a new dense double row split update\n+   *\n+   * @param start start position\n+   * @param end end position\n+   * @param values values of row update\n+   */\n+  public DenseDoubleRowUpdateSplit(int rowIndex, int start, int end, double[] values) {\n+    super(rowIndex, RowType.T_DOUBLE_DENSE, start, end);\n+    this.values = values;\n+  }\n+\n+  public DenseDoubleRowUpdateSplit() {\n+    this(-1, -1, -1, null);\n+  }\n+\n+  /**\n+   * Get values of row update\n+   *\n+   * @return double[] values of row update\n+   */\n+  public double[] getValues() {\n+    return values;\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf buf) {\n+    super.serialize(buf);\n+    buf.writeInt(end - start);\n+    for (int i = start; i < end; i++) {\n+      buf.writeDouble(values[i]);\n+    }\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n+    super.deserialize(buf);\n+    double[] data = new double[buf.readInt()];\n+    for (int i = 0; i < data.length; i++) {\n+      data[i] = buf.readDouble();\n+    }\n+    vector = VFactory.denseDoubleVector(data);\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    return 4 + super.bufferLen() + (end - start) * 8;\n+  }\n+}\n",
            "diff_size": 83
        }
    ]
}