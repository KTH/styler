{
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * A {@link org.apache.crunch.Target} that wraps {@link org.apache.crunch.types.avro.AvroPathPerKeyOutputFormat} to allow one file\n * per key to be written as the output of a {@code PTable<String, T>}.\n *\n * <p>Note the restrictions that apply to the {@code AvroPathPerKeyOutputFormat}; in particular, it's a good",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/7/AvroPathPerKeyTarget.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/intellij/7/AvroPathPerKeyTarget.java\nindex d17e5d76cb..104a5b768b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/7/AvroPathPerKeyTarget.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/intellij/7/AvroPathPerKeyTarget.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.crunch.io.avro;\n \n import org.apache.avro.mapred.AvroWrapper;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/7/AvroPathPerKeyTarget.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/naturalize/7/AvroPathPerKeyTarget.java\nindex d17e5d76cb..16f8667ae0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/7/AvroPathPerKeyTarget.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/naturalize/7/AvroPathPerKeyTarget.java\n@@ -103,7 +103,7 @@ public class AvroPathPerKeyTarget extends FileTargetImpl {\n \n   private void move(Configuration conf, Path srcBase, FileSystem srcFs, Path dstBase, FileSystem dstFs, boolean sameFs)\n       throws IOException {\n-    Path[] keys = FileUtil.stat2Paths(srcFs.listStatus(srcBase));\n+  Path[] keys = FileUtil.stat2Paths(srcFs.listStatus(srcBase));\n     if (!dstFs.exists(dstBase)) {\n       dstFs.mkdirs(dstBase);\n     }\n@@ -132,4 +132,4 @@ public class AvroPathPerKeyTarget extends FileTargetImpl {\n   public String toString() {\n     return \"AvroFilePerKey(\" + path + \")\";\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 30, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 32, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 32, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 32, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 34, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 32, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 30, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/7/AvroPathPerKeyTarget.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/codebuff/7/AvroPathPerKeyTarget.java\nindex d17e5d76cb..f35d3fd781 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/errored/1/7/AvroPathPerKeyTarget.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-crunch/codebuff/7/AvroPathPerKeyTarget.java\n@@ -37,7 +37,6 @@ import org.apache.hadoop.io.NullWritable;\n import org.apache.hadoop.mapreduce.Job;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.IOException;\n \n /**\n@@ -47,89 +46,95 @@ import java.io.IOException;\n  * <p>Note the restrictions that apply to the {@code AvroPathPerKeyOutputFormat}; in particular, it's a good\n  * idea to write out all of the records for the same key together within each partition of the data.\n  */\n+\n public class AvroPathPerKeyTarget extends FileTargetImpl {\n \n-  private static final Logger LOG = LoggerFactory.getLogger(AvroPathPerKeyTarget.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(AvroPathPerKeyTarget.class);\n \n-  public AvroPathPerKeyTarget(String path) {\n+    public AvroPathPerKeyTarget(String path) {\n     this(new Path(path));\n-  }\n+    }\n \n-  public AvroPathPerKeyTarget(Path path) {\n+    public AvroPathPerKeyTarget(Path path) {\n     this(path, SequentialFileNamingScheme.getInstance());\n-  }\n+    }\n \n-  public AvroPathPerKeyTarget(Path path, FileNamingScheme fileNamingScheme) {\n+    public AvroPathPerKeyTarget(Path path, FileNamingScheme fileNamingScheme) {\n     super(path, AvroPathPerKeyOutputFormat.class, fileNamingScheme);\n-  }\n+    }\n \n-  @Override\n-  public boolean accept(OutputHandler handler, PType<?> ptype) {\n+    @Override\n+    public boolean accept(OutputHandler handler, PType<?> ptype) {\n     if (ptype instanceof PTableType && ptype instanceof AvroType) {\n-      if (String.class.equals(((PTableType) ptype).getKeyType().getTypeClass())) {\n+        if (String.class.equals(((PTableType) ptype).getKeyType()\n+                                                    .getTypeClass())) {\n         handler.configure(this, ptype);\n         return true;\n-      }\n+        }\n     }\n     return false;\n-  }\n+    }\n \n-  @Override\n-  public void configureForMapReduce(Job job, PType<?> ptype, Path outputPath, String name) {\n+    @Override\n+    public void configureForMapReduce(Job job, PType<?> ptype, Path outputPath, String name) {\n     AvroType<?> atype = (AvroType) ((PTableType) ptype).getValueType();\n     FormatBundle bundle = FormatBundle.forOutput(AvroPathPerKeyOutputFormat.class);\n     bundle.set(\"avro.output.schema\", atype.getSchema().toString());\n     AvroMode.fromType(atype).configure(bundle);\n     configureForMapReduce(job, AvroWrapper.class, NullWritable.class, bundle, outputPath, name);\n-  }\n+    }\n \n-  @Override\n-  public void handleOutputs(Configuration conf, Path workingPath, int index) throws IOException {\n+    @Override\n+    public void handleOutputs(Configuration conf, Path workingPath, int index) throws IOException {\n     FileSystem srcFs = workingPath.getFileSystem(conf);\n     Path base = new Path(workingPath, PlanningParameters.MULTI_OUTPUT_PREFIX + index);\n     if (!srcFs.exists(base)) {\n-      LOG.warn(\"Nothing to copy from {}\", base);\n-      return;\n+        LOG.warn(\"Nothing to copy from {}\", base);\n+        return;\n     }\n     FileSystem dstFs = path.getFileSystem(conf);\n     Path[] keys = FileUtil.stat2Paths(srcFs.listStatus(base));\n     if (!dstFs.exists(path)) {\n-      dstFs.mkdirs(path);\n+        dstFs.mkdirs(path);\n     }\n     boolean sameFs = isCompatible(srcFs, path);\n     move(conf, base, srcFs, path, dstFs, sameFs);\n     dstFs.create(getSuccessIndicator(), true).close();\n-  }\n+    }\n \n-  private void move(Configuration conf, Path srcBase, FileSystem srcFs, Path dstBase, FileSystem dstFs, boolean sameFs)\n-      throws IOException {\n+    private void move(\n+        Configuration conf,\n+        Path srcBase,\n+        FileSystem srcFs,\n+        Path dstBase,\n+        FileSystem dstFs, boolean sameFs) throws IOException {\n     Path[] keys = FileUtil.stat2Paths(srcFs.listStatus(srcBase));\n     if (!dstFs.exists(dstBase)) {\n-      dstFs.mkdirs(dstBase);\n+        dstFs.mkdirs(dstBase);\n     }\n     for (Path key : keys) {\n-      Path[] srcs = FileUtil.stat2Paths(srcFs.listStatus(key), key);\n-      Path targetPath = new Path(dstBase, key.getName());\n-      dstFs.mkdirs(targetPath);\n-      for (Path s : srcs) {\n-        if (srcFs.isDirectory(s)) {\n-          Path nextBase = new Path(targetPath, s.getName());\n-          dstFs.mkdirs(nextBase);\n-          move(conf, s, srcFs, nextBase, dstFs, sameFs);\n-        } else {\n-          Path d = getDestFile(conf, s, targetPath, s.getName().contains(\"-m-\"));\n-          if (sameFs) {\n-            srcFs.rename(s, d);\n-          } else {\n-            FileUtil.copy(srcFs, s, dstFs, d, true, true, conf);\n-          }\n+        Path[] srcs = FileUtil.stat2Paths(srcFs.listStatus(key), key);\n+        Path targetPath = new Path(dstBase, key.getName());\n+        dstFs.mkdirs(targetPath);\n+        for (Path s : srcs) {\n+                              if (srcFs.isDirectory(s)) {\n+            Path nextBase = new Path(targetPath, s.getName());\n+            dstFs.mkdirs(nextBase);\n+            move(conf, s, srcFs, nextBase, dstFs, sameFs);\n+                              } else {\n+                                Path d = getDestFile(conf, s, targetPath, s.getName().contains(\"-m-\"));\n+                                if (sameFs) {\n+                                  srcFs.rename(s, d);\n+                                } else {\n+                                  FileUtil.copy(srcFs, s, dstFs, d, true, true, conf);\n+                                }\n+                              }\n         }\n-      }\n     }\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     return \"AvroFilePerKey(\" + path + \")\";\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}