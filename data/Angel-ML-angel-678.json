{
    "error_id": "678",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/678/LabeledData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/678/LabeledData.java\nindex c9f49b0155..fae8145713 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/678/LabeledData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/678/LabeledData.java\n@@ -13,67 +13,67 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.feature;\n \n import com.tencent.angel.ml.math.TAbstractVector;\n \n /**\n  * training data with label\n- *\n  */\n public class LabeledData {\n \n-  private TAbstractVector x;\n-  private double y;\n-  private double y1;\n+    private TAbstractVector x;\n+    private double y;\n+    private double y1;\n \n-  private double score;\n+    private double score;\n \n-  /**\n-   * @param x\n-   * @param y\n-   */\n-  public LabeledData(TAbstractVector x, double y) {\n-    super();\n-    this.x = x;\n-    this.y = y;\n-  }\n+    /**\n+     * @param x\n+     * @param y\n+     */\n+    public LabeledData(TAbstractVector x, double y) {\n+        super();\n+        this.x = x;\n+        this.y = y;\n+    }\n \n-  public LabeledData() {\n-    super();\n-    x = null;\n-    y = 0;\n-  }\n+    public LabeledData() {\n+        super();\n+        x = null;\n+        y = 0;\n+    }\n \n-  public TAbstractVector getX() {\n-    return x;\n-  }\n+    public TAbstractVector getX() {\n+        return x;\n+    }\n \n-  public void setX(TAbstractVector x) {\n-    this.x = x;\n-  }\n+    public void setX(TAbstractVector x) {\n+        this.x = x;\n+    }\n \n-  public double getY() {\n-    return y;\n-  }\n+    public double getY() {\n+        return y;\n+    }\n \n-  public void setY(double y) {\n-    this.y = y;\n-  }\n+    public void setY(double y) {\n+        this.y = y;\n+    }\n \n-  public void setY1(double y1) {\n-    this.y1 = y1;\n-  }\n+    public void setY1(double y1) {\n+        this.y1 = y1;\n+    }\n \n-  public double getY1() {\n-    return y1;\n-  }\n+    public double getY1() {\n+        return y1;\n+    }\n \n-  public double getScore() {\n-    return score;\n-  }\n+    public double getScore() {\n+        return score;\n+    }\n \n-  public void setScore(double score) {\n-    this.score = score;\n-  }\n+    public void setScore(double score) {\n+        this.score = score;\n+    }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/678/LabeledData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/678/LabeledData.java\nindex c9f49b0155..7a29eac13d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/678/LabeledData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/678/LabeledData.java\n@@ -76,4 +76,4 @@ public class LabeledData {\n   public void setScore(double score) {\n     this.score = score;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/678/LabeledData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/678/LabeledData.java\nindex c9f49b0155..af9918eb5d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/678/LabeledData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/678/LabeledData.java\n@@ -21,59 +21,59 @@ import com.tencent.angel.ml.math.TAbstractVector;\n  * training data with label\n  *\n  */\n-public class LabeledData {\n-\n-  private TAbstractVector x;\n-  private double y;\n-  private double y1;\n \n-  private double score;\n+public class LabeledData {\n+    private TAbstractVector x;\n+    private double y;\n+    private double y1;\n+    private double score;\n \n   /**\n    * @param x\n    * @param y\n    */\n-  public LabeledData(TAbstractVector x, double y) {\n+\n+    public LabeledData(TAbstractVector x, double y) {\n     super();\n     this.x = x;\n     this.y = y;\n-  }\n+    }\n \n-  public LabeledData() {\n+    public LabeledData() {\n     super();\n     x = null;\n     y = 0;\n-  }\n+    }\n \n-  public TAbstractVector getX() {\n+    public TAbstractVector getX() {\n     return x;\n-  }\n+    }\n \n-  public void setX(TAbstractVector x) {\n+    public void setX(TAbstractVector x) {\n     this.x = x;\n-  }\n+    }\n \n-  public double getY() {\n+    public double getY() {\n     return y;\n-  }\n+    }\n \n-  public void setY(double y) {\n+    public void setY(double y) {\n     this.y = y;\n-  }\n+    }\n \n-  public void setY1(double y1) {\n+    public void setY1(double y1) {\n     this.y1 = y1;\n-  }\n+    }\n \n-  public double getY1() {\n+    public double getY1() {\n     return y1;\n-  }\n+    }\n \n-  public double getScore() {\n+    public double getScore() {\n     return score;\n-  }\n+    }\n \n-  public void setScore(double score) {\n+    public void setScore(double score) {\n     this.score = score;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}