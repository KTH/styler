{
    "error_id": "877",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "'METHOD_DEF' has more than 1 empty lines after.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    }\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/877/DemoApplicationConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/877/DemoApplicationConfiguration.java\nindex b3c1fb49d6..1f758fb036 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/877/DemoApplicationConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/877/DemoApplicationConfiguration.java\n@@ -25,10 +25,8 @@ public class DemoApplicationConfiguration {\n \n         InMemoryUserDetailsManager inMemoryUserDetailsManager = new InMemoryUserDetailsManager();\n \n-        String[][] usersGroupsAndRoles = {\n-                {\"system\", \"password\", \"ROLE_ACTIVITI_USER\"},\n-                {\"admin\", \"password\", \"ROLE_ACTIVITI_ADMIN\"},\n-        };\n+        String[][] usersGroupsAndRoles = { {\"system\", \"password\", \"ROLE_ACTIVITI_USER\"},\n+                {\"admin\", \"password\", \"ROLE_ACTIVITI_ADMIN\"}, };\n \n         for (String[] user : usersGroupsAndRoles) {\n             List<String> authoritiesStrings = Arrays.asList(Arrays.copyOfRange(user, 2, user.length));\n@@ -36,16 +34,11 @@ public class DemoApplicationConfiguration {\n             inMemoryUserDetailsManager.createUser(new User(user[0], passwordEncoder().encode(user[1]),\n                     authoritiesStrings.stream().map(s -> new SimpleGrantedAuthority(s)).collect(Collectors.toList())));\n         }\n-\n-\n-        return inMemoryUserDetailsManager;\n-\n+return inMemoryUserDetailsManager;\n     }\n \n     @Bean\n     public PasswordEncoder passwordEncoder() {\n         return new BCryptPasswordEncoder();\n     }\n-\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/877/DemoApplicationConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/877/DemoApplicationConfiguration.java\nindex b3c1fb49d6..d96af09b5d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/877/DemoApplicationConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/877/DemoApplicationConfiguration.java\n@@ -10,7 +10,6 @@ import org.springframework.security.core.userdetails.UserDetailsService;\n import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.security.crypto.password.PasswordEncoder;\n import org.springframework.security.provisioning.InMemoryUserDetailsManager;\n-\n import java.util.Arrays;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -22,24 +21,14 @@ public class DemoApplicationConfiguration {\n \n     @Bean\n     public UserDetailsService myUserDetailsService() {\n-\n-        InMemoryUserDetailsManager inMemoryUserDetailsManager = new InMemoryUserDetailsManager();\n-\n-        String[][] usersGroupsAndRoles = {\n-                {\"system\", \"password\", \"ROLE_ACTIVITI_USER\"},\n-                {\"admin\", \"password\", \"ROLE_ACTIVITI_ADMIN\"},\n-        };\n-\n-        for (String[] user : usersGroupsAndRoles) {\n-            List<String> authoritiesStrings = Arrays.asList(Arrays.copyOfRange(user, 2, user.length));\n-            logger.info(\"> Registering new user: \" + user[0] + \" with the following Authorities[\" + authoritiesStrings + \"]\");\n-            inMemoryUserDetailsManager.createUser(new User(user[0], passwordEncoder().encode(user[1]),\n-                    authoritiesStrings.stream().map(s -> new SimpleGrantedAuthority(s)).collect(Collectors.toList())));\n-        }\n-\n-\n-        return inMemoryUserDetailsManager;\n-\n+    InMemoryUserDetailsManager inMemoryUserDetailsManager = new InMemoryUserDetailsManager();\n+    String[][] usersGroupsAndRoles = { { \"system\", \"password\", \"ROLE_ACTIVITI_USER\" }, { \"admin\", \"password\", \"ROLE_ACTIVITI_ADMIN\" },};\n+    for (String[] user : usersGroupsAndRoles) {\n+        List<String> authoritiesStrings = Arrays.asList(Arrays.copyOfRange(user, 2, user.length));\n+        logger.info(\"> Registering new user: \" + user[0] + \" with the following Authorities[\" + authoritiesStrings + \"]\");\n+        inMemoryUserDetailsManager.createUser(new User(user[0], passwordEncoder().encode(user[1]), authoritiesStrings.stream().map(s -> new SimpleGrantedAuthority(s)).collect(Collectors.toList())));\n+    }\n+    return inMemoryUserDetailsManager;\n     }\n \n     @Bean\n@@ -47,5 +36,4 @@ public class DemoApplicationConfiguration {\n         return new BCryptPasswordEncoder();\n     }\n \n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/877/DemoApplicationConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/877/DemoApplicationConfiguration.java\nindex b3c1fb49d6..b72a1e4993 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/877/DemoApplicationConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/877/DemoApplicationConfiguration.java\n@@ -43,7 +43,7 @@ public class DemoApplicationConfiguration {\n     }\n \n     @Bean\n-    public PasswordEncoder passwordEncoder() {\n+    public PasswordEncoderpasswordEncoder() {\n         return new BCryptPasswordEncoder();\n     }\n \n",
            "diff_size": 1
        }
    ]
}