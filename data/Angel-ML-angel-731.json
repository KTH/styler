{
    "error_id": "731",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/731/PSAgentAttemptContainerAssignedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/731/PSAgentAttemptContainerAssignedEvent.java\nindex e8abc73726..6214795273 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/731/PSAgentAttemptContainerAssignedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/731/PSAgentAttemptContainerAssignedEvent.java\n@@ -20,15 +20,15 @@ import com.tencent.angel.psagent.PSAgentAttemptId;\n import org.apache.hadoop.yarn.api.records.Container;\n \n public class PSAgentAttemptContainerAssignedEvent extends PSAgentAttemptEvent {\n-  private final Container container;\n+    private final Container container;\n \n-  public PSAgentAttemptContainerAssignedEvent(PSAgentAttemptId id, Container container) {\n-    super(PSAgentAttemptEventType.PSAGENT_ATTEMPT_CONTAINER_ASSIGNED, id);\n-    this.container = container;\n-  }\n+    public PSAgentAttemptContainerAssignedEvent(PSAgentAttemptId id, Container container) {\n+        super(PSAgentAttemptEventType.PSAGENT_ATTEMPT_CONTAINER_ASSIGNED, id);\n+        this.container = container;\n+    }\n \n-  public Container getContainer() {\n-    return container;\n-  }\n+    public Container getContainer() {\n+        return container;\n+    }\n \n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/731/PSAgentAttemptContainerAssignedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/731/PSAgentAttemptContainerAssignedEvent.java\nindex e8abc73726..fdce530a7b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/731/PSAgentAttemptContainerAssignedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/731/PSAgentAttemptContainerAssignedEvent.java\n@@ -31,4 +31,4 @@ public class PSAgentAttemptContainerAssignedEvent extends PSAgentAttemptEvent {\n     return container;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/731/PSAgentAttemptContainerAssignedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/731/PSAgentAttemptContainerAssignedEvent.java\nindex e8abc73726..5346b2fdb2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/731/PSAgentAttemptContainerAssignedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/731/PSAgentAttemptContainerAssignedEvent.java\n@@ -20,15 +20,15 @@ import com.tencent.angel.psagent.PSAgentAttemptId;\n import org.apache.hadoop.yarn.api.records.Container;\n \n public class PSAgentAttemptContainerAssignedEvent extends PSAgentAttemptEvent {\n-  private final Container container;\n+    private final Container container;\n \n-  public PSAgentAttemptContainerAssignedEvent(PSAgentAttemptId id, Container container) {\n+    public PSAgentAttemptContainerAssignedEvent(PSAgentAttemptId id, Container container) {\n     super(PSAgentAttemptEventType.PSAGENT_ATTEMPT_CONTAINER_ASSIGNED, id);\n     this.container = container;\n-  }\n+    }\n \n-  public Container getContainer() {\n+    public Container getContainer() {\n     return container;\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}