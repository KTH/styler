{
    "error_id": "83",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n            \"Only UsernamePasswordAuthenticationToken is supported\"));\n    UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n    String username = userToken.getName();\n    String password = (String) authentication.getCredentials();\n    if (this.logger.isDebugEnabled()) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler/83/ApolloLdapAuthenticationProvider.java\nindex 4633d62a22..4b663d4c71 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler/83/ApolloLdapAuthenticationProvider.java\n@@ -1,5 +1,3 @@\n-\n-\n package com.ctrip.framework.apollo.portal.spi.ldap;\n \n import com.ctrip.framework.apollo.portal.spi.configuration.LdapExtendProperties;\n@@ -57,7 +55,8 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n     Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages\n         .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n             \"Only UsernamePasswordAuthenticationToken is supported\"));\n-    UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n+            UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken\n+            ) authentication;\n     String username = userToken.getName();\n     String password = (String) authentication.getCredentials();\n     if (this.logger.isDebugEnabled()) {\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/intellij/83/ApolloLdapAuthenticationProvider.java\nindex 4633d62a22..18948bb586 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/intellij/83/ApolloLdapAuthenticationProvider.java\n@@ -57,7 +57,8 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n     Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages\n         .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n             \"Only UsernamePasswordAuthenticationToken is supported\"));\n-    UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n+    UsernamePasswordAuthenticationToken userToken =\n+        (UsernamePasswordAuthenticationToken) authentication;\n     String username = userToken.getName();\n     String password = (String) authentication.getCredentials();\n     if (this.logger.isDebugEnabled()) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/naturalize/83/ApolloLdapAuthenticationProvider.java\nindex 4633d62a22..489e6c3c3c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/naturalize/83/ApolloLdapAuthenticationProvider.java\n@@ -1,5 +1,3 @@\n-\n-\n package com.ctrip.framework.apollo.portal.spi.ldap;\n \n import com.ctrip.framework.apollo.portal.spi.configuration.LdapExtendProperties;\n@@ -26,27 +24,23 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n \n   private LdapExtendProperties properties;\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator,\n+  public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator,\n       LdapAuthoritiesPopulator authoritiesPopulator) {\n     super(authenticator, authoritiesPopulator);\n   }\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator) {\n+  public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator) {\n     super(authenticator);\n   }\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator,\n+  public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator,\n       LdapAuthoritiesPopulator authoritiesPopulator,\n       LdapExtendProperties properties) {\n     super(authenticator, authoritiesPopulator);\n     this.properties = properties;\n   }\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator,\n+  public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator,\n       LdapExtendProperties properties) {\n     super(authenticator);\n     this.properties = properties;\n@@ -54,10 +48,9 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n \n   @Override\n   public Authentication authenticate(Authentication authentication) throws AuthenticationException {\n-    Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages\n-        .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n+    Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages.getMessage(\"LdapAuthenticationProvider.onlySupports\",\n             \"Only UsernamePasswordAuthenticationToken is supported\"));\n-    UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n+UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n     String username = userToken.getName();\n     String password = (String) authentication.getCredentials();\n     if (this.logger.isDebugEnabled()) {\n@@ -65,11 +58,9 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n     }\n \n     if (!StringUtils.hasLength(username)) {\n-      throw new BadCredentialsException(\n-          this.messages.getMessage(\"LdapAuthenticationProvider.emptyUsername\", \"Empty Username\"));\n+      throw new BadCredentialsException(this.messages.getMessage(\"LdapAuthenticationProvider.emptyUsername\", \"Empty Username\"));\n     } else if (!StringUtils.hasLength(password)) {\n-      throw new BadCredentialsException(this.messages\n-          .getMessage(\"AbstractLdapAuthenticationProvider.emptyPassword\", \"Empty Password\"));\n+      throw new BadCredentialsException(this.messages.getMessage(\"AbstractLdapAuthenticationProvider.emptyPassword\", \"Empty Password\"));\n     } else {\n       Assert.notNull(password, \"Null password was supplied in authentication token\");\n       DirContextOperations userData = this.doAuthentication(userToken);\n@@ -79,4 +70,4 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n       return this.createSuccessfulAuthentication(userToken, user);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/codebuff/83/ApolloLdapAuthenticationProvider.java\nindex 4633d62a22..624a0e0523 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/codebuff/83/ApolloLdapAuthenticationProvider.java\n@@ -22,61 +22,50 @@ import org.springframework.util.StringUtils;\n  *\n  * @author wuzishu\n  */\n-public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider {\n \n-  private LdapExtendProperties properties;\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator,\n-      LdapAuthoritiesPopulator authoritiesPopulator) {\n+public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider {\n+    private LdapExtendProperties properties;\n+\n+    public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator, LdapAuthoritiesPopulator authoritiesPopulator) {\n     super(authenticator, authoritiesPopulator);\n-  }\n+    }\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator) {\n+    public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator) {\n     super(authenticator);\n-  }\n+    }\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator,\n-      LdapAuthoritiesPopulator authoritiesPopulator,\n-      LdapExtendProperties properties) {\n+    public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator,\n+                                            LdapAuthoritiesPopulator authoritiesPopulator, LdapExtendProperties properties) {\n     super(authenticator, authoritiesPopulator);\n     this.properties = properties;\n-  }\n+    }\n \n-  public ApolloLdapAuthenticationProvider(\n-      LdapAuthenticator authenticator,\n-      LdapExtendProperties properties) {\n+    public ApolloLdapAuthenticationProvider(LdapAuthenticator authenticator, LdapExtendProperties properties) {\n     super(authenticator);\n     this.properties = properties;\n-  }\n+    }\n \n-  @Override\n-  public Authentication authenticate(Authentication authentication) throws AuthenticationException {\n-    Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages\n-        .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n-            \"Only UsernamePasswordAuthenticationToken is supported\"));\n+    @Override\n+    public Authentication authenticate(Authentication authentication) throws AuthenticationException {\n+    Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages.getMessage(\"LdapAuthenticationProvider.onlySupports\", \"Only UsernamePasswordAuthenticationToken is supported\"));\n     UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n     String username = userToken.getName();\n     String password = (String) authentication.getCredentials();\n     if (this.logger.isDebugEnabled()) {\n-      this.logger.debug(\"Processing authentication request for user: \" + username);\n+        this.logger.debug(\"Processing authentication request for user: \" + username);\n     }\n \n     if (!StringUtils.hasLength(username)) {\n-      throw new BadCredentialsException(\n-          this.messages.getMessage(\"LdapAuthenticationProvider.emptyUsername\", \"Empty Username\"));\n+        throw new BadCredentialsException(this.messages.getMessage(\"LdapAuthenticationProvider.emptyUsername\", \"Empty Username\"));\n     } else if (!StringUtils.hasLength(password)) {\n-      throw new BadCredentialsException(this.messages\n-          .getMessage(\"AbstractLdapAuthenticationProvider.emptyPassword\", \"Empty Password\"));\n+      throw new BadCredentialsException(this.messages.getMessage(\"AbstractLdapAuthenticationProvider.emptyPassword\", \"Empty Password\"));\n     } else {\n       Assert.notNull(password, \"Null password was supplied in authentication token\");\n       DirContextOperations userData = this.doAuthentication(userToken);\n       String loginId = userData.getStringAttribute(properties.getMapping().getLoginId());\n-      UserDetails user = this.userDetailsContextMapper.mapUserFromContext(userData, loginId,\n-          this.loadUserAuthorities(userData, loginId, (String) authentication.getCredentials()));\n+      UserDetails user = this.userDetailsContextMapper.mapUserFromContext(userData, loginId, this.loadUserAuthorities(userData, loginId, (String) authentication.getCredentials()));\n       return this.createSuccessfulAuthentication(userToken, user);\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_random/83/ApolloLdapAuthenticationProvider.java\nindex 4633d62a22..4b663d4c71 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_random/83/ApolloLdapAuthenticationProvider.java\n@@ -1,5 +1,3 @@\n-\n-\n package com.ctrip.framework.apollo.portal.spi.ldap;\n \n import com.ctrip.framework.apollo.portal.spi.configuration.LdapExtendProperties;\n@@ -57,7 +55,8 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n     Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages\n         .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n             \"Only UsernamePasswordAuthenticationToken is supported\"));\n-    UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n+            UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken\n+            ) authentication;\n     String username = userToken.getName();\n     String password = (String) authentication.getCredentials();\n     if (this.logger.isDebugEnabled()) {\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_three_grams/83/ApolloLdapAuthenticationProvider.java\nindex 4633d62a22..1bf99cad85 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/83/ApolloLdapAuthenticationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_three_grams/83/ApolloLdapAuthenticationProvider.java\n@@ -1,5 +1,3 @@\n-\n-\n package com.ctrip.framework.apollo.portal.spi.ldap;\n \n import com.ctrip.framework.apollo.portal.spi.configuration.LdapExtendProperties;\n@@ -57,7 +55,7 @@ public class ApolloLdapAuthenticationProvider extends LdapAuthenticationProvider\n     Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, this.messages\n         .getMessage(\"LdapAuthenticationProvider.onlySupports\",\n             \"Only UsernamePasswordAuthenticationToken is supported\"));\n-    UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n+            UsernamePasswordAuthenticationToken userToken = (UsernamePasswordAuthenticationToken) authentication;\n     String username = userToken.getName();\n     String password = (String) authentication.getCredentials();\n     if (this.logger.isDebugEnabled()) {\n",
            "diff_size": 3
        }
    ]
}