{
    "error_id": "67",
    "information": {
        "errors": [
            {
                "line": "47",
                "column": "59",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     * If absent, the Reply-To address will be omitted.\n     */\n    public Optional<InternetAddress[]> getReplyToAddress(){\n        return Optional.absent();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/67/AbstractEmailStrategy.java\nindex e4454f9ed3..f40f3d2f16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/67/AbstractEmailStrategy.java\n@@ -44,7 +44,7 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/67/AbstractEmailStrategy.java\nindex e4454f9ed3..a9867046c5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/67/AbstractEmailStrategy.java\n@@ -18,6 +18,7 @@\n  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n  */\n+\n package org.zanata.email;\n \n import javax.mail.internet.InternetAddress;\n@@ -28,6 +29,7 @@ import com.google.common.base.Optional;\n /**\n  * Strategy class for EmailBuilder to customise the content and recipients\n  * of an email.\n+ *\n  * @author Sean Flanigan <a href=\"mailto:sflaniga@redhat.com\">sflaniga@redhat.com</a>\n  */\n public abstract class AbstractEmailStrategy {\n@@ -44,7 +46,7 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/naturalize/67/AbstractEmailStrategy.java\nindex e4454f9ed3..935f5e4d40 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/naturalize/67/AbstractEmailStrategy.java\n@@ -44,9 +44,9 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n     public abstract String getSubject(Messages msgs);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/67/AbstractEmailStrategy.java\nindex e4454f9ed3..8382de1093 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/67/AbstractEmailStrategy.java\n@@ -21,7 +21,6 @@\n package org.zanata.email;\n \n import javax.mail.internet.InternetAddress;\n-\n import org.zanata.i18n.Messages;\n import com.google.common.base.Optional;\n \n@@ -30,6 +29,8 @@ import com.google.common.base.Optional;\n  * of an email.\n  * @author Sean Flanigan <a href=\"mailto:sflaniga@redhat.com\">sflaniga@redhat.com</a>\n  */\n+\n+\n public abstract class AbstractEmailStrategy {\n \n     /**\n@@ -44,9 +45,12 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n-    public abstract String getSubject(Messages msgs);\n-}\n+    public abstract String getSubject(Messages msgs)\n+        ;\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/67/AbstractEmailStrategy.java\nindex e4454f9ed3..f40f3d2f16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/67/AbstractEmailStrategy.java\n@@ -44,7 +44,7 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "49",
                    "column": "5",
                    "severity": "error",
                    "message": "'{' at column 5 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_three_grams/67/AbstractEmailStrategy.java\nindex e4454f9ed3..38490ccef5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/67/AbstractEmailStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_three_grams/67/AbstractEmailStrategy.java\n@@ -44,8 +44,10 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n-        return Optional.absent();\n+    public Optional<InternetAddress[]> getReplyToAddress()\n+\n+    {\n+    return Optional.absent();\n     }\n \n     public abstract String getSubject(Messages msgs);\n",
            "diff_size": 4
        }
    ]
}