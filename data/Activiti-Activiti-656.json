{
    "error_id": "656",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.persistence.entity;\n\nimport java.util.List;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/656/ProcessDefinitionEntity.java\nindex 68f1b24f50..41289d3000 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/656/ProcessDefinitionEntity.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n@@ -62,5 +63,5 @@ public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasR\n   String getEngineVersion();\n \n   void setEngineVersion(String engineVersion);\n-  \n+\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/656/ProcessDefinitionEntity.java\nindex 68f1b24f50..0cd32f6527 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/656/ProcessDefinitionEntity.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n@@ -21,46 +22,46 @@ import org.activiti.engine.repository.ProcessDefinition;\n @Internal\n public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasRevision {\n \n-  List<IdentityLinkEntity> getIdentityLinks();\n+    List<IdentityLinkEntity> getIdentityLinks();\n+\n+    void setKey(String key);\n \n-  void setKey(String key);\n+    void setName(String name);\n \n-  void setName(String name);\n+    void setDescription(String description);\n \n-  void setDescription(String description);\n+    void setDeploymentId(String deploymentId);\n \n-  void setDeploymentId(String deploymentId);\n+    void setVersion(int version);\n \n-  void setVersion(int version);\n+    void setResourceName(String resourceName);\n \n-  void setResourceName(String resourceName);\n+    void setTenantId(String tenantId);\n \n-  void setTenantId(String tenantId);\n+    Integer getHistoryLevel();\n \n-  Integer getHistoryLevel();\n+    void setHistoryLevel(Integer historyLevel);\n \n-  void setHistoryLevel(Integer historyLevel);\n+    void setCategory(String category);\n \n-  void setCategory(String category);\n+    void setDiagramResourceName(String diagramResourceName);\n \n-  void setDiagramResourceName(String diagramResourceName);\n+    boolean getHasStartFormKey();\n \n-  boolean getHasStartFormKey();\n+    void setStartFormKey(boolean hasStartFormKey);\n \n-  void setStartFormKey(boolean hasStartFormKey);\n+    void setHasStartFormKey(boolean hasStartFormKey);\n \n-  void setHasStartFormKey(boolean hasStartFormKey);\n+    boolean isGraphicalNotationDefined();\n \n-  boolean isGraphicalNotationDefined();\n+    void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n \n-  void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n+    int getSuspensionState();\n \n-  int getSuspensionState();\n+    void setSuspensionState(int suspensionState);\n \n-  void setSuspensionState(int suspensionState);\n+    String getEngineVersion();\n \n-  String getEngineVersion();\n+    void setEngineVersion(String engineVersion);\n \n-  void setEngineVersion(String engineVersion);\n-  \n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'INTERFACE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/656/ProcessDefinitionEntity.java\nindex 68f1b24f50..7f9b10aaac 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/656/ProcessDefinitionEntity.java\n@@ -13,54 +13,74 @@\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n-\n import org.activiti.engine.api.internal.Internal;\n import org.activiti.engine.impl.db.HasRevision;\n import org.activiti.engine.repository.ProcessDefinition;\n \n+\n @Internal\n public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasRevision {\n \n-  List<IdentityLinkEntity> getIdentityLinks();\n \n-  void setKey(String key);\n+    List<IdentityLinkEntity> getIdentityLinks();\n+\n+\n+    void setKey(String key);\n+\n+\n+    void setName(String name);\n+\n+\n+    void setDescription(String description);\n+\n+\n+    void setDeploymentId(String deploymentId);\n+\n+\n+    void setVersion(int version);\n+\n+\n+    void setResourceName(String resourceName);\n+\n+\n+    void setTenantId(String tenantId);\n+\n+\n+    Integer getHistoryLevel();\n+\n+\n+    void setHistoryLevel(Integer historyLevel);\n+\n+\n+    void setCategory(String category);\n+\n \n-  void setName(String name);\n+    void setDiagramResourceName(String diagramResourceName);\n \n-  void setDescription(String description);\n \n-  void setDeploymentId(String deploymentId);\n+    boolean getHasStartFormKey();\n \n-  void setVersion(int version);\n \n-  void setResourceName(String resourceName);\n+    void setStartFormKey(boolean hasStartFormKey);\n \n-  void setTenantId(String tenantId);\n \n-  Integer getHistoryLevel();\n+    void setHasStartFormKey(boolean hasStartFormKey);\n \n-  void setHistoryLevel(Integer historyLevel);\n \n-  void setCategory(String category);\n+    boolean isGraphicalNotationDefined();\n \n-  void setDiagramResourceName(String diagramResourceName);\n \n-  boolean getHasStartFormKey();\n+    void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n \n-  void setStartFormKey(boolean hasStartFormKey);\n \n-  void setHasStartFormKey(boolean hasStartFormKey);\n+    int getSuspensionState();\n \n-  boolean isGraphicalNotationDefined();\n \n-  void setGraphicalNotationDefined(boolean isGraphicalNotationDefined);\n+    void setSuspensionState(int suspensionState);\n \n-  int getSuspensionState();\n \n-  void setSuspensionState(int suspensionState);\n+    String getEngineVersion();\n \n-  String getEngineVersion();\n \n-  void setEngineVersion(String engineVersion);\n-  \n-}\n+    void setEngineVersion(String engineVersion);\n+}\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/656/ProcessDefinitionEntity.java\nindex 68f1b24f50..41289d3000 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/656/ProcessDefinitionEntity.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n@@ -62,5 +63,5 @@ public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasR\n   String getEngineVersion();\n \n   void setEngineVersion(String engineVersion);\n-  \n+\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/656/ProcessDefinitionEntity.java\nindex 68f1b24f50..41289d3000 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/656/ProcessDefinitionEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/656/ProcessDefinitionEntity.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n@@ -62,5 +63,5 @@ public interface ProcessDefinitionEntity extends ProcessDefinition, Entity, HasR\n   String getEngineVersion();\n \n   void setEngineVersion(String engineVersion);\n-  \n+\n }\n",
            "diff_size": 2
        }
    ]
}