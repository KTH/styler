{
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "383",
                "severity": "error",
                "message": "Line is longer than 160 characters (found 179).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        private final PathExpander expander;\n\n        DirectionData( Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander, MemoryTracker memoryTracker )\n        {\n            this.startNode = startNode;\n            this.visitedNodes = HeapTrackingCollections.newMap( memoryTracker );",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "383",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/14/ShortestPath.java\nindex 18fcac39bf..642204692e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/14/ShortestPath.java\n@@ -381,7 +381,7 @@ public class ShortestPath implements PathFinder<Path>\n         private final PathExpander expander;\n \n         DirectionData( Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander, MemoryTracker memoryTracker )\n-        {\n+{\n             this.startNode = startNode;\n             this.visitedNodes = HeapTrackingCollections.newMap( memoryTracker );\n             this.nextNodes = HeapTrackingArrayList.newArrayList( memoryTracker);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "94",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "311",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "331",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "349",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "412",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "465",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "629",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "688",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "688",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "713",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "713",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "725",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "725",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "731",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "731",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "740",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/14/ShortestPath.java\nindex 18fcac39bf..d4fb4a180c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/14/ShortestPath.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.path;\n \n import org.apache.commons.lang3.mutable.MutableBoolean;\n@@ -71,7 +72,7 @@ import org.neo4j.monitoring.Monitors;\n  * between each traversal. It does so to minimize the traversal overhead\n  * if one side has a very large amount of relationships, but the other one\n  * very few. It performs well however the graph is proportioned.\n- *\n+ * <p>\n  * Relationships are traversed in the specified directions from the start node,\n  * but in the reverse direction ( {@link Direction#reverse()} ) from the\n  * end node. This doesn't affect {@link Direction#BOTH}.\n@@ -90,68 +91,70 @@ public class ShortestPath implements PathFinder<Path>\n \n     public interface ShortestPathPredicate\n     {\n-        boolean test( Path path );\n+        boolean test(Path path);\n     }\n \n     /**\n      * Constructs a new shortest path algorithm.\n+     *\n      * @param maxDepth the maximum depth for the traversal. Returned paths\n-     * will never have a greater {@link Path#length()} than {@code maxDepth}.\n+     *                 will never have a greater {@link Path#length()} than {@code maxDepth}.\n      * @param expander the {@link PathExpander} to use for deciding\n-     * which relationships to expand for each {@link Node}.\n+     *                 which relationships to expand for each {@link Node}.\n      */\n-    public ShortestPath( EvaluationContext context, int maxDepth, PathExpander expander )\n+    public ShortestPath(EvaluationContext context, int maxDepth, PathExpander expander)\n     {\n-        this( context, maxDepth, expander, Integer.MAX_VALUE, EmptyMemoryTracker.INSTANCE );\n+        this(context, maxDepth, expander, Integer.MAX_VALUE, EmptyMemoryTracker.INSTANCE);\n     }\n \n-    public ShortestPath( EvaluationContext context, int maxDepth, PathExpander expander, ShortestPathPredicate predicate, MemoryTracker memoryTracker )\n+    public ShortestPath(EvaluationContext context, int maxDepth, PathExpander expander, ShortestPathPredicate predicate, MemoryTracker memoryTracker)\n     {\n-        this( context, maxDepth, expander, Integer.MAX_VALUE, memoryTracker );\n+        this(context, maxDepth, expander, Integer.MAX_VALUE, memoryTracker);\n         this.predicate = predicate;\n     }\n \n-    public ShortestPath( EvaluationContext context, int maxDepth, PathExpander expander, int maxResultCount )\n+    public ShortestPath(EvaluationContext context, int maxDepth, PathExpander expander, int maxResultCount)\n     {\n-        this( context, maxDepth, expander, maxResultCount, EmptyMemoryTracker.INSTANCE );\n+        this(context, maxDepth, expander, maxResultCount, EmptyMemoryTracker.INSTANCE);\n     }\n \n     /**\n      * Constructs a new shortest path algorithm.\n-     * @param maxDepth the maximum depth for the traversal. Returned paths\n-     * will never have a greater {@link Path#length()} than {@code maxDepth}.\n-     * @param expander the {@link PathExpander} to use for deciding\n-     * which relationships to expand for each {@link Node}.\n+     *\n+     * @param maxDepth       the maximum depth for the traversal. Returned paths\n+     *                       will never have a greater {@link Path#length()} than {@code maxDepth}.\n+     * @param expander       the {@link PathExpander} to use for deciding\n+     *                       which relationships to expand for each {@link Node}.\n      * @param maxResultCount the maximum number of hits to return. If this number\n-     * of hits are encountered the traversal will stop.\n-     * @param memoryTracker tracks the memory used by the algorithm\n+     *                       of hits are encountered the traversal will stop.\n+     * @param memoryTracker  tracks the memory used by the algorithm\n      */\n-    public ShortestPath( EvaluationContext context, int maxDepth, PathExpander expander, int maxResultCount, MemoryTracker memoryTracker )\n+    public ShortestPath(EvaluationContext context, int maxDepth, PathExpander expander, int maxResultCount, MemoryTracker memoryTracker)\n     {\n         this.context = context;\n         this.maxDepth = maxDepth;\n         this.expander = expander;\n         this.maxResultCount = maxResultCount;\n-        this.memoryTracker = new ScopedMemoryTracker( memoryTracker );\n+        this.memoryTracker = new ScopedMemoryTracker(memoryTracker);\n     }\n \n     @Override\n-    public Iterable<Path> findAllPaths( Node start, Node end )\n+    public Iterable<Path> findAllPaths(Node start, Node end)\n     {\n-        return internalPaths( start, end, false );\n+        return internalPaths(start, end, false);\n     }\n \n-    public Iterator<Path> findAllPathsIterator( Node start, Node end )\n+    public Iterator<Path> findAllPathsIterator(Node start, Node end)\n     {\n         return new Iterator<>()\n         {\n-            Iterator<Path> inner = internalPaths( start, end, false ).iterator();\n+            Iterator<Path> inner = internalPaths(start, end, false).iterator();\n \n             @Override\n             public boolean hasNext()\n             {\n                 boolean hasNext = this.inner.hasNext();\n-                if ( !hasNext )\n+                if (!hasNext)\n                 {\n                     inner = null;\n                     memoryTracker.reset();\n@@ -162,7 +165,7 @@ public class ShortestPath implements PathFinder<Path>\n             @Override\n             public Path next()\n             {\n-                if ( inner == null )\n+                if (inner == null)\n                 {\n                     throw new NoSuchElementException();\n                 }\n@@ -172,46 +175,46 @@ public class ShortestPath implements PathFinder<Path>\n     }\n \n     @Override\n-    public Path findSinglePath( Node start, Node end )\n+    public Path findSinglePath(Node start, Node end)\n     {\n-        Iterator<Path> paths = internalPaths( start, end, true ).iterator();\n+        Iterator<Path> paths = internalPaths(start, end, true).iterator();\n         Path path = paths.hasNext() ? paths.next() : null;\n         memoryTracker.reset();\n         return path;\n     }\n \n-    private void resolveMonitor( Node node )\n+    private void resolveMonitor(Node node)\n     {\n-        if ( dataMonitor == null )\n+        if (dataMonitor == null)\n         {\n             GraphDatabaseService service = context.databaseService();\n-            Monitors monitors = ((GraphDatabaseFacade) service).getDependencyResolver().resolveDependency( Monitors.class );\n-            dataMonitor = monitors.newMonitor( DataMonitor.class );\n+            Monitors monitors = ((GraphDatabaseFacade) service).getDependencyResolver().resolveDependency(Monitors.class);\n+            dataMonitor = monitors.newMonitor(DataMonitor.class);\n         }\n     }\n \n-    private Iterable<Path> internalPaths( Node start, Node end, boolean stopAsap )\n+    private Iterable<Path> internalPaths(Node start, Node end, boolean stopAsap)\n     {\n         lastMetadata = new Metadata();\n-        if ( start.equals( end ) )\n+        if (start.equals(end))\n         {\n-            return filterPaths(Collections.singletonList( PathImpl.singular( start ) ));\n+            return filterPaths(Collections.singletonList(PathImpl.singular(start)));\n         }\n         Hits hits = new Hits();\n-        MutableInt sharedFrozenDepth = new MutableInt( NULL ); // ShortestPathLengthSoFar\n+        MutableInt sharedFrozenDepth = new MutableInt(NULL); // ShortestPathLengthSoFar\n         MutableBoolean sharedStop = new MutableBoolean();\n-        MutableInt sharedCurrentDepth = new MutableInt( 0 );\n-        try ( DirectionData startData = new DirectionData( start, sharedFrozenDepth, sharedStop, sharedCurrentDepth, expander, memoryTracker );\n-              DirectionData endData = new DirectionData( end, sharedFrozenDepth,\n-                      sharedStop, sharedCurrentDepth, expander.reverse(), memoryTracker ) )\n+        MutableInt sharedCurrentDepth = new MutableInt(0);\n+        try (DirectionData startData = new DirectionData(start, sharedFrozenDepth, sharedStop, sharedCurrentDepth, expander, memoryTracker);\n+             DirectionData endData = new DirectionData(end, sharedFrozenDepth,\n+                 sharedStop, sharedCurrentDepth, expander.reverse(), memoryTracker))\n         {\n-            while ( startData.hasNext() || endData.hasNext() )\n+            while (startData.hasNext() || endData.hasNext())\n             {\n-                goOneStep( startData, endData, hits, startData, stopAsap );\n-                goOneStep( endData, startData, hits, startData, stopAsap );\n+                goOneStep(startData, endData, hits, startData, stopAsap);\n+                goOneStep(endData, startData, hits, startData, stopAsap);\n             }\n             Collection<Hit> least = hits.least();\n-            return least != null ? filterPaths( hitsToPaths( context, least, start, end, stopAsap, maxResultCount, memoryTracker ) ) : Collections.emptyList();\n+            return least != null ? filterPaths(hitsToPaths(context, least, start, end, stopAsap, maxResultCount, memoryTracker)) : Collections.emptyList();\n         }\n     }\n \n@@ -228,7 +231,7 @@ public class ShortestPath implements PathFinder<Path>\n         private final DirectionData end;\n         private final Node connectingNode;\n \n-        Hit( DirectionData start, DirectionData end, Node connectingNode )\n+        Hit(DirectionData start, DirectionData end, Node connectingNode)\n         {\n             this.start = start;\n             this.end = end;\n@@ -242,47 +245,47 @@ public class ShortestPath implements PathFinder<Path>\n         }\n \n         @Override\n-        public boolean equals( Object obj )\n+        public boolean equals(Object obj)\n         {\n-            if ( this == obj )\n+            if (this == obj)\n             {\n                 return true;\n             }\n-            if ( obj == null || getClass() != obj.getClass() )\n+            if (obj == null || getClass() != obj.getClass())\n             {\n                 return false;\n             }\n             Hit o = (Hit) obj;\n-            return connectingNode.equals( o.connectingNode );\n+            return connectingNode.equals(o.connectingNode);\n         }\n     }\n \n-    private void goOneStep( DirectionData directionData, DirectionData otherSide, Hits hits, DirectionData startSide,\n-            boolean stopAsap )\n+    private void goOneStep(DirectionData directionData, DirectionData otherSide, Hits hits, DirectionData startSide,\n+                           boolean stopAsap)\n     {\n-        if ( !directionData.hasNext() )\n+        if (!directionData.hasNext())\n         {\n             // We can not go any deeper from this direction. Possibly disconnected nodes.\n             otherSide.finishCurrentLayerThenStop = true;\n             return;\n         }\n         Node nextNode = directionData.next();\n-        LevelData otherSideHit = otherSide.visitedNodes.get( nextNode );\n-        if ( otherSideHit != null )\n+        LevelData otherSideHit = otherSide.visitedNodes.get(nextNode);\n+        if (otherSideHit != null)\n         {\n             // This is a hit\n             int depth = directionData.currentDepth + otherSideHit.depth;\n \n-            if ( directionData.sharedFrozenDepth.intValue() == NULL )\n+            if (directionData.sharedFrozenDepth.intValue() == NULL)\n             {\n-                directionData.sharedFrozenDepth.setValue( depth );\n+                directionData.sharedFrozenDepth.setValue(depth);\n             }\n-            if ( depth <= directionData.sharedFrozenDepth.intValue() )\n+            if (depth <= directionData.sharedFrozenDepth.intValue())\n             {\n                 directionData.haveFoundSomething = true;\n-                if ( depth < directionData.sharedFrozenDepth.intValue() )\n+                if (depth < directionData.sharedFrozenDepth.intValue())\n                 {\n-                    directionData.sharedFrozenDepth.setValue( depth );\n+                    directionData.sharedFrozenDepth.setValue(depth);\n                     // TODO Is it really ok to just stop the other side here?\n                     // I'm basing that decision on that it was the other side\n                     // which found the deeper paths (correct assumption?)\n@@ -291,66 +294,63 @@ public class ShortestPath implements PathFinder<Path>\n                 // Add it to the list of hits\n                 DirectionData startSideData = directionData == startSide ? directionData : otherSide;\n                 DirectionData endSideData = directionData == startSide ? otherSide : directionData;\n-                Hit hit = new Hit( startSideData, endSideData, nextNode );\n+                Hit hit = new Hit(startSideData, endSideData, nextNode);\n                 Node start = startSide.startNode;\n                 Node end = (startSide == directionData) ? otherSide.startNode : directionData.startNode;\n-                monitorData( startSide, (otherSide == startSide) ? directionData : otherSide, nextNode );\n+                monitorData(startSide, (otherSide == startSide) ? directionData : otherSide, nextNode);\n                 // NOTE: Applying the filter-condition could give the wrong results with allShortestPaths,\n                 // so only use it for singleShortestPath\n                 // TODO: We don't need to create an intermediate array list just to check if list is empty after filtering\n-                if ( !stopAsap || !filterPaths( hitToPaths( context, hit, start, end, stopAsap ) ).isEmpty() )\n+                if (!stopAsap || !filterPaths(hitToPaths(context, hit, start, end, stopAsap)).isEmpty())\n                 {\n-                    if ( hits.add( hit, depth ) >= maxResultCount )\n+                    if (hits.add(hit, depth) >= maxResultCount)\n                     {\n                         directionData.stop = true;\n                         otherSide.stop = true;\n                         lastMetadata.paths++;\n-                    }\n-                    else if ( stopAsap )\n+                    } else if (stopAsap)\n                     {   // This side found a hit, but wait for the other side to complete its current depth\n                         // to see if it finds a shorter path. (i.e. stop this side and freeze the depth).\n                         // but only if the other side has not stopped, otherwise we might miss shorter paths\n-                        if ( otherSide.stop )\n+                        if (otherSide.stop)\n                         {\n                             return;\n                         }\n                         directionData.stop = true;\n                     }\n-                }\n-                else\n+                } else\n                 {\n                     directionData.haveFoundSomething = false;\n-                    directionData.sharedFrozenDepth.setValue( NULL );\n+                    directionData.sharedFrozenDepth.setValue(NULL);\n                     otherSide.stop = false;\n                 }\n             }\n         }\n     }\n \n-    private void monitorData( DirectionData directionData, DirectionData otherSide, Node connectingNode )\n+    private void monitorData(DirectionData directionData, DirectionData otherSide, Node connectingNode)\n     {\n-        resolveMonitor( directionData.startNode );\n-        if ( dataMonitor != null )\n+        resolveMonitor(directionData.startNode);\n+        if (dataMonitor != null)\n         {\n-            dataMonitor.monitorData( directionData.visitedNodes, directionData.nextNodes, otherSide.visitedNodes,\n-                    otherSide.nextNodes, connectingNode );\n+            dataMonitor.monitorData(directionData.visitedNodes, directionData.nextNodes, otherSide.visitedNodes,\n+                otherSide.nextNodes, connectingNode);\n         }\n     }\n \n-    private Collection<Path> filterPaths( Collection<Path> paths )\n+    private Collection<Path> filterPaths(Collection<Path> paths)\n     {\n-        if ( predicate == null )\n+        if (predicate == null)\n         {\n             return paths;\n-        }\n-        else\n+        } else\n         {\n             Collection<Path> filteredPaths = new ArrayList<>();\n-            for ( Path path : paths )\n+            for (Path path : paths)\n             {\n-                if ( predicate.test( path ) )\n+                if (predicate.test(path))\n                 {\n-                    filteredPaths.add( path );\n+                    filteredPaths.add(path);\n                 }\n             }\n             return filteredPaths;\n@@ -359,8 +359,8 @@ public class ShortestPath implements PathFinder<Path>\n \n     public interface DataMonitor\n     {\n-        void monitorData( MutableMap<Node,LevelData> theseVisitedNodes, Iterable<Node> theseNextNodes,\n-                          MutableMap<Node,LevelData> thoseVisitedNodes, Iterable<Node> thoseNextNodes, Node connectingNode );\n+        void monitorData(MutableMap<Node, LevelData> theseVisitedNodes, Iterable<Node> theseNextNodes,\n+                         MutableMap<Node, LevelData> thoseVisitedNodes, Iterable<Node> thoseNextNodes, Node connectingNode);\n     }\n \n     // Two long-lived instances\n@@ -371,7 +371,7 @@ public class ShortestPath implements PathFinder<Path>\n         private int currentDepth;\n         private ResourceIterator<Relationship> nextRelationships;\n         private final HeapTrackingArrayList<Node> nextNodes;\n-        private final HeapTrackingUnifiedMap<Node,LevelData> visitedNodes;\n+        private final HeapTrackingUnifiedMap<Node, LevelData> visitedNodes;\n         private final DirectionDataPath lastPath;\n         private final MutableInt sharedFrozenDepth;\n         private final MutableBoolean sharedStop;\n@@ -380,24 +380,24 @@ public class ShortestPath implements PathFinder<Path>\n         private boolean stop;\n         private final PathExpander expander;\n \n-        DirectionData( Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander, MemoryTracker memoryTracker )\n+        DirectionData(Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander,\n+                      MemoryTracker memoryTracker)\n         {\n             this.startNode = startNode;\n-            this.visitedNodes = HeapTrackingCollections.newMap( memoryTracker );\n-            this.nextNodes = HeapTrackingArrayList.newArrayList( memoryTracker);\n-            memoryTracker.allocateHeap( LevelData.SHALLOW_SIZE + NodeEntity.SHALLOW_SIZE );\n-            this.visitedNodes.put( startNode, new LevelData( null, 0 ) );\n-            this.nextNodes.add( startNode );\n+            this.visitedNodes = HeapTrackingCollections.newMap(memoryTracker);\n+            this.nextNodes = HeapTrackingArrayList.newArrayList(memoryTracker);\n+            memoryTracker.allocateHeap(LevelData.SHALLOW_SIZE + NodeEntity.SHALLOW_SIZE);\n+            this.visitedNodes.put(startNode, new LevelData(null, 0));\n+            this.nextNodes.add(startNode);\n             this.sharedFrozenDepth = sharedFrozenDepth;\n             this.sharedStop = sharedStop;\n             this.sharedCurrentDepth = sharedCurrentDepth;\n             this.expander = expander;\n-            this.lastPath = new DirectionDataPath( startNode );\n-            if ( sharedCurrentDepth.intValue() < maxDepth )\n+            this.lastPath = new DirectionDataPath(startNode);\n+            if (sharedCurrentDepth.intValue() < maxDepth)\n             {\n                 prepareNextLevel();\n-            }\n-            else\n+            } else\n             {\n                 this.nextRelationships = Iterators.emptyResourceIterator();\n             }\n@@ -407,15 +407,15 @@ public class ShortestPath implements PathFinder<Path>\n         {\n             HeapTrackingArrayList<Node> nodesToIterate = this.nextNodes.clone();\n             this.nextNodes.clear();\n-            this.lastPath.setLength( currentDepth );\n+            this.lastPath.setLength(currentDepth);\n             closeRelationshipsIterator();\n-            this.nextRelationships = new NestingResourceIterator<>( nodesToIterate.autoClosingIterator() )\n+            this.nextRelationships = new NestingResourceIterator<>(nodesToIterate.autoClosingIterator())\n             {\n                 @Override\n-                protected ResourceIterator<Relationship> createNestedIterator( Node node )\n+                protected ResourceIterator<Relationship> createNestedIterator(Node node)\n                 {\n-                    lastPath.setEndNode( node );\n-                    return Iterators.asResourceIterator( expander.expand( lastPath, BranchState.NO_STATE ).iterator() );\n+                    lastPath.setEndNode(node);\n+                    return Iterators.asResourceIterator(expander.expand(lastPath, BranchState.NO_STATE).iterator());\n                 }\n             };\n             this.currentDepth++;\n@@ -424,7 +424,7 @@ public class ShortestPath implements PathFinder<Path>\n \n         private void closeRelationshipsIterator()\n         {\n-            if ( this.nextRelationships != null )\n+            if (this.nextRelationships != null)\n             {\n                 this.nextRelationships.close();\n             }\n@@ -440,33 +440,32 @@ public class ShortestPath implements PathFinder<Path>\n         @Override\n         protected Node fetchNextOrNull()\n         {\n-            while ( true )\n+            while (true)\n             {\n                 Relationship nextRel = fetchNextRelOrNull();\n-                if ( nextRel == null )\n+                if (nextRel == null)\n                 {\n                     return null;\n                 }\n \n-                Node result = nextRel.getOtherNode( this.lastPath.endNode() );\n+                Node result = nextRel.getOtherNode(this.lastPath.endNode());\n \n-                if ( filterNextLevelNodes( result ) != null )\n+                if (filterNextLevelNodes(result) != null)\n                 {\n                     lastMetadata.rels++;\n \n-                    LevelData levelData = this.visitedNodes.get( result );\n-                    if ( levelData == null )\n+                    LevelData levelData = this.visitedNodes.get(result);\n+                    if (levelData == null)\n                     {\n-                        memoryTracker.allocateHeap( LevelData.SHALLOW_SIZE + NodeEntity.SHALLOW_SIZE + HeapEstimator.sizeOfLongArray( 1 ) );\n-                        levelData = new LevelData( nextRel, this.currentDepth );\n-                        this.visitedNodes.put( result, levelData );\n-                        this.nextNodes.add( result );\n+                        memoryTracker.allocateHeap(LevelData.SHALLOW_SIZE + NodeEntity.SHALLOW_SIZE + HeapEstimator.sizeOfLongArray(1));\n+                        levelData = new LevelData(nextRel, this.currentDepth);\n+                        this.visitedNodes.put(result, levelData);\n+                        this.nextNodes.add(result);\n                         return result;\n-                    }\n-                    else if ( this.currentDepth == levelData.depth )\n+                    } else if (this.currentDepth == levelData.depth)\n                     {\n-                        memoryTracker.allocateHeap( Long.BYTES );\n-                        levelData.addRel( nextRel );\n+                        memoryTracker.allocateHeap(Long.BYTES);\n+                        levelData.addRel(nextRel);\n                     }\n                 }\n             }\n@@ -475,25 +474,25 @@ public class ShortestPath implements PathFinder<Path>\n         private boolean canGoDeeper()\n         {\n             return (this.sharedFrozenDepth.intValue() == NULL) && (this.sharedCurrentDepth.intValue() < maxDepth) &&\n-                   !finishCurrentLayerThenStop;\n+                !finishCurrentLayerThenStop;\n         }\n \n         private Relationship fetchNextRelOrNull()\n         {\n-            if ( this.stop || this.sharedStop.booleanValue() )\n+            if (this.stop || this.sharedStop.booleanValue())\n             {\n                 return null;\n             }\n             boolean hasComeTooFarEmptyHanded = (this.sharedFrozenDepth.intValue() != NULL) &&\n-                                               (this.sharedCurrentDepth.intValue() > this.sharedFrozenDepth.intValue()) &&\n-                                               !this.haveFoundSomething;\n-            if ( hasComeTooFarEmptyHanded )\n+                (this.sharedCurrentDepth.intValue() > this.sharedFrozenDepth.intValue()) &&\n+                !this.haveFoundSomething;\n+            if (hasComeTooFarEmptyHanded)\n             {\n                 return null;\n             }\n-            if ( !this.nextRelationships.hasNext() )\n+            if (!this.nextRelationships.hasNext())\n             {\n-                if ( canGoDeeper() )\n+                if (canGoDeeper())\n                 {\n                     prepareNextLevel();\n                 }\n@@ -509,19 +508,19 @@ public class ShortestPath implements PathFinder<Path>\n         private Node endNode;\n         private int length;\n \n-        DirectionDataPath( Node startNode )\n+        DirectionDataPath(Node startNode)\n         {\n             this.startNode = startNode;\n             this.endNode = startNode;\n             this.length = 0;\n         }\n \n-        void setEndNode( Node endNode )\n+        void setEndNode(Node endNode)\n         {\n             this.endNode = endNode;\n         }\n \n-        void setLength( int length )\n+        void setLength(int length)\n         {\n             this.length = length;\n         }\n@@ -581,7 +580,7 @@ public class ShortestPath implements PathFinder<Path>\n         }\n     }\n \n-    protected Node filterNextLevelNodes( Node nextNode )\n+    protected Node filterNextLevelNodes(Node nextNode)\n     {\n         // We need to be able to override this method from Cypher, so it must exist in this concrete class.\n         // And we also need it to do nothing but still work when not overridden.\n@@ -591,30 +590,29 @@ public class ShortestPath implements PathFinder<Path>\n     // Many long-lived instances\n     public static class LevelData\n     {\n-        public static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance( LevelData.class );\n+        public static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance(LevelData.class);\n         private long[] relsToHere;\n         public final int depth;\n \n-        LevelData( Relationship relToHere, int depth )\n+        LevelData(Relationship relToHere, int depth)\n         {\n-            if ( relToHere != null )\n+            if (relToHere != null)\n             {\n-                addRel( relToHere );\n+                addRel(relToHere);\n             }\n             this.depth = depth;\n         }\n \n-        void addRel( Relationship rel )\n+        void addRel(Relationship rel)\n         {\n             long[] newRels;\n-            if ( relsToHere == null )\n+            if (relsToHere == null)\n             {\n                 newRels = new long[1];\n-            }\n-            else\n+            } else\n             {\n                 newRels = new long[relsToHere.length + 1];\n-                System.arraycopy( relsToHere, 0, newRels, 0, relsToHere.length );\n+                System.arraycopy(relsToHere, 0, newRels, 0, relsToHere.length);\n             }\n             newRels[newRels.length - 1] = rel.getId();\n             relsToHere = newRels;\n@@ -628,14 +626,14 @@ public class ShortestPath implements PathFinder<Path>\n         private int lowestDepth;\n         private int totalHitCount;\n \n-        int add( Hit hit, int atDepth )\n+        int add(Hit hit, int atDepth)\n         {\n-            Collection<Hit> depthHits = hits.getIfAbsentPut( atDepth, HashSet::new );\n-            if ( depthHits.add( hit ) )\n+            Collection<Hit> depthHits = hits.getIfAbsentPut(atDepth, HashSet::new);\n+            if (depthHits.add(hit))\n             {\n                 totalHitCount++;\n             }\n-            if ( lowestDepth == 0 || atDepth < lowestDepth )\n+            if (lowestDepth == 0 || atDepth < lowestDepth)\n             {\n                 lowestDepth = atDepth;\n             }\n@@ -644,7 +642,7 @@ public class ShortestPath implements PathFinder<Path>\n \n         Collection<Hit> least()\n         {\n-            return hits.get( lowestDepth );\n+            return hits.get(lowestDepth);\n         }\n     }\n \n@@ -656,24 +654,24 @@ public class ShortestPath implements PathFinder<Path>\n         private final LinkedList<Relationship> rels;\n         private final Node node;\n \n-        PathData( Node node, LinkedList<Relationship> rels )\n+        PathData(Node node, LinkedList<Relationship> rels)\n         {\n             this.rels = rels;\n             this.node = node;\n         }\n     }\n \n-    private static Collection<Path> hitsToPaths( EvaluationContext context, Collection<Hit> depthHits, Node start, Node end, boolean stopAsap,\n-                                                 int maxResultCount, MemoryTracker memoryTracker )\n+    private static Collection<Path> hitsToPaths(EvaluationContext context, Collection<Hit> depthHits, Node start, Node end, boolean stopAsap,\n+                                                int maxResultCount, MemoryTracker memoryTracker)\n     {\n-        Set<Path> paths = HeapTrackingCollections.newSet( memoryTracker );\n-        for ( Hit hit : depthHits )\n+        Set<Path> paths = HeapTrackingCollections.newSet(memoryTracker);\n+        for (Hit hit : depthHits)\n         {\n-            for ( Path path : hitToPaths( context, hit, start, end, stopAsap ) )\n+            for (Path path : hitToPaths(context, hit, start, end, stopAsap))\n             {\n-                memoryTracker.allocateHeap( ((PathImpl) path).estimatedHeapUsage() );\n-                paths.add( path );\n-                if ( paths.size() >= maxResultCount )\n+                memoryTracker.allocateHeap(((PathImpl) path).estimatedHeapUsage());\n+                paths.add(path);\n+                if (paths.size() >= maxResultCount)\n                 {\n                     break;\n                 }\n@@ -682,65 +680,65 @@ public class ShortestPath implements PathFinder<Path>\n         return paths;\n     }\n \n-    private static Collection<Path> hitToPaths( EvaluationContext context, Hit hit, Node start, Node end, boolean stopAsap )\n+    private static Collection<Path> hitToPaths(EvaluationContext context, Hit hit, Node start, Node end, boolean stopAsap)\n     {\n         Collection<Path> paths = new ArrayList<>();\n-        Iterable<List<Relationship>> startPaths = getPaths( context, hit.connectingNode, hit.start, stopAsap );\n-        Iterable<List<Relationship>> endPaths = getPaths( context, hit.connectingNode, hit.end, stopAsap );\n-        for ( List<Relationship> startPath : startPaths )\n+        Iterable<List<Relationship>> startPaths = getPaths(context, hit.connectingNode, hit.start, stopAsap);\n+        Iterable<List<Relationship>> endPaths = getPaths(context, hit.connectingNode, hit.end, stopAsap);\n+        for (List<Relationship> startPath : startPaths)\n         {\n-            PathImpl.Builder startBuilder = toBuilder( start, startPath );\n-            for ( List<Relationship> endPath : endPaths )\n+            PathImpl.Builder startBuilder = toBuilder(start, startPath);\n+            for (List<Relationship> endPath : endPaths)\n             {\n-                PathImpl.Builder endBuilder = toBuilder( end, endPath );\n-                PathImpl path = (PathImpl) startBuilder.build( endBuilder );\n-                paths.add( path );\n+                PathImpl.Builder endBuilder = toBuilder(end, endPath);\n+                PathImpl path = (PathImpl) startBuilder.build(endBuilder);\n+                paths.add(path);\n             }\n         }\n         return paths;\n     }\n \n-    private static Iterable<List<Relationship>> getPaths( EvaluationContext context, Node connectingNode, DirectionData data,\n-            boolean stopAsap )\n+    private static Iterable<List<Relationship>> getPaths(EvaluationContext context, Node connectingNode, DirectionData data,\n+                                                         boolean stopAsap)\n     {\n-        LevelData levelData = data.visitedNodes.get( connectingNode );\n-        if ( levelData.depth == 0 )\n+        LevelData levelData = data.visitedNodes.get(connectingNode);\n+        if (levelData.depth == 0)\n         {\n             Collection<List<Relationship>> result = new ArrayList<>();\n-            result.add( new LinkedList<>() );\n+            result.add(new LinkedList<>());\n             return result;\n         }\n         Collection<PathData> set = new ArrayList<>();\n         var transaction = context.transaction();\n-        for ( long rel : levelData.relsToHere )\n+        for (long rel : levelData.relsToHere)\n         {\n-            set.add( new PathData( connectingNode, new LinkedList<>( Arrays.asList( transaction.getRelationshipById( rel ) ) ) ) );\n-            if ( stopAsap )\n+            set.add(new PathData(connectingNode, new LinkedList<>(Arrays.asList(transaction.getRelationshipById(rel)))));\n+            if (stopAsap)\n             {\n                 break;\n             }\n         }\n-        for ( int i = 0; i < levelData.depth - 1; i++ )\n+        for (int i = 0; i < levelData.depth - 1; i++)\n         {\n             // One level\n             Collection<PathData> nextSet = new ArrayList<>();\n-            for ( PathData entry : set )\n+            for (PathData entry : set)\n             {\n                 // One path...\n-                Node otherNode = entry.rels.getFirst().getOtherNode( entry.node );\n-                LevelData otherLevelData = data.visitedNodes.get( otherNode );\n+                Node otherNode = entry.rels.getFirst().getOtherNode(entry.node);\n+                LevelData otherLevelData = data.visitedNodes.get(otherNode);\n                 int counter = 0;\n-                for ( long rel : otherLevelData.relsToHere )\n+                for (long rel : otherLevelData.relsToHere)\n                 {\n                     // ...may split into several paths\n                     LinkedList<Relationship> rels = ++counter == otherLevelData.relsToHere.length ?\n-                    // This is a little optimization which reduces number of\n-                    // lists being copied\n-                            entry.rels\n-                            : new LinkedList<>( entry.rels );\n-                    rels.addFirst( transaction.getRelationshipById( rel ) );\n-                    nextSet.add( new PathData( otherNode, rels ) );\n-                    if ( stopAsap )\n+                        // This is a little optimization which reduces number of\n+                        // lists being copied\n+                        entry.rels\n+                        : new LinkedList<>(entry.rels);\n+                    rels.addFirst(transaction.getRelationshipById(rel));\n+                    nextSet.add(new PathData(otherNode, rels));\n+                    if (stopAsap)\n                     {\n                         break;\n                     }\n@@ -748,22 +746,22 @@ public class ShortestPath implements PathFinder<Path>\n             }\n             set = nextSet;\n         }\n-        return new IterableWrapper<>( set )\n+        return new IterableWrapper<>(set)\n         {\n             @Override\n-            protected List<Relationship> underlyingObjectToObject( PathData object )\n+            protected List<Relationship> underlyingObjectToObject(PathData object)\n             {\n                 return object.rels;\n             }\n         };\n     }\n \n-    private static Builder toBuilder( Node startNode, List<Relationship> rels )\n+    private static Builder toBuilder(Node startNode, List<Relationship> rels)\n     {\n-        PathImpl.Builder builder = new PathImpl.Builder( startNode );\n-        for ( Relationship rel : rels )\n+        PathImpl.Builder builder = new PathImpl.Builder(startNode);\n+        for (Relationship rel : rels)\n         {\n-            builder = builder.push( rel );\n+            builder = builder.push(rel);\n         }\n         return builder;\n     }\n",
            "diff_size": 185
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "362",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "382",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "665",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/14/ShortestPath.java\nindex 18fcac39bf..aa6f741b51 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/14/ShortestPath.java\n@@ -195,7 +195,7 @@ public class ShortestPath implements PathFinder<Path>\n         lastMetadata = new Metadata();\n         if ( start.equals( end ) )\n         {\n-            return filterPaths(Collections.singletonList( PathImpl.singular( start ) ));\n+            return filterPaths( Collections.singletonList( PathImpl.singular( start ) ));\n         }\n         Hits hits = new Hits();\n         MutableInt sharedFrozenDepth = new MutableInt( NULL ); // ShortestPathLengthSoFar\n@@ -359,8 +359,7 @@ public class ShortestPath implements PathFinder<Path>\n \n     public interface DataMonitor\n     {\n-        void monitorData( MutableMap<Node,LevelData> theseVisitedNodes, Iterable<Node> theseNextNodes,\n-                          MutableMap<Node,LevelData> thoseVisitedNodes, Iterable<Node> thoseNextNodes, Node connectingNode );\n+        void monitorData( MutableMap<Node,LevelData> theseVisitedNodes, Iterable<Node> theseNextNodes, MutableMap<Node,LevelData> thoseVisitedNodes, Iterable<Node> thoseNextNodes, Node connectingNode );\n     }\n \n     // Two long-lived instances\n@@ -384,7 +383,7 @@ public class ShortestPath implements PathFinder<Path>\n         {\n             this.startNode = startNode;\n             this.visitedNodes = HeapTrackingCollections.newMap( memoryTracker );\n-            this.nextNodes = HeapTrackingArrayList.newArrayList( memoryTracker);\n+            this.nextNodes = HeapTrackingArrayList.newArrayList( memoryTracker );\n             memoryTracker.allocateHeap( LevelData.SHALLOW_SIZE + NodeEntity.SHALLOW_SIZE );\n             this.visitedNodes.put( startNode, new LevelData( null, 0 ) );\n             this.nextNodes.add( startNode );\n@@ -663,9 +662,8 @@ public class ShortestPath implements PathFinder<Path>\n         }\n     }\n \n-    private static Collection<Path> hitsToPaths( EvaluationContext context, Collection<Hit> depthHits, Node start, Node end, boolean stopAsap,\n-                                                 int maxResultCount, MemoryTracker memoryTracker )\n-    {\n+    private static Collection<Path> hitsToPaths( EvaluationContext context, Collection<Hit> depthHits, Node start, Node end, boolean stopAsap, int maxResultCount, MemoryTracker memoryTracker )\n+{\n         Set<Path> paths = HeapTrackingCollections.newSet( memoryTracker );\n         for ( Hit hit : depthHits )\n         {\n@@ -785,4 +783,4 @@ public class ShortestPath implements PathFinder<Path>\n             return rels;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "383",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/14/ShortestPath.java\nindex 18fcac39bf..642204692e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/14/ShortestPath.java\n@@ -381,7 +381,7 @@ public class ShortestPath implements PathFinder<Path>\n         private final PathExpander expander;\n \n         DirectionData( Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander, MemoryTracker memoryTracker )\n-        {\n+{\n             this.startNode = startNode;\n             this.visitedNodes = HeapTrackingCollections.newMap( memoryTracker );\n             this.nextNodes = HeapTrackingArrayList.newArrayList( memoryTracker);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "381",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/14/ShortestPath.java\nindex 18fcac39bf..f888e65201 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/14/ShortestPath.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/14/ShortestPath.java\n@@ -378,9 +378,7 @@ public class ShortestPath implements PathFinder<Path>\n         private final MutableInt sharedCurrentDepth;\n         private boolean haveFoundSomething;\n         private boolean stop;\n-        private final PathExpander expander;\n-\n-        DirectionData( Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander, MemoryTracker memoryTracker )\n+        private final PathExpander expander; DirectionData( Node startNode, MutableInt sharedFrozenDepth, MutableBoolean sharedStop, MutableInt sharedCurrentDepth, PathExpander expander, MemoryTracker memoryTracker )\n         {\n             this.startNode = startNode;\n             this.visitedNodes = HeapTrackingCollections.newMap( memoryTracker );\n",
            "diff_size": 3
        }
    ]
}