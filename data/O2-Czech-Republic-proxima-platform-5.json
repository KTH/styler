{
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                .thenAnswer(\n                    invocationOnMock -> {\n                      request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n                      return null;\n                    });\n            return mock;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/5/S3ClientTest.java\nindex f1213f67b7..889deb55a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/5/S3ClientTest.java\n@@ -49,7 +49,7 @@ public class S3ClientTest {\n             when(mock.putObject(any()))\n                 .thenAnswer(\n                     invocationOnMock -> {\n-                      request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n+                      request.set(invocationOnMock.getArgumentAt(0,PutObjectRequest.class));\n                       return null;\n                     });\n             return mock;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/5/S3ClientTest.java\nindex f1213f67b7..d92fd50103 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/5/S3ClientTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.s3;\n \n import static org.junit.Assert.assertEquals;\n@@ -49,7 +50,8 @@ public class S3ClientTest {\n             when(mock.putObject(any()))\n                 .thenAnswer(\n                     invocationOnMock -> {\n-                      request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n+                      request\n+                          .set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n                       return null;\n                     });\n             return mock;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/5/S3ClientTest.java\nindex f1213f67b7..3ac7fcd7a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/5/S3ClientTest.java\n@@ -52,7 +52,7 @@ public class S3ClientTest {\n                       request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n                       return null;\n                     });\n-            return mock;\n+return mock;\n           }\n         };\n     assertEquals(\"bucket\", client.getBucket());\n@@ -76,4 +76,4 @@ public class S3ClientTest {\n       }\n     };\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 65, expected level should be 26.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 22, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 57, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 15, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 41, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/5/S3ClientTest.java\nindex f1213f67b7..99de1e1101 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/5/S3ClientTest.java\n@@ -18,7 +18,6 @@ package cz.o2.proxima.direct.s3;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.mockito.Mockito.*;\n-\n import com.amazonaws.services.s3.AmazonS3;\n import com.amazonaws.services.s3.model.PutObjectRequest;\n import cz.o2.proxima.direct.s3.S3Client.AmazonS3Factory;\n@@ -29,51 +28,53 @@ import java.util.Map;\n import java.util.concurrent.atomic.AtomicReference;\n import org.junit.Test;\n \n+\n public class S3ClientTest {\n \n-  @Test\n-  public void testS3ClientFactory() {\n+    @Test\n+    public void testS3ClientFactory() {\n     AmazonS3Factory factory = new AmazonS3Factory(cfg());\n     AmazonS3 client = factory.build();\n     assertNotNull(client);\n-  }\n+    }\n \n-  @Test\n-  public void testPathParsing() {\n+    @Test\n+    public void testPathParsing() {\n     AmazonS3 mock = mock(AmazonS3.class);\n     AtomicReference<PutObjectRequest> request = new AtomicReference<>();\n-    S3Client client =\n-        new S3Client(URI.create(\"s3://bucket/path\"), cfg()) {\n-          @Override\n-          AmazonS3 client() {\n-            when(mock.putObject(any()))\n-                .thenAnswer(\n-                    invocationOnMock -> {\n-                      request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n-                      return null;\n-                    });\n-            return mock;\n-          }\n-        };\n+    S3Client client = new S3Client(URI.create(\"s3://bucket/path\"), cfg()) {\n+\n+        @Override\n+        AmazonS3 client() {\n+                          when(mock.putObject(any())).thenAnswer(invocationOnMock -> {\n+                                                                                  request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n+                                                                                  return null;\n+                                                                 });\n+                          return mock;\n+        }\n+                      };\n     assertEquals(\"bucket\", client.getBucket());\n-    ByteArrayInputStream bais = new ByteArrayInputStream(new byte[] {1});\n+    ByteArrayInputStream bais = new ByteArrayInputStream(new byte[] {\n+                                                         1\n+});\n     client.putObject(\"object\", bais);\n     assertNotNull(request.get());\n     assertEquals(client.getBucket(), request.get().getBucketName());\n     assertEquals(\"object\", request.get().getKey());\n     assertEquals(bais, request.get().getInputStream());\n-  }\n+    }\n \n-  private Map<String, Object> cfg() {\n+    private Map<String, Object> cfg() {\n     return new HashMap<String, Object>() {\n-      {\n-        put(\"access-key\", \"access-key\");\n-        put(\"secret-key\", \"secret-key\");\n-        put(\"path-style-access\", \"true\");\n-        put(\"endpoint\", \"http://endpoint321:123\");\n-        put(\"signing-region\", \"signing-region\");\n-        put(\"ssl-enable\", \"false\");\n-      }\n+\n+        {\n+               put(\"access-key\", \"access-key\");\n+               put(\"secret-key\", \"secret-key\");\n+               put(\"path-style-access\", \"true\");\n+               put(\"endpoint\", \"http://endpoint321:123\");\n+               put(\"signing-region\", \"signing-region\");\n+               put(\"ssl-enable\", \"false\");\n+                                         }\n     };\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/5/S3ClientTest.java\nindex f1213f67b7..889deb55a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/5/S3ClientTest.java\n@@ -49,7 +49,7 @@ public class S3ClientTest {\n             when(mock.putObject(any()))\n                 .thenAnswer(\n                     invocationOnMock -> {\n-                      request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n+                      request.set(invocationOnMock.getArgumentAt(0,PutObjectRequest.class));\n                       return null;\n                     });\n             return mock;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "column": "41",
                    "severity": "error",
                    "message": "'{' at column 41 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "51",
                    "column": "42",
                    "severity": "error",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/5/S3ClientTest.java\nindex f1213f67b7..9fb757c036 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/5/S3ClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/5/S3ClientTest.java\n@@ -48,32 +48,31 @@ public class S3ClientTest {\n           AmazonS3 client() {\n             when(mock.putObject(any()))\n                 .thenAnswer(\n-                    invocationOnMock -> {\n-                      request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n-                      return null;\n-                    });\n-            return mock;\n-          }\n-        };\n-    assertEquals(\"bucket\", client.getBucket());\n-    ByteArrayInputStream bais = new ByteArrayInputStream(new byte[] {1});\n-    client.putObject(\"object\", bais);\n-    assertNotNull(request.get());\n-    assertEquals(client.getBucket(), request.get().getBucketName());\n-    assertEquals(\"object\", request.get().getKey());\n-    assertEquals(bais, request.get().getInputStream());\n-  }\n+                    invocationOnMock -> {request.set(invocationOnMock.getArgumentAt(0, PutObjectRequest.class));\n+                    return null;\n+                  });\n+          return mock;\n+        }\n+      };\n+  assertEquals(\"bucket\", client.getBucket());\n+  ByteArrayInputStream bais = new ByteArrayInputStream(new byte[] {1});\n+  client.putObject(\"object\", bais);\n+  assertNotNull(request.get());\n+  assertEquals(client.getBucket(), request.get().getBucketName());\n+  assertEquals(\"object\", request.get().getKey());\n+  assertEquals(bais, request.get().getInputStream());\n+}\n \n-  private Map<String, Object> cfg() {\n-    return new HashMap<String, Object>() {\n-      {\n-        put(\"access-key\", \"access-key\");\n-        put(\"secret-key\", \"secret-key\");\n-        put(\"path-style-access\", \"true\");\n-        put(\"endpoint\", \"http://endpoint321:123\");\n-        put(\"signing-region\", \"signing-region\");\n-        put(\"ssl-enable\", \"false\");\n-      }\n-    };\n-  }\n+private Map<String, Object> cfg() {\n+  return new HashMap<String, Object>() {\n+    {\n+      put(\"access-key\", \"access-key\");\n+      put(\"secret-key\", \"secret-key\");\n+      put(\"path-style-access\", \"true\");\n+      put(\"endpoint\", \"http://endpoint321:123\");\n+      put(\"signing-region\", \"signing-region\");\n+      put(\"ssl-enable\", \"false\");\n+    }\n+  };\n+}\n }\n",
            "diff_size": 27
        }
    ]
}