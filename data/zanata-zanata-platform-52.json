{
    "error_id": "52",
    "information": {
        "errors": [
            {
                "line": "294",
                "severity": "error",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "        if (hTextFlowTarget == null) {\n            hTextFlowTarget = new HTextFlowTarget(hTextFlow, hLocale);\n            hTextFlowTarget.setVersionNum(0); // this will be incremented when\n                                              // content is set (below)\n            // TODO getTargets just to make sure hTextFlowTarget is persisted in\n            // the end",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/52/TextFlowTargetDAO.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/52/TextFlowTargetDAO.java\nindex 1fc9f926e7..0b631c0a14 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/52/TextFlowTargetDAO.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/52/TextFlowTargetDAO.java\n@@ -24,7 +24,7 @@ import org.zanata.service.TranslationFinder;\n @Named(\"textFlowTargetDAO\")\n @RequestScoped\n public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n-        implements TranslationFinder {\n+    implements TranslationFinder {\n \n     private static final long serialVersionUID = -1426951552450893617L;\n \n@@ -43,118 +43,124 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      */\n     public HTextFlowTarget getByNaturalId(HTextFlow textFlow, HLocale locale) {\n         return (HTextFlowTarget) getSession()\n-                .byNaturalId(HTextFlowTarget.class).using(\"textFlow\", textFlow)\n-                .using(\"locale\", locale).load();\n+            .byNaturalId(HTextFlowTarget.class).using(\"textFlow\", textFlow)\n+            .using(\"locale\", locale).load();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     public List<HTextFlowTarget> getByTextFlowId(Long tfId, int offset,\n-            int maxResults) {\n+                                                 int maxResults) {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n+            getSession()\n+                .createQuery(\n+                    \"from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n         q.setParameter(\"tfId\", tfId);\n         q.setFirstResult(offset);\n         q.setMaxResults(maxResults);\n         q.setCacheable(true)\n-                .setComment(\"TextFlowTargetDAO.getByTextFlowId\");\n+            .setComment(\"TextFlowTargetDAO.getByTextFlowId\");\n         return q.list();\n     }\n \n     public int countTextFlowTargetsInTextFlow(Long tfId) {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n+            getSession()\n+                .createQuery(\n+                    \"select count(*) from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n         q.setParameter(\"tfId\", tfId);\n         q.setCacheable(true).setComment(\n-                \"TextFlowTargetDAO.countTextFlowTargetsInTextFlow\");\n+            \"TextFlowTargetDAO.countTextFlowTargetsInTextFlow\");\n         Long totalCount = (Long) q.uniqueResult();\n         return totalCount == null ? 0 : totalCount.intValue();\n     }\n \n     public int getTotalTextFlowTargets() {\n         Query q =\n-                getSession()\n-                        .createQuery(\"select count(*) from HTextFlowTarget\");\n+            getSession()\n+                .createQuery(\"select count(*) from HTextFlowTarget\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalTextFlowTargets\");\n         Long totalCount = (Long) q.uniqueResult();\n-        if (totalCount == null)\n+        if (totalCount == null) {\n             return 0;\n+        }\n         return totalCount.intValue();\n     }\n \n     public int getTotalActiveTextFlowTargets() {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=0\");\n+            getSession()\n+                .createQuery(\n+                    \"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalActiveTextFlowTargets\");\n         Long totalCount = (Long) q.uniqueResult();\n-        if (totalCount == null)\n+        if (totalCount == null) {\n             return 0;\n+        }\n         return totalCount.intValue();\n     }\n \n     public int getTotalObsoleteTextFlowTargets() {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=1\");\n+            getSession()\n+                .createQuery(\n+                    \"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=1\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalObsoleteTextFlowTargets\");\n         Long totalCount = (Long) q.uniqueResult();\n-        if (totalCount == null)\n+        if (totalCount == null) {\n             return 0;\n+        }\n         return totalCount.intValue();\n     }\n \n     public int getTotalApprovedOrTranslatedTextFlowTargets() {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n+            getSession()\n+                .createQuery(\n+                    \"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalApprovedOrTranslatedTextFlowTargets\");\n         Long totalCount =\n-                (Long) q.setParameter(\"state\", ContentState.Approved)\n-                        .setParameter(\"state2\", ContentState.Translated)\n-                        .uniqueResult();\n-        if (totalCount == null)\n+            (Long) q.setParameter(\"state\", ContentState.Approved)\n+                .setParameter(\"state2\", ContentState.Translated)\n+                .uniqueResult();\n+        if (totalCount == null) {\n             return 0;\n+        }\n         return totalCount.intValue();\n     }\n \n     public int getTotalRejectedOrFuzzyTextFlowTargets() {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n+            getSession()\n+                .createQuery(\n+                    \"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalRejectedOrFuzzyTextFlowTargets\");\n         Long totalCount =\n-                (Long) q.setParameter(\"state\", ContentState.NeedReview)\n-                        .setParameter(\"state2\", ContentState.Rejected)\n-                        .uniqueResult();\n-        if (totalCount == null)\n+            (Long) q.setParameter(\"state\", ContentState.NeedReview)\n+                .setParameter(\"state2\", ContentState.Rejected)\n+                .uniqueResult();\n+        if (totalCount == null) {\n             return 0;\n+        }\n         return totalCount.intValue();\n     }\n \n     public int getTotalNewTextFlowTargets() {\n         Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.state = :state and t.textFlow.obsolete=0\");\n+            getSession()\n+                .createQuery(\n+                    \"select count(*) from HTextFlowTarget t where t.state = :state and t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalNewTextFlowTargets\");\n         Long totalCount =\n-                (Long) q.setParameter(\"state\", ContentState.New).uniqueResult();\n-        if (totalCount == null)\n+            (Long) q.setParameter(\"state\", ContentState.New).uniqueResult();\n+        if (totalCount == null) {\n             return 0;\n+        }\n         return totalCount.intValue();\n     }\n \n@@ -167,13 +173,13 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      */\n     @SuppressWarnings(\"unchecked\")\n     public List<HTextFlowTarget> findAllTranslations(HDocument document,\n-            LocaleId localeId) {\n+                                                     LocaleId localeId) {\n         Query q =\n-                getSession().createQuery(\n-                        \"select t from HTextFlowTarget t where \"\n-                                + \"t.textFlow.document =:document \"\n-                                + \"and t.locale.localeId =:localeId \"\n-                                + \"order by t.textFlow.pos\");\n+            getSession().createQuery(\n+                \"select t from HTextFlowTarget t where \"\n+                    + \"t.textFlow.document =:document \"\n+                    + \"and t.locale.localeId =:localeId \"\n+                    + \"order by t.textFlow.pos\");\n         q.setParameter(\"document\", document);\n         q.setParameter(\"localeId\", localeId);\n         q.setCacheable(false);\n@@ -190,14 +196,14 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      */\n     @SuppressWarnings(\"unchecked\")\n     public List<HTextFlowTarget> findTranslations(HDocument document,\n-            HLocale locale) {\n+                                                  HLocale locale) {\n         Query q =\n-                getSession().createQuery(\n-                        \"select t \" + \"from HTextFlowTarget t where \"\n-                                + \"t.textFlow.document =:document \"\n-                                + \"and t.locale =:locale \"\n-                                + \"and t.textFlow.obsolete=false \"\n-                                + \"order by t.textFlow.pos\");\n+            getSession().createQuery(\n+                \"select t \" + \"from HTextFlowTarget t where \"\n+                    + \"t.textFlow.document =:document \"\n+                    + \"and t.locale =:locale \"\n+                    + \"and t.textFlow.obsolete=false \"\n+                    + \"order by t.textFlow.pos\");\n         q.setParameter(\"document\", document);\n         q.setParameter(\"locale\", locale);\n         q.setCacheable(true);\n@@ -212,40 +218,35 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * text is exactly the same as the translation within the document and in\n      * the same locale.\n      *\n-     * @param textFlow\n-     *            The text flow for which to find a matching translation.\n-     * @param targetLocaleId\n-     *            The locale in which to find matches.\n-     * @param checkContext\n-     *            Whether to check for a matching context\n-     * @param checkDocument\n-     *            Whether to check for a matching document id\n-     * @param checkProject\n-     *            Whether to check for a matching project\n+     * @param textFlow       The text flow for which to find a matching translation.\n+     * @param targetLocaleId The locale in which to find matches.\n+     * @param checkContext   Whether to check for a matching context\n+     * @param checkDocument  Whether to check for a matching document id\n+     * @param checkProject   Whether to check for a matching project\n      * @return The single best possible match found in the system for the given\n-     *         text flow.\n+     * text flow.\n      */\n     @Override\n     @NativeQuery\n     public Optional<HTextFlowTarget> searchBestMatchTransMemory(\n-            HTextFlow textFlow, LocaleId targetLocaleId,\n-            LocaleId sourceLocaleId, boolean checkContext,\n-            boolean checkDocument, boolean checkProject) {\n+        HTextFlow textFlow, LocaleId targetLocaleId,\n+        LocaleId sourceLocaleId, boolean checkContext,\n+        boolean checkDocument, boolean checkProject) {\n         StringBuilder queryBuilder = new StringBuilder();\n         queryBuilder\n-                .append(\"SELECT tft.* FROM HTextFlowTarget tft \")\n-                .append(\"JOIN HTextFlow tf ON tf.id = tft.tf_id \")\n-                .append(\"JOIN HLocale locale ON locale.id = tft.locale \")\n-                .append(\"JOIN HDocument hDoc ON hDoc.id = tf.document_id \")\n-                .append(\"JOIN HProjectIteration iter ON iter.id = hDoc.project_iteration_id \")\n-                .append(\"JOIN HProject project ON project.id = iter.project_id \")\n-                .append(\"WHERE tf.contentHash = :contentHash AND locale.localeId = :localeId \")\n-                .append(\"AND tft.tf_id = tf.id \")\n-                .append(\"AND tft.locale = locale.id \")\n-                .append(\"AND tf.document_id = hDoc.id \")\n-                .append(\"AND hDoc.project_iteration_id = iter.id \")\n-                .append(\"AND iter.project_id = project.id \")\n-                .append(\"AND tft.state in (2, 3) AND tft.tf_id <> :textFlowId AND iter.status <> 'O' AND project.status <> 'O' \");\n+            .append(\"SELECT tft.* FROM HTextFlowTarget tft \")\n+            .append(\"JOIN HTextFlow tf ON tf.id = tft.tf_id \")\n+            .append(\"JOIN HLocale locale ON locale.id = tft.locale \")\n+            .append(\"JOIN HDocument hDoc ON hDoc.id = tf.document_id \")\n+            .append(\"JOIN HProjectIteration iter ON iter.id = hDoc.project_iteration_id \")\n+            .append(\"JOIN HProject project ON project.id = iter.project_id \")\n+            .append(\"WHERE tf.contentHash = :contentHash AND locale.localeId = :localeId \")\n+            .append(\"AND tft.tf_id = tf.id \")\n+            .append(\"AND tft.locale = locale.id \")\n+            .append(\"AND tf.document_id = hDoc.id \")\n+            .append(\"AND hDoc.project_iteration_id = iter.id \")\n+            .append(\"AND iter.project_id = project.id \")\n+            .append(\"AND tft.state in (2, 3) AND tft.tf_id <> :textFlowId AND iter.status <> 'O' AND project.status <> 'O' \");\n         if (checkContext) {\n             queryBuilder.append(\"AND tf.resId = :resId \");\n         }\n@@ -256,21 +257,21 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n             queryBuilder.append(\"AND project.id = :projectId \");\n         }\n         queryBuilder\n-                .append(\"ORDER BY \")\n-                .append(\" CASE WHEN tf.resId = :resId THEN 0 ELSE 1 END, \")\n-                .append(\" CASE WHEN hDoc.docId = :docId THEN 0 ELSE 1 END, \")\n-                .append(\" CASE WHEN iter.project_id = :projectId THEN 0 ELSE 1 END, \")\n-                .append(\" tft.lastChanged DESC \")\n-                .append(\"LIMIT 1\");\n+            .append(\"ORDER BY \")\n+            .append(\" CASE WHEN tf.resId = :resId THEN 0 ELSE 1 END, \")\n+            .append(\" CASE WHEN hDoc.docId = :docId THEN 0 ELSE 1 END, \")\n+            .append(\" CASE WHEN iter.project_id = :projectId THEN 0 ELSE 1 END, \")\n+            .append(\" tft.lastChanged DESC \")\n+            .append(\"LIMIT 1\");\n \n         SQLQuery sqlQuery =\n-                getSession().createSQLQuery(queryBuilder.toString());\n+            getSession().createSQLQuery(queryBuilder.toString());\n         sqlQuery.setParameter(\"textFlowId\", textFlow.getId());\n         sqlQuery.setParameter(\"contentHash\", textFlow.getContentHash());\n         sqlQuery.setParameter(\"resId\", textFlow.getResId());\n         sqlQuery.setParameter(\"docId\", textFlow.getDocument().getDocId());\n         sqlQuery.setParameter(\"projectId\", textFlow.getDocument()\n-                .getProjectIteration().getProject().getId());\n+            .getProjectIteration().getProject().getId());\n         sqlQuery.setParameter(\"localeId\", targetLocaleId.getId());\n         sqlQuery.addEntity(HTextFlowTarget.class);\n         return Optional.ofNullable((HTextFlowTarget) sqlQuery.uniqueResult());\n@@ -280,19 +281,17 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * Look up the {@link HTextFlowTarget} for the given hLocale in hTextFlow,\n      * creating a new one if none is present.\n      *\n-     * @param hTextFlow\n-     *            The parent text flow.\n-     * @param hLocale\n-     *            The locale for the text flow target.\n+     * @param hTextFlow The parent text flow.\n+     * @param hLocale   The locale for the text flow target.\n      */\n     public HTextFlowTarget getOrCreateTarget(HTextFlow hTextFlow,\n-            HLocale hLocale) {\n+                                             HLocale hLocale) {\n         HTextFlowTarget hTextFlowTarget = getTextFlowTarget(hTextFlow, hLocale);\n \n         if (hTextFlowTarget == null) {\n             hTextFlowTarget = new HTextFlowTarget(hTextFlow, hLocale);\n             hTextFlowTarget.setVersionNum(0); // this will be incremented when\n-                                              // content is set (below)\n+            // content is set (below)\n             // TODO getTargets just to make sure hTextFlowTarget is persisted in\n             // the end\n             hTextFlow.getTargets().put(hLocale.getId(), hTextFlowTarget);\n@@ -305,82 +304,80 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * Look up the {@link HTextFlowTarget} for the given hLocale in hTextFlow.\n      * If none can be found, return null.\n      *\n-     * @param hTextFlow\n-     *            The parent text flow.\n-     * @param hLocale\n-     *            The locale for the text flow target.\n+     * @param hTextFlow The parent text flow.\n+     * @param hLocale   The locale for the text flow target.\n      */\n     public HTextFlowTarget getTextFlowTarget(HTextFlow hTextFlow,\n-            HLocale hLocale) {\n+                                             HLocale hLocale) {\n         HTextFlowTarget hTextFlowTarget =\n-                (HTextFlowTarget) getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow = :textFlow \"\n-                                        + \"and tft.locale = :locale\")\n-                        .setParameter(\"textFlow\", hTextFlow)\n-                        .setParameter(\"locale\", hLocale)\n-                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n-                        .uniqueResult();\n+            (HTextFlowTarget) getSession()\n+                .createQuery(\n+                    \"select tft from HTextFlowTarget tft \"\n+                        + \"where tft.textFlow = :textFlow \"\n+                        + \"and tft.locale = :locale\")\n+                .setParameter(\"textFlow\", hTextFlow)\n+                .setParameter(\"locale\", hLocale)\n+                .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n+                .uniqueResult();\n         return hTextFlowTarget;\n     }\n \n     public HTextFlowTarget\n-            getTextFlowTarget(Long hTextFlowId, LocaleId localeId) {\n+    getTextFlowTarget(Long hTextFlowId, LocaleId localeId) {\n         HTextFlowTarget hTextFlowTarget =\n-                (HTextFlowTarget) getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow.id = :hTextFlowId \"\n-                                        + \"and tft.locale.localeId = :localeId\")\n-                        .setParameter(\"hTextFlowId\", hTextFlowId)\n-                        .setParameter(\"localeId\", localeId)\n-                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n-                        .uniqueResult();\n+            (HTextFlowTarget) getSession()\n+                .createQuery(\n+                    \"select tft from HTextFlowTarget tft \"\n+                        + \"where tft.textFlow.id = :hTextFlowId \"\n+                        + \"and tft.locale.localeId = :localeId\")\n+                .setParameter(\"hTextFlowId\", hTextFlowId)\n+                .setParameter(\"localeId\", localeId)\n+                .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n+                .uniqueResult();\n         return hTextFlowTarget;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     public List<HTextFlowTarget> findByTextFlowIdList(List<Long> idList,\n-            LocaleId localeId) {\n+                                                      LocaleId localeId) {\n         if (idList == null || idList.isEmpty()) {\n             return Collections.EMPTY_LIST;\n         }\n         Query query =\n-                getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow.id in (:idList) \"\n-                                        + \"and tft.locale.localeId = :localeId\");\n+            getSession()\n+                .createQuery(\n+                    \"select tft from HTextFlowTarget tft \"\n+                        + \"where tft.textFlow.id in (:idList) \"\n+                        + \"and tft.locale.localeId = :localeId\");\n \n         query.setParameterList(\"idList\", idList);\n         query.setParameter(\"localeId\", localeId);\n         query.setCacheable(false).setComment(\n-                \"TextFlowTargetDAO.findByTextFlowIdList\");\n+            \"TextFlowTargetDAO.findByTextFlowIdList\");\n         return query.list();\n     }\n \n     public HTextFlowTarget getTextFlowTarget(HTextFlow hTextFlow,\n-            LocaleId localeId) {\n+                                             LocaleId localeId) {\n         HTextFlowTarget hTextFlowTarget =\n-                (HTextFlowTarget) getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow = :textFlow \"\n-                                        + \"and tft.locale.localeId = :localeId\")\n-                        .setParameter(\"textFlow\", hTextFlow)\n-                        .setParameter(\"localeId\", localeId)\n-                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n-                        .uniqueResult();\n+            (HTextFlowTarget) getSession()\n+                .createQuery(\n+                    \"select tft from HTextFlowTarget tft \"\n+                        + \"where tft.textFlow = :textFlow \"\n+                        + \"and tft.locale.localeId = :localeId\")\n+                .setParameter(\"textFlow\", hTextFlow)\n+                .setParameter(\"localeId\", localeId)\n+                .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n+                .uniqueResult();\n         return hTextFlowTarget;\n     }\n \n     public Long getTextFlowTargetId(HTextFlow hTextFlow, LocaleId localeId) {\n         Query q =\n-                getSession().createQuery(\n-                        \"select tft.id from HTextFlowTarget tft \"\n-                                + \"where tft.textFlow = :textFlow \"\n-                                + \"and tft.locale.localeId = :localeId\");\n+            getSession().createQuery(\n+                \"select tft.id from HTextFlowTarget tft \"\n+                    + \"where tft.textFlow = :textFlow \"\n+                    + \"and tft.locale.localeId = :localeId\");\n         q.setParameter(\"textFlow\", hTextFlow);\n         q.setParameter(\"localeId\", localeId);\n         q.setComment(\"TextFlowTargetDAO.getTextFlowTargetId\");\n@@ -389,7 +386,7 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n     }\n \n     public HTextFlowTarget getLastTranslated(String projectSlug,\n-            String iterationSlug, LocaleId localeId) {\n+                                             String iterationSlug, LocaleId localeId) {\n         StringBuilder query = new StringBuilder();\n         query.append(\"from HTextFlowTarget tft \");\n         query.append(\"where tft.textFlow.document.projectIteration.slug = :iterationSlug \");\n@@ -409,68 +406,64 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n     }\n \n     /**\n-     * @param document\n-     *            copyTrans copy target document\n-     * @param targetLocale\n-     *            target locale\n+     * @param document     copyTrans copy target document\n+     * @param targetLocale target locale\n      * @return number of translation candidates in given locale and is from\n-     *         given docId (exclude translations from target document's\n-     *         iteration)\n+     * given docId (exclude translations from target document's\n+     * iteration)\n      */\n     public long getTranslationCandidateCountWithDocIdAndLocale(\n-            HDocument document,\n-            HLocale targetLocale) {\n+        HDocument document,\n+        HLocale targetLocale) {\n         String queryString =\n-                \"select count(*) from HTextFlowTarget tft \" +\n-                        \"where tft.textFlow.document.docId = :docId \" +\n-                        \"and tft.locale = :locale \" +\n-                        \"and tft.textFlow.obsolete = false \" +\n-                        \"and tft.textFlow.document.obsolete = false \" +\n-                        \"and tft.textFlow.document.projectIteration <> :self\";\n+            \"select count(*) from HTextFlowTarget tft \" +\n+                \"where tft.textFlow.document.docId = :docId \" +\n+                \"and tft.locale = :locale \" +\n+                \"and tft.textFlow.obsolete = false \" +\n+                \"and tft.textFlow.document.obsolete = false \" +\n+                \"and tft.textFlow.document.projectIteration <> :self\";\n         Query query =\n-                getSession()\n-                        .createQuery(queryString)\n-                        .setParameter(\"docId\", document.getDocId())\n-                        .setParameter(\"locale\", targetLocale)\n-                        .setParameter(\"self\", document.getProjectIteration())\n-                        .setCacheable(true)\n-                        .setComment(\n-                                \"TextFlowTargetDAO.getTranslationCandidateCountWithDocIdAndLocale\");\n+            getSession()\n+                .createQuery(queryString)\n+                .setParameter(\"docId\", document.getDocId())\n+                .setParameter(\"locale\", targetLocale)\n+                .setParameter(\"self\", document.getProjectIteration())\n+                .setCacheable(true)\n+                .setComment(\n+                    \"TextFlowTargetDAO.getTranslationCandidateCountWithDocIdAndLocale\");\n         return (Long) query.uniqueResult();\n     }\n \n     /**\n-     * @param document\n-     *            copyTrans copy target document\n-     * @param targetLocale\n-     *            target locale\n+     * @param document     copyTrans copy target document\n+     * @param targetLocale target locale\n      * @return number of translation candidates in given locale and is from\n-     *         given project (exclude translations from target document's\n-     *         iteration)\n+     * given project (exclude translations from target document's\n+     * iteration)\n      */\n     public long getTranslationCandidateCountWithProjectAndLocale(\n-            HDocument document, HLocale targetLocale) {\n+        HDocument document, HLocale targetLocale) {\n         HProjectIteration projectIteration = document.getProjectIteration();\n         HProject project = projectIteration.getProject();\n         String queryString =\n-                \"select count(*) from HTextFlowTarget tft \" +\n-                        \"where tft.textFlow.document.projectIteration.project = :project \" +\n-                        \"and tft.locale = :locale \" +\n-                        \"and tft.textFlow.obsolete = false \" +\n-                        \"and tft.textFlow.document.obsolete = false \" +\n-                        \"and tft.textFlow.document.projectIteration.status <> :obsoleteStatus \" +\n-                        \"and tft.textFlow.document.projectIteration <> :self\";\n+            \"select count(*) from HTextFlowTarget tft \" +\n+                \"where tft.textFlow.document.projectIteration.project = :project \" +\n+                \"and tft.locale = :locale \" +\n+                \"and tft.textFlow.obsolete = false \" +\n+                \"and tft.textFlow.document.obsolete = false \" +\n+                \"and tft.textFlow.document.projectIteration.status <> :obsoleteStatus \" +\n+                \"and tft.textFlow.document.projectIteration <> :self\";\n \n         Query query =\n-                getSession()\n-                        .createQuery(queryString)\n-                        .setParameter(\"project\", project)\n-                        .setParameter(\"locale\", targetLocale)\n-                        .setParameter(\"self\", projectIteration)\n-                        .setParameter(\"obsoleteStatus\", EntityStatus.OBSOLETE)\n-                        .setCacheable(true)\n-                        .setComment(\n-                                \"TextFlowTargetDAO.getTranslationCandidateCountWithProjectAndLocale\");\n+            getSession()\n+                .createQuery(queryString)\n+                .setParameter(\"project\", project)\n+                .setParameter(\"locale\", targetLocale)\n+                .setParameter(\"self\", projectIteration)\n+                .setParameter(\"obsoleteStatus\", EntityStatus.OBSOLETE)\n+                .setCacheable(true)\n+                .setComment(\n+                    \"TextFlowTargetDAO.getTranslationCandidateCountWithProjectAndLocale\");\n         return (Long) query.uniqueResult();\n     }\n }\n",
            "diff_size": 193
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/52/TextFlowTargetDAO.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/52/TextFlowTargetDAO.java\nindex 1fc9f926e7..16b6ea839f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/52/TextFlowTargetDAO.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/52/TextFlowTargetDAO.java\n@@ -3,11 +3,9 @@ package org.zanata.dao;\n import java.util.Collections;\n import java.util.List;\n import java.util.Optional;\n-\n import org.hibernate.Query;\n import org.hibernate.SQLQuery;\n import org.hibernate.Session;\n-\n import javax.enterprise.context.RequestScoped;\n import javax.inject.Named;\n import org.zanata.common.ContentState;\n@@ -21,11 +19,11 @@ import org.zanata.model.HTextFlow;\n import org.zanata.model.HTextFlowTarget;\n import org.zanata.service.TranslationFinder;\n \n+\n @Named(\"textFlowTargetDAO\")\n @RequestScoped\n public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n-        implements TranslationFinder {\n-\n+    implements TranslationFinder {\n     private static final long serialVersionUID = -1426951552450893617L;\n \n     public TextFlowTargetDAO() {\n@@ -41,43 +39,34 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * @param locale\n      * @return\n      */\n+\n     public HTextFlowTarget getByNaturalId(HTextFlow textFlow, HLocale locale) {\n-        return (HTextFlowTarget) getSession()\n-                .byNaturalId(HTextFlowTarget.class).using(\"textFlow\", textFlow)\n-                .using(\"locale\", locale).load();\n+        return (HTextFlowTarget) getSession().byNaturalId(HTextFlowTarget.class)\n+                                             .using(\"textFlow\", textFlow)\n+                                             .using(\"locale\", locale)\n+                                             .load();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public List<HTextFlowTarget> getByTextFlowId(Long tfId, int offset,\n-            int maxResults) {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n+    public List<HTextFlowTarget> getByTextFlowId(Long tfId, int offset, int maxResults) {\n+        Query q = getSession().createQuery(\"from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n         q.setParameter(\"tfId\", tfId);\n         q.setFirstResult(offset);\n         q.setMaxResults(maxResults);\n-        q.setCacheable(true)\n-                .setComment(\"TextFlowTargetDAO.getByTextFlowId\");\n+        q.setCacheable(true).setComment(\"TextFlowTargetDAO.getByTextFlowId\");\n         return q.list();\n     }\n \n     public int countTextFlowTargetsInTextFlow(Long tfId) {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget tft where tft.textFlow.obsolete=0 and tft.textFlow.id = :tfId\");\n         q.setParameter(\"tfId\", tfId);\n-        q.setCacheable(true).setComment(\n-                \"TextFlowTargetDAO.countTextFlowTargetsInTextFlow\");\n+        q.setCacheable(true).setComment(\"TextFlowTargetDAO.countTextFlowTargetsInTextFlow\");\n         Long totalCount = (Long) q.uniqueResult();\n         return totalCount == null ? 0 : totalCount.intValue();\n     }\n \n     public int getTotalTextFlowTargets() {\n-        Query q =\n-                getSession()\n-                        .createQuery(\"select count(*) from HTextFlowTarget\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalTextFlowTargets\");\n         Long totalCount = (Long) q.uniqueResult();\n@@ -87,10 +76,7 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n     }\n \n     public int getTotalActiveTextFlowTargets() {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=0\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalActiveTextFlowTargets\");\n         Long totalCount = (Long) q.uniqueResult();\n@@ -100,10 +86,7 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n     }\n \n     public int getTotalObsoleteTextFlowTargets() {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=1\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget t where t.textFlow.obsolete=1\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalObsoleteTextFlowTargets\");\n         Long totalCount = (Long) q.uniqueResult();\n@@ -113,46 +96,32 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n     }\n \n     public int getTotalApprovedOrTranslatedTextFlowTargets() {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalApprovedOrTranslatedTextFlowTargets\");\n-        Long totalCount =\n-                (Long) q.setParameter(\"state\", ContentState.Approved)\n-                        .setParameter(\"state2\", ContentState.Translated)\n-                        .uniqueResult();\n+        Long totalCount = (Long) q.setParameter(\"state\", ContentState.Approved).setParameter(\"state2\", ContentState.Translated)\n+                                                                               .uniqueResult();\n         if (totalCount == null)\n             return 0;\n         return totalCount.intValue();\n     }\n \n     public int getTotalRejectedOrFuzzyTextFlowTargets() {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget t where t.state = :state or t.state = :state2 and t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalRejectedOrFuzzyTextFlowTargets\");\n-        Long totalCount =\n-                (Long) q.setParameter(\"state\", ContentState.NeedReview)\n-                        .setParameter(\"state2\", ContentState.Rejected)\n-                        .uniqueResult();\n+        Long totalCount = (Long) q.setParameter(\"state\", ContentState.NeedReview).setParameter(\"state2\", ContentState.Rejected)\n+                                                                                 .uniqueResult();\n         if (totalCount == null)\n             return 0;\n         return totalCount.intValue();\n     }\n \n     public int getTotalNewTextFlowTargets() {\n-        Query q =\n-                getSession()\n-                        .createQuery(\n-                                \"select count(*) from HTextFlowTarget t where t.state = :state and t.textFlow.obsolete=0\");\n+        Query q = getSession().createQuery(\"select count(*) from HTextFlowTarget t where t.state = :state and t.textFlow.obsolete=0\");\n         q.setCacheable(true);\n         q.setComment(\"TextFlowTargetDAO.getTotalNewTextFlowTargets\");\n-        Long totalCount =\n-                (Long) q.setParameter(\"state\", ContentState.New).uniqueResult();\n+        Long totalCount = (Long) q.setParameter(\"state\", ContentState.New).uniqueResult();\n         if (totalCount == null)\n             return 0;\n         return totalCount.intValue();\n@@ -165,15 +134,11 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * @param localeId\n      * @return\n      */\n+\n     @SuppressWarnings(\"unchecked\")\n-    public List<HTextFlowTarget> findAllTranslations(HDocument document,\n-            LocaleId localeId) {\n-        Query q =\n-                getSession().createQuery(\n-                        \"select t from HTextFlowTarget t where \"\n-                                + \"t.textFlow.document =:document \"\n-                                + \"and t.locale.localeId =:localeId \"\n-                                + \"order by t.textFlow.pos\");\n+    public List<HTextFlowTarget> findAllTranslations(HDocument document, LocaleId localeId) {\n+        Query q = getSession().createQuery(\"select t from HTextFlowTarget t where \" + \"t.textFlow.document =:document \"\n+        + \"and t.locale.localeId =:localeId \" + \"order by t.textFlow.pos\");\n         q.setParameter(\"document\", document);\n         q.setParameter(\"localeId\", localeId);\n         q.setCacheable(false);\n@@ -188,16 +153,13 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * @param locale\n      * @return\n      */\n+\n     @SuppressWarnings(\"unchecked\")\n-    public List<HTextFlowTarget> findTranslations(HDocument document,\n-            HLocale locale) {\n-        Query q =\n-                getSession().createQuery(\n-                        \"select t \" + \"from HTextFlowTarget t where \"\n-                                + \"t.textFlow.document =:document \"\n-                                + \"and t.locale =:locale \"\n-                                + \"and t.textFlow.obsolete=false \"\n-                                + \"order by t.textFlow.pos\");\n+    public List<HTextFlowTarget> findTranslations(HDocument document, HLocale locale) {\n+        Query q = getSession().createQuery(\"select t \" + \"from HTextFlowTarget t where \"\n+        + \"t.textFlow.document =:document \"\n+            + \"and t.locale =:locale \"\n+            + \"and t.textFlow.obsolete=false \" + \"order by t.textFlow.pos\");\n         q.setParameter(\"document\", document);\n         q.setParameter(\"locale\", locale);\n         q.setCacheable(true);\n@@ -225,27 +187,25 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * @return The single best possible match found in the system for the given\n      *         text flow.\n      */\n+\n     @Override\n     @NativeQuery\n-    public Optional<HTextFlowTarget> searchBestMatchTransMemory(\n-            HTextFlow textFlow, LocaleId targetLocaleId,\n-            LocaleId sourceLocaleId, boolean checkContext,\n-            boolean checkDocument, boolean checkProject) {\n+    public Optional<HTextFlowTarget> searchBestMatchTransMemory(HTextFlow textFlow,\n+LocaleId targetLocaleId,\n+LocaleId sourceLocaleId, boolean checkContext, boolean checkDocument,\n+   boolean checkProject) {\n         StringBuilder queryBuilder = new StringBuilder();\n-        queryBuilder\n-                .append(\"SELECT tft.* FROM HTextFlowTarget tft \")\n-                .append(\"JOIN HTextFlow tf ON tf.id = tft.tf_id \")\n-                .append(\"JOIN HLocale locale ON locale.id = tft.locale \")\n-                .append(\"JOIN HDocument hDoc ON hDoc.id = tf.document_id \")\n-                .append(\"JOIN HProjectIteration iter ON iter.id = hDoc.project_iteration_id \")\n-                .append(\"JOIN HProject project ON project.id = iter.project_id \")\n-                .append(\"WHERE tf.contentHash = :contentHash AND locale.localeId = :localeId \")\n-                .append(\"AND tft.tf_id = tf.id \")\n-                .append(\"AND tft.locale = locale.id \")\n-                .append(\"AND tf.document_id = hDoc.id \")\n-                .append(\"AND hDoc.project_iteration_id = iter.id \")\n-                .append(\"AND iter.project_id = project.id \")\n-                .append(\"AND tft.state in (2, 3) AND tft.tf_id <> :textFlowId AND iter.status <> 'O' AND project.status <> 'O' \");\n+        queryBuilder.append(\"SELECT tft.* FROM HTextFlowTarget tft \").append(\"JOIN HTextFlow tf ON tf.id = tft.tf_id \")\n+                                                                     .append(\"JOIN HLocale locale ON locale.id = tft.locale \")\n+                                                                     .append(\"JOIN HDocument hDoc ON hDoc.id = tf.document_id \")\n+                                                                     .append(\"JOIN HProjectIteration iter ON iter.id = hDoc.project_iteration_id \")\n+                                                                     .append(\"JOIN HProject project ON project.id = iter.project_id \")\n+                                                                     .append(\"WHERE tf.contentHash = :contentHash AND locale.localeId = :localeId \")\n+                                                                     .append(\"AND tft.tf_id = tf.id \")\n+                                                                     .append(\"AND tft.locale = locale.id \")\n+                                                                     .append(\"AND tf.document_id = hDoc.id \")\n+                                                                     .append(\"AND hDoc.project_iteration_id = iter.id \")\n+                                                                     .append(\"AND iter.project_id = project.id \").append(\"AND tft.state in (2, 3) AND tft.tf_id <> :textFlowId AND iter.status <> 'O' AND project.status <> 'O' \");\n         if (checkContext) {\n             queryBuilder.append(\"AND tf.resId = :resId \");\n         }\n@@ -255,22 +215,19 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n         if (checkProject) {\n             queryBuilder.append(\"AND project.id = :projectId \");\n         }\n-        queryBuilder\n-                .append(\"ORDER BY \")\n-                .append(\" CASE WHEN tf.resId = :resId THEN 0 ELSE 1 END, \")\n-                .append(\" CASE WHEN hDoc.docId = :docId THEN 0 ELSE 1 END, \")\n-                .append(\" CASE WHEN iter.project_id = :projectId THEN 0 ELSE 1 END, \")\n-                .append(\" tft.lastChanged DESC \")\n-                .append(\"LIMIT 1\");\n-\n-        SQLQuery sqlQuery =\n-                getSession().createSQLQuery(queryBuilder.toString());\n+        queryBuilder.append(\"ORDER BY \").append(\" CASE WHEN tf.resId = :resId THEN 0 ELSE 1 END, \")\n+                                        .append(\" CASE WHEN hDoc.docId = :docId THEN 0 ELSE 1 END, \")\n+                                        .append(\" CASE WHEN iter.project_id = :projectId THEN 0 ELSE 1 END, \")\n+                                        .append(\" tft.lastChanged DESC \").append(\"LIMIT 1\");\n+        SQLQuery sqlQuery = getSession().createSQLQuery(queryBuilder.toString());\n         sqlQuery.setParameter(\"textFlowId\", textFlow.getId());\n         sqlQuery.setParameter(\"contentHash\", textFlow.getContentHash());\n         sqlQuery.setParameter(\"resId\", textFlow.getResId());\n         sqlQuery.setParameter(\"docId\", textFlow.getDocument().getDocId());\n-        sqlQuery.setParameter(\"projectId\", textFlow.getDocument()\n-                .getProjectIteration().getProject().getId());\n+        sqlQuery.setParameter(\"projectId\",\n+textFlow.getDocument().getProjectIteration()\n+                     .getProject()\n+                     .getId());\n         sqlQuery.setParameter(\"localeId\", targetLocaleId.getId());\n         sqlQuery.addEntity(HTextFlowTarget.class);\n         return Optional.ofNullable((HTextFlowTarget) sqlQuery.uniqueResult());\n@@ -285,10 +242,9 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * @param hLocale\n      *            The locale for the text flow target.\n      */\n-    public HTextFlowTarget getOrCreateTarget(HTextFlow hTextFlow,\n-            HLocale hLocale) {\n-        HTextFlowTarget hTextFlowTarget = getTextFlowTarget(hTextFlow, hLocale);\n \n+    public HTextFlowTarget getOrCreateTarget(HTextFlow hTextFlow, HLocale hLocale) {\n+        HTextFlowTarget hTextFlowTarget = getTextFlowTarget(hTextFlow, hLocale);\n         if (hTextFlowTarget == null) {\n             hTextFlowTarget = new HTextFlowTarget(hTextFlow, hLocale);\n             hTextFlowTarget.setVersionNum(0); // this will be incremented when\n@@ -310,77 +266,48 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      * @param hLocale\n      *            The locale for the text flow target.\n      */\n-    public HTextFlowTarget getTextFlowTarget(HTextFlow hTextFlow,\n-            HLocale hLocale) {\n-        HTextFlowTarget hTextFlowTarget =\n-                (HTextFlowTarget) getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow = :textFlow \"\n-                                        + \"and tft.locale = :locale\")\n-                        .setParameter(\"textFlow\", hTextFlow)\n-                        .setParameter(\"locale\", hLocale)\n-                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n-                        .uniqueResult();\n+\n+    public HTextFlowTarget getTextFlowTarget(HTextFlow hTextFlow, HLocale hLocale) {\n+        HTextFlowTarget hTextFlowTarget = (HTextFlowTarget) getSession().createQuery(\"select tft from HTextFlowTarget tft \" + \"where tft.textFlow = :textFlow \" + \"and tft.locale = :locale\")\n+                                                                        .setParameter(\"textFlow\", hTextFlow)\n+                                                                        .setParameter(\"locale\", hLocale)\n+                                                                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n+                                                                        .uniqueResult();\n         return hTextFlowTarget;\n     }\n \n-    public HTextFlowTarget\n-            getTextFlowTarget(Long hTextFlowId, LocaleId localeId) {\n-        HTextFlowTarget hTextFlowTarget =\n-                (HTextFlowTarget) getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow.id = :hTextFlowId \"\n-                                        + \"and tft.locale.localeId = :localeId\")\n-                        .setParameter(\"hTextFlowId\", hTextFlowId)\n-                        .setParameter(\"localeId\", localeId)\n-                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n-                        .uniqueResult();\n+    public HTextFlowTarget getTextFlowTarget(Long hTextFlowId, LocaleId localeId) {\n+        HTextFlowTarget hTextFlowTarget = (HTextFlowTarget) getSession().createQuery(\"select tft from HTextFlowTarget tft \" + \"where tft.textFlow.id = :hTextFlowId \" + \"and tft.locale.localeId = :localeId\")\n+                                                                        .setParameter(\"hTextFlowId\", hTextFlowId)\n+                                                                        .setParameter(\"localeId\", localeId)\n+                                                                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n+                                                                        .uniqueResult();\n         return hTextFlowTarget;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public List<HTextFlowTarget> findByTextFlowIdList(List<Long> idList,\n-            LocaleId localeId) {\n+    public List<HTextFlowTarget> findByTextFlowIdList(List<Long> idList, LocaleId localeId) {\n         if (idList == null || idList.isEmpty()) {\n             return Collections.EMPTY_LIST;\n         }\n-        Query query =\n-                getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow.id in (:idList) \"\n-                                        + \"and tft.locale.localeId = :localeId\");\n-\n+        Query query = getSession().createQuery(\"select tft from HTextFlowTarget tft \" + \"where tft.textFlow.id in (:idList) \" + \"and tft.locale.localeId = :localeId\");\n         query.setParameterList(\"idList\", idList);\n         query.setParameter(\"localeId\", localeId);\n-        query.setCacheable(false).setComment(\n-                \"TextFlowTargetDAO.findByTextFlowIdList\");\n+        query.setCacheable(false).setComment(\"TextFlowTargetDAO.findByTextFlowIdList\");\n         return query.list();\n     }\n \n-    public HTextFlowTarget getTextFlowTarget(HTextFlow hTextFlow,\n-            LocaleId localeId) {\n-        HTextFlowTarget hTextFlowTarget =\n-                (HTextFlowTarget) getSession()\n-                        .createQuery(\n-                                \"select tft from HTextFlowTarget tft \"\n-                                        + \"where tft.textFlow = :textFlow \"\n-                                        + \"and tft.locale.localeId = :localeId\")\n-                        .setParameter(\"textFlow\", hTextFlow)\n-                        .setParameter(\"localeId\", localeId)\n-                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n-                        .uniqueResult();\n+    public HTextFlowTarget getTextFlowTarget(HTextFlow hTextFlow, LocaleId localeId) {\n+        HTextFlowTarget hTextFlowTarget = (HTextFlowTarget) getSession().createQuery(\"select tft from HTextFlowTarget tft \" + \"where tft.textFlow = :textFlow \" + \"and tft.locale.localeId = :localeId\")\n+                                                                        .setParameter(\"textFlow\", hTextFlow)\n+                                                                        .setParameter(\"localeId\", localeId)\n+                                                                        .setComment(\"TextFlowTargetDAO.getTextFlowTarget\")\n+                                                                        .uniqueResult();\n         return hTextFlowTarget;\n     }\n \n     public Long getTextFlowTargetId(HTextFlow hTextFlow, LocaleId localeId) {\n-        Query q =\n-                getSession().createQuery(\n-                        \"select tft.id from HTextFlowTarget tft \"\n-                                + \"where tft.textFlow = :textFlow \"\n-                                + \"and tft.locale.localeId = :localeId\");\n+        Query q = getSession().createQuery(\"select tft.id from HTextFlowTarget tft \" + \"where tft.textFlow = :textFlow \" + \"and tft.locale.localeId = :localeId\");\n         q.setParameter(\"textFlow\", hTextFlow);\n         q.setParameter(\"localeId\", localeId);\n         q.setComment(\"TextFlowTargetDAO.getTextFlowTargetId\");\n@@ -388,15 +315,13 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n         return id;\n     }\n \n-    public HTextFlowTarget getLastTranslated(String projectSlug,\n-            String iterationSlug, LocaleId localeId) {\n+    public HTextFlowTarget getLastTranslated(String projectSlug, String iterationSlug, LocaleId localeId) {\n         StringBuilder query = new StringBuilder();\n         query.append(\"from HTextFlowTarget tft \");\n         query.append(\"where tft.textFlow.document.projectIteration.slug = :iterationSlug \");\n         query.append(\"and tft.textFlow.document.projectIteration.project.slug = :projectSlug \");\n         query.append(\"and tft.locale.localeId = :localeId \");\n         query.append(\"order by tft.lastChanged DESC\");\n-\n         Query q = getSession().createQuery(query.toString());\n         q.setParameter(\"iterationSlug\", iterationSlug);\n         q.setParameter(\"projectSlug\", projectSlug);\n@@ -404,7 +329,6 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n         q.setCacheable(true);\n         q.setMaxResults(1);\n         q.setComment(\"TextFlowTargetDAO.getLastTranslated\");\n-\n         return (HTextFlowTarget) q.uniqueResult();\n     }\n \n@@ -417,25 +341,18 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      *         given docId (exclude translations from target document's\n      *         iteration)\n      */\n-    public long getTranslationCandidateCountWithDocIdAndLocale(\n-            HDocument document,\n-            HLocale targetLocale) {\n-        String queryString =\n-                \"select count(*) from HTextFlowTarget tft \" +\n-                        \"where tft.textFlow.document.docId = :docId \" +\n-                        \"and tft.locale = :locale \" +\n-                        \"and tft.textFlow.obsolete = false \" +\n-                        \"and tft.textFlow.document.obsolete = false \" +\n-                        \"and tft.textFlow.document.projectIteration <> :self\";\n-        Query query =\n-                getSession()\n-                        .createQuery(queryString)\n-                        .setParameter(\"docId\", document.getDocId())\n-                        .setParameter(\"locale\", targetLocale)\n-                        .setParameter(\"self\", document.getProjectIteration())\n-                        .setCacheable(true)\n-                        .setComment(\n-                                \"TextFlowTargetDAO.getTranslationCandidateCountWithDocIdAndLocale\");\n+\n+    public long getTranslationCandidateCountWithDocIdAndLocale(HDocument document, HLocale targetLocale) {\n+        String queryString = \"select count(*) from HTextFlowTarget tft \" + \"where tft.textFlow.document.docId = :docId \"\n+        + \"and tft.locale = :locale \"\n+            + \"and tft.textFlow.obsolete = false \"\n+            + \"and tft.textFlow.document.obsolete = false \" + \"and tft.textFlow.document.projectIteration <> :self\";\n+        Query query = getSession().createQuery(queryString)\n+                                  .setParameter(\"docId\", document.getDocId())\n+                                  .setParameter(\"locale\", targetLocale)\n+                                  .setParameter(\"self\", document.getProjectIteration())\n+                                  .setCacheable(true)\n+                                  .setComment(\"TextFlowTargetDAO.getTranslationCandidateCountWithDocIdAndLocale\");\n         return (Long) query.uniqueResult();\n     }\n \n@@ -448,29 +365,22 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n      *         given project (exclude translations from target document's\n      *         iteration)\n      */\n-    public long getTranslationCandidateCountWithProjectAndLocale(\n-            HDocument document, HLocale targetLocale) {\n+\n+    public long getTranslationCandidateCountWithProjectAndLocale(HDocument document, HLocale targetLocale) {\n         HProjectIteration projectIteration = document.getProjectIteration();\n         HProject project = projectIteration.getProject();\n-        String queryString =\n-                \"select count(*) from HTextFlowTarget tft \" +\n-                        \"where tft.textFlow.document.projectIteration.project = :project \" +\n-                        \"and tft.locale = :locale \" +\n-                        \"and tft.textFlow.obsolete = false \" +\n-                        \"and tft.textFlow.document.obsolete = false \" +\n-                        \"and tft.textFlow.document.projectIteration.status <> :obsoleteStatus \" +\n-                        \"and tft.textFlow.document.projectIteration <> :self\";\n-\n-        Query query =\n-                getSession()\n-                        .createQuery(queryString)\n-                        .setParameter(\"project\", project)\n-                        .setParameter(\"locale\", targetLocale)\n-                        .setParameter(\"self\", projectIteration)\n-                        .setParameter(\"obsoleteStatus\", EntityStatus.OBSOLETE)\n-                        .setCacheable(true)\n-                        .setComment(\n-                                \"TextFlowTargetDAO.getTranslationCandidateCountWithProjectAndLocale\");\n+        String queryString = \"select count(*) from HTextFlowTarget tft \" + \"where tft.textFlow.document.projectIteration.project = :project \"\n+        + \"and tft.locale = :locale \"\n+        + \"and tft.textFlow.obsolete = false \"\n+            + \"and tft.textFlow.document.obsolete = false \"\n+            + \"and tft.textFlow.document.projectIteration.status <> :obsoleteStatus \" + \"and tft.textFlow.document.projectIteration <> :self\";\n+        Query query = getSession().createQuery(queryString)\n+                                  .setParameter(\"project\", project)\n+                                  .setParameter(\"locale\", targetLocale)\n+                                  .setParameter(\"self\", projectIteration)\n+                                  .setParameter(\"obsoleteStatus\", EntityStatus.OBSOLETE)\n+                                  .setCacheable(true)\n+                                  .setComment(\"TextFlowTargetDAO.getTranslationCandidateCountWithProjectAndLocale\");\n         return (Long) query.uniqueResult();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 211
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "294",
                    "column": "45",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/52/TextFlowTargetDAO.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/52/TextFlowTargetDAO.java\nindex 1fc9f926e7..1ffd237fb0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/52/TextFlowTargetDAO.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/52/TextFlowTargetDAO.java\n@@ -291,8 +291,8 @@ public class TextFlowTargetDAO extends AbstractDAOImpl<HTextFlowTarget, Long>\n \n         if (hTextFlowTarget == null) {\n             hTextFlowTarget = new HTextFlowTarget(hTextFlow, hLocale);\n-            hTextFlowTarget.setVersionNum(0); // this will be incremented when\n-                                              // content is set (below)\n+            hTextFlowTarget.setVersionNum(0);// this will be incremented when\n+            // content is set (below)\n             // TODO getTargets just to make sure hTextFlowTarget is persisted in\n             // the end\n             hTextFlow.getTargets().put(hLocale.getId(), hTextFlowTarget);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}