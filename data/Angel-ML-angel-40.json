{
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/40/DotParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/40/DotParam.java\nindex 88b4b8235a..4d2757d3bf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/40/DotParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/40/DotParam.java\n@@ -28,37 +28,38 @@ import java.util.List;\n \n public class DotParam extends GetParam {\n \n-  int seed;\n-  int partitionId;\n-  int model;\n-  int[][] sentences;\n+    int seed;\n+    int partitionId;\n+    int model;\n+    int[][] sentences;\n \n-  public DotParam(int matrixId,\n-                  int seed,\n-                  int partitionId,\n-                  int model,\n-                  int[][] sentences) {\n-    super(matrixId);\n-    this.seed = seed;\n-    this.partitionId = partitionId;\n-    this.model = model;\n-    this.sentences = sentences;\n-  }\n+    public DotParam(int matrixId,\n+                    int seed,\n+                    int partitionId,\n+                    int model,\n+                    int[][] sentences) {\n+        super(matrixId);\n+        this.seed = seed;\n+        this.partitionId = partitionId;\n+        this.model = model;\n+        this.sentences = sentences;\n+    }\n \n-  @Override\n-  public List<PartitionGetParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n-    List<PartitionGetParam> params = new ArrayList<>();\n-    Iterator<PartitionKey> iterator = pkeys.iterator();\n-    while (iterator.hasNext()) {\n-      PartitionKey pkey = iterator.next();\n-      params.add(new DotPartitionParam(matrixId,\n-              seed,\n-              partitionId,\n-              model,\n-              pkey,\n-              sentences));\n+    @Override\n+    public List<PartitionGetParam> split() {\n+        List<PartitionKey> pkeys =\n+                PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n+        List<PartitionGetParam> params = new ArrayList<>();\n+        Iterator<PartitionKey> iterator = pkeys.iterator();\n+        while (iterator.hasNext()) {\n+            PartitionKey pkey = iterator.next();\n+            params.add(new DotPartitionParam(matrixId,\n+                    seed,\n+                    partitionId,\n+                    model,\n+                    pkey,\n+                    sentences));\n+        }\n+        return params;\n     }\n-    return params;\n-  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/40/DotParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/40/DotParam.java\nindex 88b4b8235a..f34987e7f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/40/DotParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/40/DotParam.java\n@@ -33,12 +33,11 @@ public class DotParam extends GetParam {\n   int model;\n   int[][] sentences;\n \n-  public DotParam(int matrixId,\n-                  int seed,\n+  public DotParam(int matrixId, int seed,\n                   int partitionId,\n                   int model,\n                   int[][] sentences) {\n-    super(matrixId);\n+  super(matrixId);\n     this.seed = seed;\n     this.partitionId = partitionId;\n     this.model = model;\n@@ -52,13 +51,12 @@ public class DotParam extends GetParam {\n     Iterator<PartitionKey> iterator = pkeys.iterator();\n     while (iterator.hasNext()) {\n       PartitionKey pkey = iterator.next();\n-      params.add(new DotPartitionParam(matrixId,\n-              seed,\n+      params.add(new DotPartitionParam(matrixId, seed,\n               partitionId,\n               model,\n               pkey,\n               sentences));\n-    }\n+  }\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/40/DotParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/40/DotParam.java\nindex 88b4b8235a..3b7e67529d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/40/DotParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/40/DotParam.java\n@@ -21,44 +21,38 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.get.base.GetParam;\n import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetParam;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n \n public class DotParam extends GetParam {\n \n-  int seed;\n-  int partitionId;\n-  int model;\n-  int[][] sentences;\n+    int seed;\n+\n+    int partitionId;\n+\n+    int model;\n+\n+    int[][] sentences;\n \n-  public DotParam(int matrixId,\n-                  int seed,\n-                  int partitionId,\n-                  int model,\n-                  int[][] sentences) {\n+    public DotParam(int matrixId, int seed, int partitionId, int model, int[][] sentences) {\n     super(matrixId);\n     this.seed = seed;\n     this.partitionId = partitionId;\n     this.model = model;\n     this.sentences = sentences;\n-  }\n+    }\n \n-  @Override\n-  public List<PartitionGetParam> split() {\n+    @Override\n+    public List<PartitionGetParam> split() {\n     List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n     List<PartitionGetParam> params = new ArrayList<>();\n     Iterator<PartitionKey> iterator = pkeys.iterator();\n     while (iterator.hasNext()) {\n-      PartitionKey pkey = iterator.next();\n-      params.add(new DotPartitionParam(matrixId,\n-              seed,\n-              partitionId,\n-              model,\n-              pkey,\n-              sentences));\n+        PartitionKey pkey = iterator.next();\n+        params.add(new DotPartitionParam(matrixId, seed, partitionId, model, pkey, sentences));\n     }\n     return params;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}