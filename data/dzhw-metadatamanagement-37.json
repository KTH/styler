{
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "74",
                "severity": "error",
                "message": "'}' at column 74 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidInstrumentIdPattern constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "20",
                    "column": "74",
                    "severity": "error",
                    "message": "'}' at column 74 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/37/ValidInstrumentIdPatternValidator.java\nindex 0497b783f8..9527cddc76 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/37/ValidInstrumentIdPatternValidator.java\n@@ -17,7 +17,8 @@ public class ValidInstrumentIdPatternValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidInstrumentIdPattern constraintAnnotation) {}\n+  public void initialize(ValidInstrumentIdPattern constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "20",
                    "column": "74",
                    "severity": "error",
                    "message": "'}' at column 74 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/37/ValidInstrumentIdPatternValidator.java\nindex 0497b783f8..a06926e03f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/37/ValidInstrumentIdPatternValidator.java\n@@ -27,8 +27,7 @@ public class ValidInstrumentIdPatternValidator\n    */\n   @Override\n   public boolean isValid(Instrument instrument, ConstraintValidatorContext context) {\n-\n-    if (instrument.isShadow()) {\n+  if (instrument.isShadow()) {\n       return true;\n     } else {\n       // check precondition\n@@ -42,4 +41,4 @@ public class ValidInstrumentIdPatternValidator\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/37/ValidInstrumentIdPatternValidator.java\nindex 0497b783f8..a1683c8609 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/37/ValidInstrumentIdPatternValidator.java\n@@ -2,22 +2,25 @@ package eu.dzhw.fdz.metadatamanagement.instrumentmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.domain.Instrument;\n \n /**\n  * Validates the name of a id.\n  */\n-public class ValidInstrumentIdPatternValidator\n-    implements ConstraintValidator<ValidInstrumentIdPattern, Instrument> {\n+\n+\n+public class ValidInstrumentIdPatternValidator implements ConstraintValidator<ValidInstrumentIdPattern, Instrument> {\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidInstrumentIdPattern constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidInstrumentIdPattern constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -25,21 +28,22 @@ public class ValidInstrumentIdPatternValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(Instrument instrument, ConstraintValidatorContext context) {\n \n+\n+    @Override\n+    public boolean isValid(Instrument instrument,\n+        ConstraintValidatorContext context) {\n     if (instrument.isShadow()) {\n-      return true;\n+        return true;\n     } else {\n       // check precondition\n-      if (instrument.getDataAcquisitionProjectId() == null || instrument.getId() == null\n+      if (instrument.getDataAcquisitionProjectId() == null\n+          || instrument.getId() == null\n           || instrument.getNumber() == null) {\n-        return false;\n+               return false;\n       }\n \n-      return instrument.getId().equals(\"ins-\" + instrument.getDataAcquisitionProjectId() + \"-ins\"\n-          + instrument.getNumber() + \"$\");\n+      return instrument.getId().equals(\"ins-\" + instrument.getDataAcquisitionProjectId() + \"-ins\" + instrument.getNumber() + \"$\");\n     }\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "20",
                    "column": "74",
                    "severity": "error",
                    "message": "'}' at column 74 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/37/ValidInstrumentIdPatternValidator.java\nindex 0497b783f8..ef83a4d598 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/37/ValidInstrumentIdPatternValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/37/ValidInstrumentIdPatternValidator.java\n@@ -17,9 +17,8 @@ public class ValidInstrumentIdPatternValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidInstrumentIdPattern constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidInstrumentIdPattern constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 3
        }
    ]
}