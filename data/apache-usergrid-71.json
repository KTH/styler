{
    "error_id": "71",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Dynamic entities can represent any entity type whether specified in the Schema or not.\n *\n * @author edanuff\n */\n@XmlRootElement\npublic class DynamicEntity extends AbstractEntity {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/71/DynamicEntity.java\nindex 5f33b807ae..f01340d080 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/71/DynamicEntity.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence;\n \n \n@@ -34,79 +35,79 @@ import org.apache.usergrid.utils.UUIDUtils;\n @XmlRootElement\n public class DynamicEntity extends AbstractEntity {\n \n-    @EntityProperty(indexed = true, fulltextIndexed = false, required = false, mutable = true, aliasProperty = true,\n-            basic = true)\n-    protected String name;\n+  @EntityProperty(indexed = true, fulltextIndexed = false, required = false, mutable = true, aliasProperty = true,\n+      basic = true)\n+  protected String name;\n \n-    protected String type;\n+  protected String type;\n \n \n-    /**\n-     *\n-     */\n-    public DynamicEntity() {\n-        // setId(UUIDUtils.newTimeUUID());\n-    }\n+  /**\n+   *\n+   */\n+  public DynamicEntity() {\n+    // setId(UUIDUtils.newTimeUUID());\n+  }\n \n \n-    /**\n-     * @param id\n-     */\n-    public DynamicEntity( UUID id ) {\n-        setUuid( id );\n-    }\n+  /**\n+   * @param id\n+   */\n+  public DynamicEntity(UUID id) {\n+    setUuid(id);\n+  }\n \n \n-    /**\n-     * @param type\n-     */\n-    public DynamicEntity( String type ) {\n-        setUuid( UUIDUtils.newTimeUUID() );\n-        setType( type );\n-    }\n+  /**\n+   * @param type\n+   */\n+  public DynamicEntity(String type) {\n+    setUuid(UUIDUtils.newTimeUUID());\n+    setType(type);\n+  }\n \n \n-    /**\n-     * @param id\n-     * @param type\n-     */\n-    public DynamicEntity( String type, UUID id ) {\n-        setUuid( id );\n-        setType( type );\n-    }\n+  /**\n+   * @param id\n+   * @param type\n+   */\n+  public DynamicEntity(String type, UUID id) {\n+    setUuid(id);\n+    setType(type);\n+  }\n \n \n-    /**\n-     * @param id\n-     * @param type\n-     */\n-    public DynamicEntity( String type, UUID id, Map<String, Object> propertyMap ) {\n-        setUuid( id );\n-        setType( type );\n-        setProperties( propertyMap );\n-    }\n+  /**\n+   * @param id\n+   * @param type\n+   */\n+  public DynamicEntity(String type, UUID id, Map<String, Object> propertyMap) {\n+    setUuid(id);\n+    setType(type);\n+    setProperties(propertyMap);\n+  }\n \n \n-    @Override\n-    @EntityProperty(required = true, mutable = false, basic = true, indexed = false)\n-    public String getType() {\n-        return type;\n-    }\n+  @Override\n+  @EntityProperty(required = true, mutable = false, basic = true, indexed = false)\n+  public String getType() {\n+    return type;\n+  }\n \n \n-    @Override\n-    public void setType( String type ) {\n-        this.type = type;\n-    }\n+  @Override\n+  public void setType(String type) {\n+    this.type = type;\n+  }\n \n \n-    @Override\n-    public String getName() {\n-        return name;\n-    }\n+  @Override\n+  public String getName() {\n+    return name;\n+  }\n \n \n-    public void setName( String name ) {\n-        this.name = name;\n-    }\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/71/DynamicEntity.java\nindex 5f33b807ae..8028f27b19 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/71/DynamicEntity.java\n@@ -109,4 +109,4 @@ public class DynamicEntity extends AbstractEntity {\n     public void setName( String name ) {\n         this.name = name;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/71/DynamicEntity.java\nindex 5f33b807ae..36c5268a24 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/71/DynamicEntity.java\n@@ -19,9 +19,7 @@ package org.apache.usergrid.persistence;\n \n import java.util.Map;\n import java.util.UUID;\n-\n import javax.xml.bind.annotation.XmlRootElement;\n-\n import org.apache.usergrid.persistence.annotations.EntityProperty;\n import org.apache.usergrid.utils.UUIDUtils;\n \n@@ -31,19 +29,21 @@ import org.apache.usergrid.utils.UUIDUtils;\n  *\n  * @author edanuff\n  */\n+\n+\n @XmlRootElement\n public class DynamicEntity extends AbstractEntity {\n \n-    @EntityProperty(indexed = true, fulltextIndexed = false, required = false, mutable = true, aliasProperty = true,\n-            basic = true)\n+    @EntityProperty(indexed = true, fulltextIndexed = false, required = false, mutable = true, aliasProperty = true, basic = true)\n     protected String name;\n-\n     protected String type;\n \n \n     /**\n      *\n      */\n+\n+\n     public DynamicEntity() {\n         // setId(UUIDUtils.newTimeUUID());\n     }\n@@ -52,6 +52,8 @@ public class DynamicEntity extends AbstractEntity {\n     /**\n      * @param id\n      */\n+\n+\n     public DynamicEntity( UUID id ) {\n         setUuid( id );\n     }\n@@ -60,6 +62,8 @@ public class DynamicEntity extends AbstractEntity {\n     /**\n      * @param type\n      */\n+\n+\n     public DynamicEntity( String type ) {\n         setUuid( UUIDUtils.newTimeUUID() );\n         setType( type );\n@@ -70,6 +74,8 @@ public class DynamicEntity extends AbstractEntity {\n      * @param id\n      * @param type\n      */\n+\n+\n     public DynamicEntity( String type, UUID id ) {\n         setUuid( id );\n         setType( type );\n@@ -80,6 +86,8 @@ public class DynamicEntity extends AbstractEntity {\n      * @param id\n      * @param type\n      */\n+\n+\n     public DynamicEntity( String type, UUID id, Map<String, Object> propertyMap ) {\n         setUuid( id );\n         setType( type );\n@@ -109,4 +117,4 @@ public class DynamicEntity extends AbstractEntity {\n     public void setName( String name ) {\n         this.name = name;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/71/DynamicEntity.java\nindex 5f33b807ae..c3b76b56da 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/71/DynamicEntity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/71/DynamicEntity.java\n@@ -25,7 +25,6 @@ import javax.xml.bind.annotation.XmlRootElement;\n import org.apache.usergrid.persistence.annotations.EntityProperty;\n import org.apache.usergrid.utils.UUIDUtils;\n \n-\n /**\n  * Dynamic entities can represent any entity type whether specified in the Schema or not.\n  *\n",
            "diff_size": 1
        }
    ]
}