{
    "error_id": "722",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/722/TVector.java\nindex 083824bc4c..5da3870c0d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/722/TVector.java\n@@ -22,130 +22,130 @@ package com.tencent.angel.ml.math;\n  */\n public abstract class TVector extends TAbstractVector {\n \n-  /**\n-   * Instantiates a new T vector.\n-   */\n-  public TVector() {\n-    super();\n-  }\n-\n-  /**\n-   * Instantiates a new T vector.\n-   *\n-   * @param other the other\n-   */\n-  public TVector(TVector other) {\n-    super(other);\n-  }\n-\n-  /**\n-   *Plus this vector with other vector element by element.\n-   *\n-   * @param other the other vector\n-   * @return the reference of object\n-   */\n-  public abstract TVector plusBy(TAbstractVector other);\n-\n-  /**\n-   * Multiply plus this vector with other vector element by element.\n-   *\n-   * @param other the other\n-   * @param x     the double multiply factor\n-   * @return the reference of object\n-   */\n-  public abstract TVector plusBy(TAbstractVector other, double x);\n-\n-  /**\n-   * Plus this vector with other vector element by element.\n-   *\n-   * @param other the other\n-   * @param x     the int multiply factor\n-   * @return the reference of object\n-   */\n-  public abstract TVector plusBy(TAbstractVector other, int x);\n-\n-  /**\n-   * Plus this vector with other vector to generate a new vector element by element.\n-   *\n-   * @param other the other vector\n-   * @return the new vector\n-   */\n-  public abstract TVector plus(TAbstractVector other);\n-\n-  /**\n-   * Multiply plus this vector with other vector to a generate new vector element by element.\n-   *\n-   * @param other the other\n-   * @param x     the double multiply factor\n-   * @return the new vector\n-   */\n-  public abstract TVector plus(TAbstractVector other, double x);\n-\n-  /**\n-   * Multiply plus this vector with other vector to a generate new vector element by element.\n-   *\n-   * @param other the other\n-   * @param x     the int multiply factor\n-   * @return the new vector\n-   */\n-  public abstract TVector plus(TAbstractVector other, int x);\n-\n-  /**\n-   * Dot this vector with other.\n-   *\n-   * @param other the other\n-   * @return the result\n-   */\n-  public abstract double dot(TAbstractVector other);\n-\n-  /**\n-   * Times this vector with x, generating a new vector\n-   *\n-   * @param x the double multiply factor\n-   * @return the new vector\n-   */\n-  public abstract TVector times(double x);\n-\n-  /**\n-   * Times this vector with x\n-   *\n-   * @param x the double multiply factor\n-   * @return the reference of object\n-   */\n-  public abstract TVector timesBy(double x);\n-\n-  /**\n-   * Filter value whose absolute value less than x.\n-   *\n-   * @param x the comparison value\n-   * @return the t vector\n-   */\n-  public abstract TVector filter(double x);\n-\n-  /**\n-   * Clone a vector.\n-   *\n-   * @return  cloned vector\n-   */\n-  public abstract TVector clone();\n-\n-  /**\n-   * Clear.\n-   */\n-  public abstract void clear();\n-\n-  /**\n-   * Non zero number long.\n-   *\n-   * @return the long\n-   */\n-  public abstract long nonZeroNumber();\n-\n-  /**\n-   * Clone.\n-   *\n-   * @param vector for cloning the vector\n-   */\n-  public abstract void clone(TVector vector);\n+    /**\n+     * Instantiates a new T vector.\n+     */\n+    public TVector() {\n+        super();\n+    }\n+\n+    /**\n+     * Instantiates a new T vector.\n+     *\n+     * @param other the other\n+     */\n+    public TVector(TVector other) {\n+        super(other);\n+    }\n+\n+    /**\n+     * Plus this vector with other vector element by element.\n+     *\n+     * @param other the other vector\n+     * @return the reference of object\n+     */\n+    public abstract TVector plusBy(TAbstractVector other);\n+\n+    /**\n+     * Multiply plus this vector with other vector element by element.\n+     *\n+     * @param other the other\n+     * @param x     the double multiply factor\n+     * @return the reference of object\n+     */\n+    public abstract TVector plusBy(TAbstractVector other, double x);\n+\n+    /**\n+     * Plus this vector with other vector element by element.\n+     *\n+     * @param other the other\n+     * @param x     the int multiply factor\n+     * @return the reference of object\n+     */\n+    public abstract TVector plusBy(TAbstractVector other, int x);\n+\n+    /**\n+     * Plus this vector with other vector to generate a new vector element by element.\n+     *\n+     * @param other the other vector\n+     * @return the new vector\n+     */\n+    public abstract TVector plus(TAbstractVector other);\n+\n+    /**\n+     * Multiply plus this vector with other vector to a generate new vector element by element.\n+     *\n+     * @param other the other\n+     * @param x     the double multiply factor\n+     * @return the new vector\n+     */\n+    public abstract TVector plus(TAbstractVector other, double x);\n+\n+    /**\n+     * Multiply plus this vector with other vector to a generate new vector element by element.\n+     *\n+     * @param other the other\n+     * @param x     the int multiply factor\n+     * @return the new vector\n+     */\n+    public abstract TVector plus(TAbstractVector other, int x);\n+\n+    /**\n+     * Dot this vector with other.\n+     *\n+     * @param other the other\n+     * @return the result\n+     */\n+    public abstract double dot(TAbstractVector other);\n+\n+    /**\n+     * Times this vector with x, generating a new vector\n+     *\n+     * @param x the double multiply factor\n+     * @return the new vector\n+     */\n+    public abstract TVector times(double x);\n+\n+    /**\n+     * Times this vector with x\n+     *\n+     * @param x the double multiply factor\n+     * @return the reference of object\n+     */\n+    public abstract TVector timesBy(double x);\n+\n+    /**\n+     * Filter value whose absolute value less than x.\n+     *\n+     * @param x the comparison value\n+     * @return the t vector\n+     */\n+    public abstract TVector filter(double x);\n+\n+    /**\n+     * Clone a vector.\n+     *\n+     * @return cloned vector\n+     */\n+    public abstract TVector clone();\n+\n+    /**\n+     * Clear.\n+     */\n+    public abstract void clear();\n+\n+    /**\n+     * Non zero number long.\n+     *\n+     * @return the long\n+     */\n+    public abstract long nonZeroNumber();\n+\n+    /**\n+     * Clone.\n+     *\n+     * @param vector for cloning the vector\n+     */\n+    public abstract void clone(TVector vector);\n \n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/722/TVector.java\nindex 083824bc4c..e7d4c84fbc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/722/TVector.java\n@@ -148,4 +148,4 @@ public abstract class TVector extends TAbstractVector {\n    */\n   public abstract void clone(TVector vector);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 72.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 91.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 101.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 110.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 119.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 128.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 137.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 145.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 151.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 159.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 167.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/722/TVector.java\nindex 083824bc4c..421741dc39 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/722/TVector.java\n@@ -20,23 +20,27 @@ package com.tencent.angel.ml.math;\n /**\n  * The vector oriented column, represented a one-dimensional values.\n  */\n+\n+\n public abstract class TVector extends TAbstractVector {\n \n   /**\n    * Instantiates a new T vector.\n    */\n-  public TVector() {\n+\n+    public TVector() {\n     super();\n-  }\n+    }\n \n   /**\n    * Instantiates a new T vector.\n    *\n    * @param other the other\n    */\n-  public TVector(TVector other) {\n+\n+    public TVector(TVector other) {\n     super(other);\n-  }\n+    }\n \n   /**\n    *Plus this vector with other vector element by element.\n@@ -44,7 +48,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param other the other vector\n    * @return the reference of object\n    */\n-  public abstract TVector plusBy(TAbstractVector other);\n+\n+    public abstract TVector plusBy(TAbstractVector other);\n \n   /**\n    * Multiply plus this vector with other vector element by element.\n@@ -53,7 +58,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param x     the double multiply factor\n    * @return the reference of object\n    */\n-  public abstract TVector plusBy(TAbstractVector other, double x);\n+\n+    public abstract TVector plusBy(TAbstractVector other, double x);\n \n   /**\n    * Plus this vector with other vector element by element.\n@@ -62,7 +68,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param x     the int multiply factor\n    * @return the reference of object\n    */\n-  public abstract TVector plusBy(TAbstractVector other, int x);\n+\n+    public abstract TVector plusBy(TAbstractVector other, int x);\n \n   /**\n    * Plus this vector with other vector to generate a new vector element by element.\n@@ -70,7 +77,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param other the other vector\n    * @return the new vector\n    */\n-  public abstract TVector plus(TAbstractVector other);\n+\n+    public abstract TVector plus(TAbstractVector other);\n \n   /**\n    * Multiply plus this vector with other vector to a generate new vector element by element.\n@@ -79,7 +87,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param x     the double multiply factor\n    * @return the new vector\n    */\n-  public abstract TVector plus(TAbstractVector other, double x);\n+\n+    public abstract TVector plus(TAbstractVector other, double x);\n \n   /**\n    * Multiply plus this vector with other vector to a generate new vector element by element.\n@@ -88,7 +97,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param x     the int multiply factor\n    * @return the new vector\n    */\n-  public abstract TVector plus(TAbstractVector other, int x);\n+\n+    public abstract TVector plus(TAbstractVector other, int x);\n \n   /**\n    * Dot this vector with other.\n@@ -96,7 +106,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param other the other\n    * @return the result\n    */\n-  public abstract double dot(TAbstractVector other);\n+\n+    public abstract double dot(TAbstractVector other);\n \n   /**\n    * Times this vector with x, generating a new vector\n@@ -104,7 +115,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param x the double multiply factor\n    * @return the new vector\n    */\n-  public abstract TVector times(double x);\n+\n+    public abstract TVector times(double x);\n \n   /**\n    * Times this vector with x\n@@ -112,7 +124,8 @@ public abstract class TVector extends TAbstractVector {\n    * @param x the double multiply factor\n    * @return the reference of object\n    */\n-  public abstract TVector timesBy(double x);\n+\n+    public abstract TVector timesBy(double x);\n \n   /**\n    * Filter value whose absolute value less than x.\n@@ -120,32 +133,37 @@ public abstract class TVector extends TAbstractVector {\n    * @param x the comparison value\n    * @return the t vector\n    */\n-  public abstract TVector filter(double x);\n+\n+    public abstract TVector filter(double x);\n \n   /**\n    * Clone a vector.\n    *\n    * @return  cloned vector\n    */\n-  public abstract TVector clone();\n+\n+    public abstract TVector clone();\n \n   /**\n    * Clear.\n    */\n-  public abstract void clear();\n+\n+    public abstract void clear();\n \n   /**\n    * Non zero number long.\n    *\n    * @return the long\n    */\n-  public abstract long nonZeroNumber();\n+\n+    public abstract long nonZeroNumber();\n \n   /**\n    * Clone.\n    *\n    * @param vector for cloning the vector\n    */\n-  public abstract void clone(TVector vector);\n \n-}\n+    public abstract void clone(TVector vector);\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/722/TVector.java\nindex 083824bc4c..a880fcb73b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/722/TVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/722/TVector.java\n@@ -14,138 +14,140 @@\n  * limitations under the License.\n  */\n \n-package com.tencent.angel.ml.math;\n+package\n+com.tencent.angel.ml.math;\n \n \n-/**\n+ /**\n  * The vector oriented column, represented a one-dimensional values.\n  */\n-public abstract class TVector extends TAbstractVector {\n+ public abstract class TVector extends TAbstractVector {\n \n-  /**\n+   /**\n    * Instantiates a new T vector.\n    */\n-  public TVector() {\n-    super();\n-  }\n+   public TVector() {\n+     super();\n+   }\n \n-  /**\n+   /**\n    * Instantiates a new T vector.\n    *\n    * @param other the other\n    */\n-  public TVector(TVector other) {\n-    super(other);\n-  }\n+   public TVector(TVector other) {\n+     super(other);\n+   }\n \n-  /**\n+   /**\n    *Plus this vector with other vector element by element.\n    *\n    * @param other the other vector\n    * @return the reference of object\n    */\n-  public abstract TVector plusBy(TAbstractVector other);\n+   public abstract TVector plusBy(TAbstractVector other);\n \n-  /**\n+   /**\n    * Multiply plus this vector with other vector element by element.\n    *\n    * @param other the other\n    * @param x     the double multiply factor\n    * @return the reference of object\n    */\n-  public abstract TVector plusBy(TAbstractVector other, double x);\n+   public abstract TVector plusBy(TAbstractVector other, double x);\n \n-  /**\n+   /**\n    * Plus this vector with other vector element by element.\n    *\n    * @param other the other\n    * @param x     the int multiply factor\n    * @return the reference of object\n    */\n-  public abstract TVector plusBy(TAbstractVector other, int x);\n+   public abstract TVector plusBy(TAbstractVector other, int x);\n \n-  /**\n+   /**\n    * Plus this vector with other vector to generate a new vector element by element.\n    *\n    * @param other the other vector\n    * @return the new vector\n    */\n-  public abstract TVector plus(TAbstractVector other);\n+   public abstract TVector plus(TAbstractVector other);\n \n-  /**\n+   /**\n    * Multiply plus this vector with other vector to a generate new vector element by element.\n    *\n    * @param other the other\n    * @param x     the double multiply factor\n    * @return the new vector\n    */\n-  public abstract TVector plus(TAbstractVector other, double x);\n+   public abstract TVector plus(TAbstractVector other, double x);\n \n-  /**\n+   /**\n    * Multiply plus this vector with other vector to a generate new vector element by element.\n    *\n    * @param other the other\n    * @param x     the int multiply factor\n    * @return the new vector\n    */\n-  public abstract TVector plus(TAbstractVector other, int x);\n+   public abstract TVector plus(TAbstractVector other, int x);\n \n-  /**\n+   /**\n    * Dot this vector with other.\n    *\n    * @param other the other\n    * @return the result\n    */\n-  public abstract double dot(TAbstractVector other);\n+   public abstract double dot(TAbstractVector other);\n \n-  /**\n+   /**\n    * Times this vector with x, generating a new vector\n    *\n    * @param x the double multiply factor\n    * @return the new vector\n    */\n-  public abstract TVector times(double x);\n+   public abstract TVector times(double x);\n \n-  /**\n+   /**\n    * Times this vector with x\n    *\n    * @param x the double multiply factor\n    * @return the reference of object\n    */\n-  public abstract TVector timesBy(double x);\n+   public abstract TVector timesBy(double x);\n \n-  /**\n+   /**\n    * Filter value whose absolute value less than x.\n    *\n    * @param x the comparison value\n    * @return the t vector\n    */\n-  public abstract TVector filter(double x);\n+   public abstract TVector filter(double x);\n \n-  /**\n+   /**\n    * Clone a vector.\n    *\n    * @return  cloned vector\n    */\n-  public abstract TVector clone();\n+   public abstract TVector clone();\n \n-  /**\n+   /**\n    * Clear.\n    */\n-  public abstract void clear();\n+   public abstract void clear();\n \n-  /**\n+   /**\n    * Non zero number long.\n    *\n    * @return the long\n    */\n-  public abstract long nonZeroNumber();\n+   public abstract long nonZeroNumber();\n \n-  /**\n+   /**\n    * Clone.\n    *\n    * @param vector for cloning the vector\n    */\n-  public abstract void clone(TVector vector);\n+   public abstract void clone(TVector vector);\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}