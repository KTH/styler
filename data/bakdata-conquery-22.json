{
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n\t\t\t.accept(this);\t\t\n\t}\n\t\n\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/22/FormConfigPatch.java\nindex 914a1f6bf3..2655979148 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/22/FormConfigPatch.java\n@@ -23,12 +23,12 @@ import lombok.experimental.SuperBuilder;\n @NoArgsConstructor\n public class FormConfigPatch extends MetaDataPatch {\n \tprivate JsonNode values;\n-\t\n+\n \tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n \t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\t\t.accept(this);\n \t}\n-\t\n+\n \tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/22/FormConfigPatch.java\nindex 914a1f6bf3..350bd5daf9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/22/FormConfigPatch.java\n@@ -22,18 +22,18 @@ import lombok.experimental.SuperBuilder;\n @Data\n @NoArgsConstructor\n public class FormConfigPatch extends MetaDataPatch {\n-\tprivate JsonNode values;\n-\t\n-\tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n-\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n-\t}\n-\t\n-\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n-\t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n-\t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n-\t\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n-\t\t}\n-\t\treturn patchConsumerChain;\n-\t}\n+    private JsonNode values;\n+\n+    public void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator) {\n+        chain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n+            .accept(this);\n+    }\n+\n+    protected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n+        patchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n+        if (getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n+            patchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n+        }\n+        return patchConsumerChain;\n+    }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/22/FormConfigPatch.java\nindex 914a1f6bf3..3f58486ace 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/22/FormConfigPatch.java\n@@ -24,11 +24,11 @@ import lombok.experimental.SuperBuilder;\n public class FormConfigPatch extends MetaDataPatch {\n \tprivate JsonNode values;\n \t\n-\tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n+\tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\t\t.accept(this);\n \t}\n-\t\n+\n \tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n@@ -36,4 +36,4 @@ public class FormConfigPatch extends MetaDataPatch {\n \t\t}\n \t\treturn patchConsumerChain;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/22/FormConfigPatch.java\nindex 914a1f6bf3..be3d30dfdb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/22/FormConfigPatch.java\n@@ -1,7 +1,6 @@\n package com.bakdata.conquery.apiv1;\n \n import java.util.function.Consumer;\n-\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.entities.User;\n import com.bakdata.conquery.models.auth.permissions.Ability;\n@@ -17,23 +16,25 @@ import lombok.experimental.SuperBuilder;\n /**\n  * Specific class to also patch the values stored in a {@link FormConfigInternal}.\n  */\n+\n @SuperBuilder\n-@EqualsAndHashCode(callSuper = true)\n+@EqualsAndHashCode(callSuper=true)\n @Data\n @NoArgsConstructor\n public class FormConfigPatch extends MetaDataPatch {\n-\tprivate JsonNode values;\n-\t\n-\tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n-\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n-\t}\n-\t\n-\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n-\t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n-\t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n-\t\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n-\t\t}\n-\t\treturn patchConsumerChain;\n-\t}\n-}\n+\n+    private JsonNode values;\n+\n+    public void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator) {\n+        chain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator).accept(this);\n+    }\n+\n+    protected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n+        patchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n+\n+        if(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n+            patchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n+        }\n+        return patchConsumerChain;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/22/FormConfigPatch.java\nindex 914a1f6bf3..2655979148 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/22/FormConfigPatch.java\n@@ -23,12 +23,12 @@ import lombok.experimental.SuperBuilder;\n @NoArgsConstructor\n public class FormConfigPatch extends MetaDataPatch {\n \tprivate JsonNode values;\n-\t\n+\n \tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n \t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\t\t.accept(this);\n \t}\n-\t\n+\n \tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/22/FormConfigPatch.java\nindex 914a1f6bf3..bbe7ef9cb7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/22/FormConfigPatch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/22/FormConfigPatch.java\n@@ -23,17 +23,17 @@ import lombok.experimental.SuperBuilder;\n @NoArgsConstructor\n public class FormConfigPatch extends MetaDataPatch {\n \tprivate JsonNode values;\n-\t\n+\n \tpublic void applyTo(FormConfigInternal instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n-\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator).accept(this);\n+\n \t}\n-\t\n-\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n-\t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n-\t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n-\t\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n-\t\t}\n-\t\treturn patchConsumerChain;\n+\n+protected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfigInternal instance, PermissionCreator<FormConfigId> permissionCreator) {\n+\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n+\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n+\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n \t}\n+\treturn patchConsumerChain;\n+}\n }\n",
            "diff_size": 12
        }
    ]
}