{
    "error_id": "164",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Test suite for {@link cz.o2.proxima.direct.gcloud.storage.BinaryBlob} for reading and writing.\n */\n@RunWith(Parameterized.class)\npublic class BinaryBlobTest {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/164/BinaryBlobTest.java\nindex 2b71df4667..289048d5f1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/164/BinaryBlobTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.gcloud.storage;\n \n import static org.junit.Assert.assertEquals;\n@@ -48,9 +49,11 @@ public class BinaryBlobTest {\n   final AttributeDescriptor<?> wildcard;\n   final EntityDescriptor entity;\n \n-  @Rule public TemporaryFolder folder = new TemporaryFolder();\n+  @Rule\n+  public TemporaryFolder folder = new TemporaryFolder();\n \n-  @Parameterized.Parameter public boolean gzip;\n+  @Parameterized.Parameter\n+  public boolean gzip;\n \n   @Parameterized.Parameters\n   public static Collection<Boolean> params() {\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/164/BinaryBlobTest.java\nindex 2b71df4667..796a55cc9e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/164/BinaryBlobTest.java\n@@ -48,9 +48,11 @@ public class BinaryBlobTest {\n   final AttributeDescriptor<?> wildcard;\n   final EntityDescriptor entity;\n \n-  @Rule public TemporaryFolder folder = new TemporaryFolder();\n+  @Rule\n+public TemporaryFolder folder = new TemporaryFolder();\n \n-  @Parameterized.Parameter public boolean gzip;\n+  @Parameterized.Parameter\n+public boolean gzip;\n \n   @Parameterized.Parameters\n   public static Collection<Boolean> params() {\n@@ -67,13 +69,13 @@ public class BinaryBlobTest {\n             .setSchemeUri(new URI(\"bytes:///\"))\n             .setName(\"wildcard.*\")\n             .build();\n-    this.attr =\n+this.attr =\n         AttributeDescriptor.newBuilder(repo)\n             .setEntity(\"dummy\")\n             .setSchemeUri(new URI(\"bytes:///\"))\n             .setName(\"attr\")\n             .build();\n-    this.entity =\n+this.entity =\n         EntityDescriptor.newBuilder()\n             .setName(\"dummy\")\n             .addAttribute((AttributeDescriptorBase<?>) attr)\n@@ -98,8 +100,7 @@ public class BinaryBlobTest {\n             \"attr\",\n             System.currentTimeMillis(),\n             new byte[] {1, 2});\n-\n-    try (BinaryBlob.Writer writer = blob.writer(gzip)) {\n+try (BinaryBlob.Writer writer = blob.writer(gzip)) {\n       writer.write(el);\n     }\n \n@@ -112,4 +113,4 @@ public class BinaryBlobTest {\n       assertEquals(1, matched);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/164/BinaryBlobTest.java\nindex 2b71df4667..19f386ec9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/164/BinaryBlobTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.direct.gcloud.storage;\n \n import static org.junit.Assert.assertEquals;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.repository.AttributeDescriptor;\n import cz.o2.proxima.repository.AttributeDescriptorBase;\n@@ -40,76 +39,63 @@ import org.junit.runners.Parameterized;\n /**\n  * Test suite for {@link cz.o2.proxima.direct.gcloud.storage.BinaryBlob} for reading and writing.\n  */\n+\n+\n @RunWith(Parameterized.class)\n public class BinaryBlobTest {\n \n-  final Repository repo = Repository.of(ConfigFactory.load().resolve());\n-  final AttributeDescriptor<?> attr;\n-  final AttributeDescriptor<?> wildcard;\n-  final EntityDescriptor entity;\n+    final Repository repo = Repository.of(ConfigFactory.load().resolve());\n+    final AttributeDescriptor<?> attr;\n+    final AttributeDescriptor<?> wildcard;\n+    final EntityDescriptor entity;\n \n-  @Rule public TemporaryFolder folder = new TemporaryFolder();\n+    @Rule public TemporaryFolder folder = new TemporaryFolder();\n \n-  @Parameterized.Parameter public boolean gzip;\n+    @Parameterized.Parameter public boolean gzip;\n \n-  @Parameterized.Parameters\n-  public static Collection<Boolean> params() {\n+    @Parameterized.Parameters\n+    public static Collection<Boolean> params() {\n     return Arrays.asList(true, false);\n-  }\n+    }\n+\n+    File file;\n \n-  File file;\n-  BinaryBlob blob;\n+    BinaryBlob blob;\n \n-  public BinaryBlobTest() throws URISyntaxException {\n-    this.wildcard =\n-        AttributeDescriptor.newBuilder(repo)\n-            .setEntity(\"dummy\")\n-            .setSchemeUri(new URI(\"bytes:///\"))\n-            .setName(\"wildcard.*\")\n-            .build();\n-    this.attr =\n-        AttributeDescriptor.newBuilder(repo)\n-            .setEntity(\"dummy\")\n-            .setSchemeUri(new URI(\"bytes:///\"))\n-            .setName(\"attr\")\n-            .build();\n-    this.entity =\n-        EntityDescriptor.newBuilder()\n-            .setName(\"dummy\")\n-            .addAttribute((AttributeDescriptorBase<?>) attr)\n-            .addAttribute((AttributeDescriptorBase<?>) wildcard)\n-            .build();\n-  }\n+    public BinaryBlobTest() throws URISyntaxException {\n+    this.wildcard = AttributeDescriptor.newBuilder(repo).setEntity(\"dummy\")\n+                                                        .setSchemeUri(new URI(\"bytes:///\"))\n+                                                        .setName(\"wildcard.*\")\n+                                                        .build();\n+    this.attr = AttributeDescriptor.newBuilder(repo).setEntity(\"dummy\")\n+                                                    .setSchemeUri(new URI(\"bytes:///\"))\n+                                                    .setName(\"attr\")\n+                                                    .build();\n+    this.entity = EntityDescriptor.newBuilder().setName(\"dummy\")\n+                                               .addAttribute((AttributeDescriptorBase<?>) attr)\n+                                               .addAttribute((AttributeDescriptorBase<?>) wildcard)\n+                                               .build();\n+    }\n \n-  @Before\n-  public void setUp() throws IOException {\n+    @Before\n+    public void setUp() throws IOException {\n     file = folder.newFile();\n     blob = new BinaryBlob(file);\n-  }\n-\n-  @Test\n-  public void testWriteAndRead() throws IOException {\n-    StreamElement el =\n-        StreamElement.upsert(\n-            entity,\n-            attr,\n-            UUID.randomUUID().toString(),\n-            \"key\",\n-            \"attr\",\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2});\n+    }\n \n+    @Test\n+    public void testWriteAndRead() throws IOException {\n+    StreamElement el = StreamElement.upsert(entity, attr, UUID.randomUUID().toString(), \"key\", \"attr\", System.currentTimeMillis(), new byte[]{1, 2});\n     try (BinaryBlob.Writer writer = blob.writer(gzip)) {\n-      writer.write(el);\n+        writer.write(el);\n     }\n-\n     try (BinaryBlob.Reader reader = blob.reader(entity)) {\n-      int matched = 0;\n-      for (StreamElement e : reader) {\n+        int matched = 0;\n+        for (StreamElement e : reader) {\n         assertEquals(e.toString(), el.toString());\n         matched++;\n-      }\n-      assertEquals(1, matched);\n+        }\n+        assertEquals(1, matched);\n+    }\n     }\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 63
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 0, indentation should be the same level as line 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/164/BinaryBlobTest.java\nindex 2b71df4667..2e5c67f214 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/164/BinaryBlobTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/164/BinaryBlobTest.java\n@@ -37,7 +37,7 @@ import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n \n-/**\n+  /**\n  * Test suite for {@link cz.o2.proxima.direct.gcloud.storage.BinaryBlob} for reading and writing.\n  */\n @RunWith(Parameterized.class)\n",
            "diff_size": 1
        }
    ]
}