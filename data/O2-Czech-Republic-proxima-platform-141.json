{
    "error_id": "141",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private int numFailures;\n\n  public AbstractRetryableLogObserver(int maxRetries, String name, CommitLogReader commitLog) {\n\n    this.maxRetries = maxRetries;\n    this.name = name;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/141/AbstractRetryableLogObserver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/141/AbstractRetryableLogObserver.java\nindex 88c5274a34..7497c08eb5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/141/AbstractRetryableLogObserver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/141/AbstractRetryableLogObserver.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.commitlog;\n \n import cz.o2.proxima.annotations.Stable;\n@@ -28,15 +29,18 @@ public abstract class AbstractRetryableLogObserver implements LogObserver {\n   private static final long serialVersionUID = 1L;\n \n   /** Maximal number of retries. */\n-  @Getter private final int maxRetries;\n+  @Getter\n+  private final int maxRetries;\n   /** Name of the consumer. */\n-  @Getter private final String name;\n+  @Getter\n+  private final String name;\n   /** The commit log this observer observes from. */\n   private final CommitLogReader commitLog;\n   /** Current number of failures in a row. */\n   private int numFailures;\n \n-  public AbstractRetryableLogObserver(int maxRetries, String name, CommitLogReader commitLog) {\n+  public AbstractRetryableLogObserver(int maxRetries, String name,\n+                                      CommitLogReader commitLog) {\n \n     this.maxRetries = maxRetries;\n     this.name = name;\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/141/AbstractRetryableLogObserver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/141/AbstractRetryableLogObserver.java\nindex 88c5274a34..a1074ec2fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/141/AbstractRetryableLogObserver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/141/AbstractRetryableLogObserver.java\n@@ -29,7 +29,8 @@ public abstract class AbstractRetryableLogObserver implements LogObserver {\n \n   /** Maximal number of retries. */\n   @Getter private final int maxRetries;\n-  /** Name of the consumer. */\n+\n+/** Name of the consumer. */\n   @Getter private final String name;\n   /** The commit log this observer observes from. */\n   private final CommitLogReader commitLog;\n@@ -53,7 +54,7 @@ public abstract class AbstractRetryableLogObserver implements LogObserver {\n         numFailures,\n         maxRetries,\n         error);\n-    if (numFailures < maxRetries) {\n+if (numFailures < maxRetries) {\n       return true;\n     } else {\n       failure(error);\n@@ -92,4 +93,4 @@ public abstract class AbstractRetryableLogObserver implements LogObserver {\n   CommitLogReader getCommitLog() {\n     return commitLog;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 37.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 80.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 88.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Annotation 'SuppressWarnings' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/141/AbstractRetryableLogObserver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/141/AbstractRetryableLogObserver.java\nindex 88c5274a34..e9bb59f2b9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/141/AbstractRetryableLogObserver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/141/AbstractRetryableLogObserver.java\n@@ -21,57 +21,54 @@ import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n /** A parent class for retryable online and bulk log observers. */\n+\n+\n @Stable\n @Slf4j\n public abstract class AbstractRetryableLogObserver implements LogObserver {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n   /** Maximal number of retries. */\n-  @Getter private final int maxRetries;\n+\n+    @Getter private final int maxRetries;\n   /** Name of the consumer. */\n-  @Getter private final String name;\n+\n+    @Getter private final String name;\n   /** The commit log this observer observes from. */\n-  private final CommitLogReader commitLog;\n+    private final CommitLogReader commitLog;\n   /** Current number of failures in a row. */\n-  private int numFailures;\n-\n-  public AbstractRetryableLogObserver(int maxRetries, String name, CommitLogReader commitLog) {\n+    private int numFailures;\n \n+    public AbstractRetryableLogObserver(int maxRetries, String name, CommitLogReader commitLog) {\n     this.maxRetries = maxRetries;\n     this.name = name;\n     this.commitLog = commitLog;\n-  }\n+    }\n \n-  @Override\n-  public boolean onError(Throwable error) {\n+    @Override\n+    public boolean onError(Throwable error) {\n     numFailures++;\n-    log.error(\n-        \"Error in observing commit log {} by {}, retries so far {}, maxRetries {}\",\n-        commitLog.getUri(),\n-        name,\n-        numFailures,\n-        maxRetries,\n-        error);\n+    log.error(\"Error in observing commit log {} by {}, retries so far {}, maxRetries {}\", commitLog.getUri(), name, numFailures, maxRetries, error);\n     if (numFailures < maxRetries) {\n-      return true;\n+        return true;\n     } else {\n       failure(error);\n       return false;\n     }\n-  }\n+    }\n \n-  protected void success() {\n+    protected void success() {\n     numFailures = 0;\n-  }\n+    }\n \n-  public ObserveHandle start() {\n+    public ObserveHandle start() {\n     return start(Position.NEWEST);\n-  }\n+    }\n \n-  public ObserveHandle start(Position position) {\n+    public ObserveHandle start(Position position) {\n     return startInternal(position);\n-  }\n+    }\n \n   /**\n    * Called when processing is to start from given position.\n@@ -79,17 +76,18 @@ public abstract class AbstractRetryableLogObserver implements LogObserver {\n    * @param position position in the log\n    * @return handle of the observe process\n    */\n-  protected abstract ObserveHandle startInternal(Position position);\n+\n+    protected abstract ObserveHandle startInternal(Position position);\n \n   /**\n    * Called when unrecoverable error detected on the commit log.\n    *\n    * @param lastError the last error thrown during processing\n    */\n-  protected abstract void failure(Throwable lastError);\n \n-  @SuppressWarnings(\"unchecked\")\n-  CommitLogReader getCommitLog() {\n+    protected abstract void failure(Throwable lastError);\n+\n+    @SuppressWarnings(\"unchecked\") CommitLogReader getCommitLog() {\n     return commitLog;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}