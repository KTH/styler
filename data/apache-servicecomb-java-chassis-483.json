{
    "error_id": "483",
    "information": {
        "errors": [
            {
                "line": "149",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 132).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    } catch (URISyntaxException e) {\n      throw new ServiceCombException(\n          \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n          e);\n    }\n    return addressWithoutSchema;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/483/AbstractTransport.java\nindex ae9dd664bd..8d24c58301 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/483/AbstractTransport.java\n@@ -58,7 +58,7 @@ public abstract class AbstractTransport implements Transport {\n     if (prop != null) {\n       return prop;\n     }\n-    \n+\n     prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/483/AbstractTransport.java\nindex ae9dd664bd..9105185e09 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/483/AbstractTransport.java\n@@ -54,11 +54,12 @@ public abstract class AbstractTransport implements Transport {\n   private static final long DEFAULT_TIMEOUT_MILLIS = 30000;\n \n   private static DynamicLongProperty prop = null;\n+\n   public static DynamicLongProperty getRequestTimeoutProperty() {\n     if (prop != null) {\n       return prop;\n     }\n-    \n+\n     prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n@@ -90,7 +91,7 @@ public abstract class AbstractTransport implements Transport {\n    * addressWithoutSchema \u914d\u7f6e\u7684URI\uff0c\u6ca1\u6709schema\u90e8\u5206\n    */\n   protected void setListenAddressWithoutSchema(String addressWithoutSchema,\n-      Map<String, String> pairs) {\n+                                               Map<String, String> pairs) {\n     addressWithoutSchema = genAddressWithoutSchema(addressWithoutSchema, pairs);\n \n     this.endpoint = new Endpoint(this, NetUtils.getRealListenAddress(getName(), addressWithoutSchema));\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/483/AbstractTransport.java\nindex ae9dd664bd..05e0cdb0ff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/483/AbstractTransport.java\n@@ -58,8 +58,8 @@ public abstract class AbstractTransport implements Transport {\n     if (prop != null) {\n       return prop;\n     }\n-    \n-    prop = DynamicPropertyFactory.getInstance()\n+\n+prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n   }\n@@ -159,4 +159,4 @@ public abstract class AbstractTransport implements Transport {\n     }\n     return new URIEndpointObject(address);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/483/AbstractTransport.java\nindex ae9dd664bd..8d24c58301 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/483/AbstractTransport.java\n@@ -58,7 +58,7 @@ public abstract class AbstractTransport implements Transport {\n     if (prop != null) {\n       return prop;\n     }\n-    \n+\n     prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/483/AbstractTransport.java\nindex ae9dd664bd..8b79e4333a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/483/AbstractTransport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/483/AbstractTransport.java\n@@ -58,7 +58,7 @@ public abstract class AbstractTransport implements Transport {\n     if (prop != null) {\n       return prop;\n     }\n-    \n+\n     prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n@@ -146,7 +146,7 @@ public abstract class AbstractTransport implements Transport {\n       new URI(Const.RESTFUL + \"://\" + addressWithoutSchema);\n     } catch (URISyntaxException e) {\n       throw new ServiceCombException(\n-          \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n+      \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n           e);\n     }\n     return addressWithoutSchema;\n",
            "diff_size": 2
        }
    ]
}