{
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.assembler.dsl;\n\nimport java.lang.annotation.Annotation;\nimport org.javatuples.Decade;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'java' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "10",
                    "column": "6",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "11",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'class def ident' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "290",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "291",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "293",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "301",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "312",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "313",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "325",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "326",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "328",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "339",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "340",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "342",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "354",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "355",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "357",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "359",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "360",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "361",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "363",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "365",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "366",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "367",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "368",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/8/MergeSingleImpl.java\nindex e70faab237..c2ba061744 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/8/MergeSingleImpl.java\n@@ -5,364 +5,365 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n-\n-import java.lang.annotation.Annotation;\n-import org.javatuples.Decade;\n-import org.javatuples.Ennead;\n-import org.javatuples.Octet;\n-import org.javatuples.Pair;\n-import org.javatuples.Quartet;\n-import org.javatuples.Quintet;\n-import org.javatuples.Septet;\n-import org.javatuples.Sextet;\n-import org.javatuples.Triplet;\n-import org.javatuples.Unit;\n-import org.seedstack.business.assembler.dsl.MergeFromRepository;\n-import org.seedstack.business.assembler.dsl.MergeSingle;\n-import org.seedstack.business.assembler.dsl.MergeSingleWithQualifier;\n-import org.seedstack.business.domain.AggregateRoot;\n-import org.seedstack.business.util.Tuples;\n-\n-class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n-\n-    private final Context context;\n-    private final D dto;\n-    private final Class<D> dtoClass;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    MergeSingleImpl(Context context, D dto) {\n-        this.context = context;\n-        this.dto = dto;\n-        this.dtoClass = (Class<D>) dto.getClass();\n-    }\n-\n-    @Override\n-    public <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass) {\n-        return new MergeSingleAggregateFromRepositoryImpl<>(context, dto, aggregateRootClass);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n-            Class<A9> tenth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth, tenth);\n-    }\n-\n-    @Override\n-    public <A extends AggregateRoot<I>, I> void into(Unit<A> unit) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(unit), dtoClass).mergeDtoIntoAggregate(dto, unit);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(pair), dtoClass).mergeDtoIntoAggregate(dto, pair);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, triplet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, quartet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, quintet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, sextet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, septet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n-                .mergeDtoIntoAggregate(dto, ennead);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n-                .mergeDtoIntoAggregate(dto, decade);\n-    }\n-\n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public <A extends AggregateRoot<I>, I> void into(A aggregateRoot) {\n-        context.assemblerOf((Class<A>) aggregateRoot.getClass(), dtoClass)\n-                .mergeDtoIntoAggregate(dto, aggregateRoot);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n-        into(Pair.with(first, second));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n-        into(Triplet.with(first, second, third));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n-        into(Quartet.with(first, second, third, fourth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n-        into(Quintet.with(first, second, third, fourth, fifth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n-        into(Sextet.with(first, second, third, fourth, fifth, sixth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh) {\n-        into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth) {\n-        into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth) {\n-        into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n-        into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n-    }\n-\n-    @Override\n-    public MergeSingle with(Annotation qualifier) {\n-        context.setAssemblerQualifier(qualifier);\n-        return this;\n-    }\n-\n-    @Override\n-    public MergeSingle with(Class<? extends Annotation> qualifier) {\n-        context.setAssemblerQualifierClass(qualifier);\n-        return this;\n-    }\n-}\n+\n+package org .seedstack.business.internal.assembler.dsl;import\n+java .lang.annotation.Annotation;\n+ import org.javatuples.Decade;\n+ import org.javatuples.Ennead;\n+ import org.javatuples.Octet;\n+ import org.javatuples.Pair;\n+ import org.javatuples.Quartet;\n+ import org.javatuples.Quintet;\n+ import org.javatuples.Septet;\n+ import org.javatuples.Sextet;\n+ import org.javatuples.Triplet;\n+ import org.javatuples.Unit;\n+ import org.seedstack.business.assembler.dsl.MergeFromRepository;\n+ import org.seedstack.business.assembler.dsl.MergeSingle;\n+ import org.seedstack.business.assembler.dsl.MergeSingleWithQualifier;\n+ import org.seedstack.business.domain.AggregateRoot;\n+ import org.seedstack.business.util.Tuples;\n+\n+ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n+\n+     private final Context context;\n+     private final D dto;\n+     private final Class<D> dtoClass;\n+\n+     @SuppressWarnings(\"unchecked\")\n+     MergeSingleImpl(Context context, D dto) {\n+         this.context = context;\n+         this.dto = dto;\n+         this.dtoClass = (Class<D>) dto.getClass();\n+     }\n+\n+     @Override\n+     public <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass) {\n+         return new MergeSingleAggregateFromRepositoryImpl<>(context, dto, aggregateRootClass);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n+             Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n+             Class<A6> seventh, Class<A7> eighth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh,\n+                 eighth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n+             Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n+             Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh,\n+                 eighth, ninth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>,\n+             A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n+             Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n+             Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n+             Class<A9> tenth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh,\n+                 eighth, ninth, tenth);\n+     }\n+\n+     @Override\n+     public <A extends AggregateRoot<I>, I> void into(Unit<A> unit) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(unit), dtoClass).mergeDtoIntoAggregate(dto, unit);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(pair), dtoClass).mergeDtoIntoAggregate(dto, pair);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, triplet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, quartet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, quintet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, sextet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, septet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, ennead);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>,\n+             A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, decade);\n+     }\n+\n+     @Override\n+     @SuppressWarnings(\"unchecked\")\n+     public <A extends AggregateRoot<I>, I> void into(A aggregateRoot) {\n+         context.assemblerOf((Class<A>) aggregateRoot.getClass(), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, aggregateRoot);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n+         into(Pair.with(first, second));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n+         into(Triplet.with(first, second, third));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n+         into(Quartet.with(first, second, third, fourth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n+         into(Quintet.with(first, second, third, fourth, fifth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n+         into(Sextet.with(first, second, third, fourth, fifth, sixth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh) {\n+         into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh, A7 eighth) {\n+         into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh, A7 eighth, A8 ninth) {\n+         into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>,\n+             A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n+         into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n+     }\n+\n+     @Override\n+     public MergeSingle with(Annotation qualifier) {\n+         context.setAssemblerQualifier(qualifier);\n+         return this;\n+     }\n+\n+     @Override\n+     public MergeSingle with(Class<? extends Annotation> qualifier) {\n+         context.setAssemblerQualifierClass(qualifier);\n+         return this;\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 362
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/8/MergeSingleImpl.java\nindex e70faab237..c038d79cf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/8/MergeSingleImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -52,7 +53,8 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n     public <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n+                                                                                       Class<A1> second,\n+                                                                                       Class<A2> third) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n     }\n \n@@ -61,7 +63,9 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+                                                                                           Class<A1> second,\n+                                                                                           Class<A2> third,\n+                                                                                           Class<A3> fourth) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n     }\n \n@@ -71,7 +75,10 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>,\n             A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+                                                                                               Class<A1> second,\n+                                                                                               Class<A2> third,\n+                                                                                               Class<A3> fourth,\n+                                                                                               Class<A4> fifth) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n                 fifth);\n     }\n@@ -83,7 +90,11 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A3 extends AggregateRoot<?>,\n             A4 extends AggregateRoot<?>,\n             A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+                                                                                                  Class<A1> second,\n+                                                                                                  Class<A2> third,\n+                                                                                                  Class<A3> fourth,\n+                                                                                                  Class<A4> fifth,\n+                                                                                                  Class<A5> sixth) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n                 fifth, sixth);\n     }\n@@ -96,7 +107,12 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A4 extends AggregateRoot<?>,\n             A5 extends AggregateRoot<?>,\n             A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+                                                                                                      Class<A1> second,\n+                                                                                                      Class<A2> third,\n+                                                                                                      Class<A3> fourth,\n+                                                                                                      Class<A4> fifth,\n+                                                                                                      Class<A5> sixth,\n+                                                                                                      Class<A6> seventh) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n                 fifth, sixth, seventh);\n     }\n@@ -308,7 +324,7 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A4 extends AggregateRoot<?>,\n             A5 extends AggregateRoot<?>,\n             A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh) {\n+                                                   A6 seventh) {\n         into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n     }\n \n@@ -321,7 +337,7 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A5 extends AggregateRoot<?>,\n             A6 extends AggregateRoot<?>,\n             A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth) {\n+                                                   A6 seventh, A7 eighth) {\n         into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n     }\n \n@@ -335,7 +351,7 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A6 extends AggregateRoot<?>,\n             A7 extends AggregateRoot<?>,\n             A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth) {\n+                                                   A6 seventh, A7 eighth, A8 ninth) {\n         into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n     }\n \n@@ -350,7 +366,7 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n             A7 extends AggregateRoot<?>,\n             A8 extends AggregateRoot<?>,\n             A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n+                                                   A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n         into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n     }\n \n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 249).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 299).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 348).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 400).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 450).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 501).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 551).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 300).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 335).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 368).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 300).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 340).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 418).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/8/MergeSingleImpl.java\nindex e70faab237..816b7f32c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/8/MergeSingleImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -43,114 +44,53 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first, Class<A1> second, Class<A2> third) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n                 fifth, sixth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n                 fifth, sixth, seventh);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n-            Class<A9> tenth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth, tenth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                fifth, sixth, seventh, eighth);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                fifth, sixth, seventh, eighth, ninth);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n+    return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                fifth, sixth, seventh, eighth, ninth, tenth);\n     }\n \n     @Override\n@@ -164,92 +104,49 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n                 .mergeDtoIntoAggregate(dto, triplet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n                 .mergeDtoIntoAggregate(dto, quartet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n                 .mergeDtoIntoAggregate(dto, quintet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n                 .mergeDtoIntoAggregate(dto, sextet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n                 .mergeDtoIntoAggregate(dto, septet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n                 .mergeDtoIntoAggregate(dto, ennead);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n+    context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n                 .mergeDtoIntoAggregate(dto, decade);\n     }\n \n@@ -261,97 +158,48 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n-        into(Pair.with(first, second));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n+    into(Pair.with(first, second));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n-        into(Triplet.with(first, second, third));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n+    into(Triplet.with(first, second, third));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n-        into(Quartet.with(first, second, third, fourth));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n+    into(Quartet.with(first, second, third, fourth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n-        into(Quintet.with(first, second, third, fourth, fifth));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n+    into(Quintet.with(first, second, third, fourth, fifth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n-        into(Sextet.with(first, second, third, fourth, fifth, sixth));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n+    into(Sextet.with(first, second, third, fourth, fifth, sixth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh) {\n-        into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh) {\n+    into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth) {\n-        into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth) {\n+    into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth) {\n-        into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth) {\n+    into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n-        into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n+    into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n     }\n \n     @Override\n@@ -365,4 +213,4 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n         context.setAssemblerQualifierClass(qualifier);\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 216
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 249).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 299).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 348).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 400).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 450).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 501).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 551).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 300).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 335).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 368).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 300).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 340).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 379).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 418).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/8/MergeSingleImpl.java\nindex e70faab237..e77d15c6d0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/8/MergeSingleImpl.java\n@@ -24,6 +24,7 @@ import org.seedstack.business.assembler.dsl.MergeSingleWithQualifier;\n import org.seedstack.business.domain.AggregateRoot;\n import org.seedstack.business.util.Tuples;\n \n+\n class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n \n     private final Context context;\n@@ -43,114 +44,48 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first, Class<A1> second, Class<A2> third) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth) {\n         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n-            Class<A9> tenth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth, tenth);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth, sixth);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth, sixth, seventh);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth) {\n+        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth, sixth, seventh, eighth);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n+        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth, sixth, seventh, eighth, ninth);\n+    }\n+\n+    @Override\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) {\n+        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth);\n     }\n \n     @Override\n@@ -164,193 +99,93 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, triplet);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass).mergeDtoIntoAggregate(dto, triplet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, quartet);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass).mergeDtoIntoAggregate(dto, quartet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, quintet);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass).mergeDtoIntoAggregate(dto, quintet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, sextet);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass).mergeDtoIntoAggregate(dto, sextet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, septet);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass).mergeDtoIntoAggregate(dto, septet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n         context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n-                .mergeDtoIntoAggregate(dto, ennead);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass).mergeDtoIntoAggregate(dto, ennead);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n-                .mergeDtoIntoAggregate(dto, decade);\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n+        context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass).mergeDtoIntoAggregate(dto, decade);\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public <A extends AggregateRoot<I>, I> void into(A aggregateRoot) {\n-        context.assemblerOf((Class<A>) aggregateRoot.getClass(), dtoClass)\n-                .mergeDtoIntoAggregate(dto, aggregateRoot);\n+        context.assemblerOf((Class<A>) aggregateRoot.getClass(), dtoClass).mergeDtoIntoAggregate(dto, aggregateRoot);\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n         into(Pair.with(first, second));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n         into(Triplet.with(first, second, third));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n         into(Quartet.with(first, second, third, fourth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n         into(Quintet.with(first, second, third, fourth, fifth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n         into(Sextet.with(first, second, third, fourth, fifth, sixth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh) {\n         into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth) {\n         into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth) {\n         into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n     }\n \n     @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n+    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n         into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n     }\n \n@@ -365,4 +200,4 @@ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n         context.setAssemblerQualifierClass(qualifier);\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 223
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'java' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "10",
                    "column": "6",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "11",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'class def ident' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "290",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "291",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "293",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "301",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "312",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "313",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "325",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "326",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "328",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "339",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "340",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "342",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "354",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "355",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "357",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "359",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "360",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "361",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "363",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "365",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "366",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "367",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "368",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/8/MergeSingleImpl.java\nindex e70faab237..c2ba061744 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/8/MergeSingleImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/8/MergeSingleImpl.java\n@@ -5,364 +5,365 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n-\n-import java.lang.annotation.Annotation;\n-import org.javatuples.Decade;\n-import org.javatuples.Ennead;\n-import org.javatuples.Octet;\n-import org.javatuples.Pair;\n-import org.javatuples.Quartet;\n-import org.javatuples.Quintet;\n-import org.javatuples.Septet;\n-import org.javatuples.Sextet;\n-import org.javatuples.Triplet;\n-import org.javatuples.Unit;\n-import org.seedstack.business.assembler.dsl.MergeFromRepository;\n-import org.seedstack.business.assembler.dsl.MergeSingle;\n-import org.seedstack.business.assembler.dsl.MergeSingleWithQualifier;\n-import org.seedstack.business.domain.AggregateRoot;\n-import org.seedstack.business.util.Tuples;\n-\n-class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n-\n-    private final Context context;\n-    private final D dto;\n-    private final Class<D> dtoClass;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    MergeSingleImpl(Context context, D dto) {\n-        this.context = context;\n-        this.dto = dto;\n-        this.dtoClass = (Class<D>) dto.getClass();\n-    }\n-\n-    @Override\n-    public <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass) {\n-        return new MergeSingleAggregateFromRepositoryImpl<>(context, dto, aggregateRootClass);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n-            Class<A9> tenth) {\n-        return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n-                fifth, sixth, seventh,\n-                eighth, ninth, tenth);\n-    }\n-\n-    @Override\n-    public <A extends AggregateRoot<I>, I> void into(Unit<A> unit) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(unit), dtoClass).mergeDtoIntoAggregate(dto, unit);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(pair), dtoClass).mergeDtoIntoAggregate(dto, pair);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, triplet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, quartet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, quintet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, sextet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n-                .mergeDtoIntoAggregate(dto, septet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n-                .mergeDtoIntoAggregate(dto, ennead);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n-        context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n-                .mergeDtoIntoAggregate(dto, decade);\n-    }\n-\n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public <A extends AggregateRoot<I>, I> void into(A aggregateRoot) {\n-        context.assemblerOf((Class<A>) aggregateRoot.getClass(), dtoClass)\n-                .mergeDtoIntoAggregate(dto, aggregateRoot);\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n-        into(Pair.with(first, second));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n-        into(Triplet.with(first, second, third));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n-        into(Quartet.with(first, second, third, fourth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n-        into(Quintet.with(first, second, third, fourth, fifth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n-        into(Sextet.with(first, second, third, fourth, fifth, sixth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh) {\n-        into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth) {\n-        into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth) {\n-        into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n-    }\n-\n-    @Override\n-    public <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n-        into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n-    }\n-\n-    @Override\n-    public MergeSingle with(Annotation qualifier) {\n-        context.setAssemblerQualifier(qualifier);\n-        return this;\n-    }\n-\n-    @Override\n-    public MergeSingle with(Class<? extends Annotation> qualifier) {\n-        context.setAssemblerQualifierClass(qualifier);\n-        return this;\n-    }\n-}\n+\n+package org .seedstack.business.internal.assembler.dsl;import\n+java .lang.annotation.Annotation;\n+ import org.javatuples.Decade;\n+ import org.javatuples.Ennead;\n+ import org.javatuples.Octet;\n+ import org.javatuples.Pair;\n+ import org.javatuples.Quartet;\n+ import org.javatuples.Quintet;\n+ import org.javatuples.Septet;\n+ import org.javatuples.Sextet;\n+ import org.javatuples.Triplet;\n+ import org.javatuples.Unit;\n+ import org.seedstack.business.assembler.dsl.MergeFromRepository;\n+ import org.seedstack.business.assembler.dsl.MergeSingle;\n+ import org.seedstack.business.assembler.dsl.MergeSingleWithQualifier;\n+ import org.seedstack.business.domain.AggregateRoot;\n+ import org.seedstack.business.util.Tuples;\n+\n+ class MergeSingleImpl<D> implements MergeSingleWithQualifier {\n+\n+     private final Context context;\n+     private final D dto;\n+     private final Class<D> dtoClass;\n+\n+     @SuppressWarnings(\"unchecked\")\n+     MergeSingleImpl(Context context, D dto) {\n+         this.context = context;\n+         this.dto = dto;\n+         this.dtoClass = (Class<D>) dto.getClass();\n+     }\n+\n+     @Override\n+     public <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass) {\n+         return new MergeSingleAggregateFromRepositoryImpl<>(context, dto, aggregateRootClass);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n+             Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n+             Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n+             Class<A6> seventh, Class<A7> eighth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh,\n+                 eighth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n+             Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n+             Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh,\n+                 eighth, ninth);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>,\n+             A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n+             Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n+             Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n+             Class<A9> tenth) {\n+         return new MergeSingleTupleFromRepositoryImpl<>(context, dto, first, second, third, fourth,\n+                 fifth, sixth, seventh,\n+                 eighth, ninth, tenth);\n+     }\n+\n+     @Override\n+     public <A extends AggregateRoot<I>, I> void into(Unit<A> unit) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(unit), dtoClass).mergeDtoIntoAggregate(dto, unit);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(pair), dtoClass).mergeDtoIntoAggregate(dto, pair);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(triplet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, triplet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(quartet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, quartet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(quintet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, quintet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(sextet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, sextet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(septet), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, septet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(octet), dtoClass).mergeDtoIntoAggregate(dto, octet);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(ennead), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, ennead);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>,\n+             A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) {\n+         context.tupleAssemblerOf(Tuples.itemClasses(decade), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, decade);\n+     }\n+\n+     @Override\n+     @SuppressWarnings(\"unchecked\")\n+     public <A extends AggregateRoot<I>, I> void into(A aggregateRoot) {\n+         context.assemblerOf((Class<A>) aggregateRoot.getClass(), dtoClass)\n+                 .mergeDtoIntoAggregate(dto, aggregateRoot);\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>> void into(A0 first, A1 second) {\n+         into(Pair.with(first, second));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) {\n+         into(Triplet.with(first, second, third));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) {\n+         into(Quartet.with(first, second, third, fourth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) {\n+         into(Quintet.with(first, second, third, fourth, fifth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) {\n+         into(Sextet.with(first, second, third, fourth, fifth, sixth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh) {\n+         into(Septet.with(first, second, third, fourth, fifth, sixth, seventh));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh, A7 eighth) {\n+         into(Octet.with(first, second, third, fourth, fifth, sixth, seventh, eighth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh, A7 eighth, A8 ninth) {\n+         into(Ennead.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth));\n+     }\n+\n+     @Override\n+     public <A0 extends AggregateRoot<?>,\n+             A1 extends AggregateRoot<?>,\n+             A2 extends AggregateRoot<?>,\n+             A3 extends AggregateRoot<?>,\n+             A4 extends AggregateRoot<?>,\n+             A5 extends AggregateRoot<?>,\n+             A6 extends AggregateRoot<?>,\n+             A7 extends AggregateRoot<?>,\n+             A8 extends AggregateRoot<?>,\n+             A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n+             A6 seventh, A7 eighth, A8 ninth, A9 tenth) {\n+         into(Decade.with(first, second, third, fourth, fifth, sixth, seventh, eighth, ninth, tenth));\n+     }\n+\n+     @Override\n+     public MergeSingle with(Annotation qualifier) {\n+         context.setAssemblerQualifier(qualifier);\n+         return this;\n+     }\n+\n+     @Override\n+     public MergeSingle with(Class<? extends Annotation> qualifier) {\n+         context.setAssemblerQualifierClass(qualifier);\n+         return this;\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 362
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}