{
    "error_id": "563",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.event.impl;\n\nimport java.util.Optional;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/563/ToMessageSubscriptionCancelledConverter.java\nindex d59748f9e8..c36bec6005 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/563/ToMessageSubscriptionCancelledConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n@@ -32,13 +33,13 @@ public class ToMessageSubscriptionCancelledConverter implements EventConverter<M\n \n     @Override\n     public Optional<MessageSubscriptionCancelledEvent> from(ActivitiEntityEvent internalEvent) {\n-        \n+\n         return Optional.of(internalEvent)\n                        .map(ActivitiEntityEvent::getEntity)\n                        .filter(MessageEventSubscriptionEntity.class::isInstance)\n                        .map(MessageEventSubscriptionEntity.class::cast)\n                        .map(converter::convertToMessageSubscription)\n                        .map(MessageSubscriptionCancelledEventImpl::new);\n-                       \n+\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/563/ToMessageSubscriptionCancelledConverter.java\nindex d59748f9e8..f17b23adf1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/563/ToMessageSubscriptionCancelledConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n@@ -32,13 +33,13 @@ public class ToMessageSubscriptionCancelledConverter implements EventConverter<M\n \n     @Override\n     public Optional<MessageSubscriptionCancelledEvent> from(ActivitiEntityEvent internalEvent) {\n-        \n+\n         return Optional.of(internalEvent)\n-                       .map(ActivitiEntityEvent::getEntity)\n-                       .filter(MessageEventSubscriptionEntity.class::isInstance)\n-                       .map(MessageEventSubscriptionEntity.class::cast)\n-                       .map(converter::convertToMessageSubscription)\n-                       .map(MessageSubscriptionCancelledEventImpl::new);\n-                       \n+                .map(ActivitiEntityEvent::getEntity)\n+                .filter(MessageEventSubscriptionEntity.class::isInstance)\n+                .map(MessageEventSubscriptionEntity.class::cast)\n+                .map(converter::convertToMessageSubscription)\n+                .map(MessageSubscriptionCancelledEventImpl::new);\n+\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 276).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/563/ToMessageSubscriptionCancelledConverter.java\nindex d59748f9e8..85ca8162c3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/563/ToMessageSubscriptionCancelledConverter.java\n@@ -16,29 +16,23 @@\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n-\n import org.activiti.api.process.model.events.MessageSubscriptionCancelledEvent;\n import org.activiti.api.runtime.event.impl.MessageSubscriptionCancelledEventImpl;\n import org.activiti.engine.delegate.event.ActivitiEntityEvent;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n+\n public class ToMessageSubscriptionCancelledConverter implements EventConverter<MessageSubscriptionCancelledEvent, ActivitiEntityEvent> {\n \n     private MessageSubscriptionConverter converter;\n \n     public ToMessageSubscriptionCancelledConverter(MessageSubscriptionConverter converter) {\n-        this.converter = converter;\n+    this.converter = converter;\n     }\n \n     @Override\n     public Optional<MessageSubscriptionCancelledEvent> from(ActivitiEntityEvent internalEvent) {\n-        \n-        return Optional.of(internalEvent)\n-                       .map(ActivitiEntityEvent::getEntity)\n-                       .filter(MessageEventSubscriptionEntity.class::isInstance)\n-                       .map(MessageEventSubscriptionEntity.class::cast)\n-                       .map(converter::convertToMessageSubscription)\n-                       .map(MessageSubscriptionCancelledEventImpl::new);\n-                       \n+        return Optional.of(internalEvent).map(ActivitiEntityEvent::getEntity).filter(MessageEventSubscriptionEntity.class::isInstance).map(MessageEventSubscriptionEntity.class::cast).map(converter::convertToMessageSubscription).map(MessageSubscriptionCancelledEventImpl::new);\n     }\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/563/ToMessageSubscriptionCancelledConverter.java\nindex d59748f9e8..c36bec6005 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/563/ToMessageSubscriptionCancelledConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n@@ -32,13 +33,13 @@ public class ToMessageSubscriptionCancelledConverter implements EventConverter<M\n \n     @Override\n     public Optional<MessageSubscriptionCancelledEvent> from(ActivitiEntityEvent internalEvent) {\n-        \n+\n         return Optional.of(internalEvent)\n                        .map(ActivitiEntityEvent::getEntity)\n                        .filter(MessageEventSubscriptionEntity.class::isInstance)\n                        .map(MessageEventSubscriptionEntity.class::cast)\n                        .map(converter::convertToMessageSubscription)\n                        .map(MessageSubscriptionCancelledEventImpl::new);\n-                       \n+\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/563/ToMessageSubscriptionCancelledConverter.java\nindex d59748f9e8..c36bec6005 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/563/ToMessageSubscriptionCancelledConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/563/ToMessageSubscriptionCancelledConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n@@ -32,13 +33,13 @@ public class ToMessageSubscriptionCancelledConverter implements EventConverter<M\n \n     @Override\n     public Optional<MessageSubscriptionCancelledEvent> from(ActivitiEntityEvent internalEvent) {\n-        \n+\n         return Optional.of(internalEvent)\n                        .map(ActivitiEntityEvent::getEntity)\n                        .filter(MessageEventSubscriptionEntity.class::isInstance)\n                        .map(MessageEventSubscriptionEntity.class::cast)\n                        .map(converter::convertToMessageSubscription)\n                        .map(MessageSubscriptionCancelledEventImpl::new);\n-                       \n+\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        }
    ]
}