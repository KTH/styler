{
    "error_id": "213",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.core.common.spring.security;\n\nimport org.activiti.api.runtime.shared.security.PrincipalGroupsProvider;\nimport org.springframework.lang.NonNull;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/213/AuthenticationPrincipalGroupsProvider.java\nindex 740f660731..8fd6faf29d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/213/AuthenticationPrincipalGroupsProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import org.activiti.api.runtime.shared.security.PrincipalGroupsProvider;\n@@ -23,7 +24,7 @@ import java.util.List;\n import java.util.Optional;\n \n public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsProvider {\n-    \n+\n     private final GrantedAuthoritiesResolver grantedAuthoritiesResolver;\n     private final GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper;\n \n@@ -32,7 +33,7 @@ public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsPro\n         this.grantedAuthoritiesResolver = grantedAuthoritiesResolver;\n         this.grantedAuthoritiesGroupsMapper = grantedAuthoritiesGroupsMapper;\n     }\n-    \n+\n     @Override\n     public List<String> getGroups(@NonNull Principal principal) {\n         return Optional.of(principal)\n@@ -43,6 +44,6 @@ public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsPro\n \n     protected SecurityException securityException() {\n         return new SecurityException(\"Invalid principal groups\");\n-    }    \n+    }\n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/213/AuthenticationPrincipalGroupsProvider.java\nindex 740f660731..2f2fe997fa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/213/AuthenticationPrincipalGroupsProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import org.activiti.api.runtime.shared.security.PrincipalGroupsProvider;\n@@ -23,26 +24,26 @@ import java.util.List;\n import java.util.Optional;\n \n public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsProvider {\n-    \n+\n     private final GrantedAuthoritiesResolver grantedAuthoritiesResolver;\n     private final GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper;\n \n     public AuthenticationPrincipalGroupsProvider(@NonNull GrantedAuthoritiesResolver grantedAuthoritiesResolver,\n-                                                  @NonNull GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper) {\n+                                                 @NonNull GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper) {\n         this.grantedAuthoritiesResolver = grantedAuthoritiesResolver;\n         this.grantedAuthoritiesGroupsMapper = grantedAuthoritiesGroupsMapper;\n     }\n-    \n+\n     @Override\n     public List<String> getGroups(@NonNull Principal principal) {\n         return Optional.of(principal)\n-                       .map(grantedAuthoritiesResolver::getAuthorities)\n-                       .map(grantedAuthoritiesGroupsMapper::getGroups)\n-                       .orElseThrow(this::securityException);\n+                .map(grantedAuthoritiesResolver::getAuthorities)\n+                .map(grantedAuthoritiesGroupsMapper::getGroups)\n+                .orElseThrow(this::securityException);\n     }\n \n     protected SecurityException securityException() {\n         return new SecurityException(\"Invalid principal groups\");\n-    }    \n+    }\n \n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/213/AuthenticationPrincipalGroupsProvider.java\nindex 740f660731..095aed83f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/213/AuthenticationPrincipalGroupsProvider.java\n@@ -17,32 +17,29 @@ package org.activiti.core.common.spring.security;\n \n import org.activiti.api.runtime.shared.security.PrincipalGroupsProvider;\n import org.springframework.lang.NonNull;\n-\n import java.security.Principal;\n import java.util.List;\n import java.util.Optional;\n \n+\n public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsProvider {\n-    \n+\n     private final GrantedAuthoritiesResolver grantedAuthoritiesResolver;\n+\n     private final GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper;\n \n     public AuthenticationPrincipalGroupsProvider(@NonNull GrantedAuthoritiesResolver grantedAuthoritiesResolver,\n-                                                  @NonNull GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper) {\n-        this.grantedAuthoritiesResolver = grantedAuthoritiesResolver;\n-        this.grantedAuthoritiesGroupsMapper = grantedAuthoritiesGroupsMapper;\n+                                                 @NonNull GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper) {\n+    this.grantedAuthoritiesResolver = grantedAuthoritiesResolver;\n+    this.grantedAuthoritiesGroupsMapper = grantedAuthoritiesGroupsMapper;\n     }\n-    \n+\n     @Override\n     public List<String> getGroups(@NonNull Principal principal) {\n-        return Optional.of(principal)\n-                       .map(grantedAuthoritiesResolver::getAuthorities)\n-                       .map(grantedAuthoritiesGroupsMapper::getGroups)\n-                       .orElseThrow(this::securityException);\n+        return Optional.of(principal).map(grantedAuthoritiesResolver::getAuthorities).map(grantedAuthoritiesGroupsMapper::getGroups).orElseThrow(this::securityException);\n     }\n \n     protected SecurityException securityException() {\n-        return new SecurityException(\"Invalid principal groups\");\n-    }    \n-\n-}\n+    return new SecurityException(\"Invalid principal groups\");\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/213/AuthenticationPrincipalGroupsProvider.java\nindex 740f660731..8fd6faf29d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/213/AuthenticationPrincipalGroupsProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import org.activiti.api.runtime.shared.security.PrincipalGroupsProvider;\n@@ -23,7 +24,7 @@ import java.util.List;\n import java.util.Optional;\n \n public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsProvider {\n-    \n+\n     private final GrantedAuthoritiesResolver grantedAuthoritiesResolver;\n     private final GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper;\n \n@@ -32,7 +33,7 @@ public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsPro\n         this.grantedAuthoritiesResolver = grantedAuthoritiesResolver;\n         this.grantedAuthoritiesGroupsMapper = grantedAuthoritiesGroupsMapper;\n     }\n-    \n+\n     @Override\n     public List<String> getGroups(@NonNull Principal principal) {\n         return Optional.of(principal)\n@@ -43,6 +44,6 @@ public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsPro\n \n     protected SecurityException securityException() {\n         return new SecurityException(\"Invalid principal groups\");\n-    }    \n+    }\n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/213/AuthenticationPrincipalGroupsProvider.java\nindex 740f660731..8fd6faf29d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/213/AuthenticationPrincipalGroupsProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/213/AuthenticationPrincipalGroupsProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import org.activiti.api.runtime.shared.security.PrincipalGroupsProvider;\n@@ -23,7 +24,7 @@ import java.util.List;\n import java.util.Optional;\n \n public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsProvider {\n-    \n+\n     private final GrantedAuthoritiesResolver grantedAuthoritiesResolver;\n     private final GrantedAuthoritiesGroupsMapper grantedAuthoritiesGroupsMapper;\n \n@@ -32,7 +33,7 @@ public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsPro\n         this.grantedAuthoritiesResolver = grantedAuthoritiesResolver;\n         this.grantedAuthoritiesGroupsMapper = grantedAuthoritiesGroupsMapper;\n     }\n-    \n+\n     @Override\n     public List<String> getGroups(@NonNull Principal principal) {\n         return Optional.of(principal)\n@@ -43,6 +44,6 @@ public class AuthenticationPrincipalGroupsProvider implements PrincipalGroupsPro\n \n     protected SecurityException securityException() {\n         return new SecurityException(\"Invalid principal groups\");\n-    }    \n+    }\n \n }\n",
            "diff_size": 4
        }
    ]
}