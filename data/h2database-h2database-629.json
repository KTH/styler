{
    "error_id": "629",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "27",
                "severity": "warning",
                "message": "'{' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    public static final LongDataType INSTANCE = new LongDataType();\n\n    public LongDataType() {}\n\n    @Override\n    public int getMemory(Long obj) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/629/LongDataType.java\nindex bbf198ef21..25ba0e8880 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/629/LongDataType.java\n@@ -17,7 +17,7 @@ public final class LongDataType extends BasicDataType<Long>\n {\n     public static final LongDataType INSTANCE = new LongDataType();\n \n-    public LongDataType() {}\n+    public LongDataType() { }\n \n     @Override\n     public int getMemory(Long obj) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/629/LongDataType.java\nindex bbf198ef21..492af18432 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/629/LongDataType.java\n@@ -13,34 +13,34 @@ import java.nio.ByteBuffer;\n  *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n-public final class LongDataType extends BasicDataType<Long>\n-{\n-    public static final LongDataType INSTANCE = new LongDataType();\n-\n-    public LongDataType() {}\n-\n-    @Override\n-    public int getMemory(Long obj) {\n-        return 8;\n-    }\n-\n-    @Override\n-    public void write(WriteBuffer buff, Long data) {\n-        buff.putVarLong(data);\n-    }\n-\n-    @Override\n-    public Long read(ByteBuffer buff) {\n-        return DataUtils.readVarLong(buff);\n-    }\n-\n-    @Override\n-    public Long[] createStorage(int size) {\n-        return new Long[size];\n-    }\n-\n-    @Override\n-    public int compare(Long one, Long two) {\n-        return Long.compare(one, two);\n-    }\n+public final class LongDataType extends BasicDataType<Long> {\n+  public static final LongDataType INSTANCE = new LongDataType();\n+\n+  public LongDataType() {\n+  }\n+\n+  @Override\n+  public int getMemory(Long obj) {\n+    return 8;\n+  }\n+\n+  @Override\n+  public void write(WriteBuffer buff, Long data) {\n+    buff.putVarLong(data);\n+  }\n+\n+  @Override\n+  public Long read(ByteBuffer buff) {\n+    return DataUtils.readVarLong(buff);\n+  }\n+\n+  @Override\n+  public Long[] createStorage(int size) {\n+    return new Long[size];\n+  }\n+\n+  @Override\n+  public int compare(Long one, Long two) {\n+    return Long.compare(one, two);\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "column": "27",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/629/LongDataType.java\nindex bbf198ef21..46374a2283 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/629/LongDataType.java\n@@ -13,8 +13,7 @@ import java.nio.ByteBuffer;\n  *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n-public final class LongDataType extends BasicDataType<Long>\n-{\n+public final class LongDataType extends BasicDataType<Long> {\n     public static final LongDataType INSTANCE = new LongDataType();\n \n     public LongDataType() {}\n@@ -43,4 +42,4 @@ public final class LongDataType extends BasicDataType<Long>\n     public int compare(Long one, Long two) {\n         return Long.compare(one, two);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/629/LongDataType.java\nindex bbf198ef21..d86b605627 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/629/LongDataType.java\n@@ -2,7 +2,6 @@ package org.h2.mvstore.type;\n \n import org.h2.mvstore.DataUtils;\n import org.h2.mvstore.WriteBuffer;\n-\n import java.nio.ByteBuffer;\n \n /**\n@@ -13,11 +12,16 @@ import java.nio.ByteBuffer;\n  *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n-public final class LongDataType extends BasicDataType<Long>\n-{\n+\n+\n+public final class LongDataType extends BasicDataType<Long> {\n+\n+\n     public static final LongDataType INSTANCE = new LongDataType();\n \n-    public LongDataType() {}\n+    public LongDataType() {\n+\n+    }\n \n     @Override\n     public int getMemory(Long obj) {\n@@ -43,4 +47,5 @@ public final class LongDataType extends BasicDataType<Long>\n     public int compare(Long one, Long two) {\n         return Long.compare(one, two);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/629/LongDataType.java\nindex bbf198ef21..25ba0e8880 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/629/LongDataType.java\n@@ -17,7 +17,7 @@ public final class LongDataType extends BasicDataType<Long>\n {\n     public static final LongDataType INSTANCE = new LongDataType();\n \n-    public LongDataType() {}\n+    public LongDataType() { }\n \n     @Override\n     public int getMemory(Long obj) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/629/LongDataType.java\nindex bbf198ef21..25ba0e8880 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/629/LongDataType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/629/LongDataType.java\n@@ -17,7 +17,7 @@ public final class LongDataType extends BasicDataType<Long>\n {\n     public static final LongDataType INSTANCE = new LongDataType();\n \n-    public LongDataType() {}\n+    public LongDataType() { }\n \n     @Override\n     public int getMemory(Long obj) {\n",
            "diff_size": 1
        }
    ]
}