{
    "error_id": "184",
    "information": {
        "errors": [
            {
                "line": "99",
                "column": "34",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    XmlColor xmlColor = (XmlColor)o;\n    return\n        Objects.equals(this.alpha, xmlColor.alpha) &&\n        Objects.equals(this.web, xmlColor.web);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/184/XmlColor.java\nindex 95146a6d4d..315b24ebb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/184/XmlColor.java\n@@ -96,7 +96,7 @@ public class XmlColor {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XmlColor xmlColor = (XmlColor)o;\n+    XmlColor xmlColor = (XmlColor) o;\n     return\n         Objects.equals(this.alpha, xmlColor.alpha) &&\n         Objects.equals(this.web, xmlColor.web);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/184/XmlColor.java\nindex 95146a6d4d..3231bc8b55 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/184/XmlColor.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,59 +50,62 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Utility class for Color serialization.\")\n public class XmlColor {\n-    @SerializedName(\"Alpha\")\n-    private Integer alpha = null;\n-\n-    @SerializedName(\"Web\")\n-    private String web = null;\n-    public XmlColor alpha(Integer alpha) {\n-        this.alpha = alpha;\n-        return this;\n-    }\n+  @SerializedName(\"Alpha\")\n+  private Integer alpha = null;\n \n-    /**\n-     * Gets or sets alpha component of color structure.\n-    * @return alpha\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets alpha component of color structure.\")\n-    public Integer getAlpha() {\n-        return alpha;\n-    }\n+  @SerializedName(\"Web\")\n+  private String web = null;\n \n-    public void setAlpha(Integer alpha) {\n-        this.alpha = alpha;\n-    }\n+  public XmlColor alpha(Integer alpha) {\n+    this.alpha = alpha;\n+    return this;\n+  }\n \n-    public XmlColor web(String web) {\n-        this.web = web;\n-        return this;\n-    }\n+  /**\n+   * Gets or sets alpha component of color structure.\n+   *\n+   * @return alpha\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets alpha component of color structure.\")\n+  public Integer getAlpha() {\n+    return alpha;\n+  }\n \n-    /**\n-     * Gets or sets hTML string color representation.\n-    * @return web\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets hTML string color representation.\")\n-    public String getWeb() {\n-        return web;\n-    }\n+  public void setAlpha(Integer alpha) {\n+    this.alpha = alpha;\n+  }\n \n-    public void setWeb(String web) {\n-        this.web = web;\n-    }\n+  public XmlColor web(String web) {\n+    this.web = web;\n+    return this;\n+  }\n+\n+  /**\n+   * Gets or sets hTML string color representation.\n+   *\n+   * @return web\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets hTML string color representation.\")\n+  public String getWeb() {\n+    return web;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    XmlColor xmlColor = (XmlColor)o;\n+  public void setWeb(String web) {\n+    this.web = web;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    XmlColor xmlColor = (XmlColor) o;\n     return\n         Objects.equals(this.alpha, xmlColor.alpha) &&\n-        Objects.equals(this.web, xmlColor.web);\n+            Objects.equals(this.web, xmlColor.web);\n   }\n \n   @Override\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/184/XmlColor.java\nindex 95146a6d4d..a1a4f1818e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/184/XmlColor.java\n@@ -45,86 +45,105 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Utility class for Color serialization.\n  */\n+\n+\n @ApiModel(description = \"Utility class for Color serialization.\")\n+\n public class XmlColor {\n     @SerializedName(\"Alpha\")\n     private Integer alpha = null;\n \n     @SerializedName(\"Web\")\n     private String web = null;\n+\n     public XmlColor alpha(Integer alpha) {\n-        this.alpha = alpha;\n-        return this;\n+    this.alpha = alpha;\n+    return this;\n     }\n \n     /**\n      * Gets or sets alpha component of color structure.\n     * @return alpha\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets alpha component of color structure.\")\n     public Integer getAlpha() {\n-        return alpha;\n+    return alpha;\n     }\n \n+\n     public void setAlpha(Integer alpha) {\n-        this.alpha = alpha;\n+    this.alpha = alpha;\n     }\n \n+\n     public XmlColor web(String web) {\n-        this.web = web;\n-        return this;\n+    this.web = web;\n+    return this;\n     }\n \n     /**\n      * Gets or sets hTML string color representation.\n     * @return web\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets hTML string color representation.\")\n     public String getWeb() {\n-        return web;\n+    return web;\n     }\n \n+\n     public void setWeb(String web) {\n-        this.web = web;\n+    this.web = web;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    XmlColor xmlColor = (XmlColor)o;\n-    return\n-        Objects.equals(this.alpha, xmlColor.alpha) &&\n+\n+        XmlColor xmlColor = (XmlColor) o;\n+        return Objects.equals(this.alpha, xmlColor.alpha) &&\n         Objects.equals(this.web, xmlColor.web);\n-  }\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(alpha, web);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class XmlColor {\\n\");\n     sb.append(\"    alpha: \").append(toIndentedString(alpha)).append(\"\\n\");\n     sb.append(\"    web: \").append(toIndentedString(web)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/184/XmlColor.java\nindex 95146a6d4d..315b24ebb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/184/XmlColor.java\n@@ -96,7 +96,7 @@ public class XmlColor {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XmlColor xmlColor = (XmlColor)o;\n+    XmlColor xmlColor = (XmlColor) o;\n     return\n         Objects.equals(this.alpha, xmlColor.alpha) &&\n         Objects.equals(this.web, xmlColor.web);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/184/XmlColor.java\nindex 95146a6d4d..bba61b4d1e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/184/XmlColor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/184/XmlColor.java\n@@ -96,7 +96,8 @@ public class XmlColor {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XmlColor xmlColor = (XmlColor)o;\n+    XmlColor xmlColor = (XmlColor\n+) o;\n     return\n         Objects.equals(this.alpha, xmlColor.alpha) &&\n         Objects.equals(this.web, xmlColor.web);\n",
            "diff_size": 2
        }
    ]
}