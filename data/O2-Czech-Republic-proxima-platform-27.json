{
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "26",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 96).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/** Transform applicable on proxied attributes in {@code apply} section. */\npublic abstract class BeamProxyTransform implements ContextualProxyTransform<BeamDataOperator> {\n\n  public abstract PCollection<StreamElement> createStream(\n      String name,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/27/BeamProxyTransform.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/27/BeamProxyTransform.java\nindex eb449d4b9e..48ac457a0d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/27/BeamProxyTransform.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/27/BeamProxyTransform.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core;\n \n import cz.o2.proxima.repository.DataOperatorFactory;\n@@ -23,7 +24,8 @@ import org.apache.beam.sdk.Pipeline;\n import org.apache.beam.sdk.values.PCollection;\n \n /** Transform applicable on proxied attributes in {@code apply} section. */\n-public abstract class BeamProxyTransform implements ContextualProxyTransform<BeamDataOperator> {\n+public abstract class BeamProxyTransform\n+    implements ContextualProxyTransform<BeamDataOperator> {\n \n   public abstract PCollection<StreamElement> createStream(\n       String name,\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/27/BeamProxyTransform.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/27/BeamProxyTransform.java\nindex eb449d4b9e..bbd2ff9fed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/27/BeamProxyTransform.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/27/BeamProxyTransform.java\n@@ -30,17 +30,16 @@ public abstract class BeamProxyTransform implements ContextualProxyTransform<Bea\n       Pipeline pipeline,\n       Position position,\n       boolean stopAtCurrent,\n-      boolean eventTime,\n-      long limit);\n+      boolean eventTime, long limit);\n \n-  public abstract PCollection<StreamElement> createStreamFromUpdates(\n+public abstract PCollection<StreamElement> createStreamFromUpdates(\n       Pipeline pipeline, long startStamp, long endStamp, long limit);\n \n-  public abstract PCollection<StreamElement> createBatch(\n+public abstract PCollection<StreamElement> createBatch(\n       Pipeline pipeline, long startStamp, long endStamp);\n \n-  @Override\n+@Override\n   public final boolean isDelegateOf(DataOperatorFactory operatorFactory) {\n     return operatorFactory instanceof BeamDataOperatorFactory;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/27/BeamProxyTransform.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/27/BeamProxyTransform.java\nindex eb449d4b9e..85df8f215b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/27/BeamProxyTransform.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/27/BeamProxyTransform.java\n@@ -23,24 +23,21 @@ import org.apache.beam.sdk.Pipeline;\n import org.apache.beam.sdk.values.PCollection;\n \n /** Transform applicable on proxied attributes in {@code apply} section. */\n-public abstract class BeamProxyTransform implements ContextualProxyTransform<BeamDataOperator> {\n \n-  public abstract PCollection<StreamElement> createStream(\n-      String name,\n-      Pipeline pipeline,\n-      Position position,\n-      boolean stopAtCurrent,\n-      boolean eventTime,\n-      long limit);\n \n-  public abstract PCollection<StreamElement> createStreamFromUpdates(\n-      Pipeline pipeline, long startStamp, long endStamp, long limit);\n+public abstract class BeamProxyTransform implements ContextualProxyTransform<BeamDataOperator> {\n \n-  public abstract PCollection<StreamElement> createBatch(\n-      Pipeline pipeline, long startStamp, long endStamp);\n+    public abstract PCollection<StreamElement> createStream(\n+        String name,\n+        Pipeline pipeline,\n+        Position position,\n+        boolean stopAtCurrent,\n+        boolean eventTime, long limit);\n+    public abstract PCollection<StreamElement> createStreamFromUpdates(Pipeline pipeline, long startStamp, long endStamp, long limit);\n+    public abstract PCollection<StreamElement> createBatch(Pipeline pipeline, long startStamp, long endStamp);\n \n-  @Override\n-  public final boolean isDelegateOf(DataOperatorFactory operatorFactory) {\n+    @Override\n+    public final boolean isDelegateOf(DataOperatorFactory operatorFactory) {\n     return operatorFactory instanceof BeamDataOperatorFactory;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}