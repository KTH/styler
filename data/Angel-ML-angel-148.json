{
    "error_id": "148",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/148/UserDefinePartition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/148/UserDefinePartition.java\nindex 87a3a927da..24e6f34e27 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/148/UserDefinePartition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/148/UserDefinePartition.java\n@@ -23,24 +23,24 @@ import com.tencent.angel.ml.matrix.RowType;\n import com.tencent.angel.ps.storage.partition.storage.IServerPartitionStorage;\n \n public abstract class UserDefinePartition extends ServerPartition implements StreamSerialize {\n-  /**\n-   * Create a new Server partition,include load rows.\n-   *\n-   * @param partKey the partition meta\n-   * @param rowType row type\n-   * @param estSparsity valid element number / index range\n-   * @param storage partition storage\n-   */\n-  public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity,\n-      IServerPartitionStorage storage) {\n-    super(partKey, rowType, estSparsity, storage);\n-  }\n+    /**\n+     * Create a new Server partition,include load rows.\n+     *\n+     * @param partKey     the partition meta\n+     * @param rowType     row type\n+     * @param estSparsity valid element number / index range\n+     * @param storage     partition storage\n+     */\n+    public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity,\n+                               IServerPartitionStorage storage) {\n+        super(partKey, rowType, estSparsity, storage);\n+    }\n \n \n-  /**\n-   * Create a new Server partition.\n-   */\n-  public UserDefinePartition() {\n-    this(null, RowType.T_DOUBLE_DENSE, 1.0, null);\n-  }\n+    /**\n+     * Create a new Server partition.\n+     */\n+    public UserDefinePartition() {\n+        this(null, RowType.T_DOUBLE_DENSE, 1.0, null);\n+    }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/148/UserDefinePartition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/148/UserDefinePartition.java\nindex 87a3a927da..640b47fe5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/148/UserDefinePartition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/148/UserDefinePartition.java\n@@ -43,4 +43,4 @@ public abstract class UserDefinePartition extends ServerPartition implements Str\n   public UserDefinePartition() {\n     this(null, RowType.T_DOUBLE_DENSE, 1.0, null);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/148/UserDefinePartition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/148/UserDefinePartition.java\nindex 87a3a927da..2443c097a6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/148/UserDefinePartition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/148/UserDefinePartition.java\n@@ -31,16 +31,17 @@ public abstract class UserDefinePartition extends ServerPartition implements Str\n    * @param estSparsity valid element number / index range\n    * @param storage partition storage\n    */\n-  public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity,\n-      IServerPartitionStorage storage) {\n+\n+    public UserDefinePartition(PartitionKey partKey, RowType rowType, double estSparsity, IServerPartitionStorage storage) {\n     super(partKey, rowType, estSparsity, storage);\n-  }\n+    }\n \n \n   /**\n    * Create a new Server partition.\n    */\n-  public UserDefinePartition() {\n+\n+    public UserDefinePartition() {\n     this(null, RowType.T_DOUBLE_DENSE, 1.0, null);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}