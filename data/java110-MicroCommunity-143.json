{
    "error_id": "143",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "29",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        electricPo.setId(\"123\");\n        electricPo.setStartTime(new Date());\n        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n\n\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/143/SaveElectricListener.java\nindex b6175bf1e3..977c567320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/143/SaveElectricListener.java\n@@ -35,7 +35,7 @@ public class SaveElectricListener extends AbstractServiceApiPlusListener {\n \n         electricPo.setId(\"123\");\n         electricPo.setStartTime(new Date());\n-        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n+        super.insert(context, electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n \n \n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/143/SaveElectricListener.java\nindex b6175bf1e3..3f53c759fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/143/SaveElectricListener.java\n@@ -21,34 +21,34 @@ import java.util.Date;\n  **/\n public class SaveElectricListener extends AbstractServiceApiPlusListener {\n \n-    @Override\n-    protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n+  @Override\n+  protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n \n-        Assert.jsonObjectHaveKey(reqJson, \"demoValue\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bdemoValue\u4fe1\u606f\");\n+    Assert.jsonObjectHaveKey(reqJson, \"demoValue\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bdemoValue\u4fe1\u606f\");\n \n-    }\n+  }\n \n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n+  @Override\n+  protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n \n-        ElectricPo electricPo = new ElectricPo();\n+    ElectricPo electricPo = new ElectricPo();\n \n-        electricPo.setId(\"123\");\n-        electricPo.setStartTime(new Date());\n-        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n+    electricPo.setId(\"123\");\n+    electricPo.setStartTime(new Date());\n+    super.insert(context, electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n \n \n-    }\n+  }\n \n-    @Override\n-    public String getServiceCode() {\n-        return null;\n-    }\n+  @Override\n+  public String getServiceCode() {\n+    return null;\n+  }\n \n-    @Override\n-    public HttpMethod getHttpMethod() {\n-        return null;\n-    }\n+  @Override\n+  public HttpMethod getHttpMethod() {\n+    return null;\n+  }\n \n \n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/143/SaveElectricListener.java\nindex b6175bf1e3..104e7ff06e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/143/SaveElectricListener.java\n@@ -35,7 +35,7 @@ public class SaveElectricListener extends AbstractServiceApiPlusListener {\n \n         electricPo.setId(\"123\");\n         electricPo.setStartTime(new Date());\n-        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n+        super.insert(context, electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n \n \n     }\n@@ -51,4 +51,4 @@ public class SaveElectricListener extends AbstractServiceApiPlusListener {\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/143/SaveElectricListener.java\nindex b6175bf1e3..17c858dcc7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/143/SaveElectricListener.java\n@@ -8,7 +8,6 @@ import com.java110.po.ElectricPo;\n import com.java110.utils.constant.BusinessTypeConstant;\n import com.java110.utils.util.Assert;\n import org.springframework.http.HttpMethod;\n-\n import java.util.Date;\n \n /**\n@@ -19,36 +18,38 @@ import java.util.Date;\n  * @Version 1.0\n  * add by wuxw 2020/5/26\n  **/\n+\n+\n public class SaveElectricListener extends AbstractServiceApiPlusListener {\n \n     @Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n-\n         Assert.jsonObjectHaveKey(reqJson, \"demoValue\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bdemoValue\u4fe1\u606f\");\n-\n     }\n \n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n \n+    @Override\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         ElectricPo electricPo = new ElectricPo();\n-\n         electricPo.setId(\"123\");\n         electricPo.setStartTime(new Date());\n-        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n \n \n+        super.insert(context,\n+            electricPo,\n+                BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n     }\n \n+\n     @Override\n     public String getServiceCode() {\n         return null;\n     }\n \n+\n     @Override\n     public HttpMethod getHttpMethod() {\n         return null;\n     }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/143/SaveElectricListener.java\nindex b6175bf1e3..977c567320 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/143/SaveElectricListener.java\n@@ -35,7 +35,7 @@ public class SaveElectricListener extends AbstractServiceApiPlusListener {\n \n         electricPo.setId(\"123\");\n         electricPo.setStartTime(new Date());\n-        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n+        super.insert(context, electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n \n \n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/143/SaveElectricListener.java\nindex b6175bf1e3..0fd27e73c6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/143/SaveElectricListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/143/SaveElectricListener.java\n@@ -35,7 +35,7 @@ public class SaveElectricListener extends AbstractServiceApiPlusListener {\n \n         electricPo.setId(\"123\");\n         electricPo.setStartTime(new Date());\n-        super.insert(context,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n+        super.insert(context ,electricPo, BusinessTypeConstant.BUSINESS_TYPE_SAVE_ADVERT);\n \n \n     }\n",
            "diff_size": 1
        }
    ]
}