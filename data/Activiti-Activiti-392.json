{
    "error_id": "392",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.process.model.builders;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/392/StartProcessPayloadBuilder.java\nindex 90807da6ce..ce931eacf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/392/StartProcessPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/392/StartProcessPayloadBuilder.java\nindex 90807da6ce..ce931eacf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/392/StartProcessPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/392/StartProcessPayloadBuilder.java\nindex 90807da6ce..3364e44661 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/392/StartProcessPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.HashMap;\n@@ -31,37 +32,37 @@ public class StartProcessPayloadBuilder {\n     public StartProcessPayloadBuilder withVariables(Map<String, Object> variables) {\n         this.variables = variables;\n         return this;\n-    }\n+  }\n \n     public StartProcessPayloadBuilder withVariable(String name,\n                                                    Object value) {\n-        if (this.variables == null) {\n+  if (this.variables == null) {\n             this.variables = new HashMap<>();\n         }\n         this.variables.put(name,\n                 value);\n-        return this;\n-    }\n+return this;\n+  }\n \n     public StartProcessPayloadBuilder withBusinessKey(String businessKey) {\n         this.businessKey = businessKey;\n         return this;\n-    }\n+  }\n \n     public StartProcessPayloadBuilder withProcessDefinitionId(String processDefinitionId) {\n         this.processDefinitionId = processDefinitionId;\n         return this;\n-    }\n+  }\n \n     public StartProcessPayloadBuilder withName(String name) {\n         this.name = name;\n         return this;\n-    }\n+  }\n \n     public StartProcessPayloadBuilder withProcessDefinitionKey(String processDefinitionKey) {\n         this.processDefinitionKey = processDefinitionKey;\n         return this;\n-    }\n+  }\n \n     public StartProcessPayload build() {\n         return new StartProcessPayload(processDefinitionId,\n@@ -70,4 +71,4 @@ public class StartProcessPayloadBuilder {\n                 businessKey,\n                 variables);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/392/StartProcessPayloadBuilder.java\nindex 90807da6ce..4def7eb4c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/392/StartProcessPayloadBuilder.java\n@@ -17,57 +17,59 @@ package org.activiti.api.process.model.builders;\n \n import java.util.HashMap;\n import java.util.Map;\n-\n import org.activiti.api.process.model.payloads.StartProcessPayload;\n \n+\n public class StartProcessPayloadBuilder {\n \n     private String processDefinitionId;\n+\n     private String processDefinitionKey;\n+\n     private String name;\n+\n     private String businessKey;\n-    private Map<String, Object> variables = new HashMap<>();\n \n+    private Map<String, Object> variables = new HashMap<>();\n     public StartProcessPayloadBuilder withVariables(Map<String, Object> variables) {\n-        this.variables = variables;\n-        return this;\n+    this.variables = variables;\n+    return this;\n     }\n \n-    public StartProcessPayloadBuilder withVariable(String name,\n-                                                   Object value) {\n-        if (this.variables == null) {\n-            this.variables = new HashMap<>();\n-        }\n-        this.variables.put(name,\n-                value);\n-        return this;\n+    public StartProcessPayloadBuilder withVariable(String name, Object value) {\n+    if (this.variables == null) {\n+        this.variables = new HashMap<>();\n+    }\n+    this.variables.put(name, value);\n+    return this;\n     }\n \n     public StartProcessPayloadBuilder withBusinessKey(String businessKey) {\n-        this.businessKey = businessKey;\n-        return this;\n+    this.businessKey = businessKey;\n+    return this;\n     }\n \n     public StartProcessPayloadBuilder withProcessDefinitionId(String processDefinitionId) {\n-        this.processDefinitionId = processDefinitionId;\n-        return this;\n+    this.processDefinitionId = processDefinitionId;\n+    return this;\n     }\n \n     public StartProcessPayloadBuilder withName(String name) {\n-        this.name = name;\n-        return this;\n+    this.name = name;\n+    return this;\n     }\n \n     public StartProcessPayloadBuilder withProcessDefinitionKey(String processDefinitionKey) {\n-        this.processDefinitionKey = processDefinitionKey;\n-        return this;\n+    this.processDefinitionKey = processDefinitionKey;\n+    return this;\n     }\n \n     public StartProcessPayload build() {\n-        return new StartProcessPayload(processDefinitionId,\n-                processDefinitionKey,\n-                name,\n-                businessKey,\n-                variables);\n+    return new StartProcessPayload(processDefinitionId,\n+                                   processDefinitionKey,\n+                                   name,\n+                                   businessKey,\n+                                   variables);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/392/StartProcessPayloadBuilder.java\nindex 90807da6ce..ce931eacf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/392/StartProcessPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/392/StartProcessPayloadBuilder.java\nindex 90807da6ce..ce931eacf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/392/StartProcessPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/392/StartProcessPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.process.model.builders;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        }
    ]
}