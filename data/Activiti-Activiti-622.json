{
    "error_id": "622",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.task.model.builders;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/622/CandidateUsersPayloadBuilder.java\nindex 2c28ee71d8..f6006ecb87 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/622/CandidateUsersPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.builders;\n \n import java.util.ArrayList;\n@@ -24,7 +25,7 @@ public class CandidateUsersPayloadBuilder {\n \n     private String taskId;\n     private List<String> candidateUsers = new ArrayList<>();\n- \n+\n     public CandidateUsersPayloadBuilder withTaskId(String taskId) {\n         this.taskId = taskId;\n         return this;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/622/CandidateUsersPayloadBuilder.java\nindex 2c28ee71d8..974fd73dbf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/622/CandidateUsersPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.builders;\n \n import java.util.ArrayList;\n@@ -24,7 +25,7 @@ public class CandidateUsersPayloadBuilder {\n \n     private String taskId;\n     private List<String> candidateUsers = new ArrayList<>();\n- \n+\n     public CandidateUsersPayloadBuilder withTaskId(String taskId) {\n         this.taskId = taskId;\n         return this;\n@@ -45,6 +46,6 @@ public class CandidateUsersPayloadBuilder {\n \n     public CandidateUsersPayload build() {\n         return new CandidateUsersPayload(taskId,\n-                                         candidateUsers);\n+                candidateUsers);\n     }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/622/CandidateUsersPayloadBuilder.java\nindex 2c28ee71d8..5ca6530d6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/622/CandidateUsersPayloadBuilder.java\n@@ -17,34 +17,33 @@ package org.activiti.api.task.model.builders;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import org.activiti.api.task.model.payloads.CandidateUsersPayload;\n \n+\n public class CandidateUsersPayloadBuilder {\n \n     private String taskId;\n+\n     private List<String> candidateUsers = new ArrayList<>();\n- \n     public CandidateUsersPayloadBuilder withTaskId(String taskId) {\n-        this.taskId = taskId;\n-        return this;\n+    this.taskId = taskId;\n+    return this;\n     }\n \n     public CandidateUsersPayloadBuilder withCandidateUsers(List<String> candidateUsers) {\n-        if (candidateUsers == null) {\n-            candidateUsers = new ArrayList<>();\n-        }\n-        this.candidateUsers = candidateUsers;\n-        return this;\n+    if (candidateUsers == null) {\n+        candidateUsers = new ArrayList<>();\n+    }\n+    this.candidateUsers = candidateUsers;\n+    return this;\n     }\n \n     public CandidateUsersPayloadBuilder withCandidateUser(String candidateUser) {\n-        this.candidateUsers.add(candidateUser);\n-        return this;\n+    this.candidateUsers.add(candidateUser);\n+    return this;\n     }\n \n     public CandidateUsersPayload build() {\n-        return new CandidateUsersPayload(taskId,\n-                                         candidateUsers);\n+    return new CandidateUsersPayload(taskId, candidateUsers);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/622/CandidateUsersPayloadBuilder.java\nindex 2c28ee71d8..f6006ecb87 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/622/CandidateUsersPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.builders;\n \n import java.util.ArrayList;\n@@ -24,7 +25,7 @@ public class CandidateUsersPayloadBuilder {\n \n     private String taskId;\n     private List<String> candidateUsers = new ArrayList<>();\n- \n+\n     public CandidateUsersPayloadBuilder withTaskId(String taskId) {\n         this.taskId = taskId;\n         return this;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/622/CandidateUsersPayloadBuilder.java\nindex 2c28ee71d8..f6006ecb87 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/622/CandidateUsersPayloadBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/622/CandidateUsersPayloadBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.builders;\n \n import java.util.ArrayList;\n@@ -24,7 +25,7 @@ public class CandidateUsersPayloadBuilder {\n \n     private String taskId;\n     private List<String> candidateUsers = new ArrayList<>();\n- \n+\n     public CandidateUsersPayloadBuilder withTaskId(String taskId) {\n         this.taskId = taskId;\n         return this;\n",
            "diff_size": 2
        }
    ]
}