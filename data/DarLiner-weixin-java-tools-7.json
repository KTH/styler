{
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 127).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Created by ecoolper on 2017/5/5.\n */\npublic class JoddMaterialVideoInfoRequestExecutor extends MaterialVideoInfoRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n  public JoddMaterialVideoInfoRequestExecutor(RequestHttp requestHttp) {\n    super(requestHttp);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/7/JoddMaterialVideoInfoRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/7/JoddMaterialVideoInfoRequestExecutor.java\nindex ab4ce6682c..52475c2fe8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/7/JoddMaterialVideoInfoRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/7/JoddMaterialVideoInfoRequestExecutor.java\n@@ -17,7 +17,8 @@ import java.io.IOException;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialVideoInfoRequestExecutor extends MaterialVideoInfoRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddMaterialVideoInfoRequestExecutor\n+    extends MaterialVideoInfoRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public JoddMaterialVideoInfoRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/7/JoddMaterialVideoInfoRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/7/JoddMaterialVideoInfoRequestExecutor.java\nindex ab4ce6682c..8110990436 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/7/JoddMaterialVideoInfoRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/7/JoddMaterialVideoInfoRequestExecutor.java\n@@ -41,4 +41,4 @@ public class JoddMaterialVideoInfoRequestExecutor extends MaterialVideoInfoReque\n       return WxMpMaterialVideoInfoResult.fromJson(responseContent);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/7/JoddMaterialVideoInfoRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/7/JoddMaterialVideoInfoRequestExecutor.java\nindex ab4ce6682c..c00e375fec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/7/JoddMaterialVideoInfoRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/7/JoddMaterialVideoInfoRequestExecutor.java\n@@ -5,40 +5,40 @@ import jodd.http.HttpRequest;\n import jodd.http.HttpResponse;\n import jodd.http.ProxyInfo;\n import jodd.util.StringPool;\n-\n import me.chanjar.weixin.common.bean.result.WxError;\n import me.chanjar.weixin.common.exception.WxErrorException;\n import me.chanjar.weixin.common.util.http.RequestHttp;\n import me.chanjar.weixin.mp.bean.material.WxMpMaterialVideoInfoResult;\n import me.chanjar.weixin.mp.util.http.MaterialVideoInfoRequestExecutor;\n-\n import java.io.IOException;\n \n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n+\n+\n public class JoddMaterialVideoInfoRequestExecutor extends MaterialVideoInfoRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n-  public JoddMaterialVideoInfoRequestExecutor(RequestHttp requestHttp) {\n+\n+    public JoddMaterialVideoInfoRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n-  }\n+    }\n \n-  @Override\n-  public WxMpMaterialVideoInfoResult execute(String uri, String materialId) throws WxErrorException, IOException {\n+    @Override\n+    public WxMpMaterialVideoInfoResult execute(String uri, String materialId) throws WxErrorException, IOException {\n     HttpRequest request = HttpRequest.post(uri);\n     if (requestHttp.getRequestHttpProxy() != null) {\n-      requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n+        requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n     }\n     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n     request.query(\"media_id\", materialId);\n     HttpResponse response = request.send();\n     response.charset(StringPool.UTF_8);\n     String responseContent = response.bodyText();\n     WxError error = WxError.fromJson(responseContent);\n     if (error.getErrorCode() != 0) {\n-      throw new WxErrorException(error);\n+        throw new WxErrorException(error);\n     } else {\n       return WxMpMaterialVideoInfoResult.fromJson(responseContent);\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}