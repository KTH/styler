{
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void testCoderSerializable() throws IOException, ClassNotFoundException {\n    StreamElementCoder coder =\n        StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n    final byte[] serialized = TestUtils.serializeObject(coder);\n    assertTrue(\n        \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "column": "48",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/40/StreamElementCoderTest.java\nindex 66cd4437c8..54589ccd5e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/40/StreamElementCoderTest.java\n@@ -29,8 +29,10 @@ public class StreamElementCoderTest {\n   @Test\n   public void testCoderSerializable() throws IOException, ClassNotFoundException {\n     StreamElementCoder coder =\n-        StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n-    final byte[] serialized = TestUtils.serializeObject(coder);\n+        StreamElementCoder.of(Repository.of( ()-> ConfigFactory.load(\"test-reference.conf\")))\n+      ;\n+\n+        finalbyte[] serialized = TestUtils.serializeObject(coder);\n     assertTrue(\n         \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,\n         serialized.length < 2048);\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/40/StreamElementCoderTest.java\nindex 66cd4437c8..36d9d35251 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/40/StreamElementCoderTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core.io;\n \n import static org.junit.Assert.assertTrue;\n@@ -29,7 +30,8 @@ public class StreamElementCoderTest {\n   @Test\n   public void testCoderSerializable() throws IOException, ClassNotFoundException {\n     StreamElementCoder coder =\n-        StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n+        StreamElementCoder\n+            .of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n     final byte[] serialized = TestUtils.serializeObject(coder);\n     assertTrue(\n         \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/40/StreamElementCoderTest.java\nindex 66cd4437c8..32e8783c16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/40/StreamElementCoderTest.java\n@@ -36,4 +36,4 @@ public class StreamElementCoderTest {\n         serialized.length < 2048);\n     TestUtils.assertSerializable(coder);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/40/StreamElementCoderTest.java\nindex 66cd4437c8..b61b2a413e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/40/StreamElementCoderTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.beam.core.io;\n \n import static org.junit.Assert.assertTrue;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.repository.Repository;\n import cz.o2.proxima.util.TestUtils;\n@@ -24,16 +23,15 @@ import java.io.IOException;\n import org.junit.Test;\n \n /** Test suite for {@link StreamElementCoder}. */\n+\n+\n public class StreamElementCoderTest {\n \n-  @Test\n-  public void testCoderSerializable() throws IOException, ClassNotFoundException {\n-    StreamElementCoder coder =\n-        StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n+    @Test\n+    public void testCoderSerializable() throws IOException, ClassNotFoundException {\n+    StreamElementCoder coder = StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n     final byte[] serialized = TestUtils.serializeObject(coder);\n-    assertTrue(\n-        \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,\n-        serialized.length < 2048);\n+    assertTrue(\"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length, serialized.length < 2048);\n     TestUtils.assertSerializable(coder);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "column": "48",
                    "severity": "error",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/40/StreamElementCoderTest.java\nindex 66cd4437c8..54589ccd5e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/40/StreamElementCoderTest.java\n@@ -29,8 +29,10 @@ public class StreamElementCoderTest {\n   @Test\n   public void testCoderSerializable() throws IOException, ClassNotFoundException {\n     StreamElementCoder coder =\n-        StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n-    final byte[] serialized = TestUtils.serializeObject(coder);\n+        StreamElementCoder.of(Repository.of( ()-> ConfigFactory.load(\"test-reference.conf\")))\n+      ;\n+\n+        finalbyte[] serialized = TestUtils.serializeObject(coder);\n     assertTrue(\n         \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,\n         serialized.length < 2048);\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'StreamElementCoder' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'->' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 7, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 5, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/40/StreamElementCoderTest.java\nindex 66cd4437c8..fe4879dc47 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/40/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/40/StreamElementCoderTest.java\n@@ -29,11 +29,13 @@ public class StreamElementCoderTest {\n   @Test\n   public void testCoderSerializable() throws IOException, ClassNotFoundException {\n     StreamElementCoder coder =\n-        StreamElementCoder.of(Repository.of(() -> ConfigFactory.load(\"test-reference.conf\")));\n-    final byte[] serialized = TestUtils.serializeObject(coder);\n-    assertTrue(\n-        \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,\n-        serialized.length < 2048);\n-    TestUtils.assertSerializable(coder);\n-  }\n-}\n+      StreamElementCoder.of(Repository.of(()\n+    -> ConfigFactory.load(\"test-reference.conf\")));finalbyte\n+  [] serialized = TestUtils.serializeObject(coder);\n+         assertTrue(\n+             \"Length of serialized bytes should be less than 2 KiB, got \" + serialized.length,\n+             serialized.length < 2048);\n+         TestUtils.assertSerializable(coder);\n+       }\n+     }\n+     \n\\ No newline at end of file\n",
            "diff_size": 10
        }
    ]
}