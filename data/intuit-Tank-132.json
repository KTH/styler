{
    "error_id": "132",
    "information": {
        "errors": [
            {
                "line": "36",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n    /**\n\t * \n\t */\n    private static final long serialVersionUID = -1466683720562368885L;\n    private int requestorId;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/132/AgentRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/132/AgentRequest.java\nindex cfd3211c5b..5a2c9989c6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/132/AgentRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/132/AgentRequest.java\n@@ -22,50 +22,50 @@ import com.intuit.tank.vm.api.enumerated.VMProvider;\n  * Class represents a request for agents from a Perf Manager to the schedule\n  * manager. A user can specify specific providers it wants agents from (ie\n  * amazon, pharos,...) or none and just the total number of concurrent users\n- * needed. Schedule manager will use the data in this request to determine \n+ * needed. Schedule manager will use the data in this request to determine\n  * how many VM's are needed to meet the agent request.\n- * \n+ *\n  * The requestor Id for the perf manager job is included to allow the scheduler\n  * manager to send the agent information back to the initiating perf manager.\n- * \n+ *\n  */\n \n public class AgentRequest implements Serializable {\n \n-    /**\n-\t * \n-\t */\n-    private static final long serialVersionUID = -1466683720562368885L;\n-    private int requestorId;\n-    private int totalNumberUsers;\n-    private Hashtable<VMProvider, Integer> providers;\n+  /**\n+   *\n+   */\n+  private static final long serialVersionUID = -1466683720562368885L;\n+  private int requestorId;\n+  private int totalNumberUsers;\n+  private Hashtable<VMProvider, Integer> providers;\n \n-    public AgentRequest(int id, int users) {\n-        requestorId = id;\n-        totalNumberUsers = users;\n-        providers = new Hashtable<VMProvider, Integer>();\n-    }\n+  public AgentRequest(int id, int users) {\n+    requestorId = id;\n+    totalNumberUsers = users;\n+    providers = new Hashtable<VMProvider, Integer>();\n+  }\n \n-    public AgentRequest(int id) {\n-        requestorId = id;\n-        totalNumberUsers = 0;\n-        providers = new Hashtable<VMProvider, Integer>();\n-    }\n+  public AgentRequest(int id) {\n+    requestorId = id;\n+    totalNumberUsers = 0;\n+    providers = new Hashtable<VMProvider, Integer>();\n+  }\n \n-    public Hashtable<VMProvider, Integer> getProviders() {\n-        return providers;\n-    }\n+  public Hashtable<VMProvider, Integer> getProviders() {\n+    return providers;\n+  }\n \n-    public int getNumberUsers() {\n-        return totalNumberUsers;\n-    }\n+  public int getNumberUsers() {\n+    return totalNumberUsers;\n+  }\n \n-    public int getRequestorId() {\n-        return requestorId;\n-    }\n+  public int getRequestorId() {\n+    return requestorId;\n+  }\n \n-    public void addProvider(VMProvider provider, int numUsers) {\n-        providers.put(provider, numUsers);\n-        totalNumberUsers += numUsers;\n-    }\n+  public void addProvider(VMProvider provider, int numUsers) {\n+    providers.put(provider, numUsers);\n+    totalNumberUsers += numUsers;\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/132/AgentRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/132/AgentRequest.java\nindex cfd3211c5b..83c29c5aff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/132/AgentRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/132/AgentRequest.java\n@@ -68,4 +68,4 @@ public class AgentRequest implements Serializable {\n         providers.put(provider, numUsers);\n         totalNumberUsers += numUsers;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/132/AgentRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/132/AgentRequest.java\nindex cfd3211c5b..cf9f8cf3c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/132/AgentRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/132/AgentRequest.java\n@@ -13,9 +13,10 @@ package com.intuit.tank.vm.scheduleManager;\n  * #L%\n  */\n \n+\n+\n import java.io.Serializable;\n import java.util.Hashtable;\n-\n import com.intuit.tank.vm.api.enumerated.VMProvider;\n \n /*\n@@ -33,39 +34,47 @@ import com.intuit.tank.vm.api.enumerated.VMProvider;\n public class AgentRequest implements Serializable {\n \n     /**\n-\t * \n-\t */\n+     * \n+     */\n+\n     private static final long serialVersionUID = -1466683720562368885L;\n     private int requestorId;\n     private int totalNumberUsers;\n     private Hashtable<VMProvider, Integer> providers;\n \n+\n     public AgentRequest(int id, int users) {\n         requestorId = id;\n         totalNumberUsers = users;\n         providers = new Hashtable<VMProvider, Integer>();\n     }\n \n+\n     public AgentRequest(int id) {\n         requestorId = id;\n         totalNumberUsers = 0;\n         providers = new Hashtable<VMProvider, Integer>();\n     }\n \n+\n     public Hashtable<VMProvider, Integer> getProviders() {\n         return providers;\n     }\n \n+\n     public int getNumberUsers() {\n         return totalNumberUsers;\n     }\n \n+\n     public int getRequestorId() {\n         return requestorId;\n     }\n \n+\n     public void addProvider(VMProvider provider, int numUsers) {\n         providers.put(provider, numUsers);\n         totalNumberUsers += numUsers;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}