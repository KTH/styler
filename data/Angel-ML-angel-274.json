{
    "error_id": "274",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @param request rpc request\n   */\n  public RequestFailedEvent(EventType type, Request request, ResponseType failedType, String failedLog) {\n    super(type, request);\n    this.failedType = failedType;\n    this.failedLog = failedLog;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/274/RequestFailedEvent.java\nindex 0f423d0f1a..11a7e8d334 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/274/RequestFailedEvent.java\n@@ -29,17 +29,18 @@ public class RequestFailedEvent extends RequestDispatchEvent {\n    * @param type    event type\n    * @param request rpc request\n    */\n-  public RequestFailedEvent(EventType type, Request request, ResponseType failedType, String failedLog) {\n-    super(type, request);\n-    this.failedType = failedType;\n-    this.failedLog = failedLog;\n-  }\n+  public RequestFailedEvent(EventType type ,Request request , ResponseType failedType ,String\n+      failedLog\n+  ){super(type, request);\n+   this.failedType = failedType;\n+   this.failedLog = failedLog;\n+ }\n \n-  public ResponseType getFailedType() {\n-    return failedType;\n-  }\n+ public ResponseType getFailedType() {\n+   return failedType;\n+ }\n \n-  public String getFailedLog() {\n-    return failedLog;\n-  }\n+ public String getFailedLog() {\n+   return failedLog;\n+ }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/274/RequestFailedEvent.java\nindex 0f423d0f1a..f496d4058f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/274/RequestFailedEvent.java\n@@ -21,25 +21,27 @@ import com.tencent.angel.ml.matrix.transport.ResponseType;\n \n public class RequestFailedEvent extends RequestDispatchEvent {\n \n-  private final ResponseType failedType;\n-  private final String failedLog;\n-  /**\n-   * Create a new RequestDispatchEvent.\n-   *\n-   * @param type    event type\n-   * @param request rpc request\n-   */\n-  public RequestFailedEvent(EventType type, Request request, ResponseType failedType, String failedLog) {\n-    super(type, request);\n-    this.failedType = failedType;\n-    this.failedLog = failedLog;\n-  }\n+    private final ResponseType failedType;\n+    private final String failedLog;\n \n-  public ResponseType getFailedType() {\n-    return failedType;\n-  }\n+    /**\n+     * Create a new RequestDispatchEvent.\n+     *\n+     * @param type    event type\n+     * @param request rpc request\n+     */\n+    public RequestFailedEvent(EventType type, Request request, ResponseType failedType,\n+                              String failedLog) {\n+        super(type, request);\n+        this.failedType = failedType;\n+        this.failedLog = failedLog;\n+    }\n \n-  public String getFailedLog() {\n-    return failedLog;\n-  }\n+    public ResponseType getFailedType() {\n+        return failedType;\n+    }\n+\n+    public String getFailedLog() {\n+        return failedLog;\n+    }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/274/RequestFailedEvent.java\nindex 0f423d0f1a..ab13295196 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/274/RequestFailedEvent.java\n@@ -42,4 +42,4 @@ public class RequestFailedEvent extends RequestDispatchEvent {\n   public String getFailedLog() {\n     return failedLog;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/274/RequestFailedEvent.java\nindex 0f423d0f1a..fa45c14ebe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/274/RequestFailedEvent.java\n@@ -20,26 +20,27 @@ import com.tencent.angel.ml.matrix.transport.Request;\n import com.tencent.angel.ml.matrix.transport.ResponseType;\n \n public class RequestFailedEvent extends RequestDispatchEvent {\n-\n-  private final ResponseType failedType;\n-  private final String failedLog;\n+    private final ResponseType failedType;\n+    private final String failedLog;\n   /**\n    * Create a new RequestDispatchEvent.\n    *\n    * @param type    event type\n    * @param request rpc request\n    */\n-  public RequestFailedEvent(EventType type, Request request, ResponseType failedType, String failedLog) {\n+\n+    public RequestFailedEvent(EventType type, Request request, ResponseType failedType, String failedLog) {\n     super(type, request);\n     this.failedType = failedType;\n     this.failedLog = failedLog;\n-  }\n+    }\n \n-  public ResponseType getFailedType() {\n+    public ResponseType getFailedType() {\n     return failedType;\n-  }\n+    }\n \n-  public String getFailedLog() {\n+    public String getFailedLog() {\n     return failedLog;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/274/RequestFailedEvent.java\nindex 0f423d0f1a..11a7e8d334 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/274/RequestFailedEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/274/RequestFailedEvent.java\n@@ -29,17 +29,18 @@ public class RequestFailedEvent extends RequestDispatchEvent {\n    * @param type    event type\n    * @param request rpc request\n    */\n-  public RequestFailedEvent(EventType type, Request request, ResponseType failedType, String failedLog) {\n-    super(type, request);\n-    this.failedType = failedType;\n-    this.failedLog = failedLog;\n-  }\n+  public RequestFailedEvent(EventType type ,Request request , ResponseType failedType ,String\n+      failedLog\n+  ){super(type, request);\n+   this.failedType = failedType;\n+   this.failedLog = failedLog;\n+ }\n \n-  public ResponseType getFailedType() {\n-    return failedType;\n-  }\n+ public ResponseType getFailedType() {\n+   return failedType;\n+ }\n \n-  public String getFailedLog() {\n-    return failedLog;\n-  }\n+ public String getFailedLog() {\n+   return failedLog;\n+ }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}