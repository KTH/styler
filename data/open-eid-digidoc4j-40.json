{
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "172",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n    commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler/40/SKCommonCertificateVerifier.java\nindex c48da56fd8..a3190acc92 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler/40/SKCommonCertificateVerifier.java\n@@ -170,9 +170,7 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n   @Override\n   public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n     commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n-  }\n-\n-  @Override\n+    }@Override\n   public boolean isExceptionOnNoRevocationAfterBestSignatureTime() {\n     return commonCertificateVerifier.isExceptionOnNoRevocationAfterBestSignatureTime();\n   }\n@@ -216,7 +214,7 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n   public boolean isIncludeTimestampTokenValues() {\n     return commonCertificateVerifier.isIncludeTimestampTokenValues();\n   }\n-  \n+\n   /*\n    * RESTRICTED METHODS\n    */\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/intellij/40/SKCommonCertificateVerifier.java\nindex c48da56fd8..eacbb02fde 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/intellij/40/SKCommonCertificateVerifier.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic;\n \n@@ -169,7 +169,8 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n \n   @Override\n   public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n-    commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n+    commonCertificateVerifier\n+        .setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n   }\n \n   @Override\n@@ -216,7 +217,7 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n   public boolean isIncludeTimestampTokenValues() {\n     return commonCertificateVerifier.isIncludeTimestampTokenValues();\n   }\n-  \n+\n   /*\n    * RESTRICTED METHODS\n    */\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/naturalize/40/SKCommonCertificateVerifier.java\nindex c48da56fd8..de1f074c21 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/naturalize/40/SKCommonCertificateVerifier.java\n@@ -226,4 +226,4 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n     this.commonCertificateVerifier = new CommonCertificateVerifier();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/codebuff/40/SKCommonCertificateVerifier.java\nindex c48da56fd8..121879160f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/codebuff/40/SKCommonCertificateVerifier.java\n@@ -13,10 +13,8 @@ package org.digidoc4j.impl.asic;\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.Serializable;\n-\n import eu.europa.esig.dss.enumerations.DigestAlgorithm;\n import org.digidoc4j.impl.asic.tsl.LazyCertificatePool;\n-\n import eu.europa.esig.dss.spi.client.http.DataLoader;\n import eu.europa.esig.dss.validation.CertificateVerifier;\n import eu.europa.esig.dss.validation.CommonCertificateVerifier;\n@@ -30,200 +28,204 @@ import eu.europa.esig.dss.spi.x509.revocation.ocsp.OCSPSource;\n /**\n  * Delegate class for SD-DSS CommonCertificateVerifier. Needed for making serialization possible\n  */\n+\n+\n public class SKCommonCertificateVerifier implements Serializable, CertificateVerifier {\n \n-  private transient CommonCertificateVerifier commonCertificateVerifier = new CommonCertificateVerifier();\n-  private transient CertificateSource trustedCertSource;\n+    private transient CommonCertificateVerifier commonCertificateVerifier = new CommonCertificateVerifier();\n+    private transient CertificateSource trustedCertSource;\n+\n \n-  public SKCommonCertificateVerifier() {\n+    public SKCommonCertificateVerifier() {\n     commonCertificateVerifier.setExceptionOnMissingRevocationData(false);\n-  }\n+    }\n \n-  @Override\n-  public CertificateSource getTrustedCertSource() {\n+    @Override\n+    public CertificateSource getTrustedCertSource() {\n     return commonCertificateVerifier.getTrustedCertSource();\n-  }\n+    }\n \n-  @Override\n-  public void setTrustedCertSource(final CertificateSource trustedCertSource) {\n+    @Override\n+    public void setTrustedCertSource(final CertificateSource trustedCertSource) {\n     this.trustedCertSource = trustedCertSource;\n     this.commonCertificateVerifier.setTrustedCertSource(trustedCertSource);\n-  }\n+    }\n \n-  @Override\n-  public OCSPSource getOcspSource() {\n+    @Override\n+    public OCSPSource getOcspSource() {\n     return this.commonCertificateVerifier.getOcspSource();\n-  }\n+    }\n \n-  @Override\n-  public CRLSource getCrlSource() {\n+    @Override\n+    public CRLSource getCrlSource() {\n     return this.commonCertificateVerifier.getCrlSource();\n-  }\n+    }\n \n-  @Override\n-  public void setCrlSource(final CRLSource crlSource) {\n+    @Override\n+    public void setCrlSource(final CRLSource crlSource) {\n     commonCertificateVerifier.setCrlSource(crlSource);\n-  }\n+    }\n \n-  @Override\n-  public void setOcspSource(final OCSPSource ocspSource) {\n+    @Override\n+    public void setOcspSource(final OCSPSource ocspSource) {\n     this.commonCertificateVerifier.setOcspSource(ocspSource);\n-  }\n+    }\n \n-  @Override\n-  public CertificateSource getAdjunctCertSource() {\n+    @Override\n+    public CertificateSource getAdjunctCertSource() {\n     return this.commonCertificateVerifier.getAdjunctCertSource();\n-  }\n+    }\n \n-  @Override\n-  public void setAdjunctCertSource(final CertificateSource adjunctCertSource) {\n+    @Override\n+    public void setAdjunctCertSource(final CertificateSource adjunctCertSource) {\n     this.commonCertificateVerifier.setAdjunctCertSource(adjunctCertSource);\n-  }\n+    }\n \n-  @Override\n-  public DataLoader getDataLoader() {\n+    @Override\n+    public DataLoader getDataLoader() {\n     return this.commonCertificateVerifier.getDataLoader();\n-  }\n+    }\n \n-  @Override\n-  public void setDataLoader(final DataLoader dataLoader) {\n+    @Override\n+    public void setDataLoader(final DataLoader dataLoader) {\n     this.commonCertificateVerifier.setDataLoader(dataLoader);\n-  }\n+    }\n \n-  @Override\n-  public ListCRLSource getSignatureCRLSource() {\n+    @Override\n+    public ListCRLSource getSignatureCRLSource() {\n     return this.commonCertificateVerifier.getSignatureCRLSource();\n-  }\n+    }\n \n-  @Override\n-  public void setSignatureCRLSource(final ListCRLSource signatureCRLSource) {\n+    @Override\n+    public void setSignatureCRLSource(final ListCRLSource signatureCRLSource) {\n     this.commonCertificateVerifier.setSignatureCRLSource(signatureCRLSource);\n-  }\n+    }\n \n-  @Override\n-  public ListOCSPSource getSignatureOCSPSource() {\n+    @Override\n+    public ListOCSPSource getSignatureOCSPSource() {\n     return this.commonCertificateVerifier.getSignatureOCSPSource();\n-  }\n+    }\n \n-  @Override\n-  public void setSignatureOCSPSource(final ListOCSPSource signatureOCSPSource) {\n+    @Override\n+    public void setSignatureOCSPSource(final ListOCSPSource signatureOCSPSource) {\n     this.commonCertificateVerifier.setSignatureOCSPSource(signatureOCSPSource);\n-  }\n+    }\n \n-  @Override\n-  public CertificatePool createValidationPool() {\n+    @Override\n+    public CertificatePool createValidationPool() {\n     if (this.trustedCertSource == null) {\n-      return this.commonCertificateVerifier.createValidationPool();\n+        return this.commonCertificateVerifier.createValidationPool();\n     }\n     return new LazyCertificatePool(this.trustedCertSource);\n-  }\n+    }\n \n-  @Override\n-  public void setDefaultDigestAlgorithm(DigestAlgorithm digestAlgorithm) {\n+    @Override\n+    public void setDefaultDigestAlgorithm(DigestAlgorithm digestAlgorithm) {\n     commonCertificateVerifier.setDefaultDigestAlgorithm(digestAlgorithm);\n-  }\n+    }\n \n-  @Override\n-  public DigestAlgorithm getDefaultDigestAlgorithm() {\n+    @Override\n+    public DigestAlgorithm getDefaultDigestAlgorithm() {\n     return commonCertificateVerifier.getDefaultDigestAlgorithm();\n-  }\n+    }\n \n-  @Override\n-  public void setExceptionOnMissingRevocationData(boolean throwExceptionOnMissingRevocationData) {\n+    @Override\n+    public void setExceptionOnMissingRevocationData(boolean throwExceptionOnMissingRevocationData) {\n     commonCertificateVerifier.setExceptionOnMissingRevocationData(throwExceptionOnMissingRevocationData);\n-  }\n+    }\n \n-  @Override\n-  public boolean isExceptionOnMissingRevocationData() {\n+    @Override\n+    public boolean isExceptionOnMissingRevocationData() {\n     return commonCertificateVerifier.isExceptionOnMissingRevocationData();\n-  }\n+    }\n \n-  @Override\n-  public boolean isExceptionOnUncoveredPOE() {\n+    @Override\n+    public boolean isExceptionOnUncoveredPOE() {\n     return commonCertificateVerifier.isExceptionOnUncoveredPOE();\n-  }\n+    }\n+\n \n-  public void setExceptionOnUncoveredPOE(boolean exceptionOnUncoveredPOE) {\n+    public void setExceptionOnUncoveredPOE(boolean exceptionOnUncoveredPOE) {\n     commonCertificateVerifier.setExceptionOnUncoveredPOE(exceptionOnUncoveredPOE);\n-  }\n+    }\n \n-  @Override\n-  public boolean isExceptionOnRevokedCertificate() {\n+    @Override\n+    public boolean isExceptionOnRevokedCertificate() {\n     return commonCertificateVerifier.isExceptionOnRevokedCertificate();\n-  }\n+    }\n \n-  @Override\n-  public void setExceptionOnRevokedCertificate(boolean exceptionOnRevokedCertificate) {\n+    @Override\n+    public void setExceptionOnRevokedCertificate(boolean exceptionOnRevokedCertificate) {\n     commonCertificateVerifier.setExceptionOnRevokedCertificate(exceptionOnRevokedCertificate);\n-  }\n+    }\n \n-  @Override\n-  public void setExceptionOnInvalidTimestamp(boolean throwExceptionOnInvalidTimestamp) {\n+    @Override\n+    public void setExceptionOnInvalidTimestamp(boolean throwExceptionOnInvalidTimestamp) {\n     commonCertificateVerifier.setExceptionOnInvalidTimestamp(throwExceptionOnInvalidTimestamp);\n-  }\n+    }\n \n-  @Override\n-  public boolean isExceptionOnInvalidTimestamp() {\n+    @Override\n+    public boolean isExceptionOnInvalidTimestamp() {\n     return commonCertificateVerifier.isExceptionOnInvalidTimestamp();\n-  }\n+    }\n \n-  @Override\n-  public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n+    @Override\n+    public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n     commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n-  }\n+    }\n \n-  @Override\n-  public boolean isExceptionOnNoRevocationAfterBestSignatureTime() {\n+    @Override\n+    public boolean isExceptionOnNoRevocationAfterBestSignatureTime() {\n     return commonCertificateVerifier.isExceptionOnNoRevocationAfterBestSignatureTime();\n-  }\n+    }\n \n-  @Override\n-  public boolean isCheckRevocationForUntrustedChains() {\n+    @Override\n+    public boolean isCheckRevocationForUntrustedChains() {\n     return commonCertificateVerifier.isCheckRevocationForUntrustedChains();\n-  }\n+    }\n \n-  @Override\n-  public void setCheckRevocationForUntrustedChains(boolean checkRevocationForUntrustedChains) {\n+    @Override\n+    public void setCheckRevocationForUntrustedChains(boolean checkRevocationForUntrustedChains) {\n     commonCertificateVerifier.setCheckRevocationForUntrustedChains(checkRevocationForUntrustedChains);\n-  }\n+    }\n \n-  @Override\n-  public void setIncludeCertificateTokenValues(boolean includeCertificateTokens) {\n+    @Override\n+    public void setIncludeCertificateTokenValues(boolean includeCertificateTokens) {\n     commonCertificateVerifier.setIncludeCertificateTokenValues(includeCertificateTokens);\n-  }\n+    }\n \n-  @Override\n-  public boolean isIncludeCertificateTokenValues() {\n+    @Override\n+    public boolean isIncludeCertificateTokenValues() {\n     return commonCertificateVerifier.isIncludeCertificateTokenValues();\n-  }\n+    }\n \n-  @Override\n-  public void setIncludeCertificateRevocationValues(boolean include) {\n+    @Override\n+    public void setIncludeCertificateRevocationValues(boolean include) {\n     commonCertificateVerifier.setIncludeCertificateRevocationValues(include);\n-  }\n+    }\n \n-  @Override\n-  public boolean isIncludeCertificateRevocationValues() {\n+    @Override\n+    public boolean isIncludeCertificateRevocationValues() {\n     return commonCertificateVerifier.isIncludeCertificateRevocationValues();\n-  }\n+    }\n \n-  @Override\n-  public void setIncludeTimestampTokenValues(boolean include) {\n+    @Override\n+    public void setIncludeTimestampTokenValues(boolean include) {\n     commonCertificateVerifier.setIncludeTimestampTokenValues(include);\n-  }\n+    }\n \n-  @Override\n-  public boolean isIncludeTimestampTokenValues() {\n+    @Override\n+    public boolean isIncludeTimestampTokenValues() {\n     return commonCertificateVerifier.isIncludeTimestampTokenValues();\n-  }\n+    }\n   \n   /*\n    * RESTRICTED METHODS\n    */\n \n-  private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {\n+    private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {\n     stream.defaultReadObject();\n     this.commonCertificateVerifier = new CommonCertificateVerifier();\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 118
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_random/40/SKCommonCertificateVerifier.java\nindex c48da56fd8..a3190acc92 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_random/40/SKCommonCertificateVerifier.java\n@@ -170,9 +170,7 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n   @Override\n   public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n     commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n-  }\n-\n-  @Override\n+    }@Override\n   public boolean isExceptionOnNoRevocationAfterBestSignatureTime() {\n     return commonCertificateVerifier.isExceptionOnNoRevocationAfterBestSignatureTime();\n   }\n@@ -216,7 +214,7 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n   public boolean isIncludeTimestampTokenValues() {\n     return commonCertificateVerifier.isIncludeTimestampTokenValues();\n   }\n-  \n+\n   /*\n    * RESTRICTED METHODS\n    */\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "column": "119",
                    "severity": "error",
                    "message": "'{' at column 119 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_three_grams/40/SKCommonCertificateVerifier.java\nindex c48da56fd8..836de4835e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/40/SKCommonCertificateVerifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_three_grams/40/SKCommonCertificateVerifier.java\n@@ -168,62 +168,63 @@ public class SKCommonCertificateVerifier implements Serializable, CertificateVer\n   }\n \n   @Override\n-  public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) {\n-    commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(exceptionOnNoRevocationAfterBestSignatureTime);\n-  }\n+  public void setExceptionOnNoRevocationAfterBestSignatureTime(boolean exceptionOnNoRevocationAfterBestSignatureTime) { commonCertificateVerifier.setExceptionOnNoRevocationAfterBestSignatureTime(\n \n-  @Override\n-  public boolean isExceptionOnNoRevocationAfterBestSignatureTime() {\n-    return commonCertificateVerifier.isExceptionOnNoRevocationAfterBestSignatureTime();\n-  }\n+  exceptionOnNoRevocationAfterBestSignatureTime );\n+}\n \n-  @Override\n-  public boolean isCheckRevocationForUntrustedChains() {\n-    return commonCertificateVerifier.isCheckRevocationForUntrustedChains();\n-  }\n+@Override\n+public boolean isExceptionOnNoRevocationAfterBestSignatureTime() {\n+  return commonCertificateVerifier.isExceptionOnNoRevocationAfterBestSignatureTime();\n+}\n \n-  @Override\n-  public void setCheckRevocationForUntrustedChains(boolean checkRevocationForUntrustedChains) {\n-    commonCertificateVerifier.setCheckRevocationForUntrustedChains(checkRevocationForUntrustedChains);\n-  }\n+@Override\n+public boolean isCheckRevocationForUntrustedChains() {\n+  return commonCertificateVerifier.isCheckRevocationForUntrustedChains();\n+}\n \n-  @Override\n-  public void setIncludeCertificateTokenValues(boolean includeCertificateTokens) {\n-    commonCertificateVerifier.setIncludeCertificateTokenValues(includeCertificateTokens);\n-  }\n+@Override\n+public void setCheckRevocationForUntrustedChains(boolean checkRevocationForUntrustedChains) {\n+  commonCertificateVerifier.setCheckRevocationForUntrustedChains(checkRevocationForUntrustedChains);\n+}\n \n-  @Override\n-  public boolean isIncludeCertificateTokenValues() {\n-    return commonCertificateVerifier.isIncludeCertificateTokenValues();\n-  }\n+@Override\n+public void setIncludeCertificateTokenValues(boolean includeCertificateTokens) {\n+  commonCertificateVerifier.setIncludeCertificateTokenValues(includeCertificateTokens);\n+}\n \n-  @Override\n-  public void setIncludeCertificateRevocationValues(boolean include) {\n-    commonCertificateVerifier.setIncludeCertificateRevocationValues(include);\n-  }\n+@Override\n+public boolean isIncludeCertificateTokenValues() {\n+  return commonCertificateVerifier.isIncludeCertificateTokenValues();\n+}\n \n-  @Override\n-  public boolean isIncludeCertificateRevocationValues() {\n-    return commonCertificateVerifier.isIncludeCertificateRevocationValues();\n-  }\n+@Override\n+public void setIncludeCertificateRevocationValues(boolean include) {\n+  commonCertificateVerifier.setIncludeCertificateRevocationValues(include);\n+}\n \n-  @Override\n-  public void setIncludeTimestampTokenValues(boolean include) {\n-    commonCertificateVerifier.setIncludeTimestampTokenValues(include);\n-  }\n+@Override\n+public boolean isIncludeCertificateRevocationValues() {\n+  return commonCertificateVerifier.isIncludeCertificateRevocationValues();\n+}\n \n-  @Override\n-  public boolean isIncludeTimestampTokenValues() {\n-    return commonCertificateVerifier.isIncludeTimestampTokenValues();\n-  }\n-  \n-  /*\n+@Override\n+public void setIncludeTimestampTokenValues(boolean include) {\n+  commonCertificateVerifier.setIncludeTimestampTokenValues(include);\n+}\n+\n+@Override\n+public boolean isIncludeTimestampTokenValues() {\n+  return commonCertificateVerifier.isIncludeTimestampTokenValues();\n+}\n+\n+/*\n    * RESTRICTED METHODS\n    */\n \n-  private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {\n-    stream.defaultReadObject();\n-    this.commonCertificateVerifier = new CommonCertificateVerifier();\n-  }\n+private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {\n+  stream.defaultReadObject();\n+  this.commonCertificateVerifier = new CommonCertificateVerifier();\n+}\n \n }\n",
            "diff_size": 50
        }
    ]
}