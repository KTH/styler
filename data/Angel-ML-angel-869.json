{
    "error_id": "869",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/869/IncrementRows.java\nindex eecfe5450b..62656b5c38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/869/IncrementRows.java\n@@ -31,29 +31,29 @@ import java.util.List;\n  */\n public class IncrementRows extends UpdateFunc {\n \n-  /**\n-   * Create a new UpdateParam\n-   */\n-  public IncrementRows(UpdateParam param) {\n-    super(param);\n-  }\n-\n-  public IncrementRows() {\n-    this(null);\n-  }\n-\n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    PartIncrementRowsParam partUpdateRowsParam = (PartIncrementRowsParam) partParam;\n-    List<RowUpdateSplit> updates = partUpdateRowsParam.getUpdates();\n-    for (RowUpdateSplit update : updates) {\n-      getVector(partUpdateRowsParam.getMatrixId(), update.getRowId(), partParam.getPartKey())\n-          .iadd(update.getVector());\n+    /**\n+     * Create a new UpdateParam\n+     */\n+    public IncrementRows(UpdateParam param) {\n+        super(param);\n     }\n-  }\n \n-  private Vector getVector(int matrixId, int rowId, PartitionKey part) {\n-    return psContext.getMatrixStorageManager().getMatrix(matrixId)\n-        .getPartition(part.getPartitionId()).getRow(rowId).getSplit();\n-  }\n+    public IncrementRows() {\n+        this(null);\n+    }\n+\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        PartIncrementRowsParam partUpdateRowsParam = (PartIncrementRowsParam) partParam;\n+        List<RowUpdateSplit> updates = partUpdateRowsParam.getUpdates();\n+        for (RowUpdateSplit update : updates) {\n+            getVector(partUpdateRowsParam.getMatrixId(), update.getRowId(), partParam.getPartKey())\n+                    .iadd(update.getVector());\n+        }\n+    }\n+\n+    private Vector getVector(int matrixId, int rowId, PartitionKey part) {\n+        return psContext.getMatrixStorageManager().getMatrix(matrixId)\n+                .getPartition(part.getPartitionId()).getRow(rowId).getSplit();\n+    }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/869/IncrementRows.java\nindex eecfe5450b..8073914535 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/869/IncrementRows.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.matrix.psf.update.update;\n \n import com.tencent.angel.PartitionKey;\n@@ -56,4 +55,4 @@ public class IncrementRows extends UpdateFunc {\n     return psContext.getMatrixStorageManager().getMatrix(matrixId)\n         .getPartition(part.getPartitionId()).getRow(rowId).getSplit();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/869/IncrementRows.java\nindex eecfe5450b..b5054089a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/869/IncrementRows.java\n@@ -29,31 +29,32 @@ import java.util.List;\n /**\n  * Increment PS matrix rows\n  */\n+\n public class IncrementRows extends UpdateFunc {\n \n   /**\n    * Create a new UpdateParam\n    */\n-  public IncrementRows(UpdateParam param) {\n+\n+    public IncrementRows(UpdateParam param) {\n     super(param);\n-  }\n+    }\n \n-  public IncrementRows() {\n+    public IncrementRows() {\n     this(null);\n-  }\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n     PartIncrementRowsParam partUpdateRowsParam = (PartIncrementRowsParam) partParam;\n     List<RowUpdateSplit> updates = partUpdateRowsParam.getUpdates();\n     for (RowUpdateSplit update : updates) {\n-      getVector(partUpdateRowsParam.getMatrixId(), update.getRowId(), partParam.getPartKey())\n-          .iadd(update.getVector());\n+        getVector(partUpdateRowsParam.getMatrixId(), update.getRowId(), partParam.getPartKey()).iadd(update.getVector());\n+    }\n+    }\n+\n+    private Vector getVector(int matrixId, int rowId, PartitionKey part) {\n+    return psContext.getMatrixStorageManager().getMatrix(matrixId).getPartition(part.getPartitionId()).getRow(rowId).getSplit();\n     }\n-  }\n \n-  private Vector getVector(int matrixId, int rowId, PartitionKey part) {\n-    return psContext.getMatrixStorageManager().getMatrix(matrixId)\n-        .getPartition(part.getPartitionId()).getRow(rowId).getSplit();\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/869/IncrementRows.java\nindex eecfe5450b..1fb1fd30fa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/869/IncrementRows.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/869/IncrementRows.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.matrix.psf.update.update;\n \n import com.tencent.angel.PartitionKey;\n",
            "diff_size": 1
        }
    ]
}