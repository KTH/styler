{
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "50",
                "column": "97",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n        throw new IllegalStateException(\n                \"The entity value serializer can only be used for data going to the database, \" +\n                        \"and not data coming from the database\" );\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler/53/EntityValueSerializer.java\nindex d0e18d42ac..0ac631991d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler/53/EntityValueSerializer.java\n@@ -47,7 +47,7 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n-    }\n+                \"The entity value serializer can only be used for data going to the database, \"\n+                        + \"and not data coming from the database\" );\n+}\n }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "column": "46",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "53",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "38",
                    "column": "46",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "54",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "column": "89",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/53/EntityValueSerializer.java\nindex d0e18d42ac..7de9edf8ec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/53/EntityValueSerializer.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.cassandra;\n \n \n@@ -28,26 +29,24 @@ import static org.apache.usergrid.utils.ConversionUtils.bytebuffer;\n \n public class EntityValueSerializer extends AbstractSerializer<Object> {\n \n-    @Override\n-    public ByteBuffer toByteBuffer( Object obj ) {\n-        ByteBuffer bytes = null;\n-        if ( obj instanceof List ) {\n-            bytes = DynamicComposite.toByteBuffer( ( List<?> ) obj );\n-        }\n-        else if ( obj instanceof Object[] ) {\n-            bytes = DynamicComposite.toByteBuffer( ( Object[] ) obj );\n-        }\n-        else {\n-            bytes = bytebuffer( obj );\n-        }\n-        return bytes;\n+  @Override\n+  public ByteBuffer toByteBuffer(Object obj) {\n+    ByteBuffer bytes = null;\n+    if (obj instanceof List) {\n+      bytes = DynamicComposite.toByteBuffer((List<?>) obj);\n+    } else if (obj instanceof Object[]) {\n+      bytes = DynamicComposite.toByteBuffer((Object[]) obj);\n+    } else {\n+      bytes = bytebuffer(obj);\n     }\n+    return bytes;\n+  }\n \n \n-    @Override\n-    public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n-        throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n-    }\n+  @Override\n+  public Object fromByteBuffer(ByteBuffer byteBuffer) {\n+    throw new IllegalStateException(\n+        \"The entity value serializer can only be used for data going to the database, \" +\n+            \"and not data coming from the database\");\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/53/EntityValueSerializer.java\nindex d0e18d42ac..97b666c6ad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/53/EntityValueSerializer.java\n@@ -47,7 +47,6 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+                \"The entity value serializer can only be used for data going to the database, \" + \"and not data coming from the database\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/53/EntityValueSerializer.java\nindex d0e18d42ac..83dd1ce9db 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/53/EntityValueSerializer.java\n@@ -19,7 +19,6 @@ package org.apache.usergrid.persistence.cassandra;\n \n import java.nio.ByteBuffer;\n import java.util.List;\n-\n import me.prettyprint.cassandra.serializers.AbstractSerializer;\n import me.prettyprint.hector.api.beans.DynamicComposite;\n \n@@ -38,7 +37,7 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n             bytes = DynamicComposite.toByteBuffer( ( Object[] ) obj );\n         }\n         else {\n-            bytes = bytebuffer( obj );\n+                 bytes = bytebuffer( obj );\n         }\n         return bytes;\n     }\n@@ -46,8 +45,6 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n \n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n-        throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n+        throw new IllegalStateException( \"The entity value serializer can only be used for data going to the database, \" + \"and not data coming from the database\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_random/53/EntityValueSerializer.java\nindex d0e18d42ac..0ac631991d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_random/53/EntityValueSerializer.java\n@@ -47,7 +47,7 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n-    }\n+                \"The entity value serializer can only be used for data going to the database, \"\n+                        + \"and not data coming from the database\" );\n+}\n }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/53/EntityValueSerializer.java\nindex d0e18d42ac..850c77e6bc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/53/EntityValueSerializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/53/EntityValueSerializer.java\n@@ -47,7 +47,9 @@ public class EntityValueSerializer extends AbstractSerializer<Object> {\n     @Override\n     public Object fromByteBuffer( ByteBuffer byteBuffer ) {\n         throw new IllegalStateException(\n-                \"The entity value serializer can only be used for data going to the database, \" +\n-                        \"and not data coming from the database\" );\n-    }\n-}\n+                \"The entity value serializer can only be used for data going to the database, \"\n+                +\n+                         \"and not data coming from the database\" );\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 6
        }
    ]
}