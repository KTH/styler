{
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "22",
                "column": "71",
                "severity": "error",
                "message": "'}' at column 71 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidDataAvailability constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "column": "71",
                    "severity": "error",
                    "message": "'}' at column 71 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/133/ValidDataAvailabilityValidator.java\nindex 01762e08d9..ea49ff4280 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/133/ValidDataAvailabilityValidator.java\n@@ -11,7 +11,7 @@ import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n  * \n  * @author Daniel Katzberg\n  */\n-public class ValidDataAvailabilityValidator implements \n+public class ValidDataAvailabilityValidator implements\n     ConstraintValidator<ValidDataAvailability, I18nString> {\n \n   /*\n@@ -28,7 +28,7 @@ public class ValidDataAvailabilityValidator implements\n    */\n   @Override\n   public boolean isValid(I18nString dataAvailability, ConstraintValidatorContext context) {\n-    \n+\n     if (dataAvailability == null) {\n       return true;\n     }\n@@ -37,5 +37,5 @@ public class ValidDataAvailabilityValidator implements\n     return DataAvailabilities.ALL.contains(dataAvailability);\n   }\n \n-  \n+\n }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/133/ValidDataAvailabilityValidator.java\nindex 01762e08d9..911c39a733 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/133/ValidDataAvailabilityValidator.java\n@@ -8,10 +8,10 @@ import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n \n /**\n  * Checks the dataAvaibility field for valid values.\n- * \n+ *\n  * @author Daniel Katzberg\n  */\n-public class ValidDataAvailabilityValidator implements \n+public class ValidDataAvailabilityValidator implements\n     ConstraintValidator<ValidDataAvailability, I18nString> {\n \n   /*\n@@ -19,16 +19,17 @@ public class ValidDataAvailabilityValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidDataAvailability constraintAnnotation) {}\n+  public void initialize(ValidDataAvailability constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n+   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(I18nString dataAvailability, ConstraintValidatorContext context) {\n-    \n+\n     if (dataAvailability == null) {\n       return true;\n     }\n@@ -37,5 +38,5 @@ public class ValidDataAvailabilityValidator implements\n     return DataAvailabilities.ALL.contains(dataAvailability);\n   }\n \n-  \n+\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "column": "71",
                    "severity": "error",
                    "message": "'}' at column 71 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/133/ValidDataAvailabilityValidator.java\nindex 01762e08d9..73bde4cba3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/133/ValidDataAvailabilityValidator.java\n@@ -13,7 +13,6 @@ import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n  */\n public class ValidDataAvailabilityValidator implements \n     ConstraintValidator<ValidDataAvailability, I18nString> {\n-\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -28,8 +27,7 @@ public class ValidDataAvailabilityValidator implements\n    */\n   @Override\n   public boolean isValid(I18nString dataAvailability, ConstraintValidatorContext context) {\n-    \n-    if (dataAvailability == null) {\n+  if (dataAvailability == null) {\n       return true;\n     }\n \n@@ -37,5 +35,4 @@ public class ValidDataAvailabilityValidator implements\n     return DataAvailabilities.ALL.contains(dataAvailability);\n   }\n \n-  \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/133/ValidDataAvailabilityValidator.java\nindex 01762e08d9..8c95e643d4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/133/ValidDataAvailabilityValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.studymanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n \n@@ -11,31 +10,36 @@ import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n  * \n  * @author Daniel Katzberg\n  */\n-public class ValidDataAvailabilityValidator implements \n-    ConstraintValidator<ValidDataAvailability, I18nString> {\n+\n+\n+public class ValidDataAvailabilityValidator implements ConstraintValidator<ValidDataAvailability, I18nString> {\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidDataAvailability constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidDataAvailability constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(I18nString dataAvailability, ConstraintValidatorContext context) {\n-    \n+\n+\n+    @Override\n+    public boolean isValid(I18nString dataAvailability,\n+        ConstraintValidatorContext context) {\n     if (dataAvailability == null) {\n-      return true;\n+        return true;\n     }\n \n     // check for data avaibility\n-    return DataAvailabilities.ALL.contains(dataAvailability);\n-  }\n \n-  \n-}\n+    return DataAvailabilities.ALL.contains(dataAvailability);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "column": "71",
                    "severity": "error",
                    "message": "'}' at column 71 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/133/ValidDataAvailabilityValidator.java\nindex 01762e08d9..ea49ff4280 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/133/ValidDataAvailabilityValidator.java\n@@ -11,7 +11,7 @@ import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n  * \n  * @author Daniel Katzberg\n  */\n-public class ValidDataAvailabilityValidator implements \n+public class ValidDataAvailabilityValidator implements\n     ConstraintValidator<ValidDataAvailability, I18nString> {\n \n   /*\n@@ -28,7 +28,7 @@ public class ValidDataAvailabilityValidator implements\n    */\n   @Override\n   public boolean isValid(I18nString dataAvailability, ConstraintValidatorContext context) {\n-    \n+\n     if (dataAvailability == null) {\n       return true;\n     }\n@@ -37,5 +37,5 @@ public class ValidDataAvailabilityValidator implements\n     return DataAvailabilities.ALL.contains(dataAvailability);\n   }\n \n-  \n+\n }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/133/ValidDataAvailabilityValidator.java\nindex 01762e08d9..107d11a3d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/133/ValidDataAvailabilityValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/133/ValidDataAvailabilityValidator.java\n@@ -11,7 +11,7 @@ import eu.dzhw.fdz.metadatamanagement.studymanagement.domain.DataAvailabilities;\n  * \n  * @author Daniel Katzberg\n  */\n-public class ValidDataAvailabilityValidator implements \n+public class ValidDataAvailabilityValidator implements\n     ConstraintValidator<ValidDataAvailability, I18nString> {\n \n   /*\n@@ -19,16 +19,15 @@ public class ValidDataAvailabilityValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidDataAvailability constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidDataAvailability constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(I18nString dataAvailability, ConstraintValidatorContext context) {\n-    \n+\n     if (dataAvailability == null) {\n       return true;\n     }\n@@ -37,5 +36,5 @@ public class ValidDataAvailabilityValidator implements\n     return DataAvailabilities.ALL.contains(dataAvailability);\n   }\n \n-  \n+\n }\n",
            "diff_size": 6
        }
    ]
}