{
    "error_id": "82",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n\n/** @author tnine */\npublic class StringLiteralTest {\n\n    @Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler/82/StringLiteralTest.java\nindex 08bfbc8954..68a7b3ec35 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler/82/StringLiteralTest.java\n@@ -73,7 +73,7 @@ public class StringLiteralTest {\n         StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value*'\" ) );\n \n         assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n+        assertEquals( \"value\uffff\", literal.getEndValue() );\n     }\n \n \n@@ -83,6 +83,6 @@ public class StringLiteralTest {\n         StringLiteral literal = new StringLiteral( \"value*\" );\n \n         assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n+        assertEquals( \"value\uffff\", literal.getEndValue() );\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/82/StringLiteralTest.java\nindex 08bfbc8954..322fa89aa7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/82/StringLiteralTest.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query.tree;\n \n \n@@ -24,65 +25,67 @@ import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNull;\n \n \n-/** @author tnine */\n+/**\n+ * @author tnine\n+ */\n public class StringLiteralTest {\n \n-    @Test\n-    public void exactToken() {\n+  @Test\n+  public void exactToken() {\n \n-        StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value'\" ) );\n+    StringLiteral literal = new StringLiteral(new CommonToken(0, \"'value'\"));\n \n-        assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\", literal.getEndValue() );\n-    }\n+    assertEquals(\"value\", literal.getValue());\n+    assertEquals(\"value\", literal.getEndValue());\n+  }\n \n \n-    @Test\n-    public void exactString() {\n+  @Test\n+  public void exactString() {\n \n-        StringLiteral literal = new StringLiteral( \"value\" );\n+    StringLiteral literal = new StringLiteral(\"value\");\n \n-        assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\", literal.getEndValue() );\n-    }\n+    assertEquals(\"value\", literal.getValue());\n+    assertEquals(\"value\", literal.getEndValue());\n+  }\n \n \n-    @Test\n-    public void wildcardToken() {\n+  @Test\n+  public void wildcardToken() {\n \n-        StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'*'\" ) );\n+    StringLiteral literal = new StringLiteral(new CommonToken(0, \"'*'\"));\n \n-        assertNull( literal.getValue() );\n-        assertNull( literal.getEndValue() );\n-    }\n+    assertNull(literal.getValue());\n+    assertNull(literal.getEndValue());\n+  }\n \n \n-    @Test\n-    public void wildcardString() {\n+  @Test\n+  public void wildcardString() {\n \n-        StringLiteral literal = new StringLiteral( \"*\" );\n+    StringLiteral literal = new StringLiteral(\"*\");\n \n-        assertNull( literal.getValue() );\n-        assertNull( literal.getEndValue() );\n-    }\n+    assertNull(literal.getValue());\n+    assertNull(literal.getEndValue());\n+  }\n \n \n-    @Test\n-    public void wildcardEndToken() {\n+  @Test\n+  public void wildcardEndToken() {\n \n-        StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value*'\" ) );\n+    StringLiteral literal = new StringLiteral(new CommonToken(0, \"'value*'\"));\n \n-        assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n-    }\n+    assertEquals(\"value\", literal.getValue());\n+    assertEquals(\"value\\uffff\", literal.getEndValue());\n+  }\n \n \n-    @Test\n-    public void wildcardEndString() {\n+  @Test\n+  public void wildcardEndString() {\n \n-        StringLiteral literal = new StringLiteral( \"value*\" );\n+    StringLiteral literal = new StringLiteral(\"value*\");\n \n-        assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n-    }\n+    assertEquals(\"value\", literal.getValue());\n+    assertEquals(\"value\\uffff\", literal.getEndValue());\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/82/StringLiteralTest.java\nindex 08bfbc8954..2f0c8fdbc7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/82/StringLiteralTest.java\n@@ -85,4 +85,4 @@ public class StringLiteralTest {\n         assertEquals( \"value\", literal.getValue() );\n         assertEquals( \"value\\uffff\", literal.getEndValue() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/82/StringLiteralTest.java\nindex 08bfbc8954..04a9216a8d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/82/StringLiteralTest.java\n@@ -25,13 +25,13 @@ import static org.junit.Assert.assertNull;\n \n \n /** @author tnine */\n+\n+\n public class StringLiteralTest {\n \n     @Test\n     public void exactToken() {\n-\n         StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value'\" ) );\n-\n         assertEquals( \"value\", literal.getValue() );\n         assertEquals( \"value\", literal.getEndValue() );\n     }\n@@ -39,9 +39,7 @@ public class StringLiteralTest {\n \n     @Test\n     public void exactString() {\n-\n         StringLiteral literal = new StringLiteral( \"value\" );\n-\n         assertEquals( \"value\", literal.getValue() );\n         assertEquals( \"value\", literal.getEndValue() );\n     }\n@@ -49,9 +47,7 @@ public class StringLiteralTest {\n \n     @Test\n     public void wildcardToken() {\n-\n         StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'*'\" ) );\n-\n         assertNull( literal.getValue() );\n         assertNull( literal.getEndValue() );\n     }\n@@ -59,9 +55,7 @@ public class StringLiteralTest {\n \n     @Test\n     public void wildcardString() {\n-\n         StringLiteral literal = new StringLiteral( \"*\" );\n-\n         assertNull( literal.getValue() );\n         assertNull( literal.getEndValue() );\n     }\n@@ -69,9 +63,7 @@ public class StringLiteralTest {\n \n     @Test\n     public void wildcardEndToken() {\n-\n         StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value*'\" ) );\n-\n         assertEquals( \"value\", literal.getValue() );\n         assertEquals( \"value\\uffff\", literal.getEndValue() );\n     }\n@@ -79,10 +71,8 @@ public class StringLiteralTest {\n \n     @Test\n     public void wildcardEndString() {\n-\n         StringLiteral literal = new StringLiteral( \"value*\" );\n-\n         assertEquals( \"value\", literal.getValue() );\n         assertEquals( \"value\\uffff\", literal.getEndValue() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_random/82/StringLiteralTest.java\nindex 08bfbc8954..68a7b3ec35 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_random/82/StringLiteralTest.java\n@@ -73,7 +73,7 @@ public class StringLiteralTest {\n         StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value*'\" ) );\n \n         assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n+        assertEquals( \"value\uffff\", literal.getEndValue() );\n     }\n \n \n@@ -83,6 +83,6 @@ public class StringLiteralTest {\n         StringLiteral literal = new StringLiteral( \"value*\" );\n \n         assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n+        assertEquals( \"value\uffff\", literal.getEndValue() );\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/82/StringLiteralTest.java\nindex 08bfbc8954..c04c77707f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/82/StringLiteralTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/82/StringLiteralTest.java\n@@ -23,7 +23,6 @@ import org.junit.Test;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNull;\n \n-\n /** @author tnine */\n public class StringLiteralTest {\n \n@@ -73,7 +72,7 @@ public class StringLiteralTest {\n         StringLiteral literal = new StringLiteral( new CommonToken( 0, \"'value*'\" ) );\n \n         assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n+        assertEquals( \"value\uffff\", literal.getEndValue() );\n     }\n \n \n@@ -83,6 +82,6 @@ public class StringLiteralTest {\n         StringLiteral literal = new StringLiteral( \"value*\" );\n \n         assertEquals( \"value\", literal.getValue() );\n-        assertEquals( \"value\\uffff\", literal.getEndValue() );\n+        assertEquals( \"value\uffff\", literal.getEndValue() );\n     }\n }\n",
            "diff_size": 3
        }
    ]
}