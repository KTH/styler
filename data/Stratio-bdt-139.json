{
    "error_id": "139",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.aspects;\n\nimport com.stratio.qa.utils.ThreadProperty;\nimport org.testng.annotations.Test;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/139/MandatoryAspectTest.java\nindex 20ddb2ed91..0694456c5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/139/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/139/MandatoryAspectTest.java\nindex 20ddb2ed91..bc2160d73b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/139/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -31,7 +32,8 @@ public class MandatoryAspectTest {\n         MandatoryAspect mandAspect = new MandatoryAspect();\n         List<String> tagList = new ArrayList<>();\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag should make feature run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"No mandatory tag should make feature run.\").isEqualTo(true);\n     }\n \n     @Test\n@@ -41,7 +43,8 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@mandatory\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"No vars tag should make feature run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"No vars tag should make feature run.\").isEqualTo(true);\n     }\n \n     @Test\n@@ -51,7 +54,9 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@vars\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag with vars tag should make feature run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"No mandatory tag with vars tag should make feature run.\")\n+            .isEqualTo(true);\n     }\n \n     @Test\n@@ -63,7 +68,9 @@ public class MandatoryAspectTest {\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"Not defined variable should make feature not to run.\")\n+            .isEqualTo(false);\n         System.clearProperty(\"SYSTEM\");\n     }\n \n@@ -75,7 +82,9 @@ public class MandatoryAspectTest {\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"Not defined variable should make feature not to run.\")\n+            .isEqualTo(false);\n     }\n \n     @Test\n@@ -87,7 +96,8 @@ public class MandatoryAspectTest {\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n \n-        assertThat(mandAspect.manageTags(tagList)).as(\"Defined variable should make feature to run.\").isEqualTo(true);\n+        assertThat(mandAspect.manageTags(tagList))\n+            .as(\"Defined variable should make feature to run.\").isEqualTo(true);\n         System.clearProperty(\"SSH\");\n     }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/139/MandatoryAspectTest.java\nindex 20ddb2ed91..e778f7a0b9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/139/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -90,4 +91,4 @@ public class MandatoryAspectTest {\n         assertThat(mandAspect.manageTags(tagList)).as(\"Defined variable should make feature to run.\").isEqualTo(true);\n         System.clearProperty(\"SSH\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/139/MandatoryAspectTest.java\nindex 20ddb2ed91..976fc1288a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/139/MandatoryAspectTest.java\n@@ -17,12 +17,12 @@ package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n import org.testng.annotations.Test;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n import static org.assertj.core.api.Assertions.assertThat;\n \n+\n public class MandatoryAspectTest {\n \n     @Test\n@@ -30,30 +30,30 @@ public class MandatoryAspectTest {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         MandatoryAspect mandAspect = new MandatoryAspect();\n         List<String> tagList = new ArrayList<>();\n-\n         assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag should make feature run.\").isEqualTo(true);\n     }\n \n+\n     @Test\n     public void noVarsTag() {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         MandatoryAspect mandAspect = new MandatoryAspect();\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@mandatory\");\n-\n         assertThat(mandAspect.manageTags(tagList)).as(\"No vars tag should make feature run.\").isEqualTo(true);\n     }\n \n+\n     @Test\n     public void onlyVarsTag() {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         MandatoryAspect mandAspect = new MandatoryAspect();\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@vars\");\n-\n         assertThat(mandAspect.manageTags(tagList)).as(\"No mandatory tag with vars tag should make feature run.\").isEqualTo(true);\n     }\n \n+\n     @Test\n     public void notDefinedVariableButVariablesDefined() {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -62,11 +62,11 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n-\n         assertThat(mandAspect.manageTags(tagList)).as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n         System.clearProperty(\"SYSTEM\");\n     }\n \n+\n     @Test\n     public void notDefinedVariable() {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -74,10 +74,10 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n-\n         assertThat(mandAspect.manageTags(tagList)).as(\"Not defined variable should make feature not to run.\").isEqualTo(false);\n     }\n \n+\n     @Test\n     public void definedVariable() {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -86,8 +86,7 @@ public class MandatoryAspectTest {\n         List<String> tagList = new ArrayList<>();\n         tagList.add(0, \"@mandatory\");\n         tagList.add(1, \"@vars(SSH)\");\n-\n         assertThat(mandAspect.manageTags(tagList)).as(\"Defined variable should make feature to run.\").isEqualTo(true);\n         System.clearProperty(\"SSH\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/139/MandatoryAspectTest.java\nindex 20ddb2ed91..0694456c5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/139/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/139/MandatoryAspectTest.java\nindex 20ddb2ed91..0694456c5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/139/MandatoryAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/139/MandatoryAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        }
    ]
}