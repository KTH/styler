{
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "8",
                "severity": "warning",
                "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n    SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n    for(int i = 0;i < 4;++i) {\n      Assert.assertFalse(clonedPolicy.mark(null, i));\n    }\n    Assert.assertTrue(clonedPolicy.mark(null, 5));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler/13/ClonedSyncPolicyCreatorTest.java\nindex 092bf0f9d8..2dbff28346 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler/13/ClonedSyncPolicyCreatorTest.java\n@@ -31,7 +31,7 @@ public class ClonedSyncPolicyCreatorTest {\n     ClonedSyncPolicyCreator creator = new ClonedSyncPolicyCreator(basePolicy);\n     //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n     SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n-    for(int i = 0;i < 4;++i) {\n+    for (int i = 0;i < 4;++i) {\n       Assert.assertFalse(clonedPolicy.mark(null, i));\n     }\n     Assert.assertTrue(clonedPolicy.mark(null, 5));\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/13/ClonedSyncPolicyCreatorTest.java\nindex 092bf0f9d8..50b90b61a6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/13/ClonedSyncPolicyCreatorTest.java\n@@ -31,7 +31,7 @@ public class ClonedSyncPolicyCreatorTest {\n     ClonedSyncPolicyCreator creator = new ClonedSyncPolicyCreator(basePolicy);\n     //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n     SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n-    for(int i = 0;i < 4;++i) {\n+    for (int i = 0; i < 4; ++i) {\n       Assert.assertFalse(clonedPolicy.mark(null, i));\n     }\n     Assert.assertTrue(clonedPolicy.mark(null, 5));\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/13/ClonedSyncPolicyCreatorTest.java\nindex 092bf0f9d8..a05b006848 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/13/ClonedSyncPolicyCreatorTest.java\n@@ -31,7 +31,8 @@ public class ClonedSyncPolicyCreatorTest {\n     ClonedSyncPolicyCreator creator = new ClonedSyncPolicyCreator(basePolicy);\n     //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n     SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n-    for(int i = 0;i < 4;++i) {\n+    for (int i = 0;\n+i < 4;++i) {\n       Assert.assertFalse(clonedPolicy.mark(null, i));\n     }\n     Assert.assertTrue(clonedPolicy.mark(null, 5));\n@@ -39,4 +40,4 @@ public class ClonedSyncPolicyCreatorTest {\n     clonedPolicy = creator.create(\"blah\", null);\n     Assert.assertFalse(clonedPolicy.mark(null, 0));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "column": "8",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 9, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/13/ClonedSyncPolicyCreatorTest.java\nindex 092bf0f9d8..59d55aef07 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/13/ClonedSyncPolicyCreatorTest.java\n@@ -25,18 +25,20 @@ import org.junit.Test;\n \n public class ClonedSyncPolicyCreatorTest {\n \n-  @Test\n-  public void testClonedPolicy() {\n+    @Test\n+    public void testClonedPolicy() {\n     CountSyncPolicy basePolicy = new CountSyncPolicy(5);\n     ClonedSyncPolicyCreator creator = new ClonedSyncPolicyCreator(basePolicy);\n     //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n     SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n-    for(int i = 0;i < 4;++i) {\n-      Assert.assertFalse(clonedPolicy.mark(null, i));\n+    for(int i = 0;\n+    i < 4;\n+    ++ i) {\n+         Assert.assertFalse(clonedPolicy.mark(null, i));\n     }\n     Assert.assertTrue(clonedPolicy.mark(null, 5));\n     //reclone policy and ensure it adheres to the original contract.\n     clonedPolicy = creator.create(\"blah\", null);\n     Assert.assertFalse(clonedPolicy.mark(null, 0));\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_random/13/ClonedSyncPolicyCreatorTest.java\nindex 092bf0f9d8..2dbff28346 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_random/13/ClonedSyncPolicyCreatorTest.java\n@@ -31,7 +31,7 @@ public class ClonedSyncPolicyCreatorTest {\n     ClonedSyncPolicyCreator creator = new ClonedSyncPolicyCreator(basePolicy);\n     //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n     SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n-    for(int i = 0;i < 4;++i) {\n+    for (int i = 0;i < 4;++i) {\n       Assert.assertFalse(clonedPolicy.mark(null, i));\n     }\n     Assert.assertTrue(clonedPolicy.mark(null, 5));\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_three_grams/13/ClonedSyncPolicyCreatorTest.java\nindex 092bf0f9d8..2dbff28346 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/13/ClonedSyncPolicyCreatorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_three_grams/13/ClonedSyncPolicyCreatorTest.java\n@@ -31,7 +31,7 @@ public class ClonedSyncPolicyCreatorTest {\n     ClonedSyncPolicyCreator creator = new ClonedSyncPolicyCreator(basePolicy);\n     //ensure cloned policy continues to work and adheres to the contract: mark on 5th call.\n     SyncPolicy clonedPolicy = creator.create(\"blah\", null);\n-    for(int i = 0;i < 4;++i) {\n+    for (int i = 0;i < 4;++i) {\n       Assert.assertFalse(clonedPolicy.mark(null, i));\n     }\n     Assert.assertTrue(clonedPolicy.mark(null, 5));\n",
            "diff_size": 1
        }
    ]
}