{
    "error_id": "505",
    "information": {
        "errors": [
            {
                "line": "42",
                "column": "30",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    this.defaultValue = defaultValue;\n    this.required = required;\n    if (defaultValue == null &&\n        targetType != null && targetType.getRawClass().isPrimitive()) {\n      this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/505/AbstractParamProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/505/AbstractParamProcessor.java\nindex 5d2061a5f6..a015ea120f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/505/AbstractParamProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/505/AbstractParamProcessor.java\n@@ -39,17 +39,16 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n-      this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n-    }\n-  }\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n+  this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n+}\n+}\n \n-  public String getParameterPath() {\n-    return paramPath;\n-  }\n+public String getParameterPath() {\n+  return paramPath;\n+}\n \n-  public boolean isRequired() {\n-    return required;\n-  }\n+public boolean isRequired() {\n+  return required;\n+}\n }\n",
            "diff_size": 11
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "42",
                    "column": "30",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/505/AbstractParamProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/505/AbstractParamProcessor.java\nindex 5d2061a5f6..794755025b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/505/AbstractParamProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/505/AbstractParamProcessor.java\n@@ -39,8 +39,7 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n       this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n     }\n   }\n@@ -52,4 +51,4 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n   public boolean isRequired() {\n     return required;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/505/AbstractParamProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/505/AbstractParamProcessor.java\nindex 5d2061a5f6..a015ea120f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/505/AbstractParamProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/505/AbstractParamProcessor.java\n@@ -39,17 +39,16 @@ public abstract class AbstractParamProcessor implements ParamValueProcessor {\n     this.targetType = targetType;\n     this.defaultValue = defaultValue;\n     this.required = required;\n-    if (defaultValue == null &&\n-        targetType != null && targetType.getRawClass().isPrimitive()) {\n-      this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n-    }\n-  }\n+    if (defaultValue == null && targetType != null && targetType.getRawClass().isPrimitive()) {\n+  this.defaultValue = Defaults.defaultValue(targetType.getRawClass());\n+}\n+}\n \n-  public String getParameterPath() {\n-    return paramPath;\n-  }\n+public String getParameterPath() {\n+  return paramPath;\n+}\n \n-  public boolean isRequired() {\n-    return required;\n-  }\n+public boolean isRequired() {\n+  return required;\n+}\n }\n",
            "diff_size": 11
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "42",
                    "column": "30",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}