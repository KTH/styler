{
    "error_id": "588",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/588/PullPathTailPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/588/PullPathTailPartitionResult.java\nindex a8f471f0e1..3f1033ba48 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/588/PullPathTailPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/588/PullPathTailPartitionResult.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.getfuncs.pullpathtail;\n \n import com.tencent.angel.graph.client.node2vec.utils.SerDe;\n@@ -22,34 +23,36 @@ import io.netty.buffer.ByteBuf;\n import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n \n public class PullPathTailPartitionResult extends PartitionGetResult {\n-  private Long2ObjectOpenHashMap<long[]> partResult;\n-\n-  public PullPathTailPartitionResult(Long2ObjectOpenHashMap<long[]> partResult) {\n-    this.partResult = partResult;\n-  }\n-\n-  public PullPathTailPartitionResult() { super(); }\n-\n-  public Long2ObjectOpenHashMap<long[]> getPartRestlt() {\n-    return partResult;\n-  }\n-\n-  public void setPartRestlt(Long2ObjectOpenHashMap<long[]> partResult) {\n-    this.partResult = partResult;\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf output) {\n-    SerDe.serLong2ArrayHashMap(partResult, output);\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    partResult = SerDe.deserLong2LongArray(input);\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    return SerDe.getLong2ArrayHashMapSerSize(partResult);\n-  }\n+    private Long2ObjectOpenHashMap<long[]> partResult;\n+\n+    public PullPathTailPartitionResult(Long2ObjectOpenHashMap<long[]> partResult) {\n+        this.partResult = partResult;\n+    }\n+\n+    public PullPathTailPartitionResult() {\n+        super();\n+    }\n+\n+    public Long2ObjectOpenHashMap<long[]> getPartRestlt() {\n+        return partResult;\n+    }\n+\n+    public void setPartRestlt(Long2ObjectOpenHashMap<long[]> partResult) {\n+        this.partResult = partResult;\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        SerDe.serLong2ArrayHashMap(partResult, output);\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        partResult = SerDe.deserLong2LongArray(input);\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        return SerDe.getLong2ArrayHashMapSerSize(partResult);\n+    }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/588/PullPathTailPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/588/PullPathTailPartitionResult.java\nindex a8f471f0e1..bce029a8ae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/588/PullPathTailPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/588/PullPathTailPartitionResult.java\n@@ -28,7 +28,9 @@ public class PullPathTailPartitionResult extends PartitionGetResult {\n     this.partResult = partResult;\n   }\n \n-  public PullPathTailPartitionResult() { super(); }\n+  public PullPathTailPartitionResult() {\n+  super();\n+  }\n \n   public Long2ObjectOpenHashMap<long[]> getPartRestlt() {\n     return partResult;\n@@ -52,4 +54,4 @@ public class PullPathTailPartitionResult extends PartitionGetResult {\n   public int bufferLen() {\n     return SerDe.getLong2ArrayHashMapSerSize(partResult);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/588/PullPathTailPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/588/PullPathTailPartitionResult.java\nindex a8f471f0e1..d31024667f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/588/PullPathTailPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/588/PullPathTailPartitionResult.java\n@@ -22,34 +22,36 @@ import io.netty.buffer.ByteBuf;\n import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n \n public class PullPathTailPartitionResult extends PartitionGetResult {\n-  private Long2ObjectOpenHashMap<long[]> partResult;\n+    private Long2ObjectOpenHashMap<long[]> partResult;\n \n-  public PullPathTailPartitionResult(Long2ObjectOpenHashMap<long[]> partResult) {\n+    public PullPathTailPartitionResult(Long2ObjectOpenHashMap<long[]> partResult) {\n     this.partResult = partResult;\n-  }\n+    }\n \n-  public PullPathTailPartitionResult() { super(); }\n+    public PullPathTailPartitionResult() {\n+    super();\n+    }\n \n-  public Long2ObjectOpenHashMap<long[]> getPartRestlt() {\n+    public Long2ObjectOpenHashMap<long[]> getPartRestlt() {\n     return partResult;\n-  }\n+    }\n \n-  public void setPartRestlt(Long2ObjectOpenHashMap<long[]> partResult) {\n+    public void setPartRestlt(Long2ObjectOpenHashMap<long[]> partResult) {\n     this.partResult = partResult;\n-  }\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n+    @Override\n+    public void serialize(ByteBuf output) {\n     SerDe.serLong2ArrayHashMap(partResult, output);\n-  }\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n+    @Override\n+    public void deserialize(ByteBuf input) {\n     partResult = SerDe.deserLong2LongArray(input);\n-  }\n+    }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return SerDe.getLong2ArrayHashMapSerSize(partResult);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}