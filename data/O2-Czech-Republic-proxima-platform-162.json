{
    "error_id": "162",
    "information": {
        "errors": [
            {
                "line": "43",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  final Config nonReplicated =\n      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve();\n  final Config replicated =\n      ConfigFactory.load()\n          .withFallback(ConfigFactory.load(\"test-replicated.conf\"))",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "column": "25",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/162/PartitionedCachedViewTest.java\nindex 4be588313c..1343267e5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/162/PartitionedCachedViewTest.java\n@@ -40,146 +40,147 @@ import org.junit.Test;\n public class PartitionedCachedViewTest {\n \n   final Config nonReplicated =\n-      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve();\n-  final Config replicated =\n-      ConfigFactory.load()\n-          .withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n-          .withFallback(ConfigFactory.load(\"test-reference.conf\"))\n-          .resolve();\n+      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve()\n+      ; final Config replicated =\n+          ConfigFactory.load()\n+              .withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n+              .withFallback(ConfigFactory.load(\"test-reference.conf\"))\n+              .resolve();\n \n-  final ConfigRepository repo = (ConfigRepository) ConfigRepository.of(nonReplicated);\n-  final DirectDataOperator direct = repo.asDataOperator(DirectDataOperator.class);\n-  EntityDescriptor gateway;\n+      final ConfigRepository repo = (ConfigRepository) ConfigRepository.of(nonReplicated);\n+      final DirectDataOperator direct = repo.asDataOperator(DirectDataOperator.class);\n+      EntityDescriptor gateway;\n \n-  @Before\n-  public void setUp() {\n-    repo.reloadConfig(true, nonReplicated);\n-    gateway =\n-        repo.findEntity(\"gateway\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing entity gateway\"));\n-  }\n+      @Before\n+      public void setUp() {\n+        repo.reloadConfig(true, nonReplicated);\n+        gateway =\n+            repo.findEntity(\"gateway\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing entity gateway\"));\n+      }\n \n-  @Test(timeout = 10000)\n-  public void testCommitLogCaching() throws InterruptedException {\n-    testStatusReadWrite(repo);\n-    testScanWildcardAll(repo);\n-  }\n+      @Test(timeout = 10000)\n+      public void testCommitLogCaching() throws InterruptedException {\n+        testStatusReadWrite(repo);\n+        testScanWildcardAll(repo);\n+      }\n \n-  @Test(timeout = 10000)\n-  public void testCommitLogCachingReplicated() throws InterruptedException {\n-    repo.reloadConfig(true, replicated);\n-    testStatusReadWrite(repo);\n-    testScanWildcardAll(repo);\n-  }\n+      @Test(timeout = 10000)\n+      public void testCommitLogCachingReplicated() throws InterruptedException {\n+        repo.reloadConfig(true, replicated);\n+        testStatusReadWrite(repo);\n+        testScanWildcardAll(repo);\n+      }\n \n-  private void testStatusReadWrite(final Repository repo) throws InterruptedException {\n-    AttributeDescriptor<Object> status =\n-        gateway\n-            .findAttribute(\"status\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    OnlineAttributeWriter writer =\n-        direct\n-            .getWriter(status)\n-            .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n-    DirectAttributeFamilyDescriptor cachedFamily =\n-        direct\n-            .getFamiliesForAttribute(status)\n-            .stream()\n-            .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n-            .findAny()\n-            .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n-    CachedView view = cachedFamily.getCachedView().get();\n-    // read all partitions\n-    AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n-    view.assign(\n-        cachedFamily.getCommitLogReader().get().getPartitions(),\n-        (update, current) -> {\n-          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n-        });\n-    latch.set(new CountDownLatch(2));\n-    writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            \"uuid\",\n-            \"key\",\n-            status.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3}),\n-        (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n-        });\n-    latch.get().await();\n-    Optional<KeyValue<Object>> kv = view.get(\"key\", status);\n-    assertTrue(kv.isPresent());\n-    assertEquals(status, kv.get().getAttrDescriptor());\n-  }\n+      private void testStatusReadWrite(final Repository repo) throws InterruptedException {\n+        AttributeDescriptor<Object> status =\n+            gateway\n+                .findAttribute(\"status\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+        OnlineAttributeWriter writer =\n+            direct\n+                .getWriter(status)\n+                .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n+        DirectAttributeFamilyDescriptor cachedFamily =\n+            direct\n+                .getFamiliesForAttribute(status)\n+                .stream()\n+                .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n+                .findAny()\n+                .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n+        CachedView view = cachedFamily.getCachedView().get();\n+        // read all partitions\n+        AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n+        view.assign(\n+            cachedFamily.getCommitLogReader().get().getPartitions(),\n+            (update, current) -> {\n+              Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n+            });\n+        latch.set(new CountDownLatch(2));\n+        writer.write(\n+            StreamElement.upsert(\n+                gateway,\n+                status,\n+                \"uuid\",\n+                \"key\",\n+                status.getName(),\n+                System.currentTimeMillis(),\n+                new byte[] {1, 2, 3}),\n+            (succ, exc) -> {\n+              assertTrue(succ);\n+              assertNull(exc);\n+              latch.get().countDown();\n+            });\n+        latch.get().await();\n+        Optional<KeyValue<Object>> kv = view.get(\"key\", status);\n+        assertTrue(kv.isPresent());\n+        assertEquals(status, kv.get().getAttrDescriptor());\n+      }\n \n-  private void testScanWildcardAll(final Repository repo) throws InterruptedException {\n-    AttributeDescriptor<Object> status =\n-        gateway\n-            .findAttribute(\"status\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    AttributeDescriptor<Object> device =\n-        gateway\n-            .findAttribute(\"device.*\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+      private void testScanWildcardAll(final Repository repo) throws InterruptedException {\n+        AttributeDescriptor<Object> status =\n+            gateway\n+                .findAttribute(\"status\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+        AttributeDescriptor<Object> device =\n+            gateway\n+                .findAttribute(\"device.*\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n \n-    OnlineAttributeWriter writer =\n-        direct\n-            .getWriter(status)\n-            .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n+        OnlineAttributeWriter writer =\n+            direct\n+                .getWriter(status)\n+                .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n \n-    DirectAttributeFamilyDescriptor cachedFamily =\n-        direct\n-            .getFamiliesForAttribute(status)\n-            .stream()\n-            .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n-            .findAny()\n-            .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n+        DirectAttributeFamilyDescriptor cachedFamily =\n+            direct\n+                .getFamiliesForAttribute(status)\n+                .stream()\n+                .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n+                .findAny()\n+                .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n \n-    CachedView view = cachedFamily.getCachedView().get();\n-    // read all partitions\n-    AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n-    view.assign(\n-        cachedFamily.getCommitLogReader().get().getPartitions(),\n-        (update, current) -> {\n-          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n-        });\n-    latch.set(new CountDownLatch(4));\n-    writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            \"uuid\",\n-            \"key\",\n-            status.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3}),\n-        (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n-        });\n-    writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            device,\n-            \"uuid2\",\n-            \"key\",\n-            device.toAttributePrefix() + \"1\",\n-            System.currentTimeMillis(),\n-            new byte[] {2, 3}),\n-        (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n-        });\n-    latch.get().await();\n-    List<KeyValue<?>> kvs = new ArrayList<>();\n-    view.scanWildcardAll(\"key\", kvs::add);\n-    assertEquals(2, kvs.size());\n-  }\n-}\n+        CachedView view = cachedFamily.getCachedView().get();\n+        // read all partitions\n+        AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n+        view.assign(\n+            cachedFamily.getCommitLogReader().get().getPartitions(),\n+            (update, current) -> {\n+              Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n+            });\n+        latch.set(new CountDownLatch(4));\n+        writer.write(\n+            StreamElement.upsert(\n+                gateway,\n+                status,\n+                \"uuid\",\n+                \"key\",\n+                status.getName(),\n+                System.currentTimeMillis(),\n+                new byte[] {1, 2, 3}),\n+            (succ, exc) -> {\n+              assertTrue(succ);\n+              assertNull(exc);\n+              latch.get().countDown();\n+            });\n+        writer.write(\n+            StreamElement.upsert(\n+                gateway,\n+                device,\n+                \"uuid2\",\n+                \"key\",\n+                device.toAttributePrefix() + \"1\",\n+                System.currentTimeMillis(),\n+                new byte[] {2, 3}),\n+            (succ, exc) -> {\n+              assertTrue(succ);\n+              assertNull(exc);\n+              latch.get().countDown();\n+            });\n+        latch.get().await();\n+        List<KeyValue<?>> kvs = new ArrayList<>();\n+        view.scanWildcardAll(\"key\", kvs::add);\n+        assertEquals(2, kvs.size());\n+      }\n+    }\n+    \n\\ No newline at end of file\n",
            "diff_size": 135
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/162/PartitionedCachedViewTest.java\nindex 4be588313c..4a7f8e5816 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/162/PartitionedCachedViewTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.view;\n \n import static org.junit.Assert.*;\n@@ -40,7 +41,8 @@ import org.junit.Test;\n public class PartitionedCachedViewTest {\n \n   final Config nonReplicated =\n-      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve();\n+      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\"))\n+          .resolve();\n   final Config replicated =\n       ConfigFactory.load()\n           .withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'direct' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'direct' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'gateway' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/162/PartitionedCachedViewTest.java\nindex 4be588313c..4927732d88 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/162/PartitionedCachedViewTest.java\n@@ -77,23 +77,26 @@ public class PartitionedCachedViewTest {\n         gateway\n             .findAttribute(\"status\")\n             .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    OnlineAttributeWriter writer =\n+\n+        OnlineAttributeWriter writer =\n         direct\n             .getWriter(status)\n             .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n-    DirectAttributeFamilyDescriptor cachedFamily =\n+\n+        DirectAttributeFamilyDescriptor cachedFamily =\n         direct\n             .getFamiliesForAttribute(status)\n             .stream()\n             .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n             .findAny()\n             .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n-    CachedView view = cachedFamily.getCachedView().get();\n+\n+        CachedView view = cachedFamily.getCachedView().get();\n     // read all partitions\n     AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n     view.assign(\n         cachedFamily.getCommitLogReader().get().getPartitions(),\n-        (update, current) -> {\n+    (update, current) -> {\n           Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n         });\n     latch.set(new CountDownLatch(2));\n@@ -122,7 +125,8 @@ public class PartitionedCachedViewTest {\n         gateway\n             .findAttribute(\"status\")\n             .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    AttributeDescriptor<Object> device =\n+\n+        AttributeDescriptor<Object> device =\n         gateway\n             .findAttribute(\"device.*\")\n             .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n@@ -145,7 +149,7 @@ public class PartitionedCachedViewTest {\n     AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n     view.assign(\n         cachedFamily.getCommitLogReader().get().getPartitions(),\n-        (update, current) -> {\n+    (update, current) -> {\n           Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n         });\n     latch.set(new CountDownLatch(4));\n@@ -182,4 +186,4 @@ public class PartitionedCachedViewTest {\n     view.scanWildcardAll(\"key\", kvs::add);\n     assertEquals(2, kvs.size());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 26, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 26, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 20, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/162/PartitionedCachedViewTest.java\nindex 4be588313c..4ca7695d69 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/162/PartitionedCachedViewTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.direct.view;\n \n import static org.junit.Assert.*;\n-\n import com.typesafe.config.Config;\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.direct.core.DirectAttributeFamilyDescriptor;\n@@ -37,149 +36,106 @@ import org.junit.Before;\n import org.junit.Test;\n \n /** Test suite for {@link CachedView}. */\n+\n+\n public class PartitionedCachedViewTest {\n \n-  final Config nonReplicated =\n-      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve();\n-  final Config replicated =\n-      ConfigFactory.load()\n-          .withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n-          .withFallback(ConfigFactory.load(\"test-reference.conf\"))\n-          .resolve();\n+    final Config nonReplicated = ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\"))\n+                                                     .resolve();\n+    final Config replicated = ConfigFactory.load().withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n+                                                  .withFallback(ConfigFactory.load(\"test-reference.conf\"))\n+                                                  .resolve();\n+    final ConfigRepository repo = (ConfigRepository) ConfigRepository.of(nonReplicated);\n+    final DirectDataOperator direct = repo.asDataOperator(DirectDataOperator.class);\n \n-  final ConfigRepository repo = (ConfigRepository) ConfigRepository.of(nonReplicated);\n-  final DirectDataOperator direct = repo.asDataOperator(DirectDataOperator.class);\n-  EntityDescriptor gateway;\n+    EntityDescriptor gateway;\n \n-  @Before\n-  public void setUp() {\n+    @Before\n+    public void setUp() {\n     repo.reloadConfig(true, nonReplicated);\n-    gateway =\n-        repo.findEntity(\"gateway\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing entity gateway\"));\n-  }\n+    gateway = repo.findEntity(\"gateway\").orElseThrow(() -> new IllegalStateException(\"Missing entity gateway\"));\n+    }\n \n-  @Test(timeout = 10000)\n-  public void testCommitLogCaching() throws InterruptedException {\n+    @Test(timeout = 10000)\n+    public void testCommitLogCaching() throws InterruptedException {\n     testStatusReadWrite(repo);\n     testScanWildcardAll(repo);\n-  }\n+    }\n \n-  @Test(timeout = 10000)\n-  public void testCommitLogCachingReplicated() throws InterruptedException {\n+    @Test(timeout = 10000)\n+    public void testCommitLogCachingReplicated() throws InterruptedException {\n     repo.reloadConfig(true, replicated);\n     testStatusReadWrite(repo);\n     testScanWildcardAll(repo);\n-  }\n+    }\n \n-  private void testStatusReadWrite(final Repository repo) throws InterruptedException {\n-    AttributeDescriptor<Object> status =\n-        gateway\n-            .findAttribute(\"status\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    OnlineAttributeWriter writer =\n-        direct\n-            .getWriter(status)\n-            .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n-    DirectAttributeFamilyDescriptor cachedFamily =\n-        direct\n-            .getFamiliesForAttribute(status)\n-            .stream()\n-            .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n-            .findAny()\n-            .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n+    private void testStatusReadWrite(final Repository repo) throws InterruptedException {\n+    AttributeDescriptor<Object> status = gateway.findAttribute(\"status\").orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+    OnlineAttributeWriter writer = direct.getWriter(status).orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n+    DirectAttributeFamilyDescriptor cachedFamily = direct.getFamiliesForAttribute(status).stream()\n+                                                                                         .filter(af -> af.getDesc().getAccess()\n+                                                                                                                   .canCreateCachedView())\n+                                                                                         .findAny()\n+                                                                                         .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n     CachedView view = cachedFamily.getCachedView().get();\n     // read all partitions\n     AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n     view.assign(\n-        cachedFamily.getCommitLogReader().get().getPartitions(),\n+        cachedFamily.getCommitLogReader().get()\n+                                         .getPartitions(),\n         (update, current) -> {\n-          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n+                          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n         });\n     latch.set(new CountDownLatch(2));\n     writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            \"uuid\",\n-            \"key\",\n-            status.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3}),\n+        StreamElement.upsert(gateway, status, \"uuid\", \"key\", status.getName(), System.currentTimeMillis(), new byte[]{1, 2, 3}),\n         (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n+                    assertTrue(succ);\n+                    assertNull(exc);\n+                    latch.get().countDown();\n         });\n     latch.get().await();\n     Optional<KeyValue<Object>> kv = view.get(\"key\", status);\n     assertTrue(kv.isPresent());\n     assertEquals(status, kv.get().getAttrDescriptor());\n-  }\n-\n-  private void testScanWildcardAll(final Repository repo) throws InterruptedException {\n-    AttributeDescriptor<Object> status =\n-        gateway\n-            .findAttribute(\"status\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    AttributeDescriptor<Object> device =\n-        gateway\n-            .findAttribute(\"device.*\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-\n-    OnlineAttributeWriter writer =\n-        direct\n-            .getWriter(status)\n-            .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n-\n-    DirectAttributeFamilyDescriptor cachedFamily =\n-        direct\n-            .getFamiliesForAttribute(status)\n-            .stream()\n-            .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n-            .findAny()\n-            .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n+    }\n \n+    private void testScanWildcardAll(final Repository repo) throws InterruptedException {\n+    AttributeDescriptor<Object> status = gateway.findAttribute(\"status\").orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+    AttributeDescriptor<Object> device = gateway.findAttribute(\"device.*\").orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+    OnlineAttributeWriter writer = direct.getWriter(status).orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n+    DirectAttributeFamilyDescriptor cachedFamily = direct.getFamiliesForAttribute(status).stream()\n+                                                                                         .filter(af -> af.getDesc().getAccess()\n+                                                                                                                   .canCreateCachedView())\n+                                                                                         .findAny()\n+                                                                                         .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n     CachedView view = cachedFamily.getCachedView().get();\n     // read all partitions\n     AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n     view.assign(\n-        cachedFamily.getCommitLogReader().get().getPartitions(),\n+        cachedFamily.getCommitLogReader().get()\n+                                         .getPartitions(),\n         (update, current) -> {\n-          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n+                          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n         });\n     latch.set(new CountDownLatch(4));\n     writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            \"uuid\",\n-            \"key\",\n-            status.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3}),\n+        StreamElement.upsert(gateway, status, \"uuid\", \"key\", status.getName(), System.currentTimeMillis(), new byte[]{1, 2, 3}),\n         (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n+                    assertTrue(succ);\n+                    assertNull(exc);\n+                    latch.get().countDown();\n         });\n     writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            device,\n-            \"uuid2\",\n-            \"key\",\n-            device.toAttributePrefix() + \"1\",\n-            System.currentTimeMillis(),\n-            new byte[] {2, 3}),\n+        StreamElement.upsert(gateway, device, \"uuid2\", \"key\", device.toAttributePrefix() + \"1\", System.currentTimeMillis(), new byte[]{2, 3}),\n         (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n+                    assertTrue(succ);\n+                    assertNull(exc);\n+                    latch.get().countDown();\n         });\n     latch.get().await();\n     List<KeyValue<?>> kvs = new ArrayList<>();\n     view.scanWildcardAll(\"key\", kvs::add);\n     assertEquals(2, kvs.size());\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 115
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "column": "25",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'member def type' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/162/PartitionedCachedViewTest.java\nindex 4be588313c..1343267e5b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/162/PartitionedCachedViewTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/162/PartitionedCachedViewTest.java\n@@ -40,146 +40,147 @@ import org.junit.Test;\n public class PartitionedCachedViewTest {\n \n   final Config nonReplicated =\n-      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve();\n-  final Config replicated =\n-      ConfigFactory.load()\n-          .withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n-          .withFallback(ConfigFactory.load(\"test-reference.conf\"))\n-          .resolve();\n+      ConfigFactory.load().withFallback(ConfigFactory.load(\"test-reference.conf\")).resolve()\n+      ; final Config replicated =\n+          ConfigFactory.load()\n+              .withFallback(ConfigFactory.load(\"test-replicated.conf\"))\n+              .withFallback(ConfigFactory.load(\"test-reference.conf\"))\n+              .resolve();\n \n-  final ConfigRepository repo = (ConfigRepository) ConfigRepository.of(nonReplicated);\n-  final DirectDataOperator direct = repo.asDataOperator(DirectDataOperator.class);\n-  EntityDescriptor gateway;\n+      final ConfigRepository repo = (ConfigRepository) ConfigRepository.of(nonReplicated);\n+      final DirectDataOperator direct = repo.asDataOperator(DirectDataOperator.class);\n+      EntityDescriptor gateway;\n \n-  @Before\n-  public void setUp() {\n-    repo.reloadConfig(true, nonReplicated);\n-    gateway =\n-        repo.findEntity(\"gateway\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing entity gateway\"));\n-  }\n+      @Before\n+      public void setUp() {\n+        repo.reloadConfig(true, nonReplicated);\n+        gateway =\n+            repo.findEntity(\"gateway\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing entity gateway\"));\n+      }\n \n-  @Test(timeout = 10000)\n-  public void testCommitLogCaching() throws InterruptedException {\n-    testStatusReadWrite(repo);\n-    testScanWildcardAll(repo);\n-  }\n+      @Test(timeout = 10000)\n+      public void testCommitLogCaching() throws InterruptedException {\n+        testStatusReadWrite(repo);\n+        testScanWildcardAll(repo);\n+      }\n \n-  @Test(timeout = 10000)\n-  public void testCommitLogCachingReplicated() throws InterruptedException {\n-    repo.reloadConfig(true, replicated);\n-    testStatusReadWrite(repo);\n-    testScanWildcardAll(repo);\n-  }\n+      @Test(timeout = 10000)\n+      public void testCommitLogCachingReplicated() throws InterruptedException {\n+        repo.reloadConfig(true, replicated);\n+        testStatusReadWrite(repo);\n+        testScanWildcardAll(repo);\n+      }\n \n-  private void testStatusReadWrite(final Repository repo) throws InterruptedException {\n-    AttributeDescriptor<Object> status =\n-        gateway\n-            .findAttribute(\"status\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    OnlineAttributeWriter writer =\n-        direct\n-            .getWriter(status)\n-            .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n-    DirectAttributeFamilyDescriptor cachedFamily =\n-        direct\n-            .getFamiliesForAttribute(status)\n-            .stream()\n-            .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n-            .findAny()\n-            .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n-    CachedView view = cachedFamily.getCachedView().get();\n-    // read all partitions\n-    AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n-    view.assign(\n-        cachedFamily.getCommitLogReader().get().getPartitions(),\n-        (update, current) -> {\n-          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n-        });\n-    latch.set(new CountDownLatch(2));\n-    writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            \"uuid\",\n-            \"key\",\n-            status.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3}),\n-        (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n-        });\n-    latch.get().await();\n-    Optional<KeyValue<Object>> kv = view.get(\"key\", status);\n-    assertTrue(kv.isPresent());\n-    assertEquals(status, kv.get().getAttrDescriptor());\n-  }\n+      private void testStatusReadWrite(final Repository repo) throws InterruptedException {\n+        AttributeDescriptor<Object> status =\n+            gateway\n+                .findAttribute(\"status\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+        OnlineAttributeWriter writer =\n+            direct\n+                .getWriter(status)\n+                .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n+        DirectAttributeFamilyDescriptor cachedFamily =\n+            direct\n+                .getFamiliesForAttribute(status)\n+                .stream()\n+                .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n+                .findAny()\n+                .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n+        CachedView view = cachedFamily.getCachedView().get();\n+        // read all partitions\n+        AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n+        view.assign(\n+            cachedFamily.getCommitLogReader().get().getPartitions(),\n+            (update, current) -> {\n+              Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n+            });\n+        latch.set(new CountDownLatch(2));\n+        writer.write(\n+            StreamElement.upsert(\n+                gateway,\n+                status,\n+                \"uuid\",\n+                \"key\",\n+                status.getName(),\n+                System.currentTimeMillis(),\n+                new byte[] {1, 2, 3}),\n+            (succ, exc) -> {\n+              assertTrue(succ);\n+              assertNull(exc);\n+              latch.get().countDown();\n+            });\n+        latch.get().await();\n+        Optional<KeyValue<Object>> kv = view.get(\"key\", status);\n+        assertTrue(kv.isPresent());\n+        assertEquals(status, kv.get().getAttrDescriptor());\n+      }\n \n-  private void testScanWildcardAll(final Repository repo) throws InterruptedException {\n-    AttributeDescriptor<Object> status =\n-        gateway\n-            .findAttribute(\"status\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n-    AttributeDescriptor<Object> device =\n-        gateway\n-            .findAttribute(\"device.*\")\n-            .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+      private void testScanWildcardAll(final Repository repo) throws InterruptedException {\n+        AttributeDescriptor<Object> status =\n+            gateway\n+                .findAttribute(\"status\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n+        AttributeDescriptor<Object> device =\n+            gateway\n+                .findAttribute(\"device.*\")\n+                .orElseThrow(() -> new IllegalStateException(\"Missing attribute status\"));\n \n-    OnlineAttributeWriter writer =\n-        direct\n-            .getWriter(status)\n-            .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n+        OnlineAttributeWriter writer =\n+            direct\n+                .getWriter(status)\n+                .orElseThrow(() -> new IllegalStateException(\"Missing writer for status\"));\n \n-    DirectAttributeFamilyDescriptor cachedFamily =\n-        direct\n-            .getFamiliesForAttribute(status)\n-            .stream()\n-            .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n-            .findAny()\n-            .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n+        DirectAttributeFamilyDescriptor cachedFamily =\n+            direct\n+                .getFamiliesForAttribute(status)\n+                .stream()\n+                .filter(af -> af.getDesc().getAccess().canCreateCachedView())\n+                .findAny()\n+                .orElseThrow(() -> new IllegalStateException(\"Status has no cached view\"));\n \n-    CachedView view = cachedFamily.getCachedView().get();\n-    // read all partitions\n-    AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n-    view.assign(\n-        cachedFamily.getCommitLogReader().get().getPartitions(),\n-        (update, current) -> {\n-          Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n-        });\n-    latch.set(new CountDownLatch(4));\n-    writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            status,\n-            \"uuid\",\n-            \"key\",\n-            status.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3}),\n-        (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n-        });\n-    writer.write(\n-        StreamElement.upsert(\n-            gateway,\n-            device,\n-            \"uuid2\",\n-            \"key\",\n-            device.toAttributePrefix() + \"1\",\n-            System.currentTimeMillis(),\n-            new byte[] {2, 3}),\n-        (succ, exc) -> {\n-          assertTrue(succ);\n-          assertNull(exc);\n-          latch.get().countDown();\n-        });\n-    latch.get().await();\n-    List<KeyValue<?>> kvs = new ArrayList<>();\n-    view.scanWildcardAll(\"key\", kvs::add);\n-    assertEquals(2, kvs.size());\n-  }\n-}\n+        CachedView view = cachedFamily.getCachedView().get();\n+        // read all partitions\n+        AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n+        view.assign(\n+            cachedFamily.getCommitLogReader().get().getPartitions(),\n+            (update, current) -> {\n+              Optional.ofNullable(latch.get()).ifPresent(CountDownLatch::countDown);\n+            });\n+        latch.set(new CountDownLatch(4));\n+        writer.write(\n+            StreamElement.upsert(\n+                gateway,\n+                status,\n+                \"uuid\",\n+                \"key\",\n+                status.getName(),\n+                System.currentTimeMillis(),\n+                new byte[] {1, 2, 3}),\n+            (succ, exc) -> {\n+              assertTrue(succ);\n+              assertNull(exc);\n+              latch.get().countDown();\n+            });\n+        writer.write(\n+            StreamElement.upsert(\n+                gateway,\n+                device,\n+                \"uuid2\",\n+                \"key\",\n+                device.toAttributePrefix() + \"1\",\n+                System.currentTimeMillis(),\n+                new byte[] {2, 3}),\n+            (succ, exc) -> {\n+              assertTrue(succ);\n+              assertNull(exc);\n+              latch.get().countDown();\n+            });\n+        latch.get().await();\n+        List<KeyValue<?>> kvs = new ArrayList<>();\n+        view.scanWildcardAll(\"key\", kvs::add);\n+        assertEquals(2, kvs.size());\n+      }\n+    }\n+    \n\\ No newline at end of file\n",
            "diff_size": 135
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}