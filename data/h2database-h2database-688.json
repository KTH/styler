{
    "error_id": "688",
    "information": {
        "errors": [
            {
                "line": "11",
                "column": "15",
                "severity": "warning",
                "message": "'(' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "    private String value;\n    \n    ValueJson (String s) {\n        this.value = s;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/688/ValueJson.java\nindex 52cf2df886..6619e71a2c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/688/ValueJson.java\n@@ -5,10 +5,10 @@ import java.sql.SQLException;\n import org.h2.util.StringUtils;\n \n public class ValueJson extends Value {\n-    \n+\n     private String value;\n-    \n-    ValueJson (String s) {\n+\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n@@ -36,7 +36,7 @@ public class ValueJson extends Value {\n     public Object getObject() {\n         return value;\n     }\n-    \n+\n     @Override\n     public int getMemory() {\n         return value.length() * 2 + 94;\n@@ -70,7 +70,7 @@ public class ValueJson extends Value {\n         String other = ((ValueJson) v).value;\n         return mode.compareString(value, other, false);\n     }\n-    \n+\n     public static Value get(String s) {\n         return new ValueJson(s);\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/688/ValueJson.java\nindex 52cf2df886..053ba4e1be 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/688/ValueJson.java\n@@ -5,74 +5,75 @@ import java.sql.SQLException;\n import org.h2.util.StringUtils;\n \n public class ValueJson extends Value {\n-    \n-    private String value;\n-    \n-    ValueJson (String s) {\n-        this.value = s;\n-    }\n-\n-    @Override\n-    public StringBuilder getSQL(StringBuilder builder) {\n-        return StringUtils.quoteStringSQL(builder, value).append(\"::JSON\");\n-    }\n-\n-    @Override\n-    public TypeInfo getType() {\n-        return TypeInfo.TYPE_JSON;\n-    }\n-\n-    @Override\n-    public int getValueType() {\n-        return Value.JSON;\n-    }\n-\n-    @Override\n-    public String getString() {\n-        return value;\n-    }\n-\n-    @Override\n-    public Object getObject() {\n-        return value;\n-    }\n-    \n-    @Override\n-    public int getMemory() {\n-        return value.length() * 2 + 94;\n-    }\n-\n-    @Override\n-    public void set(PreparedStatement prep, int parameterIndex) throws SQLException {\n-        prep.setString(parameterIndex, value);\n-    }\n-\n-    /*\n-     * The simplest version\n-     * In fact {\"foo\":1,\"bar\":2} must be equal to {\"bar\":2, \"foo\":1}\n-     */\n-    @Override\n-    public int hashCode() {\n-        return value.hashCode();\n-    }\n-\n-    /*\n-     * Similar to hashCode()\n-     */\n-    @Override\n-    public boolean equals(Object other) {\n-        return other instanceof ValueJson &&\n-                this.value.equals(((ValueJson) other).value);\n-    }\n-\n-    @Override\n-    public int compareTypeSafe(Value v, CompareMode mode) {\n-        String other = ((ValueJson) v).value;\n-        return mode.compareString(value, other, false);\n-    }\n-    \n-    public static Value get(String s) {\n-        return new ValueJson(s);\n-    }\n+\n+  private String value;\n+\n+  ValueJson(String s) {\n+    this.value = s;\n+  }\n+\n+  @Override\n+  public StringBuilder getSQL(StringBuilder builder) {\n+    return StringUtils.quoteStringSQL(builder, value).append(\"::JSON\");\n+  }\n+\n+  @Override\n+  public TypeInfo getType() {\n+    return TypeInfo.TYPE_JSON;\n+  }\n+\n+  @Override\n+  public int getValueType() {\n+    return Value.JSON;\n+  }\n+\n+  @Override\n+  public String getString() {\n+    return value;\n+  }\n+\n+  @Override\n+  public Object getObject() {\n+    return value;\n+  }\n+\n+  @Override\n+  public int getMemory() {\n+    return value.length() * 2 + 94;\n+  }\n+\n+  @Override\n+  public void set(PreparedStatement prep, int parameterIndex)\n+      throws SQLException {\n+    prep.setString(parameterIndex, value);\n+  }\n+\n+  /*\n+   * The simplest version\n+   * In fact {\"foo\":1,\"bar\":2} must be equal to {\"bar\":2, \"foo\":1}\n+   */\n+  @Override\n+  public int hashCode() {\n+    return value.hashCode();\n+  }\n+\n+  /*\n+   * Similar to hashCode()\n+   */\n+  @Override\n+  public boolean equals(Object other) {\n+    return other instanceof ValueJson &&\n+        this.value.equals(((ValueJson) other).value);\n+  }\n+\n+  @Override\n+  public int compareTypeSafe(Value v, CompareMode mode) {\n+    String other = ((ValueJson) v).value;\n+    return mode.compareString(value, other, false);\n+  }\n+\n+  public static Value get(String s) {\n+    return new ValueJson(s);\n+  }\n \n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/688/ValueJson.java\nindex 52cf2df886..1495959394 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/688/ValueJson.java\n@@ -5,11 +5,11 @@ import java.sql.SQLException;\n import org.h2.util.StringUtils;\n \n public class ValueJson extends Value {\n-    \n+\n     private String value;\n     \n-    ValueJson (String s) {\n-        this.value = s;\n+    ValueJson(String s) {\n+    this.value = s;\n     }\n \n     @Override\n@@ -36,9 +36,9 @@ public class ValueJson extends Value {\n     public Object getObject() {\n         return value;\n     }\n-    \n-    @Override\n-    public int getMemory() {\n+\n+@Override\n+public int getMemory() {\n         return value.length() * 2 + 94;\n     }\n \n@@ -61,8 +61,7 @@ public class ValueJson extends Value {\n      */\n     @Override\n     public boolean equals(Object other) {\n-        return other instanceof ValueJson &&\n-                this.value.equals(((ValueJson) other).value);\n+        return other instanceof ValueJson && this.value.equals(((ValueJson) other).value);\n     }\n \n     @Override\n@@ -70,9 +69,9 @@ public class ValueJson extends Value {\n         String other = ((ValueJson) v).value;\n         return mode.compareString(value, other, false);\n     }\n-    \n-    public static Value get(String s) {\n-        return new ValueJson(s);\n+\n+public static Value get(String s) {\n+    return new ValueJson(s);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/688/ValueJson.java\nindex 52cf2df886..bd9be03ebe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/688/ValueJson.java\n@@ -4,11 +4,12 @@ import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import org.h2.util.StringUtils;\n \n+\n public class ValueJson extends Value {\n-    \n+\n     private String value;\n-    \n-    ValueJson (String s) {\n+\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n@@ -36,7 +37,7 @@ public class ValueJson extends Value {\n     public Object getObject() {\n         return value;\n     }\n-    \n+\n     @Override\n     public int getMemory() {\n         return value.length() * 2 + 94;\n@@ -51,6 +52,7 @@ public class ValueJson extends Value {\n      * The simplest version\n      * In fact {\"foo\":1,\"bar\":2} must be equal to {\"bar\":2, \"foo\":1}\n      */\n+\n     @Override\n     public int hashCode() {\n         return value.hashCode();\n@@ -59,10 +61,10 @@ public class ValueJson extends Value {\n     /*\n      * Similar to hashCode()\n      */\n+\n     @Override\n     public boolean equals(Object other) {\n-        return other instanceof ValueJson &&\n-                this.value.equals(((ValueJson) other).value);\n+        return other instanceof ValueJson && this.value.equals(((ValueJson) other).value);\n     }\n \n     @Override\n@@ -70,9 +72,10 @@ public class ValueJson extends Value {\n         String other = ((ValueJson) v).value;\n         return mode.compareString(value, other, false);\n     }\n-    \n+\n+\n     public static Value get(String s) {\n         return new ValueJson(s);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/688/ValueJson.java\nindex 52cf2df886..6619e71a2c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/688/ValueJson.java\n@@ -5,10 +5,10 @@ import java.sql.SQLException;\n import org.h2.util.StringUtils;\n \n public class ValueJson extends Value {\n-    \n+\n     private String value;\n-    \n-    ValueJson (String s) {\n+\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n@@ -36,7 +36,7 @@ public class ValueJson extends Value {\n     public Object getObject() {\n         return value;\n     }\n-    \n+\n     @Override\n     public int getMemory() {\n         return value.length() * 2 + 94;\n@@ -70,7 +70,7 @@ public class ValueJson extends Value {\n         String other = ((ValueJson) v).value;\n         return mode.compareString(value, other, false);\n     }\n-    \n+\n     public static Value get(String s) {\n         return new ValueJson(s);\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/688/ValueJson.java\nindex 52cf2df886..6619e71a2c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/688/ValueJson.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/688/ValueJson.java\n@@ -5,10 +5,10 @@ import java.sql.SQLException;\n import org.h2.util.StringUtils;\n \n public class ValueJson extends Value {\n-    \n+\n     private String value;\n-    \n-    ValueJson (String s) {\n+\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n@@ -36,7 +36,7 @@ public class ValueJson extends Value {\n     public Object getObject() {\n         return value;\n     }\n-    \n+\n     @Override\n     public int getMemory() {\n         return value.length() * 2 + 94;\n@@ -70,7 +70,7 @@ public class ValueJson extends Value {\n         String other = ((ValueJson) v).value;\n         return mode.compareString(value, other, false);\n     }\n-    \n+\n     public static Value get(String s) {\n         return new ValueJson(s);\n     }\n",
            "diff_size": 5
        }
    ]
}