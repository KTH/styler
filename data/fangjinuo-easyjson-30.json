{
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "60",
                "column": "32",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    private Boolean booleanUsingONOFF;\n\n    public CodecConfiguration(){\n        setTarget(new HashMap<String, Object>());\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/30/CodecConfiguration.java\nindex 725c0bc417..e0f8c3065a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/30/CodecConfiguration.java\n@@ -57,7 +57,7 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     private Boolean booleanUsing01;\n     private Boolean booleanUsingONOFF;\n \n-    public CodecConfiguration(){\n+    public CodecConfiguration() {\n         setTarget(new HashMap<String, Object>());\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/30/CodecConfiguration.java\nindex 725c0bc417..e0f8c3065a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/30/CodecConfiguration.java\n@@ -57,7 +57,7 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     private Boolean booleanUsing01;\n     private Boolean booleanUsingONOFF;\n \n-    public CodecConfiguration(){\n+    public CodecConfiguration() {\n         setTarget(new HashMap<String, Object>());\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/30/CodecConfiguration.java\nindex 725c0bc417..b782540e43 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/30/CodecConfiguration.java\n@@ -52,12 +52,10 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     // \u7f16\u53f7\n     private Boolean enumUsingValue;\n     private Boolean enumUsingToString;\n-\n-\n-    private Boolean booleanUsing01;\n+private Boolean booleanUsing01;\n     private Boolean booleanUsingONOFF;\n \n-    public CodecConfiguration(){\n+    public CodecConfiguration() {\n         setTarget(new HashMap<String, Object>());\n     }\n \n@@ -150,4 +148,4 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     public void setBooleanUsingONOFF(Boolean booleanUsingONOFF) {\n         this.booleanUsingONOFF = booleanUsingONOFF;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/30/CodecConfiguration.java\nindex 725c0bc417..a6e551e8e7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/30/CodecConfiguration.java\n@@ -16,12 +16,10 @@ package com.jn.easyjson.core.codec.dialect;\n \n import com.jn.langx.configuration.Configuration;\n import com.jn.langx.util.collection.MapAccessor;\n-\n import java.text.DateFormat;\n import java.util.HashMap;\n \n public class CodecConfiguration extends MapAccessor implements Configuration {\n-\n     private String id;\n \n     /**\n@@ -52,12 +50,10 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     // \u7f16\u53f7\n     private Boolean enumUsingValue;\n     private Boolean enumUsingToString;\n-\n-\n     private Boolean booleanUsing01;\n     private Boolean booleanUsingONOFF;\n \n-    public CodecConfiguration(){\n+    public CodecConfiguration() {\n         setTarget(new HashMap<String, Object>());\n     }\n \n@@ -71,83 +67,103 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n         this.id = id;\n     }\n \n+\n     public Boolean getSerialNull() {\n         return serialNull;\n     }\n \n+\n     public void setSerialNull(Boolean serialNull) {\n         this.serialNull = serialNull;\n     }\n \n+\n     public Boolean getSerialize() {\n         return serialize;\n     }\n \n+\n     public void setSerialize(Boolean serialize) {\n         this.serialize = serialize;\n     }\n \n+\n     public Boolean getDeserialize() {\n         return deserialize;\n     }\n \n+\n     public void setDeserialize(Boolean deserialize) {\n         this.deserialize = deserialize;\n     }\n \n+\n     public DateFormat getDateFormat() {\n         return dateFormat;\n     }\n \n+\n     public void setDateFormat(DateFormat dateFormat) {\n         this.dateFormat = dateFormat;\n     }\n \n+\n     public String getDatePattern() {\n         return datePattern;\n     }\n \n+\n     public void setDatePattern(String datePattern) {\n         this.datePattern = datePattern;\n     }\n \n+\n     public Boolean getEnumUsingName() {\n         return enumUsingName;\n     }\n \n+\n     public void setEnumUsingName(Boolean enumUsingName) {\n         this.enumUsingName = enumUsingName;\n     }\n \n+\n     public Boolean getEnumUsingValue() {\n         return enumUsingValue;\n     }\n \n+\n     public void setEnumUsingValue(Boolean enumUsingValue) {\n         this.enumUsingValue = enumUsingValue;\n     }\n \n+\n     public Boolean getEnumUsingToString() {\n         return enumUsingToString;\n     }\n \n+\n     public void setEnumUsingToString(Boolean enumUsingToString) {\n         this.enumUsingToString = enumUsingToString;\n     }\n \n+\n     public Boolean getBooleanUsing01() {\n         return booleanUsing01;\n     }\n \n+\n     public void setBooleanUsing01(Boolean booleanUsing01) {\n         this.booleanUsing01 = booleanUsing01;\n     }\n \n+\n     public Boolean getBooleanUsingONOFF() {\n         return booleanUsingONOFF;\n     }\n \n+\n     public void setBooleanUsingONOFF(Boolean booleanUsingONOFF) {\n         this.booleanUsingONOFF = booleanUsingONOFF;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/30/CodecConfiguration.java\nindex 725c0bc417..e0f8c3065a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/30/CodecConfiguration.java\n@@ -57,7 +57,7 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     private Boolean booleanUsing01;\n     private Boolean booleanUsingONOFF;\n \n-    public CodecConfiguration(){\n+    public CodecConfiguration() {\n         setTarget(new HashMap<String, Object>());\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/30/CodecConfiguration.java\nindex 725c0bc417..e0f8c3065a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/30/CodecConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/30/CodecConfiguration.java\n@@ -57,7 +57,7 @@ public class CodecConfiguration extends MapAccessor implements Configuration {\n     private Boolean booleanUsing01;\n     private Boolean booleanUsingONOFF;\n \n-    public CodecConfiguration(){\n+    public CodecConfiguration() {\n         setTarget(new HashMap<String, Object>());\n     }\n \n",
            "diff_size": 1
        }
    ]
}