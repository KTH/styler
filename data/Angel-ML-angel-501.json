{
    "error_id": "501",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/501/BasicTypeStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/501/BasicTypeStorage.java\nindex cc7fa175fb..0ad20a5ba9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/501/BasicTypeStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/501/BasicTypeStorage.java\n@@ -27,23 +27,23 @@ import java.io.IOException;\n  */\n public abstract class BasicTypeStorage extends Storage implements BasicTypePipelineOp {\n \n-  public BasicTypeStorage(long indexOffset) {\n-    super(indexOffset);\n-  }\n+    public BasicTypeStorage(long indexOffset) {\n+        super(indexOffset);\n+    }\n \n-  public BasicTypeStorage() {\n-    this(0L);\n-  }\n+    public BasicTypeStorage() {\n+        this(0L);\n+    }\n \n-  public void serialize(DataOutputStream output) throws IOException {\n-    throw new UnsupportedOperationException(\"Unsupport now\");\n-  }\n+    public void serialize(DataOutputStream output) throws IOException {\n+        throw new UnsupportedOperationException(\"Unsupport now\");\n+    }\n \n-  public void deserialize(DataInputStream input) throws IOException {\n-    throw new UnsupportedOperationException(\"Unsupport now\");\n-  }\n+    public void deserialize(DataInputStream input) throws IOException {\n+        throw new UnsupportedOperationException(\"Unsupport now\");\n+    }\n \n-  public int dataLen() {\n-    return bufferLen();\n-  }\n+    public int dataLen() {\n+        return bufferLen();\n+    }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/501/BasicTypeStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/501/BasicTypeStorage.java\nindex cc7fa175fb..47e135f57b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/501/BasicTypeStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/501/BasicTypeStorage.java\n@@ -46,4 +46,4 @@ public abstract class BasicTypeStorage extends Storage implements BasicTypePipel\n   public int dataLen() {\n     return bufferLen();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/501/BasicTypeStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/501/BasicTypeStorage.java\nindex cc7fa175fb..87461f7574 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/501/BasicTypeStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/501/BasicTypeStorage.java\n@@ -25,25 +25,27 @@ import java.io.IOException;\n /**\n  * Base class for basic type storage\n  */\n+\n public abstract class BasicTypeStorage extends Storage implements BasicTypePipelineOp {\n \n-  public BasicTypeStorage(long indexOffset) {\n+    public BasicTypeStorage(long indexOffset) {\n     super(indexOffset);\n-  }\n+    }\n \n-  public BasicTypeStorage() {\n+    public BasicTypeStorage() {\n     this(0L);\n-  }\n+    }\n \n-  public void serialize(DataOutputStream output) throws IOException {\n+    public void serialize(DataOutputStream output) throws IOException {\n     throw new UnsupportedOperationException(\"Unsupport now\");\n-  }\n+    }\n \n-  public void deserialize(DataInputStream input) throws IOException {\n+    public void deserialize(DataInputStream input) throws IOException {\n     throw new UnsupportedOperationException(\"Unsupport now\");\n-  }\n+    }\n \n-  public int dataLen() {\n+    public int dataLen() {\n     return bufferLen();\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}