{
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "21",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    @SuppressWarnings(\"unchecked\")\n    protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) {\n        if(value.getType() != null) {\n            writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n        } else {\n            writer.writeString(value.getCollection());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/6/OutCodec.java\nindex 375005f3c0..36ca0529ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/6/OutCodec.java\n@@ -18,7 +18,7 @@ public class OutCodec extends StageCodec<Out> {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) {\n-        if(value.getType() != null) {\n+        if (value.getType() != null) {\n             writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n         } else {\n             writer.writeString(value.getCollection());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/6/OutCodec.java\nindex 375005f3c0..36ca0529ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/6/OutCodec.java\n@@ -18,7 +18,7 @@ public class OutCodec extends StageCodec<Out> {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) {\n-        if(value.getType() != null) {\n+        if (value.getType() != null) {\n             writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n         } else {\n             writer.writeString(value.getCollection());\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/6/OutCodec.java\nindex 375005f3c0..dc548f6300 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/6/OutCodec.java\n@@ -18,10 +18,10 @@ public class OutCodec extends StageCodec<Out> {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) {\n-        if(value.getType() != null) {\n+        if (value.getType() != null) {\n             writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n         } else {\n             writer.writeString(value.getCollection());\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/6/OutCodec.java\nindex 375005f3c0..36ca0529ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/6/OutCodec.java\n@@ -18,7 +18,7 @@ public class OutCodec extends StageCodec<Out> {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) {\n-        if(value.getType() != null) {\n+        if (value.getType() != null) {\n             writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n         } else {\n             writer.writeString(value.getCollection());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "20",
                    "column": "111",
                    "severity": "error",
                    "message": "'{' at column 111 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "20",
                    "column": "113",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/6/OutCodec.java\nindex 375005f3c0..e4ecb9f276 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/6/OutCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/6/OutCodec.java\n@@ -17,11 +17,10 @@ public class OutCodec extends StageCodec<Out> {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) {\n-        if(value.getType() != null) {\n-            writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n-        } else {\n-            writer.writeString(value.getCollection());\n-        }\n+    protected void encodeStage(final BsonWriter writer, final Out value, final EncoderContext encoderContext) { if(value.getType() != null) {\n+        writer.writeString(getMapper().getCollection(value.getType()).getNamespace().getCollectionName());\n+    } else {\n+        writer.writeString(value.getCollection());\n     }\n }\n+}\n",
            "diff_size": 7
        }
    ]
}