{
    "error_id": "65",
    "information": {
        "errors": [
            {
                "line": "65",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * When returns {@code false} the input element is not stored in the storage and is throws away.\n   *\n   * @param ingest the input data\n   * @return {@code false} to throw the element away",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/65/StorageFilter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/65/StorageFilter.java\nindex ce42596929..2ece05f500 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/65/StorageFilter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/65/StorageFilter.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.storage;\n \n import cz.o2.proxima.annotations.Stable;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/65/StorageFilter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/65/StorageFilter.java\nindex ce42596929..2c251fec4f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/65/StorageFilter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/65/StorageFilter.java\n@@ -68,4 +68,4 @@ public interface StorageFilter extends Serializable {\n    * @return {@code false} to throw the element away\n    */\n   boolean apply(StreamElement ingest);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 76.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/65/StorageFilter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/65/StorageFilter.java\nindex ce42596929..1b47b9f155 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/65/StorageFilter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/65/StorageFilter.java\n@@ -21,45 +21,50 @@ import java.util.ArrayList;\n import java.util.List;\n \n /** A filter that is applied to each input data ingest. */\n+\n+\n @Stable\n @FunctionalInterface\n public interface StorageFilter extends Serializable {\n \n   /** Filter consisting of several filters with applied function. */\n-  public abstract class CompoundFilter implements StorageFilter {\n+\n+    public abstract class CompoundFilter implements StorageFilter {\n \n     protected final List<StorageFilter> filters = new ArrayList<>();\n \n     CompoundFilter(List<StorageFilter> filters) {\n-      this.filters.addAll(filters);\n+        this.filters.addAll(filters);\n+    }\n     }\n-  }\n \n   /** Filter performing logical OR of several filters. */\n-  public class OrFilter extends CompoundFilter {\n \n-    protected OrFilter(List<StorageFilter> filters) {\n-      super(filters);\n-    }\n+    public class OrFilter extends CompoundFilter {\n \n-    @Override\n-    public boolean apply(StreamElement ingest) {\n-      return filters.stream().anyMatch(f -> f.apply(ingest));\n+        protected OrFilter(List<StorageFilter> filters) {\n+        super(filters);\n+        }\n+\n+        @Override\n+        public boolean apply(StreamElement ingest) {\n+        return filters.stream().anyMatch(f -> f.apply(ingest));\n+        }\n     }\n-  }\n \n   /** Filter performing logical AND of several filters. */\n-  public class AndFilter extends CompoundFilter {\n \n-    protected AndFilter(List<StorageFilter> filters) {\n-      super(filters);\n-    }\n+    public class AndFilter extends CompoundFilter {\n \n-    @Override\n-    public boolean apply(StreamElement ingest) {\n-      return filters.stream().allMatch(f -> f.apply(ingest));\n+        protected AndFilter(List<StorageFilter> filters) {\n+        super(filters);\n+        }\n+\n+        @Override\n+        public boolean apply(StreamElement ingest) {\n+        return filters.stream().allMatch(f -> f.apply(ingest));\n+        }\n     }\n-  }\n \n   /**\n    * When returns {@code false} the input element is not stored in the storage and is throws away.\n@@ -67,5 +72,6 @@ public interface StorageFilter extends Serializable {\n    * @param ingest the input data\n    * @return {@code false} to throw the element away\n    */\n-  boolean apply(StreamElement ingest);\n-}\n+\n+    boolean apply(StreamElement ingest);\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}