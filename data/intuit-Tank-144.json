{
    "error_id": "144",
    "information": {
        "errors": [
            {
                "line": "60",
                "column": "26",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "            final List<String> finalList = new ArrayList<String>();\n            finalList.add(instanceId);\n            queue.execute( () -> {\n                try {\n                    Thread.sleep(WAIT_TIME);\n                } catch (InterruptedException e) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/144/VMTerminatorImpl.java\nindex 170479cd14..696068365a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/144/VMTerminatorImpl.java\n@@ -57,7 +57,7 @@ public class VMTerminatorImpl implements VMTerminator {\n         if (!vmTracker.isDevMode()) {\n             final List<String> finalList = new ArrayList<String>();\n             finalList.add(instanceId);\n-            queue.execute( () -> {\n+            queue.execute(() -> {\n                 try {\n                     Thread.sleep(WAIT_TIME);\n                 } catch (InterruptedException e) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/144/VMTerminatorImpl.java\nindex 170479cd14..5306fd42af 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/144/VMTerminatorImpl.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.vmManager;\n \n /*\n@@ -31,41 +32,40 @@ import com.intuit.tank.vm.vmManager.VMTerminator;\n \n /**\n  * VMTerminator\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class VMTerminatorImpl implements VMTerminator {\n \n-    private static final Logger LOG = LogManager.getLogger(VMTerminatorImpl.class);\n-    private static final long WAIT_TIME = 30000;// 30 seconds\n+  private static final Logger LOG = LogManager.getLogger(VMTerminatorImpl.class);\n+  private static final long WAIT_TIME = 30000;// 30 seconds\n \n-    @Inject\n-    private VMQueue queue;\n+  @Inject\n+  private VMQueue queue;\n \n-    @Inject\n-    private VMChannel channel;\n+  @Inject\n+  private VMChannel channel;\n \n-    @Inject\n-    private VMTracker vmTracker;\n+  @Inject\n+  private VMTracker vmTracker;\n \n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public void terminate(@Nonnull String instanceId) {\n-        if (!vmTracker.isDevMode()) {\n-            final List<String> finalList = new ArrayList<String>();\n-            finalList.add(instanceId);\n-            queue.execute( () -> {\n-                try {\n-                    Thread.sleep(WAIT_TIME);\n-                } catch (InterruptedException e) {\n-                    LOG.error(\"Thread interrupted. trying to send mesage to kill vm.\");\n-                }\n-                channel.terminateInstances(finalList);\n-            });\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public void terminate(@Nonnull String instanceId) {\n+    if (!vmTracker.isDevMode()) {\n+      final List<String> finalList = new ArrayList<String>();\n+      finalList.add(instanceId);\n+      queue.execute(() -> {\n+        try {\n+          Thread.sleep(WAIT_TIME);\n+        } catch (InterruptedException e) {\n+          LOG.error(\"Thread interrupted. trying to send mesage to kill vm.\");\n         }\n+        channel.terminateInstances(finalList);\n+      });\n     }\n+  }\n \n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/144/VMTerminatorImpl.java\nindex 170479cd14..df1fa104db 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/144/VMTerminatorImpl.java\n@@ -57,7 +57,7 @@ public class VMTerminatorImpl implements VMTerminator {\n         if (!vmTracker.isDevMode()) {\n             final List<String> finalList = new ArrayList<String>();\n             finalList.add(instanceId);\n-            queue.execute( () -> {\n+            queue.execute(() -> {\n                 try {\n                     Thread.sleep(WAIT_TIME);\n                 } catch (InterruptedException e) {\n@@ -68,4 +68,4 @@ public class VMTerminatorImpl implements VMTerminator {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/144/VMTerminatorImpl.java\nindex 170479cd14..05cc6d71fe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/144/VMTerminatorImpl.java\n@@ -16,15 +16,14 @@ package com.intuit.tank.vmManager;\n  * #L%\n  */\n \n+\n+\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.annotation.Nonnull;\n import javax.inject.Inject;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n-\n import com.intuit.tank.api.cloud.VMTracker;\n import com.intuit.tank.vm.vmManager.VMChannel;\n import com.intuit.tank.vm.vmManager.VMTerminator;\n@@ -35,6 +34,7 @@ import com.intuit.tank.vm.vmManager.VMTerminator;\n  * @author dangleton\n  * \n  */\n+\n public class VMTerminatorImpl implements VMTerminator {\n \n     private static final Logger LOG = LogManager.getLogger(VMTerminatorImpl.class);\n@@ -52,20 +52,20 @@ public class VMTerminatorImpl implements VMTerminator {\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public void terminate(@Nonnull String instanceId) {\n         if (!vmTracker.isDevMode()) {\n             final List<String> finalList = new ArrayList<String>();\n             finalList.add(instanceId);\n-            queue.execute( () -> {\n-                try {\n-                    Thread.sleep(WAIT_TIME);\n-                } catch (InterruptedException e) {\n-                    LOG.error(\"Thread interrupted. trying to send mesage to kill vm.\");\n-                }\n-                channel.terminateInstances(finalList);\n-            });\n+            queue.execute(()-> {\n+                              try {\n+                                  Thread.sleep(WAIT_TIME);\n+                              } catch (InterruptedException e) {\n+                                  LOG.error(\"Thread interrupted. trying to send mesage to kill vm.\");\n+                              }\n+                              channel.terminateInstances(finalList);\n+                          });\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/144/VMTerminatorImpl.java\nindex 170479cd14..696068365a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/144/VMTerminatorImpl.java\n@@ -57,7 +57,7 @@ public class VMTerminatorImpl implements VMTerminator {\n         if (!vmTracker.isDevMode()) {\n             final List<String> finalList = new ArrayList<String>();\n             finalList.add(instanceId);\n-            queue.execute( () -> {\n+            queue.execute(() -> {\n                 try {\n                     Thread.sleep(WAIT_TIME);\n                 } catch (InterruptedException e) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/144/VMTerminatorImpl.java\nindex 170479cd14..696068365a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/144/VMTerminatorImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/144/VMTerminatorImpl.java\n@@ -57,7 +57,7 @@ public class VMTerminatorImpl implements VMTerminator {\n         if (!vmTracker.isDevMode()) {\n             final List<String> finalList = new ArrayList<String>();\n             finalList.add(instanceId);\n-            queue.execute( () -> {\n+            queue.execute(() -> {\n                 try {\n                     Thread.sleep(WAIT_TIME);\n                 } catch (InterruptedException e) {\n",
            "diff_size": 1
        }
    ]
}