{
    "error_id": "56",
    "information": {
        "errors": [
            {
                "line": "67",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/56/PairCoder.java\nindex ed64451996..058b1db0d0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/56/PairCoder.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core.io;\n \n import cz.o2.proxima.annotations.Internal;\n@@ -38,12 +39,17 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n   public static <K, V> TypeDescriptor<Pair<K, V>> descriptor(\n       TypeDescriptor<K> key, TypeDescriptor<V> value) {\n \n-    return new TypeDescriptor<Pair<K, V>>() {}.where(new TypeParameter<K>() {}, key)\n-        .where(new TypeParameter<V>() {}, value);\n+    return new TypeDescriptor<Pair<K, V>>() {\n+    }.where(new TypeParameter<K>() {\n+    }, key)\n+        .where(new TypeParameter<V>() {\n+        }, value);\n   }\n \n-  @Getter private final Coder<K> keyCoder;\n-  @Getter private final Coder<V> valueCoder;\n+  @Getter\n+  private final Coder<K> keyCoder;\n+  @Getter\n+  private final Coder<V> valueCoder;\n \n   private PairCoder(Coder<K> keyCoder, Coder<V> valueCoder) {\n     this.keyCoder = keyCoder;\n@@ -64,7 +70,8 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n-    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n+    return descriptor(keyCoder.getEncodedTypeDescriptor(),\n+        valueCoder.getEncodedTypeDescriptor());\n   }\n \n   @Override\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/56/PairCoder.java\nindex ed64451996..184061f8a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/56/PairCoder.java\n@@ -80,4 +80,4 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n   public int hashCode() {\n     return Objects.hash(keyCoder, valueCoder);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/56/PairCoder.java\nindex ed64451996..e8126b6079 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/56/PairCoder.java\n@@ -28,56 +28,57 @@ import org.apache.beam.sdk.values.TypeDescriptor;\n import org.apache.beam.sdk.values.TypeParameter;\n \n /** A coder for {@link Pair}s. */\n+\n+\n @Internal\n public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n-  public static <K, V> PairCoder<K, V> of(Coder<K> keyCoder, Coder<V> valueCoder) {\n+    public static <K, V> PairCoder<K, V> of(Coder<K> keyCoder, Coder<V> valueCoder) {\n     return new PairCoder<>(keyCoder, valueCoder);\n-  }\n-\n-  public static <K, V> TypeDescriptor<Pair<K, V>> descriptor(\n-      TypeDescriptor<K> key, TypeDescriptor<V> value) {\n+    }\n \n-    return new TypeDescriptor<Pair<K, V>>() {}.where(new TypeParameter<K>() {}, key)\n+    public static <K, V> TypeDescriptor<Pair<K, V>> descriptor(TypeDescriptor<K> key, TypeDescriptor<V> value) {\n+    return new TypeDescriptor<Pair<K, V>>() {}\n+        .where(new TypeParameter<K>() {}, key)\n         .where(new TypeParameter<V>() {}, value);\n-  }\n+    }\n+\n+    @Getter private final Coder<K> keyCoder;\n \n-  @Getter private final Coder<K> keyCoder;\n-  @Getter private final Coder<V> valueCoder;\n+    @Getter private final Coder<V> valueCoder;\n \n-  private PairCoder(Coder<K> keyCoder, Coder<V> valueCoder) {\n+    private PairCoder(Coder<K> keyCoder, Coder<V> valueCoder) {\n     this.keyCoder = keyCoder;\n     this.valueCoder = valueCoder;\n-  }\n-\n-  @Override\n-  public void encode(Pair<K, V> value, OutputStream outStream) throws IOException {\n+    }\n \n+    @Override\n+    public void encode(Pair<K, V> value, OutputStream outStream) throws IOException {\n     keyCoder.encode(value.getFirst(), outStream);\n     valueCoder.encode(value.getSecond(), outStream);\n-  }\n+    }\n \n-  @Override\n-  public Pair<K, V> decode(InputStream inStream) throws IOException {\n+    @Override\n+    public Pair<K, V> decode(InputStream inStream) throws IOException {\n     return Pair.of(keyCoder.decode(inStream), valueCoder.decode(inStream));\n-  }\n+    }\n \n-  @Override\n-  public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n+    @Override\n+    public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n     return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n-  }\n+    }\n \n-  @Override\n-  public boolean equals(Object obj) {\n+    @Override\n+    public boolean equals(Object obj) {\n     if (!(obj instanceof PairCoder)) {\n-      return false;\n+        return false;\n     }\n     PairCoder other = (PairCoder) obj;\n     return other.keyCoder.equals(keyCoder) && other.valueCoder.equals(valueCoder);\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(keyCoder, valueCoder);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "68",
                    "column": "3",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/56/PairCoder.java\nindex ed64451996..16801dada8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/56/PairCoder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/56/PairCoder.java\n@@ -64,7 +64,8 @@ public class PairCoder<K, V> extends CustomCoder<Pair<K, V>> {\n \n   @Override\n   public TypeDescriptor<Pair<K, V>> getEncodedTypeDescriptor() {\n-    return descriptor(keyCoder.getEncodedTypeDescriptor(), valueCoder.getEncodedTypeDescriptor());\n+    return descriptor(keyCoder.getEncodedTypeDescriptor()\n+  , valueCoder.getEncodedTypeDescriptor());\n   }\n \n   @Override\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}