{
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "82",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public String role() {\n        final String role;\n        if(this.json.getJsonObject(\"pull_request\") == null) {\n            role = Contract.Roles.DEV;\n        } else {\n            role = Contract.Roles.REV;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/30/GithubIssue.java\nindex f9a71410f2..1e21a07688 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/30/GithubIssue.java\n@@ -79,7 +79,7 @@ public final class GithubIssue implements Issue {\n     @Override\n     public String role() {\n         final String role;\n-        if(this.json.getJsonObject(\"pull_request\") == null) {\n+        if (this.json.getJsonObject(\"pull_request\") == null) {\n             role = Contract.Roles.DEV;\n         } else {\n             role = Contract.Roles.REV;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/30/GithubIssue.java\nindex f9a71410f2..9535d845a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/30/GithubIssue.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.issues;\n \n import com.selfxdsd.api.Contract;\n@@ -31,12 +32,13 @@ import java.net.URI;\n \n /**\n  * An Issue in a Github repository.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.1\n  * @todo #128:30min Initially, all the Issues will have the DEV or REV role.\n- *  In a future version, we will set an Issue's role based on labels set\n- *  by the user.\n+ * In a future version, we will set an Issue's role based on labels set\n+ * by the user.\n+ * @since 0.0.1\n  */\n public final class GithubIssue implements Issue {\n \n@@ -57,9 +59,10 @@ public final class GithubIssue implements Issue {\n \n     /**\n      * Ctor.\n+     *\n      * @param issueUri Issues base URI.\n-     * @param json Json Issue as returned by Github's API.\n-     * @param storage Storage.\n+     * @param json     Json Issue as returned by Github's API.\n+     * @param storage  Storage.\n      */\n     public GithubIssue(\n         final URI issueUri,\n@@ -79,7 +82,7 @@ public final class GithubIssue implements Issue {\n     @Override\n     public String role() {\n         final String role;\n-        if(this.json.getJsonObject(\"pull_request\") == null) {\n+        if (this.json.getJsonObject(\"pull_request\") == null) {\n             role = Contract.Roles.DEV;\n         } else {\n             role = Contract.Roles.REV;\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "82",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/30/GithubIssue.java\nindex f9a71410f2..49240f7add 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/30/GithubIssue.java\n@@ -91,4 +91,4 @@ public final class GithubIssue implements Issue {\n     public JsonObject json() {\n         return this.json;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "60",
                    "severity": "error",
                    "message": "'}' at column 60 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/30/GithubIssue.java\nindex f9a71410f2..df57913c9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/30/GithubIssue.java\n@@ -25,7 +25,6 @@ package com.selfxdsd.core.issues;\n import com.selfxdsd.api.Contract;\n import com.selfxdsd.api.Issue;\n import com.selfxdsd.api.storage.Storage;\n-\n import javax.json.JsonObject;\n import java.net.URI;\n \n@@ -38,21 +37,29 @@ import java.net.URI;\n  *  In a future version, we will set an Issue's role based on labels set\n  *  by the user.\n  */\n+\n+\n public final class GithubIssue implements Issue {\n \n     /**\n      * Issue base uri.\n      */\n+\n+\n     private final URI issueUri;\n \n     /**\n      * Issue JSON as returned by Github's API.\n      */\n+\n+\n     private final JsonObject json;\n \n     /**\n      * Self storage, in case we want to store something.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -61,11 +68,9 @@ public final class GithubIssue implements Issue {\n      * @param json Json Issue as returned by Github's API.\n      * @param storage Storage.\n      */\n-    public GithubIssue(\n-        final URI issueUri,\n-        final JsonObject json,\n-        final Storage storage\n-    ) {\n+\n+\n+    public GithubIssue(final URI issueUri, final JsonObject json, final Storage storage) {\n         this.issueUri = issueUri;\n         this.json = json;\n         this.storage = storage;\n@@ -79,11 +84,13 @@ public final class GithubIssue implements Issue {\n     @Override\n     public String role() {\n         final String role;\n-        if(this.json.getJsonObject(\"pull_request\") == null) {\n-            role = Contract.Roles.DEV;\n-        } else {\n-            role = Contract.Roles.REV;\n-        }\n+        if(this.json.getJsonObject(\"pull_request\")== null) {\n+                                                               role = Contract.Roles.DEV;\n+                                                           }\n+\n+else {\n+         role = Contract.Roles.REV;\n+     }\n         return role;\n     }\n \n@@ -91,4 +98,4 @@ public final class GithubIssue implements Issue {\n     public JsonObject json() {\n         return this.json;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/30/GithubIssue.java\nindex f9a71410f2..1e21a07688 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/30/GithubIssue.java\n@@ -79,7 +79,7 @@ public final class GithubIssue implements Issue {\n     @Override\n     public String role() {\n         final String role;\n-        if(this.json.getJsonObject(\"pull_request\") == null) {\n+        if (this.json.getJsonObject(\"pull_request\") == null) {\n             role = Contract.Roles.DEV;\n         } else {\n             role = Contract.Roles.REV;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/30/GithubIssue.java\nindex f9a71410f2..1e21a07688 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/30/GithubIssue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/30/GithubIssue.java\n@@ -79,7 +79,7 @@ public final class GithubIssue implements Issue {\n     @Override\n     public String role() {\n         final String role;\n-        if(this.json.getJsonObject(\"pull_request\") == null) {\n+        if (this.json.getJsonObject(\"pull_request\") == null) {\n             role = Contract.Roles.DEV;\n         } else {\n             role = Contract.Roles.REV;\n",
            "diff_size": 1
        }
    ]
}