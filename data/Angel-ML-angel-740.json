{
    "error_id": "740",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/740/FailoverInvokerProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/740/FailoverInvokerProvider.java\nindex 618c4e96a0..4f0938b9d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/740/FailoverInvokerProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/740/FailoverInvokerProvider.java\n@@ -22,19 +22,19 @@ import java.util.List;\n \n public class FailoverInvokerProvider<T> {\n \n-  private List<T> failoverList;\n+    private List<T> failoverList;\n \n-  private PositiveAtomicCounter counter = new PositiveAtomicCounter();\n+    private PositiveAtomicCounter counter = new PositiveAtomicCounter();\n \n-  public FailoverInvokerProvider(List<T> failoverList) {\n-    this.failoverList = failoverList;\n-  }\n+    public FailoverInvokerProvider(List<T> failoverList) {\n+        this.failoverList = failoverList;\n+    }\n \n-  public T performceFailover() {\n-    return failoverList.get(counter.incrementAndGet() % failoverList.size());\n-  }\n+    public T performceFailover() {\n+        return failoverList.get(counter.incrementAndGet() % failoverList.size());\n+    }\n \n-  public List<T> getFailoverList() {\n-    return failoverList;\n-  }\n+    public List<T> getFailoverList() {\n+        return failoverList;\n+    }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/740/FailoverInvokerProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/740/FailoverInvokerProvider.java\nindex 618c4e96a0..ce2cb3ba10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/740/FailoverInvokerProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/740/FailoverInvokerProvider.java\n@@ -21,7 +21,6 @@ import com.tencent.angel.utils.PositiveAtomicCounter;\n import java.util.List;\n \n public class FailoverInvokerProvider<T> {\n-\n   private List<T> failoverList;\n \n   private PositiveAtomicCounter counter = new PositiveAtomicCounter();\n@@ -37,4 +36,4 @@ public class FailoverInvokerProvider<T> {\n   public List<T> getFailoverList() {\n     return failoverList;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/740/FailoverInvokerProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/740/FailoverInvokerProvider.java\nindex 618c4e96a0..aa1d9d99e7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/740/FailoverInvokerProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/740/FailoverInvokerProvider.java\n@@ -17,24 +17,22 @@\n package com.tencent.angel.io.retry;\n \n import com.tencent.angel.utils.PositiveAtomicCounter;\n-\n import java.util.List;\n \n public class FailoverInvokerProvider<T> {\n+    private List<T> failoverList;\n+    private PositiveAtomicCounter counter = new PositiveAtomicCounter();\n \n-  private List<T> failoverList;\n-\n-  private PositiveAtomicCounter counter = new PositiveAtomicCounter();\n-\n-  public FailoverInvokerProvider(List<T> failoverList) {\n+    public FailoverInvokerProvider(List<T> failoverList) {\n     this.failoverList = failoverList;\n-  }\n+    }\n \n-  public T performceFailover() {\n+    public T performceFailover() {\n     return failoverList.get(counter.incrementAndGet() % failoverList.size());\n-  }\n+    }\n \n-  public List<T> getFailoverList() {\n+    public List<T> getFailoverList() {\n     return failoverList;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}