{
    "error_id": "530",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/530/BasicType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/530/BasicType.java\nindex e06d9a42a8..0832a838c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/530/BasicType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/530/BasicType.java\n@@ -18,30 +18,30 @@\n package com.tencent.angel.ps.storage.vector.storage;\n \n public enum BasicType {\n-  INT(0), LONG(1), FLOAT(2), DOUBLE(3);\n+    INT(0), LONG(1), FLOAT(2), DOUBLE(3);\n \n-  private final int value;\n+    private final int value;\n \n-  BasicType(int value) {\n-    this.value = value;\n-  }\n+    BasicType(int value) {\n+        this.value = value;\n+    }\n \n-  public static BasicType valuesOf(int value) {\n-    switch (value) {\n-      case 0:\n-        return INT;\n-      case 1:\n-        return LONG;\n-      case 2:\n-        return FLOAT;\n-      case 3:\n-        return DOUBLE;\n-      default:\n-        return INT;\n+    public static BasicType valuesOf(int value) {\n+        switch (value) {\n+            case 0:\n+                return INT;\n+            case 1:\n+                return LONG;\n+            case 2:\n+                return FLOAT;\n+            case 3:\n+                return DOUBLE;\n+            default:\n+                return INT;\n+        }\n     }\n-  }\n \n-  public int getValue() {\n-    return value;\n-  }\n+    public int getValue() {\n+        return value;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/530/BasicType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/530/BasicType.java\nindex e06d9a42a8..e8336157c6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/530/BasicType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/530/BasicType.java\n@@ -44,4 +44,4 @@ public enum BasicType {\n   public int getValue() {\n     return value;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/530/BasicType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/530/BasicType.java\nindex e06d9a42a8..fbb1563729 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/530/BasicType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/530/BasicType.java\n@@ -17,31 +17,30 @@\n \n package com.tencent.angel.ps.storage.vector.storage;\n \n-public enum BasicType {\n-  INT(0), LONG(1), FLOAT(2), DOUBLE(3);\n \n-  private final int value;\n+public enum BasicType {INT(0), LONG(1), FLOAT(2), DOUBLE(3);\n+private final int value;\n \n-  BasicType(int value) {\n-    this.value = value;\n-  }\n+BasicType(int value) {\n+                          this.value = value;\n+}\n \n-  public static BasicType valuesOf(int value) {\n-    switch (value) {\n-      case 0:\n-        return INT;\n-      case 1:\n-        return LONG;\n-      case 2:\n-        return FLOAT;\n-      case 3:\n-        return DOUBLE;\n-      default:\n-        return INT;\n-    }\n-  }\n+public static BasicType valuesOf(int value) {\n+                          switch (value) {\n+    case 0:\n+                              return INT;\n+    case 1:\n+                              return LONG;\n+    case 2:\n+                              return FLOAT;\n+    case 3:\n+                              return DOUBLE;\n+    default:\n+                              return INT;\n+                          }\n+}\n \n-  public int getValue() {\n-    return value;\n-  }\n+public int getValue() {\n+                          return value;\n }\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}