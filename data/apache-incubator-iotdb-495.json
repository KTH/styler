{
    "error_id": "495",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.service;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'db' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/495/StartupChecks.java\nindex 15e73b20c3..f413910cec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/495/StartupChecks.java\n@@ -16,7 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.service;\n+package org.apache.iotdb.\n+\n+db.service;\n \n import java.util.ArrayList;\n import java.util.List;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/495/StartupChecks.java\nindex 15e73b20c3..e4e9bd3f72 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/495/StartupChecks.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.service;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/495/StartupChecks.java\nindex 15e73b20c3..74bd9d824a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/495/StartupChecks.java\n@@ -29,31 +29,25 @@ import org.slf4j.LoggerFactory;\n public class StartupChecks {\n \n   private static final Logger logger = LoggerFactory.getLogger(StartupChecks.class);\n-  public static final StartupCheck checkJMXPort = () -> {\n+\n+public static final StartupCheck checkJMXPort = () -> {\n     String jmxPort = System.getProperty(IoTDBConstant.REMOTE_JMX_PORT_NAME);\n     if (jmxPort == null) {\n-      logger.warn(\"JMX is not enabled to receive remote connection. \"\n-              + \"Please check conf/{}.sh(Unix or OS X, if you use Windows, \"\n-              + \"check conf/{}.bat) for more info\",\n-          IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n-      jmxPort = System.getProperty(IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, \"31999\");\n+      logger.warn(\"JMX is not enabled to receive remote connection. \" + \"Please check conf/{}.sh(Unix or OS X, if you use Windows, \" + \"check conf/{}.bat) for more info\", IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n+jmxPort = System.getProperty(IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, \"31999\");\n       if (jmxPort == null) {\n-        logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\"\n-                + \" check conf/{}.bat)\",\n-            IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, IoTDBConstant.ENV_FILE_NAME,\n-            IoTDBConstant.ENV_FILE_NAME);\n-      }\n+        logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\" + \" check conf/{}.bat)\", IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n+  }\n     } else {\n       logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n     }\n   };\n-  public static final StartupCheck checkJDK = () -> {\n+\n+public static final StartupCheck checkJDK = () -> {\n     int version = CommonUtils.getJdkVersion();\n     if (version < IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n-      throw new StartupException(\n-          String.format(\"Requires JDK version >= %d, current version is %d\",\n-              IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n-    } else {\n+      throw new StartupException(String.format(\"Requires JDK version >= %d, current version is %d\", IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n+  } else {\n       logger.info(\"JDK veriosn is {}.\", version);\n     }\n   };\n@@ -78,4 +72,4 @@ public class StartupChecks {\n       check.execute();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 279).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 32, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 226).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 56, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 52, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "column": "51",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "19",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 52, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 52, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 48, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "58",
                    "column": "66",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "61",
                    "column": "69",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 27, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 29, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/495/StartupChecks.java\nindex 15e73b20c3..ff10c46c7b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/495/StartupChecks.java\n@@ -17,7 +17,6 @@\n  * under the License.\n  */\n package org.apache.iotdb.db.service;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.iotdb.db.conf.IoTDBConstant;\n@@ -28,54 +27,55 @@ import org.slf4j.LoggerFactory;\n \n public class StartupChecks {\n \n-  private static final Logger logger = LoggerFactory.getLogger(StartupChecks.class);\n-  public static final StartupCheck checkJMXPort = () -> {\n-    String jmxPort = System.getProperty(IoTDBConstant.REMOTE_JMX_PORT_NAME);\n-    if (jmxPort == null) {\n-      logger.warn(\"JMX is not enabled to receive remote connection. \"\n-              + \"Please check conf/{}.sh(Unix or OS X, if you use Windows, \"\n-              + \"check conf/{}.bat) for more info\",\n-          IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n-      jmxPort = System.getProperty(IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, \"31999\");\n-      if (jmxPort == null) {\n-        logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\"\n-                + \" check conf/{}.bat)\",\n-            IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, IoTDBConstant.ENV_FILE_NAME,\n-            IoTDBConstant.ENV_FILE_NAME);\n-      }\n-    } else {\n-      logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n-    }\n-  };\n-  public static final StartupCheck checkJDK = () -> {\n-    int version = CommonUtils.getJdkVersion();\n-    if (version < IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n-      throw new StartupException(\n-          String.format(\"Requires JDK version >= %d, current version is %d\",\n-              IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n-    } else {\n-      logger.info(\"JDK veriosn is {}.\", version);\n-    }\n-  };\n-  private final List<StartupCheck> preChecks = new ArrayList<>();\n-  private final List<StartupCheck> defaultTests = new ArrayList<>();\n \n-  public StartupChecks() {\n-    defaultTests.add(checkJMXPort);\n-    defaultTests.add(checkJDK);\n-  }\n+    private static final Logger logger = LoggerFactory.getLogger(StartupChecks.class);\n+\n+\n+    public static final StartupCheck checkJMXPort = ()-> {\n+        String jmxPort = System.getProperty(IoTDBConstant.REMOTE_JMX_PORT_NAME);\n+        if(jmxPort == null) {\n+                                                        logger.warn(\"JMX is not enabled to receive remote connection. \" + \"Please check conf/{}.sh(Unix or OS X, if you use Windows, \" + \"check conf/{}.bat) for more info\", IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n+                                                        jmxPort = System.getProperty(IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, \"31999\");\n+                                                        if (jmxPort == null) {\n+                                logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\" + \" check conf/{}.bat)\", IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n+                                                        }\n+        } else {\n+                                                        logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n+        }\n+                                                    };\n+\n+\n+    public static final StartupCheck checkJDK = ()-> {\n+        int version = CommonUtils.getJdkVersion();\n+        if(version< IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n+                                                    throw new StartupException(String.format(\"Requires JDK version >= %d, current version is %d\", IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n+        } else {\n+                                                    logger.info(\"JDK veriosn is {}.\", version);\n+        }\n+                                                };\n \n-  public StartupChecks withDefaultTest() {\n+\n+    private final List < StartupCheck> preChecks = new ArrayList <>();\n+\n+\n+    private final List < StartupCheck> defaultTests = new ArrayList <>();\n+\n+    public StartupChecks() {\n+defaultTests.add(checkJMXPort);\n+defaultTests.add(checkJDK);\n+                           } public StartupChecks withDefaultTest() {\n     preChecks.addAll(defaultTests);\n     return this;\n-  }\n+                             }\n \n   /**\n    * execute every pretests.\n    */\n-  public void verify() throws StartupException {\n-    for (StartupCheck check : preChecks) {\n-      check.execute();\n+\n+    public void verify() throws StartupException {\n+    for(StartupCheck check : preChecks) {\n+                                                     check.execute();\n+    }\n     }\n-  }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'db' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/495/StartupChecks.java\nindex 15e73b20c3..f413910cec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/495/StartupChecks.java\n@@ -16,7 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.service;\n+package org.apache.iotdb.\n+\n+db.service;\n \n import java.util.ArrayList;\n import java.util.List;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'org' has incorrect indentation level 0, expected level should be 5.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 7, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/495/StartupChecks.java\nindex 15e73b20c3..b8905ab275 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/495/StartupChecks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/495/StartupChecks.java\n@@ -15,67 +15,68 @@\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n  * under the License.\n- */\n-package org.apache.iotdb.db.service;\n+ */package\n+org.apache.iotdb.db.service;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.iotdb.db.conf.IoTDBConstant;\n-import org.apache.iotdb.db.exception.StartupException;\n-import org.apache.iotdb.db.utils.CommonUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+ import java.util.ArrayList;\n+ import java.util.List;\n+ import org.apache.iotdb.db.conf.IoTDBConstant;\n+ import org.apache.iotdb.db.exception.StartupException;\n+ import org.apache.iotdb.db.utils.CommonUtils;\n+ import org.slf4j.Logger;\n+ import org.slf4j.LoggerFactory;\n \n-public class StartupChecks {\n+ public class StartupChecks {\n \n-  private static final Logger logger = LoggerFactory.getLogger(StartupChecks.class);\n-  public static final StartupCheck checkJMXPort = () -> {\n-    String jmxPort = System.getProperty(IoTDBConstant.REMOTE_JMX_PORT_NAME);\n-    if (jmxPort == null) {\n-      logger.warn(\"JMX is not enabled to receive remote connection. \"\n-              + \"Please check conf/{}.sh(Unix or OS X, if you use Windows, \"\n-              + \"check conf/{}.bat) for more info\",\n-          IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n-      jmxPort = System.getProperty(IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, \"31999\");\n-      if (jmxPort == null) {\n-        logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\"\n-                + \" check conf/{}.bat)\",\n-            IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, IoTDBConstant.ENV_FILE_NAME,\n-            IoTDBConstant.ENV_FILE_NAME);\n-      }\n-    } else {\n-      logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n-    }\n-  };\n-  public static final StartupCheck checkJDK = () -> {\n-    int version = CommonUtils.getJdkVersion();\n-    if (version < IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n-      throw new StartupException(\n-          String.format(\"Requires JDK version >= %d, current version is %d\",\n-              IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n-    } else {\n-      logger.info(\"JDK veriosn is {}.\", version);\n-    }\n-  };\n-  private final List<StartupCheck> preChecks = new ArrayList<>();\n-  private final List<StartupCheck> defaultTests = new ArrayList<>();\n+   private static final Logger logger = LoggerFactory.getLogger(StartupChecks.class);\n+   public static final StartupCheck checkJMXPort = () -> {\n+     String jmxPort = System.getProperty(IoTDBConstant.REMOTE_JMX_PORT_NAME);\n+     if (jmxPort == null) {\n+       logger.warn(\"JMX is not enabled to receive remote connection. \"\n+               + \"Please check conf/{}.sh(Unix or OS X, if you use Windows, \"\n+               + \"check conf/{}.bat) for more info\",\n+           IoTDBConstant.ENV_FILE_NAME, IoTDBConstant.ENV_FILE_NAME);\n+       jmxPort = System.getProperty(IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, \"31999\");\n+       if (jmxPort == null) {\n+         logger.warn(\"{} missing from {}.sh(Unix or OS X, if you use Windows,\"\n+                 + \" check conf/{}.bat)\",\n+             IoTDBConstant.IOTDB_LOCAL_JMX_PORT_NAME, IoTDBConstant.ENV_FILE_NAME,\n+             IoTDBConstant.ENV_FILE_NAME);\n+       }\n+     } else {\n+       logger.info(\"JMX is enabled to receive remote connection on port {}\", jmxPort);\n+     }\n+   };\n+   public static final StartupCheck checkJDK = () -> {\n+     int version = CommonUtils.getJdkVersion();\n+     if (version < IoTDBConstant.MIN_SUPPORTED_JDK_VERSION) {\n+       throw new StartupException(\n+           String.format(\"Requires JDK version >= %d, current version is %d\",\n+               IoTDBConstant.MIN_SUPPORTED_JDK_VERSION, version));\n+     } else {\n+       logger.info(\"JDK veriosn is {}.\", version);\n+     }\n+   };\n+   private final List<StartupCheck> preChecks = new ArrayList<>();\n+   private final List<StartupCheck> defaultTests = new ArrayList<>();\n \n-  public StartupChecks() {\n-    defaultTests.add(checkJMXPort);\n-    defaultTests.add(checkJDK);\n-  }\n+   public StartupChecks() {\n+     defaultTests.add(checkJMXPort);\n+     defaultTests.add(checkJDK);\n+   }\n \n-  public StartupChecks withDefaultTest() {\n-    preChecks.addAll(defaultTests);\n-    return this;\n-  }\n+   public StartupChecks withDefaultTest() {\n+     preChecks.addAll(defaultTests);\n+     return this;\n+   }\n \n-  /**\n+   /**\n    * execute every pretests.\n    */\n-  public void verify() throws StartupException {\n-    for (StartupCheck check : preChecks) {\n-      check.execute();\n-    }\n-  }\n-}\n+   public void verify() throws StartupException {\n+     for (StartupCheck check : preChecks) {\n+       check.execute();\n+     }\n+   }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 57
        }
    ]
}