{
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/17/QuantileSketch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/17/QuantileSketch.java\nindex f60f10d7ce..8ca2f74036 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/17/QuantileSketch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/17/QuantileSketch.java\n@@ -21,50 +21,50 @@ import java.io.Serializable;\n \n public abstract class QuantileSketch implements Serializable {\n \n-  protected long n; // total number of data items appeared\n-  protected long estimateN; // estimated total number of data items there will be,\n-  // if not -1, sufficient space will be allocated at once\n+    protected long n; // total number of data items appeared\n+    protected long estimateN; // estimated total number of data items there will be,\n+    // if not -1, sufficient space will be allocated at once\n \n-  protected float minValue;\n-  protected float maxValue;\n+    protected float minValue;\n+    protected float maxValue;\n \n-  public QuantileSketch(long estimateN) {\n-    this.estimateN = estimateN > 0 ? estimateN : -1L;\n-  }\n+    public QuantileSketch(long estimateN) {\n+        this.estimateN = estimateN > 0 ? estimateN : -1L;\n+    }\n \n-  public QuantileSketch() {\n-    this(-1L);\n-  }\n+    public QuantileSketch() {\n+        this(-1L);\n+    }\n \n-  public abstract void reset();\n+    public abstract void reset();\n \n-  public abstract void update(float value);\n+    public abstract void update(float value);\n \n-  public abstract void merge(QuantileSketch other);\n+    public abstract void merge(QuantileSketch other);\n \n-  public abstract float getQuantile(float fraction);\n+    public abstract float getQuantile(float fraction);\n \n-  public abstract float[] getQuantiles(float[] fractions);\n+    public abstract float[] getQuantiles(float[] fractions);\n \n-  public abstract float[] getQuantiles(int evenPartition);\n+    public abstract float[] getQuantiles(int evenPartition);\n \n-  public boolean isEmpty() {\n-    return n == 0;\n-  }\n+    public boolean isEmpty() {\n+        return n == 0;\n+    }\n \n-  public long getN() {\n-    return n;\n-  }\n+    public long getN() {\n+        return n;\n+    }\n \n-  public long getEstimateN() {\n-    return estimateN;\n-  }\n+    public long getEstimateN() {\n+        return estimateN;\n+    }\n \n-  public float getMinValue() {\n-    return minValue;\n-  }\n+    public float getMinValue() {\n+        return minValue;\n+    }\n \n-  public float getMaxValue() {\n-    return maxValue;\n-  }\n+    public float getMaxValue() {\n+        return maxValue;\n+    }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/17/QuantileSketch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/17/QuantileSketch.java\nindex f60f10d7ce..237e2d2f84 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/17/QuantileSketch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/17/QuantileSketch.java\n@@ -67,4 +67,4 @@ public abstract class QuantileSketch implements Serializable {\n   public float getMaxValue() {\n     return maxValue;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/17/QuantileSketch.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/17/QuantileSketch.java\nindex f60f10d7ce..ac4ae088e2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/17/QuantileSketch.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/17/QuantileSketch.java\n@@ -21,50 +21,49 @@ import java.io.Serializable;\n \n public abstract class QuantileSketch implements Serializable {\n \n-  protected long n; // total number of data items appeared\n-  protected long estimateN; // estimated total number of data items there will be,\n+    protected long n; // total number of data items appeared\n+    protected long estimateN; // estimated total number of data items there will be,\n   // if not -1, sufficient space will be allocated at once\n+    protected float minValue;\n+    protected float maxValue;\n \n-  protected float minValue;\n-  protected float maxValue;\n-\n-  public QuantileSketch(long estimateN) {\n+    public QuantileSketch(long estimateN) {\n     this.estimateN = estimateN > 0 ? estimateN : -1L;\n-  }\n+    }\n \n-  public QuantileSketch() {\n+    public QuantileSketch() {\n     this(-1L);\n-  }\n+    }\n \n-  public abstract void reset();\n+    public abstract void reset();\n \n-  public abstract void update(float value);\n+    public abstract void update(float value);\n \n-  public abstract void merge(QuantileSketch other);\n+    public abstract void merge(QuantileSketch other);\n \n-  public abstract float getQuantile(float fraction);\n+    public abstract float getQuantile(float fraction);\n \n-  public abstract float[] getQuantiles(float[] fractions);\n+    public abstract float[] getQuantiles(float[] fractions);\n \n-  public abstract float[] getQuantiles(int evenPartition);\n+    public abstract float[] getQuantiles(int evenPartition);\n \n-  public boolean isEmpty() {\n+    public boolean isEmpty() {\n     return n == 0;\n-  }\n+    }\n \n-  public long getN() {\n+    public long getN() {\n     return n;\n-  }\n+    }\n \n-  public long getEstimateN() {\n+    public long getEstimateN() {\n     return estimateN;\n-  }\n+    }\n \n-  public float getMinValue() {\n+    public float getMinValue() {\n     return minValue;\n-  }\n+    }\n \n-  public float getMaxValue() {\n+    public float getMaxValue() {\n     return maxValue;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}