{
    "error_id": "476",
    "information": {
        "errors": [
            {
                "line": "181",
                "column": "58",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    Map<String, Method> visibleMethods = new HashMap<>();\n    for (Method method : clazz.getMethods()) {\n      if (method.isAnnotationPresent(ApiOperation.class) &&\n          method.getAnnotation(ApiOperation.class).hidden()) {\n        continue;\n      }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/476/SwaggerEnvironment.java\nindex 9bb6bcd76c..dddfd77a43 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/476/SwaggerEnvironment.java\n@@ -178,12 +178,12 @@ public class SwaggerEnvironment {\n   private Map<String, Method> retrieveVisibleMethods(Class<?> clazz) {\n     Map<String, Method> visibleMethods = new HashMap<>();\n     for (Method method : clazz.getMethods()) {\n-      if (method.isAnnotationPresent(ApiOperation.class) &&\n-          method.getAnnotation(ApiOperation.class).hidden()) {\n-        continue;\n-      }\n-      visibleMethods.put(method.getName(), method);\n-    }\n-    return visibleMethods;\n-  }\n+      if (method.isAnnotationPresent(ApiOperation.class)\n+          && method.getAnnotation(ApiOperation.class).hidden()) {\n+     continue;\n+   }\n+   visibleMethods.put(method.getName(), method);\n+ }\n+ return visibleMethods;\n+}\n }\n",
            "diff_size": 8
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "182",
                    "column": "58",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/476/SwaggerEnvironment.java\nindex 9bb6bcd76c..f3e3b389b8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/476/SwaggerEnvironment.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package io.servicecomb.swagger.engine;\n \n import java.lang.reflect.Method;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/476/SwaggerEnvironment.java\nindex 9bb6bcd76c..9d4646b65b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/476/SwaggerEnvironment.java\n@@ -178,12 +178,11 @@ public class SwaggerEnvironment {\n   private Map<String, Method> retrieveVisibleMethods(Class<?> clazz) {\n     Map<String, Method> visibleMethods = new HashMap<>();\n     for (Method method : clazz.getMethods()) {\n-      if (method.isAnnotationPresent(ApiOperation.class) &&\n-          method.getAnnotation(ApiOperation.class).hidden()) {\n-        continue;\n+      if (method.isAnnotationPresent(ApiOperation.class) && method.getAnnotation(ApiOperation.class).hidden()) {\n+  continue;\n       }\n       visibleMethods.put(method.getName(), method);\n     }\n     return visibleMethods;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/476/SwaggerEnvironment.java\nindex 9bb6bcd76c..dddfd77a43 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/476/SwaggerEnvironment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/476/SwaggerEnvironment.java\n@@ -178,12 +178,12 @@ public class SwaggerEnvironment {\n   private Map<String, Method> retrieveVisibleMethods(Class<?> clazz) {\n     Map<String, Method> visibleMethods = new HashMap<>();\n     for (Method method : clazz.getMethods()) {\n-      if (method.isAnnotationPresent(ApiOperation.class) &&\n-          method.getAnnotation(ApiOperation.class).hidden()) {\n-        continue;\n-      }\n-      visibleMethods.put(method.getName(), method);\n-    }\n-    return visibleMethods;\n-  }\n+      if (method.isAnnotationPresent(ApiOperation.class)\n+          && method.getAnnotation(ApiOperation.class).hidden()) {\n+     continue;\n+   }\n+   visibleMethods.put(method.getName(), method);\n+ }\n+ return visibleMethods;\n+}\n }\n",
            "diff_size": 8
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "181",
                    "column": "58",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}