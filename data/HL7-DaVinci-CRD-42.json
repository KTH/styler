{
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "69",
                "severity": "warning",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "  public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n    return (args) -> {\n      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n      logger.info(\"loading all rules into database matching pattern: \" + pattern);\n      ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n      Resource[] cqlFileResources = resolver.getResources(pattern);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/42/Application.java\nindex 6399828be3..1542e3f328 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/42/Application.java\n@@ -49,7 +49,7 @@ public class Application {\n   @Profile(\"localDb\")\n   public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n     return (args) -> {\n-      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n+      String pattern = \"file:\" + Paths.get(config.getLocalDbRules(), \"/*/*/*/\").toAbsolutePath();\n       logger.info(\"loading all rules into database matching pattern: \" + pattern);\n       ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n       Resource[] cqlFileResources = resolver.getResources(pattern);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/42/Application.java\nindex 6399828be3..060ab59bb4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/42/Application.java\n@@ -40,7 +40,6 @@ public class Application {\n   }\n \n \n-\n   /**\n    * Load all rules from the folder cql_rules, there should be a rule and rule info file.\n    */\n@@ -49,11 +48,11 @@ public class Application {\n   @Profile(\"localDb\")\n   public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n     return (args) -> {\n-      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n+      String pattern = \"file:\" + Paths.get(config.getLocalDbRules(), \"/*/*/*/\").toAbsolutePath();\n       logger.info(\"loading all rules into database matching pattern: \" + pattern);\n       ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n       Resource[] cqlFileResources = resolver.getResources(pattern);\n-      for (Resource cqlFileResource: cqlFileResources) {\n+      for (Resource cqlFileResource : cqlFileResources) {\n         File zipF = File.createTempFile(\"crd_server_cql_package\", \".zip\");\n         try {\n           ZipUtil.pack(cqlFileResource.getFile(), zipF);\n@@ -62,7 +61,7 @@ public class Application {\n         }\n         String fileName = cqlFileResource.getFile().getName();\n         String code = fileName.substring(0, fileName.indexOf('_') == -1 ? fileName.length() : fileName.indexOf('_'));\n-        String codeSystemShortName  = cqlFileResource.getFile().getParentFile().getName();\n+        String codeSystemShortName = cqlFileResource.getFile().getParentFile().getName();\n         String payorNameShortName = cqlFileResource.getFile().getParentFile().getParentFile().getName();\n         String codeSystem = ShortNameMaps.CODE_SYSTEM_SHORT_NAME_TO_FULL_NAME.get(codeSystemShortName);\n         String payorName = ShortNameMaps.PAYOR_SHORT_NAME_TO_FULL_NAME.get(payorNameShortName);\n@@ -72,7 +71,7 @@ public class Application {\n         rule.setCodeSystem(codeSystem);\n         rule.setCqlPackagePath(zipF.getAbsolutePath());\n         repository.save(rule);\n-        logger.info(String.format(\"Added rule %s, %s, %s\",payorNameShortName,codeSystemShortName,code));\n+        logger.info(String.format(\"Added rule %s, %s, %s\", payorNameShortName, codeSystemShortName, code));\n       }\n     };\n   }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/42/Application.java\nindex 6399828be3..109545183e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/42/Application.java\n@@ -33,15 +33,11 @@ public class Application {\n \n   static final Logger logger =\n       LoggerFactory.getLogger(Application.class);\n-\n-\n-  public static void main(String[] args) {\n+public static void main(String[] args) {\n     SpringApplication.run(Application.class, args);\n   }\n \n-\n-\n-  /**\n+/**\n    * Load all rules from the folder cql_rules, there should be a rule and rule info file.\n    */\n   @Bean\n@@ -49,11 +45,11 @@ public class Application {\n   @Profile(\"localDb\")\n   public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n     return (args) -> {\n-      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n+      String pattern = \"file:\" + Paths.get(config.getLocalDbRules(), \"/*/*/*/\").toAbsolutePath();\n       logger.info(\"loading all rules into database matching pattern: \" + pattern);\n       ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n       Resource[] cqlFileResources = resolver.getResources(pattern);\n-      for (Resource cqlFileResource: cqlFileResources) {\n+      for (Resource cqlFileResource : cqlFileResources) {\n         File zipF = File.createTempFile(\"crd_server_cql_package\", \".zip\");\n         try {\n           ZipUtil.pack(cqlFileResource.getFile(), zipF);\n@@ -62,7 +58,7 @@ public class Application {\n         }\n         String fileName = cqlFileResource.getFile().getName();\n         String code = fileName.substring(0, fileName.indexOf('_') == -1 ? fileName.length() : fileName.indexOf('_'));\n-        String codeSystemShortName  = cqlFileResource.getFile().getParentFile().getName();\n+        String codeSystemShortName = cqlFileResource.getFile().getParentFile().getName();\n         String payorNameShortName = cqlFileResource.getFile().getParentFile().getParentFile().getName();\n         String codeSystem = ShortNameMaps.CODE_SYSTEM_SHORT_NAME_TO_FULL_NAME.get(codeSystemShortName);\n         String payorName = ShortNameMaps.PAYOR_SHORT_NAME_TO_FULL_NAME.get(payorNameShortName);\n@@ -72,10 +68,10 @@ public class Application {\n         rule.setCodeSystem(codeSystem);\n         rule.setCqlPackagePath(zipF.getAbsolutePath());\n         repository.save(rule);\n-        logger.info(String.format(\"Added rule %s, %s, %s\",payorNameShortName,codeSystemShortName,code));\n+        logger.info(String.format(\"Added rule %s, %s, %s\", payorNameShortName,codeSystemShortName,code));\n       }\n     };\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 62, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 17, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "79",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "79",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "97",
                    "severity": "warning",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/42/Application.java\nindex 6399828be3..3f127879f4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/42/Application.java\n@@ -22,6 +22,7 @@ import org.springframework.core.io.support.PathMatchingResourcePatternResolver;\n import org.springframework.core.io.support.ResourcePatternResolver;\n import org.zeroturnaround.zip.ZipUtil;\n \n+\n @SpringBootApplication\n // Finds the FhirServlet and runs it\n @ServletComponentScan\n@@ -30,52 +31,51 @@ import org.zeroturnaround.zip.ZipUtil;\n  * or it won't find the dependencies.  Only initialization functions should be put here.\n  */\n public class Application {\n-\n-  static final Logger logger =\n-      LoggerFactory.getLogger(Application.class);\n-\n-\n-  public static void main(String[] args) {\n+    static final Logger logger = LoggerFactory.getLogger(Application.class);\n+    public static void main(String[] args) {\n     SpringApplication.run(Application.class, args);\n-  }\n+    }\n \n \n \n   /**\n    * Load all rules from the folder cql_rules, there should be a rule and rule info file.\n    */\n-  @Bean\n-  @Autowired\n-  @Profile(\"localDb\")\n-  public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n-    return (args) -> {\n-      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n-      logger.info(\"loading all rules into database matching pattern: \" + pattern);\n-      ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n-      Resource[] cqlFileResources = resolver.getResources(pattern);\n-      for (Resource cqlFileResource: cqlFileResources) {\n-        File zipF = File.createTempFile(\"crd_server_cql_package\", \".zip\");\n-        try {\n-          ZipUtil.pack(cqlFileResource.getFile(), zipF);\n-        } catch (Exception e) {\n-          continue;\n-        }\n-        String fileName = cqlFileResource.getFile().getName();\n-        String code = fileName.substring(0, fileName.indexOf('_') == -1 ? fileName.length() : fileName.indexOf('_'));\n-        String codeSystemShortName  = cqlFileResource.getFile().getParentFile().getName();\n-        String payorNameShortName = cqlFileResource.getFile().getParentFile().getParentFile().getName();\n-        String codeSystem = ShortNameMaps.CODE_SYSTEM_SHORT_NAME_TO_FULL_NAME.get(codeSystemShortName);\n-        String payorName = ShortNameMaps.PAYOR_SHORT_NAME_TO_FULL_NAME.get(payorNameShortName);\n-        CoverageRequirementRule rule = new CoverageRequirementRule();\n-        rule.setPayor(payorName);\n-        rule.setCode(code);\n-        rule.setCodeSystem(codeSystem);\n-        rule.setCqlPackagePath(zipF.getAbsolutePath());\n-        repository.save(rule);\n-        logger.info(String.format(\"Added rule %s, %s, %s\",payorNameShortName,codeSystemShortName,code));\n-      }\n-    };\n-  }\n \n \n-}\n+    @Bean\n+    @Autowired\n+    @Profile(\"localDb\")\n+    public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n+    return (args)-> {\n+        String pattern = \"file:\" + Paths.get(config.getLocalDbRules(), \"/*/*/*/\").toAbsolutePath();\n+        logger.info(\"loading all rules into database matching pattern: \" + pattern);\n+        ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n+        Resource[] cqlFileResources = resolver.getResources(pattern);\n+        for (Resource cqlFileResource : cqlFileResources) {\n+               File zipF = File.createTempFile(\"crd_server_cql_package\", \".zip\");\n+               try {\n+                                                              ZipUtil.pack(cqlFileResource.getFile(), zipF);\n+               } catch (Exception e) {\n+                 continue;\n+               }\n+\n+\n+               String fileName = cqlFileResource.getFile().getName();\n+               String code = fileName.substring(0, fileName.indexOf('_') == -1?fileName.length():\n+                                                   fileName.indexOf('_'));\n+               String codeSystemShortName = cqlFileResource.getFile().getParentFile().getName();\n+               String payorNameShortName = cqlFileResource.getFile().getParentFile().getParentFile().getName();\n+               String codeSystem = ShortNameMaps.CODE_SYSTEM_SHORT_NAME_TO_FULL_NAME.get(codeSystemShortName);\n+               String payorName = ShortNameMaps.PAYOR_SHORT_NAME_TO_FULL_NAME.get(payorNameShortName);\n+               CoverageRequirementRule rule = new CoverageRequirementRule();\n+               rule.setPayor(payorName);\n+               rule.setCode(code);\n+               rule.setCodeSystem(codeSystem);\n+               rule.setCqlPackagePath(zipF.getAbsolutePath());\n+               repository.save(rule);\n+               logger.info(String.format(\"Added rule %s, %s, %s\", payorNameShortName, codeSystemShortName, code));\n+        }\n+           };\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 76
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/42/Application.java\nindex 6399828be3..1542e3f328 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/42/Application.java\n@@ -49,7 +49,7 @@ public class Application {\n   @Profile(\"localDb\")\n   public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n     return (args) -> {\n-      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n+      String pattern = \"file:\" + Paths.get(config.getLocalDbRules(), \"/*/*/*/\").toAbsolutePath();\n       logger.info(\"loading all rules into database matching pattern: \" + pattern);\n       ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n       Resource[] cqlFileResources = resolver.getResources(pattern);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/42/Application.java\nindex 6399828be3..9e514bd37f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/42/Application.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/42/Application.java\n@@ -49,7 +49,7 @@ public class Application {\n   @Profile(\"localDb\")\n   public CommandLineRunner loadData(DataRepository repository, YamlConfig config) {\n     return (args) -> {\n-      String pattern = \"file:\" + Paths.get(config.getLocalDbRules() ,\"/*/*/*/\").toAbsolutePath();\n+      String pattern = \"file:\" + Paths.get(config.getLocalDbRules(),\"/*/*/*/\").toAbsolutePath();\n       logger.info(\"loading all rules into database matching pattern: \" + pattern);\n       ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(new FileSystemResourceLoader());\n       Resource[] cqlFileResources = resolver.getResources(pattern);\n",
            "diff_size": 1
        }
    ]
}