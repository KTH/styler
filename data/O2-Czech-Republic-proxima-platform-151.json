{
    "error_id": "151",
    "information": {
        "errors": [
            {
                "line": "75",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    assertEquals(\"bucket\", blobInfo.get().getBucket());\n    assertEquals(\n        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/151/GCloudClientTest.java\nindex c612a652d3..3d21d0ce1d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/151/GCloudClientTest.java\n@@ -72,6 +72,8 @@ public class GCloudClientTest {\n     assertEquals(\"path/my/blob/name\", blobInfo.get().getName());\n     assertEquals(\"bucket\", blobInfo.get().getBucket());\n     assertEquals(\n-        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n+    storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n   }\n }\n+\n+  \n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/151/GCloudClientTest.java\nindex c612a652d3..2f715d4a84 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/151/GCloudClientTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.gcloud.storage;\n \n import static org.junit.Assert.assertEquals;\n@@ -72,6 +73,7 @@ public class GCloudClientTest {\n     assertEquals(\"path/my/blob/name\", blobInfo.get().getName());\n     assertEquals(\"bucket\", blobInfo.get().getBucket());\n     assertEquals(\n-        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n+        storage == null ? StorageClass.STANDARD : storage,\n+        blobInfo.get().getStorageClass());\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/151/GCloudClientTest.java\nindex c612a652d3..c7b7202692 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/151/GCloudClientTest.java\n@@ -36,7 +36,7 @@ public class GCloudClientTest {\n \n   private final Repository repo =\n       Repository.of(() -> ConfigFactory.load(\"test-reference.conf\").resolve());\n-  private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n+private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n   private final URI uri = URI.create(\"gs://bucket/path\");\n \n   @Test\n@@ -54,24 +54,21 @@ public class GCloudClientTest {\n               blobInfo.set((BlobInfo) invocationOnMock.getArguments()[0]);\n               return mock(Blob.class);\n             });\n-    GCloudClient client =\n+\n+        GCloudClient client =\n         new GCloudClient(\n             entity,\n             uri,\n-            storage != null\n-                ? Collections.singletonMap(\"storage-class\", storage.toString())\n-                : Collections.emptyMap()) {\n+            storage != null ? Collections.singletonMap(\"storage-class\", storage.toString()) : Collections.emptyMap()) {\n \n-          @Override\n+  @Override\n           Storage client() {\n             return mock;\n           }\n         };\n-\n-    client.createBlob(\"//my/blob/name\");\n+client.createBlob(\"//my/blob/name\");\n     assertEquals(\"path/my/blob/name\", blobInfo.get().getName());\n     assertEquals(\"bucket\", blobInfo.get().getBucket());\n-    assertEquals(\n-        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n+    assertEquals(storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 69, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 69, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 52, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 30, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 26, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/151/GCloudClientTest.java\nindex c612a652d3..5294acac4a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/151/GCloudClientTest.java\n@@ -17,7 +17,6 @@ package cz.o2.proxima.direct.gcloud.storage;\n \n import static org.junit.Assert.assertEquals;\n import static org.mockito.Mockito.*;\n-\n import com.google.cloud.storage.Blob;\n import com.google.cloud.storage.BlobInfo;\n import com.google.cloud.storage.Storage;\n@@ -32,46 +31,37 @@ import javax.annotation.Nullable;\n import org.junit.Test;\n \n /** Test {@link GCloudClient}. */\n+\n+\n public class GCloudClientTest {\n \n-  private final Repository repo =\n-      Repository.of(() -> ConfigFactory.load(\"test-reference.conf\").resolve());\n-  private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n-  private final URI uri = URI.create(\"gs://bucket/path\");\n+    private final Repository repo = Repository.of(() -> ConfigFactory.load(\"test-reference.conf\").resolve());\n+    private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n+    private final URI uri = URI.create(\"gs://bucket/path\");\n \n-  @Test\n-  public void testCreateBlob() {\n+    @Test\n+    public void testCreateBlob() {\n     createBlob(null);\n     createBlob(StorageClass.COLDLINE);\n-  }\n+    }\n \n-  private void createBlob(@Nullable StorageClass storage) {\n+    private void createBlob(@Nullable StorageClass storage) {\n     Storage mock = mock(Storage.class);\n     AtomicReference<BlobInfo> blobInfo = new AtomicReference<>();\n-    when(mock.create((BlobInfo) any(), any()))\n-        .then(\n-            invocationOnMock -> {\n-              blobInfo.set((BlobInfo) invocationOnMock.getArguments()[0]);\n-              return mock(Blob.class);\n-            });\n-    GCloudClient client =\n-        new GCloudClient(\n-            entity,\n-            uri,\n-            storage != null\n-                ? Collections.singletonMap(\"storage-class\", storage.toString())\n-                : Collections.emptyMap()) {\n-\n-          @Override\n-          Storage client() {\n-            return mock;\n-          }\n-        };\n+    when(mock.create((BlobInfo) any(), any())).then(invocationOnMock -> {\n+                                                                     blobInfo.set((BlobInfo) invocationOnMock.getArguments()[0]);\n+                                                                     return mock(Blob.class);\n+                                                    });\n+    GCloudClient client = new GCloudClient(entity, uri, storage != null ? Collections.singletonMap(\"storage-class\", storage.toString()) : Collections.emptyMap()) {\n \n+        @Override\n+        Storage client() {\n+                              return mock;\n+        }\n+                          };\n     client.createBlob(\"//my/blob/name\");\n     assertEquals(\"path/my/blob/name\", blobInfo.get().getName());\n     assertEquals(\"bucket\", blobInfo.get().getBucket());\n-    assertEquals(\n-        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n-  }\n-}\n+    assertEquals(storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "75",
                    "column": "16",
                    "severity": "error",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "column": "47",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 8, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/151/GCloudClientTest.java\nindex c612a652d3..2ff1ec14d5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/151/GCloudClientTest.java\n@@ -72,6 +72,7 @@ public class GCloudClientTest {\n     assertEquals(\"path/my/blob/name\", blobInfo.get().getName());\n     assertEquals(\"bucket\", blobInfo.get().getBucket());\n     assertEquals(\n-        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n-  }\n-}\n+        storage== null ? StorageClass.STANDARD: storage,blobInfo.get().getStorageClass())\n+      ;\n+      }\n+        }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/151/GCloudClientTest.java\nindex c612a652d3..3d21d0ce1d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/151/GCloudClientTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/151/GCloudClientTest.java\n@@ -72,6 +72,8 @@ public class GCloudClientTest {\n     assertEquals(\"path/my/blob/name\", blobInfo.get().getName());\n     assertEquals(\"bucket\", blobInfo.get().getBucket());\n     assertEquals(\n-        storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n+    storage == null ? StorageClass.STANDARD : storage, blobInfo.get().getStorageClass());\n   }\n }\n+\n+  \n\\ No newline at end of file\n",
            "diff_size": 3
        }
    ]
}