{
    "error_id": "162",
    "information": {
        "errors": [
            {
                "line": "141",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/162/ParticipantReader.java\nindex 356d544a07..f2575ef338 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/162/ParticipantReader.java\n@@ -138,7 +138,7 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/162/ParticipantReader.java\nindex 356d544a07..66f594b9d2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/162/ParticipantReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.proxy.v1.service.session;\n@@ -138,7 +138,7 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/162/ParticipantReader.java\nindex 356d544a07..f2ba1d6e47 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/162/ParticipantReader.java\n@@ -23,6 +23,7 @@ import com.twilio.rest.Domains;\n  * PLEASE NOTE that this class contains beta products that are subject to\n  * change. Use them with caution.\n  */\n+\n public class ParticipantReader extends Reader<Participant> {\n     private final String pathServiceSid;\n     private final String pathSessionSid;\n@@ -33,6 +34,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param pathServiceSid The SID of the parent Service of the resource to read\n      * @param pathSessionSid The SID of the parent Session of the resource to read\n      */\n+\n+\n     public ParticipantReader(final String pathServiceSid,\n                              final String pathSessionSid) {\n         this.pathServiceSid = pathServiceSid;\n@@ -45,6 +48,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Participant ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Participant> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -56,6 +61,8 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Participant ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Participant> firstPage(final TwilioRestClient client) {\n@@ -63,7 +70,7 @@ public class ParticipantReader extends Reader<Participant> {\n             HttpMethod.GET,\n             Domains.PROXY.toString(),\n             \"/v1/Services/\" + this.pathServiceSid + \"/Sessions/\" + this.pathSessionSid + \"/Participants\"\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -76,14 +83,13 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Participant ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Participant> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Participant> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -94,13 +100,12 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Participant> nextPage(final Page<Participant> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.PROXY.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.PROXY.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -111,13 +116,12 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Participant> previousPage(final Page<Participant> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.PROXY.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.PROXY.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -128,9 +132,11 @@ public class ParticipantReader extends Reader<Participant> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Participant> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Participant> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Participant read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -138,7 +144,8 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -146,7 +153,7 @@ public class ParticipantReader extends Reader<Participant> {\n             response.getContent(),\n             Participant.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -154,6 +161,8 @@ public class ParticipantReader extends Reader<Participant> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/162/ParticipantReader.java\nindex 356d544a07..f2575ef338 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/162/ParticipantReader.java\n@@ -138,7 +138,7 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/162/ParticipantReader.java\nindex 356d544a07..f85b098b45 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/162/ParticipantReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/162/ParticipantReader.java\n@@ -138,7 +138,8 @@ public class ParticipantReader extends Reader<Participant> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}