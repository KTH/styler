{
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "104",
                "severity": "warning",
                "message": "Block comment has incorrect indentation level 6, expected is 4, indentation should be the same level as line 130.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "      returnString = StringUtils.replace(returnString, \"%THEME%\", arena.getTheme());\n    }\n      /*else {\n      if (arena.isGTBThemeSet()) {\n        returnString = StringUtils.replace(returnString, \"%CURRENT_TIMER%\", plugin.getChatManager().colorMessage(\"Scoreboard.GTB-Current-Timer.Build-Time\"));\n      } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/styler/4/ScoreboardManager.java\nindex 82572b6959..db0d1f1813 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/styler/4/ScoreboardManager.java\n@@ -101,7 +101,7 @@ public class ScoreboardManager {\n     } else {\n       returnString = StringUtils.replace(returnString, \"%THEME%\", arena.getTheme());\n     }\n-      /*else {\n+    /*else {\n       if (arena.isGTBThemeSet()) {\n         returnString = StringUtils.replace(returnString, \"%CURRENT_TIMER%\", plugin.getChatManager().colorMessage(\"Scoreboard.GTB-Current-Timer.Build-Time\"));\n       } else {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 6, expected is 4, indentation should be the same level as line 130.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/naturalize/4/ScoreboardManager.java\nindex 82572b6959..f4cd8a499c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/naturalize/4/ScoreboardManager.java\n@@ -101,7 +101,7 @@ public class ScoreboardManager {\n     } else {\n       returnString = StringUtils.replace(returnString, \"%THEME%\", arena.getTheme());\n     }\n-      /*else {\n+/*else {\n       if (arena.isGTBThemeSet()) {\n         returnString = StringUtils.replace(returnString, \"%CURRENT_TIMER%\", plugin.getChatManager().colorMessage(\"Scoreboard.GTB-Current-Timer.Build-Time\"));\n       } else {\n@@ -127,7 +127,8 @@ public class ScoreboardManager {\n         returnString = StringUtils.replace(returnString, \"%\" + i + \"_PTS%\", String.valueOf(arena.getPlayersPoints().get(arena.getPlayersPoints().keySet().toArray()[i])));\n       }\n     }*/\n-    returnString = StringUtils.replace(returnString, \"%MIN_PLAYERS%\", Integer.toString(arena.getMinimumPlayers()));\n+\n+returnString = StringUtils.replace(returnString, \"%MIN_PLAYERS%\", Integer.toString(arena.getMinimumPlayers()));\n     returnString = StringUtils.replace(returnString, \"%MAX_PLAYERS%\", Integer.toString(arena.getMaximumPlayers()));\n     returnString = StringUtils.replace(returnString, \"%TIMER%\", Integer.toString(arena.getTimer()));\n     //todo its the same\n@@ -168,4 +169,4 @@ public class ScoreboardManager {\n   public Main getPlugin() {\n     return plugin;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 8, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 8, indentation should be the same level as line 59.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 8, indentation should be the same level as line 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 44, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 6, expected is 4, indentation should be the same level as line 130.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 74, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 182, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 250 characters (found 261).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 182, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 184, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "Line is longer than 250 characters (found 316).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 182, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 74, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/codebuff/4/ScoreboardManager.java\nindex 82572b6959..7c56684635 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/codebuff/4/ScoreboardManager.java\n@@ -21,13 +21,10 @@ package pl.plajer.buildbattle.arena.managers;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n import me.clip.placeholderapi.PlaceholderAPI;\n-\n import org.apache.commons.lang.StringUtils;\n import org.bukkit.entity.Player;\n import org.bukkit.plugin.java.JavaPlugin;\n-\n import pl.plajer.buildbattle.Main;\n import pl.plajer.buildbattle.arena.ArenaState;\n import pl.plajer.buildbattle.arena.impl.BaseArena;\n@@ -41,63 +38,66 @@ import pl.plajerlair.core.utils.GameScoreboard;\n  * <p>\n  * Created at 11.01.2019\n  */\n+\n+\n public class ScoreboardManager {\n \n-  private Map<String, List<String>> scoreboardContents = new HashMap<>();\n-  private Main plugin = JavaPlugin.getPlugin(Main.class);\n-  private String boardTitle;\n-  private BaseArena arena;\n+    private Map<String, List<String>> scoreboardContents = new HashMap<>();\n+    private Main plugin = JavaPlugin.getPlugin(Main.class);\n+    private String boardTitle;\n+    private BaseArena arena;\n \n-  public ScoreboardManager(BaseArena arena) {\n+    public ScoreboardManager(BaseArena arena) {\n     this.arena = arena;\n     this.boardTitle = plugin.getChatManager().colorMessage(\"Scoreboard.Title\");\n     for (ArenaState state : ArenaState.values()) {\n       //not registering RESTARTING state and registering IN_GAME and ENDING later\n-      if (state == ArenaState.RESTARTING || state == ArenaState.IN_GAME || state == ArenaState.ENDING) {\n+        if (state == ArenaState.RESTARTING || state == ArenaState.IN_GAME || state == ArenaState.ENDING) {\n         continue;\n-      }\n+        }\n       //todo migrator\n-      List<String> lines = LanguageManager.getLanguageList(\"Scoreboard.Content.\" + state.getFormattedName());\n-      scoreboardContents.put(state.getFormattedName(), lines);\n+        List<String> lines = LanguageManager.getLanguageList(\"Scoreboard.Content.\" + state.getFormattedName());\n+        scoreboardContents.put(state.getFormattedName(), lines);\n     }\n     for (BaseArena.ArenaType type : BaseArena.ArenaType.values()) {\n-      List<String> playing = LanguageManager.getLanguageList(\"Scoreboard.Content.Playing-States.\" + type.getPrefix());\n-      List<String> ending = LanguageManager.getLanguageList(\"Scoreboard.Content.Ending-States.\" + type.getPrefix());\n+        List<String> playing = LanguageManager.getLanguageList(\"Scoreboard.Content.Playing-States.\" + type.getPrefix());\n+        List<String> ending = LanguageManager.getLanguageList(\"Scoreboard.Content.Ending-States.\" + type.getPrefix());\n       //todo locale\n-      scoreboardContents.put(ArenaState.IN_GAME.getFormattedName() + \"_\" + type.getPrefix(), playing);\n-      scoreboardContents.put(ArenaState.ENDING.getFormattedName() + \"_\" + type.getPrefix(), ending);\n+        scoreboardContents.put(ArenaState.IN_GAME.getFormattedName() + \"_\" + type.getPrefix(), playing);\n+        scoreboardContents.put(ArenaState.ENDING.getFormattedName() + \"_\" + type.getPrefix(), ending);\n+    }\n     }\n-  }\n \n   /**\n    * Updates scoreboard to all players in arena\n    */\n-  public void updateScoreboard() {\n+\n+    public void updateScoreboard() {\n     if (arena.getPlayers().size() == 0 || arena.getArenaState() == ArenaState.RESTARTING) {\n-      return;\n+        return;\n     }\n     GameScoreboard scoreboard;\n     for (Player p : arena.getPlayers()) {\n-      scoreboard = new GameScoreboard(\"PL_BB\", \"BB_CR\", boardTitle);\n-      List<String> lines = scoreboardContents.get(arena.getArenaState().getFormattedName());\n-      if (arena.getArenaState() == ArenaState.IN_GAME || arena.getArenaState() == ArenaState.ENDING) {\n+        scoreboard = new GameScoreboard(\"PL_BB\", \"BB_CR\", boardTitle);\n+        List<String> lines = scoreboardContents.get(arena.getArenaState().getFormattedName());\n+        if (arena.getArenaState() == ArenaState.IN_GAME || arena.getArenaState() == ArenaState.ENDING) {\n         lines = scoreboardContents.get(arena.getArenaState().getFormattedName() + \"_\" + arena.getArenaType().getPrefix());\n-      }\n-      for (String line : lines) {\n-        scoreboard.addRow(formatScoreboardLine(line, p));\n-      }\n-      scoreboard.finish();\n-      scoreboard.display(p);\n+        }\n+        for (String line : lines) {\n+                                            scoreboard.addRow(formatScoreboardLine(line, p));\n+        }\n+        scoreboard.finish();\n+        scoreboard.display(p);\n+    }\n     }\n-  }\n \n-  @Deprecated\n-  private String formatScoreboardLine(String string, Player player) {\n+    @Deprecated\n+    private String formatScoreboardLine(String string, Player player) {\n     String returnString = string;\n     returnString = StringUtils.replace(returnString, \"%PLAYERS%\", Integer.toString(arena.getPlayers().size()));\n     returnString = StringUtils.replace(returnString, \"%PLAYER%\", player.getName());\n     if (((SoloArena) arena).isThemeVoteTime()) {\n-      returnString = StringUtils.replace(returnString, \"%THEME%\", plugin.getChatManager().colorMessage(\"In-Game.No-Theme-Yet\"));\n+        returnString = StringUtils.replace(returnString, \"%THEME%\", plugin.getChatManager().colorMessage(\"In-Game.No-Theme-Yet\"));\n     } else {\n       returnString = StringUtils.replace(returnString, \"%THEME%\", arena.getTheme());\n     }\n@@ -136,36 +136,37 @@ public class ScoreboardManager {\n     returnString = StringUtils.replace(returnString, \"%ARENA_ID%\", arena.getID());\n     returnString = StringUtils.replace(returnString, \"%MAPNAME%\", arena.getMapName());\n     if (!((SoloArena) arena).isThemeVoteTime()) {\n-      if (arena.getArenaType() == BaseArena.ArenaType.TEAM && arena.getPlotManager().getPlot(player) != null) {\n+                                                                          if (arena.getArenaType() == BaseArena.ArenaType.TEAM && arena.getPlotManager().getPlot(player) != null) {\n         if (arena.getPlotManager().getPlot(player).getOwners().size() == 2) {\n-          if (arena.getPlotManager().getPlot(player).getOwners().get(0).equals(player)) {\n+                                                                                                                                                                                      if (arena.getPlotManager().getPlot(player).getOwners().get(0).equals(player)) {\n             returnString = StringUtils.replace(returnString, \"%TEAMMATE%\", arena.getPlotManager().getPlot(player).getOwners().get(1).getName());\n-          } else {\n-            returnString = StringUtils.replace(returnString, \"%TEAMMATE%\", arena.getPlotManager().getPlot(player).getOwners().get(0).getName());\n-          }\n+                                                                                                                                                                                      } else {\n+                                                                                                                                                                                        returnString = StringUtils.replace(returnString, \"%TEAMMATE%\", arena.getPlotManager().getPlot(player).getOwners().get(0).getName());\n+                                                                                                                                                                                      }\n         } else {\n           returnString = StringUtils.replace(returnString, \"%TEAMMATE%\", plugin.getChatManager().colorMessage(\"In-Game.Nobody\"));\n         }\n-      }\n+                                                                          }\n     } else {\n       returnString = StringUtils.replace(returnString, \"%TEAMMATE%\", plugin.getChatManager().colorMessage(\"In-Game.Nobody\"));\n     }\n     if (plugin.getServer().getPluginManager().isPluginEnabled(\"PlaceholderAPI\")) {\n-      PlaceholderAPI.setPlaceholders(player, returnString);\n+        PlaceholderAPI.setPlaceholders(player, returnString);\n     }\n     returnString = plugin.getChatManager().colorRawMessage(returnString);\n     return returnString;\n-  }\n+    }\n \n-  public Map<String, List<String>> getScoreboardContents() {\n+    public Map<String, List<String>> getScoreboardContents() {\n     return scoreboardContents;\n-  }\n+    }\n \n-  public String getBoardTitle() {\n+    public String getBoardTitle() {\n     return boardTitle;\n-  }\n+    }\n \n-  public Main getPlugin() {\n+    public Main getPlugin() {\n     return plugin;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/styler_random/4/ScoreboardManager.java\nindex 82572b6959..db0d1f1813 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/styler_random/4/ScoreboardManager.java\n@@ -101,7 +101,7 @@ public class ScoreboardManager {\n     } else {\n       returnString = StringUtils.replace(returnString, \"%THEME%\", arena.getTheme());\n     }\n-      /*else {\n+    /*else {\n       if (arena.isGTBThemeSet()) {\n         returnString = StringUtils.replace(returnString, \"%CURRENT_TIMER%\", plugin.getChatManager().colorMessage(\"Scoreboard.GTB-Current-Timer.Build-Time\"));\n       } else {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "103",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/styler_three_grams/4/ScoreboardManager.java\nindex 82572b6959..b8f25ac265 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/errored/1/4/ScoreboardManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-BuildBattle/styler_three_grams/4/ScoreboardManager.java\n@@ -100,8 +100,7 @@ public class ScoreboardManager {\n       returnString = StringUtils.replace(returnString, \"%THEME%\", plugin.getChatManager().colorMessage(\"In-Game.No-Theme-Yet\"));\n     } else {\n       returnString = StringUtils.replace(returnString, \"%THEME%\", arena.getTheme());\n-    }\n-      /*else {\n+    }/*else {\n       if (arena.isGTBThemeSet()) {\n         returnString = StringUtils.replace(returnString, \"%CURRENT_TIMER%\", plugin.getChatManager().colorMessage(\"Scoreboard.GTB-Current-Timer.Build-Time\"));\n       } else {\n@@ -126,8 +125,7 @@ public class ScoreboardManager {\n         returnString = StringUtils.replace(returnString, \"%\" + i + \"%\", Bukkit.getOfflinePlayer((UUID) arena.getPlayersPoints().keySet().toArray()[i]).getName());\n         returnString = StringUtils.replace(returnString, \"%\" + i + \"_PTS%\", String.valueOf(arena.getPlayersPoints().get(arena.getPlayersPoints().keySet().toArray()[i])));\n       }\n-    }*/\n-    returnString = StringUtils.replace(returnString, \"%MIN_PLAYERS%\", Integer.toString(arena.getMinimumPlayers()));\n+    }*/returnString = StringUtils.replace(returnString, \"%MIN_PLAYERS%\", Integer.toString(arena.getMinimumPlayers()));\n     returnString = StringUtils.replace(returnString, \"%MAX_PLAYERS%\", Integer.toString(arena.getMaximumPlayers()));\n     returnString = StringUtils.replace(returnString, \"%TIMER%\", Integer.toString(arena.getTimer()));\n     //todo its the same\n",
            "diff_size": 4
        }
    ]
}