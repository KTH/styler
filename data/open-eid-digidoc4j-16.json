{
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n    Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n    qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n    ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n        \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n        qualifiersAndConditions,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler/16/TSLCertificateSourceImpl.java\nindex d0448ef6bc..a2d36e115f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler/16/TSLCertificateSourceImpl.java\n@@ -52,8 +52,7 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n     ServiceInfo serviceInfo = new ServiceInfo();\n     //TODO test addTSLCertificate\n     Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n-    Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n-    qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n+    Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>(); qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n     ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n         \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n         qualifiersAndConditions,\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/intellij/16/TSLCertificateSourceImpl.java\nindex d0448ef6bc..8a5d5a3abe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/intellij/16/TSLCertificateSourceImpl.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic.tsl;\n \n@@ -53,7 +53,8 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n     //TODO test addTSLCertificate\n     Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n     Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n-    qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n+    qualifiersAndConditions\n+        .put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n     ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n         \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n         qualifiersAndConditions,\n@@ -69,9 +70,8 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n \n   /**\n    * Invalidates cache\n-   *\n+   * <p>\n    * Only applicable when cache is used.\n-   *\n    */\n   @Override\n   public void invalidateCache() {\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/naturalize/16/TSLCertificateSourceImpl.java\nindex d0448ef6bc..c62318b799 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/naturalize/16/TSLCertificateSourceImpl.java\n@@ -54,14 +54,9 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n     Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n     Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n     qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n-    ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n-        \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n-        qualifiersAndConditions,\n-        null,\n-        null,\n-        null,\n-        certificate.getNotBefore(),\n-        null);\n+    ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\", \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n+        qualifiersAndConditions, null, null, null,\n+        certificate.getNotBefore(), null);\n     TimeDependentValues timeDependentValues = new TimeDependentValues(Arrays.asList(status));\n     serviceInfo.setStatus(timeDependentValues);\n     addCertificate(new CertificateToken(certificate), serviceInfo);\n@@ -84,4 +79,4 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n     logger.warn(\"Not possible to refresh this certificate source\");\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/codebuff/16/TSLCertificateSourceImpl.java\nindex d0448ef6bc..e2103615e0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/codebuff/16/TSLCertificateSourceImpl.java\n@@ -15,11 +15,9 @@ import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n import org.digidoc4j.TSLCertificateSource;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import eu.europa.esig.dss.tsl.Condition;\n import eu.europa.esig.dss.tsl.KeyUsageBit;\n import eu.europa.esig.dss.tsl.KeyUsageCondition;\n@@ -32,11 +30,15 @@ import eu.europa.esig.dss.x509.CertificateToken;\n /**\n  * Trusted List certificates\n  */\n+\n+\n public class TSLCertificateSourceImpl extends TrustedListsCertificateSource implements TSLCertificateSource {\n-  private static final Logger logger = LoggerFactory.getLogger(TSLCertificateSourceImpl.class);\n \n-  public TSLCertificateSourceImpl() {\n-  }\n+    private static final Logger logger = LoggerFactory.getLogger(TSLCertificateSourceImpl.class);\n+\n+\n+    public TSLCertificateSourceImpl() {\n+    }\n \n   /**\n    * Add a certificate to the TSL\n@@ -47,25 +49,20 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n    *\n    * @param certificate X509 certificate to be added to the list\n    */\n-  @Override\n-  public void addTSLCertificate(X509Certificate certificate) {\n+\n+    @Override\n+    public void addTSLCertificate(X509Certificate certificate) {\n     ServiceInfo serviceInfo = new ServiceInfo();\n     //TODO test addTSLCertificate\n     Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n     Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n-    qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n-    ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n-        \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n-        qualifiersAndConditions,\n-        null,\n-        null,\n-        null,\n-        certificate.getNotBefore(),\n-        null);\n+    qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\",\n+        Arrays.asList(condition));\n+    ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\", \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\", qualifiersAndConditions, null, null, null, certificate.getNotBefore(), null);\n     TimeDependentValues timeDependentValues = new TimeDependentValues(Arrays.asList(status));\n     serviceInfo.setStatus(timeDependentValues);\n     addCertificate(new CertificateToken(certificate), serviceInfo);\n-  }\n+    }\n \n   /**\n    * Invalidates cache\n@@ -73,15 +70,16 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n    * Only applicable when cache is used.\n    *\n    */\n-  @Override\n-  public void invalidateCache() {\n+\n+    @Override\n+    public void invalidateCache() {\n     logger.debug(\"Invalidating TSL cache\");\n     TslLoader.invalidateCache();\n-  }\n+    }\n \n-  @Override\n-  public void refresh() {\n+    @Override\n+    public void refresh() {\n     logger.warn(\"Not possible to refresh this certificate source\");\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "column": "28",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_random/16/TSLCertificateSourceImpl.java\nindex d0448ef6bc..c54c8f5bd7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_random/16/TSLCertificateSourceImpl.java\n@@ -54,7 +54,7 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n     Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n     Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n     qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n-    ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n+    ServiceInfoStatusstatus= new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n         \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n         qualifiersAndConditions,\n         null,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_three_grams/16/TSLCertificateSourceImpl.java\nindex d0448ef6bc..a2d36e115f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/16/TSLCertificateSourceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_three_grams/16/TSLCertificateSourceImpl.java\n@@ -52,8 +52,7 @@ public class TSLCertificateSourceImpl extends TrustedListsCertificateSource impl\n     ServiceInfo serviceInfo = new ServiceInfo();\n     //TODO test addTSLCertificate\n     Condition condition = new KeyUsageCondition(KeyUsageBit.nonRepudiation, true);\n-    Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>();\n-    qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n+    Map<String, List<Condition>> qualifiersAndConditions = new HashMap<String, List<Condition>>(); qualifiersAndConditions.put(\"http://uri.etsi.org/TrstSvc/TrustedList/SvcInfoExt/QCWithSSCD\", Arrays.asList(condition));\n     ServiceInfoStatus status = new ServiceInfoStatus(\"http://uri.etsi.org/TrstSvc/Svctype/CA/QC\",\n         \"http://uri.etsi.org/TrstSvc/TrustedList/Svcstatus/undersupervision\",\n         qualifiersAndConditions,\n",
            "diff_size": 2
        }
    ]
}