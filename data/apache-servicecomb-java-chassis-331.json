{
    "error_id": "331",
    "information": {
        "errors": [
            {
                "line": "35",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void print(boolean printDetail) {\n    appendLine(sb, \"    client.endpoints:\");\n    appendLine(sb, \"      remote                connectCount    disconnectCount connections     send(B)      receive(B)\");\n\n    double connect = 0;\n    double disconnect = 0;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/331/ClientEndpointsLogPublisher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/331/ClientEndpointsLogPublisher.java\nindex 9bcd23d22c..569f11b6ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/331/ClientEndpointsLogPublisher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/331/ClientEndpointsLogPublisher.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.metrics.core.publish;\n \n import static org.apache.servicecomb.foundation.common.utils.StringBuilderUtils.appendLine;\n@@ -32,7 +33,8 @@ public class ClientEndpointsLogPublisher extends AbstractMeasurementNodeLogPubli\n   @Override\n   public void print(boolean printDetail) {\n     appendLine(sb, \"    client.endpoints:\");\n-    appendLine(sb, \"      remote                connectCount    disconnectCount connections     send(B)      receive(B)\");\n+    appendLine(sb,\n+        \"      remote                connectCount    disconnectCount connections     send(B)      receive(B)\");\n \n     double connect = 0;\n     double disconnect = 0;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/331/ClientEndpointsLogPublisher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/331/ClientEndpointsLogPublisher.java\nindex 9bcd23d22c..711adbda9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/331/ClientEndpointsLogPublisher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/331/ClientEndpointsLogPublisher.java\n@@ -33,8 +33,7 @@ public class ClientEndpointsLogPublisher extends AbstractMeasurementNodeLogPubli\n   public void print(boolean printDetail) {\n     appendLine(sb, \"    client.endpoints:\");\n     appendLine(sb, \"      remote                connectCount    disconnectCount connections     send(B)      receive(B)\");\n-\n-    double connect = 0;\n+double connect = 0;\n     double disconnect = 0;\n     double connections = 0;\n     double readSize = 0;\n@@ -53,8 +52,7 @@ public class ClientEndpointsLogPublisher extends AbstractMeasurementNodeLogPubli\n             address.findChild(EndpointMeter.DISCONNECT_COUNT).summary(),\n             address.findChild(EndpointMeter.CONNECTIONS).summary(),\n             NetUtils.humanReadableBytes((long) address.findChild(EndpointMeter.BYTES_WRITTEN).summary()),\n-            NetUtils.humanReadableBytes((long) address.findChild(EndpointMeter.BYTES_READ).summary())\n-        );\n+            NetUtils.humanReadableBytes((long) address.findChild(EndpointMeter.BYTES_READ).summary()));\n       }\n     }\n \n@@ -64,7 +62,6 @@ public class ClientEndpointsLogPublisher extends AbstractMeasurementNodeLogPubli\n         disconnect,\n         connections,\n         NetUtils.humanReadableBytes((long) writeSize),\n-        NetUtils.humanReadableBytes((long) readSize)\n-    );\n+        NetUtils.humanReadableBytes((long) readSize));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "column": "19",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "35",
                    "column": "120",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "122",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "35",
                    "column": "124",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/331/ClientEndpointsLogPublisher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/331/ClientEndpointsLogPublisher.java\nindex 9bcd23d22c..d0345ccd9a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/331/ClientEndpointsLogPublisher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/331/ClientEndpointsLogPublisher.java\n@@ -32,9 +32,7 @@ public class ClientEndpointsLogPublisher extends AbstractMeasurementNodeLogPubli\n   @Override\n   public void print(boolean printDetail) {\n     appendLine(sb, \"    client.endpoints:\");\n-    appendLine(sb, \"      remote                connectCount    disconnectCount connections     send(B)      receive(B)\");\n-\n-    double connect = 0;\n+    appendLine(sb,\"      remote                connectCount    disconnectCount connections     send(B)      receive(B)\" ) ;double connect = 0;\n     double disconnect = 0;\n     double connections = 0;\n     double readSize = 0;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}