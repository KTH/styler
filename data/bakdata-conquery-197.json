{
    "error_id": "197",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\t}\n\n\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n\n\t@Override\n\tpublic FilterId createId() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/197/Filter.java\nindex df17d93059..39564af352 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/197/Filter.java\n@@ -43,8 +43,9 @@ public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \t\treturn ArrayUtils.contains(getRequiredColumns(), c);\n \t}\n \n-\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n+\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue)\n \n+\t;//, QueryPlanContext ctx);\n \t@Override\n \tpublic FilterId createId() {\n \t\treturn new FilterId(connector.getId(), getName());\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/197/Filter.java\nindex df17d93059..9b84cac5b7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/197/Filter.java\n@@ -27,35 +27,37 @@ import org.apache.commons.lang3.ArrayUtils;\n @CPSBase\n public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \n-\tprivate String unit;\n-\tprivate String description;\n-\t@JsonBackReference\n-\tprivate Connector connector;\n-\tprivate String pattern;\n-\tprivate Boolean allowDropFile;\n-\n-\tpublic abstract void configureFrontend(FEFilter f) throws ConceptConfigurationException;\n-\n-\t@JsonIgnore\n-\tpublic abstract Column[] getRequiredColumns();\n-\n-\tpublic final boolean requiresColumn(Column c) {\n-\t\treturn ArrayUtils.contains(getRequiredColumns(), c);\n-\t}\n-\n-\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n-\n-\t@Override\n-\tpublic FilterId createId() {\n-\t\treturn new FilterId(connector.getId(), getName());\n-\t}\n-\n-\t/**\n-\t * This method is called once at startup or if the dataset changes for each new import that\n-\t * concerns this filter. Use this to collect metadata from the import. It is not guaranteed that\n-\t * any blocks or cBlocks exist at this time. Any data created by this method should be volatile\n-\t * and @JsonIgnore.\n-\t * @param imp the import added\n-\t */\n-\tpublic void addImport(Import imp) {}\n+    private String unit;\n+    private String description;\n+    @JsonBackReference\n+    private Connector connector;\n+    private String pattern;\n+    private Boolean allowDropFile;\n+\n+    public abstract void configureFrontend(FEFilter f) throws ConceptConfigurationException;\n+\n+    @JsonIgnore\n+    public abstract Column[] getRequiredColumns();\n+\n+    public final boolean requiresColumn(Column c) {\n+        return ArrayUtils.contains(getRequiredColumns(), c);\n+    }\n+\n+    public abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n+\n+    @Override\n+    public FilterId createId() {\n+        return new FilterId(connector.getId(), getName());\n+    }\n+\n+    /**\n+     * This method is called once at startup or if the dataset changes for each new import that\n+     * concerns this filter. Use this to collect metadata from the import. It is not guaranteed that\n+     * any blocks or cBlocks exist at this time. Any data created by this method should be volatile\n+     * and @JsonIgnore.\n+     *\n+     * @param imp the import added\n+     */\n+    public void addImport(Import imp) {\n+    }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/197/Filter.java\nindex df17d93059..38efa77489 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/197/Filter.java\n@@ -43,7 +43,8 @@ public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \t\treturn ArrayUtils.contains(getRequiredColumns(), c);\n \t}\n \n-\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n+\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);\n+//, QueryPlanContext ctx);\n \n \t@Override\n \tpublic FilterId createId() {\n@@ -58,4 +59,4 @@ public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \t * @param imp the import added\n \t */\n \tpublic void addImport(Import imp) {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/197/Filter.java\nindex df17d93059..06e332cb8b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/197/Filter.java\n@@ -20,42 +20,42 @@ import org.apache.commons.lang3.ArrayUtils;\n /**\n  * This class is the abstract superclass for all filters.\n  */\n+\n @Getter\n @Setter\n @NoArgsConstructor\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, property = \"type\")\n+@JsonTypeInfo(use= JsonTypeInfo.Id.CUSTOM, property= \"type\")\n @CPSBase\n public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \n-\tprivate String unit;\n-\tprivate String description;\n-\t@JsonBackReference\n-\tprivate Connector connector;\n-\tprivate String pattern;\n-\tprivate Boolean allowDropFile;\n-\n-\tpublic abstract void configureFrontend(FEFilter f) throws ConceptConfigurationException;\n-\n-\t@JsonIgnore\n-\tpublic abstract Column[] getRequiredColumns();\n-\n-\tpublic final boolean requiresColumn(Column c) {\n-\t\treturn ArrayUtils.contains(getRequiredColumns(), c);\n-\t}\n-\n-\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n-\n-\t@Override\n-\tpublic FilterId createId() {\n-\t\treturn new FilterId(connector.getId(), getName());\n-\t}\n-\n-\t/**\n-\t * This method is called once at startup or if the dataset changes for each new import that\n-\t * concerns this filter. Use this to collect metadata from the import. It is not guaranteed that\n-\t * any blocks or cBlocks exist at this time. Any data created by this method should be volatile\n-\t * and @JsonIgnore.\n-\t * @param imp the import added\n-\t */\n-\tpublic void addImport(Import imp) {}\n-}\n+    private String unit;\n+    private String description;\n+    @JsonBackReference\n+    private Connector connector;\n+    private String pattern;\n+    private Boolean allowDropFile;\n+\n+    public abstract void configureFrontend(FEFilter f) throws ConceptConfigurationException;\n+    @JsonIgnore\n+    public abstract Column[] getRequiredColumns();\n+\n+    public final boolean requiresColumn(Column c) {\n+        return ArrayUtils.contains(getRequiredColumns(), c);\n+    }\n+\n+    public abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n+    @Override\n+    public FilterId createId() {\n+        return new FilterId(connector.getId(), getName());\n+    }\n+\n+    /**\n+     * This method is called once at startup or if the dataset changes for each new import that\n+     * concerns this filter. Use this to collect metadata from the import. It is not guaranteed that\n+     * any blocks or cBlocks exist at this time. Any data created by this method should be volatile\n+     * and @JsonIgnore.\n+     * @param imp the import added\n+     */\n+\n+    public void addImport(Import imp) {}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/197/Filter.java\nindex df17d93059..39564af352 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/197/Filter.java\n@@ -43,8 +43,9 @@ public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \t\treturn ArrayUtils.contains(getRequiredColumns(), c);\n \t}\n \n-\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n+\tpublic abstract FilterNode createAggregator(FE_TYPE filterValue)\n \n+\t;//, QueryPlanContext ctx);\n \t@Override\n \tpublic FilterId createId() {\n \t\treturn new FilterId(connector.getId(), getName());\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/197/Filter.java\nindex df17d93059..504ee06b33 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/197/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/197/Filter.java\n@@ -42,7 +42,6 @@ public abstract class Filter<FE_TYPE> extends Labeled<FilterId> {\n \tpublic final boolean requiresColumn(Column c) {\n \t\treturn ArrayUtils.contains(getRequiredColumns(), c);\n \t}\n-\n \tpublic abstract FilterNode createAggregator(FE_TYPE filterValue);//, QueryPlanContext ctx);\n \n \t@Override\n",
            "diff_size": 1
        }
    ]
}