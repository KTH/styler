{
    "error_id": "117",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import javax.xml.bind.annotation.XmlType;\n\n@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class HDAssignment {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/117/HDAssignment.java\nindex ad0a8f1a20..7fb6e31526 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/117/HDAssignment.java\n@@ -20,9 +20,7 @@ import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+import javax.xml.bind.annotation.XmlType;@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDAssignment {\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/117/HDAssignment.java\nindex ad0a8f1a20..ba47e1464d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/117/HDAssignment.java\n@@ -22,41 +22,42 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(propOrder = {\"headerVariable\", \"cookieVariable\",\n+  \"bodyVariable\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDAssignment {\n \n-    @XmlElementWrapper(name = \"headerVariables\")\n-    @XmlElement(name = \"variable\")\n-    private List<AssignmentData> headerVariable = new ArrayList<AssignmentData>();\n-\n-    @XmlElementWrapper(name = \"cookieVariables\")\n-    @XmlElement(name = \"variable\")\n-    private List<AssignmentData> cookieVariable = new ArrayList<AssignmentData>();\n-\n-    @XmlElementWrapper(name = \"bodyVariables\")\n-    @XmlElement(name = \"variable\")\n-    private List<AssignmentData> bodyVariable = new ArrayList<AssignmentData>();\n-\n-    /**\n-     * @return the headerValidation\n-     */\n-    public List<AssignmentData> getHeaderVariable() {\n-        return headerVariable;\n-    }\n-\n-    /**\n-     * @return the cookieValidation\n-     */\n-    public List<AssignmentData> getCookieVariable() {\n-        return cookieVariable;\n-    }\n-\n-    /**\n-     * @return the bodyValidation\n-     */\n-    public List<AssignmentData> getBodyVariable() {\n-        return bodyVariable;\n-    }\n+  @XmlElementWrapper(name = \"headerVariables\")\n+  @XmlElement(name = \"variable\")\n+  private List<AssignmentData> headerVariable = new ArrayList<AssignmentData>();\n+\n+  @XmlElementWrapper(name = \"cookieVariables\")\n+  @XmlElement(name = \"variable\")\n+  private List<AssignmentData> cookieVariable = new ArrayList<AssignmentData>();\n+\n+  @XmlElementWrapper(name = \"bodyVariables\")\n+  @XmlElement(name = \"variable\")\n+  private List<AssignmentData> bodyVariable = new ArrayList<AssignmentData>();\n+\n+  /**\n+   * @return the headerValidation\n+   */\n+  public List<AssignmentData> getHeaderVariable() {\n+    return headerVariable;\n+  }\n+\n+  /**\n+   * @return the cookieValidation\n+   */\n+  public List<AssignmentData> getCookieVariable() {\n+    return cookieVariable;\n+  }\n+\n+  /**\n+   * @return the bodyValidation\n+   */\n+  public List<AssignmentData> getBodyVariable() {\n+    return bodyVariable;\n+  }\n \n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/117/HDAssignment.java\nindex ad0a8f1a20..3787e659bf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/117/HDAssignment.java\n@@ -59,4 +59,4 @@ public class HDAssignment {\n         return bodyVariable;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/117/HDAssignment.java\nindex ad0a8f1a20..f60199ca7c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/117/HDAssignment.java\n@@ -13,9 +13,10 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n@@ -48,6 +49,8 @@ public class HDAssignment {\n     /**\n      * @return the cookieValidation\n      */\n+\n+\n     public List<AssignmentData> getCookieVariable() {\n         return cookieVariable;\n     }\n@@ -55,8 +58,9 @@ public class HDAssignment {\n     /**\n      * @return the bodyValidation\n      */\n+\n+\n     public List<AssignmentData> getBodyVariable() {\n         return bodyVariable;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "40",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "59",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "76",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "26",
                    "column": "1",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "26",
                    "column": "36",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/117/HDAssignment.java\nindex ad0a8f1a20..0af099f334 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/117/HDAssignment.java\n@@ -22,41 +22,43 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n-public class HDAssignment {\n+@XmlType(propOrder = {\"headerVariable\" , \"cookieVariable\" , \"bodyVariable\"},namespace\n+=HarnessDataNamespace.NAMESPACE_V1 ) @XmlAccessorType\n+(XmlAccessType.FIELD)\n+ public class HDAssignment {\n \n-    @XmlElementWrapper(name = \"headerVariables\")\n-    @XmlElement(name = \"variable\")\n-    private List<AssignmentData> headerVariable = new ArrayList<AssignmentData>();\n+     @XmlElementWrapper(name = \"headerVariables\")\n+     @XmlElement(name = \"variable\")\n+     private List<AssignmentData> headerVariable = new ArrayList<AssignmentData>();\n \n-    @XmlElementWrapper(name = \"cookieVariables\")\n-    @XmlElement(name = \"variable\")\n-    private List<AssignmentData> cookieVariable = new ArrayList<AssignmentData>();\n+     @XmlElementWrapper(name = \"cookieVariables\")\n+     @XmlElement(name = \"variable\")\n+     private List<AssignmentData> cookieVariable = new ArrayList<AssignmentData>();\n \n-    @XmlElementWrapper(name = \"bodyVariables\")\n-    @XmlElement(name = \"variable\")\n-    private List<AssignmentData> bodyVariable = new ArrayList<AssignmentData>();\n+     @XmlElementWrapper(name = \"bodyVariables\")\n+     @XmlElement(name = \"variable\")\n+     private List<AssignmentData> bodyVariable = new ArrayList<AssignmentData>();\n \n-    /**\n+     /**\n      * @return the headerValidation\n      */\n-    public List<AssignmentData> getHeaderVariable() {\n-        return headerVariable;\n-    }\n+     public List<AssignmentData> getHeaderVariable() {\n+         return headerVariable;\n+     }\n \n-    /**\n+     /**\n      * @return the cookieValidation\n      */\n-    public List<AssignmentData> getCookieVariable() {\n-        return cookieVariable;\n-    }\n+     public List<AssignmentData> getCookieVariable() {\n+         return cookieVariable;\n+     }\n \n-    /**\n+     /**\n      * @return the bodyValidation\n      */\n-    public List<AssignmentData> getBodyVariable() {\n-        return bodyVariable;\n-    }\n+     public List<AssignmentData> getBodyVariable() {\n+         return bodyVariable;\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/117/HDAssignment.java\nindex ad0a8f1a20..7fb6e31526 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/117/HDAssignment.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/117/HDAssignment.java\n@@ -20,9 +20,7 @@ import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+import javax.xml.bind.annotation.XmlType;@XmlType(propOrder = { \"headerVariable\", \"cookieVariable\", \"bodyVariable\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDAssignment {\n \n",
            "diff_size": 3
        }
    ]
}