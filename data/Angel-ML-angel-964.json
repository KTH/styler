{
    "error_id": "964",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/964/NodeBinaryFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/964/NodeBinaryFormat.java\nindex 1181daf1e0..8a34ee679c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/964/NodeBinaryFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/964/NodeBinaryFormat.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.data;\n \n import com.tencent.angel.ml.math2.matrix.Matrix;\n@@ -31,25 +32,25 @@ import org.apache.hadoop.fs.FSDataInputStream;\n \n public class NodeBinaryFormat extends RowBasedFormat {\n \n-  public NodeBinaryFormat(Configuration conf) {\n-    super(conf);\n-  }\n+    public NodeBinaryFormat(Configuration conf) {\n+        super(conf);\n+    }\n \n-  @Override\n-  public void load(RowBasedPartition part, MatrixPartitionMeta partMeta,\n-      PSMatrixLoadContext loadContext, DataInputStream input) throws IOException {\n+    @Override\n+    public void load(RowBasedPartition part, MatrixPartitionMeta partMeta,\n+                     PSMatrixLoadContext loadContext, DataInputStream input) throws IOException {\n \n-  }\n+    }\n \n-  @Override\n-  public void save(RowBasedPartition part, MatrixPartitionMeta partMeta,\n-      PSMatrixSaveContext saveContext, DataOutputStream output) throws IOException {\n+    @Override\n+    public void save(RowBasedPartition part, MatrixPartitionMeta partMeta,\n+                     PSMatrixSaveContext saveContext, DataOutputStream output) throws IOException {\n \n-  }\n+    }\n \n-  @Override\n-  public void load(Matrix matrix, MatrixPartitionMeta partMeta, MatrixLoadContext loadContext,\n-      FSDataInputStream in) throws IOException {\n+    @Override\n+    public void load(Matrix matrix, MatrixPartitionMeta partMeta, MatrixLoadContext loadContext,\n+                     FSDataInputStream in) throws IOException {\n \n-  }\n+    }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/964/NodeBinaryFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/964/NodeBinaryFormat.java\nindex 1181daf1e0..40d99fd314 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/964/NodeBinaryFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/964/NodeBinaryFormat.java\n@@ -37,19 +37,13 @@ public class NodeBinaryFormat extends RowBasedFormat {\n \n   @Override\n   public void load(RowBasedPartition part, MatrixPartitionMeta partMeta,\n-      PSMatrixLoadContext loadContext, DataInputStream input) throws IOException {\n-\n-  }\n+      PSMatrixLoadContext loadContext, DataInputStream input) throws IOException {}\n \n   @Override\n   public void save(RowBasedPartition part, MatrixPartitionMeta partMeta,\n-      PSMatrixSaveContext saveContext, DataOutputStream output) throws IOException {\n-\n-  }\n+      PSMatrixSaveContext saveContext, DataOutputStream output) throws IOException {}\n \n   @Override\n   public void load(Matrix matrix, MatrixPartitionMeta partMeta, MatrixLoadContext loadContext,\n-      FSDataInputStream in) throws IOException {\n-\n-  }\n-}\n+      FSDataInputStream in) throws IOException {}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/964/NodeBinaryFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/964/NodeBinaryFormat.java\nindex 1181daf1e0..dc8449de1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/964/NodeBinaryFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/964/NodeBinaryFormat.java\n@@ -31,25 +31,21 @@ import org.apache.hadoop.fs.FSDataInputStream;\n \n public class NodeBinaryFormat extends RowBasedFormat {\n \n-  public NodeBinaryFormat(Configuration conf) {\n+    public NodeBinaryFormat(Configuration conf) {\n     super(conf);\n-  }\n+    }\n \n-  @Override\n-  public void load(RowBasedPartition part, MatrixPartitionMeta partMeta,\n-      PSMatrixLoadContext loadContext, DataInputStream input) throws IOException {\n+    @Override\n+    public void load(RowBasedPartition part,\n+                     MatrixPartitionMeta partMeta,\n+                     PSMatrixLoadContext loadContext, DataInputStream input) throws IOException {}\n \n-  }\n+    @Override\n+    public void save(RowBasedPartition part,\n+                     MatrixPartitionMeta partMeta,\n+                     PSMatrixSaveContext saveContext, DataOutputStream output) throws IOException {}\n \n-  @Override\n-  public void save(RowBasedPartition part, MatrixPartitionMeta partMeta,\n-      PSMatrixSaveContext saveContext, DataOutputStream output) throws IOException {\n+    @Override\n+    public void load(Matrix matrix, MatrixPartitionMeta partMeta, MatrixLoadContext loadContext, FSDataInputStream in) throws IOException {}\n \n-  }\n-\n-  @Override\n-  public void load(Matrix matrix, MatrixPartitionMeta partMeta, MatrixLoadContext loadContext,\n-      FSDataInputStream in) throws IOException {\n-\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}