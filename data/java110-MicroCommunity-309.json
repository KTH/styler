{
    "error_id": "309",
    "information": {
        "errors": [
            {
                "line": "51",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n\n        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n            paramIn.put(\"memberId\", result.getStoreId());\n        }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/309/ListCommunitysSMOImpl.java\nindex ec83f6d769..132ee68692 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/309/ListCommunitysSMOImpl.java\n@@ -48,7 +48,7 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n         paramIn.putAll(paramMap);\n \n \n-        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n+        if (!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n             paramIn.put(\"memberId\", result.getStoreId());\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/309/ListCommunitysSMOImpl.java\nindex ec83f6d769..27225aa7a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/309/ListCommunitysSMOImpl.java\n@@ -24,49 +24,49 @@ import java.util.Map;\n @Service(\"listCommunitysSMOImpl\")\n public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IListCommunitysSMO {\n \n-    @Autowired\n-    private RestTemplate restTemplate;\n+  @Autowired\n+  private RestTemplate restTemplate;\n \n-    @Override\n-    public ResponseEntity<String> listCommunitys(IPageData pd) throws SMOException {\n-        return businessProcess(pd);\n-    }\n+  @Override\n+  public ResponseEntity<String> listCommunitys(IPageData pd) throws SMOException {\n+    return businessProcess(pd);\n+  }\n \n-    @Override\n-    protected void validate(IPageData pd, JSONObject paramIn) {\n+  @Override\n+  protected void validate(IPageData pd, JSONObject paramIn) {\n \n-        super.validatePageInfo(pd);\n+    super.validatePageInfo(pd);\n \n-        super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.AGENT_HAS_LIST_COMMUNITY);\n-    }\n+    super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.AGENT_HAS_LIST_COMMUNITY);\n+  }\n \n-    @Override\n-    protected ResponseEntity<String> doBusinessProcess(IPageData pd, JSONObject paramIn) {\n-        ComponentValidateResult result = super.validateStoreStaffCommunityRelationship(pd, restTemplate);\n+  @Override\n+  protected ResponseEntity<String> doBusinessProcess(IPageData pd, JSONObject paramIn) {\n+    ComponentValidateResult result = super.validateStoreStaffCommunityRelationship(pd, restTemplate);\n \n-        Map paramMap = BeanConvertUtil.beanCovertMap(result);\n-        paramIn.putAll(paramMap);\n+    Map paramMap = BeanConvertUtil.beanCovertMap(result);\n+    paramIn.putAll(paramMap);\n \n \n-        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n-            paramIn.put(\"memberId\", result.getStoreId());\n-        }\n+    if (!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n+      paramIn.put(\"memberId\", result.getStoreId());\n+    }\n \n-        String apiUrl = ServiceConstant.SERVICE_API_URL + \"/api/community.listCommunitys\" + mapToUrlParam(paramIn);\n+    String apiUrl = ServiceConstant.SERVICE_API_URL + \"/api/community.listCommunitys\" + mapToUrlParam(paramIn);\n \n \n-        ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, \"\",\n-                apiUrl,\n-                HttpMethod.GET);\n+    ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, \"\",\n+      apiUrl,\n+      HttpMethod.GET);\n \n-        return responseEntity;\n-    }\n+    return responseEntity;\n+  }\n \n-    public RestTemplate getRestTemplate() {\n-        return restTemplate;\n-    }\n+  public RestTemplate getRestTemplate() {\n+    return restTemplate;\n+  }\n \n-    public void setRestTemplate(RestTemplate restTemplate) {\n-        this.restTemplate = restTemplate;\n-    }\n+  public void setRestTemplate(RestTemplate restTemplate) {\n+    this.restTemplate = restTemplate;\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/309/ListCommunitysSMOImpl.java\nindex ec83f6d769..4550953ced 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/309/ListCommunitysSMOImpl.java\n@@ -34,8 +34,7 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n \n     @Override\n     protected void validate(IPageData pd, JSONObject paramIn) {\n-\n-        super.validatePageInfo(pd);\n+    super.validatePageInfo(pd);\n \n         super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.AGENT_HAS_LIST_COMMUNITY);\n     }\n@@ -48,7 +47,7 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n         paramIn.putAll(paramMap);\n \n \n-        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n+        if (!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n             paramIn.put(\"memberId\", result.getStoreId());\n         }\n \n@@ -69,4 +68,4 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n     public void setRestTemplate(RestTemplate restTemplate) {\n         this.restTemplate = restTemplate;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/309/ListCommunitysSMOImpl.java\nindex ec83f6d769..7b9020ded6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/309/ListCommunitysSMOImpl.java\n@@ -15,12 +15,13 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.ResponseEntity;\n import org.springframework.stereotype.Service;\n-\n import java.util.Map;\n \n /**\n  * \u67e5\u8be2community\u670d\u52a1\u7c7b\n  */\n+\n+\n @Service(\"listCommunitysSMOImpl\")\n public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IListCommunitysSMO {\n \n@@ -32,32 +33,28 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n         return businessProcess(pd);\n     }\n \n+\n     @Override\n     protected void validate(IPageData pd, JSONObject paramIn) {\n-\n         super.validatePageInfo(pd);\n \n+\n         super.checkUserHasPrivilege(pd, restTemplate, PrivilegeCodeConstant.AGENT_HAS_LIST_COMMUNITY);\n     }\n \n+\n     @Override\n     protected ResponseEntity<String> doBusinessProcess(IPageData pd, JSONObject paramIn) {\n         ComponentValidateResult result = super.validateStoreStaffCommunityRelationship(pd, restTemplate);\n-\n         Map paramMap = BeanConvertUtil.beanCovertMap(result);\n         paramIn.putAll(paramMap);\n \n-\n-        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n+        if (!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n             paramIn.put(\"memberId\", result.getStoreId());\n         }\n \n         String apiUrl = ServiceConstant.SERVICE_API_URL + \"/api/community.listCommunitys\" + mapToUrlParam(paramIn);\n-\n-\n-        ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, \"\",\n-                apiUrl,\n-                HttpMethod.GET);\n+        ResponseEntity<String> responseEntity = this.callCenterService(restTemplate, pd, \"\", apiUrl, HttpMethod.GET);\n \n         return responseEntity;\n     }\n@@ -69,4 +66,4 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n     public void setRestTemplate(RestTemplate restTemplate) {\n         this.restTemplate = restTemplate;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/309/ListCommunitysSMOImpl.java\nindex ec83f6d769..132ee68692 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/309/ListCommunitysSMOImpl.java\n@@ -48,7 +48,7 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n         paramIn.putAll(paramMap);\n \n \n-        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n+        if (!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n             paramIn.put(\"memberId\", result.getStoreId());\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "column": "35",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/309/ListCommunitysSMOImpl.java\nindex ec83f6d769..1094e098d1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/309/ListCommunitysSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/309/ListCommunitysSMOImpl.java\n@@ -45,10 +45,7 @@ public class ListCommunitysSMOImpl extends AbstractComponentSMO implements IList\n         ComponentValidateResult result = super.validateStoreStaffCommunityRelationship(pd, restTemplate);\n \n         Map paramMap = BeanConvertUtil.beanCovertMap(result);\n-        paramIn.putAll(paramMap);\n-\n-\n-        if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n+        paramIn.putAll(paramMap); if(!StoreTypeConstant.STORE_TYPE_SYSTEM_MANAGER.equals(result.getStoreTypeCd())) {\n             paramIn.put(\"memberId\", result.getStoreId());\n         }\n \n",
            "diff_size": 4
        }
    ]
}