{
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "106",
                "column": "1",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n/**\n * Business object for PEX graph\n *\n * @author Sebastien Murgey {@literal <sebastien.murgey at rte-france.com>}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler/40/PexGraph.java\nindex 24e5f125ac..71b9a475a6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler/40/PexGraph.java\n@@ -102,7 +102,6 @@ class PexGraphEdge {\n     }\n }\n \n-\n /**\n  * Business object for PEX graph\n  *\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "107",
                    "column": "1",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/intellij/40/PexGraph.java\nindex 24e5f125ac..2a91db5292 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/intellij/40/PexGraph.java\n@@ -4,6 +4,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package com.farao_community.farao.flow_decomposition.full_line_decomposition;\n \n import com.powsybl.iidm.network.Branch;\n@@ -33,16 +34,16 @@ class PexGraphVertex {\n         this.associatedBus = Objects.requireNonNull(associatedBus);\n \n         double totalGeneration = -NetworkUtil.getInjectionStream(associatedBus)\n-                .mapToDouble(injection -> injection.getTerminal().getP())\n-                .filter(d -> !Double.isNaN(d))\n-                .filter(d -> d < 0)\n-                .sum();\n+            .mapToDouble(injection -> injection.getTerminal().getP())\n+            .filter(d -> !Double.isNaN(d))\n+            .filter(d -> d < 0)\n+            .sum();\n \n         double totalLoad = NetworkUtil.getInjectionStream(associatedBus)\n-                .mapToDouble(injection -> injection.getTerminal().getP())\n-                .filter(d -> !Double.isNaN(d))\n-                .filter(d -> d > 0)\n-                .sum();\n+            .mapToDouble(injection -> injection.getTerminal().getP())\n+            .filter(d -> !Double.isNaN(d))\n+            .filter(d -> d > 0)\n+            .sum();\n \n         if (injectionStrategy == InjectionStrategy.SUM_INJECTIONS) {\n             this.associatedGeneration = totalGeneration > totalLoad ? totalGeneration - totalLoad : 0;\n@@ -152,13 +153,13 @@ public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n         Objects.requireNonNull(busMapper);\n \n         network.getBusView().getBusStream()\n-                .filter(busMapper::containsKey)\n-                .forEach(bus -> addBusAsVertex(bus, injectionStrategy));\n+            .filter(busMapper::containsKey)\n+            .forEach(bus -> addBusAsVertex(bus, injectionStrategy));\n         network.getBranchStream()\n-                .filter(branch -> busMapper.containsKey(branch.getTerminal1().getBusView().getBus())\n-                        && busMapper.containsKey(branch.getTerminal2().getBusView().getBus()))\n-                .filter(branch -> branch.getTerminal1().isConnected() && branch.getTerminal2().isConnected())\n-                .forEach(this::addBranchAsEdge);\n+            .filter(branch -> busMapper.containsKey(branch.getTerminal1().getBusView().getBus())\n+                && busMapper.containsKey(branch.getTerminal2().getBusView().getBus()))\n+            .filter(branch -> branch.getTerminal1().isConnected() && branch.getTerminal2().isConnected())\n+            .forEach(this::addBranchAsEdge);\n \n         checkGraph();\n     }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "56",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "44",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/naturalize/40/PexGraph.java\nindex 24e5f125ac..7a44c5e6f2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/naturalize/40/PexGraph.java\n@@ -37,16 +37,15 @@ class PexGraphVertex {\n                 .filter(d -> !Double.isNaN(d))\n                 .filter(d -> d < 0)\n                 .sum();\n-\n-        double totalLoad = NetworkUtil.getInjectionStream(associatedBus)\n+double totalLoad = NetworkUtil.getInjectionStream(associatedBus)\n                 .mapToDouble(injection -> injection.getTerminal().getP())\n                 .filter(d -> !Double.isNaN(d))\n                 .filter(d -> d > 0)\n                 .sum();\n \n         if (injectionStrategy == InjectionStrategy.SUM_INJECTIONS) {\n-            this.associatedGeneration = totalGeneration > totalLoad ? totalGeneration - totalLoad : 0;\n-            this.associatedLoad = totalLoad > totalGeneration ? totalLoad - totalGeneration : 0;\n+            this.associatedGeneration = totalGeneration> totalLoad ? totalGeneration - totalLoad : 0;\n+            this.associatedLoad = totalLoad> totalGeneration ? totalLoad - totalGeneration : 0;\n         } else if (injectionStrategy == InjectionStrategy.DECOMPOSE_INJECTIONS) {\n             this.associatedGeneration = totalGeneration;\n             this.associatedLoad = totalLoad;\n@@ -102,7 +101,6 @@ class PexGraphEdge {\n     }\n }\n \n-\n /**\n  * Business object for PEX graph\n  *\n@@ -139,11 +137,9 @@ public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n         for (PexGraphVertex vertex : vertexSet()) {\n             double nodalGeneration = vertex.getAssociatedGeneration() + incomingEdgesOf(vertex).stream()\n                 .mapToDouble(PexGraphEdge::getAssociatedFlow).sum();\n-\n-            double nodalLoad = vertex.getAssociatedLoad() + outgoingEdgesOf(vertex).stream()\n+double nodalLoad = vertex.getAssociatedLoad() + outgoingEdgesOf(vertex).stream()\n                 .mapToDouble(PexGraphEdge::getAssociatedFlow).sum();\n-\n-            assert Math.abs(nodalGeneration - nodalLoad) < 1e-3;\n+assert Math.abs(nodalGeneration - nodalLoad) < 1e-3;\n         }\n     }\n \n@@ -157,9 +153,9 @@ public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n         network.getBranchStream()\n                 .filter(branch -> busMapper.containsKey(branch.getTerminal1().getBusView().getBus())\n                         && busMapper.containsKey(branch.getTerminal2().getBusView().getBus()))\n-                .filter(branch -> branch.getTerminal1().isConnected() && branch.getTerminal2().isConnected())\n+.filter(branch -> branch.getTerminal1().isConnected() && branch.getTerminal2().isConnected())\n                 .forEach(this::addBranchAsEdge);\n \n         checkGraph();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "column": "1",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/codebuff/40/PexGraph.java\nindex 24e5f125ac..e1a40c3d93 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/codebuff/40/PexGraph.java\n@@ -13,7 +13,6 @@ import com.farao_community.farao.flow_decomposition.full_line_decomposition.Full\n import org.jgrapht.graph.DirectedMultigraph;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Objects;\n@@ -24,6 +23,8 @@ import java.util.Objects;\n  *\n  * @author Sebastien Murgey {@literal <sebastien.murgey at rte-france.com>}\n  */\n+\n+\n class PexGraphVertex {\n     private Bus associatedBus;\n     private double associatedGeneration;\n@@ -31,26 +32,21 @@ class PexGraphVertex {\n \n     PexGraphVertex(Bus associatedBus, InjectionStrategy injectionStrategy) {\n         this.associatedBus = Objects.requireNonNull(associatedBus);\n-\n-        double totalGeneration = -NetworkUtil.getInjectionStream(associatedBus)\n-                .mapToDouble(injection -> injection.getTerminal().getP())\n-                .filter(d -> !Double.isNaN(d))\n-                .filter(d -> d < 0)\n-                .sum();\n-\n-        double totalLoad = NetworkUtil.getInjectionStream(associatedBus)\n-                .mapToDouble(injection -> injection.getTerminal().getP())\n-                .filter(d -> !Double.isNaN(d))\n-                .filter(d -> d > 0)\n-                .sum();\n-\n+        double totalGeneration = -NetworkUtil.getInjectionStream(associatedBus).mapToDouble(injection -> injection.getTerminal().getP())\n+.filter(d -> !Double.isNaN(d))\n+.filter(d -> d < 0)\n+.sum();\n+        double totalLoad = NetworkUtil.getInjectionStream(associatedBus).mapToDouble(injection -> injection.getTerminal().getP())\n+.filter(d -> !Double.isNaN(d))\n+.filter(d -> d > 0)\n+.sum();\n         if (injectionStrategy == InjectionStrategy.SUM_INJECTIONS) {\n             this.associatedGeneration = totalGeneration > totalLoad ? totalGeneration - totalLoad : 0;\n             this.associatedLoad = totalLoad > totalGeneration ? totalLoad - totalGeneration : 0;\n         } else if (injectionStrategy == InjectionStrategy.DECOMPOSE_INJECTIONS) {\n-            this.associatedGeneration = totalGeneration;\n-            this.associatedLoad = totalLoad;\n-        }\n+                   this.associatedGeneration = totalGeneration;\n+                   this.associatedLoad = totalLoad;\n+               }\n     }\n \n     double getAssociatedLoad() {\n@@ -77,6 +73,7 @@ class PexGraphVertex {\n  *\n  * @author Sebastien Murgey {@literal <sebastien.murgey at rte-france.com>}\n  */\n+\n class PexGraphEdge {\n     private Branch associatedBranch;\n \n@@ -108,10 +105,10 @@ class PexGraphEdge {\n  *\n  * @author Sebastien Murgey {@literal <sebastien.murgey at rte-france.com>}\n  */\n+\n public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n     private Map<Bus, PexGraphVertex> vertexPerBus = new HashMap<>();\n     private static final Logger LOGGER = LoggerFactory.getLogger(PexGraph.class);\n-\n     private void addBusAsVertex(Bus bus, InjectionStrategy injectionStrategy) {\n         assert bus != null;\n         PexGraphVertex vertex = new PexGraphVertex(bus, injectionStrategy);\n@@ -121,27 +118,28 @@ public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n \n     private void addBranchAsEdge(Branch branch) {\n         assert branch != null;\n-\n-        Bus bus1 = branch.getTerminal1().getBusView().getBus();\n-        Bus bus2 = branch.getTerminal2().getBusView().getBus();\n-\n+        Bus bus1 = branch.getTerminal1().getBusView()\n+.getBus();\n+        Bus bus2 = branch.getTerminal2().getBusView()\n+.getBus();\n         if (Math.abs(branch.getTerminal1().getP()) < 1e-5) {\n             // To avoid possibe cycles, remove 0 transfer lines\n             LOGGER.debug(\"Branch {} filtered because of a flow too low : {} MW\", branch.getId(), branch.getTerminal1().getP());\n         } else if (branch.getTerminal1().getP() > 0) {\n-            addEdge(vertexPerBus.get(bus1), vertexPerBus.get(bus2), new PexGraphEdge(branch));\n-        } else {\n-            addEdge(vertexPerBus.get(bus2), vertexPerBus.get(bus1), new PexGraphEdge(branch));\n-        }\n+                   addEdge(vertexPerBus.get(bus1), vertexPerBus.get(bus2), new PexGraphEdge(branch));\n+               } else {\n+                   addEdge(vertexPerBus.get(bus2), vertexPerBus.get(bus1), new PexGraphEdge(branch));\n+               }\n     }\n \n     private void checkGraph() {\n         for (PexGraphVertex vertex : vertexSet()) {\n             double nodalGeneration = vertex.getAssociatedGeneration() + incomingEdgesOf(vertex).stream()\n-                .mapToDouble(PexGraphEdge::getAssociatedFlow).sum();\n-\n+.mapToDouble(PexGraphEdge::getAssociatedFlow)\n+.sum();\n             double nodalLoad = vertex.getAssociatedLoad() + outgoingEdgesOf(vertex).stream()\n-                .mapToDouble(PexGraphEdge::getAssociatedFlow).sum();\n+.mapToDouble(PexGraphEdge::getAssociatedFlow)\n+.sum();\n \n             assert Math.abs(nodalGeneration - nodalLoad) < 1e-3;\n         }\n@@ -150,16 +148,14 @@ public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n     public PexGraph(Network network, Map<Bus, Integer> busMapper, InjectionStrategy injectionStrategy) {\n         super(PexGraphEdge.class);\n         Objects.requireNonNull(busMapper);\n-\n         network.getBusView().getBusStream()\n-                .filter(busMapper::containsKey)\n-                .forEach(bus -> addBusAsVertex(bus, injectionStrategy));\n-        network.getBranchStream()\n-                .filter(branch -> busMapper.containsKey(branch.getTerminal1().getBusView().getBus())\n-                        && busMapper.containsKey(branch.getTerminal2().getBusView().getBus()))\n-                .filter(branch -> branch.getTerminal1().isConnected() && branch.getTerminal2().isConnected())\n-                .forEach(this::addBranchAsEdge);\n-\n+                            .filter(busMapper::containsKey).forEach(bus -> addBusAsVertex(bus, injectionStrategy));\n+        network.getBranchStream().filter(branch -> busMapper.containsKey(branch.getTerminal1().getBusView()\n+.getBus()) &&\n+   busMapper.containsKey(branch.getTerminal2().getBusView()\n+.getBus()))\n+                                 .filter(branch -> branch.getTerminal1().isConnected() &&\n+   branch.getTerminal2().isConnected()).forEach(this::addBranchAsEdge);\n         checkGraph();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_random/40/PexGraph.java\nindex 24e5f125ac..71b9a475a6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_random/40/PexGraph.java\n@@ -102,7 +102,6 @@ class PexGraphEdge {\n     }\n }\n \n-\n /**\n  * Business object for PEX graph\n  *\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_three_grams/40/PexGraph.java\nindex 24e5f125ac..589b4d31f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/40/PexGraph.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_three_grams/40/PexGraph.java\n@@ -102,13 +102,11 @@ class PexGraphEdge {\n     }\n }\n \n-\n /**\n  * Business object for PEX graph\n  *\n  * @author Sebastien Murgey {@literal <sebastien.murgey at rte-france.com>}\n- */\n-public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n+ */ public class PexGraph extends DirectedMultigraph<PexGraphVertex, PexGraphEdge> {\n     private Map<Bus, PexGraphVertex> vertexPerBus = new HashMap<>();\n     private static final Logger LOGGER = LoggerFactory.getLogger(PexGraph.class);\n \n",
            "diff_size": 3
        }
    ]
}