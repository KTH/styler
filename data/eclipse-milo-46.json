{
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "91",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n                                   Out<NodeId> newNodeId) throws UaException;\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'NodeId' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler/46/MoveOrCopyMethod.java\nindex a1d139667b..03cc78a067 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler/46/MoveOrCopyMethod.java\n@@ -88,6 +88,7 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n+\n+    NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n                                    Out<NodeId> newNodeId) throws UaException;\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/46/MoveOrCopyMethod.java\nindex a1d139667b..83a711242a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/46/MoveOrCopyMethod.java\n@@ -67,12 +67,12 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n \n     @Override\n     public Argument[] getInputArguments() {\n-        return new Argument[]{OBJECT_TO_MOVE_OR_COPY, TARGET_DIRECTORY, CREATE_COPY, NEW_NAME};\n+        return new Argument[] {OBJECT_TO_MOVE_OR_COPY, TARGET_DIRECTORY, CREATE_COPY, NEW_NAME};\n     }\n \n     @Override\n     public Argument[] getOutputArguments() {\n-        return new Argument[]{NEW_NODE_ID};\n+        return new Argument[] {NEW_NODE_ID};\n     }\n \n     @Override\n@@ -84,10 +84,11 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n         String newName = (String) inputValues[3].getValue();\n         Out<NodeId> newNodeId = new Out<NodeId>();\n         invoke(context, objectToMoveOrCopy, targetDirectory, createCopy, newName, newNodeId);\n-        return new Variant[]{new Variant(newNodeId.get())};\n+        return new Variant[] {new Variant(newNodeId.get())};\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n+                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy,\n+                                   String newName,\n                                    Out<NodeId> newNodeId) throws UaException;\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/46/MoveOrCopyMethod.java\nindex a1d139667b..cc8207ea88 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/46/MoveOrCopyMethod.java\n@@ -90,4 +90,4 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n                                    NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n                                    Out<NodeId> newNodeId) throws UaException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/46/MoveOrCopyMethod.java\nindex a1d139667b..9f640dc124 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/46/MoveOrCopyMethod.java\n@@ -21,45 +21,16 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;\n import org.eclipse.milo.opcua.stack.core.types.structured.Argument;\n \n public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n-    public static final Argument OBJECT_TO_MOVE_OR_COPY = new Argument(\n-        \"ObjectToMoveOrCopy\",\n-        NodeId.parse(\"ns=0;i=17\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n \n-    public static final Argument TARGET_DIRECTORY = new Argument(\n-        \"TargetDirectory\",\n-        NodeId.parse(\"ns=0;i=17\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n+    public static final Argument OBJECT_TO_MOVE_OR_COPY = new Argument(\"ObjectToMoveOrCopy\", NodeId.parse(\"ns=0;i=17\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n \n-    public static final Argument CREATE_COPY = new Argument(\n-        \"CreateCopy\",\n-        NodeId.parse(\"ns=0;i=1\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n+    public static final Argument TARGET_DIRECTORY = new Argument(\"TargetDirectory\", NodeId.parse(\"ns=0;i=17\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n \n-    public static final Argument NEW_NAME = new Argument(\n-        \"NewName\",\n-        NodeId.parse(\"ns=0;i=12\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n+    public static final Argument CREATE_COPY = new Argument(\"CreateCopy\", NodeId.parse(\"ns=0;i=1\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n \n-    public static final Argument NEW_NODE_ID = new Argument(\n-        \"NewNodeId\",\n-        NodeId.parse(\"ns=0;i=17\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n+    public static final Argument NEW_NAME = new Argument(\"NewName\", NodeId.parse(\"ns=0;i=12\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n+\n+    public static final Argument NEW_NODE_ID = new Argument(\"NewNodeId\", NodeId.parse(\"ns=0;i=17\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n \n     public MoveOrCopyMethod(UaMethodNode node) {\n         super(node);\n@@ -76,18 +47,23 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n     }\n \n     @Override\n-    protected Variant[] invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                               Variant[] inputValues) throws UaException {\n+    protected Variant[] invoke(AbstractMethodInvocationHandler.InvocationContext context, Variant[] inputValues) throws UaException {\n         NodeId objectToMoveOrCopy = (NodeId) inputValues[0].getValue();\n         NodeId targetDirectory = (NodeId) inputValues[1].getValue();\n         Boolean createCopy = (Boolean) inputValues[2].getValue();\n         String newName = (String) inputValues[3].getValue();\n         Out<NodeId> newNodeId = new Out<NodeId>();\n+\n         invoke(context, objectToMoveOrCopy, targetDirectory, createCopy, newName, newNodeId);\n+\n         return new Variant[]{new Variant(newNodeId.get())};\n     }\n \n-    protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n-                                   Out<NodeId> newNodeId) throws UaException;\n-}\n+    protected abstract void invoke(\n+        AbstractMethodInvocationHandler.InvocationContext context,\n+        NodeId objectToMoveOrCopy,\n+        NodeId targetDirectory,\n+        Boolean createCopy,\n+        String newName, Out<NodeId> newNodeId\n+    ) throws UaException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_random/46/MoveOrCopyMethod.java\nindex a1d139667b..defe43503d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_random/46/MoveOrCopyMethod.java\n@@ -88,6 +88,8 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n-                                   Out<NodeId> newNodeId) throws UaException;\n-}\n+                                    NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy,\n+    String newName,\n+                                    Out<NodeId> newNodeId) throws UaException;\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'NodeId' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_three_grams/46/MoveOrCopyMethod.java\nindex a1d139667b..03cc78a067 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/46/MoveOrCopyMethod.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_three_grams/46/MoveOrCopyMethod.java\n@@ -88,6 +88,7 @@ public abstract class MoveOrCopyMethod extends AbstractMethodInvocationHandler {\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n+\n+    NodeId objectToMoveOrCopy, NodeId targetDirectory, Boolean createCopy, String newName,\n                                    Out<NodeId> newNodeId) throws UaException;\n }\n",
            "diff_size": 2
        }
    ]
}