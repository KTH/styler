{
    "error_id": "10",
    "information": {
        "errors": [
            {
                "line": "527",
                "severity": "error",
                "message": "Two or more consecutive empty lines",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
            }
        ]
    },
    "source_code": "            this.capacity = capacity;\n            this.memoryTracker = memoryTracker;\n            this.operatorId = operatorId;\n        }\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "526",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "526",
                    "column": "77",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/10/CachingExpandInto.java\nindex 4cc04bf65b..3b6b001974 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/10/CachingExpandInto.java\n@@ -523,8 +523,7 @@ public class CachingExpandInto\n         NodeDegreeCache( int capacity, QueryMemoryTracker memoryTracker, int operatorId )\n         {\n             this.capacity = capacity;\n-            this.memoryTracker = memoryTracker;\n-            this.operatorId = operatorId;\n+            this.memoryTracker = memoryTracker; this.operatorId = operatorId;\n         }\n \n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "59",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "253",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "527",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "538",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "540",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "562",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "605",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/10/CachingExpandInto.java\nindex 4cc04bf65b..76b3d97cf0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/10/CachingExpandInto.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.helpers;\n \n import org.eclipse.collections.api.block.function.primitive.IntFunction0;\n@@ -50,15 +51,15 @@ import static org.neo4j.storageengine.api.RelationshipSelection.selection;\n \n /**\n  * Utility for performing Expand(Into)\n- *\n+ * <p>\n  * Expand(Into) is the operation of given two nodes, find all interconnecting relationships of a given type and direction.\n  * This is often a computationally heavy operation so that given direction and types an instance of this class can be reused\n  * and previously found connections will be cached and can significantly speed up traversals.\n  */\n-@SuppressWarnings( \"unused\" )\n+@SuppressWarnings(\"unused\")\n public class CachingExpandInto\n {\n-    private static final long RELATIONSHIP_SIZE = shallowSizeOfInstance( Relationship.class );\n+    private static final long RELATIONSHIP_SIZE = shallowSizeOfInstance(Relationship.class);\n \n     private static final int EXPENSIVE_DEGREE = -1;\n \n@@ -73,52 +74,52 @@ public class CachingExpandInto\n     //NOTE: this constructor is here for legacy compiled runtime where we don't track memory\n     //when we remove the legacy_compiled this should go as well.\n     @Deprecated\n-    public CachingExpandInto( Read read, Direction direction )\n+    public CachingExpandInto(Read read, Direction direction)\n     {\n-        this( read, direction, QueryMemoryTracker.NO_MEMORY_TRACKER(), Id.INVALID_ID() );\n+        this(read, direction, QueryMemoryTracker.NO_MEMORY_TRACKER(), Id.INVALID_ID());\n     }\n \n-    public CachingExpandInto( Read read, Direction direction, QueryMemoryTracker memoryTracker, int operatorId )\n+    public CachingExpandInto(Read read, Direction direction, QueryMemoryTracker memoryTracker, int operatorId)\n     {\n         this.read = read;\n         this.direction = direction;\n-        this.relationshipCache = new RelationshipCache( memoryTracker, operatorId );\n-        this.degreeCache = new NodeDegreeCache( memoryTracker, operatorId );\n+        this.relationshipCache = new RelationshipCache(memoryTracker, operatorId);\n+        this.degreeCache = new NodeDegreeCache(memoryTracker, operatorId);\n     }\n \n     /**\n      * Creates a cursor for all connecting relationships given a start- and an endnode.\n      *\n-     * @param nodeCursor Node cursor used in traversal\n+     * @param nodeCursor      Node cursor used in traversal\n      * @param traversalCursor Traversal cursor used in traversal\n-     * @param fromNode The start node\n-     * @param toNode The end node\n+     * @param fromNode        The start node\n+     * @param toNode          The end node\n      * @return The interconnecting relationships in the given direction with any of the given types.\n      */\n     public RelationshipTraversalCursor connectingRelationships(\n-            NodeCursor nodeCursor,\n-            RelationshipTraversalCursor traversalCursor,\n-            long fromNode,\n-            int[] types,\n-            long toNode )\n+        NodeCursor nodeCursor,\n+        RelationshipTraversalCursor traversalCursor,\n+        long fromNode,\n+        int[] types,\n+        long toNode)\n     {\n-        Preconditions.requireNegative( this.fromNode );\n-        Preconditions.requireNegative( this.toNode );\n-        List<Relationship> connections = relationshipCache.get( fromNode, toNode, direction );\n+        Preconditions.requireNegative(this.fromNode);\n+        Preconditions.requireNegative(this.toNode);\n+        List<Relationship> connections = relationshipCache.get(fromNode, toNode, direction);\n \n         this.fromNode = fromNode;\n         this.toNode = toNode;\n \n-        if ( connections != null )\n+        if (connections != null)\n         {\n-            return new FromCachedSelectionCursor( connections.iterator(), read );\n+            return new FromCachedSelectionCursor(connections.iterator(), read);\n         }\n         Direction reverseDirection = direction.reverse();\n         //Check toNode, will position nodeCursor at toNode\n-        int toDegree = degreeCache.getIfAbsentPut( toNode,\n-                () -> calculateTotalDegreeIfCheap( read, toNode, nodeCursor, reverseDirection, types ));\n+        int toDegree = degreeCache.getIfAbsentPut(toNode,\n+            () -> calculateTotalDegreeIfCheap(read, toNode, nodeCursor, reverseDirection, types));\n \n-        if ( toDegree == 0 )\n+        if (toDegree == 0)\n         {\n             done();\n             return RelationshipTraversalCursor.EMPTY;\n@@ -126,50 +127,46 @@ public class CachingExpandInto\n         boolean toNodeHasCheapDegrees = toDegree != EXPENSIVE_DEGREE;\n \n         //Check fromNode, note that nodeCursor is now pointing at fromNode\n-        if ( !singleNode( read, nodeCursor, fromNode ) )\n+        if (!singleNode(read, nodeCursor, fromNode))\n         {\n             return RelationshipTraversalCursor.EMPTY;\n         }\n         boolean fromNodeHasCheapDegrees = nodeCursor.supportsFastDegreeLookup();\n \n         //Both can determine degree cheaply, start with the one with the lesser degree\n-        if ( fromNodeHasCheapDegrees && toNodeHasCheapDegrees )\n+        if (fromNodeHasCheapDegrees && toNodeHasCheapDegrees)\n         {\n             //Note that we have already position the cursor at fromNode\n-            int fromDegree = degreeCache.getIfAbsentPut( fromNode, () -> calculateTotalDegree( nodeCursor, direction, types ));\n+            int fromDegree = degreeCache.getIfAbsentPut(fromNode, () -> calculateTotalDegree(nodeCursor, direction, types));\n             long startNode;\n             long endNode;\n             Direction relDirection;\n-            if ( fromDegree < toDegree )\n+            if (fromDegree < toDegree)\n             {\n                 // Everything is correctly positioned\n                 endNode = toNode;\n                 relDirection = direction;\n-            }\n-            else\n+            } else\n             {\n                 //cursor is already pointing at fromNode\n-                singleNode( read, nodeCursor, toNode );\n+                singleNode(read, nodeCursor, toNode);\n                 endNode = fromNode;\n                 relDirection = reverseDirection;\n             }\n \n-            return connectingRelationshipsCursor( relationshipsCursor( traversalCursor, nodeCursor, types, relDirection ), endNode );\n-        }\n-        else if ( toNodeHasCheapDegrees )\n+            return connectingRelationshipsCursor(relationshipsCursor(traversalCursor, nodeCursor, types, relDirection), endNode);\n+        } else if (toNodeHasCheapDegrees)\n         {\n-            return connectingRelationshipsCursor( relationshipsCursor( traversalCursor, nodeCursor, types, direction ), toNode );\n-        }\n-        else if ( fromNodeHasCheapDegrees )\n+            return connectingRelationshipsCursor(relationshipsCursor(traversalCursor, nodeCursor, types, direction), toNode);\n+        } else if (fromNodeHasCheapDegrees)\n         {\n             //must move to toNode\n-            singleNode( read, nodeCursor, toNode );\n-            return connectingRelationshipsCursor( relationshipsCursor( traversalCursor, nodeCursor, types, reverseDirection ), fromNode );\n-        }\n-        else\n+            singleNode(read, nodeCursor, toNode);\n+            return connectingRelationshipsCursor(relationshipsCursor(traversalCursor, nodeCursor, types, reverseDirection), fromNode);\n+        } else\n         {\n             //Both are sparse\n-            return connectingRelationshipsCursor( relationshipsCursor( traversalCursor, nodeCursor, types, direction ), toNode );\n+            return connectingRelationshipsCursor(relationshipsCursor(traversalCursor, nodeCursor, types, direction), toNode);\n         }\n     }\n \n@@ -179,45 +176,45 @@ public class CachingExpandInto\n     }\n \n     public RelationshipTraversalCursor connectingRelationships(\n-            CursorFactory cursors,\n-            NodeCursor nodeCursor,\n-            long fromNode,\n-            int[] types,\n-            long toNode,\n-            PageCursorTracer cursorTracer )\n+        CursorFactory cursors,\n+        NodeCursor nodeCursor,\n+        long fromNode,\n+        int[] types,\n+        long toNode,\n+        PageCursorTracer cursorTracer)\n     {\n-        return connectingRelationships( nodeCursor, cursors.allocateRelationshipTraversalCursor( cursorTracer ), fromNode, types, toNode );\n+        return connectingRelationships(nodeCursor, cursors.allocateRelationshipTraversalCursor(cursorTracer), fromNode, types, toNode);\n     }\n \n-    private int calculateTotalDegreeIfCheap( Read read, long node, NodeCursor nodeCursor, Direction direction,\n-            int[] types )\n+    private int calculateTotalDegreeIfCheap(Read read, long node, NodeCursor nodeCursor, Direction direction,\n+                                            int[] types)\n     {\n-        if ( !singleNode( read, nodeCursor, node ) )\n+        if (!singleNode(read, nodeCursor, node))\n         {\n             return 0;\n         }\n-        if ( !nodeCursor.supportsFastDegreeLookup() )\n+        if (!nodeCursor.supportsFastDegreeLookup())\n         {\n             return EXPENSIVE_DEGREE;\n         }\n-        return calculateTotalDegree( nodeCursor, direction, types );\n+        return calculateTotalDegree(nodeCursor, direction, types);\n     }\n \n-    private int calculateTotalDegree( NodeCursor nodeCursor, Direction direction, int[] types )\n+    private int calculateTotalDegree(NodeCursor nodeCursor, Direction direction, int[] types)\n     {\n-        return nodeCursor.degrees( selection( types, direction ) ).degree( direction );\n+        return nodeCursor.degrees(selection(types, direction)).degree(direction);\n     }\n \n-    private static boolean singleNode( Read read, NodeCursor nodeCursor, long node )\n+    private static boolean singleNode(Read read, NodeCursor nodeCursor, long node)\n     {\n-        read.singleNode( node, nodeCursor );\n+        read.singleNode(node, nodeCursor);\n         return nodeCursor.next();\n     }\n \n     private RelationshipTraversalCursor connectingRelationshipsCursor(\n-            final RelationshipTraversalCursor allRelationships, final long toNode )\n+        final RelationshipTraversalCursor allRelationships, final long toNode)\n     {\n-        return new ExpandIntoSelectionCursor( allRelationships, toNode );\n+        return new ExpandIntoSelectionCursor(allRelationships, toNode);\n     }\n \n     private class FromCachedSelectionCursor implements RelationshipTraversalCursor\n@@ -227,7 +224,7 @@ public class CachingExpandInto\n         private final Read read;\n         private int token;\n \n-        FromCachedSelectionCursor( Iterator<Relationship> relationships, Read read )\n+        FromCachedSelectionCursor(Iterator<Relationship> relationships, Read read)\n         {\n             this.relationships = relationships;\n             this.read = read;\n@@ -236,12 +233,11 @@ public class CachingExpandInto\n         @Override\n         public boolean next()\n         {\n-            if ( relationships.hasNext() )\n+            if (relationships.hasNext())\n             {\n                 this.currentRelationship = relationships.next();\n                 return true;\n-            }\n-            else\n+            } else\n             {\n                 done();\n                 return false;\n@@ -254,9 +250,9 @@ public class CachingExpandInto\n         }\n \n         @Override\n-        public void otherNode( NodeCursor cursor )\n+        public void otherNode(NodeCursor cursor)\n         {\n-            read.singleNode( otherNodeReference(), cursor );\n+            read.singleNode(otherNodeReference(), cursor);\n         }\n \n         @Override\n@@ -266,7 +262,7 @@ public class CachingExpandInto\n         }\n \n         @Override\n-        public void setTracer( KernelReadTracer tracer )\n+        public void setTracer(KernelReadTracer tracer)\n         {\n             //these are cached no need to trace anything\n         }\n@@ -274,7 +270,7 @@ public class CachingExpandInto\n         @Override\n         public void close()\n         {\n-          //nothing to close\n+            //nothing to close\n         }\n \n         @Override\n@@ -290,13 +286,13 @@ public class CachingExpandInto\n         }\n \n         @Override\n-        public void setCloseListener( CloseListener closeListener )\n+        public void setCloseListener(CloseListener closeListener)\n         {\n             //nothing close, just hand ourselves back to the closeListener so that\n             //any tracking of this resource can be removed.\n-            if ( closeListener != null )\n+            if (closeListener != null)\n             {\n-                closeListener.onClosed( this );\n+                closeListener.onClosed(this);\n             }\n         }\n \n@@ -307,7 +303,7 @@ public class CachingExpandInto\n         }\n \n         @Override\n-        public void setToken( int token )\n+        public void setToken(int token)\n         {\n             this.token = token;\n         }\n@@ -355,21 +351,21 @@ public class CachingExpandInto\n         }\n \n         @Override\n-        public void properties( PropertyCursor cursor )\n+        public void properties(PropertyCursor cursor)\n         {\n-           read.relationshipProperties( currentRelationship.id, currentRelationship.properties, cursor );\n+            read.relationshipProperties(currentRelationship.id, currentRelationship.properties, cursor);\n         }\n \n         @Override\n-        public void source( NodeCursor nodeCursor )\n+        public void source(NodeCursor nodeCursor)\n         {\n-            read.singleNode( sourceNodeReference(), nodeCursor );\n+            read.singleNode(sourceNodeReference(), nodeCursor);\n         }\n \n         @Override\n-        public void target( NodeCursor nodeCursor )\n+        public void target(NodeCursor nodeCursor)\n         {\n-            read.singleNode( targetNodeReference(), nodeCursor );\n+            read.singleNode(targetNodeReference(), nodeCursor);\n         }\n     }\n \n@@ -378,18 +374,18 @@ public class CachingExpandInto\n         private final RelationshipTraversalCursor allRelationships;\n         private final long otherNode;\n \n-        private List<Relationship> connections = new ArrayList<>( 2 );\n+        private List<Relationship> connections = new ArrayList<>(2);\n \n-        ExpandIntoSelectionCursor( RelationshipTraversalCursor allRelationships, long otherNode )\n+        ExpandIntoSelectionCursor(RelationshipTraversalCursor allRelationships, long otherNode)\n         {\n             this.allRelationships = allRelationships;\n             this.otherNode = otherNode;\n         }\n \n         @Override\n-        public void otherNode( NodeCursor cursor )\n+        public void otherNode(NodeCursor cursor)\n         {\n-            allRelationships.otherNode( cursor );\n+            allRelationships.otherNode(cursor);\n         }\n \n         @Override\n@@ -408,9 +404,9 @@ public class CachingExpandInto\n         public void close()\n         {\n             closeInternal();\n-            if ( closeListener != null )\n+            if (closeListener != null)\n             {\n-                closeListener.onClosed( this );\n+                closeListener.onClosed(this);\n             }\n         }\n \n@@ -453,17 +449,17 @@ public class CachingExpandInto\n         @Override\n         public boolean next()\n         {\n-            while ( allRelationships.next() )\n+            while (allRelationships.next())\n             {\n-                if ( allRelationships.otherNodeReference() == otherNode )\n+                if (allRelationships.otherNodeReference() == otherNode)\n                 {\n-                    connections.add( relationship( allRelationships ) );\n+                    connections.add(relationship(allRelationships));\n \n                     return true;\n                 }\n             }\n \n-            relationshipCache.add( fromNode, toNode, direction, connections );\n+            relationshipCache.add(fromNode, toNode, direction, connections);\n             done();\n             close();\n             return false;\n@@ -476,27 +472,27 @@ public class CachingExpandInto\n         }\n \n         @Override\n-        public void properties( PropertyCursor cursor )\n+        public void properties(PropertyCursor cursor)\n         {\n-            allRelationships.properties( cursor );\n+            allRelationships.properties(cursor);\n         }\n \n         @Override\n-        public void setTracer( KernelReadTracer tracer )\n+        public void setTracer(KernelReadTracer tracer)\n         {\n-            allRelationships.setTracer( tracer );\n+            allRelationships.setTracer(tracer);\n         }\n \n         @Override\n-        public void source( NodeCursor nodeCursor )\n+        public void source(NodeCursor nodeCursor)\n         {\n-            allRelationships.source( nodeCursor );\n+            allRelationships.source(nodeCursor);\n         }\n \n         @Override\n-        public void target( NodeCursor nodeCursor )\n+        public void target(NodeCursor nodeCursor)\n         {\n-            allRelationships.target( nodeCursor );\n+            allRelationships.target(nodeCursor);\n         }\n \n         @Override\n@@ -515,12 +511,12 @@ public class CachingExpandInto\n         private final int operatorId;\n         private MutableLongIntMap degreeCache = new LongIntHashMap();\n \n-        NodeDegreeCache( QueryMemoryTracker memoryTracker, int operatorId )\n+        NodeDegreeCache(QueryMemoryTracker memoryTracker, int operatorId)\n         {\n-            this( DEFAULT_CAPACITY, memoryTracker, operatorId );\n+            this(DEFAULT_CAPACITY, memoryTracker, operatorId);\n         }\n \n-        NodeDegreeCache( int capacity, QueryMemoryTracker memoryTracker, int operatorId )\n+        NodeDegreeCache(int capacity, QueryMemoryTracker memoryTracker, int operatorId)\n         {\n             this.capacity = capacity;\n             this.memoryTracker = memoryTracker;\n@@ -528,30 +524,27 @@ public class CachingExpandInto\n         }\n \n \n-        public int getIfAbsentPut( long node, IntFunction0 update )\n+        public int getIfAbsentPut(long node, IntFunction0 update)\n         {\n-            if ( degreeCache.size() > capacity )\n+            if (degreeCache.size() > capacity)\n             {\n-                if ( degreeCache.containsKey( node ) )\n+                if (degreeCache.containsKey(node))\n                 {\n-                    return degreeCache.get( node );\n-                }\n-                else\n+                    return degreeCache.get(node);\n+                } else\n                 {\n                     return update.getAsInt();\n                 }\n-            }\n-            else\n+            } else\n             {\n-                if ( degreeCache.containsKey( node ) )\n+                if (degreeCache.containsKey(node))\n                 {\n-                    return degreeCache.get( node );\n-                }\n-                else\n+                    return degreeCache.get(node);\n+                } else\n                 {\n                     int value = update.getAsInt();\n-                    degreeCache.put( node, value );\n-                    memoryTracker.allocated( Long.BYTES + Integer.BYTES, operatorId );\n+                    degreeCache.put(node, value);\n+                    memoryTracker.allocated(Long.BYTES + Integer.BYTES, operatorId);\n                     return value;\n                 }\n             }\n@@ -561,83 +554,82 @@ public class CachingExpandInto\n     static class RelationshipCache\n     {\n \n-        private final MutableMap<Key,List<Relationship>> map = Maps.mutable.withInitialCapacity( 8 );\n+        private final MutableMap<Key, List<Relationship>> map = Maps.mutable.withInitialCapacity(8);\n         private final int capacity;\n         private final QueryMemoryTracker memoryTracker;\n         private final int operatorId;\n \n-        RelationshipCache( QueryMemoryTracker memoryTracker, int operatorId )\n+        RelationshipCache(QueryMemoryTracker memoryTracker, int operatorId)\n         {\n-            this( DEFAULT_CAPACITY, memoryTracker, operatorId );\n+            this(DEFAULT_CAPACITY, memoryTracker, operatorId);\n         }\n \n-        RelationshipCache( int capacity, QueryMemoryTracker memoryTracker, int operatorId )\n+        RelationshipCache(int capacity, QueryMemoryTracker memoryTracker, int operatorId)\n         {\n             this.capacity = capacity;\n             this.memoryTracker = memoryTracker;\n             this.operatorId = operatorId;\n         }\n \n-        public void add( long start, long end, Direction direction, List<Relationship> relationships )\n+        public void add(long start, long end, Direction direction, List<Relationship> relationships)\n         {\n-            if ( map.size() < capacity )\n+            if (map.size() < capacity)\n             {\n-                map.put( key( start, end, direction ), relationships );\n+                map.put(key(start, end, direction), relationships);\n                 //two longs for the key\n-                memoryTracker.allocated( 2 * Long.BYTES, operatorId );\n+                memoryTracker.allocated(2 * Long.BYTES, operatorId);\n                 //relationship.size * RELATIONSHIP_SIZE for the value\n-                memoryTracker.allocated( relationships.size() * RELATIONSHIP_SIZE, operatorId );\n+                memoryTracker.allocated(relationships.size() * RELATIONSHIP_SIZE, operatorId);\n             }\n         }\n \n-        public List<Relationship> get( long start, long end, Direction direction )\n+        public List<Relationship> get(long start, long end, Direction direction)\n         {\n-            return map.get( key( start, end, direction ) );\n+            return map.get(key(start, end, direction));\n         }\n \n-        public Key key( long startNode, long endNode, Direction direction )\n+        public Key key(long startNode, long endNode, Direction direction)\n         {\n             long a, b;\n             // if direction is BOTH than we keep the key sorted, otherwise direction is\n             // important and we keep key as is\n-            if ( direction == BOTH && startNode > endNode )\n+            if (direction == BOTH && startNode > endNode)\n             {\n                 a = endNode;\n                 b = startNode;\n-            }\n-            else\n+            } else\n             {\n                 a = startNode;\n                 b = endNode;\n             }\n-            return new Key( a, b );\n+            return new Key(a, b);\n         }\n \n         static class Key\n         {\n             private final long a, b;\n \n-            Key( long a, long b )\n+            Key(long a, long b)\n             {\n                 this.a = a;\n                 this.b = b;\n             }\n \n             @Override\n-            public boolean equals( Object o )\n+            public boolean equals(Object o)\n             {\n-                if ( this == o )\n+                if (this == o)\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+                if (o == null || getClass() != o.getClass())\n                 {\n                     return false;\n                 }\n \n                 Key key = (Key) o;\n \n-                if ( a != key.a )\n+                if (a != key.a)\n                 {\n                     return false;\n                 }\n@@ -655,14 +647,14 @@ public class CachingExpandInto\n         }\n     }\n \n-    private static Relationship relationship( RelationshipTraversalCursor allRelationships )\n+    private static Relationship relationship(RelationshipTraversalCursor allRelationships)\n     {\n         return new Relationship(\n-                allRelationships.relationshipReference(),\n-                allRelationships.sourceNodeReference(),\n-                allRelationships.targetNodeReference(),\n-                allRelationships.propertiesReference(),\n-                allRelationships.type() );\n+            allRelationships.relationshipReference(),\n+            allRelationships.sourceNodeReference(),\n+            allRelationships.targetNodeReference(),\n+            allRelationships.propertiesReference(),\n+            allRelationships.type());\n     }\n \n     private static class Relationship\n@@ -670,7 +662,7 @@ public class CachingExpandInto\n         private final long id, from, to, properties;\n         private final int type;\n \n-        private Relationship( long id, long from, long to, long properties, int type )\n+        private Relationship(long id, long from, long to, long properties, int type)\n         {\n             this.id = id;\n             this.from = from;\n",
            "diff_size": 142
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "680",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/10/CachingExpandInto.java\nindex 4cc04bf65b..e8d8598673 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/10/CachingExpandInto.java\n@@ -524,159 +524,157 @@ public class CachingExpandInto\n         {\n             this.capacity = capacity;\n             this.memoryTracker = memoryTracker;\n-            this.operatorId = operatorId;\n-        }\n-\n-\n-        public int getIfAbsentPut( long node, IntFunction0 update )\n-        {\n-            if ( degreeCache.size() > capacity )\n-            {\n-                if ( degreeCache.containsKey( node ) )\n-                {\n-                    return degreeCache.get( node );\n-                }\n-                else\n-                {\n-                    return update.getAsInt();\n-                }\n-            }\n-            else\n-            {\n-                if ( degreeCache.containsKey( node ) )\n-                {\n-                    return degreeCache.get( node );\n-                }\n-                else\n-                {\n-                    int value = update.getAsInt();\n-                    degreeCache.put( node, value );\n-                    memoryTracker.allocated( Long.BYTES + Integer.BYTES, operatorId );\n-                    return value;\n-                }\n-            }\n-        }\n-    }\n-\n-    static class RelationshipCache\n-    {\n-\n-        private final MutableMap<Key,List<Relationship>> map = Maps.mutable.withInitialCapacity( 8 );\n-        private final int capacity;\n-        private final QueryMemoryTracker memoryTracker;\n-        private final int operatorId;\n-\n-        RelationshipCache( QueryMemoryTracker memoryTracker, int operatorId )\n-        {\n-            this( DEFAULT_CAPACITY, memoryTracker, operatorId );\n-        }\n-\n-        RelationshipCache( int capacity, QueryMemoryTracker memoryTracker, int operatorId )\n-        {\n-            this.capacity = capacity;\n-            this.memoryTracker = memoryTracker;\n-            this.operatorId = operatorId;\n-        }\n-\n-        public void add( long start, long end, Direction direction, List<Relationship> relationships )\n-        {\n-            if ( map.size() < capacity )\n-            {\n-                map.put( key( start, end, direction ), relationships );\n-                //two longs for the key\n-                memoryTracker.allocated( 2 * Long.BYTES, operatorId );\n-                //relationship.size * RELATIONSHIP_SIZE for the value\n-                memoryTracker.allocated( relationships.size() * RELATIONSHIP_SIZE, operatorId );\n-            }\n-        }\n-\n-        public List<Relationship> get( long start, long end, Direction direction )\n-        {\n-            return map.get( key( start, end, direction ) );\n-        }\n-\n-        public Key key( long startNode, long endNode, Direction direction )\n-        {\n-            long a, b;\n-            // if direction is BOTH than we keep the key sorted, otherwise direction is\n-            // important and we keep key as is\n-            if ( direction == BOTH && startNode > endNode )\n-            {\n-                a = endNode;\n-                b = startNode;\n-            }\n-            else\n-            {\n-                a = startNode;\n-                b = endNode;\n-            }\n-            return new Key( a, b );\n-        }\n-\n-        static class Key\n-        {\n-            private final long a, b;\n-\n-            Key( long a, long b )\n-            {\n-                this.a = a;\n-                this.b = b;\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-\n-                Key key = (Key) o;\n-\n-                if ( a != key.a )\n-                {\n-                    return false;\n-                }\n-                return b == key.b;\n-\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                int result = (int) (a ^ (a >>> 32));\n-                result = 31 * result + (int) (b ^ (b >>> 32));\n-                return result;\n-            }\n-        }\n-    }\n-\n-    private static Relationship relationship( RelationshipTraversalCursor allRelationships )\n-    {\n-        return new Relationship(\n-                allRelationships.relationshipReference(),\n-                allRelationships.sourceNodeReference(),\n-                allRelationships.targetNodeReference(),\n-                allRelationships.propertiesReference(),\n-                allRelationships.type() );\n-    }\n-\n-    private static class Relationship\n-    {\n-        private final long id, from, to, properties;\n-        private final int type;\n-\n-        private Relationship( long id, long from, long to, long properties, int type )\n-        {\n-            this.id = id;\n-            this.from = from;\n-            this.to = to;\n-            this.properties = properties;\n-            this.type = type;\n-        }\n-    }\n-}\n+            this.operatorId = operatorId; } public\n+                                                    int getIfAbsentPut( long node, IntFunction0 update )\n+             {\n+                 if ( degreeCache.size() > capacity )\n+                 {\n+                     if ( degreeCache.containsKey( node ) )\n+                     {\n+                         return degreeCache.get( node );\n+                     }\n+                     else\n+                     {\n+                         return update.getAsInt();\n+                     }\n+                 }\n+                 else\n+                 {\n+                     if ( degreeCache.containsKey( node ) )\n+                     {\n+                         return degreeCache.get( node );\n+                     }\n+                     else\n+                     {\n+                         int value = update.getAsInt();\n+                         degreeCache.put( node, value );\n+                         memoryTracker.allocated( Long.BYTES + Integer.BYTES, operatorId );\n+                         return value;\n+                     }\n+                 }\n+             }\n+         }\n+\n+         static class RelationshipCache\n+         {\n+\n+             private final MutableMap<Key,List<Relationship>> map = Maps.mutable.withInitialCapacity( 8 );\n+             private final int capacity;\n+             private final QueryMemoryTracker memoryTracker;\n+             private final int operatorId;\n+\n+             RelationshipCache( QueryMemoryTracker memoryTracker, int operatorId )\n+             {\n+                 this( DEFAULT_CAPACITY, memoryTracker, operatorId );\n+             }\n+\n+             RelationshipCache( int capacity, QueryMemoryTracker memoryTracker, int operatorId )\n+             {\n+                 this.capacity = capacity;\n+                 this.memoryTracker = memoryTracker;\n+                 this.operatorId = operatorId;\n+             }\n+\n+             public void add( long start, long end, Direction direction, List<Relationship> relationships )\n+             {\n+                 if ( map.size() < capacity )\n+                 {\n+                     map.put( key( start, end, direction ), relationships );\n+                     //two longs for the key\n+                     memoryTracker.allocated( 2 * Long.BYTES, operatorId );\n+                     //relationship.size * RELATIONSHIP_SIZE for the value\n+                     memoryTracker.allocated( relationships.size() * RELATIONSHIP_SIZE, operatorId );\n+                 }\n+             }\n+\n+             public List<Relationship> get( long start, long end, Direction direction )\n+             {\n+                 return map.get( key( start, end, direction ) );\n+             }\n+\n+             public Key key( long startNode, long endNode, Direction direction )\n+             {\n+                 long a, b;\n+                 // if direction is BOTH than we keep the key sorted, otherwise direction is\n+                 // important and we keep key as is\n+                 if ( direction == BOTH && startNode > endNode )\n+                 {\n+                     a = endNode;\n+                     b = startNode;\n+                 }\n+                 else\n+                 {\n+                     a = startNode;\n+                     b = endNode;\n+                 }\n+                 return new Key( a, b );\n+             }\n+\n+             static class Key\n+             {\n+                 private final long a, b;\n+\n+                 Key( long a, long b )\n+                 {\n+                     this.a = a;\n+                     this.b = b;\n+                 }\n+\n+                 @Override\n+                 public boolean equals( Object o )\n+                 {\n+                     if ( this == o )\n+                     {\n+                         return true;\n+                     }\n+                     if ( o == null || getClass() != o.getClass() )\n+                     {\n+                         return false;\n+                     }\n+\n+                     Key key = (Key) o;\n+\n+                     if ( a != key.a )\n+                     {\n+                         return false;\n+                     }\n+                     return b == key.b;\n+\n+                 }\n+\n+                 @Override\n+                 public int hashCode()\n+                 {\n+                     int result = (int) (a ^ (a >>> 32));\n+                     result = 31 * result + (int) (b ^ (b >>> 32));\n+                     return result;\n+                 }\n+             }\n+         }\n+\n+         private static Relationship relationship( RelationshipTraversalCursor allRelationships )\n+         {\n+             return new Relationship(\n+                     allRelationships.relationshipReference(),\n+                     allRelationships.sourceNodeReference(),\n+                     allRelationships.targetNodeReference(),\n+                     allRelationships.propertiesReference(),\n+                     allRelationships.type() );\n+         }\n+\n+         private static class Relationship\n+         {\n+             private final long id, from, to, properties;\n+             private final int type;\n+\n+             private Relationship( long id, long from, long to, long properties, int type )\n+             {\n+                 this.id = id;\n+                 this.from = from;\n+                 this.to = to;\n+                 this.properties = properties;\n+                 this.type = type;\n+             }\n+         }\n+     }\n+     \n\\ No newline at end of file\n",
            "diff_size": 156
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "526",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "526",
                    "column": "77",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/10/CachingExpandInto.java\nindex 4cc04bf65b..3b6b001974 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/10/CachingExpandInto.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/10/CachingExpandInto.java\n@@ -523,8 +523,7 @@ public class CachingExpandInto\n         NodeDegreeCache( int capacity, QueryMemoryTracker memoryTracker, int operatorId )\n         {\n             this.capacity = capacity;\n-            this.memoryTracker = memoryTracker;\n-            this.operatorId = operatorId;\n+            this.memoryTracker = memoryTracker; this.operatorId = operatorId;\n         }\n \n \n",
            "diff_size": 2
        }
    ]
}