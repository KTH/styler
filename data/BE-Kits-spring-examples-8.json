{
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "53",
                "column": "30",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n  @PostConstruct\n  public void postConstruct(){\n    logger.info(\"SECURITY MODULE LOADED!\");\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/styler/8/SecurityModuleConfiguration.java\nindex f5c24598e1..bddd37c4b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/styler/8/SecurityModuleConfiguration.java\n@@ -50,7 +50,7 @@ public class SecurityModuleConfiguration extends WebSecurityConfigurerAdapter {\n   }\n \n   @PostConstruct\n-  public void postConstruct(){\n+  public void postConstruct() {\n     logger.info(\"SECURITY MODULE LOADED!\");\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/intellij/8/SecurityModuleConfiguration.java\nindex f5c24598e1..1980e29f1b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/intellij/8/SecurityModuleConfiguration.java\n@@ -22,35 +22,35 @@ public class SecurityModuleConfiguration extends WebSecurityConfigurerAdapter {\n   @Override\n   public void configure(WebSecurity web) throws Exception {\n     web.ignoring()\n-            .antMatchers(\"/resources/**\");\n+        .antMatchers(\"/resources/**\");\n   }\n \n   @Override\n   protected void configure(HttpSecurity http) throws Exception {\n     http.authorizeRequests()\n-            .antMatchers(\"/public/**\")\n-            .permitAll()\n-            .anyRequest()\n-            .hasRole(\"USER\")\n-            .and()\n-            .formLogin()\n-            .permitAll();\n+        .antMatchers(\"/public/**\")\n+        .permitAll()\n+        .anyRequest()\n+        .hasRole(\"USER\")\n+        .and()\n+        .formLogin()\n+        .permitAll();\n   }\n \n   @Override\n   protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n     auth.inMemoryAuthentication()\n-            .withUser(\"user\")\n-            .password(\"password\")\n-            .roles(\"USER\")\n-            .and()\n-            .withUser(\"admin\")\n-            .password(\"password\")\n-            .roles(\"USER\", \"ADMIN\");\n+        .withUser(\"user\")\n+        .password(\"password\")\n+        .roles(\"USER\")\n+        .and()\n+        .withUser(\"admin\")\n+        .password(\"password\")\n+        .roles(\"USER\", \"ADMIN\");\n   }\n \n   @PostConstruct\n-  public void postConstruct(){\n+  public void postConstruct() {\n     logger.info(\"SECURITY MODULE LOADED!\");\n   }\n \n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/naturalize/8/SecurityModuleConfiguration.java\nindex f5c24598e1..d04ededd6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/naturalize/8/SecurityModuleConfiguration.java\n@@ -50,9 +50,7 @@ public class SecurityModuleConfiguration extends WebSecurityConfigurerAdapter {\n   }\n \n   @PostConstruct\n-  public void postConstruct(){\n+  public void postConstruct() {\n     logger.info(\"SECURITY MODULE LOADED!\");\n   }\n-\n-\n-}\n+  }\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/codebuff/8/SecurityModuleConfiguration.java\nindex f5c24598e1..dd7747009c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/codebuff/8/SecurityModuleConfiguration.java\n@@ -1,7 +1,6 @@\n package io.reflectoring.security;\n \n import javax.annotation.PostConstruct;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n@@ -17,42 +16,35 @@ import org.springframework.security.config.annotation.web.configuration.WebSecur\n @ConditionalOnProperty(name = \"io.reflectoring.security.enabled\", havingValue = \"true\")\n public class SecurityModuleConfiguration extends WebSecurityConfigurerAdapter {\n \n-  private static final Logger logger = LoggerFactory.getLogger(SecurityModuleConfiguration.class);\n-\n-  @Override\n-  public void configure(WebSecurity web) throws Exception {\n-    web.ignoring()\n-            .antMatchers(\"/resources/**\");\n-  }\n-\n-  @Override\n-  protected void configure(HttpSecurity http) throws Exception {\n-    http.authorizeRequests()\n-            .antMatchers(\"/public/**\")\n-            .permitAll()\n-            .anyRequest()\n-            .hasRole(\"USER\")\n-            .and()\n-            .formLogin()\n-            .permitAll();\n-  }\n-\n-  @Override\n-  protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n-    auth.inMemoryAuthentication()\n-            .withUser(\"user\")\n-            .password(\"password\")\n-            .roles(\"USER\")\n-            .and()\n-            .withUser(\"admin\")\n-            .password(\"password\")\n-            .roles(\"USER\", \"ADMIN\");\n-  }\n-\n-  @PostConstruct\n-  public void postConstruct(){\n+    private static final Logger logger = LoggerFactory.getLogger(SecurityModuleConfiguration.class);\n+\n+    @Override\n+    public void configure(WebSecurity web) throws Exception {\n+    web.ignoring().antMatchers(\"/resources/**\");\n+    }\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+    http.authorizeRequests().antMatchers(\"/public/**\")\n+                            .permitAll()\n+                            .anyRequest()\n+                            .hasRole(\"USER\")\n+                            .and()\n+                            .formLogin().permitAll();\n+    }\n+\n+    @Override\n+    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n+    auth.inMemoryAuthentication().withUser(\"user\")\n+                                 .password(\"password\")\n+                                 .roles(\"USER\")\n+                                 .and()\n+                                 .withUser(\"admin\")\n+                                 .password(\"password\").roles(\"USER\", \"ADMIN\");\n+    }\n+\n+    @PostConstruct\n+    public void postConstruct() {\n     logger.info(\"SECURITY MODULE LOADED!\");\n-  }\n-\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/styler_random/8/SecurityModuleConfiguration.java\nindex f5c24598e1..bddd37c4b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/styler_random/8/SecurityModuleConfiguration.java\n@@ -50,7 +50,7 @@ public class SecurityModuleConfiguration extends WebSecurityConfigurerAdapter {\n   }\n \n   @PostConstruct\n-  public void postConstruct(){\n+  public void postConstruct() {\n     logger.info(\"SECURITY MODULE LOADED!\");\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/styler_three_grams/8/SecurityModuleConfiguration.java\nindex f5c24598e1..bddd37c4b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/errored/1/8/SecurityModuleConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/BE-Kits-spring-examples/styler_three_grams/8/SecurityModuleConfiguration.java\n@@ -50,7 +50,7 @@ public class SecurityModuleConfiguration extends WebSecurityConfigurerAdapter {\n   }\n \n   @PostConstruct\n-  public void postConstruct(){\n+  public void postConstruct() {\n     logger.info(\"SECURITY MODULE LOADED!\");\n   }\n \n",
            "diff_size": 1
        }
    ]
}