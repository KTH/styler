{
    "error_id": "369",
    "information": {
        "errors": [
            {
                "line": "30",
                "column": "71",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    public boolean matches(Binding<?> binding) {\n        Class<?> rawType = binding.getKey().getTypeLiteral().getRawType();\n        return binding.acceptScopingVisitor(preDestroyScopingVisitor) &&\n                (isAutoCloseable(rawType) || hasJsr250Methods(rawType));\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "30",
                    "column": "70",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler/369/LifecycleMatcher.java\nindex ddb72bff5a..9885d5b090 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler/369/LifecycleMatcher.java\n@@ -27,7 +27,7 @@ class LifecycleMatcher extends AbstractMatcher<Binding<?>> {\n     @Override\n     public boolean matches(Binding<?> binding) {\n         Class<?> rawType = binding.getKey().getTypeLiteral().getRawType();\n-        return binding.acceptScopingVisitor(preDestroyScopingVisitor) &&\n+        return binding.acceptScopingVisitor(preDestroyScopingVisitor)&&\n                 (isAutoCloseable(rawType) || hasJsr250Methods(rawType));\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "column": "71",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'CLASS_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "column": "134",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "167",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "198",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "230",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "279",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "330",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "369",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "407",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "442",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "472",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "514",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "572",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "573",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "573",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "637",
                    "severity": "warning",
                    "message": "WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "637",
                    "severity": "warning",
                    "message": "WhitespaceAround: '=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "668",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "711",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "720",
                    "severity": "warning",
                    "message": "'{' at column 720 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "720",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "720",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "728",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "736",
                    "severity": "warning",
                    "message": "WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "736",
                    "severity": "warning",
                    "message": "WhitespaceAround: '=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "784",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "9",
                    "column": "784",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "785",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "847",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "875",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "903",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "904",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "904",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "945",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "954",
                    "severity": "warning",
                    "message": "'{' at column 954 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "954",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "954",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "955",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1146",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "1147",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1147",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1187",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "1196",
                    "severity": "warning",
                    "message": "'{' at column 1,196 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "1196",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1196",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1197",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1249",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "1250",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1250",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1337",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "1338",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1338",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1385",
                    "severity": "warning",
                    "message": "'{' at column 1,385 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "1385",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1385",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1386",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1397",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "1398",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1398",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1447",
                    "severity": "warning",
                    "message": "'{' at column 1,447 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "1447",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1447",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1448",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1460",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1460",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1478",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "1479",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1479",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1551",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "9",
                    "column": "1568",
                    "severity": "warning",
                    "message": "'{' at column 1,568 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "1568",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1568",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1569",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1626",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1695",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "1696",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1696",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1738",
                    "severity": "warning",
                    "message": "'{' at column 1,738 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "9",
                    "column": "1738",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1738",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1739",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'return' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1751",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "9",
                    "column": "1752",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1752",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1753",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1753",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "9",
                    "column": "1754",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/codebuff/369/LifecycleMatcher.java\nindex ddb72bff5a..abe4818ae0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/codebuff/369/LifecycleMatcher.java\n@@ -6,64 +6,4 @@\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n \n-package org.seedstack.seed.core.internal.lifecycle;\n-\n-import static org.seedstack.shed.reflect.AnnotationPredicates.elementAnnotatedWith;\n-\n-import com.google.inject.Binding;\n-import com.google.inject.Scope;\n-import com.google.inject.Scopes;\n-import com.google.inject.matcher.AbstractMatcher;\n-import com.google.inject.spi.BindingScopingVisitor;\n-import java.lang.annotation.Annotation;\n-import javax.annotation.PostConstruct;\n-import javax.annotation.PreDestroy;\n-import javax.inject.Singleton;\n-import org.seedstack.shed.reflect.Classes;\n-\n-class LifecycleMatcher extends AbstractMatcher<Binding<?>> {\n-    private final PreDestroyScopingVisitor preDestroyScopingVisitor = new PreDestroyScopingVisitor();\n-\n-    @Override\n-    public boolean matches(Binding<?> binding) {\n-        Class<?> rawType = binding.getKey().getTypeLiteral().getRawType();\n-        return binding.acceptScopingVisitor(preDestroyScopingVisitor) &&\n-                (isAutoCloseable(rawType) || hasJsr250Methods(rawType));\n-    }\n-\n-    private boolean hasJsr250Methods(Class<?> rawType) {\n-        return Classes.from(rawType)\n-                .traversingInterfaces()\n-                .traversingSuperclasses()\n-                .methods()\n-                .anyMatch(elementAnnotatedWith(PreDestroy.class, true)\n-                        .or(elementAnnotatedWith(PostConstruct.class, true)));\n-    }\n-\n-    private boolean isAutoCloseable(Class<?> rawType) {\n-        return AutoCloseable.class.isAssignableFrom(rawType);\n-    }\n-\n-    private static class PreDestroyScopingVisitor implements BindingScopingVisitor<Boolean> {\n-        @Override\n-        public Boolean visitEagerSingleton() {\n-            return true;\n-        }\n-\n-        @Override\n-        public Boolean visitScope(Scope scope) {\n-            return scope == Scopes.SINGLETON;\n-        }\n-\n-        @Override\n-        public Boolean visitScopeAnnotation(Class<? extends Annotation> scopeAnnotation) {\n-            return scopeAnnotation.isAssignableFrom(Singleton.class) || scopeAnnotation.isAssignableFrom(\n-                    com.google.inject.Singleton.class);\n-        }\n-\n-        @Override\n-        public Boolean visitNoScoping() {\n-            return false;\n-        }\n-    }\n-}\n+package org.seedstack.seed.core.internal.lifecycle;import static org.seedstack.shed.reflect.AnnotationPredicates.elementAnnotatedWith;import com.google.inject.Binding;import com.google.inject.Scope;import com.google.inject.Scopes;import com.google.inject.matcher.AbstractMatcher;import com.google.inject.spi.BindingScopingVisitor;import java.lang.annotation.Annotation;import javax.annotation.PostConstruct;import javax.annotation.PreDestroy;import javax.inject.Singleton;import org.seedstack.shed.reflect.Classes;class LifecycleMatcher extends AbstractMatcher<Binding<?>>{private final PreDestroyScopingVisitor preDestroyScopingVisitor=new PreDestroyScopingVisitor();@Override public boolean matches(Binding<?>binding){Class<?>rawType=binding.getKey().getTypeLiteral().getRawType() ;return binding.acceptScopingVisitor(preDestroyScopingVisitor) &&(isAutoCloseable(rawType) ||hasJsr250Methods(rawType));}private boolean hasJsr250Methods(Class<?>rawType){return Classes.from(rawType).traversingInterfaces().traversingSuperclasses().methods().anyMatch(elementAnnotatedWith(PreDestroy.class,true).or(elementAnnotatedWith(PostConstruct.class,true)));}private boolean isAutoCloseable(Class<?>rawType){return AutoCloseable.class.isAssignableFrom(rawType);}private static class PreDestroyScopingVisitor implements BindingScopingVisitor<Boolean>{@Override public Boolean visitEagerSingleton(){return true;}@Override public Boolean visitScope(Scope scope){return scope==Scopes.SINGLETON;}@Override public Boolean visitScopeAnnotation(Class<?extends Annotation>scopeAnnotation){return scopeAnnotation.isAssignableFrom(Singleton.class) ||scopeAnnotation.isAssignableFrom(com.google.inject.Singleton.class);}@Override public Boolean visitNoScoping(){return false;}}}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_random/369/LifecycleMatcher.java\nindex ddb72bff5a..ec3e6e2e9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_random/369/LifecycleMatcher.java\n@@ -27,43 +27,43 @@ class LifecycleMatcher extends AbstractMatcher<Binding<?>> {\n     @Override\n     public boolean matches(Binding<?> binding) {\n         Class<?> rawType = binding.getKey().getTypeLiteral().getRawType();\n-        return binding.acceptScopingVisitor(preDestroyScopingVisitor) &&\n-                (isAutoCloseable(rawType) || hasJsr250Methods(rawType));\n-    }\n+        return binding.acceptScopingVisitor(preDestroyScopingVisitor)\n+        && (isAutoCloseable(rawType) || hasJsr250Methods(rawType));\n+}\n \n-    private boolean hasJsr250Methods(Class<?> rawType) {\n-        return Classes.from(rawType)\n-                .traversingInterfaces()\n-                .traversingSuperclasses()\n-                .methods()\n-                .anyMatch(elementAnnotatedWith(PreDestroy.class, true)\n-                        .or(elementAnnotatedWith(PostConstruct.class, true)));\n-    }\n+private boolean hasJsr250Methods(Class<?> rawType) {\n+    return Classes.from(rawType)\n+            .traversingInterfaces()\n+            .traversingSuperclasses()\n+            .methods()\n+            .anyMatch(elementAnnotatedWith(PreDestroy.class, true)\n+                    .or(elementAnnotatedWith(PostConstruct.class, true)));\n+}\n \n-    private boolean isAutoCloseable(Class<?> rawType) {\n-        return AutoCloseable.class.isAssignableFrom(rawType);\n-    }\n+private boolean isAutoCloseable(Class<?> rawType) {\n+    return AutoCloseable.class.isAssignableFrom(rawType);\n+}\n \n-    private static class PreDestroyScopingVisitor implements BindingScopingVisitor<Boolean> {\n-        @Override\n-        public Boolean visitEagerSingleton() {\n-            return true;\n-        }\n+private static class PreDestroyScopingVisitor implements BindingScopingVisitor<Boolean> {\n+    @Override\n+    public Boolean visitEagerSingleton() {\n+        return true;\n+    }\n \n-        @Override\n-        public Boolean visitScope(Scope scope) {\n-            return scope == Scopes.SINGLETON;\n-        }\n+    @Override\n+    public Boolean visitScope(Scope scope) {\n+        return scope == Scopes.SINGLETON;\n+    }\n \n-        @Override\n-        public Boolean visitScopeAnnotation(Class<? extends Annotation> scopeAnnotation) {\n-            return scopeAnnotation.isAssignableFrom(Singleton.class) || scopeAnnotation.isAssignableFrom(\n-                    com.google.inject.Singleton.class);\n-        }\n+    @Override\n+    public Boolean visitScopeAnnotation(Class<? extends Annotation> scopeAnnotation) {\n+        return scopeAnnotation.isAssignableFrom(Singleton.class) || scopeAnnotation.isAssignableFrom(\n+                com.google.inject.Singleton.class);\n+    }\n \n-        @Override\n-        public Boolean visitNoScoping() {\n-            return false;\n-        }\n+    @Override\n+    public Boolean visitNoScoping() {\n+        return false;\n     }\n }\n+}\n",
            "diff_size": 33
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "column": "70",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "30",
                    "column": "70",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_three_grams/369/LifecycleMatcher.java\nindex ddb72bff5a..9885d5b090 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/errored/1/369/LifecycleMatcher.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-seed/styler_three_grams/369/LifecycleMatcher.java\n@@ -27,7 +27,7 @@ class LifecycleMatcher extends AbstractMatcher<Binding<?>> {\n     @Override\n     public boolean matches(Binding<?> binding) {\n         Class<?> rawType = binding.getKey().getTypeLiteral().getRawType();\n-        return binding.acceptScopingVisitor(preDestroyScopingVisitor) &&\n+        return binding.acceptScopingVisitor(preDestroyScopingVisitor)&&\n                 (isAutoCloseable(rawType) || hasJsr250Methods(rawType));\n     }\n \n",
            "diff_size": 1
        }
    ]
}