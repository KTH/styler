{
    "error_id": "170",
    "information": {
        "errors": [
            {
                "line": "135",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            .build();\n\n    URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n\n    StreamElement element =\n        StreamElement.update(",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 14, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/170/HdfsStorageTest.java\nindex 974770ca26..9039199bb3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/170/HdfsStorageTest.java\n@@ -131,8 +131,7 @@ public class HdfsStorageTest {\n             .setName(\"attribute\")\n             .setSchemeUri(new URI(\"bytes:///\"))\n             .build();\n-\n-    URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n+              URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n \n     StreamElement element =\n         StreamElement.update(\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/170/HdfsStorageTest.java\nindex 974770ca26..c0102630e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/170/HdfsStorageTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.hdfs;\n \n import static org.junit.Assert.assertEquals;\n@@ -45,7 +46,8 @@ import org.junit.rules.TemporaryFolder;\n \n public class HdfsStorageTest {\n \n-  @Rule public final TemporaryFolder tempFolder = new TemporaryFolder();\n+  @Rule\n+  public final TemporaryFolder tempFolder = new TemporaryFolder();\n \n   @Test\n   public void testSerialize() throws IOException {\n@@ -132,7 +134,8 @@ public class HdfsStorageTest {\n             .setSchemeUri(new URI(\"bytes:///\"))\n             .build();\n \n-    URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n+    URI uri = URI.create(\n+        String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n \n     StreamElement element =\n         StreamElement.update(\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 36, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 36, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 53, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 36, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/170/HdfsStorageTest.java\nindex 974770ca26..607c77cf8d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/170/HdfsStorageTest.java\n@@ -19,7 +19,6 @@ import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.direct.core.AttributeWriterBase;\n import cz.o2.proxima.direct.core.BulkAttributeWriter;\n@@ -43,113 +42,81 @@ import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\n \n+\n public class HdfsStorageTest {\n \n-  @Rule public final TemporaryFolder tempFolder = new TemporaryFolder();\n+    @Rule public final TemporaryFolder tempFolder = new TemporaryFolder();\n \n-  @Test\n-  public void testSerialize() throws IOException {\n+    @Test\n+    public void testSerialize() throws IOException {\n     HdfsStorage storage = new HdfsStorage();\n     TestUtils.assertSerializable(storage);\n-  }\n+    }\n \n-  @Test\n-  public void testAcceptScheme() {\n+    @Test\n+    public void testAcceptScheme() {\n     HdfsStorage storage = new HdfsStorage();\n     assertEquals(Accept.ACCEPT, storage.accepts(URI.create(\"hdfs://host:9000/path\")));\n     assertEquals(Accept.ACCEPT, storage.accepts(URI.create(\"hadoop:file:///path\")));\n     assertEquals(Accept.REJECT, storage.accepts(URI.create(\"file:///path\")));\n-  }\n-\n-  @Test(timeout = 5000L)\n-  public void writeElementSuccessWithoutCompressionTest()\n-      throws URISyntaxException, InterruptedException {\n+    }\n \n+    @Test(timeout = 5000L)\n+    public void writeElementSuccessWithoutCompressionTest() throws URISyntaxException, InterruptedException {\n     Map<String, Object> cfg = new HashMap<>();\n     cfg.put(HdfsDataAccessor.HDFS_MIN_ELEMENTS_TO_FLUSH, 1);\n     cfg.put(HdfsDataAccessor.HDFS_ROLL_INTERVAL, -1); // Hack for immediate flush\n     cfg.put(HdfsDataAccessor.HDFS_SEQUENCE_FILE_COMPRESSION_CODEC_CFG, \"none\");\n-\n     CountDownLatch latch = new CountDownLatch(1);\n-    writeOneElementWithConfig(\n-        cfg,\n-        ((success, error) -> {\n-          assertTrue(success);\n-          assertNull(error);\n-          latch.countDown();\n-        }));\n+    writeOneElementWithConfig(cfg, ((success, error) -> {\n+                                                     assertTrue(success);\n+                                                     assertNull(error);\n+                                                     latch.countDown();\n+                                    }));\n     latch.await();\n-  }\n-\n-  @Test(timeout = 5000L)\n-  public void writeElementFailedWithoutNativeLibsTest()\n-      throws URISyntaxException, InterruptedException {\n+    }\n \n+    @Test(timeout = 5000L)\n+    public void writeElementFailedWithoutNativeLibsTest() throws URISyntaxException, InterruptedException {\n     Map<String, Object> cfg = new HashMap<>();\n     cfg.put(HdfsDataAccessor.HDFS_MIN_ELEMENTS_TO_FLUSH, 1);\n     cfg.put(HdfsDataAccessor.HDFS_ROLL_INTERVAL, -1); // Hack for immediate flush\n     cfg.put(HdfsDataAccessor.HDFS_SEQUENCE_FILE_COMPRESSION_CODEC_CFG, \"whatever\");\n-\n     CountDownLatch latch = new CountDownLatch(1);\n-    writeOneElementWithConfig(\n-        cfg,\n-        ((success, error) -> {\n-          assertFalse(success);\n-          latch.countDown();\n-        }));\n+    writeOneElementWithConfig(cfg, ((success, error) -> {\n+                                                     assertFalse(success);\n+                                                     latch.countDown();\n+                                    }));\n     latch.await();\n-  }\n-\n-  @Test(timeout = 5000L)\n-  public void writeElementFailedWithUnknownCompressionTest()\n-      throws URISyntaxException, InterruptedException {\n+    }\n \n+    @Test(timeout = 5000L)\n+    public void writeElementFailedWithUnknownCompressionTest() throws URISyntaxException, InterruptedException {\n     Map<String, Object> cfg = new HashMap<>();\n     cfg.put(HdfsDataAccessor.HDFS_MIN_ELEMENTS_TO_FLUSH, 1);\n     cfg.put(HdfsDataAccessor.HDFS_ROLL_INTERVAL, -1); // Hack for immediate flush\n-\n     CountDownLatch latch = new CountDownLatch(1);\n-    writeOneElementWithConfig(\n-        cfg,\n-        ((success, error) -> {\n-          assertFalse(success);\n-          latch.countDown();\n-        }));\n+    writeOneElementWithConfig(cfg, ((success, error) -> {\n+                                                     assertFalse(success);\n+                                                     latch.countDown();\n+                                    }));\n     latch.await();\n-  }\n-\n-  private void writeOneElementWithConfig(Map<String, Object> cfg, CommitCallback callback)\n-      throws URISyntaxException {\n-\n-    final Repository repository =\n-        ConfigRepository.Builder.ofTest(ConfigFactory.defaultApplication()).build();\n-\n-    EntityDescriptor entity = EntityDescriptor.newBuilder().setName(\"dummy\").build();\n-    AttributeDescriptor<byte[]> attribute =\n-        AttributeDescriptor.newBuilder(repository)\n-            .setEntity(\"dummy\")\n-            .setName(\"attribute\")\n-            .setSchemeUri(new URI(\"bytes:///\"))\n-            .build();\n-\n+    }\n+\n+    private void writeOneElementWithConfig(Map<String, Object> cfg, CommitCallback callback) throws URISyntaxException {\n+    final Repository repository = ConfigRepository.Builder.ofTest(ConfigFactory.defaultApplication()).build();\n+    EntityDescriptor entity = EntityDescriptor.newBuilder().setName(\"dummy\")\n+                                                           .build();\n+    AttributeDescriptor<byte[]> attribute = AttributeDescriptor.newBuilder(repository).setEntity(\"dummy\")\n+                                                                                      .setName(\"attribute\")\n+                                                                                      .setSchemeUri(new URI(\"bytes:///\"))\n+                                                                                      .build();\n     URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n-\n-    StreamElement element =\n-        StreamElement.update(\n-            entity,\n-            attribute,\n-            UUID.randomUUID().toString(),\n-            \"test\",\n-            attribute.getName(),\n-            System.currentTimeMillis(),\n-            \"test value\".getBytes());\n-\n+    StreamElement element = StreamElement.update(entity, attribute, UUID.randomUUID().toString(), \"test\", attribute.getName(), System.currentTimeMillis(), \"test value\".getBytes());\n     HdfsDataAccessor accessor = new HdfsDataAccessor(entity, uri, cfg);\n     Optional<AttributeWriterBase> writer = accessor.newWriter();\n     assertTrue(writer.isPresent());\n-\n     BulkAttributeWriter bulk = writer.get().bulk();\n-\n     bulk.write(element, element.getStamp(), callback);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 82
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "column": "127",
                    "severity": "error",
                    "message": "WhitespaceAround: '=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "142",
                    "column": "37",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/170/HdfsStorageTest.java\nindex 974770ca26..7ca8a4b9e5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/170/HdfsStorageTest.java\n@@ -131,10 +131,7 @@ public class HdfsStorageTest {\n             .setName(\"attribute\")\n             .setSchemeUri(new URI(\"bytes:///\"))\n             .build();\n-\n-    URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n-\n-    StreamElement element =\n+            URI uri = URI.create(String.format(\"file://%s/dummy\",tempFolder.getRoot().getAbsolutePath()));StreamElementelement=\n         StreamElement.update(\n             entity,\n             attribute,\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 14, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/170/HdfsStorageTest.java\nindex 974770ca26..9039199bb3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/170/HdfsStorageTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/170/HdfsStorageTest.java\n@@ -131,8 +131,7 @@ public class HdfsStorageTest {\n             .setName(\"attribute\")\n             .setSchemeUri(new URI(\"bytes:///\"))\n             .build();\n-\n-    URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n+              URI uri = URI.create(String.format(\"file://%s/dummy\", tempFolder.getRoot().getAbsolutePath()));\n \n     StreamElement element =\n         StreamElement.update(\n",
            "diff_size": 2
        }
    ]
}