{
    "error_id": "638",
    "information": {
        "errors": [
            {
                "line": "42",
                "severity": "error",
                "message": "No trailing whitespace allowed.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "   * Get split value of each feature of a node in a tree. currently, we generate all the features\n   * Todo: generate sampled features\n   * \n   * @param dataMeta the data meta info\n   * @param treeMaker the tree maker\n   * @param nid the node id in the tree",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/638/TAvgDisSplit.java\nindex 9b9679a3f3..f29e2862ed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/638/TAvgDisSplit.java\n@@ -35,7 +35,6 @@ public class TAvgDisSplit implements TSplitValueHelper {\n     this.splitNum = splitNum;\n   }\n \n-\n   /**\n    * Get split value of each feature of a node in a tree. currently, we generate all the features\n    * Todo: generate sampled features\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/638/TAvgDisSplit.java\nindex 9b9679a3f3..80ccf7b489 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/638/TAvgDisSplit.java\n@@ -28,65 +28,65 @@ import org.apache.commons.logging.LogFactory;\n \n public class TAvgDisSplit implements TSplitValueHelper {\n \n-  private static final Log LOG = LogFactory.getLog(TAvgDisSplit.class);\n-  public int splitNum;\n+    private static final Log LOG = LogFactory.getLog(TAvgDisSplit.class);\n+    public int splitNum;\n \n-  public TAvgDisSplit(int splitNum) {\n-    this.splitNum = splitNum;\n-  }\n+    public TAvgDisSplit(int splitNum) {\n+        this.splitNum = splitNum;\n+    }\n \n \n-  /**\n-   * Get split value of each feature of a node in a tree. currently, we generate all the features\n-   * Todo: generate sampled features\n-   * \n-   * @param dataMeta the data meta info\n-   * @param treeMaker the tree maker\n-   * @param nid the node id in the tree\n-   * @return the float[][] split value, one row for one feature\n-   */\n-  @Override\n-  public float[][] getSplitValue(DataMeta dataMeta, RegTMaker treeMaker, int nid) {\n-    int numFeature = dataMeta.featureMeta.numFeature;\n-    float[][] splitSet = new float[numFeature][splitNum];\n+    /**\n+     * Get split value of each feature of a node in a tree. currently, we generate all the features\n+     * Todo: generate sampled features\n+     *\n+     * @param dataMeta  the data meta info\n+     * @param treeMaker the tree maker\n+     * @param nid       the node id in the tree\n+     * @return the float[][] split value, one row for one feature\n+     */\n+    @Override\n+    public float[][] getSplitValue(DataMeta dataMeta, RegTMaker treeMaker, int nid) {\n+        int numFeature = dataMeta.featureMeta.numFeature;\n+        float[][] splitSet = new float[numFeature][splitNum];\n \n-    float[] binWidths = new float[numFeature];\n+        float[] binWidths = new float[numFeature];\n \n-    for (int fid = 0; fid < numFeature; fid++) {\n-      binWidths[fid] =\n-          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n-              / (splitNum + 1);\n-    }\n+        for (int fid = 0; fid < numFeature; fid++) {\n+            binWidths[fid] =\n+                    (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n+                            / (splitNum + 1);\n+        }\n \n-    for (int fid = 0; fid < numFeature; fid++) {\n-      for (int j = 0; j < splitNum; j++) {\n-        splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * (j + 1);\n-      }\n+        for (int fid = 0; fid < numFeature; fid++) {\n+            for (int j = 0; j < splitNum; j++) {\n+                splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * (j + 1);\n+            }\n+        }\n+        return splitSet;\n     }\n-    return splitSet;\n-  }\n \n-  // the minimal split value is the minimal value of feature\n-  // the splits do not include the maximal value of feature\n-  public static float[][] getSplitValue(DataMeta dataMeta, int splitNum) {\n+    // the minimal split value is the minimal value of feature\n+    // the splits do not include the maximal value of feature\n+    public static float[][] getSplitValue(DataMeta dataMeta, int splitNum) {\n \n-    int numFeature = dataMeta.featureMeta.numFeature;\n-    float[][] splitSet = new float[numFeature][splitNum];\n+        int numFeature = dataMeta.featureMeta.numFeature;\n+        float[][] splitSet = new float[numFeature][splitNum];\n \n-    // 1. the average distance, (maxValue - minValue) / splitNum\n-    float[] binWidths = new float[numFeature];\n-    for (int fid = 0; fid < numFeature; fid++) {\n-      binWidths[fid] =\n-          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n-              / splitNum;\n-    }\n+        // 1. the average distance, (maxValue - minValue) / splitNum\n+        float[] binWidths = new float[numFeature];\n+        for (int fid = 0; fid < numFeature; fid++) {\n+            binWidths[fid] =\n+                    (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n+                            / splitNum;\n+        }\n \n-    // 2. calculate the candidate split value\n-    for (int fid = 0; fid < numFeature; fid++) {\n-      for (int j = 0; j < splitNum; j++) {\n-        splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * j;\n-      }\n+        // 2. calculate the candidate split value\n+        for (int fid = 0; fid < numFeature; fid++) {\n+            for (int j = 0; j < splitNum; j++) {\n+                splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * j;\n+            }\n+        }\n+        return splitSet;\n     }\n-    return splitSet;\n-  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/638/TAvgDisSplit.java\nindex 9b9679a3f3..ba9dcb0e85 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/638/TAvgDisSplit.java\n@@ -49,13 +49,11 @@ public class TAvgDisSplit implements TSplitValueHelper {\n   public float[][] getSplitValue(DataMeta dataMeta, RegTMaker treeMaker, int nid) {\n     int numFeature = dataMeta.featureMeta.numFeature;\n     float[][] splitSet = new float[numFeature][splitNum];\n-\n-    float[] binWidths = new float[numFeature];\n+float[] binWidths = new float[numFeature];\n \n     for (int fid = 0; fid < numFeature; fid++) {\n       binWidths[fid] =\n-          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n-              / (splitNum + 1);\n+          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid]) / (splitNum + 1);\n     }\n \n     for (int fid = 0; fid < numFeature; fid++) {\n@@ -69,17 +67,15 @@ public class TAvgDisSplit implements TSplitValueHelper {\n   // the minimal split value is the minimal value of feature\n   // the splits do not include the maximal value of feature\n   public static float[][] getSplitValue(DataMeta dataMeta, int splitNum) {\n-\n-    int numFeature = dataMeta.featureMeta.numFeature;\n+  int numFeature = dataMeta.featureMeta.numFeature;\n     float[][] splitSet = new float[numFeature][splitNum];\n \n     // 1. the average distance, (maxValue - minValue) / splitNum\n     float[] binWidths = new float[numFeature];\n     for (int fid = 0; fid < numFeature; fid++) {\n       binWidths[fid] =\n-          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n-              / splitNum;\n-    }\n+          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid]) / splitNum;\n+  }\n \n     // 2. calculate the candidate split value\n     for (int fid = 0; fid < numFeature; fid++) {\n@@ -89,4 +85,4 @@ public class TAvgDisSplit implements TSplitValueHelper {\n     }\n     return splitSet;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 69.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/638/TAvgDisSplit.java\nindex 9b9679a3f3..c9f6934cc0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/638/TAvgDisSplit.java\n@@ -27,13 +27,13 @@ import org.apache.commons.logging.LogFactory;\n  */\n \n public class TAvgDisSplit implements TSplitValueHelper {\n+    private static final Log LOG = LogFactory.getLog(TAvgDisSplit.class);\n \n-  private static final Log LOG = LogFactory.getLog(TAvgDisSplit.class);\n-  public int splitNum;\n+    public int splitNum;\n \n-  public TAvgDisSplit(int splitNum) {\n+    public TAvgDisSplit(int splitNum) {\n     this.splitNum = splitNum;\n-  }\n+    }\n \n \n   /**\n@@ -45,48 +45,45 @@ public class TAvgDisSplit implements TSplitValueHelper {\n    * @param nid the node id in the tree\n    * @return the float[][] split value, one row for one feature\n    */\n-  @Override\n-  public float[][] getSplitValue(DataMeta dataMeta, RegTMaker treeMaker, int nid) {\n+\n+    @Override\n+    public float[][] getSplitValue(DataMeta dataMeta, RegTMaker treeMaker, int nid) {\n     int numFeature = dataMeta.featureMeta.numFeature;\n     float[][] splitSet = new float[numFeature][splitNum];\n-\n     float[] binWidths = new float[numFeature];\n-\n     for (int fid = 0; fid < numFeature; fid++) {\n-      binWidths[fid] =\n-          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n-              / (splitNum + 1);\n+        binWidths[fid] = (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid]) / (splitNum + 1);\n     }\n \n     for (int fid = 0; fid < numFeature; fid++) {\n-      for (int j = 0; j < splitNum; j++) {\n-        splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * (j + 1);\n-      }\n+        for (int j = 0; j < splitNum; j++) {\n+                                                   splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * (j + 1);\n+        }\n     }\n     return splitSet;\n-  }\n+    }\n \n   // the minimal split value is the minimal value of feature\n   // the splits do not include the maximal value of feature\n-  public static float[][] getSplitValue(DataMeta dataMeta, int splitNum) {\n \n+    public static float[][] getSplitValue(DataMeta dataMeta, int splitNum) {\n     int numFeature = dataMeta.featureMeta.numFeature;\n     float[][] splitSet = new float[numFeature][splitNum];\n \n     // 1. the average distance, (maxValue - minValue) / splitNum\n     float[] binWidths = new float[numFeature];\n     for (int fid = 0; fid < numFeature; fid++) {\n-      binWidths[fid] =\n-          (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid])\n-              / splitNum;\n+        binWidths[fid] = (dataMeta.featureMeta.maxFeatures[fid] - dataMeta.featureMeta.minFeatures[fid]) / splitNum;\n     }\n \n     // 2. calculate the candidate split value\n+\n     for (int fid = 0; fid < numFeature; fid++) {\n-      for (int j = 0; j < splitNum; j++) {\n-        splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * j;\n-      }\n+        for (int j = 0; j < splitNum; j++) {\n+                                                   splitSet[fid][j] = dataMeta.featureMeta.minFeatures[fid] + binWidths[fid] * j;\n+        }\n     }\n     return splitSet;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/638/TAvgDisSplit.java\nindex 9b9679a3f3..f29e2862ed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/638/TAvgDisSplit.java\n@@ -35,7 +35,6 @@ public class TAvgDisSplit implements TSplitValueHelper {\n     this.splitNum = splitNum;\n   }\n \n-\n   /**\n    * Get split value of each feature of a node in a tree. currently, we generate all the features\n    * Todo: generate sampled features\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/638/TAvgDisSplit.java\nindex 9b9679a3f3..f29e2862ed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/638/TAvgDisSplit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/638/TAvgDisSplit.java\n@@ -35,7 +35,6 @@ public class TAvgDisSplit implements TSplitValueHelper {\n     this.splitNum = splitNum;\n   }\n \n-\n   /**\n    * Get split value of each feature of a node in a tree. currently, we generate all the features\n    * Todo: generate sampled features\n",
            "diff_size": 1
        }
    ]
}