{
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "'CTOR_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @param spec object\n     */\n    public GosecSpec(CommonG spec) {\n        this.commonspec = spec;\n        restSpec = new RestSpec(spec);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/16/GosecSpec.java\nindex 97f3f0830b..829dbaec1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/16/GosecSpec.java\n@@ -53,6 +53,7 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/16/GosecSpec.java\nindex 97f3f0830b..43dedd6691 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/16/GosecSpec.java\n@@ -48,6 +48,7 @@ public class GosecSpec extends BaseGSpec {\n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n \n     RestSpec restSpec;\n+\n     /**\n      * Generic constructor.\n      *\n@@ -59,14 +60,23 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createResource(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n-        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type, modifications);\n+    public void createResource(String resource, String resourceId,\n+                               String endPoint, String loginInfo,\n+                               String baseData, String type,\n+                               DataTable modifications) throws Exception {\n+        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo,\n+            false, baseData, type, modifications);\n \n     }\n \n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n-        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type, modifications);\n+    public void createResourceIfNotExist(String resource, String resourceId,\n+                                         String endPoint, String loginInfo,\n+                                         String baseData, String type,\n+                                         DataTable modifications)\n+        throws Exception {\n+        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo,\n+            true, baseData, type, modifications);\n     }\n \n     /**\n@@ -82,12 +92,18 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications\n      * @throws Exception\n      */\n-    private void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, boolean doesNotExist, String baseData, String type, DataTable modifications) throws Exception {\n+    private void createResourceIfNotExist(String resource, String resourceId,\n+                                          String endPoint, String loginInfo,\n+                                          boolean doesNotExist, String baseData,\n+                                          String type, DataTable modifications)\n+        throws Exception {\n         Integer expectedStatusCreate = 201;\n         Integer expectedStatusDelete = 200;\n         String endPointResource = \"\";\n-        String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n-        String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n+        String endPointPolicies =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n+        String endPointPolicy =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         String newEndPoint = \"\";\n         String gosecVersion = ThreadProperty.get(\"gosec-management_version\");\n         List<List<String>> newModifications;\n@@ -107,12 +123,15 @@ public class GosecSpec extends BaseGSpec {\n             }\n         } else {\n             if (resource.equals(\"policy\")) {\n-                endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n+                endPoint = \"/service/gosecmanagement\" +\n+                    ThreadProperty.get(\"API_POLICY\");\n             } else {\n                 if (resource.equals(\"user\")) {\n-                    endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_USER\");\n+                    endPoint = \"/service/gosecmanagement\" +\n+                        ThreadProperty.get(\"API_USER\");\n                 } else {\n-                    endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_GROUP\");\n+                    endPoint = \"/service/gosecmanagement\" +\n+                        ThreadProperty.get(\"API_GROUP\");\n                 }\n             }\n             if (endPoint.contains(\"id\")) {\n@@ -126,87 +145,130 @@ public class GosecSpec extends BaseGSpec {\n         if (gosecVersion != null) {\n             String[] gosecVersionArray = gosecVersion.split(\"\\\\.\");\n             // Add inputSourceType if Gosec >= 1.4.x\n-            if (Integer.parseInt(gosecVersionArray[0]) >= 1 && Integer.parseInt(gosecVersionArray[1]) >= 4) {\n+            if (Integer.parseInt(gosecVersionArray[0]) >= 1 &&\n+                Integer.parseInt(gosecVersionArray[1]) >= 4) {\n                 addSourceType = true;\n             }\n         }\n \n         try {\n-            assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+            assertThat(commonspec.getRestHost().isEmpty() ||\n+                commonspec.getRestPort().isEmpty());\n \n             if (resource.equals(\"policy\")) {\n-                restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n+                restSpec\n+                    .sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo,\n+                        null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\n+                        \"echo '\" + commonspec.getResponse().getResponse() +\n+                            \"' | jq '.list[] | select (.name == \\\"\" +\n+                            resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n-                        commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n+                        commonspec.getLogger()\n+                            .debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" +\n+                                resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n-                            commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n+                            commonspec.getLogger()\n+                                .debug(\"PolicyId obtained: {}\", policyId);\n                             endPointResource = endPointPolicy + policyId;\n                         } else {\n-                            endPointResource = endPointPolicy + \"thisIsANewPolicyId\";\n+                            endPointResource =\n+                                endPointPolicy + \"thisIsANewPolicyId\";\n                         }\n                     }\n                 }\n             }\n \n-            restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n+            restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo,\n+                null, null);\n \n             if (commonspec.getResponse().getStatusCode() != 200) {\n                 if (resource.equals(\"user\") && (addSourceType)) {\n-                    commonspec.getLogger().warn(\"Gosec Version:{} -> Adding inputsourceType = CUSTOM\", gosecVersion);\n-                    List<String> newField = Arrays.asList(\"$.inputSourceType\", \"ADD\", \"CUSTOM\", \"string\");\n+                    commonspec.getLogger().warn(\n+                        \"Gosec Version:{} -> Adding inputsourceType = CUSTOM\",\n+                        gosecVersion);\n+                    List<String> newField = Arrays\n+                        .asList(\"$.inputSourceType\", \"ADD\", \"CUSTOM\", \"string\");\n                     newModifications.add(newField);\n                 }\n                 // Create datatable with modified data\n-                DataTable gosecModifications = DataTable.create(newModifications);\n+                DataTable gosecModifications =\n+                    DataTable.create(newModifications);\n                 // Send POST request\n-                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type, gosecModifications);\n+                restSpec\n+                    .sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type,\n+                        gosecModifications);\n                 try {\n                     if (commonspec.getResponse().getStatusCode() == 409) {\n-                        commonspec.getLogger().warn(\"The resource {} already exists\", resourceId);\n+                        commonspec.getLogger()\n+                            .warn(\"The resource {} already exists\", resourceId);\n                     } else {\n                         try {\n-                            assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusCreate);\n+                            assertThat(commonspec.getResponse().getStatusCode())\n+                                .isEqualTo(expectedStatusCreate);\n                         } catch (AssertionError e) {\n-                            commonspec.getLogger().warn(\"Error creating Resource {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                            commonspec.getLogger()\n+                                .warn(\"Error creating Resource {}: {}\",\n+                                    resourceId,\n+                                    commonspec.getResponse().getResponse());\n                             throw e;\n                         }\n-                        commonspec.getLogger().warn(\"Resource {} created\", resourceId);\n+                        commonspec.getLogger()\n+                            .warn(\"Resource {} created\", resourceId);\n                     }\n                 } catch (Exception e) {\n-                    commonspec.getLogger().warn(\"Error creating user {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger()\n+                        .warn(\"Error creating user {}: {}\", resourceId,\n+                            commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().warn(\"{}:{} already exist\", resource, resourceId);\n-                if (resource.equals(\"policy\") && commonspec.getResponse().getStatusCode() == 200) {\n+                commonspec.getLogger()\n+                    .warn(\"{}:{} already exist\", resource, resourceId);\n+                if (resource.equals(\"policy\") &&\n+                    commonspec.getResponse().getStatusCode() == 200) {\n                     if (doesNotExist) {\n                         // Policy already exists\n-                        commonspec.getLogger().warn(\"Policy {} already exist - not created\", resourceId);\n+                        commonspec.getLogger()\n+                            .warn(\"Policy {} already exist - not created\",\n+                                resourceId);\n \n                     } else {\n                         // Delete policy if exists\n-                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type, modifications);\n-                        commonspec.getLogger().warn(\"Policy {} deleted\", resourceId);\n+                        restSpec\n+                            .sendRequest(\"DELETE\", endPointResource, loginInfo,\n+                                baseData, type, modifications);\n+                        commonspec.getLogger()\n+                            .warn(\"Policy {} deleted\", resourceId);\n \n                         try {\n-                            assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusDelete);\n+                            assertThat(commonspec.getResponse().getStatusCode())\n+                                .isEqualTo(expectedStatusDelete);\n                         } catch (AssertionError e) {\n-                            commonspec.getLogger().warn(\"Error deleting Policy {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                            commonspec.getLogger()\n+                                .warn(\"Error deleting Policy {}: {}\",\n+                                    resourceId,\n+                                    commonspec.getResponse().getResponse());\n                             throw e;\n                         }\n-                        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, doesNotExist, baseData, type, modifications);\n+                        createResourceIfNotExist(resource, resourceId, endPoint,\n+                            loginInfo, doesNotExist, baseData, type,\n+                            modifications);\n                     }\n                 }\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}{}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger()\n+                .error(\"Rest Host or Rest Port are not initialized {}{}\",\n+                    commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n@@ -221,11 +283,15 @@ public class GosecSpec extends BaseGSpec {\n      * @throws Exception\n      */\n     @When(\"^I delete '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it exists$\")\n-    public void deleteUserIfExists(String resource, String resourceId, String endPoint, String loginInfo) throws Exception {\n+    public void deleteUserIfExists(String resource, String resourceId,\n+                                   String endPoint, String loginInfo)\n+        throws Exception {\n         Integer[] expectedStatusDelete = {200, 204};\n         String endPointResource = \"\";\n-        String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n-        String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n+        String endPointPolicy =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n+        String endPointPolicies =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n@@ -234,35 +300,50 @@ public class GosecSpec extends BaseGSpec {\n             endPointResource = endPoint + resourceId;\n         } else {\n             if (resource.equals(\"policy\")) {\n-                endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n+                endPoint = \"/service/gosecmanagement\" +\n+                    ThreadProperty.get(\"API_POLICY\");\n             } else {\n                 if (resource.equals(\"user\")) {\n-                    endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_USER\");\n+                    endPoint = \"/service/gosecmanagement\" +\n+                        ThreadProperty.get(\"API_USER\");\n                 } else {\n-                    endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_GROUP\");\n+                    endPoint = \"/service/gosecmanagement\" +\n+                        ThreadProperty.get(\"API_GROUP\");\n                 }\n             }\n         }\n \n         try {\n-            assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+            assertThat(commonspec.getRestHost().isEmpty() ||\n+                commonspec.getRestPort().isEmpty());\n \n             if (resource.equals(\"policy\")) {\n-                restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n+                restSpec\n+                    .sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo,\n+                        null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\n+                        \"echo '\" + commonspec.getResponse().getResponse() +\n+                            \"' | jq '.list[] | select (.name == \\\"\" +\n+                            resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n-                        commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n+                        commonspec.getLogger()\n+                            .debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" +\n+                                resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n-                            commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n+                            commonspec.getLogger()\n+                                .debug(\"PolicyId obtained: {}\", policyId);\n                             endPointResource = endPointPolicy + policyId;\n                         } else {\n-                            endPointResource = endPointPolicy + \"thisPolicyDoesNotExistId\";\n+                            endPointResource =\n+                                endPointPolicy + \"thisPolicyDoesNotExistId\";\n                         }\n                     }\n                 }\n@@ -270,76 +351,108 @@ public class GosecSpec extends BaseGSpec {\n                 endPointResource = endPoint + resourceId;\n             }\n \n-            restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n+            restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo,\n+                null, null);\n \n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 // Delete resource if exists\n-                restSpec.sendRequestNoDataTable(\"DELETE\", endPointResource, loginInfo, null, null);\n+                restSpec.sendRequestNoDataTable(\"DELETE\", endPointResource,\n+                    loginInfo, null, null);\n                 commonspec.getLogger().warn(\"Resource {} deleted\", resourceId);\n \n                 try {\n-                    assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusDelete);\n+                    assertThat(commonspec.getResponse().getStatusCode())\n+                        .isIn(expectedStatusDelete);\n                 } catch (AssertionError e) {\n-                    commonspec.getLogger().warn(\"Error deleting Resource {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger()\n+                        .warn(\"Error deleting Resource {}: {}\", resourceId,\n+                            commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().warn(\"Resource {} with id {} not found so it's not deleted\", resource, resourceId);\n+                commonspec.getLogger().warn(\n+                    \"Resource {} with id {} not found so it's not deleted\",\n+                    resource, resourceId);\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger()\n+                .error(\"Rest Host or Rest Port are not initialized {}: {}\",\n+                    commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n \n     @When(\"^I get id from( tag)? policy with name '(.+?)' and save it in environment variable '(.+?)'$\")\n-    public void getPolicyId(String tag, String policyName, String envVar) throws Exception {\n-        String endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n+    public void getPolicyId(String tag, String policyName, String envVar)\n+        throws Exception {\n+        String endPoint =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n \n         if (tag != null) {\n-            endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_TAGS\");\n+            endPoint =\n+                \"/service/gosecmanagement\" + ThreadProperty.get(\"API_TAGS\");\n         }\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n \n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\n+                \"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.list[] | select (.name == \\\"\" + policyName +\n+                    \"\\\").id' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-            if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n-                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            if (ThreadProperty.get(envVar) == null ||\n+                ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                commonspec.runLocalCommand(\n+                    \"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.[] | select (.name == \\\"\" + policyName +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                 commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-                if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                if (ThreadProperty.get(envVar) == null ||\n+                    ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining ID from policy \" + policyName);\n                 }\n             }\n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n-                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", endPoint);\n+                fail(\n+                    \"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                        commonspec.getResponse().getStatusCode() + \")\",\n+                    endPoint);\n             }\n         }\n     }\n \n     @When(\"^I create tenant '(.+?)' if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createTenant(String tenantId, String baseData, String type, DataTable modifications) throws Exception {\n+    public void createTenant(String tenantId, String baseData, String type,\n+                             DataTable modifications) throws Exception {\n         // Set REST connection\n         commonspec.setCCTConnection();\n \n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n         String endPointResource = endPoint + \"/\" + tenantId;\n         Integer expectedStatus = 201;\n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-        restSpec.sendRequestNoDataTable(\"GET\", endPointResource, null, null, null);\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n+        restSpec\n+            .sendRequestNoDataTable(\"GET\", endPointResource, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.getLogger().warn(\"Tenant {} already exist - not created\", tenantId);\n+            commonspec.getLogger()\n+                .warn(\"Tenant {} already exist - not created\", tenantId);\n         } else {\n-            restSpec.sendRequest(\"POST\", endPoint, null, baseData, type, modifications);\n+            restSpec.sendRequest(\"POST\", endPoint, null, baseData, type,\n+                modifications);\n             try {\n-                assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n+                assertThat(commonspec.getResponse().getStatusCode())\n+                    .isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Error creating Tenant {}: {}\", tenantId, commonspec.getResponse().getResponse());\n+                commonspec.getLogger()\n+                    .warn(\"Error creating Tenant {}: {}\", tenantId,\n+                        commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         }\n@@ -353,28 +466,41 @@ public class GosecSpec extends BaseGSpec {\n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n         String endPointResource = endPoint + \"/\" + tenantId;\n         Integer expectedStatus = 204;\n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-        restSpec.sendRequestNoDataTable(\"GET\", endPointResource, null, null, null);\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n+        restSpec\n+            .sendRequestNoDataTable(\"GET\", endPointResource, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            restSpec.sendRequestNoDataTable(\"DELETE\", endPointResource, null, null, null);\n+            restSpec\n+                .sendRequestNoDataTable(\"DELETE\", endPointResource, null, null,\n+                    null);\n             commonspec.getLogger().warn(\"Tenant {} deleted\", tenantId);\n             try {\n-                assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n+                assertThat(commonspec.getResponse().getStatusCode())\n+                    .isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Error deleting Tenant {}: {}\", tenantId, commonspec.getResponse().getResponse());\n+                commonspec.getLogger()\n+                    .warn(\"Error deleting Tenant {}: {}\", tenantId,\n+                        commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         } else {\n-            commonspec.getLogger().warn(\"Tenant {} does not exist - not deleted\", tenantId);\n+            commonspec.getLogger()\n+                .warn(\"Tenant {} does not exist - not deleted\", tenantId);\n         }\n     }\n \n     @When(\"^I include '(user|group)' '(.+?)' in tenant '(.+?)'$\")\n-    public void includeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n-        String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n-        String endPointGetAllGroups = \"/service/gosec-identities-daas/identities/groups\";\n-        String endPointTenant = \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+    public void includeResourceInTenant(String resource, String resourceId,\n+                                        String tenantId) throws Exception {\n+        String endPointGetAllUsers =\n+            \"/service/gosec-identities-daas/identities/users\";\n+        String endPointGetAllGroups =\n+            \"/service/gosec-identities-daas/identities/groups\";\n+        String endPointTenant =\n+            \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n         String uidOrGid = \"uid\";\n         String uidOrGidTenant = \"uids\";\n         String endPointGosec = endPointGetAllUsers;\n@@ -390,53 +516,84 @@ public class GosecSpec extends BaseGSpec {\n \n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n-                restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n+            if (commonspec.getResponse().getResponse()\n+                .contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n+                restSpec\n+                    .sendRequestNoDataTable(\"GET\", endPointTenant, null, null,\n+                        null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n-                        commonspec.getLogger().debug(\"{} is already included in tenant\", resourceId);\n+                    JsonObject jsonTenantInfo = new JsonObject(JsonValue\n+                        .readHjson(commonspec.getResponse().getResponse())\n+                        .asObject());\n+                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant))\n+                        .values().contains(JsonValue.valueOf(resourceId))) {\n+                        commonspec.getLogger()\n+                            .debug(\"{} is already included in tenant\",\n+                                resourceId);\n                     } else {\n-                        ((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).add(resourceId);\n-                        Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(jsonTenantInfo.toString()).toString(), \"json\", \"\");\n+                        ((JsonArray) jsonTenantInfo.get(uidOrGidTenant))\n+                            .add(resourceId);\n+                        Future<Response> response = commonspec\n+                            .generateRequest(\"PATCH\", false, null, null,\n+                                endPointTenant,\n+                                JsonValue.readHjson(jsonTenantInfo.toString())\n+                                    .toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n-                            throw new Exception(\"Error adding \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                            throw new Exception(\n+                                \"Error adding \" + resource + \" \" + resourceId +\n+                                    \" in tenant \" + tenantId +\n+                                    \" - Status code: \" +\n+                                    commonspec.getResponse().getStatusCode());\n                         }\n                     }\n                 } else {\n-                    throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                    throw new Exception(\n+                        \"Error obtaining info from tenant \" + tenantId +\n+                            \" - Status code: \" +\n+                            commonspec.getResponse().getStatusCode());\n                 }\n             } else {\n-                throw new Exception(resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n+                throw new Exception(\n+                    resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n             }\n         } else {\n-            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\n+                \"Error obtaining \" + resource + \"s - Status code: \" +\n+                    commonspec.getResponse().getStatusCode());\n         }\n     }\n \n     @When(\"^I get id from profile with name '(.+?)' and save it in environment variable '(.+?)'$\")\n-    public void getProfiled(String profileName, String envVar) throws Exception {\n+    public void getProfiled(String profileName, String envVar)\n+        throws Exception {\n         String endPoint = \"/service/gosec-identities-daas/identities/profiles\";\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n \n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + profileName + \"\\\").pid' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\n+                \"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.list[] | select (.name == \\\"\" + profileName +\n+                    \"\\\").pid' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-            if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+            if (ThreadProperty.get(envVar) == null ||\n+                ThreadProperty.get(envVar).trim().equals(\"\")) {\n                 fail(\"Error obtaining ID from profile \" + profileName);\n             }\n         } else {\n-            commonspec.getLogger().warn(\"Profile with id: {} does not exist\", profileName);\n+            commonspec.getLogger()\n+                .warn(\"Profile with id: {} does not exist\", profileName);\n         }\n     }\n \n     @When(\"^I get json from( tag)? policy with name '(.+?)' and save it( in environment variable '(.*?)')?( in file '(.*?)')?$\")\n-    public void getPolicyJson(String tag, String policyName, String envVar, String fileName) throws Exception {\n+    public void getPolicyJson(String tag, String policyName, String envVar,\n+                              String fileName) throws Exception {\n         String endPoint = \"/service/gosecmanagement/api/policy\";\n         String newEndPoint = \"/service/gosecmanagement/api/policies\";\n         String errorMessage = \"api/policies\";\n@@ -452,34 +609,53 @@ public class GosecSpec extends BaseGSpec {\n         // Set REST connection\n         commonspec.setCCTConnection();\n \n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\n+                \"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.list[] | select (.name == \\\"\" + policyName +\n+                    \"\\\").id' | sed s/\\\\\\\"//g\");\n             if (commonspec.getCommandResult().trim().equals(\"\")) {\n-                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                commonspec.runLocalCommand(\n+                    \"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.[] | select (.name == \\\"\" + policyName +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n             }\n-            restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy/\" + commonspec.getCommandResult(), null, null, null);\n+            restSpec.sendRequestNoDataTable(\"GET\",\n+                \"/service/gosecmanagement/api/policy/\" +\n+                    commonspec.getCommandResult(), null, null, null);\n \n             if (envVar != null) {\n-                ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n+                ThreadProperty\n+                    .set(envVar, commonspec.getResponse().getResponse());\n \n-                if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                if (ThreadProperty.get(envVar) == null ||\n+                    ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining JSON from policy \" + policyName);\n                 }\n             }\n \n             if (fileName != null) {\n                 // Create file (temporary) and set path to be accessible within test\n-                File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n-                String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                File tempDirectory = new File(\n+                    System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n+                String absolutePathFile =\n+                    tempDirectory.getAbsolutePath() + \"/\" + fileName;\n+                commonspec.getLogger()\n+                    .debug(\"Creating file {} in 'target/test-classes'\",\n+                        absolutePathFile);\n                 // Note that this Writer will delete the file if it exists\n-                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                Writer out = new BufferedWriter(new OutputStreamWriter(\n+                    new FileOutputStream(absolutePathFile),\n+                    StandardCharsets.UTF_8));\n                 try {\n                     out.write(commonspec.getResponse().getResponse());\n                 } catch (Exception e) {\n-                    commonspec.getLogger().error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile, e.toString());\n+                    commonspec.getLogger()\n+                        .error(\"Custom file {} hasn't been created:\\n{}\",\n+                            absolutePathFile, e.toString());\n                 } finally {\n                     out.close();\n                 }\n@@ -489,53 +665,86 @@ public class GosecSpec extends BaseGSpec {\n \n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n-                commonspec.getLogger().warn(\"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\", endPoint);\n-                restSpec.sendRequestNoDataTable(\"GET\", newEndPoint, null, null, null);\n+                commonspec.getLogger().warn(\n+                    \"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\",\n+                    endPoint);\n+                restSpec.sendRequestNoDataTable(\"GET\", newEndPoint, null, null,\n+                    null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\n+                        \"echo '\" + commonspec.getResponse().getResponse() +\n+                            \"' | jq '.list[] | select (.name == \\\"\" +\n+                            policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     if (commonspec.getCommandResult().trim().equals(\"\")) {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" +\n+                                policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     }\n-                    restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy?id=\" + commonspec.getCommandResult(), null, null, null);\n+                    restSpec.sendRequestNoDataTable(\"GET\",\n+                        \"/service/gosecmanagement/api/policy?id=\" +\n+                            commonspec.getCommandResult(), null, null, null);\n \n                     if (envVar != null) {\n-                        ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n-                        if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n-                            fail(\"Error obtaining JSON from policy \" + policyName);\n+                        ThreadProperty.set(envVar,\n+                            commonspec.getResponse().getResponse());\n+                        if (ThreadProperty.get(envVar) == null ||\n+                            ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                            fail(\"Error obtaining JSON from policy \" +\n+                                policyName);\n                         }\n                     }\n \n                     if (fileName != null) {\n                         // Create file (temporary) and set path to be accessible within test\n-                        File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n-                        String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                        File tempDirectory = new File(\n+                            System.getProperty(\"user.dir\") +\n+                                \"/target/test-classes/\");\n+                        String absolutePathFile =\n+                            tempDirectory.getAbsolutePath() + \"/\" + fileName;\n+                        commonspec.getLogger()\n+                            .debug(\"Creating file {} in 'target/test-classes'\",\n+                                absolutePathFile);\n                         // Note that this Writer will delete the file if it exists\n-                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                        Writer out = new BufferedWriter(new OutputStreamWriter(\n+                            new FileOutputStream(absolutePathFile),\n+                            StandardCharsets.UTF_8));\n                         try {\n                             out.write(commonspec.getResponse().getResponse());\n                         } catch (Exception e) {\n-                            commonspec.getLogger().error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile, e.toString());\n+                            commonspec.getLogger().error(\n+                                \"Custom file {} hasn't been created:\\n{}\",\n+                                absolutePathFile, e.toString());\n                         } finally {\n                             out.close();\n                         }\n \n-                        Assertions.assertThat(new File(absolutePathFile).isFile());\n+                        Assertions\n+                            .assertThat(new File(absolutePathFile).isFile());\n                     }\n \n                 } else {\n-                    fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n+                    fail(\n+                        \"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                            commonspec.getResponse().getStatusCode() + \")\",\n+                        errorMessage);\n                 }\n             } else {\n-                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage2);\n+                fail(\n+                    \"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                        commonspec.getResponse().getStatusCode() + \")\",\n+                    errorMessage2);\n             }\n         }\n     }\n \n     @When(\"^I include group '(.+?)' in profile '(.+?)'$\")\n-    public void includeGroupInProfile(String groupId, String profileId) throws Exception {\n-        String endPointGetGroup = \"/service/gosecmanagement/api/group?id=\" + groupId;\n-        String endPointGetProfile = \"/service/gosecmanagement/api/profile?id=\" + profileId;\n+    public void includeGroupInProfile(String groupId, String profileId)\n+        throws Exception {\n+        String endPointGetGroup =\n+            \"/service/gosecmanagement/api/group?id=\" + groupId;\n+        String endPointGetProfile =\n+            \"/service/gosecmanagement/api/profile?id=\" + profileId;\n         String groups = \"groups\";\n         String pid = \"pid\";\n         String id = \"id\";\n@@ -545,29 +754,41 @@ public class GosecSpec extends BaseGSpec {\n         // Set REST connection\n         commonspec.setCCTConnection();\n \n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n \n-        restSpec.sendRequestNoDataTable(\"GET\", endPointGetGroup, null, null, null);\n+        restSpec\n+            .sendRequestNoDataTable(\"GET\", endPointGetGroup, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            JsonObject jsonGroupInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-            restSpec.sendRequestNoDataTable(\"GET\", endPointGetProfile, null, null, null);\n+            JsonObject jsonGroupInfo = new JsonObject(\n+                JsonValue.readHjson(commonspec.getResponse().getResponse())\n+                    .asObject());\n+            restSpec\n+                .sendRequestNoDataTable(\"GET\", endPointGetProfile, null, null,\n+                    null);\n             if (commonspec.getResponse().getStatusCode() == 200) {\n-                JsonObject jsonProfileInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                JsonObject jsonProfileInfo = new JsonObject(\n+                    JsonValue.readHjson(commonspec.getResponse().getResponse())\n+                        .asObject());\n                 // Get groups from profile\n                 JsonArray jsonGroups = (JsonArray) jsonProfileInfo.get(groups);\n                 // Get size of groups\n                 String[] stringGroups = new String[jsonGroups.size() + 1];\n                 // Create json for put\n-                JSONObject putObject = new JSONObject(commonspec.getResponse().getResponse());\n+                JSONObject putObject =\n+                    new JSONObject(commonspec.getResponse().getResponse());\n                 // Remove groups and roles in json\n                 putObject.remove(groups);\n                 putObject.remove(roles);\n \n                 for (int i = 0; i < jsonGroups.size(); i++) {\n-                    String jsonIds = ((JsonObject) jsonGroups.get(i)).getString(\"id\", \"\");\n+                    String jsonIds =\n+                        ((JsonObject) jsonGroups.get(i)).getString(\"id\", \"\");\n \n                     if (jsonIds.equals(groupId)) {\n-                        commonspec.getLogger().warn(\"{} is already included in the profile {}\", groupId, profileId);\n+                        commonspec.getLogger()\n+                            .warn(\"{} is already included in the profile {}\",\n+                                groupId, profileId);\n                         content = true;\n                         break;\n                     } else {\n@@ -581,24 +802,37 @@ public class GosecSpec extends BaseGSpec {\n                     // Add gids array to new json for PUT request\n                     putObject.put(\"gids\", stringGroups);\n \n-                    commonspec.getLogger().warn(\"Json for PUT request---> {}\", putObject.toString());\n-                    Future<Response> response = commonspec.generateRequest(\"PUT\", false, null, null, endPointGetProfile, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n+                    commonspec.getLogger().warn(\"Json for PUT request---> {}\",\n+                        putObject.toString());\n+                    Future<Response> response = commonspec\n+                        .generateRequest(\"PUT\", false, null, null,\n+                            endPointGetProfile,\n+                            JsonValue.readHjson(putObject.toString())\n+                                .toString(), \"json\", \"\");\n                     commonspec.setResponse(\"PUT\", response.get());\n                     if (commonspec.getResponse().getStatusCode() != 204) {\n-                        throw new Exception(\"Error adding Group: \" + groupId + \" in Profile \" + profileId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                        throw new Exception(\n+                            \"Error adding Group: \" + groupId + \" in Profile \" +\n+                                profileId + \" - Status code: \" +\n+                                commonspec.getResponse().getStatusCode());\n                     }\n                 }\n \n             } else {\n-                throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n+                throw new Exception(\"Error obtaining Profile: \" + profileId +\n+                    \"- Status code: \" +\n+                    commonspec.getResponse().getStatusCode());\n             }\n \n         } else {\n-            throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\n+                \"Error obtaining Group: \" + groupId + \"- Status code: \" +\n+                    commonspec.getResponse().getStatusCode());\n         }\n     }\n \n-    private List<List<String>> convertDataTableToModifiableList(DataTable dataTable) {\n+    private List<List<String>> convertDataTableToModifiableList(\n+        DataTable dataTable) {\n         List<List<String>> lists = dataTable.asLists(String.class);\n         List<List<String>> updateableLists = new ArrayList<>();\n         for (int i = 0; i < lists.size(); i++) {\n@@ -623,10 +857,14 @@ public class GosecSpec extends BaseGSpec {\n      * @throws Exception if the resource does not exists or the request fails\n      */\n     @When(\"^I update '(policy|user|group|tenant)' '(.+?)'( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void updateResource(String resource, String resourceId, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n+    public void updateResource(String resource, String resourceId,\n+                               String loginInfo, String baseData, String type,\n+                               DataTable modifications) throws Exception {\n         Integer[] expectedStatusUpdate = {200, 201, 204};\n-        String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n-        String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n+        String endPointPolicy =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n+        String endPointPolicies =\n+            \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n         String endPoint = \"\";\n         String endPointResource = \"\";\n \n@@ -634,12 +872,15 @@ public class GosecSpec extends BaseGSpec {\n         commonspec.setCCTConnection();\n \n         if (resource.equals(\"policy\")) {\n-            endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n+            endPoint =\n+                \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         } else {\n             if (resource.equals(\"user\")) {\n-                endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_USER\");\n+                endPoint =\n+                    \"/service/gosecmanagement\" + ThreadProperty.get(\"API_USER\");\n             } else {\n-                endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_GROUP\");\n+                endPoint = \"/service/gosecmanagement\" +\n+                    ThreadProperty.get(\"API_GROUP\");\n             }\n             if (resource.equals(\"tenant\")) {\n                 endPoint = \"/service/gosec-identities-daas/identities/tenants/\";\n@@ -647,24 +888,36 @@ public class GosecSpec extends BaseGSpec {\n         }\n \n         try {\n-            assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+            assertThat(commonspec.getRestHost().isEmpty() ||\n+                commonspec.getRestPort().isEmpty());\n \n             if (resource.equals(\"policy\")) {\n-                restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n+                restSpec\n+                    .sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo,\n+                        null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\n+                        \"echo '\" + commonspec.getResponse().getResponse() +\n+                            \"' | jq '.list[] | select (.name == \\\"\" +\n+                            resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n-                        commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n+                        commonspec.getLogger()\n+                            .debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" +\n+                                resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n-                            commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n+                            commonspec.getLogger()\n+                                .debug(\"PolicyId obtained: {}\", policyId);\n                             endPointResource = endPointPolicy + policyId;\n                         } else {\n-                            endPointResource = endPointPolicy + \"thisPolicyDoesNotExistId\";\n+                            endPointResource =\n+                                endPointPolicy + \"thisPolicyDoesNotExistId\";\n                         }\n                     }\n                 }\n@@ -672,43 +925,60 @@ public class GosecSpec extends BaseGSpec {\n                 endPointResource = endPoint + resourceId;\n             }\n \n-            restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n+            restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo,\n+                null, null);\n \n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 if (resource.equals(\"tenant\")) {\n-                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo,\n+                        baseData, type, modifications);\n                 } else {\n-                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo,\n+                        baseData, type, modifications);\n                 }\n-                commonspec.getLogger().warn(\"Resource {}:{} updated\", resource, resourceId);\n+                commonspec.getLogger()\n+                    .warn(\"Resource {}:{} updated\", resource, resourceId);\n \n                 try {\n-                    assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusUpdate);\n+                    assertThat(commonspec.getResponse().getStatusCode())\n+                        .isIn(expectedStatusUpdate);\n                 } catch (AssertionError e) {\n-                    commonspec.getLogger().error(\"Error updating Resource {} {}: {}\", resource, resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger()\n+                        .error(\"Error updating Resource {} {}: {}\", resource,\n+                            resourceId, commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().error(\"Resource {}:{} not found so it's not updated\", resource, resourceId);\n+                commonspec.getLogger()\n+                    .error(\"Resource {}:{} not found so it's not updated\",\n+                        resource, resourceId);\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger()\n+                .error(\"Rest Host or Rest Port are not initialized {}: {}\",\n+                    commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n \n     /**\n      * Removes user or group from tenant if the resource exists and has been assigned previously\n-     * @param resource      : type of resource (user or group)\n-     * @param resourceId    : userId or groupId\n+     *\n+     * @param resource   : type of resource (user or group)\n+     * @param resourceId : userId or groupId\n      * @throws Exception if the resource does not exists or the request fails\n      */\n     @When(\"^I remove '(user|group)' '(.+?)' from tenant '(.+?)'$\")\n-    public void removeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n-        String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n-        String endPointGetAllGroups = \"/service/gosec-identities-daas/identities/groups\";\n-        String endPointTenant = \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n-        assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n+    public void removeResourceInTenant(String resource, String resourceId,\n+                                       String tenantId) throws Exception {\n+        String endPointGetAllUsers =\n+            \"/service/gosec-identities-daas/identities/users\";\n+        String endPointGetAllGroups =\n+            \"/service/gosec-identities-daas/identities/groups\";\n+        String endPointTenant =\n+            \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n+        assertThat(commonspec.getRestHost().isEmpty() ||\n+            commonspec.getRestPort().isEmpty());\n         String uidOrGid = \"uid\";\n         String uidOrGidTenant = \"uids\";\n         String endPointGosec = endPointGetAllUsers;\n@@ -723,50 +993,81 @@ public class GosecSpec extends BaseGSpec {\n \n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n-                restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n+            if (commonspec.getResponse().getResponse()\n+                .contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n+                restSpec\n+                    .sendRequestNoDataTable(\"GET\", endPointTenant, null, null,\n+                        null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n+                    JsonObject jsonTenantInfo = new JsonObject(JsonValue\n+                        .readHjson(commonspec.getResponse().getResponse())\n+                        .asObject());\n+                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant))\n+                        .values().contains(JsonValue.valueOf(resourceId))) {\n                         // remove resource from tenant\n                         // Get groups/users from tenant\n-                        JsonArray jsonGroups = (JsonArray) jsonTenantInfo.get(uidOrGidTenant);\n+                        JsonArray jsonGroups =\n+                            (JsonArray) jsonTenantInfo.get(uidOrGidTenant);\n                         // Create new string for new data without resource\n-                        String[] stringGroups = new String[jsonGroups.size() - 1];\n+                        String[] stringGroups =\n+                            new String[jsonGroups.size() - 1];\n                         // Create json for put\n-                        JSONObject putObject = new JSONObject(commonspec.getResponse().getResponse());\n+                        JSONObject putObject = new JSONObject(\n+                            commonspec.getResponse().getResponse());\n                         // Remove ids in json\n                         putObject.remove(uidOrGidTenant);\n                         // create new array with values without resourceId\n                         for (int i = 0; i < jsonGroups.size(); i++) {\n                             int j = 0;\n-                            String jsonIds = jsonGroups.get(i).toString().substring(1, jsonGroups.get(i).toString().length() - 1);\n+                            String jsonIds = jsonGroups.get(i).toString()\n+                                .substring(1,\n+                                    jsonGroups.get(i).toString().length() - 1);\n                             if (jsonIds.equals(resourceId)) {\n-                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\", resource, resourceId, tenantId);\n+                                commonspec.getLogger()\n+                                    .warn(\"{} {} removed from tenant {}\",\n+                                        resource, resourceId, tenantId);\n                             } else {\n                                 stringGroups[j] = jsonIds;\n                                 j = j + 1;\n                             }\n                         }\n                         putObject.put(uidOrGidTenant, stringGroups);\n-                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\", putObject.toString());\n-                        Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n+                        commonspec.getLogger()\n+                            .debug(\"Json for PATCH request---> {}\",\n+                                putObject.toString());\n+                        Future<Response> response = commonspec\n+                            .generateRequest(\"PATCH\", false, null, null,\n+                                endPointTenant,\n+                                JsonValue.readHjson(putObject.toString())\n+                                    .toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n-                            throw new Exception(\"Error removing \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                            throw new Exception(\n+                                \"Error removing \" + resource + \" \" +\n+                                    resourceId + \" in tenant \" + tenantId +\n+                                    \" - Status code: \" +\n+                                    commonspec.getResponse().getStatusCode());\n                         }\n \n                     } else {\n-                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\", resourceId);\n+                        commonspec.getLogger().error(\n+                            \"{} is not included in tenant -> not removed\",\n+                            resourceId);\n                     }\n                 } else {\n-                    throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                    throw new Exception(\n+                        \"Error obtaining info from tenant \" + tenantId +\n+                            \" - Status code: \" +\n+                            commonspec.getResponse().getStatusCode());\n                 }\n             } else {\n-                throw new Exception(resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n+                throw new Exception(\n+                    resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n             }\n         } else {\n-            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\n+                \"Error obtaining \" + resource + \"s - Status code: \" +\n+                    commonspec.getResponse().getStatusCode());\n         }\n     }\n \n",
            "diff_size": 489
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/16/GosecSpec.java\nindex 97f3f0830b..8b138acaae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/16/GosecSpec.java\n@@ -48,7 +48,8 @@ public class GosecSpec extends BaseGSpec {\n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n \n     RestSpec restSpec;\n-    /**\n+\n+/**\n      * Generic constructor.\n      *\n      * @param spec object\n@@ -770,4 +771,4 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/16/GosecSpec.java\nindex 97f3f0830b..bc7adc0db1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/16/GosecSpec.java\n@@ -27,7 +27,6 @@ import org.hjson.JsonValue;\n import org.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.*;\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n@@ -36,6 +35,7 @@ import java.util.List;\n import java.util.concurrent.Future;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+\n import static org.assertj.core.api.Assertions.fail;\n \n /**\n@@ -43,6 +43,8 @@ import static org.assertj.core.api.Assertions.fail;\n  *\n  * @see <a href=\"GosecSpec-annotations.html\">Gosec Steps &amp; Matching Regex</a>\n  */\n+\n+\n public class GosecSpec extends BaseGSpec {\n \n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n@@ -53,17 +55,20 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n     }\n \n+\n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void createResource(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n         createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type, modifications);\n-\n     }\n \n+\n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n         createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type, modifications);\n@@ -82,6 +87,7 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications\n      * @throws Exception\n      */\n+\n     private void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, boolean doesNotExist, String baseData, String type, DataTable modifications) throws Exception {\n         Integer expectedStatusCreate = 201;\n         Integer expectedStatusDelete = 200;\n@@ -96,10 +102,8 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         if (endPoint != null) {\n             endPointResource = endPoint + resourceId;\n-\n             if (endPoint.contains(\"id\")) {\n                 newEndPoint = endPoint.replace(\"?id=\", \"\");\n             } else {\n@@ -115,6 +119,7 @@ public class GosecSpec extends BaseGSpec {\n                     endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_GROUP\");\n                 }\n             }\n+\n             if (endPoint.contains(\"id\")) {\n                 newEndPoint = endPoint.replace(\"?id=\", \"\");\n             } else {\n@@ -130,10 +135,8 @@ public class GosecSpec extends BaseGSpec {\n                 addSourceType = true;\n             }\n         }\n-\n         try {\n             assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n@@ -154,9 +157,7 @@ public class GosecSpec extends BaseGSpec {\n                     }\n                 }\n             }\n-\n             restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n-\n             if (commonspec.getResponse().getStatusCode() != 200) {\n                 if (resource.equals(\"user\") && (addSourceType)) {\n                     commonspec.getLogger().warn(\"Gosec Version:{} -> Adding inputsourceType = CUSTOM\", gosecVersion);\n@@ -164,9 +165,15 @@ public class GosecSpec extends BaseGSpec {\n                     newModifications.add(newField);\n                 }\n                 // Create datatable with modified data\n+\n                 DataTable gosecModifications = DataTable.create(newModifications);\n                 // Send POST request\n-                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type, gosecModifications);\n+                restSpec.sendRequest(\"POST\",\n+                    newEndPoint,\n+                        loginInfo,\n+                            baseData,\n+                                type,\n+                                    gosecModifications);\n                 try {\n                     if (commonspec.getResponse().getStatusCode() == 409) {\n                         commonspec.getLogger().warn(\"The resource {} already exists\", resourceId);\n@@ -189,12 +196,15 @@ public class GosecSpec extends BaseGSpec {\n                     if (doesNotExist) {\n                         // Policy already exists\n                         commonspec.getLogger().warn(\"Policy {} already exist - not created\", resourceId);\n-\n                     } else {\n                         // Delete policy if exists\n-                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type, modifications);\n+                        restSpec.sendRequest(\"DELETE\",\n+                            endPointResource,\n+                                loginInfo,\n+                                    baseData,\n+                                        type,\n+                                            modifications);\n                         commonspec.getLogger().warn(\"Policy {} deleted\", resourceId);\n-\n                         try {\n                             assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusDelete);\n                         } catch (AssertionError e) {\n@@ -220,6 +230,8 @@ public class GosecSpec extends BaseGSpec {\n      * @param loginInfo\n      * @throws Exception\n      */\n+\n+\n     @When(\"^I delete '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it exists$\")\n     public void deleteUserIfExists(String resource, String resourceId, String endPoint, String loginInfo) throws Exception {\n         Integer[] expectedStatusDelete = {200, 204};\n@@ -229,7 +241,6 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         if (endPoint != null) {\n             endPointResource = endPoint + resourceId;\n         } else {\n@@ -243,10 +254,8 @@ public class GosecSpec extends BaseGSpec {\n                 }\n             }\n         }\n-\n         try {\n             assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n@@ -269,14 +278,11 @@ public class GosecSpec extends BaseGSpec {\n             } else {\n                 endPointResource = endPoint + resourceId;\n             }\n-\n             restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n-\n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 // Delete resource if exists\n                 restSpec.sendRequestNoDataTable(\"DELETE\", endPointResource, loginInfo, null, null);\n                 commonspec.getLogger().warn(\"Resource {} deleted\", resourceId);\n-\n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusDelete);\n                 } catch (AssertionError e) {\n@@ -292,17 +298,16 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I get id from( tag)? policy with name '(.+?)' and save it in environment variable '(.+?)'$\")\n     public void getPolicyId(String tag, String policyName, String envVar) throws Exception {\n         String endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n-\n         if (tag != null) {\n             endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_TAGS\");\n         }\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n@@ -322,11 +327,11 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I create tenant '(.+?)' if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void createTenant(String tenantId, String baseData, String type, DataTable modifications) throws Exception {\n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n         String endPointResource = endPoint + \"/\" + tenantId;\n         Integer expectedStatus = 201;\n@@ -345,11 +350,11 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I delete tenant '(.+?)' if it exists$\")\n     public void deleteTenant(String tenantId) throws Exception {\n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         String endPoint = \"/service/gosec-identities-daas/identities/tenants\";\n         String endPointResource = endPoint + \"/\" + tenantId;\n         Integer expectedStatus = 204;\n@@ -369,6 +374,7 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I include '(user|group)' '(.+?)' in tenant '(.+?)'$\")\n     public void includeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n@@ -378,7 +384,6 @@ public class GosecSpec extends BaseGSpec {\n         String uidOrGid = \"uid\";\n         String uidOrGidTenant = \"uids\";\n         String endPointGosec = endPointGetAllUsers;\n-\n         if (resource.equals(\"group\")) {\n             uidOrGid = \"gid\";\n             uidOrGidTenant = \"gids\";\n@@ -387,7 +392,6 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n@@ -415,13 +419,13 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I get id from profile with name '(.+?)' and save it in environment variable '(.+?)'$\")\n     public void getProfiled(String profileName, String envVar) throws Exception {\n         String endPoint = \"/service/gosec-identities-daas/identities/profiles\";\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n@@ -435,13 +439,13 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I get json from( tag)? policy with name '(.+?)' and save it( in environment variable '(.*?)')?( in file '(.*?)')?$\")\n     public void getPolicyJson(String tag, String policyName, String envVar, String fileName) throws Exception {\n         String endPoint = \"/service/gosecmanagement/api/policy\";\n         String newEndPoint = \"/service/gosecmanagement/api/policies\";\n         String errorMessage = \"api/policies\";\n         String errorMessage2 = \"api/policy\";\n-\n         if (tag != null) {\n             endPoint = \"/service/gosecmanagement/api/policy/tag\";\n             newEndPoint = \"/service/gosecmanagement/api/policies/tags\";\n@@ -451,7 +455,6 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n@@ -460,10 +463,8 @@ public class GosecSpec extends BaseGSpec {\n                 commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             }\n             restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy/\" + commonspec.getCommandResult(), null, null, null);\n-\n             if (envVar != null) {\n                 ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n-\n                 if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining JSON from policy \" + policyName);\n                 }\n@@ -473,9 +474,11 @@ public class GosecSpec extends BaseGSpec {\n                 // Create file (temporary) and set path to be accessible within test\n                 File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                 String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\",\n+                    absolutePathFile);\n                 // Note that this Writer will delete the file if it exists\n-                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                                                                       StandardCharsets.UTF_8));\n                 try {\n                     out.write(commonspec.getResponse().getResponse());\n                 } catch (Exception e) {\n@@ -483,10 +486,8 @@ public class GosecSpec extends BaseGSpec {\n                 } finally {\n                     out.close();\n                 }\n-\n                 Assertions.assertThat(new File(absolutePathFile).isFile());\n             }\n-\n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n                 commonspec.getLogger().warn(\"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\", endPoint);\n@@ -497,7 +498,6 @@ public class GosecSpec extends BaseGSpec {\n                         commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                     }\n                     restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy?id=\" + commonspec.getCommandResult(), null, null, null);\n-\n                     if (envVar != null) {\n                         ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n                         if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n@@ -509,9 +509,11 @@ public class GosecSpec extends BaseGSpec {\n                         // Create file (temporary) and set path to be accessible within test\n                         File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\",\n+                            absolutePathFile);\n                         // Note that this Writer will delete the file if it exists\n-                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                                                                               StandardCharsets.UTF_8));\n                         try {\n                             out.write(commonspec.getResponse().getResponse());\n                         } catch (Exception e) {\n@@ -519,10 +521,8 @@ public class GosecSpec extends BaseGSpec {\n                         } finally {\n                             out.close();\n                         }\n-\n                         Assertions.assertThat(new File(absolutePathFile).isFile());\n                     }\n-\n                 } else {\n                     fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n                 }\n@@ -532,6 +532,7 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n+\n     @When(\"^I include group '(.+?)' in profile '(.+?)'$\")\n     public void includeGroupInProfile(String groupId, String profileId) throws Exception {\n         String endPointGetGroup = \"/service/gosecmanagement/api/group?id=\" + groupId;\n@@ -544,9 +545,7 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGetGroup, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             JsonObject jsonGroupInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n@@ -562,12 +561,12 @@ public class GosecSpec extends BaseGSpec {\n                 // Remove groups and roles in json\n                 putObject.remove(groups);\n                 putObject.remove(roles);\n-\n                 for (int i = 0; i < jsonGroups.size(); i++) {\n                     String jsonIds = ((JsonObject) jsonGroups.get(i)).getString(\"id\", \"\");\n-\n                     if (jsonIds.equals(groupId)) {\n-                        commonspec.getLogger().warn(\"{} is already included in the profile {}\", groupId, profileId);\n+                        commonspec.getLogger().warn(\"{} is already included in the profile {}\",\n+                            groupId,\n+                                profileId);\n                         content = true;\n                         break;\n                     } else {\n@@ -580,7 +579,6 @@ public class GosecSpec extends BaseGSpec {\n                     stringGroups[jsonGroups.size()] = groupId;\n                     // Add gids array to new json for PUT request\n                     putObject.put(\"gids\", stringGroups);\n-\n                     commonspec.getLogger().warn(\"Json for PUT request---> {}\", putObject.toString());\n                     Future<Response> response = commonspec.generateRequest(\"PUT\", false, null, null, endPointGetProfile, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                     commonspec.setResponse(\"PUT\", response.get());\n@@ -588,11 +586,9 @@ public class GosecSpec extends BaseGSpec {\n                         throw new Exception(\"Error adding Group: \" + groupId + \" in Profile \" + profileId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                     }\n                 }\n-\n             } else {\n                 throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n             }\n-\n         } else {\n             throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n         }\n@@ -622,6 +618,8 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications : data to modify the resource\n      * @throws Exception if the resource does not exists or the request fails\n      */\n+\n+\n     @When(\"^I update '(policy|user|group|tenant)' '(.+?)'( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n     public void updateResource(String resource, String resourceId, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n         Integer[] expectedStatusUpdate = {200, 201, 204};\n@@ -632,7 +630,6 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         if (resource.equals(\"policy\")) {\n             endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         } else {\n@@ -641,14 +638,13 @@ public class GosecSpec extends BaseGSpec {\n             } else {\n                 endPoint = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_GROUP\");\n             }\n+\n             if (resource.equals(\"tenant\")) {\n                 endPoint = \"/service/gosec-identities-daas/identities/tenants/\";\n             }\n         }\n-\n         try {\n             assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n-\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n@@ -671,17 +667,24 @@ public class GosecSpec extends BaseGSpec {\n             } else {\n                 endPointResource = endPoint + resourceId;\n             }\n-\n             restSpec.sendRequestNoDataTable(\"GET\", endPointResource, loginInfo, null, null);\n-\n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 if (resource.equals(\"tenant\")) {\n-                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PATCH\",\n+                        endPointResource,\n+                            loginInfo,\n+                                baseData,\n+                                    type,\n+                                        modifications);\n                 } else {\n-                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PUT\",\n+                        endPointResource,\n+                            loginInfo,\n+                                baseData,\n+                                    type,\n+                                        modifications);\n                 }\n                 commonspec.getLogger().warn(\"Resource {}:{} updated\", resource, resourceId);\n-\n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusUpdate);\n                 } catch (AssertionError e) {\n@@ -703,6 +706,8 @@ public class GosecSpec extends BaseGSpec {\n      * @param resourceId    : userId or groupId\n      * @throws Exception if the resource does not exists or the request fails\n      */\n+\n+\n     @When(\"^I remove '(user|group)' '(.+?)' from tenant '(.+?)'$\")\n     public void removeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n@@ -720,7 +725,6 @@ public class GosecSpec extends BaseGSpec {\n \n         // Set REST connection\n         commonspec.setCCTConnection();\n-\n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n             if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n@@ -742,22 +746,26 @@ public class GosecSpec extends BaseGSpec {\n                             int j = 0;\n                             String jsonIds = jsonGroups.get(i).toString().substring(1, jsonGroups.get(i).toString().length() - 1);\n                             if (jsonIds.equals(resourceId)) {\n-                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\", resource, resourceId, tenantId);\n+                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\",\n+                                    resource,\n+                                        resourceId,\n+                                            tenantId);\n                             } else {\n                                 stringGroups[j] = jsonIds;\n                                 j = j + 1;\n                             }\n                         }\n                         putObject.put(uidOrGidTenant, stringGroups);\n-                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\", putObject.toString());\n+                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\",\n+                            putObject.toString());\n                         Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n                             throw new Exception(\"Error removing \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                         }\n-\n                     } else {\n-                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\", resourceId);\n+                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\",\n+                            resourceId);\n                     }\n                 } else {\n                     throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n@@ -769,5 +777,4 @@ public class GosecSpec extends BaseGSpec {\n             throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 116
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/16/GosecSpec.java\nindex 97f3f0830b..829dbaec1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/16/GosecSpec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/16/GosecSpec.java\n@@ -53,6 +53,7 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}