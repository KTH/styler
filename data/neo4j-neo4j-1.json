{
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "21",
                "severity": "error",
                "message": "'{' at column 21 should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "public interface AnyValueWriter<E extends Exception> extends ValueWriter<E>\n{\n    enum EntityMode { REFERENCE, FULL };\n\n    /**\n     * Returns the wanted EntityMode of this AnyValueWriter.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "21",
                    "severity": "error",
                    "message": "'{' at column 21 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "column": "5",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "36",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/1/AnyValueWriter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/1/AnyValueWriter.java\nindex 9c30ce3564..5e7f2bef62 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/1/AnyValueWriter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/1/AnyValueWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values;\n \n import org.neo4j.values.storable.TextArray;\n@@ -31,43 +32,46 @@ import org.neo4j.values.virtual.RelationshipValue;\n  */\n public interface AnyValueWriter<E extends Exception> extends ValueWriter<E>\n {\n-    enum EntityMode { REFERENCE, FULL };\n+    enum EntityMode\n+    {REFERENCE, FULL}\n+\n+    ;\n \n     /**\n      * Returns the wanted EntityMode of this AnyValueWriter.\n-     *\n+     * <p>\n      * EntityMode.REFERENCE signals to all entity-values that they should callback using `write*Reference()`,\n      * even if the whole entity is available.\n-     *\n+     * <p>\n      * EntityMode.FULL signals to all entity-values that they can callback using either `write*` or `write*Reference`\n      * depending on how much information is available to the value instance.\n      */\n     EntityMode entityMode();\n \n-    void writeNodeReference( long nodeId ) throws E;\n+    void writeNodeReference(long nodeId) throws E;\n \n-    void writeNode( long nodeId, TextArray labels, MapValue properties ) throws E;\n+    void writeNode(long nodeId, TextArray labels, MapValue properties) throws E;\n \n-    void writeRelationshipReference( long relId ) throws E;\n+    void writeRelationshipReference(long relId) throws E;\n \n-    void writeRelationship( long relId, long startNodeId, long endNodeId, TextValue type, MapValue properties ) throws E;\n+    void writeRelationship(long relId, long startNodeId, long endNodeId, TextValue type, MapValue properties) throws E;\n \n-    void beginMap( int size ) throws E;\n+    void beginMap(int size) throws E;\n \n     void endMap() throws E;\n \n-    void beginList( int size ) throws E;\n+    void beginList(int size) throws E;\n \n     void endList() throws E;\n \n-    void writePath( NodeValue[] nodes, RelationshipValue[] relationships ) throws E;\n+    void writePath(NodeValue[] nodes, RelationshipValue[] relationships) throws E;\n \n-    default void writeVirtualNodeHack( Object node )\n+    default void writeVirtualNodeHack(Object node)\n     {\n         // do nothing, this is an ugly hack.\n     }\n \n-    default void writeVirtualRelationshipHack( Object relationship )\n+    default void writeVirtualRelationshipHack(Object relationship)\n     {\n         // do nothing, this is an ugly hack.\n     }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "21",
                    "severity": "error",
                    "message": "'{' at column 21 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/1/AnyValueWriter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/1/AnyValueWriter.java\nindex 9c30ce3564..9bc8128ada 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/1/AnyValueWriter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/1/AnyValueWriter.java\n@@ -71,4 +71,4 @@ public interface AnyValueWriter<E extends Exception> extends ValueWriter<E>\n     {\n         // do nothing, this is an ugly hack.\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/1/AnyValueWriter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/1/AnyValueWriter.java\nindex 9c30ce3564..599ef43d18 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/1/AnyValueWriter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/1/AnyValueWriter.java\n@@ -31,9 +31,10 @@ import org.neo4j.values.virtual.RelationshipValue;\n  */\n public interface AnyValueWriter<E extends Exception> extends ValueWriter<E>\n {\n-    enum EntityMode { REFERENCE, FULL };\n+    enum EntityMode\n+        { REFERENCE, FULL };\n \n-    /**\n+     /**\n      * Returns the wanted EntityMode of this AnyValueWriter.\n      *\n      * EntityMode.REFERENCE signals to all entity-values that they should callback using `write*Reference()`,\n@@ -42,33 +43,34 @@ public interface AnyValueWriter<E extends Exception> extends ValueWriter<E>\n      * EntityMode.FULL signals to all entity-values that they can callback using either `write*` or `write*Reference`\n      * depending on how much information is available to the value instance.\n      */\n-    EntityMode entityMode();\n+     EntityMode entityMode();\n \n-    void writeNodeReference( long nodeId ) throws E;\n+     void writeNodeReference( long nodeId ) throws E;\n \n-    void writeNode( long nodeId, TextArray labels, MapValue properties ) throws E;\n+     void writeNode( long nodeId, TextArray labels, MapValue properties ) throws E;\n \n-    void writeRelationshipReference( long relId ) throws E;\n+     void writeRelationshipReference( long relId ) throws E;\n \n-    void writeRelationship( long relId, long startNodeId, long endNodeId, TextValue type, MapValue properties ) throws E;\n+     void writeRelationship( long relId, long startNodeId, long endNodeId, TextValue type, MapValue properties ) throws E;\n \n-    void beginMap( int size ) throws E;\n+     void beginMap( int size ) throws E;\n \n-    void endMap() throws E;\n+     void endMap() throws E;\n \n-    void beginList( int size ) throws E;\n+     void beginList( int size ) throws E;\n \n-    void endList() throws E;\n+     void endList() throws E;\n \n-    void writePath( NodeValue[] nodes, RelationshipValue[] relationships ) throws E;\n+     void writePath( NodeValue[] nodes, RelationshipValue[] relationships ) throws E;\n \n-    default void writeVirtualNodeHack( Object node )\n-    {\n-        // do nothing, this is an ugly hack.\n-    }\n+     default void writeVirtualNodeHack( Object node )\n+     {\n+         // do nothing, this is an ugly hack.\n+     }\n \n-    default void writeVirtualRelationshipHack( Object relationship )\n-    {\n-        // do nothing, this is an ugly hack.\n-    }\n-}\n+     default void writeVirtualRelationshipHack( Object relationship )\n+     {\n+         // do nothing, this is an ugly hack.\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "column": "21",
                    "severity": "error",
                    "message": "'{' at column 21 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}