{
    "error_id": "70",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @since 09.03.2018\n */\npublic class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n\n    private static final String FORMAT =\n            \"<b>Known keys:</b>\"",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "column": "5",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/70/GetConfigurationTask.java\nindex 31bcb4016d..4a8ffa7a2c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/70/GetConfigurationTask.java\n@@ -20,7 +20,8 @@ import java.util.stream.Collectors;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 09.03.2018\n  */\n-public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n+public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask\n+    . ResponseWrapper> {\n \n     private static final String FORMAT =\n             \"<b>Known keys:</b>\"\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/70/GetConfigurationTask.java\nindex 31bcb4016d..56eae855cf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/70/GetConfigurationTask.java\n@@ -20,16 +20,17 @@ import java.util.stream.Collectors;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 09.03.2018\n  */\n-public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n+public class GetConfigurationTask\n+    extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n \n     private static final String FORMAT =\n-            \"<b>Known keys:</b>\"\n-                    + \"<br>\"\n-                    + \"%s\"\n-                    + \"<br>\"\n-                    + \"<b>Unknown keys:</b>\"\n-                    + \"<br>\"\n-                    + \"%s\";\n+        \"<b>Known keys:</b>\"\n+            + \"<br>\"\n+            + \"%s\"\n+            + \"<br>\"\n+            + \"<b>Unknown keys:</b>\"\n+            + \"<br>\"\n+            + \"%s\";\n \n     private static final Joiner JOINER = Joiner.on(\",\");\n \n@@ -43,9 +44,9 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n             @Override\n             public void success(String chargeBoxId, ResponseWrapper response) {\n                 String str = String.format(\n-                        FORMAT,\n-                        toStringConfList(response.getConfigurationKey()),\n-                        toStringUnknownList(response.getUnknownKey())\n+                    FORMAT,\n+                    toStringConfList(response.getConfigurationKey()),\n+                    toStringUnknownList(response.getUnknownKey())\n                 );\n \n                 addNewResponse(chargeBoxId, str);\n@@ -91,9 +92,9 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n                 GetConfigurationResponse response = res.get();\n \n                 List<KeyValue> keyValues = response.getConfigurationKey()\n-                                                   .stream()\n-                                                   .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n-                                                   .collect(Collectors.toList());\n+                    .stream()\n+                    .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n+                    .collect(Collectors.toList());\n \n                 success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n             } catch (Exception e) {\n@@ -108,9 +109,9 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n             try {\n                 ocpp.cp._2015._10.GetConfigurationResponse response = res.get();\n                 List<KeyValue> keyValues = response.getConfigurationKey()\n-                                                   .stream()\n-                                                   .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n-                                                   .collect(Collectors.toList());\n+                    .stream()\n+                    .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n+                    .collect(Collectors.toList());\n \n                 success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n             } catch (Exception e) {\n@@ -124,8 +125,8 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n \n         for (KeyValue keyValue : confList) {\n             sb.append(keyValue.getKey())\n-              .append(\": \")\n-              .append(keyValue.getValue());\n+                .append(\": \")\n+                .append(keyValue.getValue());\n \n             if (keyValue.isReadonly()) {\n                 sb.append(\" (read-only)\");\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/70/GetConfigurationTask.java\nindex 31bcb4016d..f9e9f53d52 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/70/GetConfigurationTask.java\n@@ -77,8 +77,7 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         }\n     }\n \n-\n-    @Deprecated\n+@Deprecated\n     @Override\n     public <T extends ResponseType> AsyncHandler<T> getOcpp12Handler(String chargeBoxId) {\n         throw new RuntimeException(\"Not supported\");\n@@ -90,12 +89,10 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n             try {\n                 GetConfigurationResponse response = res.get();\n \n-                List<KeyValue> keyValues = response.getConfigurationKey()\n-                                                   .stream()\n+                List<KeyValue> keyValues = response.getConfigurationKey().stream()\n                                                    .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n                                                    .collect(Collectors.toList());\n-\n-                success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n+success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n             } catch (Exception e) {\n                 failed(chargeBoxId, e);\n             }\n@@ -107,12 +104,10 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         return res -> {\n             try {\n                 ocpp.cp._2015._10.GetConfigurationResponse response = res.get();\n-                List<KeyValue> keyValues = response.getConfigurationKey()\n-                                                   .stream()\n+                List<KeyValue> keyValues = response.getConfigurationKey().stream()\n                                                    .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n                                                    .collect(Collectors.toList());\n-\n-                success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n+success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n             } catch (Exception e) {\n                 failed(chargeBoxId, e);\n             }\n@@ -126,8 +121,7 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n             sb.append(keyValue.getKey())\n               .append(\": \")\n               .append(keyValue.getValue());\n-\n-            if (keyValue.isReadonly()) {\n+if (keyValue.isReadonly()) {\n                 sb.append(\" (read-only)\");\n             }\n \n@@ -155,4 +149,4 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         private final String value;\n         private final boolean readonly;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/70/GetConfigurationTask.java\nindex 31bcb4016d..64a91cdf5e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/70/GetConfigurationTask.java\n@@ -11,7 +11,6 @@ import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import ocpp.cp._2012._06.GetConfigurationRequest;\n import ocpp.cp._2012._06.GetConfigurationResponse;\n-\n import javax.xml.ws.AsyncHandler;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -20,17 +19,14 @@ import java.util.stream.Collectors;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 09.03.2018\n  */\n-public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n \n-    private static final String FORMAT =\n-            \"<b>Known keys:</b>\"\n-                    + \"<br>\"\n-                    + \"%s\"\n-                    + \"<br>\"\n-                    + \"<b>Unknown keys:</b>\"\n-                    + \"<br>\"\n-                    + \"%s\";\n \n+public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n+    private static final String FORMAT = \"<b>Known keys:</b>\" + \"<br>\"\n+    + \"%s\"\n+    + \"<br>\"\n+    + \"<b>Unknown keys:</b>\"\n+    + \"<br>\" + \"%s\";\n     private static final Joiner JOINER = Joiner.on(\",\");\n \n     public GetConfigurationTask(OcppVersion ocppVersion, GetConfigurationParams params) {\n@@ -40,17 +36,15 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n     @Override\n     public OcppCallback<ResponseWrapper> defaultCallback() {\n         return new DefaultOcppCallback<ResponseWrapper>() {\n-            @Override\n-            public void success(String chargeBoxId, ResponseWrapper response) {\n-                String str = String.format(\n-                        FORMAT,\n-                        toStringConfList(response.getConfigurationKey()),\n-                        toStringUnknownList(response.getUnknownKey())\n-                );\n-\n-                addNewResponse(chargeBoxId, str);\n-            }\n-        };\n+\n+                   @Override\n+                   public void success(String chargeBoxId, ResponseWrapper response) {\n+                       String str = String.format(FORMAT,\n+                                                  toStringConfList(response.getConfigurationKey()),\n+                                                  toStringUnknownList(response.getUnknownKey()));\n+                       addNewResponse(chargeBoxId, str);\n+                   }\n+               };\n     }\n \n     @Deprecated\n@@ -62,7 +56,8 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n     @Override\n     public ocpp.cp._2012._06.GetConfigurationRequest getOcpp15Request() {\n         if (params.isSetConfKeyList()) {\n-            return new GetConfigurationRequest().withKey(params.getConfKeyList());\n+            return new GetConfigurationRequest()\n+.withKey(params.getConfKeyList());\n         } else {\n             return new GetConfigurationRequest();\n         }\n@@ -71,13 +66,13 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n     @Override\n     public ocpp.cp._2015._10.GetConfigurationRequest getOcpp16Request() {\n         if (params.isSetConfKeyList()) {\n-            return new ocpp.cp._2015._10.GetConfigurationRequest().withKey(params.getConfKeyList());\n+            return new ocpp.cp._2015._10.GetConfigurationRequest()\n+.withKey(params.getConfKeyList());\n         } else {\n             return new ocpp.cp._2015._10.GetConfigurationRequest();\n         }\n     }\n \n-\n     @Deprecated\n     @Override\n     public <T extends ResponseType> AsyncHandler<T> getOcpp12Handler(String chargeBoxId) {\n@@ -89,12 +84,9 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         return res -> {\n             try {\n                 GetConfigurationResponse response = res.get();\n-\n-                List<KeyValue> keyValues = response.getConfigurationKey()\n-                                                   .stream()\n-                                                   .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n-                                                   .collect(Collectors.toList());\n-\n+                List<KeyValue> keyValues = response.getConfigurationKey().stream()\n+                                                                         .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n+                                                                         .collect(Collectors.toList());\n                 success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n             } catch (Exception e) {\n                 failed(chargeBoxId, e);\n@@ -107,11 +99,9 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         return res -> {\n             try {\n                 ocpp.cp._2015._10.GetConfigurationResponse response = res.get();\n-                List<KeyValue> keyValues = response.getConfigurationKey()\n-                                                   .stream()\n-                                                   .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n-                                                   .collect(Collectors.toList());\n-\n+                List<KeyValue> keyValues = response.getConfigurationKey().stream()\n+                                                                         .map(k -> new KeyValue(k.getKey(), k.getValue(), k.isReadonly()))\n+                                                                         .collect(Collectors.toList());\n                 success(chargeBoxId, new ResponseWrapper(keyValues, response.getUnknownKey()));\n             } catch (Exception e) {\n                 failed(chargeBoxId, e);\n@@ -123,9 +113,7 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         StringBuilder sb = new StringBuilder();\n \n         for (KeyValue keyValue : confList) {\n-            sb.append(keyValue.getKey())\n-              .append(\": \")\n-              .append(keyValue.getValue());\n+            sb.append(keyValue.getKey()).append(\": \").append(keyValue.getValue());\n \n             if (keyValue.isReadonly()) {\n                 sb.append(\" (read-only)\");\n@@ -133,7 +121,6 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n \n             sb.append(\"<br>\");\n         }\n-\n         return sb.toString();\n     }\n \n@@ -155,4 +142,4 @@ public class GetConfigurationTask extends CommunicationTask<GetConfigurationPara\n         private final String value;\n         private final boolean readonly;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "column": "5",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/70/GetConfigurationTask.java\nindex 31bcb4016d..4a8ffa7a2c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/70/GetConfigurationTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/70/GetConfigurationTask.java\n@@ -20,7 +20,8 @@ import java.util.stream.Collectors;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 09.03.2018\n  */\n-public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask.ResponseWrapper> {\n+public class GetConfigurationTask extends CommunicationTask<GetConfigurationParams, GetConfigurationTask\n+    . ResponseWrapper> {\n \n     private static final String FORMAT =\n             \"<b>Known keys:</b>\"\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}