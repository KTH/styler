{
    "error_id": "219",
    "information": {
        "errors": [
            {
                "line": "148",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tpublic boolean isReadyToDownload(URLBuilder url, User user) {\n\t\t/* We cannot rely on checking this.dataset only for download permission because the actual execution might also fired queries on another dataset.\n\t\t * The member this.dataset only associates the \n\t\t */\n\t\tboolean isPermittedDownload = user.isPermittedAll(getUsedNamespacedIds().stream()\n\t\t\t.map(NamespacedId::getDataset)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/219/ManagedExecution.java\nindex 1a89c5888b..809d0f67f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/219/ManagedExecution.java\n@@ -159,7 +159,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t}\n \n \tpublic abstract ManagedQuery toResultQuery();\n-\t\n+\n \t/**\n \t * Gives all {@link NamespacedId}s that were required in the execution.\n \t * @return A List of all {@link NamespacedId}s needed for the execution.\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/219/ManagedExecution.java\nindex 1a89c5888b..33651abc0c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/219/ManagedExecution.java\n@@ -48,122 +48,123 @@ import org.hibernate.validator.constraints.NotEmpty;\n @JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, property = \"type\")\n public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecutionId> {\n \n-\tprotected DatasetId dataset;\n-\tprotected UUID queryId = UUID.randomUUID();\n-\t@NotEmpty\n-\tprotected String label = queryId.toString();\n-\tprotected LocalDateTime creationTime = LocalDateTime.now();\n-\t@Nullable\n-\tprotected UserId owner;\n-\n-\tprotected boolean machineGenerated;\n-\n-\t// we don't want to store or send query results or other result metadata\n-\t@JsonIgnore\n-\tprotected transient ExecutionState state = ExecutionState.NEW;\n-\t@JsonIgnore\n-\tprivate final transient CountDownLatch execution = new CountDownLatch(1);\n-\t@JsonIgnore\n-\tprivate transient LocalDateTime startTime;\n-\t@JsonIgnore\n-\tprotected transient LocalDateTime finishTime;\n-\t@JsonIgnore\n-\tprotected transient Namespace namespace;\n-\n-\tpublic ManagedExecution(Namespace namespace, UserId owner) {\n-\t\tthis.owner = owner;\n-\t\tinitExecutable(namespace);\n-\t}\n-\n-\tpublic void initExecutable(@NonNull Namespace namespace) {\n-\t\tthis.namespace = namespace;\n-\t\tthis.dataset = namespace.getStorage().getDataset().getId();\n-\t}\n-\n-\t@Override\n-\tpublic ManagedExecutionId createId() {\n-\t\treturn new ManagedExecutionId(dataset, queryId);\n-\t}\n-\n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n-\t}\n-\n-\tpublic void start() {\n-\t\tstartTime = LocalDateTime.now();\n-\t\tstate = ExecutionState.RUNNING;\n-\t}\n-\n-\tprotected void finish() {\n-\t\tif (getState() == ExecutionState.NEW)\n-\t\t\tlog.error(\"Query {} was never run.\", getId());\n-\n-\t\tsynchronized (execution) {\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\tstate = ExecutionState.DONE;\n-\t\t\texecution.countDown();\n-\t\t\ttry {\n-\t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n-\t\t\t}\n-\t\t\tcatch (JSONException e) {\n-\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n-\t\t\t}\n-\t\t}\n-\n-\t\tlog.info(\n-\t\t\t\"{} {} {} within {}\",\n-\t\t\tstate,\n-\t\t\tqueryId,\n-\t\t\tthis.getClass().getSimpleName(),\n-\t\t\t(startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n-\t}\n-\n-\tpublic void awaitDone(int time, TimeUnit unit) {\n-\t\tif (state == ExecutionState.RUNNING) {\n-\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n-\t\t}\n-\t}\n-\n-\tpublic ExecutionStatus buildStatus(URLBuilder url, User user) {\n-\t\treturn ExecutionStatus.builder().label(label).id(getId()).own(true).createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.requiredTime((startTime != null && finishTime != null) ? ChronoUnit.MILLIS.between(startTime, finishTime) : null).status(state)\n-\t\t\t.owner(Optional.ofNullable(owner).orElse(null))\n-\t\t\t.ownerName(\n-\t\t\t\tOptional.ofNullable(owner).map(owner -> namespace.getStorage().getMetaStorage().getUser(owner)).map(User::getLabel)\n-\t\t\t\t\t.orElse(null))\n-\t\t\t.resultUrl(\n-\t\t\t\tisReadyToDownload(url, user)\n-\t\t\t\t\t? url.set(ResourceConstants.DATASET, dataset.getName()).set(ResourceConstants.QUERY, getId().toString())\n-\t\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n-\t\t\t\t\t: null)\n-\t\t\t.build();\n-\t}\n-\n-\tpublic boolean isReadyToDownload(URLBuilder url, User user) {\n-\t\t/* We cannot rely on checking this.dataset only for download permission because the actual execution might also fired queries on another dataset.\n-\t\t * The member this.dataset only associates the \n-\t\t */\n-\t\tboolean isPermittedDownload = user.isPermittedAll(getUsedNamespacedIds().stream()\n-\t\t\t.map(NamespacedId::getDataset)\n-\t\t\t.map(d -> DatasetPermission.onInstance(Ability.DOWNLOAD, d))\n-\t\t\t.collect(Collectors.toList()));\n-\t\treturn url != null && state != ExecutionState.NEW && isPermittedDownload;\n-\t}\n-\n-\tpublic ExecutionStatus buildStatus(User user) {\n-\t\treturn buildStatus(null, user);\n-\t}\n-\n-\tpublic abstract ManagedQuery toResultQuery();\n-\t\n-\t/**\n-\t * Gives all {@link NamespacedId}s that were required in the execution.\n-\t * @return A List of all {@link NamespacedId}s needed for the execution.\n-\t */\n-\t@JsonIgnore\n-\tpublic abstract Set<NamespacedId> getUsedNamespacedIds();\n+    protected DatasetId dataset;\n+    protected UUID queryId = UUID.randomUUID();\n+    @NotEmpty\n+    protected String label = queryId.toString();\n+    protected LocalDateTime creationTime = LocalDateTime.now();\n+    @Nullable\n+    protected UserId owner;\n+\n+    protected boolean machineGenerated;\n+\n+    // we don't want to store or send query results or other result metadata\n+    @JsonIgnore\n+    protected transient ExecutionState state = ExecutionState.NEW;\n+    @JsonIgnore\n+    private final transient CountDownLatch execution = new CountDownLatch(1);\n+    @JsonIgnore\n+    private transient LocalDateTime startTime;\n+    @JsonIgnore\n+    protected transient LocalDateTime finishTime;\n+    @JsonIgnore\n+    protected transient Namespace namespace;\n+\n+    public ManagedExecution(Namespace namespace, UserId owner) {\n+        this.owner = owner;\n+        initExecutable(namespace);\n+    }\n+\n+    public void initExecutable(@NonNull Namespace namespace) {\n+        this.namespace = namespace;\n+        this.dataset = namespace.getStorage().getDataset().getId();\n+    }\n+\n+    @Override\n+    public ManagedExecutionId createId() {\n+        return new ManagedExecutionId(dataset, queryId);\n+    }\n+\n+    protected void fail() {\n+        synchronized (execution) {\n+            state = ExecutionState.FAILED;\n+            finishTime = LocalDateTime.now();\n+            execution.countDown();\n+        }\n+    }\n+\n+    public void start() {\n+        startTime = LocalDateTime.now();\n+        state = ExecutionState.RUNNING;\n+    }\n+\n+    protected void finish() {\n+        if (getState() == ExecutionState.NEW) {\n+            log.error(\"Query {} was never run.\", getId());\n+        }\n+\n+        synchronized (execution) {\n+            finishTime = LocalDateTime.now();\n+            state = ExecutionState.DONE;\n+            execution.countDown();\n+            try {\n+                namespace.getStorage().getMetaStorage().updateExecution(this);\n+            } catch (JSONException e) {\n+                log.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n+            }\n+        }\n+\n+        log.info(\n+            \"{} {} {} within {}\",\n+            state,\n+            queryId,\n+            this.getClass().getSimpleName(),\n+            (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n+    }\n+\n+    public void awaitDone(int time, TimeUnit unit) {\n+        if (state == ExecutionState.RUNNING) {\n+            Uninterruptibles.awaitUninterruptibly(execution, time, unit);\n+        }\n+    }\n+\n+    public ExecutionStatus buildStatus(URLBuilder url, User user) {\n+        return ExecutionStatus.builder().label(label).id(getId()).own(true).createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+            .requiredTime((startTime != null && finishTime != null) ? ChronoUnit.MILLIS.between(startTime, finishTime) : null).status(state)\n+            .owner(Optional.ofNullable(owner).orElse(null))\n+            .ownerName(\n+                Optional.ofNullable(owner).map(owner -> namespace.getStorage().getMetaStorage().getUser(owner)).map(User::getLabel)\n+                    .orElse(null))\n+            .resultUrl(\n+                isReadyToDownload(url, user)\n+                    ? url.set(ResourceConstants.DATASET, dataset.getName()).set(ResourceConstants.QUERY, getId().toString())\n+                    .to(ResultCSVResource.GET_CSV_PATH).get()\n+                    : null)\n+            .build();\n+    }\n+\n+    public boolean isReadyToDownload(URLBuilder url, User user) {\n+        /* We cannot rely on checking this.dataset only for download permission because the actual execution might also fired queries on another dataset.\n+         * The member this.dataset only associates the\n+         */\n+        boolean isPermittedDownload = user.isPermittedAll(getUsedNamespacedIds().stream()\n+            .map(NamespacedId::getDataset)\n+            .map(d -> DatasetPermission.onInstance(Ability.DOWNLOAD, d))\n+            .collect(Collectors.toList()));\n+        return url != null && state != ExecutionState.NEW && isPermittedDownload;\n+    }\n+\n+    public ExecutionStatus buildStatus(User user) {\n+        return buildStatus(null, user);\n+    }\n+\n+    public abstract ManagedQuery toResultQuery();\n+\n+    /**\n+     * Gives all {@link NamespacedId}s that were required in the execution.\n+     *\n+     * @return A List of all {@link NamespacedId}s needed for the execution.\n+     */\n+    @JsonIgnore\n+    public abstract Set<NamespacedId> getUsedNamespacedIds();\n }\n",
            "diff_size": 119
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/219/ManagedExecution.java\nindex 1a89c5888b..940d5f8ddb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/219/ManagedExecution.java\n@@ -101,8 +101,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \tprotected void finish() {\n \t\tif (getState() == ExecutionState.NEW)\n \t\t\tlog.error(\"Query {} was never run.\", getId());\n-\n-\t\tsynchronized (execution) {\n+synchronized (execution) {\n \t\t\tfinishTime = LocalDateTime.now();\n \t\t\tstate = ExecutionState.DONE;\n \t\t\texecution.countDown();\n@@ -118,8 +117,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t\t\t\"{} {} {} within {}\",\n \t\t\tstate,\n \t\t\tqueryId,\n-\t\t\tthis.getClass().getSimpleName(),\n-\t\t\t(startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n+\t\t\tthis.getClass().getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n \t}\n \n \tpublic void awaitDone(int time, TimeUnit unit) {\n@@ -135,12 +133,12 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t\t\t.ownerName(\n \t\t\t\tOptional.ofNullable(owner).map(owner -> namespace.getStorage().getMetaStorage().getUser(owner)).map(User::getLabel)\n \t\t\t\t\t.orElse(null))\n-\t\t\t.resultUrl(\n+.resultUrl(\n \t\t\t\tisReadyToDownload(url, user)\n \t\t\t\t\t? url.set(ResourceConstants.DATASET, dataset.getName()).set(ResourceConstants.QUERY, getId().toString())\n \t\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n \t\t\t\t\t: null)\n-\t\t\t.build();\n+.build();\n \t}\n \n \tpublic boolean isReadyToDownload(URLBuilder url, User user) {\n@@ -166,4 +164,4 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t */\n \t@JsonIgnore\n \tpublic abstract Set<NamespacedId> getUsedNamespacedIds();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/219/ManagedExecution.java\nindex 1a89c5888b..a847619baf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/219/ManagedExecution.java\n@@ -10,9 +10,7 @@ import java.util.UUID;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n-\n import javax.annotation.Nullable;\n-\n import com.bakdata.conquery.apiv1.ResourceConstants;\n import com.bakdata.conquery.apiv1.ResultCSVResource;\n import com.bakdata.conquery.apiv1.URLBuilder;\n@@ -45,125 +43,122 @@ import org.hibernate.validator.constraints.NotEmpty;\n @ToString\n @Slf4j\n @CPSBase\n-@JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, property = \"type\")\n+@JsonTypeInfo(use= JsonTypeInfo.Id.CUSTOM, property= \"type\")\n public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecutionId> {\n \n-\tprotected DatasetId dataset;\n-\tprotected UUID queryId = UUID.randomUUID();\n-\t@NotEmpty\n-\tprotected String label = queryId.toString();\n-\tprotected LocalDateTime creationTime = LocalDateTime.now();\n-\t@Nullable\n-\tprotected UserId owner;\n-\n-\tprotected boolean machineGenerated;\n-\n-\t// we don't want to store or send query results or other result metadata\n-\t@JsonIgnore\n-\tprotected transient ExecutionState state = ExecutionState.NEW;\n-\t@JsonIgnore\n-\tprivate final transient CountDownLatch execution = new CountDownLatch(1);\n-\t@JsonIgnore\n-\tprivate transient LocalDateTime startTime;\n-\t@JsonIgnore\n-\tprotected transient LocalDateTime finishTime;\n-\t@JsonIgnore\n-\tprotected transient Namespace namespace;\n-\n-\tpublic ManagedExecution(Namespace namespace, UserId owner) {\n-\t\tthis.owner = owner;\n-\t\tinitExecutable(namespace);\n-\t}\n-\n-\tpublic void initExecutable(@NonNull Namespace namespace) {\n-\t\tthis.namespace = namespace;\n-\t\tthis.dataset = namespace.getStorage().getDataset().getId();\n-\t}\n-\n-\t@Override\n-\tpublic ManagedExecutionId createId() {\n-\t\treturn new ManagedExecutionId(dataset, queryId);\n-\t}\n-\n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n-\t}\n-\n-\tpublic void start() {\n-\t\tstartTime = LocalDateTime.now();\n-\t\tstate = ExecutionState.RUNNING;\n-\t}\n-\n-\tprotected void finish() {\n-\t\tif (getState() == ExecutionState.NEW)\n-\t\t\tlog.error(\"Query {} was never run.\", getId());\n-\n-\t\tsynchronized (execution) {\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\tstate = ExecutionState.DONE;\n-\t\t\texecution.countDown();\n-\t\t\ttry {\n-\t\t\t\tnamespace.getStorage().getMetaStorage().updateExecution(this);\n-\t\t\t}\n-\t\t\tcatch (JSONException e) {\n-\t\t\t\tlog.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n-\t\t\t}\n-\t\t}\n-\n-\t\tlog.info(\n-\t\t\t\"{} {} {} within {}\",\n-\t\t\tstate,\n-\t\t\tqueryId,\n-\t\t\tthis.getClass().getSimpleName(),\n-\t\t\t(startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n-\t}\n-\n-\tpublic void awaitDone(int time, TimeUnit unit) {\n-\t\tif (state == ExecutionState.RUNNING) {\n-\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n-\t\t}\n-\t}\n-\n-\tpublic ExecutionStatus buildStatus(URLBuilder url, User user) {\n-\t\treturn ExecutionStatus.builder().label(label).id(getId()).own(true).createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n-\t\t\t.requiredTime((startTime != null && finishTime != null) ? ChronoUnit.MILLIS.between(startTime, finishTime) : null).status(state)\n-\t\t\t.owner(Optional.ofNullable(owner).orElse(null))\n-\t\t\t.ownerName(\n-\t\t\t\tOptional.ofNullable(owner).map(owner -> namespace.getStorage().getMetaStorage().getUser(owner)).map(User::getLabel)\n-\t\t\t\t\t.orElse(null))\n-\t\t\t.resultUrl(\n-\t\t\t\tisReadyToDownload(url, user)\n-\t\t\t\t\t? url.set(ResourceConstants.DATASET, dataset.getName()).set(ResourceConstants.QUERY, getId().toString())\n-\t\t\t\t\t\t.to(ResultCSVResource.GET_CSV_PATH).get()\n-\t\t\t\t\t: null)\n-\t\t\t.build();\n-\t}\n-\n-\tpublic boolean isReadyToDownload(URLBuilder url, User user) {\n-\t\t/* We cannot rely on checking this.dataset only for download permission because the actual execution might also fired queries on another dataset.\n-\t\t * The member this.dataset only associates the \n-\t\t */\n-\t\tboolean isPermittedDownload = user.isPermittedAll(getUsedNamespacedIds().stream()\n-\t\t\t.map(NamespacedId::getDataset)\n-\t\t\t.map(d -> DatasetPermission.onInstance(Ability.DOWNLOAD, d))\n-\t\t\t.collect(Collectors.toList()));\n-\t\treturn url != null && state != ExecutionState.NEW && isPermittedDownload;\n-\t}\n-\n-\tpublic ExecutionStatus buildStatus(User user) {\n-\t\treturn buildStatus(null, user);\n-\t}\n-\n-\tpublic abstract ManagedQuery toResultQuery();\n-\t\n-\t/**\n-\t * Gives all {@link NamespacedId}s that were required in the execution.\n-\t * @return A List of all {@link NamespacedId}s needed for the execution.\n-\t */\n-\t@JsonIgnore\n-\tpublic abstract Set<NamespacedId> getUsedNamespacedIds();\n-}\n+    protected DatasetId dataset;\n+    protected UUID queryId = UUID.randomUUID();\n+    @NotEmpty\n+    protected String label = queryId.toString();\n+    protected LocalDateTime creationTime = LocalDateTime.now();\n+    @Nullable\n+    protected UserId owner;\n+    protected boolean machineGenerated;\n+\n+    // we don't want to store or send query results or other result metadata\n+    @JsonIgnore\n+    protected transient ExecutionState state = ExecutionState.NEW;\n+    @JsonIgnore\n+    private final transient CountDownLatch execution = new CountDownLatch(1);\n+    @JsonIgnore\n+    private transient LocalDateTime startTime;\n+    @JsonIgnore\n+    protected transient LocalDateTime finishTime;\n+    @JsonIgnore\n+    protected transient Namespace namespace;\n+\n+    public ManagedExecution(Namespace namespace, UserId owner) {\n+        this.owner = owner;\n+        initExecutable(namespace);\n+    }\n+\n+    public void initExecutable(@NonNull Namespace namespace) {\n+        this.namespace = namespace;\n+        this.dataset = namespace.getStorage().getDataset()\n+                                             .getId();\n+    }\n+\n+    @Override\n+    public ManagedExecutionId createId() {\n+        return new ManagedExecutionId(dataset, queryId);\n+    }\n+\n+    protected void fail() {\n+        synchronized (execution) {\n+            state = ExecutionState.FAILED;\n+            finishTime = LocalDateTime.now();\n+            execution.countDown();\n+        }\n+    }\n+\n+    public void start() {\n+        startTime = LocalDateTime.now();\n+        state = ExecutionState.RUNNING;\n+    }\n+\n+    protected void finish() {\n+        if(getState() == ExecutionState.NEW)\n+            log.error(\"Query {} was never run.\", getId());\n+        synchronized (execution) {\n+            finishTime = LocalDateTime.now();\n+            state = ExecutionState.DONE;\n+            execution.countDown();\n+            try {\n+                namespace.getStorage().getMetaStorage().updateExecution(this);\n+            }\n+            catch (JSONException e) {\n+                log.error(\"Failed to store {} after finishing: {}\", getClass().getSimpleName(), this, e);\n+            }\n+        }\n+        log.info(\"{} {} {} within {}\", state, queryId, this.getClass()\n+                                                           .getSimpleName(), (startTime != null && finishTime != null) ? Duration.between(startTime, finishTime) : null);\n+    }\n+\n+    public void awaitDone(int time, TimeUnit unit) {\n+        if(state == ExecutionState.RUNNING) {\n+            Uninterruptibles.awaitUninterruptibly(execution, time, unit);\n+        }\n+    }\n+\n+    public ExecutionStatus buildStatus(URLBuilder url, User user) {\n+        return ExecutionStatus.builder().label(label)\n+                                        .id(getId())\n+                                        .own(true)\n+                                        .createdAt(getCreationTime().atZone(ZoneId.systemDefault()))\n+                                        .requiredTime((startTime != null && finishTime != null) ? ChronoUnit.MILLIS.between(startTime, finishTime) : null)\n+                                        .status(state)\n+                                        .owner(Optional.ofNullable(owner).orElse(null))\n+                                        .ownerName(Optional.ofNullable(owner).map(owner->namespace.getStorage().getMetaStorage()\n+                                                                                                               .getUser(owner))\n+                                                                             .map(User::getLabel)\n+                                                                             .orElse(null))\n+                                        .resultUrl(isReadyToDownload(url, user) ? url.set(ResourceConstants.DATASET, dataset.getName()).set(ResourceConstants.QUERY, getId().toString())\n+                                                                                                                                       .to(ResultCSVResource.GET_CSV_PATH)\n+                                                                                                                                       .get() : null)\n+                                        .build();\n+    }\n+\n+    public boolean isReadyToDownload(URLBuilder url, User user) {\n+        /* We cannot rely on checking this.dataset only for download permission because the actual execution might also fired queries on another dataset.\n+         * The member this.dataset only associates the \n+         */\n+        boolean isPermittedDownload = user.isPermittedAll(getUsedNamespacedIds().stream()\n+                                                                                .map(NamespacedId::getDataset)\n+                                                                                .map(d->DatasetPermission.onInstance(Ability.DOWNLOAD, d))\n+                                                                                .collect(Collectors.toList()));\n+        return url != null && state != ExecutionState.NEW && isPermittedDownload;\n+    }\n+\n+    public ExecutionStatus buildStatus(User user) {\n+        return buildStatus(null, user);\n+    }\n+\n+    public abstract ManagedQuery toResultQuery();\n+    \n+    /**\n+     * Gives all {@link NamespacedId}s that were required in the execution.\n+     * @return A List of all {@link NamespacedId}s needed for the execution.\n+     */\n+    @JsonIgnore\n+    public abstract Set<NamespacedId> getUsedNamespacedIds();\n+}\n\\ No newline at end of file\n",
            "diff_size": 122
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/219/ManagedExecution.java\nindex 1a89c5888b..809d0f67f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/219/ManagedExecution.java\n@@ -159,7 +159,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t}\n \n \tpublic abstract ManagedQuery toResultQuery();\n-\t\n+\n \t/**\n \t * Gives all {@link NamespacedId}s that were required in the execution.\n \t * @return A List of all {@link NamespacedId}s needed for the execution.\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/219/ManagedExecution.java\nindex 1a89c5888b..809d0f67f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/219/ManagedExecution.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/219/ManagedExecution.java\n@@ -159,7 +159,7 @@ public abstract class ManagedExecution extends IdentifiableImpl<ManagedExecution\n \t}\n \n \tpublic abstract ManagedQuery toResultQuery();\n-\t\n+\n \t/**\n \t * Gives all {@link NamespacedId}s that were required in the execution.\n \t * @return A List of all {@link NamespacedId}s needed for the execution.\n",
            "diff_size": 1
        }
    ]
}