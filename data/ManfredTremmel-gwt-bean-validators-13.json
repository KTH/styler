{
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "14",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * the License.\n */\npackage org.springframework.data.domain;\n\nimport org.springframework.lang.Nullable;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/13/SliceImpl.java\nindex 271bfb8ddc..6b5a851201 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/13/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/13/SliceImpl.java\nindex 271bfb8ddc..e73a2694e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/13/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n@@ -34,9 +35,9 @@ public class SliceImpl<T> extends Chunk<T> {\n   /**\n    * Creates a new {@link Slice} with the given content and {@link Pageable}.\n    *\n-   * @param content the content of this {@link Slice}, must not be {@literal null}.\n+   * @param content  the content of this {@link Slice}, must not be {@literal null}.\n    * @param pageable the paging information, can be {@literal null}.\n-   * @param hasNext whether there's another slice following the current one.\n+   * @param hasNext  whether there's another slice following the current one.\n    */\n   public SliceImpl(final List<T> content, final Pageable pageable, final boolean hasNext) {\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/13/SliceImpl.java\nindex 271bfb8ddc..3a9df78e2e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/13/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n@@ -39,8 +40,7 @@ public class SliceImpl<T> extends Chunk<T> {\n    * @param hasNext whether there's another slice following the current one.\n    */\n   public SliceImpl(final List<T> content, final Pageable pageable, final boolean hasNext) {\n-\n-    super(content, pageable);\n+  super(content, pageable);\n \n     this.hasNext = hasNext;\n     this.pageable = pageable;\n@@ -85,8 +85,7 @@ public class SliceImpl<T> extends Chunk<T> {\n    */\n   @Override\n   public String toString() {\n-\n-    String contentType = \"UNKNOWN\";\n+  String contentType = \"UNKNOWN\";\n     final List<T> content = getContent();\n \n     if (content.size() > 0) {\n@@ -124,12 +123,11 @@ public class SliceImpl<T> extends Chunk<T> {\n    */\n   @Override\n   public int hashCode() {\n-\n-    int result = 17;\n+  int result = 17;\n \n     result += 31 * (this.hasNext ? 1 : 0);\n     result += 31 * super.hashCode();\n \n     return result;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/13/SliceImpl.java\nindex 271bfb8ddc..073d1bd30b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/13/SliceImpl.java\n@@ -14,7 +14,6 @@\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n-\n import java.util.List;\n import java.util.function.Function;\n \n@@ -24,12 +23,12 @@ import java.util.function.Function;\n  * @author Oliver Gierke\n  * @since 1.8\n  */\n-public class SliceImpl<T> extends Chunk<T> {\n \n-  private static final long serialVersionUID = 867755909294344406L;\n \n-  private final boolean hasNext;\n-  private final Pageable pageable;\n+public class SliceImpl<T> extends Chunk<T> {\n+    private static final long serialVersionUID = 867755909294344406L;\n+    private final boolean hasNext;\n+    private final Pageable pageable;\n \n   /**\n    * Creates a new {@link Slice} with the given content and {@link Pageable}.\n@@ -38,13 +37,14 @@ public class SliceImpl<T> extends Chunk<T> {\n    * @param pageable the paging information, can be {@literal null}.\n    * @param hasNext whether there's another slice following the current one.\n    */\n-  public SliceImpl(final List<T> content, final Pageable pageable, final boolean hasNext) {\n \n-    super(content, pageable);\n \n+    public SliceImpl(final List<T> content, final Pageable pageable,\n+        final boolean hasNext) {\n+    super(content, pageable);\n     this.hasNext = hasNext;\n     this.pageable = pageable;\n-  }\n+    }\n \n   /**\n    * Creates a new {@link SliceImpl} with the given content. This will result in the created\n@@ -52,19 +52,22 @@ public class SliceImpl<T> extends Chunk<T> {\n    *\n    * @param content must not be {@literal null}.\n    */\n-  public SliceImpl(final List<T> content) {\n+\n+\n+    public SliceImpl(final List<T> content) {\n     this(content, Pageable.unpaged(), false);\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see org.springframework.data.domain.Slice#hasNext()\n    */\n-  @Override\n-  public boolean hasNext() {\n+\n+    @Override\n+    public boolean hasNext() {\n     return this.hasNext;\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -73,63 +76,58 @@ public class SliceImpl<T> extends Chunk<T> {\n    * org.springframework.data.domain.Slice#transform(org.springframework.core.convert.converter.\n    * Converter)\n    */\n-  @Override\n-  public <U> Slice<U> map(final Function<? super T, ? extends U> converter) {\n+\n+    @Override\n+    public <U> Slice<U> map(final Function<? super T, ? extends U> converter) {\n     return new SliceImpl<>(this.getConvertedContent(converter), this.pageable, this.hasNext);\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see java.lang.Object#toString()\n    */\n-  @Override\n-  public String toString() {\n \n+    @Override\n+    public String toString() {\n     String contentType = \"UNKNOWN\";\n     final List<T> content = getContent();\n-\n     if (content.size() > 0) {\n-      contentType = content.get(0).getClass().getName();\n+        contentType = content.get(0).getClass().getName();\n     }\n-\n     return \"Slice \" + getNumber() + \" containing \" + contentType + \" instances\";\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see java.lang.Object#equals(java.lang.Object)\n    */\n-  @Override\n-  public boolean equals(@Nullable final Object obj) {\n \n+    @Override\n+    public boolean equals(@Nullable final Object obj) {\n     if (this == obj) {\n-      return true;\n+        return true;\n     }\n-\n     if (!(obj instanceof SliceImpl<?>)) {\n-      return false;\n+        return false;\n     }\n \n     final SliceImpl<?> that = (SliceImpl<?>) obj;\n-\n     return this.hasNext == that.hasNext && super.equals(obj);\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see java.lang.Object#hashCode()\n    */\n-  @Override\n-  public int hashCode() {\n \n+    @Override\n+    public int hashCode() {\n     int result = 17;\n-\n     result += 31 * (this.hasNext ? 1 : 0);\n     result += 31 * super.hashCode();\n-\n     return result;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/13/SliceImpl.java\nindex 271bfb8ddc..6b5a851201 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/13/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/13/SliceImpl.java\nindex 271bfb8ddc..6b5a851201 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/13/SliceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/13/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n",
            "diff_size": 1
        }
    ]
}