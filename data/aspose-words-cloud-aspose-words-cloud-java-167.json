{
    "error_id": "167",
    "information": {
        "errors": [
            {
                "line": "141",
                "column": "64",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n    return\n        Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n        Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/167/XpsSaveOptionsData.java\nindex 65cdfc99f9..4c46c1acc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/167/XpsSaveOptionsData.java\n@@ -138,7 +138,7 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n+    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData) o;\n     return\n         Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n         Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/167/XpsSaveOptionsData.java\nindex 65cdfc99f9..1be6b87242 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/167/XpsSaveOptionsData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,104 +50,109 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Container class for xps save options.\")\n public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n-    @SerializedName(\"BookmarksOutlineLevel\")\n-    private Integer bookmarksOutlineLevel = null;\n+  @SerializedName(\"BookmarksOutlineLevel\")\n+  private Integer bookmarksOutlineLevel = null;\n \n-    @SerializedName(\"HeadingsOutlineLevels\")\n-    private Integer headingsOutlineLevels = null;\n+  @SerializedName(\"HeadingsOutlineLevels\")\n+  private Integer headingsOutlineLevels = null;\n \n-    @SerializedName(\"OutlineOptions\")\n-    private OutlineOptionsData outlineOptions = null;\n+  @SerializedName(\"OutlineOptions\")\n+  private OutlineOptionsData outlineOptions = null;\n \n-    @SerializedName(\"UseBookFoldPrintingSettings\")\n-    private Boolean useBookFoldPrintingSettings = null;\n-    public XpsSaveOptionsData bookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n-        this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n-        return this;\n-    }\n+  @SerializedName(\"UseBookFoldPrintingSettings\")\n+  private Boolean useBookFoldPrintingSettings = null;\n \n-    /**\n-     * Gets or sets specifies the level in the XPS document outline at which to display Word bookmarks.\n-    * @return bookmarksOutlineLevel\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets specifies the level in the XPS document outline at which to display Word bookmarks.\")\n-    public Integer getBookmarksOutlineLevel() {\n-        return bookmarksOutlineLevel;\n-    }\n+  public XpsSaveOptionsData bookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n+    this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n+    return this;\n+  }\n \n-    public void setBookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n-        this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n-    }\n+  /**\n+   * Gets or sets specifies the level in the XPS document outline at which to display Word bookmarks.\n+   *\n+   * @return bookmarksOutlineLevel\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets specifies the level in the XPS document outline at which to display Word bookmarks.\")\n+  public Integer getBookmarksOutlineLevel() {\n+    return bookmarksOutlineLevel;\n+  }\n \n-    public XpsSaveOptionsData headingsOutlineLevels(Integer headingsOutlineLevels) {\n-        this.headingsOutlineLevels = headingsOutlineLevels;\n-        return this;\n-    }\n+  public void setBookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n+    this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n+  }\n \n-    /**\n-     * Gets or sets specifies how many levels of headings (paragraphs formatted with the Heading styles) to include in the XPS document outline.\n-    * @return headingsOutlineLevels\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets specifies how many levels of headings (paragraphs formatted with the Heading styles) to include in the XPS document outline.\")\n-    public Integer getHeadingsOutlineLevels() {\n-        return headingsOutlineLevels;\n-    }\n+  public XpsSaveOptionsData headingsOutlineLevels(Integer headingsOutlineLevels) {\n+    this.headingsOutlineLevels = headingsOutlineLevels;\n+    return this;\n+  }\n \n-    public void setHeadingsOutlineLevels(Integer headingsOutlineLevels) {\n-        this.headingsOutlineLevels = headingsOutlineLevels;\n-    }\n+  /**\n+   * Gets or sets specifies how many levels of headings (paragraphs formatted with the Heading styles) to include in the XPS document outline.\n+   *\n+   * @return headingsOutlineLevels\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets specifies how many levels of headings (paragraphs formatted with the Heading styles) to include in the XPS document outline.\")\n+  public Integer getHeadingsOutlineLevels() {\n+    return headingsOutlineLevels;\n+  }\n \n-    public XpsSaveOptionsData outlineOptions(OutlineOptionsData outlineOptions) {\n-        this.outlineOptions = outlineOptions;\n-        return this;\n-    }\n+  public void setHeadingsOutlineLevels(Integer headingsOutlineLevels) {\n+    this.headingsOutlineLevels = headingsOutlineLevels;\n+  }\n \n-    /**\n-     * Gets or sets allows to specify outline options.\n-    * @return outlineOptions\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets allows to specify outline options.\")\n-    public OutlineOptionsData getOutlineOptions() {\n-        return outlineOptions;\n-    }\n+  public XpsSaveOptionsData outlineOptions(OutlineOptionsData outlineOptions) {\n+    this.outlineOptions = outlineOptions;\n+    return this;\n+  }\n \n-    public void setOutlineOptions(OutlineOptionsData outlineOptions) {\n-        this.outlineOptions = outlineOptions;\n-    }\n+  /**\n+   * Gets or sets allows to specify outline options.\n+   *\n+   * @return outlineOptions\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets allows to specify outline options.\")\n+  public OutlineOptionsData getOutlineOptions() {\n+    return outlineOptions;\n+  }\n \n-    public XpsSaveOptionsData useBookFoldPrintingSettings(Boolean useBookFoldPrintingSettings) {\n-        this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n-        return this;\n-    }\n+  public void setOutlineOptions(OutlineOptionsData outlineOptions) {\n+    this.outlineOptions = outlineOptions;\n+  }\n \n-    /**\n-     * Gets or sets determines whether the document should be saved using a booklet printing layout.\n-    * @return useBookFoldPrintingSettings\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets determines whether the document should be saved using a booklet printing layout.\")\n-    public Boolean getUseBookFoldPrintingSettings() {\n-        return useBookFoldPrintingSettings;\n-    }\n+  public XpsSaveOptionsData useBookFoldPrintingSettings(Boolean useBookFoldPrintingSettings) {\n+    this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n+    return this;\n+  }\n \n-    public void setUseBookFoldPrintingSettings(Boolean useBookFoldPrintingSettings) {\n-        this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n-    }\n+  /**\n+   * Gets or sets determines whether the document should be saved using a booklet printing layout.\n+   *\n+   * @return useBookFoldPrintingSettings\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets determines whether the document should be saved using a booklet printing layout.\")\n+  public Boolean getUseBookFoldPrintingSettings() {\n+    return useBookFoldPrintingSettings;\n+  }\n+\n+  public void setUseBookFoldPrintingSettings(Boolean useBookFoldPrintingSettings) {\n+    this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData) o;\n     return\n         Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n-        Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n-        Objects.equals(this.outlineOptions, xpsSaveOptionsData.outlineOptions) &&\n-        Objects.equals(this.useBookFoldPrintingSettings, xpsSaveOptionsData.useBookFoldPrintingSettings) &&\n-        super.equals(o);\n+            Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n+            Objects.equals(this.outlineOptions, xpsSaveOptionsData.outlineOptions) &&\n+            Objects.equals(this.useBookFoldPrintingSettings, xpsSaveOptionsData.useBookFoldPrintingSettings) &&\n+            super.equals(o);\n   }\n \n   @Override\n",
            "diff_size": 114
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "143",
                    "column": "60",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/167/XpsSaveOptionsData.java\nindex 65cdfc99f9..34559920cb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/167/XpsSaveOptionsData.java\n@@ -58,7 +58,8 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n \n     @SerializedName(\"UseBookFoldPrintingSettings\")\n     private Boolean useBookFoldPrintingSettings = null;\n-    public XpsSaveOptionsData bookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n+\n+public XpsSaveOptionsData bookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n         this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n         return this;\n     }\n@@ -134,13 +135,13 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n-    return\n-        Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n+\n+XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n+    return Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n         Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n         Objects.equals(this.outlineOptions, xpsSaveOptionsData.outlineOptions) &&\n         Objects.equals(this.useBookFoldPrintingSettings, xpsSaveOptionsData.useBookFoldPrintingSettings) &&\n@@ -175,4 +176,4 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/167/XpsSaveOptionsData.java\nindex 65cdfc99f9..4ca05f35b2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/167/XpsSaveOptionsData.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Container class for xps save options.\n  */\n+\n+\n @ApiModel(description = \"Container class for xps save options.\")\n+\n public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n     @SerializedName(\"BookmarksOutlineLevel\")\n     private Integer bookmarksOutlineLevel = null;\n@@ -58,102 +61,123 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n \n     @SerializedName(\"UseBookFoldPrintingSettings\")\n     private Boolean useBookFoldPrintingSettings = null;\n+\n     public XpsSaveOptionsData bookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n-        this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n-        return this;\n+    this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n+    return this;\n     }\n \n     /**\n      * Gets or sets specifies the level in the XPS document outline at which to display Word bookmarks.\n     * @return bookmarksOutlineLevel\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets specifies the level in the XPS document outline at which to display Word bookmarks.\")\n     public Integer getBookmarksOutlineLevel() {\n-        return bookmarksOutlineLevel;\n+    return bookmarksOutlineLevel;\n     }\n \n+\n     public void setBookmarksOutlineLevel(Integer bookmarksOutlineLevel) {\n-        this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n+    this.bookmarksOutlineLevel = bookmarksOutlineLevel;\n     }\n \n+\n     public XpsSaveOptionsData headingsOutlineLevels(Integer headingsOutlineLevels) {\n-        this.headingsOutlineLevels = headingsOutlineLevels;\n-        return this;\n+    this.headingsOutlineLevels = headingsOutlineLevels;\n+    return this;\n     }\n \n     /**\n      * Gets or sets specifies how many levels of headings (paragraphs formatted with the Heading styles) to include in the XPS document outline.\n     * @return headingsOutlineLevels\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets specifies how many levels of headings (paragraphs formatted with the Heading styles) to include in the XPS document outline.\")\n     public Integer getHeadingsOutlineLevels() {\n-        return headingsOutlineLevels;\n+    return headingsOutlineLevels;\n     }\n \n+\n     public void setHeadingsOutlineLevels(Integer headingsOutlineLevels) {\n-        this.headingsOutlineLevels = headingsOutlineLevels;\n+    this.headingsOutlineLevels = headingsOutlineLevels;\n     }\n \n+\n     public XpsSaveOptionsData outlineOptions(OutlineOptionsData outlineOptions) {\n-        this.outlineOptions = outlineOptions;\n-        return this;\n+    this.outlineOptions = outlineOptions;\n+    return this;\n     }\n \n     /**\n      * Gets or sets allows to specify outline options.\n     * @return outlineOptions\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets allows to specify outline options.\")\n     public OutlineOptionsData getOutlineOptions() {\n-        return outlineOptions;\n+    return outlineOptions;\n     }\n \n+\n     public void setOutlineOptions(OutlineOptionsData outlineOptions) {\n-        this.outlineOptions = outlineOptions;\n+    this.outlineOptions = outlineOptions;\n     }\n \n+\n     public XpsSaveOptionsData useBookFoldPrintingSettings(Boolean useBookFoldPrintingSettings) {\n-        this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n-        return this;\n+    this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n+    return this;\n     }\n \n     /**\n      * Gets or sets determines whether the document should be saved using a booklet printing layout.\n     * @return useBookFoldPrintingSettings\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets determines whether the document should be saved using a booklet printing layout.\")\n     public Boolean getUseBookFoldPrintingSettings() {\n-        return useBookFoldPrintingSettings;\n+    return useBookFoldPrintingSettings;\n     }\n \n+\n     public void setUseBookFoldPrintingSettings(Boolean useBookFoldPrintingSettings) {\n-        this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n+    this.useBookFoldPrintingSettings = useBookFoldPrintingSettings;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n-    return\n-        Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n+\n+        XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData) o;\n+        return Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n         Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n         Objects.equals(this.outlineOptions, xpsSaveOptionsData.outlineOptions) &&\n-        Objects.equals(this.useBookFoldPrintingSettings, xpsSaveOptionsData.useBookFoldPrintingSettings) &&\n-        super.equals(o);\n-  }\n+            Objects.equals(this.useBookFoldPrintingSettings, xpsSaveOptionsData.useBookFoldPrintingSettings) &&\n+            super.equals(o);\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(bookmarksOutlineLevel, headingsOutlineLevels, outlineOptions, useBookFoldPrintingSettings, super.hashCode());\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class XpsSaveOptionsData {\\n\");\n     sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n@@ -163,16 +187,19 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n     sb.append(\"    useBookFoldPrintingSettings: \").append(toIndentedString(useBookFoldPrintingSettings)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/167/XpsSaveOptionsData.java\nindex 65cdfc99f9..4c46c1acc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/167/XpsSaveOptionsData.java\n@@ -138,7 +138,7 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n+    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData) o;\n     return\n         Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n         Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/167/XpsSaveOptionsData.java\nindex 65cdfc99f9..d1dff082f2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/167/XpsSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/167/XpsSaveOptionsData.java\n@@ -138,7 +138,9 @@ public class XpsSaveOptionsData extends FixedPageSaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData)o;\n+    XpsSaveOptionsData xpsSaveOptionsData = (XpsSaveOptionsData\n+\n+    ) o;\n     return\n         Objects.equals(this.bookmarksOutlineLevel, xpsSaveOptionsData.bookmarksOutlineLevel) &&\n         Objects.equals(this.headingsOutlineLevels, xpsSaveOptionsData.headingsOutlineLevels) &&\n",
            "diff_size": 3
        }
    ]
}