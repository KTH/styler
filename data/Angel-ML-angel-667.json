{
    "error_id": "667",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/667/TMatrix.java\nindex 54e26cb746..9ef12513cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/667/TMatrix.java\n@@ -21,100 +21,100 @@ package com.tencent.angel.ml.math;\n  * The base matrix,represented a multidimensional values.\n  */\n public abstract class TMatrix extends TUpdate {\n-  /**\n-   * The Matrix id.\n-   */\n-  protected int matrixId;\n-  /**\n-   * The Row.\n-   */\n-  protected int row;\n-  /**\n-   * The Col.\n-   */\n-  protected int col;\n+    /**\n+     * The Matrix id.\n+     */\n+    protected int matrixId;\n+    /**\n+     * The Row.\n+     */\n+    protected int row;\n+    /**\n+     * The Col.\n+     */\n+    protected int col;\n \n-  /**\n-   * Instantiates a new matrix.\n-   */\n-  public TMatrix() {\n-    this.matrixId = -1;\n-    this.row = -1;\n-    this.col = -1;\n-  }\n+    /**\n+     * Instantiates a new matrix.\n+     */\n+    public TMatrix() {\n+        this.matrixId = -1;\n+        this.row = -1;\n+        this.col = -1;\n+    }\n \n-  /**\n-   * Instantiates a new matrix.\n-   *\n-   * @param row the row\n-   * @param col the col\n-   */\n-  public TMatrix(int row, int col) {\n-    this.matrixId = -1;\n-    this.row = row;\n-    this.col = col;\n-  }\n+    /**\n+     * Instantiates a new matrix.\n+     *\n+     * @param row the row\n+     * @param col the col\n+     */\n+    public TMatrix(int row, int col) {\n+        this.matrixId = -1;\n+        this.row = row;\n+        this.col = col;\n+    }\n \n-  @Override\n-  public TMatrix setMatrixId(int matrixId) {\n-    this.matrixId = matrixId;\n-    return this;\n-  }\n+    @Override\n+    public TMatrix setMatrixId(int matrixId) {\n+        this.matrixId = matrixId;\n+        return this;\n+    }\n \n-  /**\n-   * Gets row num.\n-   *\n-   * @return the row num\n-   */\n-  public int getRowNum() {\n-    return row;\n-  }\n+    /**\n+     * Gets row num.\n+     *\n+     * @return the row num\n+     */\n+    public int getRowNum() {\n+        return row;\n+    }\n \n-  /**\n-   * Gets col num.\n-   *\n-   * @return the col num\n-   */\n-  public int getColNum() {\n-    return col;\n-  }\n+    /**\n+     * Gets col num.\n+     *\n+     * @return the col num\n+     */\n+    public int getColNum() {\n+        return col;\n+    }\n \n-  @Override\n-  public int getMatrixId() {\n-    return matrixId;\n-  }\n+    @Override\n+    public int getMatrixId() {\n+        return matrixId;\n+    }\n \n-  /**\n-   * Gets sparsity factor.\n-   *\n-   * @return the sparsity\n-   */\n-  public abstract double sparsity();\n+    /**\n+     * Gets sparsity factor.\n+     *\n+     * @return the sparsity\n+     */\n+    public abstract double sparsity();\n \n-  /**\n-   * Size of matrix,normally <code>rows * columns</code>.\n-   *\n-   * @return the size\n-   */\n-  public abstract int size();\n+    /**\n+     * Size of matrix,normally <code>rows * columns</code>.\n+     *\n+     * @return the size\n+     */\n+    public abstract int size();\n \n-  /**\n-   * Clear.\n-   */\n-  public abstract void clear();\n+    /**\n+     * Clear.\n+     */\n+    public abstract void clear();\n \n-  /**\n-   * Gets non zero num of matrix\n-   *\n-   * @return the result\n-   */\n-  public abstract int nonZeroNum();\n+    /**\n+     * Gets non zero num of matrix\n+     *\n+     * @return the result\n+     */\n+    public abstract int nonZeroNum();\n \n-  /**\n-   * Gets specified vector.\n-   *\n-   * @param rowId the row id\n-   * @return the vector if exists\n-   */\n-  public abstract TVector getTVector(int rowId);\n+    /**\n+     * Gets specified vector.\n+     *\n+     * @param rowId the row id\n+     * @return the vector if exists\n+     */\n+    public abstract TVector getTVector(int rowId);\n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/667/TMatrix.java\nindex 54e26cb746..054b8f05ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/667/TMatrix.java\n@@ -117,4 +117,4 @@ public abstract class TMatrix extends TUpdate {\n    * @return the vector if exists\n    */\n   public abstract TVector getTVector(int rowId);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 30.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 85.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 100.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 114.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 122.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 131.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/667/TMatrix.java\nindex 54e26cb746..d0ff25ecc4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/667/TMatrix.java\n@@ -20,28 +20,32 @@ package com.tencent.angel.ml.math;\n /**\n  * The base matrix,represented a multidimensional values.\n  */\n+\n+\n public abstract class TMatrix extends TUpdate {\n   /**\n    * The Matrix id.\n    */\n-  protected int matrixId;\n+\n+    protected int matrixId;\n   /**\n    * The Row.\n    */\n-  protected int row;\n+    protected int row;\n   /**\n    * The Col.\n    */\n-  protected int col;\n+    protected int col;\n \n   /**\n    * Instantiates a new matrix.\n    */\n-  public TMatrix() {\n+\n+    public TMatrix() {\n     this.matrixId = -1;\n     this.row = -1;\n     this.col = -1;\n-  }\n+    }\n \n   /**\n    * Instantiates a new matrix.\n@@ -49,66 +53,73 @@ public abstract class TMatrix extends TUpdate {\n    * @param row the row\n    * @param col the col\n    */\n-  public TMatrix(int row, int col) {\n+\n+    public TMatrix(int row, int col) {\n     this.matrixId = -1;\n     this.row = row;\n     this.col = col;\n-  }\n+    }\n \n-  @Override\n-  public TMatrix setMatrixId(int matrixId) {\n+    @Override\n+    public TMatrix setMatrixId(int matrixId) {\n     this.matrixId = matrixId;\n     return this;\n-  }\n+    }\n \n   /**\n    * Gets row num.\n    *\n    * @return the row num\n    */\n-  public int getRowNum() {\n+\n+    public int getRowNum() {\n     return row;\n-  }\n+    }\n \n   /**\n    * Gets col num.\n    *\n    * @return the col num\n    */\n-  public int getColNum() {\n+\n+    public int getColNum() {\n     return col;\n-  }\n+    }\n \n-  @Override\n-  public int getMatrixId() {\n+    @Override\n+    public int getMatrixId() {\n     return matrixId;\n-  }\n+    }\n \n   /**\n    * Gets sparsity factor.\n    *\n    * @return the sparsity\n    */\n-  public abstract double sparsity();\n+\n+    public abstract double sparsity();\n \n   /**\n    * Size of matrix,normally <code>rows * columns</code>.\n    *\n    * @return the size\n    */\n-  public abstract int size();\n+\n+    public abstract int size();\n \n   /**\n    * Clear.\n    */\n-  public abstract void clear();\n+\n+    public abstract void clear();\n \n   /**\n    * Gets non zero num of matrix\n    *\n    * @return the result\n    */\n-  public abstract int nonZeroNum();\n+\n+    public abstract int nonZeroNum();\n \n   /**\n    * Gets specified vector.\n@@ -116,5 +127,7 @@ public abstract class TMatrix extends TUpdate {\n    * @param rowId the row id\n    * @return the vector if exists\n    */\n-  public abstract TVector getTVector(int rowId);\n-}\n+\n+    public abstract TVector getTVector(int rowId);\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "No trailing whitespace allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/667/TMatrix.java\nindex 54e26cb746..7057601168 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/667/TMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/667/TMatrix.java\n@@ -14,107 +14,109 @@\n  * limitations under the License.\n  */\n \n-package com.tencent.angel.ml.math;\n+package\n+com.tencent.angel.ml.math;\n \n \n-/**\n+ /**\n  * The base matrix,represented a multidimensional values.\n  */\n-public abstract class TMatrix extends TUpdate {\n-  /**\n+ public abstract class TMatrix extends TUpdate {\n+   /**\n    * The Matrix id.\n    */\n-  protected int matrixId;\n-  /**\n+   protected int matrixId;\n+   /**\n    * The Row.\n    */\n-  protected int row;\n-  /**\n+   protected int row;\n+   /**\n    * The Col.\n    */\n-  protected int col;\n+   protected int col;\n \n-  /**\n+   /**\n    * Instantiates a new matrix.\n    */\n-  public TMatrix() {\n-    this.matrixId = -1;\n-    this.row = -1;\n-    this.col = -1;\n-  }\n+   public TMatrix() {\n+     this.matrixId = -1;\n+     this.row = -1;\n+     this.col = -1;\n+   }\n \n-  /**\n+   /**\n    * Instantiates a new matrix.\n    *\n    * @param row the row\n    * @param col the col\n    */\n-  public TMatrix(int row, int col) {\n-    this.matrixId = -1;\n-    this.row = row;\n-    this.col = col;\n-  }\n+   public TMatrix(int row, int col) {\n+     this.matrixId = -1;\n+     this.row = row;\n+     this.col = col;\n+   }\n \n-  @Override\n-  public TMatrix setMatrixId(int matrixId) {\n-    this.matrixId = matrixId;\n-    return this;\n-  }\n+   @Override\n+   public TMatrix setMatrixId(int matrixId) {\n+     this.matrixId = matrixId;\n+     return this;\n+   }\n \n-  /**\n+   /**\n    * Gets row num.\n    *\n    * @return the row num\n    */\n-  public int getRowNum() {\n-    return row;\n-  }\n+   public int getRowNum() {\n+     return row;\n+   }\n \n-  /**\n+   /**\n    * Gets col num.\n    *\n    * @return the col num\n    */\n-  public int getColNum() {\n-    return col;\n-  }\n+   public int getColNum() {\n+     return col;\n+   }\n \n-  @Override\n-  public int getMatrixId() {\n-    return matrixId;\n-  }\n+   @Override\n+   public int getMatrixId() {\n+     return matrixId;\n+   }\n \n-  /**\n+   /**\n    * Gets sparsity factor.\n    *\n    * @return the sparsity\n    */\n-  public abstract double sparsity();\n+   public abstract double sparsity();\n \n-  /**\n+   /**\n    * Size of matrix,normally <code>rows * columns</code>.\n    *\n    * @return the size\n    */\n-  public abstract int size();\n+   public abstract int size();\n \n-  /**\n+   /**\n    * Clear.\n    */\n-  public abstract void clear();\n+   public abstract void clear();\n \n-  /**\n+   /**\n    * Gets non zero num of matrix\n    *\n    * @return the result\n    */\n-  public abstract int nonZeroNum();\n+   public abstract int nonZeroNum();\n \n-  /**\n+   /**\n    * Gets specified vector.\n    *\n    * @param rowId the row id\n    * @return the vector if exists\n    */\n-  public abstract TVector getTVector(int rowId);\n-}\n+   public abstract TVector getTVector(int rowId);\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}