{
    "error_id": "246",
    "information": {
        "errors": [
            {
                "line": "34",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tprivate AuthorizationController(\n\t\tMasterMetaStorage storage,\n\t\tList<ConqueryRealm> realms, \n\t\tAuthenticator<AuthenticationToken, User> authenticator) {\n\t\tthis.authenticator = authenticator;\n\t\tthis.storage = storage;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/246/AuthorizationController.java\nindex 44ebc036f4..fac96d19fb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/246/AuthorizationController.java\n@@ -25,13 +25,13 @@ public class AuthorizationController {\n \tprivate MasterMetaStorage storage;\n \t@Getter\n \tprivate List<ConqueryRealm> realms;\n-\t\n-\t\n+\n+\n \tprivate static AuthorizationController INSTANCE = null;\n-\t\n+\n \tprivate AuthorizationController(\n \t\tMasterMetaStorage storage,\n-\t\tList<ConqueryRealm> realms, \n+\t\tList<ConqueryRealm> realms,\n \t\tAuthenticator<AuthenticationToken, User> authenticator) {\n \t\tthis.authenticator = authenticator;\n \t\tthis.storage = storage;\n@@ -45,19 +45,19 @@ public class AuthorizationController {\n \t\tSecurityUtils.setSecurityManager(securityManager);\n \t\tlog.debug(\"Security manager registered\");\n \t}\n-\t\n+\n \tpublic static AuthorizationController getInstance() {\n \t\tif(INSTANCE == null) {\n \t\t\tthrow new IllegalStateException(String.format(\"%s has not been initialized yet.\", AuthorizationController.class.getSimpleName()));\n \t\t}\n \t\treturn INSTANCE;\n \t}\n-\t\n-\t\n+\n+\n \tpublic static void init(ConqueryConfig config, MasterMetaStorage storage) {\n \t\tAuthConfig authConfig = config.getAuthentication();\n-\t\n-\t\t\n+\n+\n \t\tINSTANCE =  new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n \t}\n }\n",
            "diff_size": 9
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/246/AuthorizationController.java\nindex 44ebc036f4..795b1e3008 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/246/AuthorizationController.java\n@@ -19,45 +19,45 @@ import org.apache.shiro.util.LifecycleUtils;\n \n @Slf4j\n public class AuthorizationController {\n-\t@Getter\n-\tprivate Authenticator<AuthenticationToken, User> authenticator;\n-\t@Getter\n-\tprivate MasterMetaStorage storage;\n-\t@Getter\n-\tprivate List<ConqueryRealm> realms;\n-\t\n-\t\n-\tprivate static AuthorizationController INSTANCE = null;\n-\t\n-\tprivate AuthorizationController(\n-\t\tMasterMetaStorage storage,\n-\t\tList<ConqueryRealm> realms, \n-\t\tAuthenticator<AuthenticationToken, User> authenticator) {\n-\t\tthis.authenticator = authenticator;\n-\t\tthis.storage = storage;\n-\t\tthis.realms = realms;\n-\t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n-\t\tList<Realm> allRealms = new ArrayList<>(realms);\n-\t\tallRealms.add(authorizingRealm);\n-\t\tallRealms.stream().forEach(LifecycleUtils::init);\n-\n-\t\tSecurityManager securityManager = new DefaultSecurityManager(allRealms);\n-\t\tSecurityUtils.setSecurityManager(securityManager);\n-\t\tlog.debug(\"Security manager registered\");\n-\t}\n-\t\n-\tpublic static AuthorizationController getInstance() {\n-\t\tif(INSTANCE == null) {\n-\t\t\tthrow new IllegalStateException(String.format(\"%s has not been initialized yet.\", AuthorizationController.class.getSimpleName()));\n-\t\t}\n-\t\treturn INSTANCE;\n-\t}\n-\t\n-\t\n-\tpublic static void init(ConqueryConfig config, MasterMetaStorage storage) {\n-\t\tAuthConfig authConfig = config.getAuthentication();\n-\t\n-\t\t\n-\t\tINSTANCE =  new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n-\t}\n+    @Getter\n+    private Authenticator<AuthenticationToken, User> authenticator;\n+    @Getter\n+    private MasterMetaStorage storage;\n+    @Getter\n+    private List<ConqueryRealm> realms;\n+\n+\n+    private static AuthorizationController INSTANCE = null;\n+\n+    private AuthorizationController(\n+        MasterMetaStorage storage,\n+        List<ConqueryRealm> realms,\n+        Authenticator<AuthenticationToken, User> authenticator) {\n+        this.authenticator = authenticator;\n+        this.storage = storage;\n+        this.realms = realms;\n+        AuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n+        List<Realm> allRealms = new ArrayList<>(realms);\n+        allRealms.add(authorizingRealm);\n+        allRealms.stream().forEach(LifecycleUtils::init);\n+\n+        SecurityManager securityManager = new DefaultSecurityManager(allRealms);\n+        SecurityUtils.setSecurityManager(securityManager);\n+        log.debug(\"Security manager registered\");\n+    }\n+\n+    public static AuthorizationController getInstance() {\n+        if (INSTANCE == null) {\n+            throw new IllegalStateException(String.format(\"%s has not been initialized yet.\", AuthorizationController.class.getSimpleName()));\n+        }\n+        return INSTANCE;\n+    }\n+\n+\n+    public static void init(ConqueryConfig config, MasterMetaStorage storage) {\n+        AuthConfig authConfig = config.getAuthentication();\n+\n+\n+        INSTANCE = new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n+    }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 28, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/246/AuthorizationController.java\nindex 44ebc036f4..84d17227e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/246/AuthorizationController.java\n@@ -25,15 +25,9 @@ public class AuthorizationController {\n \tprivate MasterMetaStorage storage;\n \t@Getter\n \tprivate List<ConqueryRealm> realms;\n-\t\n-\t\n-\tprivate static AuthorizationController INSTANCE = null;\n-\t\n-\tprivate AuthorizationController(\n-\t\tMasterMetaStorage storage,\n-\t\tList<ConqueryRealm> realms, \n-\t\tAuthenticator<AuthenticationToken, User> authenticator) {\n-\t\tthis.authenticator = authenticator;\n+\t\t\t\t\t\t\tprivate static AuthorizationController INSTANCE = null;\n+private AuthorizationController(MasterMetaStorage storage, List<ConqueryRealm> realms, Authenticator<AuthenticationToken, User> authenticator) {\n+\tthis.authenticator = authenticator;\n \t\tthis.storage = storage;\n \t\tthis.realms = realms;\n \t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n@@ -52,12 +46,9 @@ public class AuthorizationController {\n \t\t}\n \t\treturn INSTANCE;\n \t}\n-\t\n-\t\n+\n \tpublic static void init(ConqueryConfig config, MasterMetaStorage storage) {\n-\t\tAuthConfig authConfig = config.getAuthentication();\n-\t\n-\t\t\n-\t\tINSTANCE =  new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n+\tAuthConfig authConfig = config.getAuthentication();\n+INSTANCE = new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/246/AuthorizationController.java\nindex 44ebc036f4..c1dc92576f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/246/AuthorizationController.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.models.auth;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.entities.User;\n import com.bakdata.conquery.models.config.ConqueryConfig;\n@@ -19,45 +18,40 @@ import org.apache.shiro.util.LifecycleUtils;\n \n @Slf4j\n public class AuthorizationController {\n-\t@Getter\n-\tprivate Authenticator<AuthenticationToken, User> authenticator;\n-\t@Getter\n-\tprivate MasterMetaStorage storage;\n-\t@Getter\n-\tprivate List<ConqueryRealm> realms;\n-\t\n-\t\n-\tprivate static AuthorizationController INSTANCE = null;\n-\t\n-\tprivate AuthorizationController(\n-\t\tMasterMetaStorage storage,\n-\t\tList<ConqueryRealm> realms, \n-\t\tAuthenticator<AuthenticationToken, User> authenticator) {\n-\t\tthis.authenticator = authenticator;\n-\t\tthis.storage = storage;\n-\t\tthis.realms = realms;\n-\t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n-\t\tList<Realm> allRealms = new ArrayList<>(realms);\n-\t\tallRealms.add(authorizingRealm);\n-\t\tallRealms.stream().forEach(LifecycleUtils::init);\n \n-\t\tSecurityManager securityManager = new DefaultSecurityManager(allRealms);\n-\t\tSecurityUtils.setSecurityManager(securityManager);\n-\t\tlog.debug(\"Security manager registered\");\n-\t}\n-\t\n-\tpublic static AuthorizationController getInstance() {\n-\t\tif(INSTANCE == null) {\n-\t\t\tthrow new IllegalStateException(String.format(\"%s has not been initialized yet.\", AuthorizationController.class.getSimpleName()));\n-\t\t}\n-\t\treturn INSTANCE;\n-\t}\n-\t\n-\t\n-\tpublic static void init(ConqueryConfig config, MasterMetaStorage storage) {\n-\t\tAuthConfig authConfig = config.getAuthentication();\n-\t\n-\t\t\n-\t\tINSTANCE =  new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n-\t}\n-}\n+    @Getter\n+    private Authenticator<AuthenticationToken, User> authenticator;\n+    @Getter\n+    private MasterMetaStorage storage;\n+    @Getter\n+    private List<ConqueryRealm> realms;\n+    private static AuthorizationController INSTANCE = null;\n+\n+    private AuthorizationController(MasterMetaStorage storage, List<ConqueryRealm> realms, Authenticator<AuthenticationToken, User> authenticator) {\n+        this.authenticator = authenticator;\n+        this.storage = storage;\n+        this.realms = realms;\n+        AuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n+        List<Realm> allRealms = new ArrayList<>(realms);\n+        allRealms.add(authorizingRealm);\n+        allRealms.stream().forEach(LifecycleUtils::init);\n+        SecurityManager securityManager = new DefaultSecurityManager(allRealms);\n+        SecurityUtils.setSecurityManager(securityManager);\n+        log.debug(\"Security manager registered\");\n+    }\n+\n+    public static AuthorizationController getInstance() {\n+        if(INSTANCE == null) {\n+            throw new IllegalStateException(String.format(\n+                      \"%s has not been initialized yet.\",\n+                      AuthorizationController.class.getSimpleName()\n+                  ));\n+        }\n+        return INSTANCE;\n+    }\n+\n+    public static void init(ConqueryConfig config, MasterMetaStorage storage) {\n+        AuthConfig authConfig = config.getAuthentication();\n+        INSTANCE = new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/246/AuthorizationController.java\nindex 44ebc036f4..fac96d19fb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/246/AuthorizationController.java\n@@ -25,13 +25,13 @@ public class AuthorizationController {\n \tprivate MasterMetaStorage storage;\n \t@Getter\n \tprivate List<ConqueryRealm> realms;\n-\t\n-\t\n+\n+\n \tprivate static AuthorizationController INSTANCE = null;\n-\t\n+\n \tprivate AuthorizationController(\n \t\tMasterMetaStorage storage,\n-\t\tList<ConqueryRealm> realms, \n+\t\tList<ConqueryRealm> realms,\n \t\tAuthenticator<AuthenticationToken, User> authenticator) {\n \t\tthis.authenticator = authenticator;\n \t\tthis.storage = storage;\n@@ -45,19 +45,19 @@ public class AuthorizationController {\n \t\tSecurityUtils.setSecurityManager(securityManager);\n \t\tlog.debug(\"Security manager registered\");\n \t}\n-\t\n+\n \tpublic static AuthorizationController getInstance() {\n \t\tif(INSTANCE == null) {\n \t\t\tthrow new IllegalStateException(String.format(\"%s has not been initialized yet.\", AuthorizationController.class.getSimpleName()));\n \t\t}\n \t\treturn INSTANCE;\n \t}\n-\t\n-\t\n+\n+\n \tpublic static void init(ConqueryConfig config, MasterMetaStorage storage) {\n \t\tAuthConfig authConfig = config.getAuthentication();\n-\t\n-\t\t\n+\n+\n \t\tINSTANCE =  new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n \t}\n }\n",
            "diff_size": 9
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/246/AuthorizationController.java\nindex 44ebc036f4..fac96d19fb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/246/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/246/AuthorizationController.java\n@@ -25,13 +25,13 @@ public class AuthorizationController {\n \tprivate MasterMetaStorage storage;\n \t@Getter\n \tprivate List<ConqueryRealm> realms;\n-\t\n-\t\n+\n+\n \tprivate static AuthorizationController INSTANCE = null;\n-\t\n+\n \tprivate AuthorizationController(\n \t\tMasterMetaStorage storage,\n-\t\tList<ConqueryRealm> realms, \n+\t\tList<ConqueryRealm> realms,\n \t\tAuthenticator<AuthenticationToken, User> authenticator) {\n \t\tthis.authenticator = authenticator;\n \t\tthis.storage = storage;\n@@ -45,19 +45,19 @@ public class AuthorizationController {\n \t\tSecurityUtils.setSecurityManager(securityManager);\n \t\tlog.debug(\"Security manager registered\");\n \t}\n-\t\n+\n \tpublic static AuthorizationController getInstance() {\n \t\tif(INSTANCE == null) {\n \t\t\tthrow new IllegalStateException(String.format(\"%s has not been initialized yet.\", AuthorizationController.class.getSimpleName()));\n \t\t}\n \t\treturn INSTANCE;\n \t}\n-\t\n-\t\n+\n+\n \tpublic static void init(ConqueryConfig config, MasterMetaStorage storage) {\n \t\tAuthConfig authConfig = config.getAuthentication();\n-\t\n-\t\t\n+\n+\n \t\tINSTANCE =  new AuthorizationController(storage, authConfig.getRealms(storage), new ConqueryAuthenticator(storage));\n \t}\n }\n",
            "diff_size": 9
        }
    ]
}