{
    "error_id": "165",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static org.seedstack.shed.reflect.ReflectUtils.getValue;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/165/IdentityServiceImpl.java\nindex 970e0c5d0d..2497c07424 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/165/IdentityServiceImpl.java\n@@ -5,7 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.domain;\n+\n+package org .seedstack.business.internal.domain;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n import static org.seedstack.shed.reflect.ReflectUtils.getValue;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/165/IdentityServiceImpl.java\nindex 970e0c5d0d..37ba70c7f3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/165/IdentityServiceImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n@@ -148,7 +149,7 @@ class IdentityServiceImpl implements IdentityService {\n         final Supplier<ClassConfiguration<E>> classConfigurationSupplier;\n \n         private ClassInfo(Class<E> entityClass,\n-                Supplier<ClassConfiguration<E>> classConfigurationSupplier) {\n+                          Supplier<ClassConfiguration<E>> classConfigurationSupplier) {\n             this.entityClass = entityClass;\n             this.classConfigurationSupplier = classConfigurationSupplier;\n         }\n@@ -181,7 +182,7 @@ class IdentityServiceImpl implements IdentityService {\n         }\n \n         private IdentityInfo(Class<E> entityClass, Field identityField,\n-                Key<? extends IdentityGenerator<I>> generatorKey) {\n+                             Key<? extends IdentityGenerator<I>> generatorKey) {\n             this.entityClass = entityClass;\n             this.generatorKey = generatorKey;\n             this.identityField = identityField;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "86",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "46",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'lambda arguments' has incorrect indentation level 24, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "79",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/165/IdentityServiceImpl.java\nindex 970e0c5d0d..6e58da65a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/165/IdentityServiceImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n@@ -41,12 +42,10 @@ class IdentityServiceImpl implements IdentityService {\n     private static final String FIELD = \"field\";\n     private static final String EXPECTED_CLASS = \"expectedIdClass\";\n     private static final String ACTUAL_CLASS = \"actualIdClass\";\n-    private static final Cache<ClassInfo<?>, IdentityInfo<?, ?>> cache = Cache.create(\n-            new CacheParameters<ClassInfo<?>, IdentityInfo<?, ?>>()\n+    private static final Cache<ClassInfo<?>, IdentityInfo<?, ?>> cache = Cache.create( new CacheParameters<ClassInfo<?>, IdentityInfo<?, ?>>()\n                     .setInitialSize(256)\n                     .setMaxSize(1024)\n-                    .setLoadingFunction(IdentityServiceImpl::resolveIdentityInfo)\n-    );\n+                    .setLoadingFunction(IdentityServiceImpl::resolveIdentityInfo));\n \n     @Inject\n     private Injector injector;\n@@ -56,17 +55,14 @@ class IdentityServiceImpl implements IdentityService {\n     @Override\n     public <E extends Entity<I>, I> E identify(E entity) throws IdentityExistsException {\n         IdentityInfo<E, I> identityInfo = getIdentityInfo(checkNotNull(entity, \"Entity must not be null\"));\n-\n-        if (identityInfo.hasIdentity()) {\n+if (identityInfo.hasIdentity()) {\n             IdentityGenerator<I> identityGenerator = injector.getInstance(identityInfo.generatorKey);\n             Object id = getValue(identityInfo.identityField, entity);\n             if (id == null) {\n                 I generatedValue = identityGenerator.generate(identityInfo.entityClass);\n                 try {\n                     setValue(identityInfo.identityField,\n-                            entity,\n-                            generatedValue\n-                    );\n+                            entity, generatedValue);\n                 } catch (IllegalArgumentException e) {\n                     throw BusinessException.wrap(e, BusinessErrorCode.INCOMPATIBLE_IDENTITY_TYPES)\n                             .put(ENTITY_CLASS, identityInfo.entityClass)\n@@ -78,28 +74,21 @@ class IdentityServiceImpl implements IdentityService {\n                 throw new IdentityExistsException(\"Entity \" + String.valueOf(entity) + \" already has an identity\");\n             }\n         }\n-\n-        return entity;\n+return entity;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private <E extends Entity<I>, I> IdentityInfo<E, I> getIdentityInfo(E entity) {\n-        return (IdentityInfo<E, I>) cache.get(\n-                new ClassInfo<>(\n-                        (Class<E>) entity.getClass(),\n-                        () -> application.getConfiguration((Class<E>) entity.getClass())\n-                )\n-        );\n+        return (IdentityInfo<E, I>) cache.get( new ClassInfo<>((Class<E>) entity.getClass(),\n+                        () -> application.getConfiguration((Class<E>) entity.getClass())));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private static <T extends IdentityGenerator<I>, E extends Entity<I>, I> IdentityInfo<E, I> resolveIdentityInfo(\n-            ClassInfo<?> classInfo) {\n-        return getIdentityField(classInfo.entityClass).map(identityField -> {\n+    private static <T extends IdentityGenerator<I>, E extends Entity<I>, I> IdentityInfo<E, I> resolveIdentityInfo(ClassInfo<?> classInfo) {\n+    return getIdentityField(classInfo.entityClass).map(identityField -> {\n             Identity identityAnnotation = getIdentityAnnotation(classInfo.entityClass, identityField);\n             Class<T> identityGeneratorClass = getIdentityGeneratorClass(identityAnnotation);\n-\n-            if (IdentityGenerator.class.equals(identityGeneratorClass)) {\n+if (IdentityGenerator.class.equals(identityGeneratorClass)) {\n                 throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_GENERATOR_SPECIFIED)\n                         .put(ENTITY_CLASS, classInfo.entityClass);\n             }\n@@ -110,14 +99,11 @@ class IdentityServiceImpl implements IdentityService {\n             } else {\n                 key = BusinessUtils.getQualifier(identityField)\n                         .map(qualifier -> Key.get(identityGeneratorClass, qualifier))\n-                        .orElseGet(() -> BusinessUtils.resolveDefaultQualifier(\n-                                new HashMap<>(),\n-                                classInfo.classConfigurationSupplier.get(),\n-                                IDENTITY_GENERATOR_KEY,\n-                                classInfo.entityClass,\n-                                TypeLiteral.get(identityGeneratorClass))\n+                        .orElseGet(() -> BusinessUtils.resolveDefaultQualifier( new HashMap<>(),\n+        classInfo.classConfigurationSupplier.get(),\n+        IDENTITY_GENERATOR_KEY, classInfo.entityClass, TypeLiteral.get(identityGeneratorClass))\n                                 .orElse(null));\n-            }\n+    }\n             if (key == null) {\n                 throw BusinessException.createNew(BusinessErrorCode.UNQUALIFIED_IDENTITY_GENERATOR)\n                         .put(FIELD, identityField.getName())\n@@ -138,18 +124,15 @@ class IdentityServiceImpl implements IdentityService {\n     }\n \n     private static Identity getIdentityAnnotation(Class<? extends Entity> entityClass, Field identityField) {\n-        return Optional.ofNullable(identityField.getAnnotation(Identity.class)).<BaseException>orElseThrow(\n-                () -> BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_FIELD_DECLARED_FOR_ENTITY)\n+        return Optional.ofNullable(identityField.getAnnotation(Identity.class)).<BaseException> orElseThrow(() -> BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_FIELD_DECLARED_FOR_ENTITY)\n                         .put(ENTITY_CLASS, entityClass));\n     }\n \n     private static class ClassInfo<E extends Entity<?>> {\n         final Class<E> entityClass;\n         final Supplier<ClassConfiguration<E>> classConfigurationSupplier;\n-\n-        private ClassInfo(Class<E> entityClass,\n-                Supplier<ClassConfiguration<E>> classConfigurationSupplier) {\n-            this.entityClass = entityClass;\n+private ClassInfo(Class<E> entityClass, Supplier<ClassConfiguration<E>> classConfigurationSupplier) {\n+    this.entityClass = entityClass;\n             this.classConfigurationSupplier = classConfigurationSupplier;\n         }\n \n@@ -160,8 +143,7 @@ class IdentityServiceImpl implements IdentityService {\n             }\n             if (o == null || getClass() != o.getClass()) {\n                 return false;\n-            }\n-            ClassInfo<?> classInfo = (ClassInfo<?>) o;\n+            } ClassInfo<?> classInfo = (ClassInfo<?>) o;\n             return entityClass.equals(classInfo.entityClass);\n         }\n \n@@ -175,14 +157,12 @@ class IdentityServiceImpl implements IdentityService {\n         final Class<E> entityClass;\n         final Field identityField;\n         final Key<? extends IdentityGenerator<I>> generatorKey;\n-\n-        private IdentityInfo(Class<E> entityClass) {\n+private IdentityInfo(Class<E> entityClass) {\n             this(entityClass, null, null);\n         }\n \n-        private IdentityInfo(Class<E> entityClass, Field identityField,\n-                Key<? extends IdentityGenerator<I>> generatorKey) {\n-            this.entityClass = entityClass;\n+        private IdentityInfo(Class<E> entityClass, Field identityField, Key<? extends IdentityGenerator<I>> generatorKey) {\n+    this.entityClass = entityClass;\n             this.generatorKey = generatorKey;\n             this.identityField = identityField;\n         }\n@@ -191,4 +171,4 @@ class IdentityServiceImpl implements IdentityService {\n             return entityClass != null && identityField != null && generatorKey != null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "column": "85",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "95",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "73",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 67, expected level should be 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 67, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 67, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 67, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "column": "129",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "14",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 67, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "column": "110",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "142",
                    "column": "26",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "142",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "column": "39",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "column": "39",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "173",
                    "column": "63",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/165/IdentityServiceImpl.java\nindex 970e0c5d0d..b8517aed14 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/165/IdentityServiceImpl.java\n@@ -8,9 +8,10 @@\n package org.seedstack.business.internal.domain;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n+\n import static org.seedstack.shed.reflect.ReflectUtils.getValue;\n-import static org.seedstack.shed.reflect.ReflectUtils.setValue;\n \n+import static org.seedstack.shed.reflect.ReflectUtils.setValue;\n import com.google.inject.Injector;\n import com.google.inject.Key;\n import com.google.inject.TypeLiteral;\n@@ -34,121 +35,101 @@ import org.seedstack.shed.cache.CacheParameters;\n import org.seedstack.shed.exception.BaseException;\n import org.seedstack.shed.reflect.ReflectUtils;\n \n+\n class IdentityServiceImpl implements IdentityService {\n+\n     private static final String ENTITY_CLASS = \"entityClass\";\n     private static final String GENERATOR_CLASS = \"generatorClass\";\n     private static final String IDENTITY_GENERATOR_KEY = \"defaultGenerator\";\n     private static final String FIELD = \"field\";\n     private static final String EXPECTED_CLASS = \"expectedIdClass\";\n     private static final String ACTUAL_CLASS = \"actualIdClass\";\n-    private static final Cache<ClassInfo<?>, IdentityInfo<?, ?>> cache = Cache.create(\n-            new CacheParameters<ClassInfo<?>, IdentityInfo<?, ?>>()\n-                    .setInitialSize(256)\n-                    .setMaxSize(1024)\n-                    .setLoadingFunction(IdentityServiceImpl::resolveIdentityInfo)\n-    );\n-\n+    private static final Cache<ClassInfo<?>, IdentityInfo<?, ?>> cache = Cache.create(new CacheParameters<ClassInfo<?>, IdentityInfo<?, ?>>().setInitialSize(256)\n+.setMaxSize(1024)\n+.setLoadingFunction(IdentityServiceImpl::resolveIdentityInfo));\n     @Inject\n     private Injector injector;\n     @Inject\n     private Application application;\n-\n     @Override\n     public <E extends Entity<I>, I> E identify(E entity) throws IdentityExistsException {\n         IdentityInfo<E, I> identityInfo = getIdentityInfo(checkNotNull(entity, \"Entity must not be null\"));\n-\n         if (identityInfo.hasIdentity()) {\n             IdentityGenerator<I> identityGenerator = injector.getInstance(identityInfo.generatorKey);\n+\n             Object id = getValue(identityInfo.identityField, entity);\n             if (id == null) {\n                 I generatedValue = identityGenerator.generate(identityInfo.entityClass);\n                 try {\n-                    setValue(identityInfo.identityField,\n-                            entity,\n-                            generatedValue\n-                    );\n-                } catch (IllegalArgumentException e) {\n-                    throw BusinessException.wrap(e, BusinessErrorCode.INCOMPATIBLE_IDENTITY_TYPES)\n-                            .put(ENTITY_CLASS, identityInfo.entityClass)\n-                            .put(GENERATOR_CLASS, identityGenerator.getClass())\n-                            .put(EXPECTED_CLASS, identityInfo.identityField.getType())\n-                            .put(ACTUAL_CLASS, generatedValue.getClass());\n+                    setValue(identityInfo.identityField, entity, generatedValue);\n+                }\n+\n+catch(IllegalArgumentException e) {\n+                    throw BusinessException.wrap(e, BusinessErrorCode.INCOMPATIBLE_IDENTITY_TYPES).put(ENTITY_CLASS, identityInfo.entityClass)\n+.put(GENERATOR_CLASS, identityGenerator.getClass())\n+.put(EXPECTED_CLASS, identityInfo.identityField.getType())\n+.put(ACTUAL_CLASS, generatedValue.getClass());\n                 }\n             } else {\n-                throw new IdentityExistsException(\"Entity \" + String.valueOf(entity) + \" already has an identity\");\n+                throw new IdentityExistsException(\"Entity \" + String.valueOf(entity)+ \" already has an identity\");\n             }\n         }\n-\n         return entity;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <E extends Entity<I>, I> IdentityInfo<E, I> getIdentityInfo(E entity) {\n-        return (IdentityInfo<E, I>) cache.get(\n-                new ClassInfo<>(\n-                        (Class<E>) entity.getClass(),\n-                        () -> application.getConfiguration((Class<E>) entity.getClass())\n-                )\n-        );\n+    @SuppressWarnings(\"unchecked\") private <E extends Entity<I>, I> IdentityInfo<E, I> getIdentityInfo(E entity) {\n+        return (IdentityInfo<E, I>) cache.get(new ClassInfo<>((Class<E>) entity.getClass(), ()-> application.getConfiguration((Class<E>) entity.getClass())));\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private static <T extends IdentityGenerator<I>, E extends Entity<I>, I> IdentityInfo<E, I> resolveIdentityInfo(\n-            ClassInfo<?> classInfo) {\n-        return getIdentityField(classInfo.entityClass).map(identityField -> {\n-            Identity identityAnnotation = getIdentityAnnotation(classInfo.entityClass, identityField);\n-            Class<T> identityGeneratorClass = getIdentityGeneratorClass(identityAnnotation);\n-\n-            if (IdentityGenerator.class.equals(identityGeneratorClass)) {\n-                throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_GENERATOR_SPECIFIED)\n-                        .put(ENTITY_CLASS, classInfo.entityClass);\n-            }\n-\n-            Key<T> key;\n-            if (!identityAnnotation.generator().isInterface()) {\n-                key = Key.get(identityGeneratorClass);\n-            } else {\n-                key = BusinessUtils.getQualifier(identityField)\n-                        .map(qualifier -> Key.get(identityGeneratorClass, qualifier))\n-                        .orElseGet(() -> BusinessUtils.resolveDefaultQualifier(\n-                                new HashMap<>(),\n-                                classInfo.classConfigurationSupplier.get(),\n-                                IDENTITY_GENERATOR_KEY,\n-                                classInfo.entityClass,\n-                                TypeLiteral.get(identityGeneratorClass))\n-                                .orElse(null));\n-            }\n-            if (key == null) {\n-                throw BusinessException.createNew(BusinessErrorCode.UNQUALIFIED_IDENTITY_GENERATOR)\n-                        .put(FIELD, identityField.getName())\n-                        .put(ENTITY_CLASS, classInfo.entityClass);\n-            }\n-            return new IdentityInfo<>((Class<E>) classInfo.entityClass, identityField, key);\n-        }).orElse(new IdentityInfo<>((Class<E>) classInfo.entityClass));\n+    @SuppressWarnings(\"unchecked\") private static <T extends IdentityGenerator<I>, E extends Entity<I>, I> IdentityInfo<E, I> resolveIdentityInfo(ClassInfo<?> classInfo) {\n+        return getIdentityField(classInfo.entityClass).map(identityField-> {\n+                                                               Identity identityAnnotation = getIdentityAnnotation(classInfo.entityClass, identityField);\n+\n+                                                               Class<T> identityGeneratorClass = getIdentityGeneratorClass(identityAnnotation);\n+                                                               if (IdentityGenerator.class\n+                                                                   .equals(identityGeneratorClass)) {\n+                                                                   throw BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_GENERATOR_SPECIFIED).put(ENTITY_CLASS, classInfo.entityClass);\n+                                                               }\n+                                                               Key<T> key;\n+                                                               if (! identityAnnotation.generator().isInterface()) {\n+                                                                   key = Key.get(identityGeneratorClass);\n+                                                               } else {\n+                                                                   key = BusinessUtils.getQualifier(identityField).map(qualifier-> Key.get(identityGeneratorClass, qualifier))\n+.orElseGet(()-> BusinessUtils.resolveDefaultQualifier(new HashMap<>(),\n+   classInfo.classConfigurationSupplier.get(),\n+       IDENTITY_GENERATOR_KEY,\n+           classInfo.entityClass,\n+               TypeLiteral.get(identityGeneratorClass)).orElse(null));\n+                                                               }\n+                                                               if (key == null) {\n+                                                                   throw BusinessException.createNew(BusinessErrorCode.UNQUALIFIED_IDENTITY_GENERATOR).put(FIELD, identityField.getName())\n+.put(ENTITY_CLASS, classInfo.entityClass);\n+                                                               }\n+                                                               return new IdentityInfo<>((Class<E>) classInfo.entityClass, identityField, key);\n+                                                           })\n+.orElse(new IdentityInfo<>((Class<E>) classInfo.entityClass));\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private static <T extends IdentityGenerator<?>> Class<T> getIdentityGeneratorClass(Identity identity) {\n+    @SuppressWarnings(\"unchecked\") private static <T extends IdentityGenerator<?>> Class<T> getIdentityGeneratorClass(Identity identity) {\n         return (Class<T>) identity.generator();\n     }\n \n+\n     private static Optional<Field> getIdentityField(Class<? extends Entity> entityClass) {\n-        return IdentityResolver.INSTANCE.resolveField(entityClass)\n-                .map(ReflectUtils::makeAccessible);\n+        return IdentityResolver.INSTANCE.resolveField(entityClass).map(ReflectUtils::makeAccessible);\n     }\n \n+\n     private static Identity getIdentityAnnotation(Class<? extends Entity> entityClass, Field identityField) {\n-        return Optional.ofNullable(identityField.getAnnotation(Identity.class)).<BaseException>orElseThrow(\n-                () -> BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_FIELD_DECLARED_FOR_ENTITY)\n-                        .put(ENTITY_CLASS, entityClass));\n+        return Optional.ofNullable(identityField.getAnnotation(Identity.class)).<BaseException>orElseThrow(()-> BusinessException.createNew(BusinessErrorCode.NO_IDENTITY_FIELD_DECLARED_FOR_ENTITY).put(ENTITY_CLASS, entityClass));\n     }\n \n+\n     private static class ClassInfo<E extends Entity<?>> {\n+\n         final Class<E> entityClass;\n         final Supplier<ClassConfiguration<E>> classConfigurationSupplier;\n-\n-        private ClassInfo(Class<E> entityClass,\n-                Supplier<ClassConfiguration<E>> classConfigurationSupplier) {\n+        private ClassInfo(Class<E> entityClass, Supplier<ClassConfiguration<E>> classConfigurationSupplier) {\n             this.entityClass = entityClass;\n             this.classConfigurationSupplier = classConfigurationSupplier;\n         }\n@@ -158,7 +139,7 @@ class IdentityServiceImpl implements IdentityService {\n             if (this == o) {\n                 return true;\n             }\n-            if (o == null || getClass() != o.getClass()) {\n+            if (o == null|| getClass()!= o.getClass()) {\n                 return false;\n             }\n             ClassInfo<?> classInfo = (ClassInfo<?>) o;\n@@ -171,24 +152,25 @@ class IdentityServiceImpl implements IdentityService {\n         }\n     }\n \n-    private static class IdentityInfo<E extends Entity<I>, I> {\n+\n+    private static class IdentityInfo <E extends Entity<I>, I> {\n+\n         final Class<E> entityClass;\n         final Field identityField;\n         final Key<? extends IdentityGenerator<I>> generatorKey;\n-\n         private IdentityInfo(Class<E> entityClass) {\n-            this(entityClass, null, null);\n+            this(entityClass, null, null );\n         }\n \n-        private IdentityInfo(Class<E> entityClass, Field identityField,\n-                Key<? extends IdentityGenerator<I>> generatorKey) {\n+\n+        private IdentityInfo(Class<E> entityClass, Field identityField, Key<? extends IdentityGenerator<I>> generatorKey) {\n             this.entityClass = entityClass;\n             this.generatorKey = generatorKey;\n             this.identityField = identityField;\n         }\n \n         boolean hasIdentity() {\n-            return entityClass != null && identityField != null && generatorKey != null;\n+            return entityClass != null&& identityField != null&& generatorKey != null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 92
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/165/IdentityServiceImpl.java\nindex 970e0c5d0d..2497c07424 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/165/IdentityServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/165/IdentityServiceImpl.java\n@@ -5,7 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.domain;\n+\n+package org .seedstack.business.internal.domain;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n import static org.seedstack.shed.reflect.ReflectUtils.getValue;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}