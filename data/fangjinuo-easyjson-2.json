{
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "90",
                "column": "9",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        builder.addFeature(SerializerFeature.SkipTransientField);\n        builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n        if(!serializeNonFieldGetter()) {\n            builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n        }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/2/FastJsonJSONBuilder.java\nindex 2bb7702c00..d22d99b9f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/2/FastJsonJSONBuilder.java\n@@ -87,7 +87,7 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         builder.addFeature(SerializerFeature.DisableCircularReferenceDetect);\n         builder.addFeature(SerializerFeature.SkipTransientField);\n         builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n-        if(!serializeNonFieldGetter()) {\n+        if (!serializeNonFieldGetter()) {\n             builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/2/FastJsonJSONBuilder.java\nindex 2bb7702c00..d22d99b9f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/2/FastJsonJSONBuilder.java\n@@ -87,7 +87,7 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         builder.addFeature(SerializerFeature.DisableCircularReferenceDetect);\n         builder.addFeature(SerializerFeature.SkipTransientField);\n         builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n-        if(!serializeNonFieldGetter()) {\n+        if (!serializeNonFieldGetter()) {\n             builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/2/FastJsonJSONBuilder.java\nindex 2bb7702c00..9077806545 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/2/FastJsonJSONBuilder.java\n@@ -33,7 +33,6 @@ import com.jn.langx.annotation.Name;\n @Name(\"fastjson\")\n @DependOn(\"com.alibaba.fastjson.JSON\")\n public class FastJsonJSONBuilder extends JSONBuilder {\n-\n     public FastJsonJSONBuilder() {\n         super();\n     }\n@@ -87,7 +86,7 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         builder.addFeature(SerializerFeature.DisableCircularReferenceDetect);\n         builder.addFeature(SerializerFeature.SkipTransientField);\n         builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n-        if(!serializeNonFieldGetter()) {\n+        if (!serializeNonFieldGetter()) {\n             builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n         }\n \n@@ -121,4 +120,4 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         this.copyTo(result);\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/2/FastJsonJSONBuilder.java\nindex 2bb7702c00..c8d7a96c4d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/2/FastJsonJSONBuilder.java\n@@ -33,7 +33,6 @@ import com.jn.langx.annotation.Name;\n @Name(\"fastjson\")\n @DependOn(\"com.alibaba.fastjson.JSON\")\n public class FastJsonJSONBuilder extends JSONBuilder {\n-\n     public FastJsonJSONBuilder() {\n         super();\n     }\n@@ -69,17 +68,20 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         dateCodec.setUsingToString(serializeDateUsingToString());\n         serializerBuilder.apply(dateCodec);\n         deserializerBuilder.apply(dateCodec);\n-\n-        FastJson fastJson = new FastJson(serializerBuilder, deserializerBuilder, jsonTreeSerializerBuilder);\n+        FastJson fastJson = new FastJson(serializerBuilder,\n+            deserializerBuilder,\n+                jsonTreeSerializerBuilder);\n         FastJsonAdapter jsonHandler = new FastJsonAdapter();\n         jsonHandler.setFastJson(fastJson);\n         return new JSON().setJsonHandler(jsonHandler);\n     }\n \n+\n     private JsonTreeSerializerBuilder buildJsonTreeWriter() {\n         return new JsonTreeSerializerBuilder().setPrettyFormat(prettyFormat()).setSerializeNulls(serializeNulls());\n     }\n \n+\n     private FastJsonSerializerBuilder buildSerializer() {\n         SerializeConfig config = new EasyJsonSerializeConfig(this);\n         FastJsonSerializerBuilder builder = new FastJsonSerializerBuilder();\n@@ -87,17 +89,15 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         builder.addFeature(SerializerFeature.DisableCircularReferenceDetect);\n         builder.addFeature(SerializerFeature.SkipTransientField);\n         builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n-        if(!serializeNonFieldGetter()) {\n+        if (!serializeNonFieldGetter()) {\n             builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n         }\n \n         // SerializerFeature.WriteNullStringAsEmpty ==> \"\"\n         // SerializerFeature.WriteNullListAsEmpty ==>[]\n-\n         if (serializeNulls()) {\n             builder.addFeature(SerializerFeature.WriteMapNullValue);\n         }\n-\n         if (serializeEnumUsingToString()) {\n             builder.addFeature(SerializerFeature.WriteEnumUsingToString);\n         }\n@@ -107,6 +107,7 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         return builder;\n     }\n \n+\n     private FastJsonParserBuilder buildDeserializer() {\n         ParserConfig config = new EasyJsonParserConfig(this);\n         int featureValues = com.alibaba.fastjson.JSON.DEFAULT_PARSER_FEATURE;\n@@ -121,4 +122,4 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         this.copyTo(result);\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/2/FastJsonJSONBuilder.java\nindex 2bb7702c00..d22d99b9f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/2/FastJsonJSONBuilder.java\n@@ -87,7 +87,7 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         builder.addFeature(SerializerFeature.DisableCircularReferenceDetect);\n         builder.addFeature(SerializerFeature.SkipTransientField);\n         builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n-        if(!serializeNonFieldGetter()) {\n+        if (!serializeNonFieldGetter()) {\n             builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/2/FastJsonJSONBuilder.java\nindex 2bb7702c00..d22d99b9f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/2/FastJsonJSONBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/2/FastJsonJSONBuilder.java\n@@ -87,7 +87,7 @@ public class FastJsonJSONBuilder extends JSONBuilder {\n         builder.addFeature(SerializerFeature.DisableCircularReferenceDetect);\n         builder.addFeature(SerializerFeature.SkipTransientField);\n         builder.addFeature(SerializerFeature.IgnoreErrorGetter);\n-        if(!serializeNonFieldGetter()) {\n+        if (!serializeNonFieldGetter()) {\n             builder.addFeature(SerializerFeature.IgnoreNonFieldGetter);\n         }\n \n",
            "diff_size": 1
        }
    ]
}