{
    "error_id": "146",
    "information": {
        "errors": [
            {
                "line": "90",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "                decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n            }\n            \n            if (StringHelper.isEmpty(decryptedProperty)) {\n                decryptedProperty = propertyValue;\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/146/PropertiesDecrypter.java\nindex f774c713e1..de3dfa4458 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/146/PropertiesDecrypter.java\n@@ -87,7 +87,6 @@ public final class PropertiesDecrypter {\n             } else {\n                 decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n             }\n-            \n             if (StringHelper.isEmpty(decryptedProperty)) {\n                 decryptedProperty = propertyValue;\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/146/PropertiesDecrypter.java\nindex f774c713e1..3cc2e5e651 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/146/PropertiesDecrypter.java\n@@ -25,7 +25,8 @@ public final class PropertiesDecrypter {\n     public static final String BIND_PASSWORD = \"bindPassword\";\n     public static final String TRUST_STORE_PIN = \"ssl.trustStorePin\";\n \n-    private PropertiesDecrypter() { }\n+    private PropertiesDecrypter() {\n+    }\n \n     public static Properties decryptProperties(Properties properties, String encryptionKey) {\n         try {\n@@ -42,7 +43,7 @@ public final class PropertiesDecrypter {\n     }\n \n     public static Properties decryptProperties(StringEncrypter stringEncrypter, Properties properties,\n-            String encryptionKey) {\n+                                               String encryptionKey) {\n         if (properties == null) {\n             return properties;\n         }\n@@ -59,7 +60,7 @@ public final class PropertiesDecrypter {\n     }\n \n     public static Properties decryptAllProperties(StringEncrypter stringEncrypter, Properties properties,\n-            String encryptionKey) {\n+                                                  String encryptionKey) {\n         if (properties == null) {\n             return properties;\n         }\n@@ -74,7 +75,7 @@ public final class PropertiesDecrypter {\n     }\n \n     private static void decriptProperty(StringEncrypter stringEncrypter, Properties properties, String encryptionKey,\n-            String propertyName, boolean silent) {\n+                                        String propertyName, boolean silent) {\n         String propertyValue = properties.getProperty(propertyName);\n         if (StringHelper.isEmpty(propertyValue)) {\n             return;\n@@ -87,7 +88,7 @@ public final class PropertiesDecrypter {\n             } else {\n                 decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n             }\n-            \n+\n             if (StringHelper.isEmpty(decryptedProperty)) {\n                 decryptedProperty = propertyValue;\n             }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/146/PropertiesDecrypter.java\nindex f774c713e1..a66aaa1c46 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/146/PropertiesDecrypter.java\n@@ -87,9 +87,9 @@ public final class PropertiesDecrypter {\n             } else {\n                 decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n             }\n-            \n-            if (StringHelper.isEmpty(decryptedProperty)) {\n-                decryptedProperty = propertyValue;\n+\n+if (StringHelper.isEmpty(decryptedProperty)) {\n+    decryptedProperty = propertyValue;\n             }\n \n             properties.put(propertyName, decryptedProperty);\n@@ -121,4 +121,4 @@ public final class PropertiesDecrypter {\n         return resultValue;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/146/PropertiesDecrypter.java\nindex f774c713e1..289842b29c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/146/PropertiesDecrypter.java\n@@ -7,7 +7,6 @@\n package org.xdi.util.security;\n \n import java.util.Properties;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.xdi.util.StringHelper;\n@@ -18,11 +17,14 @@ import org.xdi.util.security.StringEncrypter.EncryptionException;\n  *\n  * @author Yuriy Movchan Date: 04/24/2013\n  */\n+\n+\n public final class PropertiesDecrypter {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PropertiesDecrypter.class);\n \n     public static final String BIND_PASSWORD = \"bindPassword\";\n+\n     public static final String TRUST_STORE_PIN = \"ssl.trustStorePin\";\n \n     private PropertiesDecrypter() { }\n@@ -31,7 +33,9 @@ public final class PropertiesDecrypter {\n         try {\n             return decryptProperties(StringEncrypter.defaultInstance(), properties, encryptionKey);\n         } catch (EncryptionException ex) {\n-            LOG.error(String.format(\"Failed to decript '%s' property\", PropertiesDecrypter.BIND_PASSWORD), ex);\n+            LOG.error(\n+               String.format(\"Failed to decript '%s' property\", PropertiesDecrypter.BIND_PASSWORD),\n+               ex);\n         }\n \n         return properties;\n@@ -41,16 +45,22 @@ public final class PropertiesDecrypter {\n         return decryptProperties(stringEncrypter, properties, null);\n     }\n \n-    public static Properties decryptProperties(StringEncrypter stringEncrypter, Properties properties,\n-            String encryptionKey) {\n+    public static Properties decryptProperties(StringEncrypter stringEncrypter, Properties properties, String encryptionKey) {\n         if (properties == null) {\n             return properties;\n         }\n \n         Properties clondedProperties = (Properties) properties.clone();\n-        decriptProperty(stringEncrypter, clondedProperties, encryptionKey, PropertiesDecrypter.BIND_PASSWORD, true);\n-        decriptProperty(stringEncrypter, clondedProperties, encryptionKey, PropertiesDecrypter.TRUST_STORE_PIN, true);\n-\n+        decriptProperty(stringEncrypter,\n+                        clondedProperties,\n+                        encryptionKey,\n+                        PropertiesDecrypter.BIND_PASSWORD,\n+                        true);\n+        decriptProperty(stringEncrypter,\n+                        clondedProperties,\n+                        encryptionKey,\n+                        PropertiesDecrypter.TRUST_STORE_PIN,\n+                        true);\n         return clondedProperties;\n     }\n \n@@ -58,8 +68,7 @@ public final class PropertiesDecrypter {\n         return decryptAllProperties(stringEncrypter, properties, null);\n     }\n \n-    public static Properties decryptAllProperties(StringEncrypter stringEncrypter, Properties properties,\n-            String encryptionKey) {\n+    public static Properties decryptAllProperties(StringEncrypter stringEncrypter, Properties properties, String encryptionKey) {\n         if (properties == null) {\n             return properties;\n         }\n@@ -73,8 +82,7 @@ public final class PropertiesDecrypter {\n         return clondedProperties;\n     }\n \n-    private static void decriptProperty(StringEncrypter stringEncrypter, Properties properties, String encryptionKey,\n-            String propertyName, boolean silent) {\n+    private static void decriptProperty(StringEncrypter stringEncrypter, Properties properties, String encryptionKey, String propertyName, boolean silent) {\n         String propertyValue = properties.getProperty(propertyName);\n         if (StringHelper.isEmpty(propertyValue)) {\n             return;\n@@ -87,11 +95,10 @@ public final class PropertiesDecrypter {\n             } else {\n                 decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n             }\n-            \n+\n             if (StringHelper.isEmpty(decryptedProperty)) {\n                 decryptedProperty = propertyValue;\n             }\n-\n             properties.put(propertyName, decryptedProperty);\n         } catch (EncryptionException ex) {\n             LOG.error(String.format(\"Failed to decript '%s' property\", propertyName), ex);\n@@ -120,5 +127,4 @@ public final class PropertiesDecrypter {\n \n         return resultValue;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/146/PropertiesDecrypter.java\nindex f774c713e1..de3dfa4458 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/146/PropertiesDecrypter.java\n@@ -87,7 +87,6 @@ public final class PropertiesDecrypter {\n             } else {\n                 decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n             }\n-            \n             if (StringHelper.isEmpty(decryptedProperty)) {\n                 decryptedProperty = propertyValue;\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "88",
                    "column": "100",
                    "severity": "error",
                    "message": "'}' at column 100 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "100",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "column": "101",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "column": "101",
                    "severity": "error",
                    "message": "'if' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/146/PropertiesDecrypter.java\nindex f774c713e1..95238b0adb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/146/PropertiesDecrypter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/146/PropertiesDecrypter.java\n@@ -85,40 +85,38 @@ public final class PropertiesDecrypter {\n             if (StringHelper.isEmpty(encryptionKey)) {\n                 decryptedProperty = stringEncrypter.decrypt(propertyValue, silent);\n             } else {\n-                decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent);\n-            }\n-            \n-            if (StringHelper.isEmpty(decryptedProperty)) {\n-                decryptedProperty = propertyValue;\n-            }\n+                decryptedProperty = stringEncrypter.decrypt(propertyValue, encryptionKey, silent); }if(StringHelper.isEmpty(decryptedProperty)) {\n+                    decryptedProperty = propertyValue;\n+                }\n \n-            properties.put(propertyName, decryptedProperty);\n-        } catch (EncryptionException ex) {\n-            LOG.error(String.format(\"Failed to decript '%s' property\", propertyName), ex);\n+                properties.put(propertyName, decryptedProperty);\n+            } catch (EncryptionException ex) {\n+                LOG.error(String.format(\"Failed to decript '%s' property\", propertyName), ex);\n+            }\n         }\n-    }\n \n-    public static String decryptProperty(String encryptedValue, boolean returnSource, String encryptionKey) {\n-        if (encryptedValue == null) {\n-            return encryptedValue;\n-        }\n+        public static String decryptProperty(String encryptedValue, boolean returnSource, String encryptionKey) {\n+            if (encryptedValue == null) {\n+                return encryptedValue;\n+            }\n \n-        String resultValue;\n-        if (returnSource) {\n-            resultValue = encryptedValue;\n-        } else {\n-            resultValue = null;\n-        }\n+            String resultValue;\n+            if (returnSource) {\n+                resultValue = encryptedValue;\n+            } else {\n+                resultValue = null;\n+            }\n \n-        try {\n-            resultValue = StringEncrypter.defaultInstance().decrypt(encryptedValue, encryptionKey);\n-        } catch (Exception ex) {\n-            if (!returnSource) {\n-                LOG.error(String.format(\"Failed to decrypt value: '%s'\", encryptedValue, ex));\n+            try {\n+                resultValue = StringEncrypter.defaultInstance().decrypt(encryptedValue, encryptionKey);\n+            } catch (Exception ex) {\n+                if (!returnSource) {\n+                    LOG.error(String.format(\"Failed to decrypt value: '%s'\", encryptedValue, ex));\n+                }\n             }\n+\n+            return resultValue;\n         }\n \n-        return resultValue;\n     }\n-\n-}\n+    \n\\ No newline at end of file\n",
            "diff_size": 32
        }
    ]
}