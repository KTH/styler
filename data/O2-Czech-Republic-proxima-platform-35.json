{
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    try {\n      Config config = repository.getConfig();\n      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n      this.collectHostname =\n          isNonEmpty(config, COLLECT_HOSTNAME)\n              ? config.getString(COLLECT_HOSTNAME)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/35/StreamConfig.java\nindex 816b1ecf1f..5c0db0840a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/35/StreamConfig.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.tools.groovy;\n \n import com.typesafe.config.Config;\n@@ -41,15 +42,18 @@ public class StreamConfig implements Serializable {\n     return new StreamConfig(((ConfigRepository) beam.getRepository()));\n   }\n \n-  @Getter private final int collectPort;\n-  @Getter private final String collectHostname;\n+  @Getter\n+  private final int collectPort;\n+  @Getter\n+  private final String collectHostname;\n   private final RepositoryFactory repositoryFactory;\n   private transient Repository repo;\n \n   private StreamConfig(ConfigRepository repository) {\n     try {\n       Config config = repository.getConfig();\n-      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n+      this.collectPort =\n+          config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n       this.collectHostname =\n           isNonEmpty(config, COLLECT_HOSTNAME)\n               ? config.getString(COLLECT_HOSTNAME)\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/35/StreamConfig.java\nindex 816b1ecf1f..fc1e2967f1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/35/StreamConfig.java\n@@ -51,10 +51,8 @@ public class StreamConfig implements Serializable {\n       Config config = repository.getConfig();\n       this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n       this.collectHostname =\n-          isNonEmpty(config, COLLECT_HOSTNAME)\n-              ? config.getString(COLLECT_HOSTNAME)\n-              : InetAddress.getLocalHost().getHostName();\n-      this.repositoryFactory = repository.asFactory();\n+          isNonEmpty(config, COLLECT_HOSTNAME) ? config.getString(COLLECT_HOSTNAME) : InetAddress.getLocalHost().getHostName();\n+this.repositoryFactory = repository.asFactory();\n       this.repo = repository;\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n@@ -71,4 +69,4 @@ public class StreamConfig implements Serializable {\n   private static boolean isNonEmpty(Config config, String path) {\n     return config.hasPath(path) && !config.getString(path).isEmpty();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/35/StreamConfig.java\nindex 816b1ecf1f..19e36d1d8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/35/StreamConfig.java\n@@ -26,49 +26,47 @@ import java.net.InetAddress;\n import lombok.Getter;\n \n /** Configuration object for {@link BeamStream}. */\n-public class StreamConfig implements Serializable {\n \n-  private static final long serialVersionUID = 1L;\n \n-  private static final String COLLECT_PORT_KEY = \"console.collect.server-port\";\n-  private static final String COLLECT_HOSTNAME = \"console.collect.hostname\";\n+public class StreamConfig implements Serializable {\n \n-  static StreamConfig empty() {\n+    private static final long serialVersionUID = 1L;\n+    private static final String COLLECT_PORT_KEY = \"console.collect.server-port\";\n+    private static final String COLLECT_HOSTNAME = \"console.collect.hostname\";\n+    static StreamConfig empty() {\n     return new StreamConfig((ConfigRepository) Repository.of(ConfigFactory.empty()));\n-  }\n+    }\n \n-  static StreamConfig of(BeamDataOperator beam) {\n+    static StreamConfig of(BeamDataOperator beam) {\n     return new StreamConfig(((ConfigRepository) beam.getRepository()));\n-  }\n+    }\n \n-  @Getter private final int collectPort;\n-  @Getter private final String collectHostname;\n-  private final RepositoryFactory repositoryFactory;\n-  private transient Repository repo;\n+    @Getter private final int collectPort;\n \n-  private StreamConfig(ConfigRepository repository) {\n+    @Getter private final String collectHostname;\n+    private final RepositoryFactory repositoryFactory;\n+    private transient Repository repo;\n+\n+    private StreamConfig(ConfigRepository repository) {\n     try {\n-      Config config = repository.getConfig();\n-      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n-      this.collectHostname =\n-          isNonEmpty(config, COLLECT_HOSTNAME)\n-              ? config.getString(COLLECT_HOSTNAME)\n-              : InetAddress.getLocalHost().getHostName();\n-      this.repositoryFactory = repository.asFactory();\n-      this.repo = repository;\n+        Config config = repository.getConfig();\n+        this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n+        this.collectHostname = isNonEmpty(config, COLLECT_HOSTNAME) ? config.getString(COLLECT_HOSTNAME) : InetAddress.getLocalHost().getHostName();\n+        this.repositoryFactory = repository.asFactory();\n+        this.repo = repository;\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n     }\n-  }\n+    }\n \n-  public Repository getRepo() {\n+    public Repository getRepo() {\n     if (repo == null) {\n-      repo = repositoryFactory.apply();\n+        repo = repositoryFactory.apply();\n     }\n     return repo;\n-  }\n+    }\n \n-  private static boolean isNonEmpty(Config config, String path) {\n+    private static boolean isNonEmpty(Config config, String path) {\n     return config.hasPath(path) && !config.getString(path).isEmpty();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "column": "60",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "92",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "93",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/35/StreamConfig.java\nindex 816b1ecf1f..542457bc50 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/35/StreamConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/35/StreamConfig.java\n@@ -49,7 +49,7 @@ public class StreamConfig implements Serializable {\n   private StreamConfig(ConfigRepository repository) {\n     try {\n       Config config = repository.getConfig();\n-      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n+      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ?config.getInt( COLLECT_PORT_KEY):-1;\n       this.collectHostname =\n           isNonEmpty(config, COLLECT_HOSTNAME)\n               ? config.getString(COLLECT_HOSTNAME)\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}