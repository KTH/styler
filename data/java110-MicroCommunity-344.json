{
    "error_id": "344",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 178).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n\n\n        return feeConfigs;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/344/FeeConfigInnerServiceSMOImpl.java\nindex 955a3e5558..14e08b18fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/344/FeeConfigInnerServiceSMOImpl.java\n@@ -40,35 +40,41 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n-        }\n+        } List<FeeConfigDto>\n \n-        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n-        return feeConfigs;\n-    }\n+        feeConfigs\n \n \n+        = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n+          return feeConfigs;\n+      }\n \n-    @Override\n-    public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n-        return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n \n-    public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n-        return feeConfigServiceDaoImpl;\n-    }\n \n-    public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n-        this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n-    }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+      @Override\n+      public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n+          return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n+\n+      public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n+          return feeConfigServiceDaoImpl;\n+      }\n+\n+      public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n+          this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n+      }\n+\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n+\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/344/FeeConfigInnerServiceSMOImpl.java\nindex 955a3e5558..8dcd25268e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/344/FeeConfigInnerServiceSMOImpl.java\n@@ -25,50 +25,49 @@ import java.util.List;\n @RestController\n public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFeeConfigInnerServiceSMO {\n \n-    @Autowired\n-    private IFeeConfigServiceDao feeConfigServiceDaoImpl;\n+  @Autowired\n+  private IFeeConfigServiceDao feeConfigServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<FeeConfigDto> queryFeeConfigs(@RequestBody  FeeConfigDto feeConfigDto) {\n+  @Override\n+  public List<FeeConfigDto> queryFeeConfigs(@RequestBody FeeConfigDto feeConfigDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeConfigDto.getPage();\n+    int page = feeConfigDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n-        }\n-\n-        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n-\n-\n-        return feeConfigs;\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n     }\n \n+    List<FeeConfigDto> feeConfigs =\n+      BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n+    return feeConfigs;\n+  }\n \n \n-    @Override\n-    public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n-        return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n+  @Override\n+  public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n+    return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));\n+  }\n \n-    public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n-        return feeConfigServiceDaoImpl;\n-    }\n+  public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n+    return feeConfigServiceDaoImpl;\n+  }\n \n-    public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n-        this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n-    }\n+  public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n+    this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/344/FeeConfigInnerServiceSMOImpl.java\nindex 955a3e5558..8debfbaed2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/344/FeeConfigInnerServiceSMOImpl.java\n@@ -44,15 +44,10 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n-\n-        return feeConfigs;\n+return feeConfigs;\n     }\n \n-\n-\n-\n-\n-    @Override\n+@Override\n     public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n         return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n \n@@ -71,4 +66,4 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/344/FeeConfigInnerServiceSMOImpl.java\nindex 955a3e5558..3b741c8047 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/344/FeeConfigInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.utils.util.BeanConvertUtil;\n import com.java110.fee.dao.IFeeConfigServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -11,7 +10,6 @@ import com.java110.dto.FeeConfigDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFeeConfigInnerServiceSMO {\n \n@@ -32,29 +32,24 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<FeeConfigDto> queryFeeConfigs(@RequestBody  FeeConfigDto feeConfigDto) {\n+    public List<FeeConfigDto> queryFeeConfigs(@RequestBody FeeConfigDto feeConfigDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = feeConfigDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n         }\n \n         List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n-\n         return feeConfigs;\n     }\n \n \n-\n-\n-\n     @Override\n     public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n-        return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n+        return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));\n+    }\n \n     public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n         return feeConfigServiceDaoImpl;\n@@ -71,4 +66,4 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "column": "45",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "45",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "45",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "45",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/344/FeeConfigInnerServiceSMOImpl.java\nindex 955a3e5558..75337b4a71 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/344/FeeConfigInnerServiceSMOImpl.java\n@@ -41,34 +41,37 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n         }\n+            List < FeeConfigDto > feeConfigs=BeanConvertUtil.covertBeanList\n+        ( feeConfigServiceDaoImpl.getFeeConfigInfo (BeanConvertUtil.beanCovertMap(feeConfigDto )),\n \n-        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n+        FeeConfigDto .class);\n \n \n-        return feeConfigs;\n-    }\n+         return feeConfigs;\n+     }\n \n \n \n \n \n-    @Override\n-    public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n-        return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n+     @Override\n+     public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n+         return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n \n-    public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n-        return feeConfigServiceDaoImpl;\n-    }\n+     public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n+         return feeConfigServiceDaoImpl;\n+     }\n \n-    public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n-        this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n-    }\n+     public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n+         this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n+     }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+     public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+         return userInnerServiceSMOImpl;\n+     }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/344/FeeConfigInnerServiceSMOImpl.java\nindex 955a3e5558..14e08b18fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/344/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/344/FeeConfigInnerServiceSMOImpl.java\n@@ -40,35 +40,41 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n-        }\n+        } List<FeeConfigDto>\n \n-        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n-        return feeConfigs;\n-    }\n+        feeConfigs\n \n \n+        = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n+          return feeConfigs;\n+      }\n \n-    @Override\n-    public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n-        return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n \n-    public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n-        return feeConfigServiceDaoImpl;\n-    }\n \n-    public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n-        this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n-    }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n-}\n+      @Override\n+      public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n+          return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));    }\n+\n+      public IFeeConfigServiceDao getFeeConfigServiceDaoImpl() {\n+          return feeConfigServiceDaoImpl;\n+      }\n+\n+      public void setFeeConfigServiceDaoImpl(IFeeConfigServiceDao feeConfigServiceDaoImpl) {\n+          this.feeConfigServiceDaoImpl = feeConfigServiceDaoImpl;\n+      }\n+\n+      public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+          return userInnerServiceSMOImpl;\n+      }\n+\n+      public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+          this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+      }\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 40
        }
    ]
}