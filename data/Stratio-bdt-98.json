{
    "error_id": "98",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.aspects;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.assertj.core.api.AssertionsForClassTypes.assertThatExceptionOfType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/98/ReplacementAspectTest.java\nindex 6a81cfd72f..94f09d6ca2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/98/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/98/ReplacementAspectTest.java\nindex 6a81cfd72f..2a7a84202e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/98/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n@@ -31,7 +32,9 @@ public class ReplacementAspectTest {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"\", pjp)).as(\"Replacing an empty placeholded string should not modify it\").isEqualTo(\"\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"\", pjp))\n+            .as(\"Replacing an empty placeholded string should not modify it\")\n+            .isEqualTo(\"\");\n     }\n \n     @Test\n@@ -42,35 +45,55 @@ public class ReplacementAspectTest {\n         System.setProperty(\"STRATIOBDD_ENV1\", \"33\");\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aa\");\n \n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33:aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV1}|:|${STRATIOBDD_ENV2}|\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"|33|:|aa|\");\n+        assertThat(\n+            repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33:aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"|${STRATIOBDD_ENV1}|:|${STRATIOBDD_ENV2}|\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"|33|:|aa|\");\n     }\n \n     @Test\n-    public void replaceSinglePlaceholderCaseTest() throws NonReplaceableException {\n+    public void replaceSinglePlaceholderCaseTest()\n+        throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n         System.setProperty(\"STRATIOBDD_ENV1\", \"33\");\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aA\");\n \n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"AA\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33:AA\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV2}.toUpper\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"|aA.toUpper\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toLower}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toUpper}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"AA\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toLower}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toLower}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2.toUpper}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"33:AA\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV2}.toUpper\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"|aA.toUpper\");\n     }\n \n     @Test\n-    public void replaceElementPlaceholderCaseTest() throws NonReplaceableException {\n+    public void replaceElementPlaceholderCaseTest()\n+        throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n@@ -79,39 +102,63 @@ public class ReplacementAspectTest {\n         ThreadProperty.set(\"STRATIOBDD_ENV6\", \"44\");\n         ThreadProperty.set(\"STRATIOBDD_ENV7\", \"cC\");\n \n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}\", pjp)).isEqualTo(\"33\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toLower}\", pjp)).isEqualTo(\"aa\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toUpper}\", pjp)).isEqualTo(\"AA\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"aA\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"33aA\");\n-        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}:${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"33:aA\");\n-\n-        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}\", pjp)).isEqualTo(\"44\");\n-        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"cC\");\n-        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"44cC\");\n-        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}:!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"44:cC\");\n-\n-        assertThat(repAspect.replacedElement(\"@{JSON.schemas/simple1.json}\", pjp)).isEqualTo(\"{\\\"a\\\":true}\");\n+        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}\", pjp))\n+            .isEqualTo(\"33\");\n+        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toLower}\", pjp))\n+            .isEqualTo(\"aa\");\n+        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toUpper}\", pjp))\n+            .isEqualTo(\"AA\");\n+        assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5}\", pjp))\n+            .isEqualTo(\"aA\");\n+        assertThat(repAspect\n+            .replacedElement(\"${STRATIOBDD_ENV4}${STRATIOBDD_ENV5}\", pjp))\n+            .isEqualTo(\"33aA\");\n+        assertThat(repAspect\n+            .replacedElement(\"${STRATIOBDD_ENV4}:${STRATIOBDD_ENV5}\", pjp))\n+            .isEqualTo(\"33:aA\");\n+\n+        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}\", pjp))\n+            .isEqualTo(\"44\");\n+        assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV7}\", pjp))\n+            .isEqualTo(\"cC\");\n+        assertThat(repAspect\n+            .replacedElement(\"!{STRATIOBDD_ENV6}!{STRATIOBDD_ENV7}\", pjp))\n+            .isEqualTo(\"44cC\");\n+        assertThat(repAspect\n+            .replacedElement(\"!{STRATIOBDD_ENV6}:!{STRATIOBDD_ENV7}\", pjp))\n+            .isEqualTo(\"44:cC\");\n+\n+        assertThat(\n+            repAspect.replacedElement(\"@{JSON.schemas/simple1.json}\", pjp))\n+            .isEqualTo(\"{\\\"a\\\":true}\");\n     }\n \n     @Test\n-    public void replaceReflectionPlaceholderCaseTest() throws NonReplaceableException {\n+    public void replaceReflectionPlaceholderCaseTest()\n+        throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n \n-        assertThatExceptionOfType(Exception.class).isThrownBy(() -> repAspect.replaceReflectionPlaceholders(\"!{NO_VAL}\", pjp));\n+        assertThatExceptionOfType(Exception.class).isThrownBy(\n+            () -> repAspect.replaceReflectionPlaceholders(\"!{NO_VAL}\", pjp));\n     }\n \n     @Test\n-    public void replaceCodePlaceholderCaseTest() throws NonReplaceableException {\n+    public void replaceCodePlaceholderCaseTest()\n+        throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n \n-        assertThat(repAspect.replaceCodePlaceholders(\"@{schemas/simple1.json}\", pjp)).isEqualTo(\"\");\n-        assertThat(repAspect.replaceCodePlaceholders(\"@{JSON.schemas/simple1.json}\", pjp)).isEqualTo(\"{\\\"a\\\":true}\");\n-        assertThatExceptionOfType(Exception.class).isThrownBy(() -> repAspect.replaceCodePlaceholders(\"@{IP.10.10.10.10}\", pjp));\n+        assertThat(\n+            repAspect.replaceCodePlaceholders(\"@{schemas/simple1.json}\", pjp))\n+            .isEqualTo(\"\");\n+        assertThat(repAspect\n+            .replaceCodePlaceholders(\"@{JSON.schemas/simple1.json}\", pjp))\n+            .isEqualTo(\"{\\\"a\\\":true}\");\n+        assertThatExceptionOfType(Exception.class).isThrownBy(\n+            () -> repAspect.replaceCodePlaceholders(\"@{IP.10.10.10.10}\", pjp));\n     }\n \n     @Test\n@@ -122,10 +169,14 @@ public class ReplacementAspectTest {\n         ReplacementAspect repAspect = new ReplacementAspect();\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aa\");\n \n-        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"!{STRATIOBDD_LOCAL1}:${STRATIOBDD_ENV2}\", pjp), pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"LOCAL:aa\");\n-        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2}:!{STRATIOBDD_LOCAL1}\", pjp), pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"aa:LOCAL\");\n+        assertThat(repAspect.replaceReflectionPlaceholders(repAspect\n+            .replaceEnvironmentPlaceholders(\n+                \"!{STRATIOBDD_LOCAL1}:${STRATIOBDD_ENV2}\", pjp), pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"LOCAL:aa\");\n+        assertThat(repAspect.replaceReflectionPlaceholders(repAspect\n+            .replaceEnvironmentPlaceholders(\n+                \"${STRATIOBDD_ENV2}:!{STRATIOBDD_LOCAL1}\", pjp), pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aa:LOCAL\");\n     }\n \n     @Test\n@@ -136,20 +187,50 @@ public class ReplacementAspectTest {\n         System.setProperty(\"STRATIOBDD_ENV1\", \"aa\");\n         System.setProperty(\"STRATIOBDD_ENV3\", \"cc\");\n \n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bb\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV4:-dd}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bbdd\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV1}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bbaa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabb\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"AAbbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toUpper:-bb}${STRATIOBDD_ENV3}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aaBBcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3.toUpper:-aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbCC\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb.bb}${STRATIOBDD_ENV3:-aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabb.bbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa.aa}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-\\\"\\\"}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"{}\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"[]\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1:-bb}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aa\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"bb\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV4:-dd}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"bbdd\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV1}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"bbaa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabb\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1.toUpper}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"AAbbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toUpper:-bb}${STRATIOBDD_ENV3}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"aaBBcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3.toUpper:-aa}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbCC\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb.bb}${STRATIOBDD_ENV3:-aa}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabb.bbcc\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\n+            \"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV3:-aa.aa}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"aabbcc\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-\\\"\\\"}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"{}\");\n+        assertThat(repAspect\n+            .replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp))\n+            .as(\"Unexpected replacement\").isEqualTo(\"[]\");\n     }\n }\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/98/ReplacementAspectTest.java\nindex 6a81cfd72f..185e372ca1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/98/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n@@ -152,4 +153,4 @@ public class ReplacementAspectTest {\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"{}\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"[]\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "97",
                    "column": "65",
                    "severity": "error",
                    "message": "'->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "108",
                    "column": "65",
                    "severity": "error",
                    "message": "'->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/98/ReplacementAspectTest.java\nindex 6a81cfd72f..6963ef6ed3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/98/ReplacementAspectTest.java\n@@ -16,11 +16,10 @@\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.AssertionsForClassTypes.assertThatExceptionOfType;\n \n+import static org.assertj.core.api.AssertionsForClassTypes.assertThatExceptionOfType;\n import org.aspectj.lang.ProceedingJoinPoint;\n import org.testng.annotations.Test;\n-\n import com.stratio.qa.exceptions.NonReplaceableException;\n import com.stratio.qa.utils.ThreadProperty;\n \n@@ -34,6 +33,7 @@ public class ReplacementAspectTest {\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"\", pjp)).as(\"Replacing an empty placeholded string should not modify it\").isEqualTo(\"\");\n     }\n \n+\n     @Test\n     public void replaceSinglePlaceholdersTest() throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -41,17 +41,13 @@ public class ReplacementAspectTest {\n         ProceedingJoinPoint pjp = null;\n         System.setProperty(\"STRATIOBDD_ENV1\", \"33\");\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aa\");\n-\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2}\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"33:aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV1}|:|${STRATIOBDD_ENV2}|\", pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"|33|:|aa|\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33:aa\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV1}|:|${STRATIOBDD_ENV2}|\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"|33|:|aa|\");\n     }\n \n+\n     @Test\n     public void replaceSinglePlaceholderCaseTest() throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -59,16 +55,17 @@ public class ReplacementAspectTest {\n         ProceedingJoinPoint pjp = null;\n         System.setProperty(\"STRATIOBDD_ENV1\", \"33\");\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aA\");\n-\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"AA\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}${STRATIOBDD_ENV2.toLower}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33aa\");\n-        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2.toUpper}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"33:AA\");\n+        assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1}:${STRATIOBDD_ENV2.toUpper}\",\n+            pjp)).as(\"Unexpected replacement\").isEqualTo(\"33:AA\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"|${STRATIOBDD_ENV2}.toUpper\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"|aA.toUpper\");\n     }\n \n+\n     @Test\n     public void replaceElementPlaceholderCaseTest() throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -78,42 +75,40 @@ public class ReplacementAspectTest {\n         System.setProperty(\"STRATIOBDD_ENV5\", \"aA\");\n         ThreadProperty.set(\"STRATIOBDD_ENV6\", \"44\");\n         ThreadProperty.set(\"STRATIOBDD_ENV7\", \"cC\");\n-\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}\", pjp)).isEqualTo(\"33\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toLower}\", pjp)).isEqualTo(\"aa\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5.toUpper}\", pjp)).isEqualTo(\"AA\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"aA\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"33aA\");\n         assertThat(repAspect.replacedElement(\"${STRATIOBDD_ENV4}:${STRATIOBDD_ENV5}\", pjp)).isEqualTo(\"33:aA\");\n-\n         assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}\", pjp)).isEqualTo(\"44\");\n         assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"cC\");\n         assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"44cC\");\n         assertThat(repAspect.replacedElement(\"!{STRATIOBDD_ENV6}:!{STRATIOBDD_ENV7}\", pjp)).isEqualTo(\"44:cC\");\n-\n         assertThat(repAspect.replacedElement(\"@{JSON.schemas/simple1.json}\", pjp)).isEqualTo(\"{\\\"a\\\":true}\");\n     }\n \n+\n     @Test\n     public void replaceReflectionPlaceholderCaseTest() throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n-\n-        assertThatExceptionOfType(Exception.class).isThrownBy(() -> repAspect.replaceReflectionPlaceholders(\"!{NO_VAL}\", pjp));\n+        assertThatExceptionOfType(Exception.class).isThrownBy(()-> repAspect.replaceReflectionPlaceholders(\"!{NO_VAL}\", pjp));\n     }\n \n+\n     @Test\n     public void replaceCodePlaceholderCaseTest() throws NonReplaceableException {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n         ReplacementAspect repAspect = new ReplacementAspect();\n         ProceedingJoinPoint pjp = null;\n-\n         assertThat(repAspect.replaceCodePlaceholders(\"@{schemas/simple1.json}\", pjp)).isEqualTo(\"\");\n         assertThat(repAspect.replaceCodePlaceholders(\"@{JSON.schemas/simple1.json}\", pjp)).isEqualTo(\"{\\\"a\\\":true}\");\n-        assertThatExceptionOfType(Exception.class).isThrownBy(() -> repAspect.replaceCodePlaceholders(\"@{IP.10.10.10.10}\", pjp));\n+        assertThatExceptionOfType(Exception.class).isThrownBy(()-> repAspect.replaceCodePlaceholders(\"@{IP.10.10.10.10}\", pjp));\n     }\n \n+\n     @Test\n     public void replaceMixedPlaceholdersTest() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -121,13 +116,11 @@ public class ReplacementAspectTest {\n         ProceedingJoinPoint pjp = null;\n         ReplacementAspect repAspect = new ReplacementAspect();\n         System.setProperty(\"STRATIOBDD_ENV2\", \"aa\");\n-\n-        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"!{STRATIOBDD_LOCAL1}:${STRATIOBDD_ENV2}\", pjp), pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"LOCAL:aa\");\n-        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2}:!{STRATIOBDD_LOCAL1}\", pjp), pjp))\n-                .as(\"Unexpected replacement\").isEqualTo(\"aa:LOCAL\");\n+        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"!{STRATIOBDD_LOCAL1}:${STRATIOBDD_ENV2}\", pjp), pjp)).as(\"Unexpected replacement\").isEqualTo(\"LOCAL:aa\");\n+        assertThat(repAspect.replaceReflectionPlaceholders(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2}:!{STRATIOBDD_LOCAL1}\", pjp), pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa:LOCAL\");\n     }\n \n+\n     @Test\n     public void replaceDefaultValue() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -135,7 +128,6 @@ public class ReplacementAspectTest {\n         ReplacementAspect repAspect = new ReplacementAspect();\n         System.setProperty(\"STRATIOBDD_ENV1\", \"aa\");\n         System.setProperty(\"STRATIOBDD_ENV3\", \"cc\");\n-\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV1:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"aa\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bb\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-bb}${STRATIOBDD_ENV4:-dd}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"bbdd\");\n@@ -152,4 +144,4 @@ public class ReplacementAspectTest {\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-{}}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"{}\");\n         assertThat(repAspect.replaceEnvironmentPlaceholders(\"${STRATIOBDD_ENV2:-[]}\", pjp)).as(\"Unexpected replacement\").isEqualTo(\"[]\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/98/ReplacementAspectTest.java\nindex 6a81cfd72f..94f09d6ca2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/98/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/98/ReplacementAspectTest.java\nindex 6a81cfd72f..94f09d6ca2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/98/ReplacementAspectTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/98/ReplacementAspectTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.aspects;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        }
    ]
}