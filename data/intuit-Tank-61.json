{
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "31",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n\n\t/**\n\t * Returns a list of all folds in the text area.\n\t *\n\t * @param textArea The text area whose contents should be analyzed.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/61/FoldParser.java\nindex 8478c4f8ec..1348d3713a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/61/FoldParser.java\n@@ -28,14 +28,14 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n public interface FoldParser {\n \n \n-\t/**\n+/**\n \t * Returns a list of all folds in the text area.\n \t *\n \t * @param textArea The text area whose contents should be analyzed.\n \t * @return The list of folds.  If this method returns <code>null</code>,\n \t *         it is treated as if no folds were found.\n \t */\n-\tList<Fold> getFolds(RSyntaxTextArea textArea);\n+ List<Fold> getFolds(RSyntaxTextArea textArea);\n \n \n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/61/FoldParser.java\nindex 8478c4f8ec..e6e03922e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/61/FoldParser.java\n@@ -6,6 +6,7 @@\n  * This library is distributed under a modified BSD license.  See the included\n  * LICENSE file for details.\n  */\n+\n package org.fife.ui.rsyntaxtextarea.folding;\n \n import java.util.List;\n@@ -28,14 +29,14 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n public interface FoldParser {\n \n \n-\t/**\n-\t * Returns a list of all folds in the text area.\n-\t *\n-\t * @param textArea The text area whose contents should be analyzed.\n-\t * @return The list of folds.  If this method returns <code>null</code>,\n-\t *         it is treated as if no folds were found.\n-\t */\n-\tList<Fold> getFolds(RSyntaxTextArea textArea);\n+  /**\n+   * Returns a list of all folds in the text area.\n+   *\n+   * @param textArea The text area whose contents should be analyzed.\n+   * @return The list of folds.  If this method returns <code>null</code>,\n+   * it is treated as if no folds were found.\n+   */\n+  List<Fold> getFolds(RSyntaxTextArea textArea);\n \n \n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/61/FoldParser.java\nindex 8478c4f8ec..4b0cd8904c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/61/FoldParser.java\n@@ -12,7 +12,6 @@ import java.util.List;\n \n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n \n-\n /**\n  * Locates folds in a document.  If you are implementing a language that has\n  * sections of source code that can be logically \"folded,\" you can create an\n@@ -27,8 +26,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  */\n public interface FoldParser {\n \n-\n-\t/**\n+    /**\n \t * Returns a list of all folds in the text area.\n \t *\n \t * @param textArea The text area whose contents should be analyzed.\n@@ -37,5 +35,4 @@ public interface FoldParser {\n \t */\n \tList<Fold> getFolds(RSyntaxTextArea textArea);\n \n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/61/FoldParser.java\nindex 8478c4f8ec..ed8870d1bd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/61/FoldParser.java\n@@ -8,8 +8,9 @@\n  */\n package org.fife.ui.rsyntaxtextarea.folding;\n \n-import java.util.List;\n \n+\n+import java.util.List;\n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n \n \n@@ -25,17 +26,19 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @see CurlyFoldParser\n  * @see XmlFoldParser\n  */\n+\n+\n public interface FoldParser {\n \n \n-\t/**\n-\t * Returns a list of all folds in the text area.\n-\t *\n-\t * @param textArea The text area whose contents should be analyzed.\n-\t * @return The list of folds.  If this method returns <code>null</code>,\n-\t *         it is treated as if no folds were found.\n-\t */\n-\tList<Fold> getFolds(RSyntaxTextArea textArea);\n+    /**\n+     * Returns a list of all folds in the text area.\n+     *\n+     * @param textArea The text area whose contents should be analyzed.\n+     * @return The list of folds.  If this method returns <code>null</code>,\n+     *         it is treated as if no folds were found.\n+     */\n \n+    List<Fold> getFolds(RSyntaxTextArea textArea);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/61/FoldParser.java\nindex 8478c4f8ec..8bacb061ed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/61/FoldParser.java\n@@ -27,15 +27,15 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  */\n public interface FoldParser {\n \n-\n-\t/**\n+    /**\n \t * Returns a list of all folds in the text area.\n \t *\n \t * @param textArea The text area whose contents should be analyzed.\n \t * @return The list of folds.  If this method returns <code>null</code>,\n \t *         it is treated as if no folds were found.\n \t */\n-\tList<Fold> getFolds(RSyntaxTextArea textArea);\n+\n+List<Fold> getFolds(RSyntaxTextArea textArea);\n \n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/61/FoldParser.java\nindex 8478c4f8ec..1348d3713a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/61/FoldParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/61/FoldParser.java\n@@ -28,14 +28,14 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n public interface FoldParser {\n \n \n-\t/**\n+/**\n \t * Returns a list of all folds in the text area.\n \t *\n \t * @param textArea The text area whose contents should be analyzed.\n \t * @return The list of folds.  If this method returns <code>null</code>,\n \t *         it is treated as if no folds were found.\n \t */\n-\tList<Fold> getFolds(RSyntaxTextArea textArea);\n+ List<Fold> getFolds(RSyntaxTextArea textArea);\n \n \n }\n",
            "diff_size": 2
        }
    ]
}