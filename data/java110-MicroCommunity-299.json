{
    "error_id": "299",
    "information": {
        "errors": [
            {
                "line": "120",
                "column": "49",
                "severity": "error",
                "message": "'?' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        }\n\n        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n\n        String[] tmpType = tmpProTypes.contains(\"\\n\")\n                        ? tmpProTypes.split(\"\\n\")",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/299/VcCreateProcessor.java\nindex 112f89ab10..a866455325 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/299/VcCreateProcessor.java\n@@ -117,7 +117,7 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n             return js;\n         }\n \n-        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n+        tmpProTypes = tmpProTypes.contains(\"\\r\") ? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n \n         String[] tmpType = tmpProTypes.contains(\"\\n\")\n                         ? tmpProTypes.split(\"\\n\")\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/299/VcCreateProcessor.java\nindex 112f89ab10..ff3d9dd1f0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/299/VcCreateProcessor.java\n@@ -21,158 +21,158 @@ import java.util.Date;\n public class VcCreateProcessor extends AbstractElementTagProcessor {\n \n \n-    private static Logger logger = LoggerFactory.getLogger(VcCreateProcessor.class);\n+  private static Logger logger = LoggerFactory.getLogger(VcCreateProcessor.class);\n \n-    private static final String DIV_PROPERTY_COMPONENT = \"data-component\";\n+  private static final String DIV_PROPERTY_COMPONENT = \"data-component\";\n \n-    private static final String TAG_NAME = \"create\";\n-    private static final String NAME = \"name\";\n-    private static final int PRECEDENCE = 300;\n+  private static final String TAG_NAME = \"create\";\n+  private static final String NAME = \"name\";\n+  private static final int PRECEDENCE = 300;\n \n \n-    public VcCreateProcessor(String dialectPrefix) {\n-        super(TemplateMode.HTML, dialectPrefix, TAG_NAME, true, null, false, PRECEDENCE);\n+  public VcCreateProcessor(String dialectPrefix) {\n+    super(TemplateMode.HTML, dialectPrefix, TAG_NAME, true, null, false, PRECEDENCE);\n+  }\n+\n+  @Override\n+  protected void doProcess(ITemplateContext context, IProcessableElementTag tag, IElementTagStructureHandler structureHandler) {\n+\n+    //\u83b7\u53d6\u6a21\u677f\u540d\u79f0\n+    String componentName = tag.getAttributeValue(NAME);\n+\n+    logger.debug(\"\u6b63\u5728\u89e3\u6790\u7ec4\u4ef6{},{}\", componentName, new Date().getTime());\n+    String html = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_HTML);\n+    if (html == null) {\n+      throw new RuntimeException(\"\u5728\u7f13\u5b58\u4e2d\u672a\u627e\u5230\u7ec4\u4ef6\u3010\" + componentName + \"\u3011\");\n     }\n \n-    @Override\n-    protected void doProcess(ITemplateContext context, IProcessableElementTag tag, IElementTagStructureHandler structureHandler) {\n+    IModelFactory modelFactory = context.getModelFactory();\n \n-        //\u83b7\u53d6\u6a21\u677f\u540d\u79f0\n-        String componentName = tag.getAttributeValue(NAME);\n+    IModel htmlModel = modelFactory.createModel();\n \n-        logger.debug(\"\u6b63\u5728\u89e3\u6790\u7ec4\u4ef6{},{}\", componentName, new Date().getTime());\n-        String html = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_HTML);\n-        if (html == null) {\n-            throw new RuntimeException(\"\u5728\u7f13\u5b58\u4e2d\u672a\u627e\u5230\u7ec4\u4ef6\u3010\" + componentName + \"\u3011\");\n-        }\n+    Document doc = Jsoup.parseBodyFragment(html);\n \n-        IModelFactory modelFactory = context.getModelFactory();\n+    //\u83b7\u53d6\u6211\u4eec\u771f\u5b9e\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u53bb\u9664\u56e0\u4e3a\u8f6c\u6362\u800c\u52a0\u5165\u7684 html \u548cbody \u6807\u7b7e\n+    Elements elements = doc.body().children();\n \n-        IModel htmlModel = modelFactory.createModel();\n+    //\u5c06\u7ec4\u5efa\u540d\u79f0\u5199\u5165\u7ec4\u5efaHTML \u7b2c\u4e00\u4e2a\u6807\u7b7e\u4e2d\n+    addDataComponent(elements, componentName);\n \n-        Document doc = Jsoup.parseBodyFragment(html);\n+    htmlModel.addModel(modelFactory.parse(context.getTemplateData(), doc.body().children().toString()));\n \n-        //\u83b7\u53d6\u6211\u4eec\u771f\u5b9e\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u53bb\u9664\u56e0\u4e3a\u8f6c\u6362\u800c\u52a0\u5165\u7684 html \u548cbody \u6807\u7b7e\n-        Elements elements = doc.body().children();\n+    String css = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_CSS);\n+    if (css != null) {\n+      css = \"<style type=\\\"text/css\\\">\" + css + \"</style>\";\n+      htmlModel.add(modelFactory.createText(css));\n+    }\n \n-        //\u5c06\u7ec4\u5efa\u540d\u79f0\u5199\u5165\u7ec4\u5efaHTML \u7b2c\u4e00\u4e2a\u6807\u7b7e\u4e2d\n-        addDataComponent(elements, componentName);\n+    //js\n+    String js = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_JS);\n+    if (js != null) {\n \n-        htmlModel.addModel(modelFactory.parse(context.getTemplateData(), doc.body().children().toString()));\n+      js = dealJs(js, tag);\n+      js = dealJsAddComponentCode(js, tag);\n+      js = \"<script type=\\\"text/javascript\\\">//<![CDATA[ \\n\" + js + \"//]]>\\n</script>\";\n+      htmlModel.add(modelFactory.createText(js));\n \n-        String css = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_CSS);\n-        if (css != null) {\n-            css = \"<style type=\\\"text/css\\\">\" + css + \"</style>\";\n-            htmlModel.add(modelFactory.createText(css));\n-        }\n+    }\n \n-        //js\n-        String js = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_JS);\n-        if (js != null) {\n+    logger.debug(\"\u89e3\u6790\u5b8c\u6210\u7ec4\u4ef6{},{}\", componentName, new Date().getTime());\n+    structureHandler.replaceWith(htmlModel, true);\n \n-            js = dealJs(js, tag);\n-            js = dealJsAddComponentCode(js, tag);\n-            js = \"<script type=\\\"text/javascript\\\">//<![CDATA[ \\n\" + js + \"//]]>\\n</script>\";\n-            htmlModel.add(modelFactory.createText(js));\n+  }\n \n-        }\n \n-        logger.debug(\"\u89e3\u6790\u5b8c\u6210\u7ec4\u4ef6{},{}\", componentName, new Date().getTime());\n-        structureHandler.replaceWith(htmlModel, true);\n+  /**\n+   * \u52a0\u5165\u7ec4\u4ef6\u540d\u79f0\u5230 HTML\u4e2d \u65b9\u4fbf\u5b9a\u4f4d\u95ee\u9898\n+   *\n+   * @param elements      \u9875\u9762\u8282\u70b9\n+   * @param componentCode \u7ec4\u4ef6\u7f16\u7801\n+   */\n+  private void addDataComponent(Elements elements, String componentCode) {\n+    Element tmpElement = elements.get(0);\n+    tmpElement.attr(DIV_PROPERTY_COMPONENT, componentCode);\n+  }\n \n-    }\n \n+  /**\n+   * \u5904\u7406js\n+   *\n+   * @param tag \u9875\u9762\u5143\u7d20\n+   * @param js  js\u6587\u4ef6\u5185\u5bb9\n+   * @return js \u6587\u4ef6\u5185\u5bb9\n+   */\n+  private String dealJs(String js, IProcessableElementTag tag) {\n \n-    /**\n-     * \u52a0\u5165\u7ec4\u4ef6\u540d\u79f0\u5230 HTML\u4e2d \u65b9\u4fbf\u5b9a\u4f4d\u95ee\u9898\n-     *\n-     * @param elements      \u9875\u9762\u8282\u70b9\n-     * @param componentCode \u7ec4\u4ef6\u7f16\u7801\n-     */\n-    private void addDataComponent(Elements elements, String componentCode) {\n-        Element tmpElement = elements.get(0);\n-        tmpElement.attr(DIV_PROPERTY_COMPONENT, componentCode);\n+    //\u5728js \u4e2d\u68c0\u6d4bpropTypes \u5c5e\u6027\n+    if (!js.contains(\"propTypes\")) {\n+      return js;\n     }\n \n+    //\u89e3\u6790propTypes\u4fe1\u606f\n+    String tmpProTypes = js.substring(js.indexOf(\"propTypes\"));\n+    tmpProTypes = tmpProTypes.substring(tmpProTypes.indexOf(\"{\") + 1, tmpProTypes.indexOf(\"}\")).trim();\n \n-    /**\n-     * \u5904\u7406js\n-     *\n-     * @param tag \u9875\u9762\u5143\u7d20\n-     * @param js  js\u6587\u4ef6\u5185\u5bb9\n-     * @return js \u6587\u4ef6\u5185\u5bb9\n-     */\n-    private String dealJs(String js, IProcessableElementTag tag) {\n-\n-        //\u5728js \u4e2d\u68c0\u6d4bpropTypes \u5c5e\u6027\n-        if (!js.contains(\"propTypes\")) {\n-            return js;\n-        }\n-\n-        //\u89e3\u6790propTypes\u4fe1\u606f\n-        String tmpProTypes = js.substring(js.indexOf(\"propTypes\"));\n-        tmpProTypes = tmpProTypes.substring(tmpProTypes.indexOf(\"{\") + 1, tmpProTypes.indexOf(\"}\")).trim();\n-\n-        if (StringUtils.isEmpty(tmpProTypes)) {\n-            return js;\n-        }\n-\n-        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n-\n-        String[] tmpType = tmpProTypes.contains(\"\\n\")\n-                        ? tmpProTypes.split(\"\\n\")\n-                        : tmpProTypes.split(\",\");\n-        StringBuffer propsJs = new StringBuffer(\"\\nvar $props = {};\\n\");\n-        for (String type : tmpType) {\n-            if (StringUtils.isEmpty(type) || !type.contains(\":\")) {\n-                continue;\n-            }\n-            String[] types = type.split(\":\");\n-            String attrKey = \"\";\n-            if (types[0].contains(\"//\")) {\n-                attrKey = types[0].substring(0, types[0].indexOf(\"//\"));\n-            }\n-            attrKey = types[0].replace(\" \", \"\")\n-                    .replace(\"\\n\", \"\")\n-                    .replace(\"\\r\", \"\");\n-            if (!tag.hasAttribute(attrKey)) {\n-                String componentName = tag.getAttributeValue(\"name\");\n-                logger.error(\"\u7ec4\u4ef6\" + componentName + \"\u672a\u914d\u7f6e\u7ec4\u4ef6\u5c5e\u6027 \" + attrKey);\n-                throw new TemplateProcessingException(\"\u7ec4\u4ef6[\" + componentName + \"]\u672a\u914d\u7f6e\u7ec4\u4ef6\u5c5e\u6027\" + attrKey);\n-            }\n-            String vcType = tag.getAttributeValue(attrKey);\n-            if (types[1].contains(\"vc.propTypes.string\")) {\n-                vcType = \"'\" + vcType + \"'\";\n-            }\n-            propsJs.append(\"$props.\" + attrKey + \"=\" + vcType + \";\\n\");\n-        }\n-\n-        //\u5c06propsJs \u63d2\u5165\u5230 \u7b2c\u4e00\u4e2a { \u4e4b\u540e\n-        int position = js.indexOf(\"{\");\n-        if (position < 0) {\n-            String componentName = tag.getAttributeValue(\"name\");\n-            logger.error(\"\u7ec4\u4ef6\" + componentName + \"\u5bf9\u5e94js \u672a\u5305\u542b {}  \");\n-            throw new TemplateProcessingException(\"\u7ec4\u4ef6\" + componentName + \"\u5bf9\u5e94js \u672a\u5305\u542b {}  \");\n-        }\n-        js = new StringBuffer(js).insert(position + 1, propsJs).toString();\n-        return js;\n+    if (StringUtils.isEmpty(tmpProTypes)) {\n+      return js;\n     }\n \n-    /**\n-     * \u5904\u7406js \u53d8\u91cf\u548c \u65b9\u6cd5\u90fd\u52a0\u5165 \u7ec4\u4ef6\u7f16\u7801\n-     *\n-     * @param tag \u9875\u9762\u5143\u7d20\n-     * @param js  js\u6587\u4ef6\u5185\u5bb9\n-     * @return js \u6587\u4ef6\u5185\u5bb9\n-     */\n-    private String dealJsAddComponentCode(String js, IProcessableElementTag tag) {\n+    tmpProTypes = tmpProTypes.contains(\"\\r\") ? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n+\n+    String[] tmpType = tmpProTypes.contains(\"\\n\")\n+      ? tmpProTypes.split(\"\\n\")\n+      : tmpProTypes.split(\",\");\n+    StringBuffer propsJs = new StringBuffer(\"\\nvar $props = {};\\n\");\n+    for (String type : tmpType) {\n+      if (StringUtils.isEmpty(type) || !type.contains(\":\")) {\n+        continue;\n+      }\n+      String[] types = type.split(\":\");\n+      String attrKey = \"\";\n+      if (types[0].contains(\"//\")) {\n+        attrKey = types[0].substring(0, types[0].indexOf(\"//\"));\n+      }\n+      attrKey = types[0].replace(\" \", \"\")\n+        .replace(\"\\n\", \"\")\n+        .replace(\"\\r\", \"\");\n+      if (!tag.hasAttribute(attrKey)) {\n+        String componentName = tag.getAttributeValue(\"name\");\n+        logger.error(\"\u7ec4\u4ef6\" + componentName + \"\u672a\u914d\u7f6e\u7ec4\u4ef6\u5c5e\u6027 \" + attrKey);\n+        throw new TemplateProcessingException(\"\u7ec4\u4ef6[\" + componentName + \"]\u672a\u914d\u7f6e\u7ec4\u4ef6\u5c5e\u6027\" + attrKey);\n+      }\n+      String vcType = tag.getAttributeValue(attrKey);\n+      if (types[1].contains(\"vc.propTypes.string\")) {\n+        vcType = \"'\" + vcType + \"'\";\n+      }\n+      propsJs.append(\"$props.\" + attrKey + \"=\" + vcType + \";\\n\");\n+    }\n \n-        if (!tag.hasAttribute(\"code\")) {\n-            return js;\n-        }\n+    //\u5c06propsJs \u63d2\u5165\u5230 \u7b2c\u4e00\u4e2a { \u4e4b\u540e\n+    int position = js.indexOf(\"{\");\n+    if (position < 0) {\n+      String componentName = tag.getAttributeValue(\"name\");\n+      logger.error(\"\u7ec4\u4ef6\" + componentName + \"\u5bf9\u5e94js \u672a\u5305\u542b {}  \");\n+      throw new TemplateProcessingException(\"\u7ec4\u4ef6\" + componentName + \"\u5bf9\u5e94js \u672a\u5305\u542b {}  \");\n+    }\n+    js = new StringBuffer(js).insert(position + 1, propsJs).toString();\n+    return js;\n+  }\n+\n+  /**\n+   * \u5904\u7406js \u53d8\u91cf\u548c \u65b9\u6cd5\u90fd\u52a0\u5165 \u7ec4\u4ef6\u7f16\u7801\n+   *\n+   * @param tag \u9875\u9762\u5143\u7d20\n+   * @param js  js\u6587\u4ef6\u5185\u5bb9\n+   * @return js \u6587\u4ef6\u5185\u5bb9\n+   */\n+  private String dealJsAddComponentCode(String js, IProcessableElementTag tag) {\n+\n+    if (!tag.hasAttribute(\"code\")) {\n+      return js;\n+    }\n \n-        String code = tag.getAttributeValue(\"code\");\n+    String code = tag.getAttributeValue(\"code\");\n \n-        return js.replace(\"@vc_\", code);\n-    }\n+    return js.replace(\"@vc_\", code);\n+  }\n }\n",
            "diff_size": 205
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/299/VcCreateProcessor.java\nindex 112f89ab10..e52ac57442 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/299/VcCreateProcessor.java\n@@ -117,12 +117,12 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n             return js;\n         }\n \n-        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n+        tmpProTypes = tmpProTypes.contains(\"\\r\") ? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n \n-        String[] tmpType = tmpProTypes.contains(\"\\n\")\n-                        ? tmpProTypes.split(\"\\n\")\n+        String[] tmpType = tmpProTypes.contains(\"\\n\") ? tmpProTypes.split(\"\\n\")\n                         : tmpProTypes.split(\",\");\n-        StringBuffer propsJs = new StringBuffer(\"\\nvar $props = {};\\n\");\n+\n+StringBuffer propsJs = new StringBuffer(\"\\nvar $props = {};\\n\");\n         for (String type : tmpType) {\n             if (StringUtils.isEmpty(type) || !type.contains(\":\")) {\n                 continue;\n@@ -175,4 +175,4 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n \n         return js.replace(\"@vc_\", code);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/299/VcCreateProcessor.java\nindex 112f89ab10..705df2e52e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/299/VcCreateProcessor.java\n@@ -15,41 +15,43 @@ import org.thymeleaf.model.IProcessableElementTag;\n import org.thymeleaf.processor.element.AbstractElementTagProcessor;\n import org.thymeleaf.processor.element.IElementTagStructureHandler;\n import org.thymeleaf.templatemode.TemplateMode;\n-\n import java.util.Date;\n \n-public class VcCreateProcessor extends AbstractElementTagProcessor {\n \n+public class VcCreateProcessor extends AbstractElementTagProcessor {\n \n     private static Logger logger = LoggerFactory.getLogger(VcCreateProcessor.class);\n-\n     private static final String DIV_PROPERTY_COMPONENT = \"data-component\";\n-\n     private static final String TAG_NAME = \"create\";\n     private static final String NAME = \"name\";\n     private static final int PRECEDENCE = 300;\n \n \n     public VcCreateProcessor(String dialectPrefix) {\n-        super(TemplateMode.HTML, dialectPrefix, TAG_NAME, true, null, false, PRECEDENCE);\n+        super(TemplateMode.HTML,\n+dialectPrefix,\n+TAG_NAME,\n+true,\n+null,\n+false,\n+PRECEDENCE);\n     }\n \n     @Override\n-    protected void doProcess(ITemplateContext context, IProcessableElementTag tag, IElementTagStructureHandler structureHandler) {\n+    protected void doProcess(ITemplateContext context,\n+                             IProcessableElementTag tag, IElementTagStructureHandler structureHandler) {\n \n         //\u83b7\u53d6\u6a21\u677f\u540d\u79f0\n         String componentName = tag.getAttributeValue(NAME);\n-\n         logger.debug(\"\u6b63\u5728\u89e3\u6790\u7ec4\u4ef6{},{}\", componentName, new Date().getTime());\n+\n         String html = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_HTML);\n         if (html == null) {\n             throw new RuntimeException(\"\u5728\u7f13\u5b58\u4e2d\u672a\u627e\u5230\u7ec4\u4ef6\u3010\" + componentName + \"\u3011\");\n         }\n \n         IModelFactory modelFactory = context.getModelFactory();\n-\n         IModel htmlModel = modelFactory.createModel();\n-\n         Document doc = Jsoup.parseBodyFragment(html);\n \n         //\u83b7\u53d6\u6211\u4eec\u771f\u5b9e\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u53bb\u9664\u56e0\u4e3a\u8f6c\u6362\u800c\u52a0\u5165\u7684 html \u548cbody \u6807\u7b7e\n@@ -57,7 +59,6 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n \n         //\u5c06\u7ec4\u5efa\u540d\u79f0\u5199\u5165\u7ec4\u5efaHTML \u7b2c\u4e00\u4e2a\u6807\u7b7e\u4e2d\n         addDataComponent(elements, componentName);\n-\n         htmlModel.addModel(modelFactory.parse(context.getTemplateData(), doc.body().children().toString()));\n \n         String css = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_CSS);\n@@ -67,19 +68,16 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n         }\n \n         //js\n+\n         String js = VueComponentTemplate.findTemplateByComponentCode(componentName + \".\" + VueComponentTemplate.COMPONENT_JS);\n         if (js != null) {\n-\n             js = dealJs(js, tag);\n             js = dealJsAddComponentCode(js, tag);\n             js = \"<script type=\\\"text/javascript\\\">//<![CDATA[ \\n\" + js + \"//]]>\\n</script>\";\n             htmlModel.add(modelFactory.createText(js));\n-\n         }\n-\n         logger.debug(\"\u89e3\u6790\u5b8c\u6210\u7ec4\u4ef6{},{}\", componentName, new Date().getTime());\n         structureHandler.replaceWith(htmlModel, true);\n-\n     }\n \n \n@@ -89,6 +87,8 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n      * @param elements      \u9875\u9762\u8282\u70b9\n      * @param componentCode \u7ec4\u4ef6\u7f16\u7801\n      */\n+\n+\n     private void addDataComponent(Elements elements, String componentCode) {\n         Element tmpElement = elements.get(0);\n         tmpElement.attr(DIV_PROPERTY_COMPONENT, componentCode);\n@@ -102,6 +102,8 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n      * @param js  js\u6587\u4ef6\u5185\u5bb9\n      * @return js \u6587\u4ef6\u5185\u5bb9\n      */\n+\n+\n     private String dealJs(String js, IProcessableElementTag tag) {\n \n         //\u5728js \u4e2d\u68c0\u6d4bpropTypes \u5c5e\u6027\n@@ -110,36 +112,35 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n         }\n \n         //\u89e3\u6790propTypes\u4fe1\u606f\n+\n         String tmpProTypes = js.substring(js.indexOf(\"propTypes\"));\n         tmpProTypes = tmpProTypes.substring(tmpProTypes.indexOf(\"{\") + 1, tmpProTypes.indexOf(\"}\")).trim();\n \n         if (StringUtils.isEmpty(tmpProTypes)) {\n             return js;\n         }\n+        tmpProTypes = tmpProTypes.contains(\"\\r\") ? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n \n-        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n-\n-        String[] tmpType = tmpProTypes.contains(\"\\n\")\n-                        ? tmpProTypes.split(\"\\n\")\n-                        : tmpProTypes.split(\",\");\n+        String[] tmpType = tmpProTypes.contains(\"\\n\") ? tmpProTypes.split(\"\\n\") : tmpProTypes.split(\",\");\n         StringBuffer propsJs = new StringBuffer(\"\\nvar $props = {};\\n\");\n         for (String type : tmpType) {\n             if (StringUtils.isEmpty(type) || !type.contains(\":\")) {\n                 continue;\n             }\n+\n             String[] types = type.split(\":\");\n             String attrKey = \"\";\n             if (types[0].contains(\"//\")) {\n                 attrKey = types[0].substring(0, types[0].indexOf(\"//\"));\n             }\n-            attrKey = types[0].replace(\" \", \"\")\n-                    .replace(\"\\n\", \"\")\n-                    .replace(\"\\r\", \"\");\n+            attrKey = types[0].replace(\" \", \"\").replace(\"\\n\", \"\").replace(\"\\r\", \"\");\n+\n             if (!tag.hasAttribute(attrKey)) {\n                 String componentName = tag.getAttributeValue(\"name\");\n                 logger.error(\"\u7ec4\u4ef6\" + componentName + \"\u672a\u914d\u7f6e\u7ec4\u4ef6\u5c5e\u6027 \" + attrKey);\n                 throw new TemplateProcessingException(\"\u7ec4\u4ef6[\" + componentName + \"]\u672a\u914d\u7f6e\u7ec4\u4ef6\u5c5e\u6027\" + attrKey);\n             }\n+\n             String vcType = tag.getAttributeValue(attrKey);\n             if (types[1].contains(\"vc.propTypes.string\")) {\n                 vcType = \"'\" + vcType + \"'\";\n@@ -165,8 +166,9 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n      * @param js  js\u6587\u4ef6\u5185\u5bb9\n      * @return js \u6587\u4ef6\u5185\u5bb9\n      */\n-    private String dealJsAddComponentCode(String js, IProcessableElementTag tag) {\n \n+\n+    private String dealJsAddComponentCode(String js, IProcessableElementTag tag) {\n         if (!tag.hasAttribute(\"code\")) {\n             return js;\n         }\n@@ -175,4 +177,4 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n \n         return js.replace(\"@vc_\", code);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/299/VcCreateProcessor.java\nindex 112f89ab10..a866455325 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/299/VcCreateProcessor.java\n@@ -117,7 +117,7 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n             return js;\n         }\n \n-        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n+        tmpProTypes = tmpProTypes.contains(\"\\r\") ? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n \n         String[] tmpType = tmpProTypes.contains(\"\\n\")\n                         ? tmpProTypes.split(\"\\n\")\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "120",
                    "column": "50",
                    "severity": "error",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/299/VcCreateProcessor.java\nindex 112f89ab10..5afbfe4879 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/299/VcCreateProcessor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/299/VcCreateProcessor.java\n@@ -117,7 +117,7 @@ public class VcCreateProcessor extends AbstractElementTagProcessor {\n             return js;\n         }\n \n-        tmpProTypes = tmpProTypes.contains(\"\\r\")? tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n+        tmpProTypes = tmpProTypes.contains(\"\\r\") ?tmpProTypes.replace(\"\\r\", \"\") : tmpProTypes;\n \n         String[] tmpType = tmpProTypes.contains(\"\\n\")\n                         ? tmpProTypes.split(\"\\n\")\n",
            "diff_size": 1
        }
    ]
}