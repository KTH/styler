{
    "error_id": "105",
    "information": {
        "errors": [
            {
                "line": "92",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tpublic void removeRole(MasterMetaStorage storage, Role role) {\n\t\tif(roles.remove(role)) {\n\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n\t\t\tupdateStorage(storage);\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/105/User.java\nindex fcde517fa5..b96b250fcb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/105/User.java\n@@ -27,7 +27,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \n \t@MetaIdRefCollection\n \tprivate Set<Role> roles = Collections.synchronizedSet( new HashSet<>());\n-\t\n+\n \t/**\n \t * The name of a user is unique in the system. It is used to generate the UserId object.\n \t * The name might be an email address.\n@@ -41,7 +41,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\tthis.name = name;\n \t\tthis.label = label;\n \t}\n-\t\n+\n \n \n \t@Override\n@@ -58,7 +58,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic PrincipalCollection getPrincipals() {\n \t\treturn new SinglePrincipalCollection(getId());\n \t}\n-\t\n+\n \t@Override\n \tpublic boolean isPermitted(Permission permission) {\n \t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n@@ -73,7 +73,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic boolean isPermittedAll(Collection<Permission> permissions) {\n \t\treturn SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n \t}\n-\t\n+\n \t@Override\n \tpublic UserId createId() {\n \t\treturn new UserId(name);\n@@ -85,11 +85,11 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\t\tupdateStorage(storage);\n \t\t}\n \t}\n-\t\n+\n \t@Override\n \tpublic void removeRole(MasterMetaStorage storage, Role role) {\n \t\tif(roles.remove(role)) {\n-\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n+\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\n \t\t\tupdateStorage(storage);\n \t\t}\n \t}\n@@ -97,7 +97,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic Set<Role> getRoles(){\n \t\treturn Set.copyOf(roles);\n \t}\n-\t\n+\n \t@Override\n \tprotected void updateStorage(MasterMetaStorage storage) {\n \t\tstorage.updateUser(this);\n",
            "diff_size": 7
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/105/User.java\nindex fcde517fa5..2cf6213c02 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/105/User.java\n@@ -25,88 +25,92 @@ import org.apache.shiro.subject.PrincipalCollection;\n @Slf4j\n public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \n-\t@MetaIdRefCollection\n-\tprivate Set<Role> roles = Collections.synchronizedSet( new HashSet<>());\n-\t\n-\t/**\n-\t * The name of a user is unique in the system. It is used to generate the UserId object.\n-\t * The name might be an email address.\n-\t */\n-\t@Getter @Setter @NonNull @NotNull\n-\tprivate String name;\n-\t@Getter @Setter @NonNull @NotNull\n-\tprivate String label;\n-\n-\tpublic User(String name, String label) {\n-\t\tthis.name = name;\n-\t\tthis.label = label;\n-\t}\n-\t\n-\n-\n-\t@Override\n-\tpublic void checkPermission(Permission permission) throws AuthorizationException {\n-\t\tSecurityUtils.getSecurityManager().checkPermission(getPrincipals(), permission);\n-\t}\n-\n-\t@Override\n-\tpublic void checkPermissions(Collection<Permission> permissions) throws AuthorizationException {\n-\t\tSecurityUtils.getSecurityManager().checkPermissions(getPrincipals(), permissions);\n-\t}\n-\n-\t@Override\n-\tpublic PrincipalCollection getPrincipals() {\n-\t\treturn new SinglePrincipalCollection(getId());\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean isPermitted(Permission permission) {\n-\t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n-\t}\n-\n-\t@Override\n-\tpublic boolean[] isPermitted(List<Permission> permissions) {\n-\t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permissions);\n-\t}\n-\n-\t@Override\n-\tpublic boolean isPermittedAll(Collection<Permission> permissions) {\n-\t\treturn SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n-\t}\n-\t\n-\t@Override\n-\tpublic UserId createId() {\n-\t\treturn new UserId(name);\n-\t}\n-\n-\tpublic void addRole(MasterMetaStorage storage, Role role) {\n-\t\tif(roles.add(role)) {\n-\t\t\tlog.trace(\"Added role {} to user {}\", role.getId(), getId());\n-\t\t\tupdateStorage(storage);\n-\t\t}\n-\t}\n-\t\n-\t@Override\n-\tpublic void removeRole(MasterMetaStorage storage, Role role) {\n-\t\tif(roles.remove(role)) {\n-\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n-\t\t\tupdateStorage(storage);\n-\t\t}\n-\t}\n-\n-\tpublic Set<Role> getRoles(){\n-\t\treturn Set.copyOf(roles);\n-\t}\n-\t\n-\t@Override\n-\tprotected void updateStorage(MasterMetaStorage storage) {\n-\t\tstorage.updateUser(this);\n-\t}\n-\n-\n-\n-\t@Override\n-\tpublic Object getPrincipal() {\n-\t\treturn getId();\n-\t}\n+    @MetaIdRefCollection\n+    private Set<Role> roles = Collections.synchronizedSet(new HashSet<>());\n+\n+    /**\n+     * The name of a user is unique in the system. It is used to generate the UserId object.\n+     * The name might be an email address.\n+     */\n+    @Getter\n+    @Setter\n+    @NonNull\n+    @NotNull\n+    private String name;\n+    @Getter\n+    @Setter\n+    @NonNull\n+    @NotNull\n+    private String label;\n+\n+    public User(String name, String label) {\n+        this.name = name;\n+        this.label = label;\n+    }\n+\n+\n+    @Override\n+    public void checkPermission(Permission permission) throws AuthorizationException {\n+        SecurityUtils.getSecurityManager().checkPermission(getPrincipals(), permission);\n+    }\n+\n+    @Override\n+    public void checkPermissions(Collection<Permission> permissions) throws AuthorizationException {\n+        SecurityUtils.getSecurityManager().checkPermissions(getPrincipals(), permissions);\n+    }\n+\n+    @Override\n+    public PrincipalCollection getPrincipals() {\n+        return new SinglePrincipalCollection(getId());\n+    }\n+\n+    @Override\n+    public boolean isPermitted(Permission permission) {\n+        return SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n+    }\n+\n+    @Override\n+    public boolean[] isPermitted(List<Permission> permissions) {\n+        return SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permissions);\n+    }\n+\n+    @Override\n+    public boolean isPermittedAll(Collection<Permission> permissions) {\n+        return SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n+    }\n+\n+    @Override\n+    public UserId createId() {\n+        return new UserId(name);\n+    }\n+\n+    public void addRole(MasterMetaStorage storage, Role role) {\n+        if (roles.add(role)) {\n+            log.trace(\"Added role {} to user {}\", role.getId(), getId());\n+            updateStorage(storage);\n+        }\n+    }\n+\n+    @Override\n+    public void removeRole(MasterMetaStorage storage, Role role) {\n+        if (roles.remove(role)) {\n+            log.trace(\"Removed role {} from user {}\", role.getId(), getId());\n+            updateStorage(storage);\n+        }\n+    }\n+\n+    public Set<Role> getRoles() {\n+        return Set.copyOf(roles);\n+    }\n+\n+    @Override\n+    protected void updateStorage(MasterMetaStorage storage) {\n+        storage.updateUser(this);\n+    }\n+\n+\n+    @Override\n+    public Object getPrincipal() {\n+        return getId();\n+    }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/105/User.java\nindex fcde517fa5..2064e9092f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/105/User.java\n@@ -26,7 +26,7 @@ import org.apache.shiro.subject.PrincipalCollection;\n public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \n \t@MetaIdRefCollection\n-\tprivate Set<Role> roles = Collections.synchronizedSet( new HashSet<>());\n+\tprivate Set<Role> roles = Collections.synchronizedSet(new HashSet<>());\n \t\n \t/**\n \t * The name of a user is unique in the system. It is used to generate the UserId object.\n@@ -41,8 +41,6 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\tthis.name = name;\n \t\tthis.label = label;\n \t}\n-\t\n-\n \n \t@Override\n \tpublic void checkPermission(Permission permission) throws AuthorizationException {\n@@ -89,8 +87,8 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t@Override\n \tpublic void removeRole(MasterMetaStorage storage, Role role) {\n \t\tif(roles.remove(role)) {\n-\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n-\t\t\tupdateStorage(storage);\n+\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\n+updateStorage(storage);\n \t\t}\n \t}\n \n@@ -103,10 +101,8 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\tstorage.updateUser(this);\n \t}\n \n-\n-\n-\t@Override\n+@Override\n \tpublic Object getPrincipal() {\n \t\treturn getId();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/105/User.java\nindex fcde517fa5..f6588a941b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/105/User.java\n@@ -6,9 +6,7 @@ import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import javax.validation.constraints.NotNull;\n-\n import com.bakdata.conquery.io.jackson.serializer.MetaIdRefCollection;\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.util.SinglePrincipalCollection;\n@@ -25,88 +23,84 @@ import org.apache.shiro.subject.PrincipalCollection;\n @Slf4j\n public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \n-\t@MetaIdRefCollection\n-\tprivate Set<Role> roles = Collections.synchronizedSet( new HashSet<>());\n-\t\n-\t/**\n-\t * The name of a user is unique in the system. It is used to generate the UserId object.\n-\t * The name might be an email address.\n-\t */\n-\t@Getter @Setter @NonNull @NotNull\n-\tprivate String name;\n-\t@Getter @Setter @NonNull @NotNull\n-\tprivate String label;\n-\n-\tpublic User(String name, String label) {\n-\t\tthis.name = name;\n-\t\tthis.label = label;\n-\t}\n-\t\n-\n-\n-\t@Override\n-\tpublic void checkPermission(Permission permission) throws AuthorizationException {\n-\t\tSecurityUtils.getSecurityManager().checkPermission(getPrincipals(), permission);\n-\t}\n-\n-\t@Override\n-\tpublic void checkPermissions(Collection<Permission> permissions) throws AuthorizationException {\n-\t\tSecurityUtils.getSecurityManager().checkPermissions(getPrincipals(), permissions);\n-\t}\n-\n-\t@Override\n-\tpublic PrincipalCollection getPrincipals() {\n-\t\treturn new SinglePrincipalCollection(getId());\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean isPermitted(Permission permission) {\n-\t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n-\t}\n-\n-\t@Override\n-\tpublic boolean[] isPermitted(List<Permission> permissions) {\n-\t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permissions);\n-\t}\n-\n-\t@Override\n-\tpublic boolean isPermittedAll(Collection<Permission> permissions) {\n-\t\treturn SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n-\t}\n-\t\n-\t@Override\n-\tpublic UserId createId() {\n-\t\treturn new UserId(name);\n-\t}\n-\n-\tpublic void addRole(MasterMetaStorage storage, Role role) {\n-\t\tif(roles.add(role)) {\n-\t\t\tlog.trace(\"Added role {} to user {}\", role.getId(), getId());\n-\t\t\tupdateStorage(storage);\n-\t\t}\n-\t}\n-\t\n-\t@Override\n-\tpublic void removeRole(MasterMetaStorage storage, Role role) {\n-\t\tif(roles.remove(role)) {\n-\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n-\t\t\tupdateStorage(storage);\n-\t\t}\n-\t}\n-\n-\tpublic Set<Role> getRoles(){\n-\t\treturn Set.copyOf(roles);\n-\t}\n-\t\n-\t@Override\n-\tprotected void updateStorage(MasterMetaStorage storage) {\n-\t\tstorage.updateUser(this);\n-\t}\n-\n-\n-\n-\t@Override\n-\tpublic Object getPrincipal() {\n-\t\treturn getId();\n-\t}\n-}\n+    @MetaIdRefCollection\n+    private Set<Role> roles = Collections.synchronizedSet(new HashSet<>());\n+    \n+    /**\n+     * The name of a user is unique in the system. It is used to generate the UserId object.\n+     * The name might be an email address.\n+     */\n+    @Getter @Setter @NonNull @NotNull\n+    private String name;\n+    @Getter @Setter @NonNull @NotNull\n+    private String label;\n+\n+    public User(String name, String label) {\n+        this.name = name;\n+        this.label = label;\n+    }\n+\n+    @Override\n+    public void checkPermission(Permission permission) throws AuthorizationException {\n+        SecurityUtils.getSecurityManager().checkPermission(getPrincipals(), permission);\n+    }\n+\n+    @Override\n+    public void checkPermissions(Collection<Permission> permissions) throws AuthorizationException {\n+        SecurityUtils.getSecurityManager().checkPermissions(getPrincipals(), permissions);\n+    }\n+\n+    @Override\n+    public PrincipalCollection getPrincipals() {\n+        return new SinglePrincipalCollection(getId());\n+    }\n+\n+    @Override\n+    public boolean isPermitted(Permission permission) {\n+        return SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n+    }\n+\n+    @Override\n+    public boolean[] isPermitted(List<Permission> permissions) {\n+        return SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permissions);\n+    }\n+\n+    @Override\n+    public boolean isPermittedAll(Collection<Permission> permissions) {\n+        return SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n+    }\n+\n+    @Override\n+    public UserId createId() {\n+        return new UserId(name);\n+    }\n+\n+    public void addRole(MasterMetaStorage storage, Role role) {\n+        if(roles.add(role)) {\n+            log.trace(\"Added role {} to user {}\", role.getId(), getId());\n+            updateStorage(storage);\n+        }\n+    }\n+\n+    @Override\n+    public void removeRole(MasterMetaStorage storage, Role role) {\n+        if(roles.remove(role)) {\n+            log.trace(\"Removed role {} from user {}\", role.getId(), getId());\n+            updateStorage(storage);\n+        }\n+    }\n+\n+    public Set<Role> getRoles() {\n+        return Set.copyOf(roles);\n+    }\n+\n+    @Override\n+    protected void updateStorage(MasterMetaStorage storage) {\n+        storage.updateUser(this);\n+    }\n+\n+    @Override\n+    public Object getPrincipal() {\n+        return getId();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 87
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/105/User.java\nindex fcde517fa5..b96b250fcb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/105/User.java\n@@ -27,7 +27,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \n \t@MetaIdRefCollection\n \tprivate Set<Role> roles = Collections.synchronizedSet( new HashSet<>());\n-\t\n+\n \t/**\n \t * The name of a user is unique in the system. It is used to generate the UserId object.\n \t * The name might be an email address.\n@@ -41,7 +41,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\tthis.name = name;\n \t\tthis.label = label;\n \t}\n-\t\n+\n \n \n \t@Override\n@@ -58,7 +58,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic PrincipalCollection getPrincipals() {\n \t\treturn new SinglePrincipalCollection(getId());\n \t}\n-\t\n+\n \t@Override\n \tpublic boolean isPermitted(Permission permission) {\n \t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n@@ -73,7 +73,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic boolean isPermittedAll(Collection<Permission> permissions) {\n \t\treturn SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n \t}\n-\t\n+\n \t@Override\n \tpublic UserId createId() {\n \t\treturn new UserId(name);\n@@ -85,11 +85,11 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\t\tupdateStorage(storage);\n \t\t}\n \t}\n-\t\n+\n \t@Override\n \tpublic void removeRole(MasterMetaStorage storage, Role role) {\n \t\tif(roles.remove(role)) {\n-\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n+\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\n \t\t\tupdateStorage(storage);\n \t\t}\n \t}\n@@ -97,7 +97,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic Set<Role> getRoles(){\n \t\treturn Set.copyOf(roles);\n \t}\n-\t\n+\n \t@Override\n \tprotected void updateStorage(MasterMetaStorage storage) {\n \t\tstorage.updateUser(this);\n",
            "diff_size": 7
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/105/User.java\nindex fcde517fa5..b96b250fcb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/105/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/105/User.java\n@@ -27,7 +27,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \n \t@MetaIdRefCollection\n \tprivate Set<Role> roles = Collections.synchronizedSet( new HashSet<>());\n-\t\n+\n \t/**\n \t * The name of a user is unique in the system. It is used to generate the UserId object.\n \t * The name might be an email address.\n@@ -41,7 +41,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\tthis.name = name;\n \t\tthis.label = label;\n \t}\n-\t\n+\n \n \n \t@Override\n@@ -58,7 +58,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic PrincipalCollection getPrincipals() {\n \t\treturn new SinglePrincipalCollection(getId());\n \t}\n-\t\n+\n \t@Override\n \tpublic boolean isPermitted(Permission permission) {\n \t\treturn SecurityUtils.getSecurityManager().isPermitted(getPrincipals(), permission);\n@@ -73,7 +73,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic boolean isPermittedAll(Collection<Permission> permissions) {\n \t\treturn SecurityUtils.getSecurityManager().isPermittedAll(getPrincipals(), permissions);\n \t}\n-\t\n+\n \t@Override\n \tpublic UserId createId() {\n \t\treturn new UserId(name);\n@@ -85,11 +85,11 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \t\t\tupdateStorage(storage);\n \t\t}\n \t}\n-\t\n+\n \t@Override\n \tpublic void removeRole(MasterMetaStorage storage, Role role) {\n \t\tif(roles.remove(role)) {\n-\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\t\t\t\t\n+\t\t\tlog.trace(\"Removed role {} from user {}\", role.getId(), getId());\n \t\t\tupdateStorage(storage);\n \t\t}\n \t}\n@@ -97,7 +97,7 @@ public class User extends FilteredUser<UserId> implements Principal, RoleOwner {\n \tpublic Set<Role> getRoles(){\n \t\treturn Set.copyOf(roles);\n \t}\n-\t\n+\n \t@Override\n \tprotected void updateStorage(MasterMetaStorage storage) {\n \t\tstorage.updateUser(this);\n",
            "diff_size": 7
        }
    ]
}