{
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "146",
                "column": "52",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    PreferredWidth preferredWidth = (PreferredWidth)o;\n    return\n        Objects.equals(this.type, preferredWidth.type) &&\n        Objects.equals(this.value, preferredWidth.value);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/6/PreferredWidth.java\nindex d87c21485c..8ae9e2ed42 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/6/PreferredWidth.java\n@@ -143,7 +143,7 @@ public class PreferredWidth {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PreferredWidth preferredWidth = (PreferredWidth)o;\n+    PreferredWidth preferredWidth = (PreferredWidth) o;\n     return\n         Objects.equals(this.type, preferredWidth.type) &&\n         Objects.equals(this.value, preferredWidth.value);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/6/PreferredWidth.java\nindex d87c21485c..2afc9b60fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/6/PreferredWidth.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,106 +50,109 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Preferred width.\")\n public class PreferredWidth {\n-    /**\n-     * Gets or sets the unit of measure used for this preferred width value.\n-     */\n-    @JsonAdapter(TypeEnum.Adapter.class)\n-    public enum TypeEnum {\n-        AUTO(\"Auto\"),\n-        PERCENT(\"Percent\"),\n-        POINTS(\"Points\");\n-\n-        private String value;\n-\n-        TypeEnum(String value) {\n-            this.value = value;\n-        }\n-\n-        public String getValue() {\n-            return value;\n-        }\n+  /**\n+   * Gets or sets the unit of measure used for this preferred width value.\n+   */\n+  @JsonAdapter(TypeEnum.Adapter.class)\n+  public enum TypeEnum {\n+    AUTO(\"Auto\"),\n+    PERCENT(\"Percent\"),\n+    POINTS(\"Points\");\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    private String value;\n \n-        public static TypeEnum fromValue(String text) {\n-            for (TypeEnum b : TypeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n-\n-        public static class Adapter extends TypeAdapter< TypeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public TypeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return TypeEnum.fromValue(String.valueOf(value));\n-            }\n-        }\n+    TypeEnum(String value) {\n+      this.value = value;\n     }\n \n-    @SerializedName(\"Type\")\n-    private TypeEnum type = null;\n-\n-    @SerializedName(\"Value\")\n-    private Double value = null;\n-    public PreferredWidth type(TypeEnum type) {\n-        this.type = type;\n-        return this;\n+    public String getValue() {\n+      return value;\n     }\n \n-    /**\n-     * Gets or sets the unit of measure used for this preferred width value.\n-    * @return type\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the unit of measure used for this preferred width value.\")\n-    public TypeEnum getType() {\n-        return type;\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n     }\n \n-    public void setType(TypeEnum type) {\n-        this.type = type;\n+    public static TypeEnum fromValue(String text) {\n+      for (TypeEnum b : TypeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n+        }\n+      }\n+      return null;\n     }\n \n-    public PreferredWidth value(Double value) {\n-        this.value = value;\n-        return this;\n+    public static class Adapter extends TypeAdapter<TypeEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+      @Override\n+      public TypeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return TypeEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n-    /**\n-     * Gets or sets the preferred width value. The unit of measure is specified in the Type property.\n-    * @return value\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the preferred width value. The unit of measure is specified in the Type property.\")\n-    public Double getValue() {\n-        return value;\n-    }\n+  @SerializedName(\"Type\")\n+  private TypeEnum type = null;\n \n-    public void setValue(Double value) {\n-        this.value = value;\n-    }\n+  @SerializedName(\"Value\")\n+  private Double value = null;\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    PreferredWidth preferredWidth = (PreferredWidth)o;\n+  public PreferredWidth type(TypeEnum type) {\n+    this.type = type;\n+    return this;\n+  }\n+\n+  /**\n+   * Gets or sets the unit of measure used for this preferred width value.\n+   *\n+   * @return type\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the unit of measure used for this preferred width value.\")\n+  public TypeEnum getType() {\n+    return type;\n+  }\n+\n+  public void setType(TypeEnum type) {\n+    this.type = type;\n+  }\n+\n+  public PreferredWidth value(Double value) {\n+    this.value = value;\n+    return this;\n+  }\n+\n+  /**\n+   * Gets or sets the preferred width value. The unit of measure is specified in the Type property.\n+   *\n+   * @return value\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the preferred width value. The unit of measure is specified in the Type property.\")\n+  public Double getValue() {\n+    return value;\n+  }\n+\n+  public void setValue(Double value) {\n+    this.value = value;\n+  }\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    PreferredWidth preferredWidth = (PreferredWidth) o;\n     return\n         Objects.equals(this.type, preferredWidth.type) &&\n-        Objects.equals(this.value, preferredWidth.value);\n+            Objects.equals(this.value, preferredWidth.value);\n   }\n \n   @Override\n",
            "diff_size": 141
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "150",
                    "column": "48",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/6/PreferredWidth.java\nindex d87c21485c..db67296041 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/6/PreferredWidth.java\n@@ -53,8 +53,10 @@ public class PreferredWidth {\n     @JsonAdapter(TypeEnum.Adapter.class)\n     public enum TypeEnum {\n         AUTO(\"Auto\"),\n-        PERCENT(\"Percent\"),\n-        POINTS(\"Points\");\n+\n+PERCENT(\"Percent\"),\n+\n+POINTS(\"Points\");\n \n         private String value;\n \n@@ -80,7 +82,7 @@ public class PreferredWidth {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< TypeEnum > {\n+        public static class Adapter extends TypeAdapter<TypeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -99,7 +101,8 @@ public class PreferredWidth {\n \n     @SerializedName(\"Value\")\n     private Double value = null;\n-    public PreferredWidth type(TypeEnum type) {\n+\n+public PreferredWidth type(TypeEnum type) {\n         this.type = type;\n         return this;\n     }\n@@ -139,13 +142,13 @@ public class PreferredWidth {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PreferredWidth preferredWidth = (PreferredWidth)o;\n-    return\n-        Objects.equals(this.type, preferredWidth.type) &&\n+\n+PreferredWidth preferredWidth = (PreferredWidth)o;\n+    return Objects.equals(this.type, preferredWidth.type) &&\n         Objects.equals(this.value, preferredWidth.value);\n   }\n \n@@ -174,4 +177,4 @@ public class PreferredWidth {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/6/PreferredWidth.java\nindex d87c21485c..fb4433247c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/6/PreferredWidth.java\n@@ -45,133 +45,156 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Preferred width.\n  */\n+\n+\n @ApiModel(description = \"Preferred width.\")\n+\n public class PreferredWidth {\n     /**\n      * Gets or sets the unit of measure used for this preferred width value.\n      */\n     @JsonAdapter(TypeEnum.Adapter.class)\n     public enum TypeEnum {\n-        AUTO(\"Auto\"),\n-        PERCENT(\"Percent\"),\n-        POINTS(\"Points\");\n+    AUTO(\"Auto\"),\n \n-        private String value;\n+    PERCENT(\"Percent\"),\n \n-        TypeEnum(String value) {\n-            this.value = value;\n-        }\n+    POINTS(\"Points\");\n+\n+    private String value;\n+\n+    TypeEnum(String value) {\n+        this.value = value;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n \n-        public String getValue() {\n-            return value;\n+    @Override\n+    public String toString() {\n+                             return String.valueOf(value);\n+    }\n+\n+    public static TypeEnum fromValue(String text) {\n+        for (TypeEnum b : TypeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+                                                 return b;\n+        }\n         }\n+        return null;\n+    }\n \n+    public static class Adapter extends TypeAdapter<TypeEnum> {\n         @Override\n-        public String toString() {\n-            return String.valueOf(value);\n+        public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {\n+            jsonWriter.value(enumeration.getValue());\n         }\n \n-        public static TypeEnum fromValue(String text) {\n-            for (TypeEnum b : TypeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n \n-        public static class Adapter extends TypeAdapter< TypeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public TypeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return TypeEnum.fromValue(String.valueOf(value));\n-            }\n+        @Override\n+        public TypeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return TypeEnum.fromValue(String.valueOf(value));\n         }\n     }\n+    }\n+\n \n     @SerializedName(\"Type\")\n     private TypeEnum type = null;\n \n     @SerializedName(\"Value\")\n     private Double value = null;\n+\n     public PreferredWidth type(TypeEnum type) {\n-        this.type = type;\n-        return this;\n+    this.type = type;\n+    return this;\n     }\n \n     /**\n      * Gets or sets the unit of measure used for this preferred width value.\n     * @return type\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the unit of measure used for this preferred width value.\")\n     public TypeEnum getType() {\n-        return type;\n+    return type;\n     }\n \n+\n     public void setType(TypeEnum type) {\n-        this.type = type;\n+    this.type = type;\n     }\n \n+\n     public PreferredWidth value(Double value) {\n-        this.value = value;\n-        return this;\n+    this.value = value;\n+    return this;\n     }\n \n     /**\n      * Gets or sets the preferred width value. The unit of measure is specified in the Type property.\n     * @return value\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the preferred width value. The unit of measure is specified in the Type property.\")\n     public Double getValue() {\n-        return value;\n+    return value;\n     }\n \n+\n     public void setValue(Double value) {\n-        this.value = value;\n+    this.value = value;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    PreferredWidth preferredWidth = (PreferredWidth)o;\n-    return\n-        Objects.equals(this.type, preferredWidth.type) &&\n+\n+        PreferredWidth preferredWidth = (PreferredWidth) o;\n+        return Objects.equals(this.type, preferredWidth.type) &&\n         Objects.equals(this.value, preferredWidth.value);\n-  }\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(type, value);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class PreferredWidth {\\n\");\n     sb.append(\"    type: \").append(toIndentedString(type)).append(\"\\n\");\n     sb.append(\"    value: \").append(toIndentedString(value)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 94
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/6/PreferredWidth.java\nindex d87c21485c..8ae9e2ed42 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/6/PreferredWidth.java\n@@ -143,7 +143,7 @@ public class PreferredWidth {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PreferredWidth preferredWidth = (PreferredWidth)o;\n+    PreferredWidth preferredWidth = (PreferredWidth) o;\n     return\n         Objects.equals(this.type, preferredWidth.type) &&\n         Objects.equals(this.value, preferredWidth.value);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/6/PreferredWidth.java\nindex d87c21485c..ca611151ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/6/PreferredWidth.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/6/PreferredWidth.java\n@@ -143,7 +143,8 @@ public class PreferredWidth {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    PreferredWidth preferredWidth = (PreferredWidth)o;\n+    PreferredWidth preferredWidth = (PreferredWidth\n+) o;\n     return\n         Objects.equals(this.type, preferredWidth.type) &&\n         Objects.equals(this.value, preferredWidth.value);\n",
            "diff_size": 2
        }
    ]
}