{
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Created by ecoolper on 2017/5/5.\n */\npublic class JoddMediaImgUploadRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n  public JoddMediaImgUploadRequestExecutor(RequestHttp requestHttp) {\n    super(requestHttp);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/1/JoddMediaImgUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/1/JoddMediaImgUploadRequestExecutor.java\nindex b66a793365..9a4b495717 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/1/JoddMediaImgUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/1/JoddMediaImgUploadRequestExecutor.java\n@@ -18,7 +18,8 @@ import java.io.IOException;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMediaImgUploadRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddMediaImgUploadRequestExecutor\n+    extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public JoddMediaImgUploadRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/1/JoddMediaImgUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/1/JoddMediaImgUploadRequestExecutor.java\nindex b66a793365..844af784b9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/1/JoddMediaImgUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/1/JoddMediaImgUploadRequestExecutor.java\n@@ -46,4 +46,4 @@ public class JoddMediaImgUploadRequestExecutor extends MediaImgUploadRequestExec\n \n     return WxMediaImgUploadResult.fromJson(responseContent);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/1/JoddMediaImgUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/1/JoddMediaImgUploadRequestExecutor.java\nindex b66a793365..22cedabb83 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/1/JoddMediaImgUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/1/JoddMediaImgUploadRequestExecutor.java\n@@ -5,45 +5,44 @@ import jodd.http.HttpRequest;\n import jodd.http.HttpResponse;\n import jodd.http.ProxyInfo;\n import jodd.util.StringPool;\n-\n import me.chanjar.weixin.common.bean.result.WxError;\n import me.chanjar.weixin.common.exception.WxErrorException;\n import me.chanjar.weixin.common.util.http.RequestHttp;\n import me.chanjar.weixin.mp.bean.material.WxMediaImgUploadResult;\n import me.chanjar.weixin.mp.util.http.MediaImgUploadRequestExecutor;\n-\n import java.io.File;\n import java.io.IOException;\n \n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n+\n+\n public class JoddMediaImgUploadRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n-  public JoddMediaImgUploadRequestExecutor(RequestHttp requestHttp) {\n+\n+    public JoddMediaImgUploadRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n-  }\n+    }\n \n-  @Override\n-  public WxMediaImgUploadResult execute(String uri, File data) throws WxErrorException, IOException {\n+    @Override\n+    public WxMediaImgUploadResult execute(String uri, File data) throws WxErrorException, IOException {\n     if (data == null) {\n-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u6587\u4ef6\u5bf9\u8c61\u4e3a\u7a7a\").build());\n+        throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u6587\u4ef6\u5bf9\u8c61\u4e3a\u7a7a\").build());\n     }\n \n     HttpRequest request = HttpRequest.post(uri);\n     if (requestHttp.getRequestHttpProxy() != null) {\n-      requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n+        requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n     }\n     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n     request.form(\"media\", data);\n     HttpResponse response = request.send();\n     response.charset(StringPool.UTF_8);\n     String responseContent = response.bodyText();\n     WxError error = WxError.fromJson(responseContent);\n     if (error.getErrorCode() != 0) {\n-      throw new WxErrorException(error);\n+        throw new WxErrorException(error);\n     }\n-\n     return WxMediaImgUploadResult.fromJson(responseContent);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}