{
    "error_id": "967",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/967/Serialize2.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/967/Serialize2.java\nindex ee439149b1..e31be6762e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/967/Serialize2.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/967/Serialize2.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.common;\n \n import java.io.DataInputStream;\n@@ -21,24 +22,24 @@ import java.io.DataOutputStream;\n import java.io.IOException;\n \n public interface Serialize2 {\n-  /**\n-   * Serialize object to the Output stream.\n-   *\n-   * @param output the Netty ByteBuf\n-   */\n-  void serialize(DataOutputStream output) throws IOException;\n+    /**\n+     * Serialize object to the Output stream.\n+     *\n+     * @param output the Netty ByteBuf\n+     */\n+    void serialize(DataOutputStream output) throws IOException;\n \n-  /**\n-   * Deserialize object from the input stream.\n-   *\n-   * @param input the input stream\n-   */\n-  void deserialize(DataInputStream input) throws IOException;\n+    /**\n+     * Deserialize object from the input stream.\n+     *\n+     * @param input the input stream\n+     */\n+    void deserialize(DataInputStream input) throws IOException;\n \n-  /**\n-   * Estimate serialized data size of the object, it used to ByteBuf allocation.\n-   *\n-   * @return int serialized data size of the object\n-   */\n-  int dataSize();\n+    /**\n+     * Estimate serialized data size of the object, it used to ByteBuf allocation.\n+     *\n+     * @return int serialized data size of the object\n+     */\n+    int dataSize();\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/967/Serialize2.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/967/Serialize2.java\nindex ee439149b1..a5e526166a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/967/Serialize2.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/967/Serialize2.java\n@@ -41,4 +41,4 @@ public interface Serialize2 {\n    * @return int serialized data size of the object\n    */\n   int dataSize();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/967/Serialize2.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/967/Serialize2.java\nindex ee439149b1..65cc6a6bd5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/967/Serialize2.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/967/Serialize2.java\n@@ -26,19 +26,23 @@ public interface Serialize2 {\n    *\n    * @param output the Netty ByteBuf\n    */\n-  void serialize(DataOutputStream output) throws IOException;\n+    void serialize(DataOutputStream output) throws IOException;\n \n   /**\n    * Deserialize object from the input stream.\n    *\n    * @param input the input stream\n    */\n-  void deserialize(DataInputStream input) throws IOException;\n+\n+\n+    void deserialize(DataInputStream input) throws IOException;\n \n   /**\n    * Estimate serialized data size of the object, it used to ByteBuf allocation.\n    *\n    * @return int serialized data size of the object\n    */\n-  int dataSize();\n-}\n+\n+\n+    int dataSize();\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}