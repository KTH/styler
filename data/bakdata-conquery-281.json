{
    "error_id": "281",
    "information": {
        "errors": [
            {
                "line": "16",
                "column": "75",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n@Getter\npublic class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n\t\n\tprivate List<ProtoUser> initialUsers = List.of(\n\t\tProtoUser.builder()",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/281/DevelopmentAuthorizationConfig.java\nindex 4c8ab899ff..4b87b0a05a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/281/DevelopmentAuthorizationConfig.java\n@@ -13,8 +13,8 @@ import lombok.Getter;\n \n @CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n @Getter\n-public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n-\t\n+public class DevelopmentAuthorizationConfig implements AuthorizationConfig {\n+\n \tprivate List<ProtoUser> initialUsers = List.of(\n \t\tProtoUser.builder()\n \t\t\t.name(\"SUPERUSER@SUPERUSER\")\n@@ -22,7 +22,7 @@ public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n \t\t\t.permissions(Set.of(\"*\"))\n \t\t\t.build()\n \t\t);\n-\t\n+\n \tprivate List<String> overviewScope = List.of(\n \t\tDatasetPermission.DOMAIN,\n \t\tAdminPermission.DOMAIN,\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/281/DevelopmentAuthorizationConfig.java\nindex 4c8ab899ff..7b991b43f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/281/DevelopmentAuthorizationConfig.java\n@@ -13,19 +13,19 @@ import lombok.Getter;\n \n @CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n @Getter\n-public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n-\t\n-\tprivate List<ProtoUser> initialUsers = List.of(\n-\t\tProtoUser.builder()\n-\t\t\t.name(\"SUPERUSER@SUPERUSER\")\n-\t\t\t.label(\"SUPERUSER\")\n-\t\t\t.permissions(Set.of(\"*\"))\n-\t\t\t.build()\n-\t\t);\n-\t\n-\tprivate List<String> overviewScope = List.of(\n-\t\tDatasetPermission.DOMAIN,\n-\t\tAdminPermission.DOMAIN,\n-\t\tSuperPermission.DOMAIN);\n+public class DevelopmentAuthorizationConfig implements AuthorizationConfig {\n+\n+    private List<ProtoUser> initialUsers = List.of(\n+        ProtoUser.builder()\n+            .name(\"SUPERUSER@SUPERUSER\")\n+            .label(\"SUPERUSER\")\n+            .permissions(Set.of(\"*\"))\n+            .build()\n+    );\n+\n+    private List<String> overviewScope = List.of(\n+        DatasetPermission.DOMAIN,\n+        AdminPermission.DOMAIN,\n+        SuperPermission.DOMAIN);\n \n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/281/DevelopmentAuthorizationConfig.java\nindex 4c8ab899ff..8f4e6bbe6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/281/DevelopmentAuthorizationConfig.java\n@@ -13,19 +13,17 @@ import lombok.Getter;\n \n @CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n @Getter\n-public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n+public class DevelopmentAuthorizationConfig implements AuthorizationConfig {\n \t\n-\tprivate List<ProtoUser> initialUsers = List.of(\n-\t\tProtoUser.builder()\n+\tprivate List<ProtoUser> initialUsers = List.of(ProtoUser.builder()\n \t\t\t.name(\"SUPERUSER@SUPERUSER\")\n \t\t\t.label(\"SUPERUSER\")\n \t\t\t.permissions(Set.of(\"*\"))\n \t\t\t.build()\n \t\t);\n \t\n-\tprivate List<String> overviewScope = List.of(\n-\t\tDatasetPermission.DOMAIN,\n+\tprivate List<String> overviewScope = List.of(DatasetPermission.DOMAIN,\n \t\tAdminPermission.DOMAIN,\n \t\tSuperPermission.DOMAIN);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/281/DevelopmentAuthorizationConfig.java\nindex 4c8ab899ff..9249290a2d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/281/DevelopmentAuthorizationConfig.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.models.auth.develop;\n \n import java.util.List;\n import java.util.Set;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.auth.AuthorizationConfig;\n import com.bakdata.conquery.models.auth.ProtoUser;\n@@ -11,21 +10,13 @@ import com.bakdata.conquery.models.auth.permissions.DatasetPermission;\n import com.bakdata.conquery.models.auth.permissions.SuperPermission;\n import lombok.Getter;\n \n-@CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n+@CPSType(base= AuthorizationConfig.class, id= \"DEVELOPMENT\")\n @Getter\n-public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n-\t\n-\tprivate List<ProtoUser> initialUsers = List.of(\n-\t\tProtoUser.builder()\n-\t\t\t.name(\"SUPERUSER@SUPERUSER\")\n-\t\t\t.label(\"SUPERUSER\")\n-\t\t\t.permissions(Set.of(\"*\"))\n-\t\t\t.build()\n-\t\t);\n-\t\n-\tprivate List<String> overviewScope = List.of(\n-\t\tDatasetPermission.DOMAIN,\n-\t\tAdminPermission.DOMAIN,\n-\t\tSuperPermission.DOMAIN);\n+public class DevelopmentAuthorizationConfig implements AuthorizationConfig {\n \n-}\n+    private List<ProtoUser> initialUsers = List.of(ProtoUser.builder().name(\"SUPERUSER@SUPERUSER\")\n+                                                                      .label(\"SUPERUSER\")\n+                                                                      .permissions(Set.of(\"*\"))\n+                                                                      .build());\n+    private List<String> overviewScope = List.of(DatasetPermission.DOMAIN, AdminPermission.DOMAIN, SuperPermission.DOMAIN);\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/281/DevelopmentAuthorizationConfig.java\nindex 4c8ab899ff..4b87b0a05a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/281/DevelopmentAuthorizationConfig.java\n@@ -13,8 +13,8 @@ import lombok.Getter;\n \n @CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n @Getter\n-public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n-\t\n+public class DevelopmentAuthorizationConfig implements AuthorizationConfig {\n+\n \tprivate List<ProtoUser> initialUsers = List.of(\n \t\tProtoUser.builder()\n \t\t\t.name(\"SUPERUSER@SUPERUSER\")\n@@ -22,7 +22,7 @@ public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n \t\t\t.permissions(Set.of(\"*\"))\n \t\t\t.build()\n \t\t);\n-\t\n+\n \tprivate List<String> overviewScope = List.of(\n \t\tDatasetPermission.DOMAIN,\n \t\tAdminPermission.DOMAIN,\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/281/DevelopmentAuthorizationConfig.java\nindex 4c8ab899ff..4b87b0a05a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/281/DevelopmentAuthorizationConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/281/DevelopmentAuthorizationConfig.java\n@@ -13,8 +13,8 @@ import lombok.Getter;\n \n @CPSType(base = AuthorizationConfig.class, id = \"DEVELOPMENT\")\n @Getter\n-public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n-\t\n+public class DevelopmentAuthorizationConfig implements AuthorizationConfig {\n+\n \tprivate List<ProtoUser> initialUsers = List.of(\n \t\tProtoUser.builder()\n \t\t\t.name(\"SUPERUSER@SUPERUSER\")\n@@ -22,7 +22,7 @@ public class DevelopmentAuthorizationConfig implements AuthorizationConfig{\n \t\t\t.permissions(Set.of(\"*\"))\n \t\t\t.build()\n \t\t);\n-\t\n+\n \tprivate List<String> overviewScope = List.of(\n \t\tDatasetPermission.DOMAIN,\n \t\tAdminPermission.DOMAIN,\n",
            "diff_size": 3
        }
    ]
}