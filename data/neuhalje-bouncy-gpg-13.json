{
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * 2048R/0x3DF16BD7C3F280F3 2015-09-27 uid [ultimate] Rezi Recipient (Password: recipient)\n   * &lt;recipient@example.com&gt; sub 2048R/0x54A3DB374F787AB7 2015-09-27 . Most implementations\n   * delegate to an implementation of {@link name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.callbacks.KeyringConfigCallback}\n   *\n   * @param keyId The password for this key is needed\n   * @return the passphrase OR null (if unknown/no passphrase)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/naturalize/13/KeyringConfig.java\nindex 295f291924..0d0f27d8cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/naturalize/13/KeyringConfig.java\n@@ -40,4 +40,4 @@ public interface KeyringConfig {\n    * @return calculator\n    */\n   KeyFingerPrintCalculator getKeyFingerPrintCalculator();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/codebuff/13/KeyringConfig.java\nindex 295f291924..89e5ee2e1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/errored/1/13/KeyringConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neuhalje-bouncy-gpg/codebuff/13/KeyringConfig.java\n@@ -13,11 +13,15 @@ import org.bouncycastle.openpgp.operator.KeyFingerPrintCalculator;\n  *\n  * @see KeyringConfigs\n  */\n+\n+\n public interface KeyringConfig {\n \n-  PGPPublicKeyRingCollection getPublicKeyRings() throws IOException, PGPException;\n \n-  PGPSecretKeyRingCollection getSecretKeyRings() throws IOException, PGPException;\n+    PGPPublicKeyRingCollection getPublicKeyRings() throws IOException, PGPException;\n+\n+\n+    PGPSecretKeyRingCollection getSecretKeyRings() throws IOException, PGPException;\n \n   /**\n    * The keyid passed in is the keyid of the sub-key used. E.g. for the following keyring you'd\n@@ -31,13 +35,17 @@ public interface KeyringConfig {\n    * @param keyId The password for this key is needed\n    * @return the passphrase OR null (if unknown/no passphrase)\n    */\n-  @Nullable\n-  char[] decryptionSecretKeyPassphraseForSecretKeyId(long keyId);\n+\n+\n+    @Nullable\n+    char[] decryptionSecretKeyPassphraseForSecretKeyId(long keyId);\n \n   /**\n    * E.g. cache a 'new BcKeyFingerprintCalculator()'\n    *\n    * @return calculator\n    */\n-  KeyFingerPrintCalculator getKeyFingerPrintCalculator();\n-}\n+\n+\n+    KeyFingerPrintCalculator getKeyFingerPrintCalculator();\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}