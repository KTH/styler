{
    "error_id": "185",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "5",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     */\n    public List<DataFileDescriptor> getDataFiles() {\n    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                DataFileService.METHOD_GET_DATA_FILES));\n        ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n        exceptionHandler.checkStatusCode(response);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "84",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/185/DataFileClient.java\nindex 797875c1a7..764e575c3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/185/DataFileClient.java\n@@ -69,7 +69,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public List<DataFileDescriptor> getDataFiles() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -81,7 +81,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public DataFileDescriptor getDataFile(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -92,10 +92,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+\t\t\t\t\twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+\t\t\t\t\twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -105,7 +105,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc \"/datafile/{id}/data\"\n      */\n     public String getDataFileData(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -116,7 +116,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataStream(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -127,10 +127,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+\t\t\t\t\twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+\t\t\t\t\twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n",
            "diff_size": 10
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/185/DataFileClient.java\nindex 797875c1a7..c71b3273a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/185/DataFileClient.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.client.v1.datafile;\n \n /*\n@@ -32,108 +33,104 @@ import com.intuit.tank.service.api.v1.DataFileService;\n \n /**\n  * DataFileClient\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class DataFileClient extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + DataFileService.SERVICE_RELATIVE_PATH;\n-\n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public DataFileClient(String serviceUrl) {\n-        super(serviceUrl, null, null);\n-    }\n-\n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public DataFileClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n-        super(serviceUrl, proxyServer, proxyPort);\n-    }\n-\n-    /**\n-     * \n-     * @return\n-     */\n-    protected String getServiceBaseUrl() {\n-        return SERVICE_BASE_URL;\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    public List<DataFileDescriptor> getDataFiles() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES));\n-        ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(DataFileDescriptorContainer.class).getDataFiles();\n-\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    public DataFileDescriptor getDataFile(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id));\n-        ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(DataFileDescriptor.class);\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n-        ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(String.class);\n-    }\n-\n-    /**\n-     * @{inheritDoc \"/datafile/{id}/data\"\n-     */\n-    public String getDataFileData(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n-        ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(String.class);\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    public InputStream getDataFileDataStream(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n-        ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        return response.getEntityStream();\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n-        ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        return response.getEntityStream();\n-    }\n+  private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n+    + DataFileService.SERVICE_RELATIVE_PATH;\n+\n+  /**\n+   * @param serviceUrl\n+   */\n+  public DataFileClient(String serviceUrl) {\n+    super(serviceUrl, null, null);\n+  }\n+\n+  /**\n+   * @param serviceUrl\n+   */\n+  public DataFileClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n+    super(serviceUrl, proxyServer, proxyPort);\n+  }\n+\n+  /**\n+   * @return\n+   */\n+  protected String getServiceBaseUrl() {\n+    return SERVICE_BASE_URL;\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  public List<DataFileDescriptor> getDataFiles() {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      DataFileService.METHOD_GET_DATA_FILES));\n+    ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(DataFileDescriptorContainer.class).getDataFiles();\n+\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  public DataFileDescriptor getDataFile(Integer id) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      DataFileService.METHOD_GET_DATA_FILES, id));\n+    ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(DataFileDescriptor.class);\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n+    webTarget.queryParam(\"offset\", Integer.toString(offset));\n+    webTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+    ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(String.class);\n+  }\n+\n+  /**\n+   * @{inheritDoc \"/datafile/{id}/data\"\n+   */\n+  public String getDataFileData(Integer id) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n+    ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(String.class);\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  public InputStream getDataFileDataStream(Integer id) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n+    ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    return response.getEntityStream();\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n+    webTarget.queryParam(\"offset\", Integer.toString(offset));\n+    webTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+    ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    return response.getEntityStream();\n+  }\n \n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/185/DataFileClient.java\nindex 797875c1a7..a45e031635 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/185/DataFileClient.java\n@@ -69,8 +69,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public List<DataFileDescriptor> getDataFiles() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(DataFileDescriptorContainer.class).getDataFiles();\n@@ -81,8 +80,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public DataFileDescriptor getDataFile(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(DataFileDescriptor.class);\n@@ -92,11 +90,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n+webTarget.queryParam(\"offset\", Integer.toString(offset));\n     \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n-        ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n+ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n     }\n@@ -105,8 +102,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc \"/datafile/{id}/data\"\n      */\n     public String getDataFileData(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -116,8 +112,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataStream(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n@@ -127,13 +122,12 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n+webTarget.queryParam(\"offset\", Integer.toString(offset));\n     \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n-        ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n+ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/185/DataFileClient.java\nindex 797875c1a7..cab5bf8ba0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/185/DataFileClient.java\n@@ -16,14 +16,13 @@ package com.intuit.tank.client.v1.datafile;\n  * #L%\n  */\n \n+\n+\n import java.io.InputStream;\n import java.util.List;\n-\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.MediaType;\n-\n import org.glassfish.jersey.client.ClientResponse;\n-\n import com.intuit.tank.api.model.v1.datafile.DataFileDescriptor;\n import com.intuit.tank.api.model.v1.datafile.DataFileDescriptorContainer;\n import com.intuit.tank.rest.BaseRestClient;\n@@ -36,15 +35,17 @@ import com.intuit.tank.service.api.v1.DataFileService;\n  * @author dangleton\n  * \n  */\n+\n public class DataFileClient extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + DataFileService.SERVICE_RELATIVE_PATH;\n+    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT + DataFileService.SERVICE_RELATIVE_PATH;\n \n     /**\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public DataFileClient(String serviceUrl) {\n         super(serviceUrl, null, null);\n     }\n@@ -53,6 +54,8 @@ public class DataFileClient extends BaseRestClient {\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public DataFileClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n         super(serviceUrl, proxyServer, proxyPort);\n     }\n@@ -61,6 +64,8 @@ public class DataFileClient extends BaseRestClient {\n      * \n      * @return\n      */\n+\n+\n     protected String getServiceBaseUrl() {\n         return SERVICE_BASE_URL;\n     }\n@@ -68,21 +73,22 @@ public class DataFileClient extends BaseRestClient {\n     /**\n      * @{inheritDoc\n      */\n+\n+\n     public List<DataFileDescriptor> getDataFiles() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(DataFileDescriptorContainer.class).getDataFiles();\n-\n     }\n \n     /**\n      * @{inheritDoc\n      */\n+\n+\n     public DataFileDescriptor getDataFile(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(DataFileDescriptor.class);\n@@ -91,11 +97,12 @@ public class DataFileClient extends BaseRestClient {\n     /**\n      * @{inheritDoc\n      */\n+\n+\n     public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n+        webTarget.queryParam(\"offset\", Integer.toString(offset));\n+        webTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -104,9 +111,10 @@ public class DataFileClient extends BaseRestClient {\n     /**\n      * @{inheritDoc \"/datafile/{id}/data\"\n      */\n+\n+\n     public String getDataFileData(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -115,9 +123,10 @@ public class DataFileClient extends BaseRestClient {\n     /**\n      * @{inheritDoc\n      */\n+\n+\n     public InputStream getDataFileDataStream(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n@@ -126,14 +135,15 @@ public class DataFileClient extends BaseRestClient {\n     /**\n      * @{inheritDoc\n      */\n+\n+\n     public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n+        webTarget.queryParam(\"offset\", Integer.toString(offset));\n+        webTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "84",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/185/DataFileClient.java\nindex 797875c1a7..764e575c3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/185/DataFileClient.java\n@@ -69,7 +69,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public List<DataFileDescriptor> getDataFiles() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -81,7 +81,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public DataFileDescriptor getDataFile(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -92,10 +92,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+\t\t\t\t\twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+\t\t\t\t\twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -105,7 +105,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc \"/datafile/{id}/data\"\n      */\n     public String getDataFileData(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -116,7 +116,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataStream(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -127,10 +127,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+\t\t\t\t\twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+\t\t\t\t\twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n",
            "diff_size": 10
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "84",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/185/DataFileClient.java\nindex 797875c1a7..a84bdb8552 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/185/DataFileClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/185/DataFileClient.java\n@@ -69,7 +69,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public List<DataFileDescriptor> getDataFiles() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -81,7 +81,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public DataFileDescriptor getDataFile(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -92,10 +92,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public String getDataFileDataOffset(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+\t\t\t\t\twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+\t\t\t\t\twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -105,7 +105,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc \"/datafile/{id}/data\"\n      */\n     public String getDataFileData(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -116,7 +116,7 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataStream(Integer id) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data\"));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n@@ -127,10 +127,10 @@ public class DataFileClient extends BaseRestClient {\n      * @{inheritDoc\n      */\n     public InputStream getDataFileDataOffsetStream(Integer id, int offset, int numLines) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 DataFileService.METHOD_GET_DATA_FILES, id, \"data/offset\" + offset));\n-    \twebTarget.queryParam(\"offset\", Integer.toString(offset));\n-    \twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n+\t\t\t\t\twebTarget.queryParam(\"offset\", Integer.toString(offset));\n+\t\t\t\t\twebTarget.queryParam(\"num-lines\", Integer.toString(numLines));\n         ClientResponse response = webTarget.request(MediaType.TEXT_PLAIN_TYPE).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         return response.getEntityStream();\n",
            "diff_size": 10
        }
    ]
}