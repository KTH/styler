{
    "error_id": "681",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/681/OpLogMessage.java\nindex cb9d1c12a8..4e5c1827c6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/681/OpLogMessage.java\n@@ -19,41 +19,41 @@ package com.tencent.angel.psagent.matrix.oplog.cache;\n import com.tencent.angel.psagent.task.TaskContext;\n \n public class OpLogMessage {\n-  private final int matrixId;\n-  private final OpLogMessageType type;\n-  private final TaskContext context;\n-  private final int seqId;\n-\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n-    this.seqId = seqId;\n-    this.matrixId = matrixId;\n-    this.type = type;\n-    this.context = context;\n-  }\n-\n-  public OpLogMessageType getType() {\n-    return type;\n-  }\n-\n-  public TaskContext getContext() {\n-    return context;\n-  }\n-\n-  public int getMatrixId() {\n-    return matrixId;\n-  }\n-\n-  public int message() {\n-    return seqId;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n-        + \", seqId=\" + seqId + \"]\";\n-  }\n-\n-  public int getSeqId() {\n-    return seqId;\n-  }\n+    private final int matrixId;\n+    private final OpLogMessageType type;\n+    private final TaskContext context;\n+    private final int seqId;\n+\n+    public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+        this.seqId = seqId;\n+        this.matrixId = matrixId;\n+        this.type = type;\n+        this.context = context;\n+    }\n+\n+    public OpLogMessageType getType() {\n+        return type;\n+    }\n+\n+    public TaskContext getContext() {\n+        return context;\n+    }\n+\n+    public int getMatrixId() {\n+        return matrixId;\n+    }\n+\n+    public int message() {\n+        return seqId;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n+                + \", seqId=\" + seqId + \"]\";\n+    }\n+\n+    public int getSeqId() {\n+        return seqId;\n+    }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/681/OpLogMessage.java\nindex cb9d1c12a8..ad961f4261 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/681/OpLogMessage.java\n@@ -56,4 +56,4 @@ public class OpLogMessage {\n   public int getSeqId() {\n     return seqId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/681/OpLogMessage.java\nindex cb9d1c12a8..7b7b22cc29 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/681/OpLogMessage.java\n@@ -19,41 +19,41 @@ package com.tencent.angel.psagent.matrix.oplog.cache;\n import com.tencent.angel.psagent.task.TaskContext;\n \n public class OpLogMessage {\n-  private final int matrixId;\n-  private final OpLogMessageType type;\n-  private final TaskContext context;\n-  private final int seqId;\n+    private final int matrixId;\n+    private final OpLogMessageType type;\n+    private final TaskContext context;\n+    private final int seqId;\n \n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+    public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n     this.seqId = seqId;\n     this.matrixId = matrixId;\n     this.type = type;\n     this.context = context;\n-  }\n+    }\n \n-  public OpLogMessageType getType() {\n+    public OpLogMessageType getType() {\n     return type;\n-  }\n+    }\n \n-  public TaskContext getContext() {\n+    public TaskContext getContext() {\n     return context;\n-  }\n+    }\n \n-  public int getMatrixId() {\n+    public int getMatrixId() {\n     return matrixId;\n-  }\n+    }\n \n-  public int message() {\n+    public int message() {\n     return seqId;\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n-        + \", seqId=\" + seqId + \"]\";\n-  }\n+    @Override\n+    public String toString() {\n+    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context + \", seqId=\" + seqId + \"]\";\n+    }\n \n-  public int getSeqId() {\n+    public int getSeqId() {\n     return seqId;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/681/OpLogMessage.java\nindex cb9d1c12a8..c30e6c0153 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/681/OpLogMessage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/681/OpLogMessage.java\n@@ -12,9 +12,7 @@\n  * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n- */\n-\n-package com.tencent.angel.psagent.matrix.oplog.cache;\n+ */ package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.psagent.task.TaskContext;\n \n",
            "diff_size": 3
        }
    ]
}