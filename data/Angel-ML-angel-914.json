{
    "error_id": "914",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/914/CSRPartition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/914/CSRPartition.java\nindex f29b1207c1..240decdf05 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/914/CSRPartition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/914/CSRPartition.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.ps.storage.partition;\n \n import com.tencent.angel.PartitionKey;\n@@ -24,39 +25,39 @@ import com.tencent.angel.ps.storage.partition.storage.CSRStorage;\n import io.netty.buffer.ByteBuf;\n \n public class CSRPartition extends ServerPartition implements ICSRStorageOp {\n-  /**\n-   * Create new CSRPartition\n-   *\n-   * @param partKey partition key\n-   * @param storage row-based matrix partition storage\n-   * @param rowType row type\n-   */\n-  public CSRPartition(PartitionKey partKey, double estSparsity, CSRStorage storage,\n-      RowType rowType) {\n-    super(partKey, rowType, estSparsity, storage);\n-  }\n-\n-  public CSRPartition() {\n-    this(null, 0.0, null, RowType.T_DOUBLE_DENSE);\n-  }\n-\n-  @Override\n-  public CSRStorage getStorage() {\n-    return (CSRStorage) super.getStorage();\n-  }\n-\n-  @Override\n-  public void update(ByteBuf buf, UpdateOp op) {\n-    throw new UnsupportedOperationException(\"pipeline update not support for CSRPartition now\");\n-  }\n-\n-  @Override\n-  public void init() {\n-    getStorage().init(partKey);\n-  }\n-\n-  @Override\n-  public void reset() {\n-    getStorage().reset();\n-  }\n+    /**\n+     * Create new CSRPartition\n+     *\n+     * @param partKey partition key\n+     * @param storage row-based matrix partition storage\n+     * @param rowType row type\n+     */\n+    public CSRPartition(PartitionKey partKey, double estSparsity, CSRStorage storage,\n+                        RowType rowType) {\n+        super(partKey, rowType, estSparsity, storage);\n+    }\n+\n+    public CSRPartition() {\n+        this(null, 0.0, null, RowType.T_DOUBLE_DENSE);\n+    }\n+\n+    @Override\n+    public CSRStorage getStorage() {\n+        return (CSRStorage) super.getStorage();\n+    }\n+\n+    @Override\n+    public void update(ByteBuf buf, UpdateOp op) {\n+        throw new UnsupportedOperationException(\"pipeline update not support for CSRPartition now\");\n+    }\n+\n+    @Override\n+    public void init() {\n+        getStorage().init(partKey);\n+    }\n+\n+    @Override\n+    public void reset() {\n+        getStorage().reset();\n+    }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/914/CSRPartition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/914/CSRPartition.java\nindex f29b1207c1..63a6c4d5e0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/914/CSRPartition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/914/CSRPartition.java\n@@ -59,4 +59,4 @@ public class CSRPartition extends ServerPartition implements ICSRStorageOp {\n   public void reset() {\n     getStorage().reset();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/914/CSRPartition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/914/CSRPartition.java\nindex f29b1207c1..4fd351262e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/914/CSRPartition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/914/CSRPartition.java\n@@ -31,32 +31,33 @@ public class CSRPartition extends ServerPartition implements ICSRStorageOp {\n    * @param storage row-based matrix partition storage\n    * @param rowType row type\n    */\n-  public CSRPartition(PartitionKey partKey, double estSparsity, CSRStorage storage,\n-      RowType rowType) {\n+\n+    public CSRPartition(PartitionKey partKey, double estSparsity, CSRStorage storage, RowType rowType) {\n     super(partKey, rowType, estSparsity, storage);\n-  }\n+    }\n \n-  public CSRPartition() {\n+    public CSRPartition() {\n     this(null, 0.0, null, RowType.T_DOUBLE_DENSE);\n-  }\n+    }\n \n-  @Override\n-  public CSRStorage getStorage() {\n+    @Override\n+    public CSRStorage getStorage() {\n     return (CSRStorage) super.getStorage();\n-  }\n+    }\n \n-  @Override\n-  public void update(ByteBuf buf, UpdateOp op) {\n+    @Override\n+    public void update(ByteBuf buf, UpdateOp op) {\n     throw new UnsupportedOperationException(\"pipeline update not support for CSRPartition now\");\n-  }\n+    }\n \n-  @Override\n-  public void init() {\n+    @Override\n+    public void init() {\n     getStorage().init(partKey);\n-  }\n+    }\n \n-  @Override\n-  public void reset() {\n+    @Override\n+    public void reset() {\n     getStorage().reset();\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}