{
    "error_id": "64",
    "information": {
        "errors": [
            {
                "line": "49",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     */\n    public void handleRedirect() {\n        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n            urlUtil.redirectToInternal(urlUtil.createUserPage());\n        } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n            urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/64/OpenIdAction.java\nindex b1c021f042..0fd693a12b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/64/OpenIdAction.java\n@@ -46,7 +46,7 @@ public class OpenIdAction implements Serializable {\n      * <to-view-id>#{urlUtil.redirectToInternal(userRedirect.getUrl())}</to-view-id>\n      */\n     public void handleRedirect() {\n-        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n+        if (authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n             urlUtil.redirectToInternal(urlUtil.createUserPage());\n         } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n             urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/64/OpenIdAction.java\nindex b1c021f042..2f3e8fceb3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/64/OpenIdAction.java\n@@ -40,13 +40,13 @@ public class OpenIdAction implements Serializable {\n \n     /**\n      * Handle redirection after openId login.\n-     *\n+     * <p>\n      * Cannot use faces-config.xml to handle due to <to-view-id> not supporting\n      * EL expression.\n      * <to-view-id>#{urlUtil.redirectToInternal(userRedirect.getUrl())}</to-view-id>\n      */\n     public void handleRedirect() {\n-        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n+        if (authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n             urlUtil.redirectToInternal(urlUtil.createUserPage());\n         } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n             urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/naturalize/64/OpenIdAction.java\nindex b1c021f042..d37ee86551 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/naturalize/64/OpenIdAction.java\n@@ -46,7 +46,7 @@ public class OpenIdAction implements Serializable {\n      * <to-view-id>#{urlUtil.redirectToInternal(userRedirect.getUrl())}</to-view-id>\n      */\n     public void handleRedirect() {\n-        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n+        if (authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n             urlUtil.redirectToInternal(urlUtil.createUserPage());\n         } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n             urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());\n@@ -62,4 +62,4 @@ public class OpenIdAction implements Serializable {\n             urlUtil.redirectToInternal(urlUtil.dashboardUrl());\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/64/OpenIdAction.java\nindex b1c021f042..c70287477d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/64/OpenIdAction.java\n@@ -4,7 +4,6 @@ import java.io.Serializable;\n import javax.faces.bean.ViewScoped;\n import javax.inject.Inject;\n import javax.inject.Named;\n-\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.zanata.ApplicationConfiguration;\n import org.zanata.security.AuthenticationManager;\n@@ -17,11 +16,13 @@ import org.zanata.util.UrlUtil;\n  *\n  * @author Alex Eng <a href=\"mailto:aeng@redhat.com\">aeng@redhat.com</a>\n  */\n+\n+\n @Named(\"openIdAction\")\n @ViewScoped\n public class OpenIdAction implements Serializable {\n-\n     private static final long serialVersionUID = 1681443557491913852L;\n+\n     @Inject\n     private ZanataIdentity identity;\n \n@@ -45,21 +46,22 @@ public class OpenIdAction implements Serializable {\n      * EL expression.\n      * <to-view-id>#{urlUtil.redirectToInternal(userRedirect.getUrl())}</to-view-id>\n      */\n+\n     public void handleRedirect() {\n-        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n+        if (authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n             urlUtil.redirectToInternal(urlUtil.createUserPage());\n         } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n             urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());\n         } else if (!identity.isLoggedIn() && applicationConfiguration.isSingleOpenIdProvider()) {\n-            urlUtil.redirectToInternal(urlUtil.home());\n-        } else if (identity.isLoggedIn() && userRedirect.shouldRedirectToDashboard()) {\n-            urlUtil.redirectToInternal(urlUtil.dashboardUrl());\n-        } else if (!identity.isLoggedIn()) {\n-            urlUtil.redirectToInternal(urlUtil.signInPage());\n-        } else if (identity.isLoggedIn() && userRedirect.isRedirect()) {\n-            urlUtil.redirectToInternal(userRedirect.getUrl());\n-        } else if (identity.isLoggedIn()) {\n-            urlUtil.redirectToInternal(urlUtil.dashboardUrl());\n-        }\n+                   urlUtil.redirectToInternal(urlUtil.home());\n+               } else if (identity.isLoggedIn() && userRedirect.shouldRedirectToDashboard()) {\n+                   urlUtil.redirectToInternal(urlUtil.dashboardUrl());\n+               } else if (!identity.isLoggedIn()) {\n+                          urlUtil.redirectToInternal(urlUtil.signInPage());\n+                      } else if (identity.isLoggedIn() && userRedirect.isRedirect()) {\n+                          urlUtil.redirectToInternal(userRedirect.getUrl());\n+                      } else if (identity.isLoggedIn()) {\n+                                 urlUtil.redirectToInternal(urlUtil.dashboardUrl());\n+                             }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/64/OpenIdAction.java\nindex b1c021f042..0fd693a12b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_random/64/OpenIdAction.java\n@@ -46,7 +46,7 @@ public class OpenIdAction implements Serializable {\n      * <to-view-id>#{urlUtil.redirectToInternal(userRedirect.getUrl())}</to-view-id>\n      */\n     public void handleRedirect() {\n-        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n+        if (authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n             urlUtil.redirectToInternal(urlUtil.createUserPage());\n         } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n             urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_three_grams/64/OpenIdAction.java\nindex b1c021f042..709bbe7879 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/64/OpenIdAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_three_grams/64/OpenIdAction.java\n@@ -46,7 +46,8 @@ public class OpenIdAction implements Serializable {\n      * <to-view-id>#{urlUtil.redirectToInternal(userRedirect.getUrl())}</to-view-id>\n      */\n     public void handleRedirect() {\n-        if(authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n+\n+    if (authenticationManager.isAuthenticated() && authenticationManager.isNewUser()) {\n             urlUtil.redirectToInternal(urlUtil.createUserPage());\n         } else if (!identity.isLoggedIn() && authenticationManager.isAuthenticatedAccountWaitingForActivation()) {\n             urlUtil.redirectToInternal(urlUtil.inactiveAccountPage());\n",
            "diff_size": 2
        }
    ]
}