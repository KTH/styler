{
    "error_id": "66",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.read.expression.util;\n\nimport org.apache.iotdb.tsfile.read.expression.IBinaryExpression;\nimport org.apache.iotdb.tsfile.read.expression.IExpression;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/66/ExpressionPrinter.java\nindex 07c966c49a..a06814ef00 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/66/ExpressionPrinter.java\n@@ -15,8 +15,7 @@\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n  * under the License.\n- */\n-package org.apache.iotdb.tsfile.read.expression.util;\n+ */package org.apache.iotdb.tsfile.read.expression.util;\n \n import org.apache.iotdb.tsfile.read.expression.IBinaryExpression;\n import org.apache.iotdb.tsfile.read.expression.IExpression;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/66/ExpressionPrinter.java\nindex 07c966c49a..32b545e5c3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/66/ExpressionPrinter.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.expression.util;\n \n import org.apache.iotdb.tsfile.read.expression.IBinaryExpression;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/66/ExpressionPrinter.java\nindex 07c966c49a..8d2d36a677 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/66/ExpressionPrinter.java\n@@ -30,7 +30,10 @@ public class ExpressionPrinter {\n \n   static {\n     StringBuilder stringBuilder = new StringBuilder();\n-    for (int i = 0; i < MAX_DEPTH; i++) {\n+    for (int i = 0;\n+\n+i < MAX_DEPTH;\n+i++) {\n       PREFIX[i] = stringBuilder.toString();\n       stringBuilder.append(PREFIX_CHAR);\n     }\n@@ -44,7 +47,8 @@ public class ExpressionPrinter {\n     if (expression instanceof IUnaryExpression) {\n       System.out.println(getPrefix(level) + expression);\n     } else {\n-      System.out.println(getPrefix(level) + expression.getType() + \":\");\n+      System.out.println(getPrefix(level) + expression.getType()\n+    + \":\");\n       print(((IBinaryExpression) expression).getLeft(), level + 1);\n       print(((IBinaryExpression) expression).getRight(), level + 1);\n     }\n@@ -57,4 +61,4 @@ public class ExpressionPrinter {\n       return PREFIX[MAX_DEPTH - 1];\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'STATIC_INIT' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'static initialization' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'static initialization' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "column": "2",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'static initialization rcurly' has incorrect indentation level 31, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 33, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "58",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/66/ExpressionPrinter.java\nindex 07c966c49a..ecf379f922 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/66/ExpressionPrinter.java\n@@ -17,44 +17,49 @@\n  * under the License.\n  */\n package org.apache.iotdb.tsfile.read.expression.util;\n-\n import org.apache.iotdb.tsfile.read.expression.IBinaryExpression;\n import org.apache.iotdb.tsfile.read.expression.IExpression;\n import org.apache.iotdb.tsfile.read.expression.IUnaryExpression;\n \n public class ExpressionPrinter {\n \n-  private static final int MAX_DEPTH = 100;\n-  private static final char PREFIX_CHAR = '\\t';\n-  private static final String[] PREFIX = new String[MAX_DEPTH];\n \n-  static {\n-    StringBuilder stringBuilder = new StringBuilder();\n-    for (int i = 0; i < MAX_DEPTH; i++) {\n-      PREFIX[i] = stringBuilder.toString();\n-      stringBuilder.append(PREFIX_CHAR);\n-    }\n-  }\n+    private static final int MAX_DEPTH = 100;\n+\n+\n+    private static final char PREFIX_CHAR = '\\t';\n+\n \n-  public static void print(IExpression expression) {\n+    private static final String [] PREFIX = new String [ MAX_DEPTH];\n+    static {\n+StringBuilder stringBuilder = new StringBuilder();\n+for(int i = 0;\n+i< MAX_DEPTH;\n+i++) {\n+        PREFIX[ i] = stringBuilder.toString();\n+        stringBuilder.append(PREFIX_CHAR);\n+}\n+                               } public static void print(IExpression expression) {\n     print(expression, 0);\n-  }\n+                                 }\n \n-  private static void print(IExpression expression, int level) {\n-    if (expression instanceof IUnaryExpression) {\n-      System.out.println(getPrefix(level) + expression);\n+    private static void print(IExpression expression, int level) {\n+    if(expression instanceof IUnaryExpression) {\n+        System.out.println(getPrefix(level) + expression);\n     } else {\n-      System.out.println(getPrefix(level) + expression.getType() + \":\");\n-      print(((IBinaryExpression) expression).getLeft(), level + 1);\n-      print(((IBinaryExpression) expression).getRight(), level + 1);\n+        System.out.println(getPrefix(level) + expression.getType()\n+                               + \":\");\n+        print(((IBinaryExpression) expression).getLeft(), level + 1);\n+        print(((IBinaryExpression) expression).getRight(), level + 1);\n+    }\n     }\n-  }\n \n-  private static String getPrefix(int count) {\n-    if (count < MAX_DEPTH) {\n-      return PREFIX[count];\n+    private static String getPrefix(int count) {\n+    if(count< MAX_DEPTH) {\n+        return PREFIX[count];\n     } else {\n-      return PREFIX[MAX_DEPTH - 1];\n+        return PREFIX[MAX_DEPTH - 1];\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'read' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/66/ExpressionPrinter.java\nindex 07c966c49a..465b224613 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/66/ExpressionPrinter.java\n@@ -16,7 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.tsfile.read.expression.util;\n+package org.apache.iotdb.tsfile.\n+read.expression.util;\n \n import org.apache.iotdb.tsfile.read.expression.IBinaryExpression;\n import org.apache.iotdb.tsfile.read.expression.IExpression;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/66/ExpressionPrinter.java\nindex 07c966c49a..a06814ef00 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/66/ExpressionPrinter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/66/ExpressionPrinter.java\n@@ -15,8 +15,7 @@\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n  * under the License.\n- */\n-package org.apache.iotdb.tsfile.read.expression.util;\n+ */package org.apache.iotdb.tsfile.read.expression.util;\n \n import org.apache.iotdb.tsfile.read.expression.IBinaryExpression;\n import org.apache.iotdb.tsfile.read.expression.IExpression;\n",
            "diff_size": 2
        }
    ]
}