{
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "118",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            .getJsonArray(\"authenticated\");\n        final JsonArrayBuilder users = Json.createArrayBuilder();\n        for(final JsonValue user: online) {\n            users.add(user);\n        }\n        users.add(Json.createObjectBuilder().add(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/styler/18/MkVersionEye.java\nindex 2b20eb41f6..941583cf11 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/styler/18/MkVersionEye.java\n@@ -54,12 +54,12 @@ public final class MkVersionEye implements VersionEye {\n      * VersionEye server.\n      */\n     private MkServer server;\n-    \n+\n     /**\n      * Authenticated user's username.\n      */\n     private String username;\n-    \n+\n     /**\n      * Ctor.\n      */\n@@ -73,7 +73,7 @@ public final class MkVersionEye implements VersionEye {\n     public MkVersionEye(final Authenticated authenticated) {\n         this(new MkJsonServer(), authenticated);\n     }\n-    \n+\n     /**\n      * Ctor.\n      * @param server VersionEye server storage. See {@link MkServer}\n@@ -86,7 +86,7 @@ public final class MkVersionEye implements VersionEye {\n         this.username = user.username();\n         this.authenticate(user);\n     }\n-    \n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -106,7 +106,7 @@ public final class MkVersionEye implements VersionEye {\n     public Me me() {\n         return new MkMe(this.server, this.username);\n     }\n-    \n+\n     /**\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n@@ -115,7 +115,7 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for (final JsonValue user: online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 6
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/intellij/18/MkVersionEye.java\nindex 2b20eb41f6..5054bfbe57 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/intellij/18/MkVersionEye.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2017, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.versioneye;\n \n import java.io.IOException;\n@@ -54,18 +55,19 @@ public final class MkVersionEye implements VersionEye {\n      * VersionEye server.\n      */\n     private MkServer server;\n-    \n+\n     /**\n      * Authenticated user's username.\n      */\n     private String username;\n-    \n+\n     /**\n      * Ctor.\n      */\n     public MkVersionEye() {\n         this.server = new MkJsonServer();\n     }\n+\n     /**\n      * Ctor.\n      * @param authenticated Mock Authenticated User.\n@@ -73,7 +75,7 @@ public final class MkVersionEye implements VersionEye {\n     public MkVersionEye(final Authenticated authenticated) {\n         this(new MkJsonServer(), authenticated);\n     }\n-    \n+\n     /**\n      * Ctor.\n      * @param server VersionEye server storage. See {@link MkServer}\n@@ -86,7 +88,7 @@ public final class MkVersionEye implements VersionEye {\n         this.username = user.username();\n         this.authenticate(user);\n     }\n-    \n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -106,7 +108,7 @@ public final class MkVersionEye implements VersionEye {\n     public Me me() {\n         return new MkMe(this.server, this.username);\n     }\n-    \n+\n     /**\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n@@ -115,7 +117,7 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for (final JsonValue user : online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 112.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/naturalize/18/MkVersionEye.java\nindex 2b20eb41f6..936446c4b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/naturalize/18/MkVersionEye.java\n@@ -58,7 +58,7 @@ public final class MkVersionEye implements VersionEye {\n     /**\n      * Authenticated user's username.\n      */\n-    private String username;\n+private String username;\n     \n     /**\n      * Ctor.\n@@ -79,9 +79,7 @@ public final class MkVersionEye implements VersionEye {\n      * @param server VersionEye server storage. See {@link MkServer}\n      * @param user Mock Authenticated User.\n      */\n-    public MkVersionEye(\n-        final MkServer server, final Authenticated user\n-    ) {\n+    public MkVersionEye(final MkServer server, final Authenticated user) {\n         this.server = server;\n         this.username = user.username();\n         this.authenticate(user);\n@@ -111,17 +109,15 @@ public final class MkVersionEye implements VersionEye {\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n      */\n-    private void authenticate(final Authenticated authenticated) {\n+private void authenticate(final Authenticated authenticated) {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n         for(final JsonValue user: online) {\n             users.add(user);\n         }\n-        users.add(Json.createObjectBuilder().add(\n-            this.username, authenticated.json())\n-        );\n+        users.add(Json.createObjectBuilder().add(this.username, authenticated.json()));\n         this.server.storage().add(\"authenticated\", users.build());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "93",
                    "column": "47",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 72, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 72, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "column": "4",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/codebuff/18/MkVersionEye.java\nindex 2b20eb41f6..bdce62b5b0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/codebuff/18/MkVersionEye.java\n@@ -28,7 +28,6 @@\n package com.amihaiemil.versioneye;\n \n import java.io.IOException;\n-\n import javax.json.Json;\n import javax.json.JsonArray;\n import javax.json.JsonArrayBuilder;\n@@ -48,21 +47,29 @@ import javax.json.JsonValue;\n  *  Pass Authenticated user to ``authenticate()`` method so that the\n  *  authenticated user won't be retained.\n  */\n+\n+\n public final class MkVersionEye implements VersionEye {\n \n     /**\n      * VersionEye server.\n      */\n+\n+\n     private MkServer server;\n     \n     /**\n      * Authenticated user's username.\n      */\n+\n+\n     private String username;\n     \n     /**\n      * Ctor.\n      */\n+\n+\n     public MkVersionEye() {\n         this.server = new MkJsonServer();\n     }\n@@ -70,6 +77,8 @@ public final class MkVersionEye implements VersionEye {\n      * Ctor.\n      * @param authenticated Mock Authenticated User.\n      */\n+\n+\n     public MkVersionEye(final Authenticated authenticated) {\n         this(new MkJsonServer(), authenticated);\n     }\n@@ -79,14 +88,14 @@ public final class MkVersionEye implements VersionEye {\n      * @param server VersionEye server storage. See {@link MkServer}\n      * @param user Mock Authenticated User.\n      */\n-    public MkVersionEye(\n-        final MkServer server, final Authenticated user\n-    ) {\n+\n+\n+    public MkVersionEye(final MkServer server,final Authenticated user) {\n         this.server = server;\n-        this.username = user.username();\n-        this.authenticate(user);\n+                                                                        this.username = user.username();\n+                                                                        this.authenticate(user);\n     }\n-    \n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -111,17 +120,19 @@ public final class MkVersionEye implements VersionEye {\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n      */\n+\n+\n     private void authenticate(final Authenticated authenticated) {\n-        JsonArray online = this.server.storage().build()\n-            .getJsonArray(\"authenticated\");\n-        final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n-            users.add(user);\n-        }\n-        users.add(Json.createObjectBuilder().add(\n-            this.username, authenticated.json())\n-        );\n-        this.server.storage().add(\"authenticated\", users.build());\n+        JsonArray online=this.server.storage()\n+.build()\n+.getJsonArray(\"authenticated\");\n+\n+\n+final JsonArrayBuilder users= Json.createArrayBuilder();\n+for(final JsonValue user: online) {\n+users.add(user);\n+} users.add(Json.createObjectBuilder().add(this.username, authenticated.json()));\n+this.server.storage().add(\"authenticated\", users.build());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/styler_random/18/MkVersionEye.java\nindex 2b20eb41f6..941583cf11 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/styler_random/18/MkVersionEye.java\n@@ -54,12 +54,12 @@ public final class MkVersionEye implements VersionEye {\n      * VersionEye server.\n      */\n     private MkServer server;\n-    \n+\n     /**\n      * Authenticated user's username.\n      */\n     private String username;\n-    \n+\n     /**\n      * Ctor.\n      */\n@@ -73,7 +73,7 @@ public final class MkVersionEye implements VersionEye {\n     public MkVersionEye(final Authenticated authenticated) {\n         this(new MkJsonServer(), authenticated);\n     }\n-    \n+\n     /**\n      * Ctor.\n      * @param server VersionEye server storage. See {@link MkServer}\n@@ -86,7 +86,7 @@ public final class MkVersionEye implements VersionEye {\n         this.username = user.username();\n         this.authenticate(user);\n     }\n-    \n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -106,7 +106,7 @@ public final class MkVersionEye implements VersionEye {\n     public Me me() {\n         return new MkMe(this.server, this.username);\n     }\n-    \n+\n     /**\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n@@ -115,7 +115,7 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for (final JsonValue user: online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 6
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "119",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/styler_three_grams/18/MkVersionEye.java\nindex 2b20eb41f6..0be62e7c17 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/errored/1/18/MkVersionEye.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/decorators-squad-versioneye-api/styler_three_grams/18/MkVersionEye.java\n@@ -54,12 +54,12 @@ public final class MkVersionEye implements VersionEye {\n      * VersionEye server.\n      */\n     private MkServer server;\n-    \n+\n     /**\n      * Authenticated user's username.\n      */\n     private String username;\n-    \n+\n     /**\n      * Ctor.\n      */\n@@ -73,7 +73,7 @@ public final class MkVersionEye implements VersionEye {\n     public MkVersionEye(final Authenticated authenticated) {\n         this(new MkJsonServer(), authenticated);\n     }\n-    \n+\n     /**\n      * Ctor.\n      * @param server VersionEye server storage. See {@link MkServer}\n@@ -86,7 +86,7 @@ public final class MkVersionEye implements VersionEye {\n         this.username = user.username();\n         this.authenticate(user);\n     }\n-    \n+\n     @Override\n     public Services services() {\n         return new MkServices(this.server);\n@@ -106,7 +106,7 @@ public final class MkVersionEye implements VersionEye {\n     public Me me() {\n         return new MkMe(this.server, this.username);\n     }\n-    \n+\n     /**\n      * Add authenticated user to the MkServer.\n      * @param authenticated The user to authenticate.\n@@ -115,7 +115,8 @@ public final class MkVersionEye implements VersionEye {\n         JsonArray online = this.server.storage().build()\n             .getJsonArray(\"authenticated\");\n         final JsonArrayBuilder users = Json.createArrayBuilder();\n-        for(final JsonValue user: online) {\n+        for\n+        (final JsonValue user: online) {\n             users.add(user);\n         }\n         users.add(Json.createObjectBuilder().add(\n",
            "diff_size": 7
        }
    ]
}