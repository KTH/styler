{
    "error_id": "31",
    "information": {
        "errors": [
            {
                "line": "22",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    @Override\n    protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) {\n        if(!value.optionsPresent()) {\n            value.getPath().encode(getMapper(), writer, encoderContext);\n        } else {\n            writer.writeStartDocument();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/31/UnwindCodec.java\nindex 7fddf3756e..593ff639cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/31/UnwindCodec.java\n@@ -19,7 +19,7 @@ public class UnwindCodec extends StageCodec<Unwind> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) {\n-        if(!value.optionsPresent()) {\n+        if (!value.optionsPresent()) {\n             value.getPath().encode(getMapper(), writer, encoderContext);\n         } else {\n             writer.writeStartDocument();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/31/UnwindCodec.java\nindex 7fddf3756e..593ff639cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/31/UnwindCodec.java\n@@ -19,7 +19,7 @@ public class UnwindCodec extends StageCodec<Unwind> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) {\n-        if(!value.optionsPresent()) {\n+        if (!value.optionsPresent()) {\n             value.getPath().encode(getMapper(), writer, encoderContext);\n         } else {\n             writer.writeStartDocument();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/31/UnwindCodec.java\nindex 7fddf3756e..f66f762bc9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/31/UnwindCodec.java\n@@ -19,7 +19,7 @@ public class UnwindCodec extends StageCodec<Unwind> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) {\n-        if(!value.optionsPresent()) {\n+        if (!value.optionsPresent()) {\n             value.getPath().encode(getMapper(), writer, encoderContext);\n         } else {\n             writer.writeStartDocument();\n@@ -29,4 +29,4 @@ public class UnwindCodec extends StageCodec<Unwind> {\n             writer.writeEndDocument();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/31/UnwindCodec.java\nindex 7fddf3756e..593ff639cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/31/UnwindCodec.java\n@@ -19,7 +19,7 @@ public class UnwindCodec extends StageCodec<Unwind> {\n \n     @Override\n     protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) {\n-        if(!value.optionsPresent()) {\n+        if (!value.optionsPresent()) {\n             value.getPath().encode(getMapper(), writer, encoderContext);\n         } else {\n             writer.writeStartDocument();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "21",
                    "column": "114",
                    "severity": "error",
                    "message": "'{' at column 114 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "21",
                    "column": "116",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/31/UnwindCodec.java\nindex 7fddf3756e..69cd8d8f4d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/31/UnwindCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/31/UnwindCodec.java\n@@ -18,15 +18,14 @@ public class UnwindCodec extends StageCodec<Unwind> {\n     }\n \n     @Override\n-    protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) {\n-        if(!value.optionsPresent()) {\n-            value.getPath().encode(getMapper(), writer, encoderContext);\n-        } else {\n-            writer.writeStartDocument();\n-            writeNamedExpression(getMapper(), writer, \"path\", value.getPath(), encoderContext);\n-            writeNamedValue(writer, \"includeArrayIndex\", value.getIncludeArrayIndex(), encoderContext);\n-            writeNamedValue(writer, \"preserveNullAndEmptyArrays\", value.getPreserveNullAndEmptyArrays(), encoderContext);\n-            writer.writeEndDocument();\n-        }\n+    protected void encodeStage(final BsonWriter writer, final Unwind value, final EncoderContext encoderContext) { if(!value.optionsPresent()) {\n+        value.getPath().encode(getMapper(), writer, encoderContext);\n+    } else {\n+        writer.writeStartDocument();\n+        writeNamedExpression(getMapper(), writer, \"path\", value.getPath(), encoderContext);\n+        writeNamedValue(writer, \"includeArrayIndex\", value.getIncludeArrayIndex(), encoderContext);\n+        writeNamedValue(writer, \"preserveNullAndEmptyArrays\", value.getPreserveNullAndEmptyArrays(), encoderContext);\n+        writer.writeEndDocument();\n     }\n }\n+}\n",
            "diff_size": 11
        }
    ]
}