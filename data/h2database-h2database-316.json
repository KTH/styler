{
    "error_id": "316",
    "information": {
        "errors": [
            {
                "line": "51",
                "column": "29",
                "severity": "warning",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        ValueArray[] values = new ValueArray[distinctValues.size()];\n        int i = 0;\n        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n            AggregateDataHistogram d = entry.getValue();\n            values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n            i++;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/316/AggregateDataHistogram.java\nindex 5c4b59d0c9..0abb45f8c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/316/AggregateDataHistogram.java\n@@ -48,7 +48,7 @@ class AggregateDataHistogram extends AggregateData {\n         }\n         ValueArray[] values = new ValueArray[distinctValues.size()];\n         int i = 0;\n-        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n+        for (Map.Entry<Value, AggregateDataHistogram> entry : distinctValues.entries()) {\n             AggregateDataHistogram d = entry.getValue();\n             values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n             i++;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/316/AggregateDataHistogram.java\nindex 5c4b59d0c9..fd4990d6e2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/316/AggregateDataHistogram.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (http://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.expression;\n \n import java.util.Arrays;\n@@ -20,60 +21,62 @@ import org.h2.value.ValueLong;\n  * Data stored while calculating a HISTOGRAM aggregate.\n  */\n class AggregateDataHistogram extends AggregateData {\n-    private long count;\n-    private ValueHashMap<AggregateDataHistogram> distinctValues;\n+  private long count;\n+  private ValueHashMap<AggregateDataHistogram> distinctValues;\n \n-    @Override\n-    void add(Database database, int dataType, boolean distinct, Value v) {\n-        if (distinctValues == null) {\n-            distinctValues = ValueHashMap.newInstance();\n-        }\n-        AggregateDataHistogram a = distinctValues.get(v);\n-        if (a == null) {\n-            if (distinctValues.size() < Constants.SELECTIVITY_DISTINCT_COUNT) {\n-                a = new AggregateDataHistogram();\n-                distinctValues.put(v, a);\n-            }\n-        }\n-        if (a != null) {\n-            a.count++;\n-        }\n+  @Override\n+  void add(Database database, int dataType, boolean distinct, Value v) {\n+    if (distinctValues == null) {\n+      distinctValues = ValueHashMap.newInstance();\n+    }\n+    AggregateDataHistogram a = distinctValues.get(v);\n+    if (a == null) {\n+      if (distinctValues.size() < Constants.SELECTIVITY_DISTINCT_COUNT) {\n+        a = new AggregateDataHistogram();\n+        distinctValues.put(v, a);\n+      }\n+    }\n+    if (a != null) {\n+      a.count++;\n     }\n+  }\n \n-    @Override\n-    Value getValue(Database database, int dataType, boolean distinct) {\n-        if (distinct) {\n-            count = 0;\n-            groupDistinct(database, dataType);\n-        }\n-        ValueArray[] values = new ValueArray[distinctValues.size()];\n-        int i = 0;\n-        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n-            AggregateDataHistogram d = entry.getValue();\n-            values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n-            i++;\n-        }\n-        final CompareMode compareMode = database.getCompareMode();\n-        Arrays.sort(values, new Comparator<ValueArray>() {\n-            @Override\n-            public int compare(ValueArray v1, ValueArray v2) {\n-                Value a1 = v1.getList()[0];\n-                Value a2 = v2.getList()[0];\n-                return a1.compareTo(a2, compareMode);\n-            }\n-        });\n-        Value v = ValueArray.get(values);\n-        return v.convertTo(dataType);\n+  @Override\n+  Value getValue(Database database, int dataType, boolean distinct) {\n+    if (distinct) {\n+      count = 0;\n+      groupDistinct(database, dataType);\n     }\n+    ValueArray[] values = new ValueArray[distinctValues.size()];\n+    int i = 0;\n+    for (Map.Entry<Value, AggregateDataHistogram> entry : distinctValues\n+        .entries()) {\n+      AggregateDataHistogram d = entry.getValue();\n+      values[i] =\n+          ValueArray.get(new Value[] {entry.getKey(), ValueLong.get(d.count)});\n+      i++;\n+    }\n+    final CompareMode compareMode = database.getCompareMode();\n+    Arrays.sort(values, new Comparator<ValueArray>() {\n+      @Override\n+      public int compare(ValueArray v1, ValueArray v2) {\n+        Value a1 = v1.getList()[0];\n+        Value a2 = v2.getList()[0];\n+        return a1.compareTo(a2, compareMode);\n+      }\n+    });\n+    Value v = ValueArray.get(values);\n+    return v.convertTo(dataType);\n+  }\n \n-    private void groupDistinct(Database database, int dataType) {\n-        if (distinctValues == null) {\n-            return;\n-        }\n-        count = 0;\n-        for (Value v : distinctValues.keys()) {\n-            add(database, dataType, false, v);\n-        }\n+  private void groupDistinct(Database database, int dataType) {\n+    if (distinctValues == null) {\n+      return;\n+    }\n+    count = 0;\n+    for (Value v : distinctValues.keys()) {\n+      add(database, dataType, false, v);\n     }\n+  }\n \n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/316/AggregateDataHistogram.java\nindex 5c4b59d0c9..97fd7950e7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/316/AggregateDataHistogram.java\n@@ -48,7 +48,7 @@ class AggregateDataHistogram extends AggregateData {\n         }\n         ValueArray[] values = new ValueArray[distinctValues.size()];\n         int i = 0;\n-        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n+        for (Map.Entry<Value, AggregateDataHistogram> entry : distinctValues.entries()) {\n             AggregateDataHistogram d = entry.getValue();\n             values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n             i++;\n@@ -76,4 +76,4 @@ class AggregateDataHistogram extends AggregateData {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/316/AggregateDataHistogram.java\nindex 5c4b59d0c9..5b9c872bb5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/316/AggregateDataHistogram.java\n@@ -19,12 +19,17 @@ import org.h2.value.ValueLong;\n /**\n  * Data stored while calculating a HISTOGRAM aggregate.\n  */\n+\n+\n class AggregateDataHistogram extends AggregateData {\n+\n     private long count;\n     private ValueHashMap<AggregateDataHistogram> distinctValues;\n \n     @Override\n-    void add(Database database, int dataType, boolean distinct, Value v) {\n+    void add(Database database,\n+int dataType,\n+    boolean distinct, Value v) {\n         if (distinctValues == null) {\n             distinctValues = ValueHashMap.newInstance();\n         }\n@@ -48,20 +53,20 @@ class AggregateDataHistogram extends AggregateData {\n         }\n         ValueArray[] values = new ValueArray[distinctValues.size()];\n         int i = 0;\n-        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n+        for (Map.Entry<Value, AggregateDataHistogram> entry : distinctValues.entries()) {\n             AggregateDataHistogram d = entry.getValue();\n             values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n             i++;\n         }\n         final CompareMode compareMode = database.getCompareMode();\n         Arrays.sort(values, new Comparator<ValueArray>() {\n-            @Override\n-            public int compare(ValueArray v1, ValueArray v2) {\n-                Value a1 = v1.getList()[0];\n-                Value a2 = v2.getList()[0];\n-                return a1.compareTo(a2, compareMode);\n-            }\n-        });\n+@Override\n+public int compare(ValueArray v1, ValueArray v2) {\n+    Value a1 = v1.getList()[0];\n+    Value a2 = v2.getList()[0];\n+    return a1.compareTo(a2, compareMode);\n+}\n+});\n         Value v = ValueArray.get(values);\n         return v.convertTo(dataType);\n     }\n@@ -76,4 +81,4 @@ class AggregateDataHistogram extends AggregateData {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/316/AggregateDataHistogram.java\nindex 5c4b59d0c9..0abb45f8c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/316/AggregateDataHistogram.java\n@@ -48,7 +48,7 @@ class AggregateDataHistogram extends AggregateData {\n         }\n         ValueArray[] values = new ValueArray[distinctValues.size()];\n         int i = 0;\n-        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n+        for (Map.Entry<Value, AggregateDataHistogram> entry : distinctValues.entries()) {\n             AggregateDataHistogram d = entry.getValue();\n             values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n             i++;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/316/AggregateDataHistogram.java\nindex 5c4b59d0c9..0abb45f8c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/316/AggregateDataHistogram.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/316/AggregateDataHistogram.java\n@@ -48,7 +48,7 @@ class AggregateDataHistogram extends AggregateData {\n         }\n         ValueArray[] values = new ValueArray[distinctValues.size()];\n         int i = 0;\n-        for (Map.Entry<Value,AggregateDataHistogram> entry : distinctValues.entries()) {\n+        for (Map.Entry<Value, AggregateDataHistogram> entry : distinctValues.entries()) {\n             AggregateDataHistogram d = entry.getValue();\n             values[i] = ValueArray.get(new Value[] { entry.getKey(), ValueLong.get(d.count) });\n             i++;\n",
            "diff_size": 1
        }
    ]
}