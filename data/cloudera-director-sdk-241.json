{
    "error_id": "241",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/241/StringUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/241/StringUtil.java\nindex 5cb14c15d7..a453a986a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/241/StringUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/241/StringUtil.java\n@@ -19,41 +19,47 @@ package com.cloudera.director.client.common;\n \n \n public class StringUtil {\n-  /**\n-   * Check if the given array contains the given value (with case-insensitive comparison).\n-   *\n-   * @param array The array\n-   * @param value The value to search\n-   * @return true if the array contains the value\n-   */\n-  public static boolean containsIgnoreCase(String[] array, String value) {\n-    for (String str : array) {\n-      if (value == null && str == null) return true;\n-      if (value != null && value.equalsIgnoreCase(str)) return true;\n+    /**\n+     * Check if the given array contains the given value (with case-insensitive comparison).\n+     *\n+     * @param array The array\n+     * @param value The value to search\n+     * @return true if the array contains the value\n+     */\n+    public static boolean containsIgnoreCase(String[] array, String value) {\n+        for (String str : array) {\n+            if (value == null && str == null) {\n+                return true;\n+            }\n+            if (value != null && value.equalsIgnoreCase(str)) {\n+                return true;\n+            }\n+        }\n+        return false;\n     }\n-    return false;\n-  }\n \n-  /**\n-   * Join an array of strings with the given separator.\n-   * <p>\n-   * Note: This might be replaced by utility method from commons-lang or guava someday\n-   * if one of those libraries is added as dependency.\n-   * </p>\n-   *\n-   * @param array     The array of strings\n-   * @param separator The separator\n-   * @return the resulting string\n-   */\n-  public static String join(String[] array, String separator) {\n-    int len = array.length;\n-    if (len == 0) return \"\";\n+    /**\n+     * Join an array of strings with the given separator.\n+     * <p>\n+     * Note: This might be replaced by utility method from commons-lang or guava someday\n+     * if one of those libraries is added as dependency.\n+     * </p>\n+     *\n+     * @param array     The array of strings\n+     * @param separator The separator\n+     * @return the resulting string\n+     */\n+    public static String join(String[] array, String separator) {\n+        int len = array.length;\n+        if (len == 0) {\n+            return \"\";\n+        }\n \n-    StringBuilder out = new StringBuilder();\n-    out.append(array[0]);\n-    for (int i = 1; i < len; i++) {\n-      out.append(separator).append(array[i]);\n+        StringBuilder out = new StringBuilder();\n+        out.append(array[0]);\n+        for (int i = 1; i < len; i++) {\n+            out.append(separator).append(array[i]);\n+        }\n+        return out.toString();\n     }\n-    return out.toString();\n-  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/241/StringUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/241/StringUtil.java\nindex 5cb14c15d7..ec84b0696e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/241/StringUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/241/StringUtil.java\n@@ -1,24 +1,9 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n \n package com.cloudera.director.client.common;\n \n-\n public class StringUtil {\n+\n   /**\n    * Check if the given array contains the given value (with case-insensitive comparison).\n    *\n@@ -47,7 +32,8 @@ public class StringUtil {\n    */\n   public static String join(String[] array, String separator) {\n     int len = array.length;\n-    if (len == 0) return \"\";\n+    if (len == 0)\n+    return \"\";\n \n     StringBuilder out = new StringBuilder();\n     out.append(array[0]);\n@@ -56,4 +42,4 @@ public class StringUtil {\n     }\n     return out.toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "31",
                    "column": "26",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "31",
                    "column": "26",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "column": "26",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "column": "26",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/241/StringUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/241/StringUtil.java\nindex 5cb14c15d7..5c8b4b4c45 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/241/StringUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/241/StringUtil.java\n@@ -17,7 +17,6 @@\n \n package com.cloudera.director.client.common;\n \n-\n public class StringUtil {\n   /**\n    * Check if the given array contains the given value (with case-insensitive comparison).\n@@ -26,13 +25,16 @@ public class StringUtil {\n    * @param value The value to search\n    * @return true if the array contains the value\n    */\n-  public static boolean containsIgnoreCase(String[] array, String value) {\n+\n+    public static boolean containsIgnoreCase(String[] array, String value) {\n     for (String str : array) {\n-      if (value == null && str == null) return true;\n-      if (value != null && value.equalsIgnoreCase(str)) return true;\n+        if (value == null&&str == null) return true;\n+\n+        if (value != null&&value.equalsIgnoreCase(str)) return true;\n     }\n+\n     return false;\n-  }\n+    }\n \n   /**\n    * Join an array of strings with the given separator.\n@@ -45,15 +47,18 @@ public class StringUtil {\n    * @param separator The separator\n    * @return the resulting string\n    */\n-  public static String join(String[] array, String separator) {\n+\n+    public static String join(String[] array, String separator) {\n     int len = array.length;\n+\n     if (len == 0) return \"\";\n \n     StringBuilder out = new StringBuilder();\n     out.append(array[0]);\n     for (int i = 1; i < len; i++) {\n-      out.append(separator).append(array[i]);\n+        out.append(separator).append(array[i]);\n     }\n+\n     return out.toString();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}