{
    "error_id": "267",
    "information": {
        "errors": [
            {
                "line": "92",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t * Sets up the initial subjects and permissions for the authentication system\n\t * that are found in the config.\n\t * \n\t * @param storage\n\t *            A storage, where the handler might add a new users.\n\t */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/267/AuthorizationController.java\nindex aeafe56914..7608c678cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/267/AuthorizationController.java\n@@ -35,7 +35,7 @@ import org.apache.shiro.util.LifecycleUtils;\n @Slf4j\n @RequiredArgsConstructor\n public final class AuthorizationController {\n-\t\n+\n \t@NonNull\n \tprivate final AuthorizationConfig authorizationConfig;\n \t@NonNull\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/267/AuthorizationController.java\nindex aeafe56914..c3f195f8e4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/267/AuthorizationController.java\n@@ -35,73 +35,72 @@ import org.apache.shiro.util.LifecycleUtils;\n @Slf4j\n @RequiredArgsConstructor\n public final class AuthorizationController {\n-\t\n-\t@NonNull\n-\tprivate final AuthorizationConfig authorizationConfig;\n-\t@NonNull\n-\tprivate final List<AuthenticationConfig> authenticationConfigs;\n-\t@NonNull\n-\t@Getter\n-\tprivate final MasterMetaStorage storage;\n \n-\t@Getter\n-\tprivate List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n-\t@Getter\n-\tprivate AuthFilter<AuthenticationToken, User> authenticationFilter;\n-\t@Getter\n-\tprivate List<Realm> realms = new ArrayList<>();\n+    @NonNull\n+    private final AuthorizationConfig authorizationConfig;\n+    @NonNull\n+    private final List<AuthenticationConfig> authenticationConfigs;\n+    @NonNull\n+    @Getter\n+    private final MasterMetaStorage storage;\n \n-\tpublic void init() {\n+    @Getter\n+    private List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n+    @Getter\n+    private AuthFilter<AuthenticationToken, User> authenticationFilter;\n+    @Getter\n+    private List<Realm> realms = new ArrayList<>();\n \n-\t\tinitializeRealms(storage, authenticationConfigs, authenticationRealms, realms);\n+    public void init() {\n \n-\t\tregisterShiro(realms);\n+        initializeRealms(storage, authenticationConfigs, authenticationRealms, realms);\n \n-\t\t// Create Jersey filter for authentication\n-\t\tthis.authenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n+        registerShiro(realms);\n \n-\t\t// Register initial users for authorization and authentication (if the realm is able to)\n-\t\tinitializeAuthConstellation(authorizationConfig, realms, storage);\n-\t}\n+        // Create Jersey filter for authentication\n+        this.authenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n \n-\tprivate static void registerShiro(List<Realm> realms) {\n-\t\t// Register all realms in Shiro\n-\t\tlog.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n-\t\tSecurityManager securityManager = new DefaultSecurityManager(realms);\n-\t\tSecurityUtils.setSecurityManager(securityManager);\n-\t\tlog.debug(\"Security manager registered\");\n-\t}\n+        // Register initial users for authorization and authentication (if the realm is able to)\n+        initializeAuthConstellation(authorizationConfig, realms, storage);\n+    }\n \n-\tprivate static void initializeRealms(MasterMetaStorage storage, List<AuthenticationConfig> config, List<ConqueryAuthenticationRealm> authenticationRealms, List<Realm> realms) {\n-\t\t// Init authentication realms provided by with the config.\n-\t\tfor (AuthenticationConfig authenticationConf : config) {\n-\t\t\tConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n-\t\t\tauthenticationRealms.add(realm);\n-\t\t\trealms.add(realm);\n-\t\t}\n-\t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n-\t\trealms.add(authorizingRealm);\n+    private static void registerShiro(List<Realm> realms) {\n+        // Register all realms in Shiro\n+        log.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n+        SecurityManager securityManager = new DefaultSecurityManager(realms);\n+        SecurityUtils.setSecurityManager(securityManager);\n+        log.debug(\"Security manager registered\");\n+    }\n \n-\t\t// Call Shiros init on all realms\n-\t\trealms.stream().forEach(LifecycleUtils::init);\n-\t}\n+    private static void initializeRealms(MasterMetaStorage storage, List<AuthenticationConfig> config, List<ConqueryAuthenticationRealm> authenticationRealms, List<Realm> realms) {\n+        // Init authentication realms provided by with the config.\n+        for (AuthenticationConfig authenticationConf : config) {\n+            ConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n+            authenticationRealms.add(realm);\n+            realms.add(realm);\n+        }\n+        AuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n+        realms.add(authorizingRealm);\n \n-\t/**\n-\t * Sets up the initial subjects and permissions for the authentication system\n-\t * that are found in the config.\n-\t * \n-\t * @param storage\n-\t *            A storage, where the handler might add a new users.\n-\t */\n-\tprivate static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n-\t\tfor (ProtoUser pUser : config.getInitialUsers()) {\n-\t\t\tpUser.registerForAuthorization(storage, true);\n-\t\t\tfor (Realm realm : realms) {\n-\t\t\t\tif (realm instanceof UserManageable) {\n-\t\t\t\t\tpUser.registerForAuthentication((UserManageable) realm, true);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+        // Call Shiros init on all realms\n+        realms.stream().forEach(LifecycleUtils::init);\n+    }\n+\n+    /**\n+     * Sets up the initial subjects and permissions for the authentication system\n+     * that are found in the config.\n+     *\n+     * @param storage A storage, where the handler might add a new users.\n+     */\n+    private static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n+        for (ProtoUser pUser : config.getInitialUsers()) {\n+            pUser.registerForAuthorization(storage, true);\n+            for (Realm realm : realms) {\n+                if (realm instanceof UserManageable) {\n+                    pUser.registerForAuthentication((UserManageable) realm, true);\n+                }\n+            }\n+        }\n+    }\n \n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/267/AuthorizationController.java\nindex aeafe56914..c65f289d39 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/267/AuthorizationController.java\n@@ -52,8 +52,7 @@ public final class AuthorizationController {\n \tprivate List<Realm> realms = new ArrayList<>();\n \n \tpublic void init() {\n-\n-\t\tinitializeRealms(storage, authenticationConfigs, authenticationRealms, realms);\n+\tinitializeRealms(storage, authenticationConfigs, authenticationRealms, realms);\n \n \t\tregisterShiro(realms);\n \n@@ -104,4 +103,4 @@ public final class AuthorizationController {\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/267/AuthorizationController.java\nindex aeafe56914..b3ce9696d5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/267/AuthorizationController.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.auth;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.stream.Collectors;\n-\n import com.bakdata.conquery.apiv1.auth.ProtoUser;\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.entities.User;\n@@ -32,76 +31,75 @@ import org.apache.shiro.util.LifecycleUtils;\n  * {@link ConqueryAuthorizationRealm} handles the mapping of the authenticated\n  * {@link UserId}s to the permissions they hold.\n  */\n+\n @Slf4j\n @RequiredArgsConstructor\n public final class AuthorizationController {\n-\t\n-\t@NonNull\n-\tprivate final AuthorizationConfig authorizationConfig;\n-\t@NonNull\n-\tprivate final List<AuthenticationConfig> authenticationConfigs;\n-\t@NonNull\n-\t@Getter\n-\tprivate final MasterMetaStorage storage;\n-\n-\t@Getter\n-\tprivate List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n-\t@Getter\n-\tprivate AuthFilter<AuthenticationToken, User> authenticationFilter;\n-\t@Getter\n-\tprivate List<Realm> realms = new ArrayList<>();\n \n-\tpublic void init() {\n+    @NonNull\n+    private final AuthorizationConfig authorizationConfig;\n+    @NonNull\n+    private final List<AuthenticationConfig> authenticationConfigs;\n+    @NonNull @Getter\n+    private final MasterMetaStorage storage;\n+    @Getter\n+    private List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n+    @Getter\n+    private AuthFilter<AuthenticationToken, User> authenticationFilter;\n+    @Getter\n+    private List<Realm> realms = new ArrayList<>();\n \n-\t\tinitializeRealms(storage, authenticationConfigs, authenticationRealms, realms);\n+    public void init() {\n+        initializeRealms(storage, authenticationConfigs, authenticationRealms, realms);\n+        registerShiro(realms);\n \n-\t\tregisterShiro(realms);\n+        // Create Jersey filter for authentication\n+        this.authenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n \n-\t\t// Create Jersey filter for authentication\n-\t\tthis.authenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n+        // Register initial users for authorization and authentication (if the realm is able to)\n+        initializeAuthConstellation(authorizationConfig, realms, storage);\n+    }\n \n-\t\t// Register initial users for authorization and authentication (if the realm is able to)\n-\t\tinitializeAuthConstellation(authorizationConfig, realms, storage);\n-\t}\n+    private static void registerShiro(List<Realm> realms) {\n+        // Register all realms in Shiro\n+        log.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName)\n+                                                                                  .collect(Collectors.joining(\"\\n\\t\")));\n+        SecurityManager securityManager = new DefaultSecurityManager(realms);\n+        SecurityUtils.setSecurityManager(securityManager);\n+        log.debug(\"Security manager registered\");\n+    }\n \n-\tprivate static void registerShiro(List<Realm> realms) {\n-\t\t// Register all realms in Shiro\n-\t\tlog.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n-\t\tSecurityManager securityManager = new DefaultSecurityManager(realms);\n-\t\tSecurityUtils.setSecurityManager(securityManager);\n-\t\tlog.debug(\"Security manager registered\");\n-\t}\n+    private static void initializeRealms(MasterMetaStorage storage, List<AuthenticationConfig> config, List<ConqueryAuthenticationRealm> authenticationRealms, List<Realm> realms) {\n+        // Init authentication realms provided by with the config.\n+        for(AuthenticationConfig authenticationConf : config) {\n+            ConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n+            authenticationRealms.add(realm);\n+            realms.add(realm);\n+        }\n \n-\tprivate static void initializeRealms(MasterMetaStorage storage, List<AuthenticationConfig> config, List<ConqueryAuthenticationRealm> authenticationRealms, List<Realm> realms) {\n-\t\t// Init authentication realms provided by with the config.\n-\t\tfor (AuthenticationConfig authenticationConf : config) {\n-\t\t\tConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n-\t\t\tauthenticationRealms.add(realm);\n-\t\t\trealms.add(realm);\n-\t\t}\n-\t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n-\t\trealms.add(authorizingRealm);\n+        AuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n+        realms.add(authorizingRealm);\n \n-\t\t// Call Shiros init on all realms\n-\t\trealms.stream().forEach(LifecycleUtils::init);\n-\t}\n+        // Call Shiros init on all realms\n+        realms.stream().forEach(LifecycleUtils::init);\n+    }\n \n-\t/**\n-\t * Sets up the initial subjects and permissions for the authentication system\n-\t * that are found in the config.\n-\t * \n-\t * @param storage\n-\t *            A storage, where the handler might add a new users.\n-\t */\n-\tprivate static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n-\t\tfor (ProtoUser pUser : config.getInitialUsers()) {\n-\t\t\tpUser.registerForAuthorization(storage, true);\n-\t\t\tfor (Realm realm : realms) {\n-\t\t\t\tif (realm instanceof UserManageable) {\n-\t\t\t\t\tpUser.registerForAuthentication((UserManageable) realm, true);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+    /**\n+     * Sets up the initial subjects and permissions for the authentication system\n+     * that are found in the config.\n+     * \n+     * @param storage\n+     *            A storage, where the handler might add a new users.\n+     */\n \n-}\n+    private static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n+        for(ProtoUser pUser : config.getInitialUsers()) {\n+            pUser.registerForAuthorization(storage, true);\n+            for(Realm realm : realms) {\n+                if(realm instanceof UserManageable) {\n+                    pUser.registerForAuthentication((UserManageable)realm, true);\n+                }\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 92
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/267/AuthorizationController.java\nindex aeafe56914..7608c678cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/267/AuthorizationController.java\n@@ -35,7 +35,7 @@ import org.apache.shiro.util.LifecycleUtils;\n @Slf4j\n @RequiredArgsConstructor\n public final class AuthorizationController {\n-\t\n+\n \t@NonNull\n \tprivate final AuthorizationConfig authorizationConfig;\n \t@NonNull\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/267/AuthorizationController.java\nindex aeafe56914..7608c678cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/267/AuthorizationController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/267/AuthorizationController.java\n@@ -35,7 +35,7 @@ import org.apache.shiro.util.LifecycleUtils;\n @Slf4j\n @RequiredArgsConstructor\n public final class AuthorizationController {\n-\t\n+\n \t@NonNull\n \tprivate final AuthorizationConfig authorizationConfig;\n \t@NonNull\n",
            "diff_size": 1
        }
    ]
}