{
    "error_id": "590",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/590/PullNeighborPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/590/PullNeighborPartitionResult.java\nindex 8d8e6422fe..897a5c9111 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/590/PullNeighborPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/590/PullNeighborPartitionResult.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.getfuncs.pullneighbor;\n \n import com.tencent.angel.graph.client.node2vec.utils.SerDe;\n@@ -22,33 +23,33 @@ import io.netty.buffer.ByteBuf;\n import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n \n public class PullNeighborPartitionResult extends PartitionGetResult {\n-  private Long2ObjectOpenHashMap<long[]> partResult;\n-\n-  public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\n-    super();\n-    this.partResult = part;\n-  }\n-\n-  public PullNeighborPartitionResult() {\n-    super();\n-  }\n-\n-  public Long2ObjectOpenHashMap<long[]> getPartResult() {\n-    return partResult;\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf output) {\n-    SerDe.serLong2ArrayHashMap(partResult, output);\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    this.partResult = SerDe.deserLong2LongArray(input);\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    return SerDe.getLong2ArrayHashMapSerSize(partResult);\n-  }\n+    private Long2ObjectOpenHashMap<long[]> partResult;\n+\n+    public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\n+        super();\n+        this.partResult = part;\n+    }\n+\n+    public PullNeighborPartitionResult() {\n+        super();\n+    }\n+\n+    public Long2ObjectOpenHashMap<long[]> getPartResult() {\n+        return partResult;\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        SerDe.serLong2ArrayHashMap(partResult, output);\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        this.partResult = SerDe.deserLong2LongArray(input);\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        return SerDe.getLong2ArrayHashMapSerSize(partResult);\n+    }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/590/PullNeighborPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/590/PullNeighborPartitionResult.java\nindex 8d8e6422fe..cc517d54d4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/590/PullNeighborPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/590/PullNeighborPartitionResult.java\n@@ -51,4 +51,4 @@ public class PullNeighborPartitionResult extends PartitionGetResult {\n   public int bufferLen() {\n     return SerDe.getLong2ArrayHashMapSerSize(partResult);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/590/PullNeighborPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/590/PullNeighborPartitionResult.java\nindex 8d8e6422fe..dc291a8693 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/590/PullNeighborPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/590/PullNeighborPartitionResult.java\n@@ -22,33 +22,34 @@ import io.netty.buffer.ByteBuf;\n import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n \n public class PullNeighborPartitionResult extends PartitionGetResult {\n-  private Long2ObjectOpenHashMap<long[]> partResult;\n+    private Long2ObjectOpenHashMap<long[]> partResult;\n \n-  public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\n+    public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\n     super();\n     this.partResult = part;\n-  }\n+    }\n \n-  public PullNeighborPartitionResult() {\n+    public PullNeighborPartitionResult() {\n     super();\n-  }\n+    }\n \n-  public Long2ObjectOpenHashMap<long[]> getPartResult() {\n+    public Long2ObjectOpenHashMap<long[]> getPartResult() {\n     return partResult;\n-  }\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n+    @Override\n+    public void serialize(ByteBuf output) {\n     SerDe.serLong2ArrayHashMap(partResult, output);\n-  }\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n+    @Override\n+    public void deserialize(ByteBuf input) {\n     this.partResult = SerDe.deserLong2LongArray(input);\n-  }\n+    }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return SerDe.getLong2ArrayHashMapSerSize(partResult);\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}