{
    "error_id": "59",
    "information": {
        "errors": [
            {
                "line": "202",
                "severity": "error",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "        Period period = new Period(durationInMillis);\n        if (period.toStandardMinutes().getMinutes() <= 0) {\n            return \"less than a minute\"; // TODO Localize\n        } else {\n            return PERIOD_FORMATTER.print(period.normalizedStandard());\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/59/ReindexAction.java\nindex e8254cc452..1867f41556 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler/59/ReindexAction.java\n@@ -199,7 +199,8 @@ public class ReindexAction implements Serializable {\n     private String formatTimePeriod(long durationInMillis) {\n         Period period = new Period(durationInMillis);\n         if (period.toStandardMinutes().getMinutes() <= 0) {\n-            return \"less than a minute\"; // TODO Localize\n+\n+        return \"less than a minute\"; // TODO Localize\n         } else {\n             return PERIOD_FORMATTER.print(period.normalizedStandard());\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/59/ReindexAction.java\nindex e8254cc452..c2d9b4e73e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/intellij/59/ReindexAction.java\n@@ -23,7 +23,7 @@ import com.google.common.base.Optional;\n @CheckRole(\"admin\")\n public class ReindexAction implements Serializable {\n     private static final org.slf4j.Logger log =\n-            org.slf4j.LoggerFactory.getLogger(ReindexAction.class);\n+        org.slf4j.LoggerFactory.getLogger(ReindexAction.class);\n \n     private static final long serialVersionUID = 1L;\n     private final DecimalFormat PERCENT_FORMAT = new DecimalFormat(\"###.##\");\n@@ -36,7 +36,7 @@ public class ReindexAction implements Serializable {\n \n     public boolean isAnyOptionSelected() {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             if (opts.isOptimize() || opts.isPurge() || opts.isReindex()) {\n                 return true;\n             }\n@@ -46,7 +46,7 @@ public class ReindexAction implements Serializable {\n \n     public boolean isSelectAll() {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             if (!opts.isOptimize() || !opts.isPurge() || !opts.isReindex()) {\n                 return false;\n             }\n@@ -56,7 +56,7 @@ public class ReindexAction implements Serializable {\n \n     public void setSelectAll(boolean selectAll) {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             opts.setPurge(selectAll);\n             opts.setReindex(selectAll);\n             opts.setOptimize(selectAll);\n@@ -65,7 +65,7 @@ public class ReindexAction implements Serializable {\n \n     public boolean isPurgeAll() {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             if (!opts.isPurge()) {\n                 return false;\n             }\n@@ -75,14 +75,14 @@ public class ReindexAction implements Serializable {\n \n     public void setPurgeAll(boolean selected) {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             opts.setPurge(selected);\n         }\n     }\n \n     public boolean isReindexAll() {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             if (!opts.isReindex()) {\n                 return false;\n             }\n@@ -92,14 +92,14 @@ public class ReindexAction implements Serializable {\n \n     public void setReindexAll(boolean selected) {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             opts.setReindex(selected);\n         }\n     }\n \n     public boolean isOptimizeAll() {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             if (!opts.isOptimize()) {\n                 return false;\n             }\n@@ -109,7 +109,7 @@ public class ReindexAction implements Serializable {\n \n     public void setOptimizeAll(boolean selected) {\n         for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+            .getReindexOptions()) {\n             opts.setOptimize(selected);\n         }\n     }\n@@ -120,7 +120,7 @@ public class ReindexAction implements Serializable {\n \n     public boolean isInProgress() {\n         return searchIndexManager.getProcessHandle() != null\n-                && !searchIndexManager.getProcessHandle().isDone();\n+            && !searchIndexManager.getProcessHandle().isDone();\n     }\n \n     public String getCurrentClass() {\n@@ -129,7 +129,7 @@ public class ReindexAction implements Serializable {\n \n     public boolean isError() {\n         AsyncTaskHandle<Void> taskHandle =\n-                searchIndexManager.getProcessHandle();\n+            searchIndexManager.getProcessHandle();\n         if (taskHandle == null) {\n             return false;\n         } else if (taskHandle.isDone()) {\n@@ -167,14 +167,14 @@ public class ReindexAction implements Serializable {\n             return \"0\";\n         } else {\n             double completedPercent = (double) getReindexProgress()\n-                    / (double) getReindexCount() * 100;\n+                / (double) getReindexCount() * 100;\n             return PERCENT_FORMAT.format(completedPercent);\n         }\n     }\n \n     public void reindexDatabase() {\n         if (searchIndexManager.getProcessHandle() == null\n-                || searchIndexManager.getProcessHandle().isDone()) {\n+            || searchIndexManager.getProcessHandle().isDone()) {\n             searchIndexManager.startProcess();\n         }\n     }\n@@ -185,16 +185,16 @@ public class ReindexAction implements Serializable {\n \n     public boolean isCanceled() {\n         return searchIndexManager.getProcessHandle() != null\n-                && searchIndexManager.getProcessHandle().isCancelled();\n+            && searchIndexManager.getProcessHandle().isCancelled();\n     }\n \n     // TODO move to common location with ViewAllStatusAction\n     private static final PeriodFormatter PERIOD_FORMATTER =\n-            new PeriodFormatterBuilder().appendDays()\n-                    .appendSuffix(\" day\", \" days\").appendSeparator(\", \")\n-                    .appendHours().appendSuffix(\" hour\", \" hours\")\n-                    .appendSeparator(\", \").appendMinutes()\n-                    .appendSuffix(\" min\", \" mins\").toFormatter();\n+        new PeriodFormatterBuilder().appendDays()\n+            .appendSuffix(\" day\", \" days\").appendSeparator(\", \")\n+            .appendHours().appendSuffix(\" hour\", \" hours\")\n+            .appendSeparator(\", \").appendMinutes()\n+            .appendSuffix(\" min\", \" mins\").toFormatter();\n \n     private String formatTimePeriod(long durationInMillis) {\n         Period period = new Period(durationInMillis);\n@@ -207,7 +207,7 @@ public class ReindexAction implements Serializable {\n \n     public String getElapsedTime() {\n         AsyncTaskHandle<Void> processHandle =\n-                searchIndexManager.getProcessHandle();\n+            searchIndexManager.getProcessHandle();\n         if (processHandle == null) {\n             log.error(\"processHandle is null when looking up elapsed time\");\n             return \"\";\n@@ -219,7 +219,7 @@ public class ReindexAction implements Serializable {\n \n     public String getEstimatedTimeRemaining() {\n         Optional<Long> estimate = searchIndexManager.getProcessHandle()\n-                .getEstimatedTimeRemaining();\n+            .getEstimatedTimeRemaining();\n         if (estimate.isPresent()) {\n             return formatTimePeriod(estimate.get());\n         }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/59/ReindexAction.java\nindex e8254cc452..9e2d7d59d1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/codebuff/59/ReindexAction.java\n@@ -17,16 +17,16 @@ import org.zanata.async.AsyncTaskHandle;\n import org.zanata.service.SearchIndexManager;\n import com.google.common.base.Optional;\n \n+\n @Named(\"reindexAction\")\n @Dependent\n @Model\n @CheckRole(\"admin\")\n public class ReindexAction implements Serializable {\n-    private static final org.slf4j.Logger log =\n-            org.slf4j.LoggerFactory.getLogger(ReindexAction.class);\n-\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(ReindexAction.class);\n     private static final long serialVersionUID = 1L;\n     private final DecimalFormat PERCENT_FORMAT = new DecimalFormat(\"###.##\");\n+\n     @Inject\n     private SearchIndexManager searchIndexManager;\n \n@@ -35,9 +35,10 @@ public class ReindexAction implements Serializable {\n     }\n \n     public boolean isAnyOptionSelected() {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n-            if (opts.isOptimize() || opts.isPurge() || opts.isReindex()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n+            if (opts.isOptimize()\n+                    || opts.isPurge()\n+                    || opts.isReindex()) {\n                 return true;\n             }\n         }\n@@ -45,9 +46,10 @@ public class ReindexAction implements Serializable {\n     }\n \n     public boolean isSelectAll() {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n-            if (!opts.isOptimize() || !opts.isPurge() || !opts.isReindex()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n+            if (!opts.isOptimize()\n+                    || !opts.isPurge()\n+                    || !opts.isReindex()) {\n                 return false;\n             }\n         }\n@@ -55,8 +57,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public void setSelectAll(boolean selectAll) {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             opts.setPurge(selectAll);\n             opts.setReindex(selectAll);\n             opts.setOptimize(selectAll);\n@@ -64,8 +65,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public boolean isPurgeAll() {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             if (!opts.isPurge()) {\n                 return false;\n             }\n@@ -74,15 +74,13 @@ public class ReindexAction implements Serializable {\n     }\n \n     public void setPurgeAll(boolean selected) {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             opts.setPurge(selected);\n         }\n     }\n \n     public boolean isReindexAll() {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             if (!opts.isReindex()) {\n                 return false;\n             }\n@@ -91,15 +89,13 @@ public class ReindexAction implements Serializable {\n     }\n \n     public void setReindexAll(boolean selected) {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             opts.setReindex(selected);\n         }\n     }\n \n     public boolean isOptimizeAll() {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             if (!opts.isOptimize()) {\n                 return false;\n             }\n@@ -108,8 +104,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public void setOptimizeAll(boolean selected) {\n-        for (ReindexClassOptions opts : searchIndexManager\n-                .getReindexOptions()) {\n+        for (ReindexClassOptions opts : searchIndexManager.getReindexOptions()) {\n             opts.setOptimize(selected);\n         }\n     }\n@@ -119,8 +114,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public boolean isInProgress() {\n-        return searchIndexManager.getProcessHandle() != null\n-                && !searchIndexManager.getProcessHandle().isDone();\n+        return searchIndexManager.getProcessHandle() != null && !searchIndexManager.getProcessHandle().isDone();\n     }\n \n     public String getCurrentClass() {\n@@ -128,8 +122,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public boolean isError() {\n-        AsyncTaskHandle<Void> taskHandle =\n-                searchIndexManager.getProcessHandle();\n+        AsyncTaskHandle<Void> taskHandle = searchIndexManager.getProcessHandle();\n         if (taskHandle == null) {\n             return false;\n         } else if (taskHandle.isDone()) {\n@@ -166,15 +159,13 @@ public class ReindexAction implements Serializable {\n         if (searchIndexManager.getProcessHandle() == null) {\n             return \"0\";\n         } else {\n-            double completedPercent = (double) getReindexProgress()\n-                    / (double) getReindexCount() * 100;\n+            double completedPercent = (double) getReindexProgress() / (double) getReindexCount() * 100;\n             return PERCENT_FORMAT.format(completedPercent);\n         }\n     }\n \n     public void reindexDatabase() {\n-        if (searchIndexManager.getProcessHandle() == null\n-                || searchIndexManager.getProcessHandle().isDone()) {\n+        if (searchIndexManager.getProcessHandle() == null || searchIndexManager.getProcessHandle().isDone()) {\n             searchIndexManager.startProcess();\n         }\n     }\n@@ -184,18 +175,20 @@ public class ReindexAction implements Serializable {\n     }\n \n     public boolean isCanceled() {\n-        return searchIndexManager.getProcessHandle() != null\n-                && searchIndexManager.getProcessHandle().isCancelled();\n+        return searchIndexManager.getProcessHandle() != null && searchIndexManager.getProcessHandle().isCancelled();\n     }\n \n     // TODO move to common location with ViewAllStatusAction\n-    private static final PeriodFormatter PERIOD_FORMATTER =\n-            new PeriodFormatterBuilder().appendDays()\n-                    .appendSuffix(\" day\", \" days\").appendSeparator(\", \")\n-                    .appendHours().appendSuffix(\" hour\", \" hours\")\n-                    .appendSeparator(\", \").appendMinutes()\n-                    .appendSuffix(\" min\", \" mins\").toFormatter();\n \n+    private static final PeriodFormatter PERIOD_FORMATTER = new PeriodFormatterBuilder().appendDays()\n+                                                                                        .appendSuffix(\" day\", \" days\")\n+                                                                                        .appendSeparator(\", \")\n+                                                                                        .appendHours()\n+                                                                                        .appendSuffix(\" hour\", \" hours\")\n+                                                                                        .appendSeparator(\", \")\n+                                                                                        .appendMinutes()\n+                                                                                        .appendSuffix(\" min\", \" mins\")\n+                                                                                        .toFormatter();\n     private String formatTimePeriod(long durationInMillis) {\n         Period period = new Period(durationInMillis);\n         if (period.toStandardMinutes().getMinutes() <= 0) {\n@@ -206,8 +199,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public String getElapsedTime() {\n-        AsyncTaskHandle<Void> processHandle =\n-                searchIndexManager.getProcessHandle();\n+        AsyncTaskHandle<Void> processHandle = searchIndexManager.getProcessHandle();\n         if (processHandle == null) {\n             log.error(\"processHandle is null when looking up elapsed time\");\n             return \"\";\n@@ -218,8 +210,7 @@ public class ReindexAction implements Serializable {\n     }\n \n     public String getEstimatedTimeRemaining() {\n-        Optional<Long> estimate = searchIndexManager.getProcessHandle()\n-                .getEstimatedTimeRemaining();\n+        Optional<Long> estimate = searchIndexManager.getProcessHandle().getEstimatedTimeRemaining();\n         if (estimate.isPresent()) {\n             return formatTimePeriod(estimate.get());\n         }\n@@ -227,4 +218,4 @@ public class ReindexAction implements Serializable {\n         // unavailable anyway).\n         return \"unknown\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_three_grams/59/ReindexAction.java\nindex e8254cc452..1867f41556 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/errored/1/59/ReindexAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/zanata-zanata-platform/styler_three_grams/59/ReindexAction.java\n@@ -199,7 +199,8 @@ public class ReindexAction implements Serializable {\n     private String formatTimePeriod(long durationInMillis) {\n         Period period = new Period(durationInMillis);\n         if (period.toStandardMinutes().getMinutes() <= 0) {\n-            return \"less than a minute\"; // TODO Localize\n+\n+        return \"less than a minute\"; // TODO Localize\n         } else {\n             return PERIOD_FORMATTER.print(period.normalizedStandard());\n         }\n",
            "diff_size": 2
        }
    ]
}