{
    "error_id": "806",
    "information": {
        "errors": [
            {
                "line": "68",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        // Set basic configuration keys\n        conf.setBoolean(\"mapred.mapper.new-api\", true);\n        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n        conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n\n        // Set data format",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "69",
                    "column": "87",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/806/LinearRegTest.java\nindex 1d1839ba7e..e1458748e2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/806/LinearRegTest.java\n@@ -65,8 +65,8 @@ public class LinearRegTest {\n \n         // Set basic configuration keys\n         conf.setBoolean(\"mapred.mapper.new-api\", true);\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n-        conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n+        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS,CombineTextInputFormat .class.getName())\n+        ;conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n \n         // Set data format\n         conf.set(MLConf.ML_DATAFORMAT(), dataFmt);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/806/LinearRegTest.java\nindex 1d1839ba7e..8960c3176f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/806/LinearRegTest.java\n@@ -14,7 +14,9 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.ml.regression.linear;\n+\n import com.tencent.angel.conf.AngelConfiguration;\n import com.tencent.angel.ml.conf.MLConf;\n import org.apache.commons.logging.Log;\n@@ -32,6 +34,7 @@ import org.junit.Test;\n public class LinearRegTest {\n     private Configuration conf = new Configuration();\n     private static final Log LOG = LogFactory.getLog(LinearRegTest.class);\n+\n     static {\n         PropertyConfigurator.configure(\"../conf/log4j.properties\");\n     }\n@@ -65,7 +68,8 @@ public class LinearRegTest {\n \n         // Set basic configuration keys\n         conf.setBoolean(\"mapred.mapper.new-api\", true);\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS,\n+                CombineTextInputFormat.class.getName());\n         conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n \n         // Set data format\n@@ -118,7 +122,7 @@ public class LinearRegTest {\n         // Set trainning data path\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set load model path\n-        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS+TMP_PATH+\"/model\");\n+        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model\");\n         // Set save model path\n         conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/newmodel\");\n         // Set actionType incremental train\n@@ -139,7 +143,7 @@ public class LinearRegTest {\n         // Set trainning data path\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set load model path\n-        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS+TMP_PATH+\"/model\");\n+        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model\");\n         // Set predict result path\n         conf.set(AngelConfiguration.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict\");\n         // Set log sava path\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 8, indentation should be the same level as line 45.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/806/LinearRegTest.java\nindex 1d1839ba7e..f36f464e28 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/806/LinearRegTest.java\n@@ -30,10 +30,10 @@ import org.junit.Test;\n  * Gradient descent LinearReg UT.\n  */\n public class LinearRegTest {\n-    private Configuration conf = new Configuration();\n+  private Configuration conf = new Configuration();\n     private static final Log LOG = LogFactory.getLog(LinearRegTest.class);\n     static {\n-        PropertyConfigurator.configure(\"../conf/log4j.properties\");\n+  PropertyConfigurator.configure(\"../conf/log4j.properties\");\n     }\n \n     /**\n@@ -41,8 +41,7 @@ public class LinearRegTest {\n      */\n     @Before\n     public void setConf() {\n-\n-        // Feature number of train data\n+  // Feature number of train data\n         int featureNum = 101;\n         // Total iteration number\n         int epochNum = 100;\n@@ -88,7 +87,7 @@ public class LinearRegTest {\n \n     @Test\n     public void trainOnLocalClusterTest() throws Exception {\n-        String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n+  String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n         String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n         String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n         String logPath = \"./src/test/log\";\n@@ -107,10 +106,9 @@ public class LinearRegTest {\n         runner.train(conf);\n     }\n \n-\n-    @Test\n+@Test\n     public void incTrainTest() {\n-        String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n+  String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n         String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n         String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n         String logPath = \"./src/test/log\";\n@@ -118,7 +116,7 @@ public class LinearRegTest {\n         // Set trainning data path\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set load model path\n-        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS+TMP_PATH+\"/model\");\n+        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS +TMP_PATH+ \"/model\");\n         // Set save model path\n         conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/newmodel\");\n         // Set actionType incremental train\n@@ -132,14 +130,14 @@ public class LinearRegTest {\n \n     @Test\n     public void predictTest() {\n-        String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n+  String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n         String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n         String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n \n         // Set trainning data path\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set load model path\n-        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS+TMP_PATH+\"/model\");\n+        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS +TMP_PATH+ \"/model\");\n         // Set predict result path\n         conf.set(AngelConfiguration.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict\");\n         // Set log sava path\n@@ -151,4 +149,4 @@ public class LinearRegTest {\n \n         runner.predict(conf);\n     }\n-}\n+  }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 63.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 65.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 68.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 76.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 84.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 101.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 103.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 105.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 107.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 120.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 122.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 124.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 126.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 128.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 140.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 142.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 144.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 146.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 148.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/806/LinearRegTest.java\nindex 1d1839ba7e..9f776b368b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/806/LinearRegTest.java\n@@ -15,6 +15,7 @@\n  *\n  */\n package com.tencent.angel.ml.regression.linear;\n+\n import com.tencent.angel.conf.AngelConfiguration;\n import com.tencent.angel.ml.conf.MLConf;\n import org.apache.commons.logging.Log;\n@@ -29,126 +30,124 @@ import org.junit.Test;\n /**\n  * Gradient descent LinearReg UT.\n  */\n+\n public class LinearRegTest {\n     private Configuration conf = new Configuration();\n     private static final Log LOG = LogFactory.getLog(LinearRegTest.class);\n+\n     static {\n-        PropertyConfigurator.configure(\"../conf/log4j.properties\");\n+    PropertyConfigurator.configure(\"../conf/log4j.properties\");\n     }\n \n     /**\n      * set parameter values of conf\n      */\n+\n     @Before\n     public void setConf() {\n \n         // Feature number of train data\n-        int featureNum = 101;\n+    int featureNum = 101;\n         // Total iteration number\n-        int epochNum = 100;\n+    int epochNum = 100;\n         // Validation sample Ratio\n-        double vRatio = 0.5;\n+    double vRatio = 0.5;\n         // Data format, libsvm or dummy\n-        String dataFmt = \"libsvm\";\n+    String dataFmt = \"libsvm\";\n         // Train batch number per epoch.\n-        double spRatio = 1;\n+    double spRatio = 1;\n \n         // Learning rate\n-        double learnRate = 0.01;\n+    double learnRate = 0.01;\n         // Decay of learning rate\n-        double decay = 0.1;\n+    double decay = 0.1;\n         // Regularization coefficient\n-        double reg = 0;\n+    double reg = 0;\n \n         // Set local deploy mode\n-        conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n+    conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n         // Set basic configuration keys\n-        conf.setBoolean(\"mapred.mapper.new-api\", true);\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n-        conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n+    conf.setBoolean(\"mapred.mapper.new-api\", true);\n+    conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+    conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n \n         // Set data format\n-        conf.set(MLConf.ML_DATAFORMAT(), dataFmt);\n+    conf.set(MLConf.ML_DATAFORMAT(), dataFmt);\n \n         //set angel resource parameters #worker, #task, #PS\n-        conf.setInt(AngelConfiguration.ANGEL_WORKERGROUP_NUMBER, 1);\n-        conf.setInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, 1);\n-        conf.setInt(AngelConfiguration.ANGEL_PS_NUMBER, 1);\n+    conf.setInt(AngelConfiguration.ANGEL_WORKERGROUP_NUMBER, 1);\n+    conf.setInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, 1);\n+    conf.setInt(AngelConfiguration.ANGEL_PS_NUMBER, 1);\n \n         //set sgd LR algorithm parameters #feature #epoch\n-        conf.set(MLConf.ML_FEATURE_NUM(), String.valueOf(featureNum));\n-        conf.set(MLConf.ML_EPOCH_NUM(), String.valueOf(epochNum));\n-        conf.set(MLConf.ML_BATCH_SAMPLE_Ratio(), String.valueOf(spRatio));\n-        conf.set(MLConf.ML_VALIDATE_RATIO(), String.valueOf(vRatio));\n-        conf.set(MLConf.ML_LEARN_RATE(), String.valueOf(learnRate));\n-        conf.set(MLConf.ML_LEARN_DECAY(), String.valueOf(decay));\n-        conf.set(MLConf.ML_REG_L2(), String.valueOf(reg));\n+    conf.set(MLConf.ML_FEATURE_NUM(), String.valueOf(featureNum));\n+    conf.set(MLConf.ML_EPOCH_NUM(), String.valueOf(epochNum));\n+    conf.set(MLConf.ML_BATCH_SAMPLE_Ratio(), String.valueOf(spRatio));\n+    conf.set(MLConf.ML_VALIDATE_RATIO(), String.valueOf(vRatio));\n+    conf.set(MLConf.ML_LEARN_RATE(), String.valueOf(learnRate));\n+    conf.set(MLConf.ML_LEARN_DECAY(), String.valueOf(decay));\n+    conf.set(MLConf.ML_REG_L2(), String.valueOf(reg));\n     }\n \n     @Test\n     public void trainOnLocalClusterTest() throws Exception {\n-        String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n-        String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n-        String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n-        String logPath = \"./src/test/log\";\n+    String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n+    String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n+    String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+    String logPath = \"./src/test/log\";\n \n         // Set trainning data path\n-        conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n+    conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set save model path\n-        conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model\");\n+    conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model\");\n         // Set log path\n-        conf.set(AngelConfiguration.ANGEL_LOG_PATH, logPath);\n+    conf.set(AngelConfiguration.ANGEL_LOG_PATH, logPath);\n         // Set actionType train\n-        conf.set(AngelConfiguration.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_TRAIN());\n-\n-\n-        LinearRegRunner runner = new LinearRegRunner();\n-        runner.train(conf);\n+    conf.set(AngelConfiguration.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_TRAIN());\n+    LinearRegRunner runner = new LinearRegRunner();\n+    runner.train(conf);\n     }\n \n-\n     @Test\n     public void incTrainTest() {\n-        String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n-        String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n-        String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n-        String logPath = \"./src/test/log\";\n+    String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n+    String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n+    String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+    String logPath = \"./src/test/log\";\n \n         // Set trainning data path\n-        conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n+    conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set load model path\n-        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS+TMP_PATH+\"/model\");\n+    conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model\");\n         // Set save model path\n-        conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/newmodel\");\n+    conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/newmodel\");\n         // Set actionType incremental train\n-        conf.set(AngelConfiguration.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_INC_TRAIN());\n+    conf.set(AngelConfiguration.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_INC_TRAIN());\n         // Set log path\n-        conf.set(AngelConfiguration.ANGEL_LOG_PATH, logPath);\n-\n-        LinearRegRunner runner = new LinearRegRunner();\n-        runner.incTrain(conf);\n+    conf.set(AngelConfiguration.ANGEL_LOG_PATH, logPath);\n+    LinearRegRunner runner = new LinearRegRunner();\n+    runner.incTrain(conf);\n     }\n \n     @Test\n     public void predictTest() {\n-        String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n-        String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n-        String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+    String inputPath = \"./src/test/data/LinearRegression/LinearReg100.train\";\n+    String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n+    String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n \n         // Set trainning data path\n-        conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n+    conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         // Set load model path\n-        conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS+TMP_PATH+\"/model\");\n+    conf.set(AngelConfiguration.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model\");\n         // Set predict result path\n-        conf.set(AngelConfiguration.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict\");\n+    conf.set(AngelConfiguration.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict\");\n         // Set log sava path\n-        conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n+    conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n         // Set actionType prediction\n-        conf.set(AngelConfiguration.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_PREDICT());\n-\n-        LinearRegRunner runner = new LinearRegRunner();\n-\n-        runner.predict(conf);\n+    conf.set(AngelConfiguration.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_PREDICT());\n+    LinearRegRunner runner = new LinearRegRunner();\n+    runner.predict(conf);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 67
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "69",
                    "column": "87",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/806/LinearRegTest.java\nindex 1d1839ba7e..e1458748e2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/806/LinearRegTest.java\n@@ -65,8 +65,8 @@ public class LinearRegTest {\n \n         // Set basic configuration keys\n         conf.setBoolean(\"mapred.mapper.new-api\", true);\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n-        conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n+        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS,CombineTextInputFormat .class.getName())\n+        ;conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n \n         // Set data format\n         conf.set(MLConf.ML_DATAFORMAT(), dataFmt);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "149",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/806/LinearRegTest.java\nindex 1d1839ba7e..170f470a93 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/806/LinearRegTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/806/LinearRegTest.java\n@@ -64,8 +64,7 @@ public class LinearRegTest {\n         conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n         // Set basic configuration keys\n-        conf.setBoolean(\"mapred.mapper.new-api\", true);\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+        conf.setBoolean(\"mapred.mapper.new-api\", true); conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n         conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n \n         // Set data format\n",
            "diff_size": 2
        }
    ]
}