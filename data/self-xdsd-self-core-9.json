{
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "75",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        JsonObject jsonObject = fromUri(issueUri, issueId);\n        Issue issue = null;\n        if(jsonObject != null){\n            issue = new GithubIssue(issueUri, jsonObject, storage);\n        }\n        return issue;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/9/GithubIssues.java\nindex a9fb643cd6..4814965709 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/9/GithubIssues.java\n@@ -72,7 +72,7 @@ public final class GithubIssues implements Issues {\n         final URI issueUri = URI.create(issuesUri.toString() + \"/\" + issueId);\n         JsonObject jsonObject = fromUri(issueUri, issueId);\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             issue = new GithubIssue(issueUri, jsonObject, storage);\n         }\n         return issue;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/9/GithubIssues.java\nindex a9fb643cd6..489596d337 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/9/GithubIssues.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.issues;\n \n import com.selfxdsd.api.Issue;\n@@ -60,7 +61,7 @@ public final class GithubIssues implements Issues {\n      * Ctor.\n      *\n      * @param issuesUri Issues base URI.\n-     * @param storage Storage.\n+     * @param storage   Storage.\n      */\n     public GithubIssues(final URI issuesUri, final Storage storage) {\n         this.issuesUri = issuesUri;\n@@ -72,7 +73,7 @@ public final class GithubIssues implements Issues {\n         final URI issueUri = URI.create(issuesUri.toString() + \"/\" + issueId);\n         JsonObject jsonObject = fromUri(issueUri, issueId);\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null) {\n             issue = new GithubIssue(issueUri, jsonObject, storage);\n         }\n         return issue;\n@@ -88,7 +89,7 @@ public final class GithubIssues implements Issues {\n     /**\n      * Fetches a json object over the network.\n      *\n-     * @param uri Provided URI.\n+     * @param uri     Provided URI.\n      * @param issueId Issue id.\n      * @return JsonObject or null if result status is 400 or 204\n      * @throws IllegalStateException when something went wrong.\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/9/GithubIssues.java\nindex a9fb643cd6..6652303514 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/9/GithubIssues.java\n@@ -72,7 +72,7 @@ public final class GithubIssues implements Issues {\n         final URI issueUri = URI.create(issuesUri.toString() + \"/\" + issueId);\n         JsonObject jsonObject = fromUri(issueUri, issueId);\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if(jsonObject != null) {\n             issue = new GithubIssue(issueUri, jsonObject, storage);\n         }\n         return issue;\n@@ -81,8 +81,7 @@ public final class GithubIssues implements Issues {\n     @Override\n     public Iterator<Issue> iterator() {\n         throw new IllegalStateException(\n-            \"You cannot iterate over all the issues in a repo.\"\n-        );\n+            \"You cannot iterate over all the issues in a repo.\");\n     }\n \n     /**\n@@ -96,34 +95,22 @@ public final class GithubIssues implements Issues {\n     private JsonObject fromUri(final URI uri, final String issueId) {\n         JsonObject jsonObject;\n         try {\n-            final HttpResponse<String> response = HttpClient.newHttpClient()\n-                .send(\n-                    HttpRequest.newBuilder()\n-                        .uri(uri)\n-                        .header(\"Content-Type\", \"application/json\")\n-                        .build(),\n-                    HttpResponse.BodyHandlers.ofString()\n-                );\n+            final HttpResponse<String> response = HttpClient.newHttpClient().send(HttpRequest.newBuilder().uri(uri).header(\"Content-Type\", \"application/json\").build(), HttpResponse.BodyHandlers.ofString());\n             final int status = response.statusCode();\n             switch (status) {\n-                case HttpURLConnection.HTTP_OK:\n-                    jsonObject = Json.createReader(\n-                        new StringReader(response.body())\n-                    ).readObject();\n+                case HttpURLConnection.HTTP_OK:jsonObject = Json.createReader(\n+                        new StringReader(response.body())).readObject();\n                     break;\n                 case HttpURLConnection.HTTP_NOT_FOUND:\n-                case HttpURLConnection.HTTP_NO_CONTENT:\n-                    jsonObject = null;\n+                case HttpURLConnection.HTTP_NO_CONTENT:jsonObject = null;\n                     break;\n                 default:\n-                    throw new IllegalStateException(\"Could not get the issue \"\n-                        + issueId);\n-            }\n+                    throw new IllegalStateException(\"Could not get the issue \" + issueId);\n+    }\n         } catch (final IOException | InterruptedException exception) {\n-            throw new IllegalStateException(\"Could not get the issue \"\n-                + issueId);\n-        }\n+            throw new IllegalStateException(\"Could not get the issue \" + issueId);\n+    }\n \n         return jsonObject;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "86",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/9/GithubIssues.java\nindex a9fb643cd6..d1dc232102 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/9/GithubIssues.java\n@@ -25,7 +25,6 @@ package com.selfxdsd.core.issues;\n import com.selfxdsd.api.Issue;\n import com.selfxdsd.api.Issues;\n import com.selfxdsd.api.storage.Storage;\n-\n import javax.json.Json;\n import javax.json.JsonObject;\n import java.io.IOException;\n@@ -44,16 +43,22 @@ import java.util.Iterator;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class GithubIssues implements Issues {\n \n     /**\n      * Github repo Issues base uri.\n      */\n+\n+\n     private URI issuesUri;\n \n     /**\n      * Self storage, in case we want to store something.\n      */\n+\n+\n     private Storage storage;\n \n     /**\n@@ -62,6 +67,8 @@ public final class GithubIssues implements Issues {\n      * @param issuesUri Issues base URI.\n      * @param storage Storage.\n      */\n+\n+\n     public GithubIssues(final URI issuesUri, final Storage storage) {\n         this.issuesUri = issuesUri;\n         this.storage = storage;\n@@ -70,19 +77,22 @@ public final class GithubIssues implements Issues {\n     @Override\n     public Issue getById(final String issueId) {\n         final URI issueUri = URI.create(issuesUri.toString() + \"/\" + issueId);\n+\n+\n         JsonObject jsonObject = fromUri(issueUri, issueId);\n+\n+\n         Issue issue = null;\n-        if(jsonObject != null){\n-            issue = new GithubIssue(issueUri, jsonObject, storage);\n-        }\n+        if( jsonObject!= null) {\n+                                   issue = new GithubIssue(issueUri, jsonObject, storage);\n+                               }\n         return issue;\n     }\n \n     @Override\n     public Iterator<Issue> iterator() {\n         throw new IllegalStateException(\n-            \"You cannot iterate over all the issues in a repo.\"\n-        );\n+            \"You cannot iterate over all the issues in a repo.\");\n     }\n \n     /**\n@@ -93,37 +103,34 @@ public final class GithubIssues implements Issues {\n      * @return JsonObject or null if result status is 400 or 204\n      * @throws IllegalStateException when something went wrong.\n      */\n+\n     private JsonObject fromUri(final URI uri, final String issueId) {\n         JsonObject jsonObject;\n         try {\n-            final HttpResponse<String> response = HttpClient.newHttpClient()\n-                .send(\n-                    HttpRequest.newBuilder()\n-                        .uri(uri)\n-                        .header(\"Content-Type\", \"application/json\")\n-                        .build(),\n-                    HttpResponse.BodyHandlers.ofString()\n-                );\n+            final HttpResponse<String> response = HttpClient.newHttpClient().send(HttpRequest.newBuilder().uri(uri).header(\"Content-Type\", \"application/json\").build(), HttpResponse.BodyHandlers.ofString());\n             final int status = response.statusCode();\n-            switch (status) {\n-                case HttpURLConnection.HTTP_OK:\n-                    jsonObject = Json.createReader(\n-                        new StringReader(response.body())\n-                    ).readObject();\n-                    break;\n-                case HttpURLConnection.HTTP_NOT_FOUND:\n-                case HttpURLConnection.HTTP_NO_CONTENT:\n-                    jsonObject = null;\n-                    break;\n+            switch( status) {\n+                case HttpURLConnection.HTTP_OK: jsonObject = Json.createReader(new StringReader(\n+                                                                                   response.body())).readObject();\n+                                                break;\n+\n+\n+                case HttpURLConnection.HTTP_NOT_FOUND: case HttpURLConnection.HTTP_NO_CONTENT: jsonObject = null;\n+                                                                                               break;\n+\n+\n                 default:\n-                    throw new IllegalStateException(\"Could not get the issue \"\n-                        + issueId);\n+                throw new IllegalStateException(\n+                    \"Could not get the issue \" + issueId);\n+\n+\n             }\n-        } catch (final IOException | InterruptedException exception) {\n-            throw new IllegalStateException(\"Could not get the issue \"\n-                + issueId);\n         }\n \n+catch(final IOException| InterruptedException exception) {\n+    throw new IllegalStateException(\n+        \"Could not get the issue \" + issueId);\n+}\n         return jsonObject;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/9/GithubIssues.java\nindex a9fb643cd6..4814965709 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/9/GithubIssues.java\n@@ -72,7 +72,7 @@ public final class GithubIssues implements Issues {\n         final URI issueUri = URI.create(issuesUri.toString() + \"/\" + issueId);\n         JsonObject jsonObject = fromUri(issueUri, issueId);\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if (jsonObject != null){\n             issue = new GithubIssue(issueUri, jsonObject, storage);\n         }\n         return issue;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/9/GithubIssues.java\nindex a9fb643cd6..e43da84965 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/9/GithubIssues.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/9/GithubIssues.java\n@@ -72,7 +72,8 @@ public final class GithubIssues implements Issues {\n         final URI issueUri = URI.create(issuesUri.toString() + \"/\" + issueId);\n         JsonObject jsonObject = fromUri(issueUri, issueId);\n         Issue issue = null;\n-        if(jsonObject != null){\n+        if\n+        ( jsonObject != null){\n             issue = new GithubIssue(issueUri, jsonObject, storage);\n         }\n         return issue;\n",
            "diff_size": 2
        }
    ]
}