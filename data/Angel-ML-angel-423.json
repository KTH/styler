{
    "error_id": "423",
    "information": {
        "errors": [
            {
                "line": "49",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 117).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        TVector row = client.getRow(0);\n        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n\n        startTs = System.currentTimeMillis();\n        SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "49",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/423/SparseDoubleTask.java\nindex 86f40f8181..153ee4838d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/423/SparseDoubleTask.java\n@@ -46,7 +46,8 @@ public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = client.getRow(0);\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n+            + \" pull use time=\" +(System.currentTimeMillis ( ) - startTs)+\", sum=\"+sum(\n+        ( SparseIntDoubleVector )row));\n \n         startTs = System.currentTimeMillis();\n         SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/423/SparseDoubleTask.java\nindex 86f40f8181..fb3e1a4124 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/423/SparseDoubleTask.java\n@@ -27,58 +27,67 @@ import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n-  private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n-  public SparseDoubleTask(TaskContext taskContext) {\n-    super(taskContext);\n-  }\n+    private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n \n-  @Override public Long parse(Long key, Long value) {\n-    return null;\n-  }\n+    public SparseDoubleTask(TaskContext taskContext) {\n+        super(taskContext);\n+    }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+    @Override\n+    public Long parse(Long key, Long value) {\n+        return null;\n+    }\n \n+    @Override\n+    public void preProcess(TaskContext taskContext) {\n+    }\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n-      MatrixClient client = taskContext.getMatrix(\"sparse_double_test\");\n-      while (taskContext.getEpoch() < 100) {\n-        long startTs = System.currentTimeMillis();\n-        TVector row = client.getRow(0);\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n \n-        startTs = System.currentTimeMillis();\n-        SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n-        for(int i = 0; i < 2100000000; i+=20) {\n-          deltaV.set(i, 1.0);\n-        }\n+    @Override\n+    public void run(TaskContext taskContext) throws AngelException {\n+        try {\n+            MatrixClient client = taskContext.getMatrix(\"sparse_double_test\");\n+            while (taskContext.getEpoch() < 100) {\n+                long startTs = System.currentTimeMillis();\n+                TVector row = client.getRow(0);\n+                LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" +\n+                        taskContext.getEpoch()\n+                        + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" +\n+                        sum((SparseIntDoubleVector) row));\n \n-        deltaV.setMatrixId(client.getMatrixId());\n-        deltaV.setRowId(0);\n+                startTs = System.currentTimeMillis();\n+                SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n+                for (int i = 0; i < 2100000000; i += 20) {\n+                    deltaV.set(i, 1.0);\n+                }\n \n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" train use time=\" + (System.currentTimeMillis() - startTs));\n+                deltaV.setMatrixId(client.getMatrixId());\n+                deltaV.setRowId(0);\n \n-        startTs = System.currentTimeMillis();\n-        client.increment(deltaV);\n-        client.clock().get();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n-        taskContext.incEpoch();\n-      }\n-    } catch (Throwable x) {\n-      throw new AngelException(\"run task failed \", x);\n-    }\n-  }\n+                LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" +\n+                        taskContext.getEpoch()\n+                        + \" train use time=\" + (System.currentTimeMillis() - startTs));\n \n-  private double sum(SparseIntDoubleVector row) {\n-    double [] data = row.getValues();\n-    double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n-      ret += data[i];\n+                startTs = System.currentTimeMillis();\n+                client.increment(deltaV);\n+                client.clock().get();\n+                LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" +\n+                        taskContext.getEpoch()\n+                        + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n+                taskContext.incEpoch();\n+            }\n+        } catch (Throwable x) {\n+            throw new AngelException(\"run task failed \", x);\n+        }\n     }\n \n-    return ret;\n-  }\n+    private double sum(SparseIntDoubleVector row) {\n+        double[] data = row.getValues();\n+        double ret = 0.0;\n+        for (int i = 0; i < data.length; i++) {\n+            ret += data[i];\n+        }\n+\n+        return ret;\n+    }\n }\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/423/SparseDoubleTask.java\nindex 86f40f8181..2a17ddffb6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/423/SparseDoubleTask.java\n@@ -32,39 +32,38 @@ public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+public void preProcess(TaskContext taskContext) {}\n \n-\n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n+@Override\n+public void run(TaskContext taskContext) throws AngelException {\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"sparse_double_test\");\n       while (taskContext.getEpoch() < 100) {\n         long startTs = System.currentTimeMillis();\n         TVector row = client.getRow(0);\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n \n         startTs = System.currentTimeMillis();\n         SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n-        for(int i = 0; i < 2100000000; i+=20) {\n+        for (int i = 0; i < 2100000000; i+= 20) {\n           deltaV.set(i, 1.0);\n         }\n \n         deltaV.setMatrixId(client.getMatrixId());\n         deltaV.setRowId(0);\n \n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" train use time=\" + (System.currentTimeMillis() - startTs));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" train use time=\" + (System.currentTimeMillis() - startTs));\n \n         startTs = System.currentTimeMillis();\n         client.increment(deltaV);\n         client.clock().get();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n         taskContext.incEpoch();\n       }\n     } catch (Throwable x) {\n@@ -75,10 +74,10 @@ public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n   private double sum(SparseIntDoubleVector row) {\n     double [] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n \n     return ret;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/423/SparseDoubleTask.java\nindex 86f40f8181..b5980914e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/423/SparseDoubleTask.java\n@@ -27,58 +27,54 @@ import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n-  private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n-  public SparseDoubleTask(TaskContext taskContext) {\n+    private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n+\n+    public SparseDoubleTask(TaskContext taskContext) {\n     super(taskContext);\n-  }\n+    }\n \n-  @Override public Long parse(Long key, Long value) {\n+    @Override\n+    public Long parse(Long key, Long value) {\n     return null;\n-  }\n-\n-  @Override public void preProcess(TaskContext taskContext) { }\n+    }\n \n+    @Override\n+    public void preProcess(TaskContext taskContext) {}\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n-      MatrixClient client = taskContext.getMatrix(\"sparse_double_test\");\n-      while (taskContext.getEpoch() < 100) {\n+    @Override\n+    public void run(TaskContext taskContext) throws AngelException {\n+    try {\n+        MatrixClient client = taskContext.getMatrix(\"sparse_double_test\");\n+        while (taskContext.getEpoch() < 100) {\n         long startTs = System.currentTimeMillis();\n         TVector row = client.getRow(0);\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n-\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector) row));\n         startTs = System.currentTimeMillis();\n         SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n-        for(int i = 0; i < 2100000000; i+=20) {\n-          deltaV.set(i, 1.0);\n+        for (int i = 0; i < 2100000000; i += 20) {\n+                                                 deltaV.set(i, 1.0);\n         }\n-\n         deltaV.setMatrixId(client.getMatrixId());\n         deltaV.setRowId(0);\n-\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" train use time=\" + (System.currentTimeMillis() - startTs));\n-\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" train use time=\" + (System.currentTimeMillis() - startTs));\n         startTs = System.currentTimeMillis();\n         client.increment(deltaV);\n         client.clock().get();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n         taskContext.incEpoch();\n-      }\n+        }\n     } catch (Throwable x) {\n       throw new AngelException(\"run task failed \", x);\n     }\n-  }\n+    }\n \n-  private double sum(SparseIntDoubleVector row) {\n-    double [] data = row.getValues();\n+    private double sum(SparseIntDoubleVector row) {\n+    double[] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n-      ret += data[i];\n+    for (int i = 0; i < data.length; i++) {\n+        ret += data[i];\n     }\n-\n     return ret;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "49",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/423/SparseDoubleTask.java\nindex 86f40f8181..153ee4838d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/423/SparseDoubleTask.java\n@@ -46,7 +46,8 @@ public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = client.getRow(0);\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n+            + \" pull use time=\" +(System.currentTimeMillis ( ) - startTs)+\", sum=\"+sum(\n+        ( SparseIntDoubleVector )row));\n \n         startTs = System.currentTimeMillis();\n         SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/423/SparseDoubleTask.java\nindex 86f40f8181..4b77df6ed2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/423/SparseDoubleTask.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/423/SparseDoubleTask.java\n@@ -45,40 +45,39 @@ public class SparseDoubleTask extends BaseTask<Long, Long, Long> {\n       while (taskContext.getEpoch() < 100) {\n         long startTs = System.currentTimeMillis();\n         TVector row = client.getRow(0);\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((SparseIntDoubleVector)row));\n \n-        startTs = System.currentTimeMillis();\n-        SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n-        for(int i = 0; i < 2100000000; i+=20) {\n-          deltaV.set(i, 1.0);\n-        }\n+      startTs = System.currentTimeMillis();\n+      SparseIntDoubleVector deltaV = new SparseIntDoubleVector(2100000000, 150000000);\n+      for(int i = 0; i < 2100000000; i+=20) {\n+        deltaV.set(i, 1.0);\n+      }\n \n-        deltaV.setMatrixId(client.getMatrixId());\n-        deltaV.setRowId(0);\n+      deltaV.setMatrixId(client.getMatrixId());\n+      deltaV.setRowId(0);\n \n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" train use time=\" + (System.currentTimeMillis() - startTs));\n+      LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n+        + \" train use time=\" + (System.currentTimeMillis() - startTs));\n \n-        startTs = System.currentTimeMillis();\n-        client.increment(deltaV);\n-        client.clock().get();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n-        taskContext.incEpoch();\n-      }\n-    } catch (Throwable x) {\n-      throw new AngelException(\"run task failed \", x);\n+      startTs = System.currentTimeMillis();\n+      client.increment(deltaV);\n+      client.clock().get();\n+      LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n+        + \" flush use time=\" + (System.currentTimeMillis() - startTs));\n+      taskContext.incEpoch();\n     }\n+  } catch (Throwable x) {\n+    throw new AngelException(\"run task failed \", x);\n   }\n+}\n \n-  private double sum(SparseIntDoubleVector row) {\n-    double [] data = row.getValues();\n-    double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n-      ret += data[i];\n-    }\n-\n-    return ret;\n+private double sum(SparseIntDoubleVector row) {\n+  double [] data = row.getValues();\n+  double ret = 0.0;\n+  for(int i = 0; i < data.length; i++) {\n+    ret += data[i];\n   }\n+\n+  return ret;\n+}\n }\n",
            "diff_size": 34
        }
    ]
}