{
    "error_id": "187",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/187/Service.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/187/Service.java\nindex d3e5b84b9a..e339c7e4a8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/187/Service.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/187/Service.java\n@@ -20,96 +20,109 @@ package com.cloudera.director.client.v3.model;\n \n \n public class Service {\n-  private Health health;\n-  private String serviceName;\n-  public Service() { }\n-\n-  private Service(Health health, String serviceName) {\n-    this.health = health;\n-    this.serviceName = serviceName;\n-  }\n-\n-  private Service(ServiceBuilder builder) {\n-    this.health = builder.health;\n-    this.serviceName = builder.serviceName;\n-  }\n-\n-  public static ServiceBuilder builder() {\n-    return new ServiceBuilder();\n-  }\n-\n-  public static class ServiceBuilder {\n-    private Health health = null;\n-    private String serviceName = null;\n-\n-    public ServiceBuilder health(Health health) {\n-      this.health = health;\n-      return this;\n+    private Health health;\n+    private String serviceName;\n+\n+    public Service() {\n+    }\n+\n+    private Service(Health health, String serviceName) {\n+        this.health = health;\n+        this.serviceName = serviceName;\n+    }\n+\n+    private Service(ServiceBuilder builder) {\n+        this.health = builder.health;\n+        this.serviceName = builder.serviceName;\n+    }\n+\n+    public static ServiceBuilder builder() {\n+        return new ServiceBuilder();\n+    }\n+\n+    public static class ServiceBuilder {\n+        private Health health = null;\n+        private String serviceName = null;\n+\n+        public ServiceBuilder health(Health health) {\n+            this.health = health;\n+            return this;\n+        }\n+\n+        public ServiceBuilder serviceName(String serviceName) {\n+            this.serviceName = serviceName;\n+            return this;\n+        }\n+\n+        public Service build() {\n+            return new Service(this);\n+        }\n+    }\n+\n+    public ServiceBuilder toBuilder() {\n+        return builder()\n+            .health(health)\n+            .serviceName(serviceName)\n+            ;\n+    }\n+\n+    public Health getHealth() {\n+        return health;\n+    }\n+\n+    public void setHealth(Health health) {\n+        this.health = health;\n+    }\n+\n+    public String getServiceName() {\n+        return serviceName;\n+    }\n+\n+    public void setServiceName(String serviceName) {\n+        this.serviceName = serviceName;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        Service other = (Service) o; // NOPMD\n+\n+        if (health != null ?\n+            !health.equals(other.health) :\n+            other.health != null) {\n+            return false;\n+        }\n+        if (serviceName != null ?\n+            !serviceName.equals(other.serviceName) :\n+            other.serviceName != null) {\n+            return false;\n+        }\n+        return true;\n     }\n \n-    public ServiceBuilder serviceName(String serviceName) {\n-      this.serviceName = serviceName;\n-      return this;\n+    @Override\n+    public int hashCode() {\n+        int result = 0;\n+        result = 31 * result + (health != null ? health.hashCode() : 0);\n+        result = 31 * result + (serviceName != null ? serviceName.hashCode() : 0);\n+        return result;\n     }\n \n-    public Service build() {\n-      return new Service(this);\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        String newLine = System.getProperty(\"line.separator\");\n+        sb.append(\"class Service {\" + newLine);\n+        sb.append(\"  health: \").append(health).append(newLine);\n+        sb.append(\"  serviceName: \").append(serviceName).append(newLine);\n+        sb.append(\"}\" + newLine);\n+        return sb.toString();\n     }\n-  }\n-\n-  public ServiceBuilder toBuilder() {\n-    return builder()\n-      .health(health)\n-      .serviceName(serviceName)\n-      ;\n-  }\n-  public Health getHealth() {\n-    return health;\n-  }\n-  public void setHealth(Health health) {\n-    this.health = health;\n-  }\n-\n-  public String getServiceName() {\n-    return serviceName;\n-  }\n-  public void setServiceName(String serviceName) {\n-    this.serviceName = serviceName;\n-  }\n-\n-  @Override\n-  public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Service other = (Service) o; // NOPMD\n-\n-    if (health != null ?\n-        !health.equals(other.health) :\n-        other.health != null) return false;\n-    if (serviceName != null ?\n-        !serviceName.equals(other.serviceName) :\n-        other.serviceName != null) return false;\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int result = 0;\n-    result = 31 * result + (health != null ? health.hashCode() : 0);\n-    result = 31 * result + (serviceName != null ? serviceName.hashCode() : 0);\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString()  {\n-    StringBuilder sb = new StringBuilder();\n-    String newLine = System.getProperty(\"line.separator\");\n-    sb.append(\"class Service {\" + newLine);\n-    sb.append(\"  health: \").append(health).append(newLine);\n-    sb.append(\"  serviceName: \").append(serviceName).append(newLine);\n-    sb.append(\"}\" + newLine);\n-    return sb.toString();\n-  }\n }\n \n",
            "diff_size": 155
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/187/Service.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/187/Service.java\nindex d3e5b84b9a..26c3f9b961 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/187/Service.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/187/Service.java\n@@ -1,28 +1,14 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v3.model;\n \n-\n public class Service {\n+\n   private Health health;\n   private String serviceName;\n-  public Service() { }\n+\n+public Service() { }\n \n   private Service(Health health, String serviceName) {\n     this.health = health;\n@@ -39,7 +25,8 @@ public class Service {\n   }\n \n   public static class ServiceBuilder {\n-    private Health health = null;\n+\n+  private Health health = null;\n     private String serviceName = null;\n \n     public ServiceBuilder health(Health health) {\n@@ -58,12 +45,11 @@ public class Service {\n   }\n \n   public ServiceBuilder toBuilder() {\n-    return builder()\n-      .health(health)\n-      .serviceName(serviceName)\n-      ;\n+    return builder().health(health)\n+      .serviceName(serviceName);\n   }\n-  public Health getHealth() {\n+\n+public Health getHealth() {\n     return health;\n   }\n   public void setHealth(Health health) {\n@@ -80,16 +66,16 @@ public class Service {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    Service other = (Service) o;\n \n-    Service other = (Service) o; // NOPMD\n+// NOPMD\n \n-    if (health != null ?\n-        !health.equals(other.health) :\n-        other.health != null) return false;\n-    if (serviceName != null ?\n-        !serviceName.equals(other.serviceName) :\n-        other.serviceName != null) return false;\n+    if (health != null ?!health.equals(other.health) : other.health != null) return false;\n+\n+if (serviceName != null ?!serviceName.equals(other.serviceName) : other.serviceName != null) return false;\n     return true;\n   }\n \n@@ -102,7 +88,7 @@ public class Service {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Service {\" + newLine);\n@@ -111,5 +97,4 @@ public class Service {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "28",
                    "column": "22",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "28",
                    "column": "23",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "94",
                    "column": "29",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "96",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "column": "52",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "42",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "71",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/187/Service.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/187/Service.java\nindex d3e5b84b9a..eceddd19f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/187/Service.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/187/Service.java\n@@ -18,91 +18,99 @@\n \n package com.cloudera.director.client.v3.model;\n \n-\n public class Service {\n-  private Health health;\n-  private String serviceName;\n-  public Service() { }\n \n-  private Service(Health health, String serviceName) {\n-    this.health = health;\n-    this.serviceName = serviceName;\n-  }\n+    private Health health;\n+\n+    private String serviceName;\n \n-  private Service(ServiceBuilder builder) {\n-    this.health = builder.health;\n-    this.serviceName = builder.serviceName;\n-  }\n \n-  public static ServiceBuilder builder() {\n+    public Service() {}\n+\n+    private Service(Health health, String serviceName) {\n+                                                       this.health = health;\n+                                                       this.serviceName = serviceName;\n+                     }\n+\n+    private Service(ServiceBuilder builder) {\n+                                            this.health = builder.health;\n+                                            this.serviceName = builder.serviceName;\n+                     }\n+\n+    public static ServiceBuilder builder() {\n     return new ServiceBuilder();\n-  }\n+    }\n+\n+    public static class ServiceBuilder {\n \n-  public static class ServiceBuilder {\n     private Health health = null;\n+\n     private String serviceName = null;\n \n     public ServiceBuilder health(Health health) {\n-      this.health = health;\n-      return this;\n+        this.health = health;\n+        return this;\n     }\n \n     public ServiceBuilder serviceName(String serviceName) {\n-      this.serviceName = serviceName;\n-      return this;\n+        this.serviceName = serviceName;\n+        return this;\n     }\n \n     public Service build() {\n-      return new Service(this);\n+        return new Service(this);\n     }\n-  }\n-\n-  public ServiceBuilder toBuilder() {\n-    return builder()\n-      .health(health)\n-      .serviceName(serviceName)\n-      ;\n-  }\n-  public Health getHealth() {\n+    }\n+\n+    public ServiceBuilder toBuilder() {\n+    return builder().health(health)\n+                    .serviceName(serviceName);\n+    }\n+\n+    public Health getHealth() {\n     return health;\n-  }\n-  public void setHealth(Health health) {\n+    }\n+\n+    public void setHealth(Health health) {\n     this.health = health;\n-  }\n+    }\n \n-  public String getServiceName() {\n+    public String getServiceName() {\n     return serviceName;\n-  }\n-  public void setServiceName(String serviceName) {\n+    }\n+\n+    public void setServiceName(String serviceName) {\n     this.serviceName = serviceName;\n-  }\n+    }\n+\n \n-  @Override\n-  public boolean equals(Object o) {\n+    @Override\n+    public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n \n-    Service other = (Service) o; // NOPMD\n+    if (o == null ||\n+        getClass() != o.getClass()) return false;\n+\n+    Service other = (Service)o; // NOPMD\n \n-    if (health != null ?\n-        !health.equals(other.health) :\n-        other.health != null) return false;\n-    if (serviceName != null ?\n-        !serviceName.equals(other.serviceName) :\n-        other.serviceName != null) return false;\n+    if (health != null?!health.equals(other.health): other.health != null) return false;\n+\n+    if (serviceName != null?!serviceName.equals(other.serviceName): other.serviceName != null) return false;\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (health != null ? health.hashCode() : 0);\n-    result = 31 * result + (serviceName != null ? serviceName.hashCode() : 0);\n+    result = 31 *result + (health != null? health.hashCode(): 0);\n+    result = 31 *result + (serviceName != null? serviceName.hashCode(): 0);\n     return result;\n-  }\n+    }\n \n-  @Override\n-  public String toString()  {\n+\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Service {\" + newLine);\n@@ -110,6 +118,5 @@ public class Service {\n     sb.append(\"  serviceName: \").append(serviceName).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n-  }\n-}\n-\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 80
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}