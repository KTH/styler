{
    "error_id": "311",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/311/Metrics.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/311/Metrics.java\nindex 7c44c40f82..a574a4133c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/311/Metrics.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/311/Metrics.java\n@@ -22,98 +22,111 @@ import java.util.HashMap;\n import java.util.Map;\n \n public class Metrics {\n-  /* Cluster name */\n-  private String clusterName;\n-  /* Metrics tracked for this cluster */\n-  private Map<String, TimeSeriesResponseList> timeSeriesMetrics;\n-  public Metrics() { }\n-\n-  private Metrics(String clusterName, Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n-    this.clusterName = clusterName;\n-    this.timeSeriesMetrics = timeSeriesMetrics;\n-  }\n-\n-  private Metrics(MetricsBuilder builder) {\n-    this.clusterName = builder.clusterName;\n-    this.timeSeriesMetrics = builder.timeSeriesMetrics;\n-  }\n-\n-  public static MetricsBuilder builder() {\n-    return new MetricsBuilder();\n-  }\n-\n-  public static class MetricsBuilder {\n-    private String clusterName = null;\n-    private Map<String, TimeSeriesResponseList> timeSeriesMetrics = new HashMap<String, TimeSeriesResponseList>();\n-\n-    public MetricsBuilder clusterName(String clusterName) {\n-      this.clusterName = clusterName;\n-      return this;\n+    /* Cluster name */\n+    private String clusterName;\n+    /* Metrics tracked for this cluster */\n+    private Map<String, TimeSeriesResponseList> timeSeriesMetrics;\n+\n+    public Metrics() {\n+    }\n+\n+    private Metrics(String clusterName, Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n+        this.clusterName = clusterName;\n+        this.timeSeriesMetrics = timeSeriesMetrics;\n+    }\n+\n+    private Metrics(MetricsBuilder builder) {\n+        this.clusterName = builder.clusterName;\n+        this.timeSeriesMetrics = builder.timeSeriesMetrics;\n+    }\n+\n+    public static MetricsBuilder builder() {\n+        return new MetricsBuilder();\n+    }\n+\n+    public static class MetricsBuilder {\n+        private String clusterName = null;\n+        private Map<String, TimeSeriesResponseList> timeSeriesMetrics = new HashMap<String, TimeSeriesResponseList>();\n+\n+        public MetricsBuilder clusterName(String clusterName) {\n+            this.clusterName = clusterName;\n+            return this;\n+        }\n+\n+        public MetricsBuilder timeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n+            this.timeSeriesMetrics = timeSeriesMetrics;\n+            return this;\n+        }\n+\n+        public Metrics build() {\n+            return new Metrics(this);\n+        }\n+    }\n+\n+    public MetricsBuilder toBuilder() {\n+        return builder()\n+            .clusterName(clusterName)\n+            .timeSeriesMetrics(timeSeriesMetrics)\n+            ;\n+    }\n+\n+    public String getClusterName() {\n+        return clusterName;\n+    }\n+\n+    public void setClusterName(String clusterName) {\n+        this.clusterName = clusterName;\n+    }\n+\n+    public Map<String, TimeSeriesResponseList> getTimeSeriesMetrics() {\n+        return timeSeriesMetrics;\n+    }\n+\n+    public void setTimeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n+        this.timeSeriesMetrics = timeSeriesMetrics;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        Metrics other = (Metrics) o; // NOPMD\n+\n+        if (clusterName != null ?\n+            !clusterName.equals(other.clusterName) :\n+            other.clusterName != null) {\n+            return false;\n+        }\n+        if (timeSeriesMetrics != null ?\n+            !timeSeriesMetrics.equals(other.timeSeriesMetrics) :\n+            other.timeSeriesMetrics != null) {\n+            return false;\n+        }\n+        return true;\n     }\n \n-    public MetricsBuilder timeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n-      this.timeSeriesMetrics = timeSeriesMetrics;\n-      return this;\n+    @Override\n+    public int hashCode() {\n+        int result = 0;\n+        result = 31 * result + (clusterName != null ? clusterName.hashCode() : 0);\n+        result = 31 * result + (timeSeriesMetrics != null ? timeSeriesMetrics.hashCode() : 0);\n+        return result;\n     }\n \n-    public Metrics build() {\n-      return new Metrics(this);\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        String newLine = System.getProperty(\"line.separator\");\n+        sb.append(\"class Metrics {\" + newLine);\n+        sb.append(\"  clusterName: \").append(clusterName).append(newLine);\n+        sb.append(\"  timeSeriesMetrics: \").append(timeSeriesMetrics).append(newLine);\n+        sb.append(\"}\" + newLine);\n+        return sb.toString();\n     }\n-  }\n-\n-  public MetricsBuilder toBuilder() {\n-    return builder()\n-      .clusterName(clusterName)\n-      .timeSeriesMetrics(timeSeriesMetrics)\n-      ;\n-  }\n-  public String getClusterName() {\n-    return clusterName;\n-  }\n-  public void setClusterName(String clusterName) {\n-    this.clusterName = clusterName;\n-  }\n-\n-  public Map<String, TimeSeriesResponseList> getTimeSeriesMetrics() {\n-    return timeSeriesMetrics;\n-  }\n-  public void setTimeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n-    this.timeSeriesMetrics = timeSeriesMetrics;\n-  }\n-\n-  @Override\n-  public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Metrics other = (Metrics) o; // NOPMD\n-\n-    if (clusterName != null ?\n-        !clusterName.equals(other.clusterName) :\n-        other.clusterName != null) return false;\n-    if (timeSeriesMetrics != null ?\n-        !timeSeriesMetrics.equals(other.timeSeriesMetrics) :\n-        other.timeSeriesMetrics != null) return false;\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int result = 0;\n-    result = 31 * result + (clusterName != null ? clusterName.hashCode() : 0);\n-    result = 31 * result + (timeSeriesMetrics != null ? timeSeriesMetrics.hashCode() : 0);\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString()  {\n-    StringBuilder sb = new StringBuilder();\n-    String newLine = System.getProperty(\"line.separator\");\n-    sb.append(\"class Metrics {\" + newLine);\n-    sb.append(\"  clusterName: \").append(clusterName).append(newLine);\n-    sb.append(\"  timeSeriesMetrics: \").append(timeSeriesMetrics).append(newLine);\n-    sb.append(\"}\" + newLine);\n-    return sb.toString();\n-  }\n }\n \n",
            "diff_size": 157
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "80",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/311/Metrics.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/311/Metrics.java\nindex 7c44c40f82..f4381ba271 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/311/Metrics.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/311/Metrics.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v11.model;\n@@ -26,7 +11,8 @@ public class Metrics {\n   private String clusterName;\n   /* Metrics tracked for this cluster */\n   private Map<String, TimeSeriesResponseList> timeSeriesMetrics;\n-  public Metrics() { }\n+\n+public Metrics() { }\n \n   private Metrics(String clusterName, Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n     this.clusterName = clusterName;\n@@ -43,7 +29,8 @@ public class Metrics {\n   }\n \n   public static class MetricsBuilder {\n-    private String clusterName = null;\n+\n+  private String clusterName = null;\n     private Map<String, TimeSeriesResponseList> timeSeriesMetrics = new HashMap<String, TimeSeriesResponseList>();\n \n     public MetricsBuilder clusterName(String clusterName) {\n@@ -62,12 +49,11 @@ public class Metrics {\n   }\n \n   public MetricsBuilder toBuilder() {\n-    return builder()\n-      .clusterName(clusterName)\n-      .timeSeriesMetrics(timeSeriesMetrics)\n-      ;\n+    return builder().clusterName(clusterName)\n+      .timeSeriesMetrics(timeSeriesMetrics);\n   }\n-  public String getClusterName() {\n+\n+public String getClusterName() {\n     return clusterName;\n   }\n   public void setClusterName(String clusterName) {\n@@ -84,16 +70,16 @@ public class Metrics {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n \n-    Metrics other = (Metrics) o; // NOPMD\n+    Metrics other = (Metrics) o;\n \n-    if (clusterName != null ?\n-        !clusterName.equals(other.clusterName) :\n-        other.clusterName != null) return false;\n-    if (timeSeriesMetrics != null ?\n-        !timeSeriesMetrics.equals(other.timeSeriesMetrics) :\n-        other.timeSeriesMetrics != null) return false;\n+// NOPMD\n+\n+    if (clusterName != null ?!clusterName.equals(other.clusterName) : other.clusterName != null) return false;\n+\n+if (timeSeriesMetrics != null ?!timeSeriesMetrics.equals(other.timeSeriesMetrics) : other.timeSeriesMetrics != null) return false;\n     return true;\n   }\n \n@@ -106,7 +92,7 @@ public class Metrics {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Metrics {\" + newLine);\n@@ -115,5 +101,4 @@ public class Metrics {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "34",
                    "column": "22",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "34",
                    "column": "23",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "85",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "47",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "71",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "53",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "83",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/311/Metrics.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/311/Metrics.java\nindex 7c44c40f82..cb45c13b0a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/311/Metrics.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/311/Metrics.java\n@@ -21,92 +21,102 @@ package com.cloudera.director.client.v11.model;\n import java.util.HashMap;\n import java.util.Map;\n \n+\n public class Metrics {\n   /* Cluster name */\n-  private String clusterName;\n+\n+    private String clusterName;\n   /* Metrics tracked for this cluster */\n-  private Map<String, TimeSeriesResponseList> timeSeriesMetrics;\n-  public Metrics() { }\n \n-  private Metrics(String clusterName, Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n-    this.clusterName = clusterName;\n-    this.timeSeriesMetrics = timeSeriesMetrics;\n-  }\n+    private Map<String, TimeSeriesResponseList> timeSeriesMetrics;\n \n-  private Metrics(MetricsBuilder builder) {\n-    this.clusterName = builder.clusterName;\n-    this.timeSeriesMetrics = builder.timeSeriesMetrics;\n-  }\n \n-  public static MetricsBuilder builder() {\n+    public Metrics() {}\n+\n+    private Metrics(String clusterName, Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n+                                                                                               this.clusterName = clusterName;\n+                                                                                               this.timeSeriesMetrics = timeSeriesMetrics;\n+                     }\n+\n+    private Metrics(MetricsBuilder builder) {\n+                                            this.clusterName = builder.clusterName;\n+                                            this.timeSeriesMetrics = builder.timeSeriesMetrics;\n+                     }\n+\n+    public static MetricsBuilder builder() {\n     return new MetricsBuilder();\n-  }\n+    }\n+\n+    public static class MetricsBuilder {\n \n-  public static class MetricsBuilder {\n     private String clusterName = null;\n+\n     private Map<String, TimeSeriesResponseList> timeSeriesMetrics = new HashMap<String, TimeSeriesResponseList>();\n \n     public MetricsBuilder clusterName(String clusterName) {\n-      this.clusterName = clusterName;\n-      return this;\n+        this.clusterName = clusterName;\n+        return this;\n     }\n \n     public MetricsBuilder timeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n-      this.timeSeriesMetrics = timeSeriesMetrics;\n-      return this;\n+        this.timeSeriesMetrics = timeSeriesMetrics;\n+        return this;\n     }\n \n     public Metrics build() {\n-      return new Metrics(this);\n+        return new Metrics(this);\n     }\n-  }\n-\n-  public MetricsBuilder toBuilder() {\n-    return builder()\n-      .clusterName(clusterName)\n-      .timeSeriesMetrics(timeSeriesMetrics)\n-      ;\n-  }\n-  public String getClusterName() {\n+    }\n+\n+    public MetricsBuilder toBuilder() {\n+    return builder().clusterName(clusterName)\n+                    .timeSeriesMetrics(timeSeriesMetrics);\n+    }\n+\n+    public String getClusterName() {\n     return clusterName;\n-  }\n-  public void setClusterName(String clusterName) {\n+    }\n+\n+    public void setClusterName(String clusterName) {\n     this.clusterName = clusterName;\n-  }\n+    }\n \n-  public Map<String, TimeSeriesResponseList> getTimeSeriesMetrics() {\n+    public Map<String, TimeSeriesResponseList> getTimeSeriesMetrics() {\n     return timeSeriesMetrics;\n-  }\n-  public void setTimeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n+    }\n+\n+    public void setTimeSeriesMetrics(Map<String, TimeSeriesResponseList> timeSeriesMetrics) {\n     this.timeSeriesMetrics = timeSeriesMetrics;\n-  }\n+    }\n+\n \n-  @Override\n-  public boolean equals(Object o) {\n+    @Override\n+    public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n \n-    Metrics other = (Metrics) o; // NOPMD\n+    if (o == null ||\n+        getClass() != o.getClass()) return false;\n+\n+    Metrics other = (Metrics)o; // NOPMD\n \n-    if (clusterName != null ?\n-        !clusterName.equals(other.clusterName) :\n-        other.clusterName != null) return false;\n-    if (timeSeriesMetrics != null ?\n-        !timeSeriesMetrics.equals(other.timeSeriesMetrics) :\n-        other.timeSeriesMetrics != null) return false;\n+    if (clusterName != null?!clusterName.equals(other.clusterName): other.clusterName != null) return false;\n+\n+    if (timeSeriesMetrics != null?!timeSeriesMetrics.equals(other.timeSeriesMetrics): other.timeSeriesMetrics != null) return false;\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (clusterName != null ? clusterName.hashCode() : 0);\n-    result = 31 * result + (timeSeriesMetrics != null ? timeSeriesMetrics.hashCode() : 0);\n+    result = 31 *result + (clusterName != null? clusterName.hashCode(): 0);\n+    result = 31 *result + (timeSeriesMetrics != null? timeSeriesMetrics.hashCode(): 0);\n     return result;\n-  }\n+    }\n \n-  @Override\n-  public String toString()  {\n+\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Metrics {\" + newLine);\n@@ -114,6 +124,5 @@ public class Metrics {\n     sb.append(\"  timeSeriesMetrics: \").append(timeSeriesMetrics).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n-  }\n-}\n-\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 81
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}