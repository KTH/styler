{
    "error_id": "59",
    "information": {
        "errors": [
            {
                "line": "88",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 92).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      return Collections.emptyList();\n    }\n    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode).collect(Collectors.toList());\n  }\n\n  private UriUtil() {}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/59/UriUtil.java\nindex 165fb37a04..7d3e64294b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/59/UriUtil.java\n@@ -85,7 +85,10 @@ public class UriUtil {\n     if (path.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode).collect(Collectors.toList());\n+    return Arrays.stream(path.split(\"/\") ).map(UriUtil::decode\n+  )\n+\n+    . collect(Collectors.toList());\n   }\n \n   private UriUtil() {}\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/59/UriUtil.java\nindex 165fb37a04..1e6a8f1ece 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/59/UriUtil.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.storage;\n \n import cz.o2.proxima.annotations.Internal;\n@@ -85,8 +86,10 @@ public class UriUtil {\n     if (path.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode).collect(Collectors.toList());\n+    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode)\n+        .collect(Collectors.toList());\n   }\n \n-  private UriUtil() {}\n+  private UriUtil() {\n+  }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/59/UriUtil.java\nindex 165fb37a04..290ee5f61b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/59/UriUtil.java\n@@ -89,4 +89,4 @@ public class UriUtil {\n   }\n \n   private UriUtil() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'while' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'while' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 84.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/59/UriUtil.java\nindex 165fb37a04..56406dccdd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/59/UriUtil.java\n@@ -26,6 +26,8 @@ import java.util.Map;\n import java.util.stream.Collectors;\n \n /** Utilities related to URIs. */\n+\n+\n @Internal\n public class UriUtil {\n \n@@ -35,24 +37,24 @@ public class UriUtil {\n    * @param uri uri for parsing\n    * @return Map of query params\n    */\n-  public static Map<String, String> parseQuery(URI uri) {\n+\n+    public static Map<String, String> parseQuery(URI uri) {\n     String query = uri.getRawQuery();\n     if (query == null) {\n-      return Collections.emptyMap();\n+        return Collections.emptyMap();\n+    }\n+    return Arrays.asList(query.split(\"&\")).stream()\n+                                          .map(s -> Arrays.copyOf(s.split(\"=\"), 2))\n+                                          .collect(Collectors.toMap(s -> decode(s[0]), s -> decode(s[1])));\n     }\n-    return Arrays.asList(query.split(\"&\"))\n-        .stream()\n-        .map(s -> Arrays.copyOf(s.split(\"=\"), 2))\n-        .collect(Collectors.toMap(s -> decode(s[0]), s -> decode(s[1])));\n-  }\n \n-  private static String decode(final String encoded) {\n+    private static String decode(final String encoded) {\n     try {\n-      return encoded == null ? null : URLDecoder.decode(encoded, \"UTF-8\");\n+        return encoded == null ? null : URLDecoder.decode(encoded, \"UTF-8\");\n     } catch (UnsupportedEncodingException e) {\n       throw new IllegalStateException(\"UTF-8 is a required encoding\", e);\n     }\n-  }\n+    }\n \n   /**\n    * Get normalized path from URI, which: * is not null * doesn't start or end with slash\n@@ -60,16 +62,17 @@ public class UriUtil {\n    * @param uri the URI to extract path from\n    * @return normalized path\n    */\n-  public static String getPathNormalized(URI uri) {\n+\n+    public static String getPathNormalized(URI uri) {\n     String p = uri.getPath();\n     while (p.startsWith(\"/\")) {\n-      p = p.substring(1);\n+        p = p.substring(1);\n     }\n     while (p.endsWith(\"/\")) {\n-      p = p.substring(0, p.length() - 1);\n+        p = p.substring(0, p.length() - 1);\n     }\n     return p;\n-  }\n+    }\n \n   /**\n    * Parse path from URI\n@@ -77,16 +80,18 @@ public class UriUtil {\n    * @param uri uri for parsing\n    * @return list of paths as string\n    */\n-  public static List<String> parsePath(URI uri) {\n+\n+    public static List<String> parsePath(URI uri) {\n     String path = uri.getRawPath();\n     if (path.startsWith(\"/\")) {\n-      path = path.substring(1);\n+        path = path.substring(1);\n     }\n     if (path.isEmpty()) {\n-      return Collections.emptyList();\n+        return Collections.emptyList();\n+    }\n+    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode)\n+                                         .collect(Collectors.toList());\n     }\n-    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode).collect(Collectors.toList());\n-  }\n \n-  private UriUtil() {}\n-}\n+    private UriUtil() {}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/59/UriUtil.java\nindex 165fb37a04..7d3e64294b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/59/UriUtil.java\n@@ -85,7 +85,10 @@ public class UriUtil {\n     if (path.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode).collect(Collectors.toList());\n+    return Arrays.stream(path.split(\"/\") ).map(UriUtil::decode\n+  )\n+\n+    . collect(Collectors.toList());\n   }\n \n   private UriUtil() {}\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/59/UriUtil.java\nindex 165fb37a04..a8134df810 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/59/UriUtil.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/59/UriUtil.java\n@@ -85,7 +85,10 @@ public class UriUtil {\n     if (path.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode).collect(Collectors.toList());\n+    return Arrays.stream(path.split(\"/\")).map(UriUtil::decode\n+  )\n+\n+    . collect(Collectors.toList());\n   }\n \n   private UriUtil() {}\n",
            "diff_size": 4
        }
    ]
}