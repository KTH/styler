{
    "error_id": "79",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.metron.solr.dao;\n\nimport java.io.IOException;\nimport java.lang.invoke.MethodHandles;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler/79/SolrUpdateDao.java\nindex 54b10adb80..4d318d427b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler/79/SolrUpdateDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/79/SolrUpdateDao.java\nindex 54b10adb80..b1f03ceed2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/79/SolrUpdateDao.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/79/SolrUpdateDao.java\nindex 54b10adb80..9c911b68a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/79/SolrUpdateDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n@@ -69,21 +70,20 @@ public class SolrUpdateDao implements UpdateDao {\n     // updates with a collection specified\n     Map<String, Collection<SolrInputDocument>> solrCollectionUpdates = new HashMap<>();\n     Set<String> collectionsUpdated = new HashSet<>();\n-\n-    for (Entry<Document, Optional<String>> entry : updates.entrySet()) {\n+for (Entry<Document, Optional<String>> entry : updates.entrySet()) {\n       SolrInputDocument solrInputDocument = SolrUtilities.toSolrInputDocument(entry.getKey());\n       Optional<String> index = entry.getValue();\n       if (index.isPresent()) {\n         Collection<SolrInputDocument> solrInputDocuments = solrCollectionUpdates\n             .getOrDefault(index.get(), new ArrayList<>());\n-        solrInputDocuments.add(solrInputDocument);\n+solrInputDocuments.add(solrInputDocument);\n         solrCollectionUpdates.put(index.get(), solrInputDocuments);\n         collectionsUpdated.add(index.get());\n       } else {\n         String lookupIndex = config.getIndexSupplier().apply(entry.getKey().getSensorType());\n         Collection<SolrInputDocument> solrInputDocuments = solrCollectionUpdates\n             .getOrDefault(lookupIndex, new ArrayList<>());\n-        solrInputDocuments.add(solrInputDocument);\n+solrInputDocuments.add(solrInputDocument);\n         solrCollectionUpdates.put(lookupIndex, solrInputDocuments);\n         collectionsUpdated.add(lookupIndex);\n       }\n@@ -100,4 +100,4 @@ public class SolrUpdateDao implements UpdateDao {\n       throw new IOException(e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 52, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 52, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 52, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 54, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 54, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 52, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 75, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 75, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 75, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 75, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/79/SolrUpdateDao.java\nindex 54b10adb80..661ec550ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/79/SolrUpdateDao.java\n@@ -38,66 +38,61 @@ import org.slf4j.LoggerFactory;\n \n public class SolrUpdateDao implements UpdateDao {\n \n-  private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+    private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n+    private transient SolrClient client;\n+    private AccessConfig config;\n \n-  private transient SolrClient client;\n-  private AccessConfig config;\n-\n-  public SolrUpdateDao(SolrClient client, AccessConfig config) {\n+    public SolrUpdateDao(SolrClient client, AccessConfig config) {\n     this.client = client;\n     this.config = config;\n-  }\n+    }\n \n-  @Override\n-  public void update(Document update, Optional<String> index) throws IOException {\n+    @Override\n+    public void update(Document update, Optional<String> index) throws IOException {\n     try {\n-      SolrInputDocument solrInputDocument = SolrUtilities.toSolrInputDocument(update);\n-      if (index.isPresent()) {\n+                                                    SolrInputDocument solrInputDocument = SolrUtilities.toSolrInputDocument(update);\n+                                                    if (index.isPresent()) {\n         this.client.add(index.get(), solrInputDocument);\n         this.client.commit(index.get());\n-      } else {\n-        this.client.add(solrInputDocument);\n-        this.client.commit();\n-      }\n+                                                    } else {\n+                                                      this.client.add(solrInputDocument);\n+                                                      this.client.commit();\n+                                                    }\n     } catch (SolrServerException e) {\n       throw new IOException(e);\n     }\n-  }\n+    }\n \n-  @Override\n-  public void batchUpdate(Map<Document, Optional<String>> updates) throws IOException {\n+    @Override\n+    public void batchUpdate(Map<Document, Optional<String>> updates) throws IOException {\n     // updates with a collection specified\n     Map<String, Collection<SolrInputDocument>> solrCollectionUpdates = new HashMap<>();\n     Set<String> collectionsUpdated = new HashSet<>();\n-\n     for (Entry<Document, Optional<String>> entry : updates.entrySet()) {\n-      SolrInputDocument solrInputDocument = SolrUtilities.toSolrInputDocument(entry.getKey());\n-      Optional<String> index = entry.getValue();\n-      if (index.isPresent()) {\n-        Collection<SolrInputDocument> solrInputDocuments = solrCollectionUpdates\n-            .getOrDefault(index.get(), new ArrayList<>());\n-        solrInputDocuments.add(solrInputDocument);\n-        solrCollectionUpdates.put(index.get(), solrInputDocuments);\n-        collectionsUpdated.add(index.get());\n-      } else {\n-        String lookupIndex = config.getIndexSupplier().apply(entry.getKey().getSensorType());\n-        Collection<SolrInputDocument> solrInputDocuments = solrCollectionUpdates\n-            .getOrDefault(lookupIndex, new ArrayList<>());\n-        solrInputDocuments.add(solrInputDocument);\n-        solrCollectionUpdates.put(lookupIndex, solrInputDocuments);\n-        collectionsUpdated.add(lookupIndex);\n-      }\n+        SolrInputDocument solrInputDocument = SolrUtilities.toSolrInputDocument(entry.getKey());\n+        Optional<String> index = entry.getValue();\n+        if (index.isPresent()) {\n+                                                                           Collection<SolrInputDocument> solrInputDocuments = solrCollectionUpdates.getOrDefault(index.get(), new ArrayList<>());\n+                                                                           solrInputDocuments.add(solrInputDocument);\n+                                                                           solrCollectionUpdates.put(index.get(), solrInputDocuments);\n+                                                                           collectionsUpdated.add(index.get());\n+        } else {\n+          String lookupIndex = config.getIndexSupplier().apply(entry.getKey().getSensorType());\n+          Collection<SolrInputDocument> solrInputDocuments = solrCollectionUpdates.getOrDefault(lookupIndex, new ArrayList<>());\n+          solrInputDocuments.add(solrInputDocument);\n+          solrCollectionUpdates.put(lookupIndex, solrInputDocuments);\n+          collectionsUpdated.add(lookupIndex);\n+        }\n     }\n     try {\n-      for (Entry<String, Collection<SolrInputDocument>> entry : solrCollectionUpdates\n-          .entrySet()) {\n+        for (Entry<String, Collection<SolrInputDocument>> entry : solrCollectionUpdates.entrySet()) {\n         this.client.add(entry.getKey(), entry.getValue());\n-      }\n-      for (String collection : collectionsUpdated) {\n+        }\n+        for (String collection : collectionsUpdated) {\n         this.client.commit(collection);\n-      }\n+        }\n     } catch (SolrServerException e) {\n       throw new IOException(e);\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_random/79/SolrUpdateDao.java\nindex 54b10adb80..4d318d427b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_random/79/SolrUpdateDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_three_grams/79/SolrUpdateDao.java\nindex 54b10adb80..4d318d427b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/79/SolrUpdateDao.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_three_grams/79/SolrUpdateDao.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.solr.dao;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ]
}