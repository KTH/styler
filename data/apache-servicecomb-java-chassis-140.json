{
    "error_id": "140",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @RequestMapping(path = \"/testApiOperation\", method = RequestMethod.POST)\n  @ApiOperation(value = \"testApiOperation desc\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_JSON)\n  public String testApiOperation(@RequestBody String name, HttpServletRequest request) {\n    return String.format(\"testApiOperation: name=[%s], request content-type=[%s]\", name, request.getContentType());\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/140/ContentTypeSpringmvc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/140/ContentTypeSpringmvc.java\nindex 94281caeae..f14ad3f93b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/140/ContentTypeSpringmvc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/140/ContentTypeSpringmvc.java\n@@ -48,4 +48,4 @@ public class ContentTypeSpringmvc {\n   public String testRequestMapping(@RequestBody String name, HttpServletRequest request) {\n     return String.format(\"testRequestMapping: name=[%s], request content-type=[%s]\", name, request.getContentType());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/140/ContentTypeSpringmvc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/140/ContentTypeSpringmvc.java\nindex 94281caeae..22936137e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/140/ContentTypeSpringmvc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/140/ContentTypeSpringmvc.java\n@@ -38,14 +38,15 @@ public class ContentTypeSpringmvc {\n   }\n \n   @RequestMapping(path = \"/testApiOperation\", method = RequestMethod.POST)\n-  @ApiOperation(value = \"testApiOperation desc\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_JSON)\n-  public String testApiOperation(@RequestBody String name, HttpServletRequest request) {\n-    return String.format(\"testApiOperation: name=[%s], request content-type=[%s]\", name, request.getContentType());\n-  }\n+  @ApiOperation(value = \"testApiOperation desc\", consumes = MediaType.APPLICATION_JSON,\n+  produces = MediaType.APPLICATION_JSON)public String testApiOperation(@RequestBody String name, HttpServletRequest request) {\n+     return String.format(\"testApiOperation: name=[%s], request content-type=[%s]\", name, request.getContentType());\n+   }\n \n-  @RequestMapping(path = \"/testRequestMapping\", method = RequestMethod.POST,\n-      consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_JSON)\n-  public String testRequestMapping(@RequestBody String name, HttpServletRequest request) {\n-    return String.format(\"testRequestMapping: name=[%s], request content-type=[%s]\", name, request.getContentType());\n-  }\n-}\n+   @RequestMapping(path = \"/testRequestMapping\", method = RequestMethod.POST,\n+       consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_JSON)\n+   public String testRequestMapping(@RequestBody String name, HttpServletRequest request) {\n+     return String.format(\"testRequestMapping: name=[%s], request content-type=[%s]\", name, request.getContentType());\n+   }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}