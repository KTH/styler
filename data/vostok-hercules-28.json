{
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "48",
                "severity": "warning",
                "message": "Line is longer than 160 characters (found 161).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        metrics.forEach(record -> printWriter.printf(Locale.ENGLISH, \"%s %f %d\\n\", record.getMetricName(), record.getMetricValue(), record.getMetricUnixTime()));\n\n        printWriter.flush();\n        outputWriter.flush();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/intellij/28/GraphiteConnection.java\nindex 0ba64c714c..4008e8683c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/intellij/28/GraphiteConnection.java\n@@ -45,7 +45,8 @@ public class GraphiteConnection implements AutoCloseable {\n             printWriter = new PrintWriter(outputWriter, false);\n         }\n \n-        metrics.forEach(record -> printWriter.printf(Locale.ENGLISH, \"%s %f %d\\n\", record.getMetricName(), record.getMetricValue(), record.getMetricUnixTime()));\n+        metrics\n+            .forEach(record -> printWriter.printf(Locale.ENGLISH, \"%s %f %d\\n\", record.getMetricName(), record.getMetricValue(), record.getMetricUnixTime()));\n \n         printWriter.flush();\n         outputWriter.flush();\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/naturalize/28/GraphiteConnection.java\nindex 0ba64c714c..3f52fd4148 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/naturalize/28/GraphiteConnection.java\n@@ -60,4 +60,4 @@ public class GraphiteConnection implements AutoCloseable {\n             LOGGER.warn(\"Failed to close a connection to Graphite.\", exception);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/codebuff/28/GraphiteConnection.java\nindex 0ba64c714c..6fd01c4897 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/codebuff/28/GraphiteConnection.java\n@@ -2,7 +2,6 @@ package ru.kontur.vostok.hercules.graphite.sink;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.BufferedOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n@@ -16,15 +15,21 @@ import java.util.Locale;\n /**\n  * Not thread-safe, expected to be used exclusively by one thread at any given moment.\n  */\n+\n+\n public class GraphiteConnection implements AutoCloseable {\n     private static final Logger LOGGER = LoggerFactory.getLogger(GraphiteConnection.class);\n \n     private final String server;\n+\n     private final int port;\n \n     private volatile Socket socket;\n+\n     private volatile OutputStream outputStream;\n+\n     private volatile OutputStreamWriter outputWriter;\n+\n     private volatile PrintWriter printWriter;\n \n     public GraphiteConnection(String server, int port) {\n@@ -35,18 +40,21 @@ public class GraphiteConnection implements AutoCloseable {\n     public void send(Collection<GraphiteMetricData> metrics) throws IOException {\n         if (printWriter == null) {\n             LOGGER.info(\"Opening a connection to Graphite server at {}:{}..\", server, port);\n-\n             socket = new Socket(server, port);\n             socket.setKeepAlive(true);\n             socket.setTcpNoDelay(true);\n-\n             outputStream = new BufferedOutputStream(socket.getOutputStream(), 64 * 1024);\n             outputWriter = new OutputStreamWriter(outputStream, StandardCharsets.US_ASCII);\n             printWriter = new PrintWriter(outputWriter, false);\n         }\n \n-        metrics.forEach(record -> printWriter.printf(Locale.ENGLISH, \"%s %f %d\\n\", record.getMetricName(), record.getMetricValue(), record.getMetricUnixTime()));\n-\n+        metrics.forEach(record -> printWriter.printf(\n+            Locale.ENGLISH,\n+            \"%s %f %d\\n\",\n+            record.getMetricName(),\n+            record.getMetricValue(),\n+            record.getMetricUnixTime()\n+                        ));\n         printWriter.flush();\n         outputWriter.flush();\n         outputStream.flush();\n@@ -60,4 +68,4 @@ public class GraphiteConnection implements AutoCloseable {\n             LOGGER.warn(\"Failed to close a connection to Graphite.\", exception);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "48",
                    "column": "32",
                    "severity": "warning",
                    "message": "'->' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "32",
                    "severity": "warning",
                    "message": "'->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler_random/28/GraphiteConnection.java\nindex 0ba64c714c..b347fd1b0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/errored/1/28/GraphiteConnection.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/vostok-hercules/styler_random/28/GraphiteConnection.java\n@@ -45,9 +45,8 @@ public class GraphiteConnection implements AutoCloseable {\n             printWriter = new PrintWriter(outputWriter, false);\n         }\n \n-        metrics.forEach(record -> printWriter.printf(Locale.ENGLISH, \"%s %f %d\\n\", record.getMetricName(), record.getMetricValue(), record.getMetricUnixTime()));\n-\n-        printWriter.flush();\n+        metrics.forEach( record->printWriter.printf(Locale.ENGLISH,\"%s %f %d\\n\",record.\n+        getMetricName(),record.getMetricValue(),record.getMetricUnixTime()));printWriter.flush();\n         outputWriter.flush();\n         outputStream.flush();\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}