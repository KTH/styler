{
    "error_id": "194",
    "information": {
        "errors": [
            {
                "line": "63",
                "column": "51",
                "severity": "warning",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "        Path outFile = Paths.get(target + fileName);\n        Files.createDirectories(outFile.getParent());\n        byte[] bytes = Files.readAllBytes(inFile) ;\n        if (fileName.endsWith(\".html\")) {\n            String page = new String(bytes);\n            page = PageParser.parse(page, session);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/194/Railroads.java\nindex cd98e5ce65..64318d7719 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/194/Railroads.java\n@@ -60,7 +60,7 @@ public class Railroads {\n         Path inFile = Paths.get(source + fileName);\n         Path outFile = Paths.get(target + fileName);\n         Files.createDirectories(outFile.getParent());\n-        byte[] bytes = Files.readAllBytes(inFile) ;\n+        byte[] bytes = Files.readAllBytes(inFile);\n         if (fileName.endsWith(\".html\")) {\n             String page = new String(bytes);\n             page = PageParser.parse(page, session);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/194/Railroads.java\nindex cd98e5ce65..09598f95de 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/194/Railroads.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.jcr;\n \n import java.io.InputStreamReader;\n@@ -29,97 +30,99 @@ import org.h2.util.StringUtils;\n  */\n public class Railroads {\n \n-    private Bnf bnf;\n-    private final HashMap<String, Object> session = new HashMap<>();\n+  private Bnf bnf;\n+  private final HashMap<String, Object> session = new HashMap<>();\n \n-    /**\n-     * This method is called when executing this application from the command\n-     * line.\n-     *\n-     * @param args the command line parameters\n-     */\n-    public static void main(String... args) throws Exception {\n-        new Railroads().process();\n-    }\n+  /**\n+   * This method is called when executing this application from the command\n+   * line.\n+   *\n+   * @param args the command line parameters\n+   */\n+  public static void main(String... args) throws Exception {\n+    new Railroads().process();\n+  }\n \n-    private void process() throws Exception {\n-        RailroadImages.main();\n-        bnf = Bnf.getInstance(getReader());\n-        Csv csv = new Csv();\n-        csv.setLineCommentCharacter('#');\n-        ResultSet rs = csv.read(getReader(), null);\n-        map(\"grammar\", rs, true);\n-        processHtml(\"jcr-sql2.html\");\n-    }\n+  private void process() throws Exception {\n+    RailroadImages.main();\n+    bnf = Bnf.getInstance(getReader());\n+    Csv csv = new Csv();\n+    csv.setLineCommentCharacter('#');\n+    ResultSet rs = csv.read(getReader(), null);\n+    map(\"grammar\", rs, true);\n+    processHtml(\"jcr-sql2.html\");\n+  }\n \n-    private void processHtml(String fileName) throws Exception {\n-        String source = \"src/tools/org/h2/jcr/\";\n-        String target = \"docs/html/\";\n-        byte[] s = BuildBase.readFile(Paths.get(source + \"stylesheet.css\"));\n-        BuildBase.writeFile(Paths.get(target + \"stylesheet.css\"), s);\n-        Path inFile = Paths.get(source + fileName);\n-        Path outFile = Paths.get(target + fileName);\n-        Files.createDirectories(outFile.getParent());\n-        byte[] bytes = Files.readAllBytes(inFile) ;\n-        if (fileName.endsWith(\".html\")) {\n-            String page = new String(bytes);\n-            page = PageParser.parse(page, session);\n-            bytes = page.getBytes();\n-        }\n-        Files.write(outFile, bytes);\n+  private void processHtml(String fileName) throws Exception {\n+    String source = \"src/tools/org/h2/jcr/\";\n+    String target = \"docs/html/\";\n+    byte[] s = BuildBase.readFile(Paths.get(source + \"stylesheet.css\"));\n+    BuildBase.writeFile(Paths.get(target + \"stylesheet.css\"), s);\n+    Path inFile = Paths.get(source + fileName);\n+    Path outFile = Paths.get(target + fileName);\n+    Files.createDirectories(outFile.getParent());\n+    byte[] bytes = Files.readAllBytes(inFile);\n+    if (fileName.endsWith(\".html\")) {\n+      String page = new String(bytes);\n+      page = PageParser.parse(page, session);\n+      bytes = page.getBytes();\n     }\n+    Files.write(outFile, bytes);\n+  }\n \n-    private static Reader getReader() {\n-        return new InputStreamReader(Railroads.class.getResourceAsStream(\"help.csv\"));\n-    }\n+  private static Reader getReader() {\n+    return new InputStreamReader(\n+        Railroads.class.getResourceAsStream(\"help.csv\"));\n+  }\n \n-    private void map(String key, ResultSet rs, boolean railroads) throws Exception {\n-        ArrayList<HashMap<String, String>> list;\n-        list = new ArrayList<>();\n-        while (rs.next()) {\n-            HashMap<String, String> map = new HashMap<>();\n-            ResultSetMetaData meta = rs.getMetaData();\n-            for (int i = 0; i < meta.getColumnCount(); i++) {\n-                String k = StringUtils.toLowerEnglish(meta.getColumnLabel(i + 1));\n-                String value = rs.getString(i + 1);\n-                value = value.trim();\n-                map.put(k, PageParser.escapeHtml(value));\n-            }\n-            String topic = rs.getString(\"TOPIC\");\n-            String syntax = rs.getString(\"SYNTAX\").trim();\n-            if (railroads) {\n-                BnfRailroad r = new BnfRailroad();\n-                String railroad = r.getHtml(bnf, syntax);\n-                map.put(\"railroad\", railroad);\n-            }\n-            BnfSyntax visitor = new BnfSyntax();\n-            String syntaxHtml = visitor.getHtml(bnf, syntax);\n-            map.put(\"syntax\", syntaxHtml);\n-            // remove newlines in the regular text\n-            String text = map.get(\"text\");\n-            if (text != null) {\n-                // text is enclosed in <p> .. </p> so this works.\n-                text = StringUtils.replaceAll(text, \"<br /><br />\", \"</p><p>\");\n-                text = StringUtils.replaceAll(text, \"<br />\", \" \");\n-                map.put(\"text\", text);\n-            }\n+  private void map(String key, ResultSet rs, boolean railroads)\n+      throws Exception {\n+    ArrayList<HashMap<String, String>> list;\n+    list = new ArrayList<>();\n+    while (rs.next()) {\n+      HashMap<String, String> map = new HashMap<>();\n+      ResultSetMetaData meta = rs.getMetaData();\n+      for (int i = 0; i < meta.getColumnCount(); i++) {\n+        String k = StringUtils.toLowerEnglish(meta.getColumnLabel(i + 1));\n+        String value = rs.getString(i + 1);\n+        value = value.trim();\n+        map.put(k, PageParser.escapeHtml(value));\n+      }\n+      String topic = rs.getString(\"TOPIC\");\n+      String syntax = rs.getString(\"SYNTAX\").trim();\n+      if (railroads) {\n+        BnfRailroad r = new BnfRailroad();\n+        String railroad = r.getHtml(bnf, syntax);\n+        map.put(\"railroad\", railroad);\n+      }\n+      BnfSyntax visitor = new BnfSyntax();\n+      String syntaxHtml = visitor.getHtml(bnf, syntax);\n+      map.put(\"syntax\", syntaxHtml);\n+      // remove newlines in the regular text\n+      String text = map.get(\"text\");\n+      if (text != null) {\n+        // text is enclosed in <p> .. </p> so this works.\n+        text = StringUtils.replaceAll(text, \"<br /><br />\", \"</p><p>\");\n+        text = StringUtils.replaceAll(text, \"<br />\", \" \");\n+        map.put(\"text\", text);\n+      }\n \n-            String link = topic.toLowerCase();\n-            link = link.replace(' ', '_');\n-            // link = StringUtils.replaceAll(link, \"_\", \"\");\n-            link = link.replace('@', '_');\n-            map.put(\"link\", StringUtils.urlEncode(link));\n-            list.add(map);\n-        }\n-        session.put(key, list);\n-        int div = 3;\n-        int part = (list.size() + div - 1) / div;\n-        for (int i = 0, start = 0; i < div; i++, start += part) {\n-            List<HashMap<String, String>> listThird = list.subList(start,\n-                    Math.min(start + part, list.size()));\n-            session.put(key + \"-\" + i, listThird);\n-        }\n-        rs.close();\n+      String link = topic.toLowerCase();\n+      link = link.replace(' ', '_');\n+      // link = StringUtils.replaceAll(link, \"_\", \"\");\n+      link = link.replace('@', '_');\n+      map.put(\"link\", StringUtils.urlEncode(link));\n+      list.add(map);\n+    }\n+    session.put(key, list);\n+    int div = 3;\n+    int part = (list.size() + div - 1) / div;\n+    for (int i = 0, start = 0; i < div; i++, start += part) {\n+      List<HashMap<String, String>> listThird = list.subList(start,\n+          Math.min(start + part, list.size()));\n+      session.put(key + \"-\" + i, listThird);\n     }\n+    rs.close();\n+  }\n \n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/194/Railroads.java\nindex cd98e5ce65..d310de0d56 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/naturalize/194/Railroads.java\n@@ -60,7 +60,7 @@ public class Railroads {\n         Path inFile = Paths.get(source + fileName);\n         Path outFile = Paths.get(target + fileName);\n         Files.createDirectories(outFile.getParent());\n-        byte[] bytes = Files.readAllBytes(inFile) ;\n+        byte[] bytes = Files.readAllBytes(inFile);\n         if (fileName.endsWith(\".html\")) {\n             String page = new String(bytes);\n             page = PageParser.parse(page, session);\n@@ -122,4 +122,4 @@ public class Railroads {\n         rs.close();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/194/Railroads.java\nindex cd98e5ce65..f897f1f335 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/194/Railroads.java\n@@ -27,10 +27,12 @@ import org.h2.util.StringUtils;\n /**\n  * JCR 2.0 / SQL-2 railroad generator.\n  */\n+\n+\n public class Railroads {\n \n     private Bnf bnf;\n-    private final HashMap<String, Object> session = new HashMap<>();\n+    private final HashMap<String, Object> session = new HashMap< >();\n \n     /**\n      * This method is called when executing this application from the command\n@@ -38,6 +40,8 @@ public class Railroads {\n      *\n      * @param args the command line parameters\n      */\n+\n+\n     public static void main(String... args) throws Exception {\n         new Railroads().process();\n     }\n@@ -60,7 +64,7 @@ public class Railroads {\n         Path inFile = Paths.get(source + fileName);\n         Path outFile = Paths.get(target + fileName);\n         Files.createDirectories(outFile.getParent());\n-        byte[] bytes = Files.readAllBytes(inFile) ;\n+        byte[] bytes = Files.readAllBytes(inFile);\n         if (fileName.endsWith(\".html\")) {\n             String page = new String(bytes);\n             page = PageParser.parse(page, session);\n@@ -75,9 +79,9 @@ public class Railroads {\n \n     private void map(String key, ResultSet rs, boolean railroads) throws Exception {\n         ArrayList<HashMap<String, String>> list;\n-        list = new ArrayList<>();\n+        list = new ArrayList< >();\n         while (rs.next()) {\n-            HashMap<String, String> map = new HashMap<>();\n+            HashMap<String, String> map = new HashMap< >();\n             ResultSetMetaData meta = rs.getMetaData();\n             for (int i = 0; i < meta.getColumnCount(); i++) {\n                 String k = StringUtils.toLowerEnglish(meta.getColumnLabel(i + 1));\n@@ -103,7 +107,6 @@ public class Railroads {\n                 text = StringUtils.replaceAll(text, \"<br />\", \" \");\n                 map.put(\"text\", text);\n             }\n-\n             String link = topic.toLowerCase();\n             link = link.replace(' ', '_');\n             // link = StringUtils.replaceAll(link, \"_\", \"\");\n@@ -115,11 +118,10 @@ public class Railroads {\n         int div = 3;\n         int part = (list.size() + div - 1) / div;\n         for (int i = 0, start = 0; i < div; i++, start += part) {\n-            List<HashMap<String, String>> listThird = list.subList(start,\n-                    Math.min(start + part, list.size()));\n+            List<HashMap<String, String>> listThird = list.subList(start, Math.min(start + part, list.size()));\n             session.put(key + \"-\" + i, listThird);\n         }\n         rs.close();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/194/Railroads.java\nindex cd98e5ce65..64318d7719 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/194/Railroads.java\n@@ -60,7 +60,7 @@ public class Railroads {\n         Path inFile = Paths.get(source + fileName);\n         Path outFile = Paths.get(target + fileName);\n         Files.createDirectories(outFile.getParent());\n-        byte[] bytes = Files.readAllBytes(inFile) ;\n+        byte[] bytes = Files.readAllBytes(inFile);\n         if (fileName.endsWith(\".html\")) {\n             String page = new String(bytes);\n             page = PageParser.parse(page, session);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/194/Railroads.java\nindex cd98e5ce65..64318d7719 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/194/Railroads.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/194/Railroads.java\n@@ -60,7 +60,7 @@ public class Railroads {\n         Path inFile = Paths.get(source + fileName);\n         Path outFile = Paths.get(target + fileName);\n         Files.createDirectories(outFile.getParent());\n-        byte[] bytes = Files.readAllBytes(inFile) ;\n+        byte[] bytes = Files.readAllBytes(inFile);\n         if (fileName.endsWith(\".html\")) {\n             String page = new String(bytes);\n             page = PageParser.parse(page, session);\n",
            "diff_size": 1
        }
    ]
}