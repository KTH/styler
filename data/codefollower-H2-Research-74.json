{
    "error_id": "74",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "    Value getValue(Database database, int dataType) {\n        if (distinct) {\n            count = 0; //\u52a0distinct\u65f6\uff0c\u610f\u601d\u5c31\u662f\u6ca1\u6709\u91cd\u590d\u7684\u5b57\u6bb5\u503c\u4e86\uff0c\u6240\u4ee5SELECTIVITY\u5c31\u662f0\n        }\n        Value v = null;\n        int s = 0;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/74/AggregateDataSelectivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/intellij/74/AggregateDataSelectivity.java\nindex be849a5434..cffedaa919 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/74/AggregateDataSelectivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/intellij/74/AggregateDataSelectivity.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (http://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.expression.aggregate;\n \n import org.h2.engine.Constants;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/74/AggregateDataSelectivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/naturalize/74/AggregateDataSelectivity.java\nindex be849a5434..054d4e88d5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/74/AggregateDataSelectivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/naturalize/74/AggregateDataSelectivity.java\n@@ -32,14 +32,8 @@ class AggregateDataSelectivity extends AggregateData {\n     }\n \n     @Override\n-//<<<<<<< HEAD:h2/src/main/org/h2/expression/AggregateDataSelectivity.java\n-//    void add(Database database, int dataType, boolean distinct, Value v) {\n-//        //\u662f\u57fa\u4e8e\u67d0\u4e2a\u8868\u8fbe\u5f0f(\u591a\u6570\u662f\u5355\u4e2a\u5b57\u6bb5)\u7b97\u4e0d\u91cd\u590d\u7684\u8bb0\u5f55\u6570\u6240\u5360\u603b\u8bb0\u5f55\u6570\u7684\u767e\u5206\u6bd4\n-//        //org.h2.engine.Constants.SELECTIVITY_DISTINCT_COUNT\u9ed8\u8ba4\u662f1\u4e07\uff0c\u8fd9\u4e2a\u503c\u4e0d\u80fd\u6539\uff0c\n-//        //\u5bf9\u7edf\u8ba1\u503c\u5f71\u54cd\u5f88\u5927\u3002\u901a\u5e38\u8fd9\u4e2a\u503c\u8d8a\u5927\uff0c\u7edf\u8ba1\u8d8a\u7cbe\u786e\uff0c\u4f46\u662f\u4f1a\u4f7f\u7528\u66f4\u591a\u5185\u5b58\u3002\n-//        //SELECTIVITY\u8d8a\u5927\uff0c\u8bf4\u660e\u91cd\u590d\u7684\u8bb0\u5f55\u8d8a\u5c11\uff0c\u5728\u9009\u62e9\u7d22\u5f15\u65f6\u66f4\u6709\u5229\u3002\n-//=======\n-    void add(Database database, int dataType, Value v) {\n+//<<<<<<< HEA\n+void add(Database database, int dataType, Value v) {\n         count++;\n         if (distinctHashes == null) {\n             distinctHashes = new IntIntHashMap();\n@@ -57,7 +51,8 @@ class AggregateDataSelectivity extends AggregateData {\n     @Override\n     Value getValue(Database database, int dataType) {\n         if (distinct) {\n-            count = 0; //\u52a0distinct\u65f6\uff0c\u610f\u601d\u5c31\u662f\u6ca1\u6709\u91cd\u590d\u7684\u5b57\u6bb5\u503c\u4e86\uff0c\u6240\u4ee5SELECTIVITY\u5c31\u662f0\n+            count = 0;\n+//\u52a0distinct\u65f6\uff0c\u610f\u601d\u5c31\u662f\u6ca1\u6709\u91cd\u590d\u7684\u5b57\u6bb5\u503c\u4e86\uff0c\u6240\u4ee5SELECTIVITY\u5c31\u662f0\n         }\n         Value v = null;\n         int s = 0;\n@@ -73,4 +68,4 @@ class AggregateDataSelectivity extends AggregateData {\n         return v.convertTo(dataType);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/74/AggregateDataSelectivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/codebuff/74/AggregateDataSelectivity.java\nindex be849a5434..785b0af8b6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/74/AggregateDataSelectivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/codebuff/74/AggregateDataSelectivity.java\n@@ -14,10 +14,11 @@ import org.h2.value.ValueInt;\n /**\n  * Data stored while calculating a SELECTIVITY aggregate.\n  */\n+\n+\n class AggregateDataSelectivity extends AggregateData {\n \n     private final boolean distinct;\n-\n     private long count;\n     private IntIntHashMap distinctHashes;\n     private double m2;\n@@ -27,6 +28,7 @@ class AggregateDataSelectivity extends AggregateData {\n      *\n      * @param distinct if distinct is used\n      */\n+\n     AggregateDataSelectivity(boolean distinct) {\n         this.distinct = distinct;\n     }\n@@ -73,4 +75,4 @@ class AggregateDataSelectivity extends AggregateData {\n         return v.convertTo(dataType);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}