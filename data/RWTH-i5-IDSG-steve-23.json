{
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "215",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @SuppressWarnings(\"unchecked\")\n    private\n    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n    getInternal(TransactionQueryForm form) {\n\n        SelectQuery selectQuery = ctx.selectQuery();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "column": "41",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "214",
                    "column": "48",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "214",
                    "column": "56",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/23/TransactionRepositoryImpl.java\nindex 8828034ae4..f5bb597032 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/23/TransactionRepositoryImpl.java\n@@ -211,8 +211,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n      * Joins with CHARGE_BOX and OCPP_TAG tables, selects CHARGE_BOX_PK and OCPP_TAG_PK additionally\n      */\n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n+    private SelectQuery<Record11<Integer,String,Integer,String, DateTime, String, DateTime, String, String, Integer, Integer>>\n     getInternal(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/23/TransactionRepositoryImpl.java\nindex 8828034ae4..0e0857bdae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/23/TransactionRepositoryImpl.java\n@@ -49,25 +49,25 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     @SuppressWarnings(\"unchecked\")\n     public List<Transaction> getTransactions(TransactionQueryForm form) {\n         return getInternal(form).fetch()\n-                                .map(new TransactionMapper());\n+            .map(new TransactionMapper());\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void writeTransactionsCSV(TransactionQueryForm form, Writer writer) {\n         getInternalCSV(form).fetch()\n-                            .formatCSV(writer);\n+            .formatCSV(writer);\n     }\n \n     @Override\n     public List<Integer> getActiveTransactionIds(String chargeBoxId) {\n         return ctx.select(TRANSACTION.TRANSACTION_PK)\n-                  .from(TRANSACTION)\n-                  .join(CONNECTOR)\n-                    .on(TRANSACTION.CONNECTOR_PK.equal(CONNECTOR.CONNECTOR_PK))\n-                    .and(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n-                  .where(TRANSACTION.STOP_TIMESTAMP.isNull())\n-                  .fetch(TRANSACTION.TRANSACTION_PK);\n+            .from(TRANSACTION)\n+            .join(CONNECTOR)\n+            .on(TRANSACTION.CONNECTOR_PK.equal(CONNECTOR.CONNECTOR_PK))\n+            .and(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n+            .where(TRANSACTION.STOP_TIMESTAMP.isNull())\n+            .fetch(TRANSACTION.TRANSACTION_PK);\n     }\n \n     @Override\n@@ -83,7 +83,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         form.setPeriodType(TransactionQueryForm.QueryPeriodType.ALL);\n \n         Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>\n-                transaction = getInternal(form).fetchOne();\n+            transaction = getInternal(form).fetchOne();\n \n         if (transaction == null) {\n             throw new SteveException(\"There is no transaction with id '%s'\", transactionPk);\n@@ -111,20 +111,20 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         // Case 1: Ideal and most accurate case. Station sends meter values with transaction id set.\n         //\n         SelectQuery<ConnectorMeterValueRecord> transactionQuery =\n-                ctx.selectFrom(CONNECTOR_METER_VALUE)\n-                   .where(CONNECTOR_METER_VALUE.TRANSACTION_PK.eq(transactionPk))\n-                   .getQuery();\n+            ctx.selectFrom(CONNECTOR_METER_VALUE)\n+                .where(CONNECTOR_METER_VALUE.TRANSACTION_PK.eq(transactionPk))\n+                .getQuery();\n \n         // Case 2: Fall back to filtering according to time windows\n         //\n         SelectQuery<ConnectorMeterValueRecord> timestampQuery =\n-                ctx.selectFrom(CONNECTOR_METER_VALUE)\n-                   .where(CONNECTOR_METER_VALUE.CONNECTOR_PK.eq(ctx.select(CONNECTOR.CONNECTOR_PK)\n-                                                                   .from(CONNECTOR)\n-                                                                   .where(CONNECTOR.CHARGE_BOX_ID.eq(chargeBoxId))\n-                                                                   .and(CONNECTOR.CONNECTOR_ID.eq(connectorId))))\n-                   .and(timestampCondition)\n-                   .getQuery();\n+            ctx.selectFrom(CONNECTOR_METER_VALUE)\n+                .where(CONNECTOR_METER_VALUE.CONNECTOR_PK.eq(ctx.select(CONNECTOR.CONNECTOR_PK)\n+                    .from(CONNECTOR)\n+                    .where(CONNECTOR.CHARGE_BOX_ID.eq(chargeBoxId))\n+                    .and(CONNECTOR.CONNECTOR_ID.eq(connectorId))))\n+                .and(timestampCondition)\n+                .getQuery();\n \n         // Actually, either case 1 applies or 2. If we retrieved values using 1, case 2 is should not be\n         // executed (best case). In worst case (1 returns empty list and we fall back to case 2) though,\n@@ -145,36 +145,36 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         Field<DateTime> dateTimeField = DSL.min(t1.field(2, DateTime.class)).as(\"min\");\n \n         List<TransactionDetails.MeterValues> values =\n-                ctx.select(\n-                        dateTimeField,\n-                        t1.field(3, String.class),\n-                        t1.field(4, String.class),\n-                        t1.field(5, String.class),\n-                        t1.field(6, String.class),\n-                        t1.field(7, String.class),\n-                        t1.field(8, String.class),\n-                        t1.field(9, String.class))\n-                   .from(t1)\n-                   .groupBy(\n-                           t1.field(3),\n-                           t1.field(4),\n-                           t1.field(5),\n-                           t1.field(6),\n-                           t1.field(7),\n-                           t1.field(8),\n-                           t1.field(9))\n-                   .orderBy(dateTimeField)\n-                   .fetch()\n-                   .map(r -> TransactionDetails.MeterValues.builder()\n-                                                           .valueTimestamp(r.value1())\n-                                                           .value(r.value2())\n-                                                           .readingContext(r.value3())\n-                                                           .format(r.value4())\n-                                                           .measurand(r.value5())\n-                                                           .location(r.value6())\n-                                                           .unit(r.value7())\n-                                                           .phase(r.value8())\n-                                                           .build());\n+            ctx.select(\n+                dateTimeField,\n+                t1.field(3, String.class),\n+                t1.field(4, String.class),\n+                t1.field(5, String.class),\n+                t1.field(6, String.class),\n+                t1.field(7, String.class),\n+                t1.field(8, String.class),\n+                t1.field(9, String.class))\n+                .from(t1)\n+                .groupBy(\n+                    t1.field(3),\n+                    t1.field(4),\n+                    t1.field(5),\n+                    t1.field(6),\n+                    t1.field(7),\n+                    t1.field(8),\n+                    t1.field(9))\n+                .orderBy(dateTimeField)\n+                .fetch()\n+                .map(r -> TransactionDetails.MeterValues.builder()\n+                    .valueTimestamp(r.value1())\n+                    .value(r.value2())\n+                    .readingContext(r.value3())\n+                    .format(r.value4())\n+                    .measurand(r.value5())\n+                    .location(r.value6())\n+                    .unit(r.value7())\n+                    .phase(r.value8())\n+                    .build());\n \n         return new TransactionDetails(new TransactionMapper().map(transaction), values);\n     }\n@@ -184,23 +184,22 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     // -------------------------------------------------------------------------\n \n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record9<Integer, String, Integer, String, DateTime, String, DateTime, String, String>>\n+    private SelectQuery<Record9<Integer, String, Integer, String, DateTime, String, DateTime, String, String>>\n     getInternalCSV(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n         selectQuery.addFrom(TRANSACTION);\n         selectQuery.addJoin(CONNECTOR, TRANSACTION.CONNECTOR_PK.eq(CONNECTOR.CONNECTOR_PK));\n         selectQuery.addSelect(\n-                TRANSACTION.TRANSACTION_PK,\n-                CONNECTOR.CHARGE_BOX_ID,\n-                CONNECTOR.CONNECTOR_ID,\n-                TRANSACTION.ID_TAG,\n-                TRANSACTION.START_TIMESTAMP,\n-                TRANSACTION.START_VALUE,\n-                TRANSACTION.STOP_TIMESTAMP,\n-                TRANSACTION.STOP_VALUE,\n-                TRANSACTION.STOP_REASON\n+            TRANSACTION.TRANSACTION_PK,\n+            CONNECTOR.CHARGE_BOX_ID,\n+            CONNECTOR.CONNECTOR_ID,\n+            TRANSACTION.ID_TAG,\n+            TRANSACTION.START_TIMESTAMP,\n+            TRANSACTION.START_VALUE,\n+            TRANSACTION.STOP_TIMESTAMP,\n+            TRANSACTION.STOP_VALUE,\n+            TRANSACTION.STOP_REASON\n         );\n \n         return addConditions(selectQuery, form);\n@@ -211,8 +210,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n      * Joins with CHARGE_BOX and OCPP_TAG tables, selects CHARGE_BOX_PK and OCPP_TAG_PK additionally\n      */\n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n+    private SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n     getInternal(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n@@ -221,17 +219,17 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         selectQuery.addJoin(CHARGE_BOX, CHARGE_BOX.CHARGE_BOX_ID.eq(CONNECTOR.CHARGE_BOX_ID));\n         selectQuery.addJoin(OCPP_TAG, OCPP_TAG.ID_TAG.eq(TRANSACTION.ID_TAG));\n         selectQuery.addSelect(\n-                TRANSACTION.TRANSACTION_PK,\n-                CONNECTOR.CHARGE_BOX_ID,\n-                CONNECTOR.CONNECTOR_ID,\n-                TRANSACTION.ID_TAG,\n-                TRANSACTION.START_TIMESTAMP,\n-                TRANSACTION.START_VALUE,\n-                TRANSACTION.STOP_TIMESTAMP,\n-                TRANSACTION.STOP_VALUE,\n-                TRANSACTION.STOP_REASON,\n-                CHARGE_BOX.CHARGE_BOX_PK,\n-                OCPP_TAG.OCPP_TAG_PK\n+            TRANSACTION.TRANSACTION_PK,\n+            CONNECTOR.CHARGE_BOX_ID,\n+            CONNECTOR.CONNECTOR_ID,\n+            TRANSACTION.ID_TAG,\n+            TRANSACTION.START_TIMESTAMP,\n+            TRANSACTION.START_VALUE,\n+            TRANSACTION.STOP_TIMESTAMP,\n+            TRANSACTION.STOP_VALUE,\n+            TRANSACTION.STOP_REASON,\n+            CHARGE_BOX.CHARGE_BOX_PK,\n+            OCPP_TAG.OCPP_TAG_PK\n         );\n \n         return addConditions(selectQuery, form);\n@@ -267,7 +265,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         switch (form.getPeriodType()) {\n             case TODAY:\n                 selectQuery.addConditions(\n-                        date(TRANSACTION.START_TIMESTAMP).eq(date(CustomDSL.utcTimestamp()))\n+                    date(TRANSACTION.START_TIMESTAMP).eq(date(CustomDSL.utcTimestamp()))\n                 );\n                 break;\n \n@@ -276,10 +274,10 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n             case LAST_90:\n                 DateTime now = DateTime.now();\n                 selectQuery.addConditions(\n-                        date(TRANSACTION.START_TIMESTAMP).between(\n-                                date(now.minusDays(form.getPeriodType().getInterval())),\n-                                date(now)\n-                        )\n+                    date(TRANSACTION.START_TIMESTAMP).between(\n+                        date(now.minusDays(form.getPeriodType().getInterval())),\n+                        date(now)\n+                    )\n                 );\n                 break;\n \n@@ -288,7 +286,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n \n             case FROM_TO:\n                 selectQuery.addConditions(\n-                        TRANSACTION.START_TIMESTAMP.between(form.getFrom().toDateTime(), form.getTo().toDateTime())\n+                    TRANSACTION.START_TIMESTAMP.between(form.getFrom().toDateTime(), form.getTo().toDateTime())\n                 );\n                 break;\n \n@@ -298,26 +296,26 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     }\n \n     private static class TransactionMapper\n-            implements RecordMapper<Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n-                                             String, String, Integer, Integer>, Transaction> {\n+        implements RecordMapper<Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n+        String, String, Integer, Integer>, Transaction> {\n         @Override\n         public Transaction map(Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n-                                        String, String, Integer, Integer> r) {\n+            String, String, Integer, Integer> r) {\n             return Transaction.builder()\n-                              .id(r.value1())\n-                              .chargeBoxId(r.value2())\n-                              .connectorId(r.value3())\n-                              .ocppIdTag(r.value4())\n-                              .startTimestampDT(r.value5())\n-                              .startTimestamp(DateTimeUtils.humanize(r.value5()))\n-                              .startValue(r.value6())\n-                              .stopTimestampDT(r.value7())\n-                              .stopTimestamp(DateTimeUtils.humanize(r.value7()))\n-                              .stopValue(r.value8())\n-                              .stopReason(r.value9())\n-                              .chargeBoxPk(r.value10())\n-                              .ocppTagPk(r.value11())\n-                              .build();\n+                .id(r.value1())\n+                .chargeBoxId(r.value2())\n+                .connectorId(r.value3())\n+                .ocppIdTag(r.value4())\n+                .startTimestampDT(r.value5())\n+                .startTimestamp(DateTimeUtils.humanize(r.value5()))\n+                .startValue(r.value6())\n+                .stopTimestampDT(r.value7())\n+                .stopTimestamp(DateTimeUtils.humanize(r.value7()))\n+                .stopValue(r.value8())\n+                .stopReason(r.value9())\n+                .chargeBoxPk(r.value10())\n+                .ocppTagPk(r.value11())\n+                .build();\n         }\n     }\n }\n",
            "diff_size": 96
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/23/TransactionRepositoryImpl.java\nindex 8828034ae4..a5daef275a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/23/TransactionRepositoryImpl.java\n@@ -48,15 +48,13 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<Transaction> getTransactions(TransactionQueryForm form) {\n-        return getInternal(form).fetch()\n-                                .map(new TransactionMapper());\n+        return getInternal(form).fetch().map(new TransactionMapper());\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void writeTransactionsCSV(TransactionQueryForm form, Writer writer) {\n-        getInternalCSV(form).fetch()\n-                            .formatCSV(writer);\n+        getInternalCSV(form).fetch().formatCSV(writer);\n     }\n \n     @Override\n@@ -82,8 +80,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         form.setType(TransactionQueryForm.QueryType.ALL);\n         form.setPeriodType(TransactionQueryForm.QueryPeriodType.ALL);\n \n-        Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>\n-                transaction = getInternal(form).fetchOne();\n+        Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer> transaction = getInternal(form).fetchOne();\n \n         if (transaction == null) {\n             throw new SteveException(\"There is no transaction with id '%s'\", transactionPk);\n@@ -115,18 +112,18 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n                    .where(CONNECTOR_METER_VALUE.TRANSACTION_PK.eq(transactionPk))\n                    .getQuery();\n \n-        // Case 2: Fall back to filtering according to time windows\n+// Case 2: Fall back to filtering according to time windows\n         //\n         SelectQuery<ConnectorMeterValueRecord> timestampQuery =\n                 ctx.selectFrom(CONNECTOR_METER_VALUE)\n                    .where(CONNECTOR_METER_VALUE.CONNECTOR_PK.eq(ctx.select(CONNECTOR.CONNECTOR_PK)\n-                                                                   .from(CONNECTOR)\n+.from(CONNECTOR)\n                                                                    .where(CONNECTOR.CHARGE_BOX_ID.eq(chargeBoxId))\n                                                                    .and(CONNECTOR.CONNECTOR_ID.eq(connectorId))))\n-                   .and(timestampCondition)\n+.and(timestampCondition)\n                    .getQuery();\n \n-        // Actually, either case 1 applies or 2. If we retrieved values using 1, case 2 is should not be\n+// Actually, either case 1 applies or 2. If we retrieved values using 1, case 2 is should not be\n         // executed (best case). In worst case (1 returns empty list and we fall back to case 2) though,\n         // we make two db calls. Alternatively, we can pass both queries in one go, and make the db work.\n         //\n@@ -165,8 +162,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n                            t1.field(9))\n                    .orderBy(dateTimeField)\n                    .fetch()\n-                   .map(r -> TransactionDetails.MeterValues.builder()\n-                                                           .valueTimestamp(r.value1())\n+                   .map(r -> TransactionDetails.MeterValues.builder().valueTimestamp(r.value1())\n                                                            .value(r.value2())\n                                                            .readingContext(r.value3())\n                                                            .format(r.value4())\n@@ -175,8 +171,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n                                                            .unit(r.value7())\n                                                            .phase(r.value8())\n                                                            .build());\n-\n-        return new TransactionDetails(new TransactionMapper().map(transaction), values);\n+return new TransactionDetails(new TransactionMapper().map(transaction), values);\n     }\n \n     // -------------------------------------------------------------------------\n@@ -184,8 +179,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     // -------------------------------------------------------------------------\n \n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record9<Integer, String, Integer, String, DateTime, String, DateTime, String, String>>\n+    private SelectQuery<Record9<Integer, String, Integer, String, DateTime, String, DateTime, String, String>>\n     getInternalCSV(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n@@ -211,8 +205,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n      * Joins with CHARGE_BOX and OCPP_TAG tables, selects CHARGE_BOX_PK and OCPP_TAG_PK additionally\n      */\n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n+    private SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n     getInternal(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n@@ -298,9 +291,8 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     }\n \n     private static class TransactionMapper\n-            implements RecordMapper<Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n-                                             String, String, Integer, Integer>, Transaction> {\n-        @Override\n+            implements RecordMapper<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>, Transaction> {\n+    @Override\n         public Transaction map(Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n                                         String, String, Integer, Integer> r) {\n             return Transaction.builder()\n@@ -320,4 +312,4 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n                               .build();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 227).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 226).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 277).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 367).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 276).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 345).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 336).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 345).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 337).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 340).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 339).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 335).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 336).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 328).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 306).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/23/TransactionRepositoryImpl.java\nindex 8828034ae4..920489c078 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/23/TransactionRepositoryImpl.java\n@@ -20,7 +20,6 @@ import org.jooq.Table;\n import org.jooq.impl.DSL;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n-\n import java.io.Writer;\n import java.util.List;\n \n@@ -35,9 +34,10 @@ import static jooq.steve.db.tables.Transaction.TRANSACTION;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 14.08.2014\n  */\n+\n+\n @Repository\n public class TransactionRepositoryImpl implements TransactionRepository {\n-\n     private final DSLContext ctx;\n \n     @Autowired\n@@ -55,19 +55,17 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void writeTransactionsCSV(TransactionQueryForm form, Writer writer) {\n-        getInternalCSV(form).fetch()\n-                            .formatCSV(writer);\n+        getInternalCSV(form).fetch().formatCSV(writer);\n     }\n \n     @Override\n     public List<Integer> getActiveTransactionIds(String chargeBoxId) {\n-        return ctx.select(TRANSACTION.TRANSACTION_PK)\n-                  .from(TRANSACTION)\n-                  .join(CONNECTOR)\n-                    .on(TRANSACTION.CONNECTOR_PK.equal(CONNECTOR.CONNECTOR_PK))\n-                    .and(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n-                  .where(TRANSACTION.STOP_TIMESTAMP.isNull())\n-                  .fetch(TRANSACTION.TRANSACTION_PK);\n+        return ctx.select(TRANSACTION.TRANSACTION_PK).from(TRANSACTION)\n+                                                     .join(CONNECTOR)\n+                                                     .on(TRANSACTION.CONNECTOR_PK.equal(CONNECTOR.CONNECTOR_PK))\n+                                                     .and(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n+                                                     .where(TRANSACTION.STOP_TIMESTAMP.isNull())\n+                                                     .fetch(TRANSACTION.TRANSACTION_PK);\n     }\n \n     @Override\n@@ -76,15 +74,12 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         // -------------------------------------------------------------------------\n         // Step 1: Collect general data about transaction\n         // -------------------------------------------------------------------------\n-\n         TransactionQueryForm form = new TransactionQueryForm();\n         form.setTransactionPk(transactionPk);\n         form.setType(TransactionQueryForm.QueryType.ALL);\n         form.setPeriodType(TransactionQueryForm.QueryPeriodType.ALL);\n \n-        Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>\n-                transaction = getInternal(form).fetchOne();\n-\n+        Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer> transaction = getInternal(form).fetchOne();\n         if (transaction == null) {\n             throw new SteveException(\"There is no transaction with id '%s'\", transactionPk);\n         }\n@@ -98,7 +93,6 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         // -------------------------------------------------------------------------\n         // Step 2: Collect intermediate meter values\n         // -------------------------------------------------------------------------\n-\n         Condition timestampCondition;\n         if (stopTimestamp == null && stopValue == null) {\n             // active transaction\n@@ -110,21 +104,17 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n \n         // Case 1: Ideal and most accurate case. Station sends meter values with transaction id set.\n         //\n-        SelectQuery<ConnectorMeterValueRecord> transactionQuery =\n-                ctx.selectFrom(CONNECTOR_METER_VALUE)\n-                   .where(CONNECTOR_METER_VALUE.TRANSACTION_PK.eq(transactionPk))\n-                   .getQuery();\n+\n+        SelectQuery<ConnectorMeterValueRecord> transactionQuery = ctx.selectFrom(CONNECTOR_METER_VALUE).where(CONNECTOR_METER_VALUE.TRANSACTION_PK.eq(transactionPk))\n+                                                                                                       .getQuery();\n \n         // Case 2: Fall back to filtering according to time windows\n         //\n-        SelectQuery<ConnectorMeterValueRecord> timestampQuery =\n-                ctx.selectFrom(CONNECTOR_METER_VALUE)\n-                   .where(CONNECTOR_METER_VALUE.CONNECTOR_PK.eq(ctx.select(CONNECTOR.CONNECTOR_PK)\n-                                                                   .from(CONNECTOR)\n-                                                                   .where(CONNECTOR.CHARGE_BOX_ID.eq(chargeBoxId))\n-                                                                   .and(CONNECTOR.CONNECTOR_ID.eq(connectorId))))\n-                   .and(timestampCondition)\n-                   .getQuery();\n+        SelectQuery<ConnectorMeterValueRecord> timestampQuery = ctx.selectFrom(CONNECTOR_METER_VALUE).where(CONNECTOR_METER_VALUE.CONNECTOR_PK.eq(ctx.select(CONNECTOR.CONNECTOR_PK).from(CONNECTOR)\n+                                                                                                                                                                                    .where(CONNECTOR.CHARGE_BOX_ID.eq(chargeBoxId))\n+                                                                                                                                                                                    .and(CONNECTOR.CONNECTOR_ID.eq(connectorId))))\n+                                                                                                     .and(timestampCondition)\n+                                                                                                     .getQuery();\n \n         // Actually, either case 1 applies or 2. If we retrieved values using 1, case 2 is should not be\n         // executed (best case). In worst case (1 returns empty list and we fall back to case 2) though,\n@@ -141,42 +131,22 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         // yields multiple entries in db with the same value but different timestamp.\n         // We are only interested in the first arriving entry.\n         // -------------------------------------------------------------------------\n-\n         Field<DateTime> dateTimeField = DSL.min(t1.field(2, DateTime.class)).as(\"min\");\n-\n-        List<TransactionDetails.MeterValues> values =\n-                ctx.select(\n-                        dateTimeField,\n-                        t1.field(3, String.class),\n-                        t1.field(4, String.class),\n-                        t1.field(5, String.class),\n-                        t1.field(6, String.class),\n-                        t1.field(7, String.class),\n-                        t1.field(8, String.class),\n-                        t1.field(9, String.class))\n-                   .from(t1)\n-                   .groupBy(\n-                           t1.field(3),\n-                           t1.field(4),\n-                           t1.field(5),\n-                           t1.field(6),\n-                           t1.field(7),\n-                           t1.field(8),\n-                           t1.field(9))\n-                   .orderBy(dateTimeField)\n-                   .fetch()\n-                   .map(r -> TransactionDetails.MeterValues.builder()\n-                                                           .valueTimestamp(r.value1())\n-                                                           .value(r.value2())\n-                                                           .readingContext(r.value3())\n-                                                           .format(r.value4())\n-                                                           .measurand(r.value5())\n-                                                           .location(r.value6())\n-                                                           .unit(r.value7())\n-                                                           .phase(r.value8())\n-                                                           .build());\n-\n-        return new TransactionDetails(new TransactionMapper().map(transaction), values);\n+        List<TransactionDetails.MeterValues> values = ctx.select(dateTimeField, t1.field(3, String.class), t1.field(4, String.class), t1.field(5, String.class), t1.field(6, String.class), t1.field(7, String.class), t1.field(8, String.class), t1.field(9, String.class)).from(t1)\n+                                                                                                                                                                                                                                                                            .groupBy(t1.field(3), t1.field(4), t1.field(5), t1.field(6), t1.field(7), t1.field(8), t1.field(9))\n+                                                                                                                                                                                                                                                                            .orderBy(dateTimeField)\n+                                                                                                                                                                                                                                                                            .fetch()\n+                                                                                                                                                                                                                                                                            .map(r -> TransactionDetails.MeterValues.builder().valueTimestamp(r.value1())\n+                                                                                                                                                                                                                                                                                                                              .value(r.value2())\n+                                                                                                                                                                                                                                                                                                                              .readingContext(r.value3())\n+                                                                                                                                                                                                                                                                                                                              .format(r.value4())\n+                                                                                                                                                                                                                                                                                                                              .measurand(r.value5())\n+                                                                                                                                                                                                                                                                                                                              .location(r.value6())\n+                                                                                                                                                                                                                                                                                                                              .unit(r.value7())\n+                                                                                                                                                                                                                                                                                                                              .phase(r.value8())\n+                                                                                                                                                                                                                                                                                                                              .build());\n+        return new TransactionDetails(new TransactionMapper()\n+.map(transaction), values);\n     }\n \n     // -------------------------------------------------------------------------\n@@ -184,25 +154,11 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n     // -------------------------------------------------------------------------\n \n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record9<Integer, String, Integer, String, DateTime, String, DateTime, String, String>>\n-    getInternalCSV(TransactionQueryForm form) {\n-\n+    private SelectQuery<Record9<Integer, String, Integer, String, DateTime, String, DateTime, String, String>> getInternalCSV(TransactionQueryForm form) {\n         SelectQuery selectQuery = ctx.selectQuery();\n         selectQuery.addFrom(TRANSACTION);\n         selectQuery.addJoin(CONNECTOR, TRANSACTION.CONNECTOR_PK.eq(CONNECTOR.CONNECTOR_PK));\n-        selectQuery.addSelect(\n-                TRANSACTION.TRANSACTION_PK,\n-                CONNECTOR.CHARGE_BOX_ID,\n-                CONNECTOR.CONNECTOR_ID,\n-                TRANSACTION.ID_TAG,\n-                TRANSACTION.START_TIMESTAMP,\n-                TRANSACTION.START_VALUE,\n-                TRANSACTION.STOP_TIMESTAMP,\n-                TRANSACTION.STOP_VALUE,\n-                TRANSACTION.STOP_REASON\n-        );\n-\n+        selectQuery.addSelect(TRANSACTION.TRANSACTION_PK, CONNECTOR.CHARGE_BOX_ID, CONNECTOR.CONNECTOR_ID, TRANSACTION.ID_TAG, TRANSACTION.START_TIMESTAMP, TRANSACTION.START_VALUE, TRANSACTION.STOP_TIMESTAMP, TRANSACTION.STOP_VALUE, TRANSACTION.STOP_REASON);\n         return addConditions(selectQuery, form);\n     }\n \n@@ -210,30 +166,15 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n      * Difference from getInternalCSV:\n      * Joins with CHARGE_BOX and OCPP_TAG tables, selects CHARGE_BOX_PK and OCPP_TAG_PK additionally\n      */\n-    @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n-    getInternal(TransactionQueryForm form) {\n \n+    @SuppressWarnings(\"unchecked\")\n+    private SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>> getInternal(TransactionQueryForm form) {\n         SelectQuery selectQuery = ctx.selectQuery();\n         selectQuery.addFrom(TRANSACTION);\n         selectQuery.addJoin(CONNECTOR, TRANSACTION.CONNECTOR_PK.eq(CONNECTOR.CONNECTOR_PK));\n         selectQuery.addJoin(CHARGE_BOX, CHARGE_BOX.CHARGE_BOX_ID.eq(CONNECTOR.CHARGE_BOX_ID));\n         selectQuery.addJoin(OCPP_TAG, OCPP_TAG.ID_TAG.eq(TRANSACTION.ID_TAG));\n-        selectQuery.addSelect(\n-                TRANSACTION.TRANSACTION_PK,\n-                CONNECTOR.CHARGE_BOX_ID,\n-                CONNECTOR.CONNECTOR_ID,\n-                TRANSACTION.ID_TAG,\n-                TRANSACTION.START_TIMESTAMP,\n-                TRANSACTION.START_VALUE,\n-                TRANSACTION.STOP_TIMESTAMP,\n-                TRANSACTION.STOP_VALUE,\n-                TRANSACTION.STOP_REASON,\n-                CHARGE_BOX.CHARGE_BOX_PK,\n-                OCPP_TAG.OCPP_TAG_PK\n-        );\n-\n+        selectQuery.addSelect(TRANSACTION.TRANSACTION_PK, CONNECTOR.CHARGE_BOX_ID, CONNECTOR.CONNECTOR_ID, TRANSACTION.ID_TAG, TRANSACTION.START_TIMESTAMP, TRANSACTION.START_VALUE, TRANSACTION.STOP_TIMESTAMP, TRANSACTION.STOP_VALUE, TRANSACTION.STOP_REASON, CHARGE_BOX.CHARGE_BOX_PK, OCPP_TAG.OCPP_TAG_PK);\n         return addConditions(selectQuery, form);\n     }\n \n@@ -259,37 +200,27 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n \n         // Default order\n         selectQuery.addOrderBy(TRANSACTION.TRANSACTION_PK.desc());\n-\n         return selectQuery;\n     }\n \n     private void processType(SelectQuery selectQuery, TransactionQueryForm form) {\n         switch (form.getPeriodType()) {\n             case TODAY:\n-                selectQuery.addConditions(\n-                        date(TRANSACTION.START_TIMESTAMP).eq(date(CustomDSL.utcTimestamp()))\n-                );\n+                selectQuery.addConditions(date(TRANSACTION.START_TIMESTAMP).eq(date(CustomDSL.utcTimestamp())));\n                 break;\n \n             case LAST_10:\n             case LAST_30:\n             case LAST_90:\n                 DateTime now = DateTime.now();\n-                selectQuery.addConditions(\n-                        date(TRANSACTION.START_TIMESTAMP).between(\n-                                date(now.minusDays(form.getPeriodType().getInterval())),\n-                                date(now)\n-                        )\n-                );\n+                selectQuery.addConditions(date(TRANSACTION.START_TIMESTAMP).between(date(now.minusDays(form.getPeriodType().getInterval())), date(now)));\n                 break;\n \n             case ALL:\n                 break;\n \n             case FROM_TO:\n-                selectQuery.addConditions(\n-                        TRANSACTION.START_TIMESTAMP.between(form.getFrom().toDateTime(), form.getTo().toDateTime())\n-                );\n+                selectQuery.addConditions(TRANSACTION.START_TIMESTAMP.between(form.getFrom().toDateTime(), form.getTo().toDateTime()));\n                 break;\n \n             default:\n@@ -297,27 +228,24 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n         }\n     }\n \n-    private static class TransactionMapper\n-            implements RecordMapper<Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n-                                             String, String, Integer, Integer>, Transaction> {\n+    private static class TransactionMapper implements RecordMapper<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>, Transaction> {\n+\n         @Override\n-        public Transaction map(Record11<Integer, String, Integer, String, DateTime, String, DateTime,\n-                                        String, String, Integer, Integer> r) {\n-            return Transaction.builder()\n-                              .id(r.value1())\n-                              .chargeBoxId(r.value2())\n-                              .connectorId(r.value3())\n-                              .ocppIdTag(r.value4())\n-                              .startTimestampDT(r.value5())\n-                              .startTimestamp(DateTimeUtils.humanize(r.value5()))\n-                              .startValue(r.value6())\n-                              .stopTimestampDT(r.value7())\n-                              .stopTimestamp(DateTimeUtils.humanize(r.value7()))\n-                              .stopValue(r.value8())\n-                              .stopReason(r.value9())\n-                              .chargeBoxPk(r.value10())\n-                              .ocppTagPk(r.value11())\n-                              .build();\n+        public Transaction map(Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer> r) {\n+            return Transaction.builder().id(r.value1())\n+                                        .chargeBoxId(r.value2())\n+                                        .connectorId(r.value3())\n+                                        .ocppIdTag(r.value4())\n+                                        .startTimestampDT(r.value5())\n+                                        .startTimestamp(DateTimeUtils.humanize(r.value5()))\n+                                        .startValue(r.value6())\n+                                        .stopTimestampDT(r.value7())\n+                                        .stopTimestamp(DateTimeUtils.humanize(r.value7()))\n+                                        .stopValue(r.value8())\n+                                        .stopReason(r.value9())\n+                                        .chargeBoxPk(r.value10())\n+                                        .ocppTagPk(r.value11())\n+                                        .build();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 135
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "215",
                    "column": "41",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "216",
                    "column": "5",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "216",
                    "column": "13",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "216",
                    "column": "30",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "216",
                    "column": "40",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "216",
                    "column": "40",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "216",
                    "column": "48",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "217",
                    "column": "9",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/23/TransactionRepositoryImpl.java\nindex 8828034ae4..bd3143bac6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/23/TransactionRepositoryImpl.java\n@@ -212,7 +212,9 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private\n-    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n+    SelectQuery<Record11<Integer, String,Integer\n+    , String,DateTime, String,DateTime ,String , String, Integer\n+        , Integer>>\n     getInternal(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "column": "41",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "214",
                    "column": "48",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "214",
                    "column": "56",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/23/TransactionRepositoryImpl.java\nindex 8828034ae4..f5bb597032 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/23/TransactionRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/23/TransactionRepositoryImpl.java\n@@ -211,8 +211,7 @@ public class TransactionRepositoryImpl implements TransactionRepository {\n      * Joins with CHARGE_BOX and OCPP_TAG tables, selects CHARGE_BOX_PK and OCPP_TAG_PK additionally\n      */\n     @SuppressWarnings(\"unchecked\")\n-    private\n-    SelectQuery<Record11<Integer, String, Integer, String, DateTime, String, DateTime, String, String, Integer, Integer>>\n+    private SelectQuery<Record11<Integer,String,Integer,String, DateTime, String, DateTime, String, String, Integer, Integer>>\n     getInternal(TransactionQueryForm form) {\n \n         SelectQuery selectQuery = ctx.selectQuery();\n",
            "diff_size": 2
        }
    ]
}