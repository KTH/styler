{
    "error_id": "388",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/388/PSAttemptStateUpdateEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/388/PSAttemptStateUpdateEvent.java\nindex d80694f9fd..bfbdfe2470 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/388/PSAttemptStateUpdateEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/388/PSAttemptStateUpdateEvent.java\n@@ -24,24 +24,28 @@ import java.util.Map;\n  * Update the counters for ps attempt.\n  */\n public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n-  /**ps attempt counters*/\n-  private final Map<String, String> params;\n+    /**\n+     * ps attempt counters\n+     */\n+    private final Map<String, String> params;\n \n-  /**\n-   * Create a PSAttemptStateUpdateEvent\n-   * @param id ps attempt id\n-   * @param params counters\n-   */\n-  public PSAttemptStateUpdateEvent(PSAttemptId id, Map<String, String> params) {\n-    super(PSAttemptEventType.PA_UPDATE_STATE, id);\n-    this.params = params;\n-  }\n+    /**\n+     * Create a PSAttemptStateUpdateEvent\n+     *\n+     * @param id     ps attempt id\n+     * @param params counters\n+     */\n+    public PSAttemptStateUpdateEvent(PSAttemptId id, Map<String, String> params) {\n+        super(PSAttemptEventType.PA_UPDATE_STATE, id);\n+        this.params = params;\n+    }\n \n-  /**\n-   * Get counters\n-   * @return counters\n-   */\n-  public Map<String, String> getParams() {\n-    return params;\n-  }\n+    /**\n+     * Get counters\n+     *\n+     * @return counters\n+     */\n+    public Map<String, String> getParams() {\n+        return params;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/388/PSAttemptStateUpdateEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/388/PSAttemptStateUpdateEvent.java\nindex d80694f9fd..56d1e4a360 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/388/PSAttemptStateUpdateEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/388/PSAttemptStateUpdateEvent.java\n@@ -44,4 +44,4 @@ public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n   public Map<String, String> getParams() {\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/388/PSAttemptStateUpdateEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/388/PSAttemptStateUpdateEvent.java\nindex d80694f9fd..4947b53a08 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/388/PSAttemptStateUpdateEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/388/PSAttemptStateUpdateEvent.java\n@@ -17,31 +17,34 @@\n package com.tencent.angel.master.ps.attempt;\n \n import com.tencent.angel.ps.PSAttemptId;\n-\n import java.util.Map;\n \n /**\n  * Update the counters for ps attempt.\n  */\n+\n public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n   /**ps attempt counters*/\n-  private final Map<String, String> params;\n+    private final Map<String, String> params;\n \n   /**\n    * Create a PSAttemptStateUpdateEvent\n    * @param id ps attempt id\n    * @param params counters\n    */\n-  public PSAttemptStateUpdateEvent(PSAttemptId id, Map<String, String> params) {\n+\n+    public PSAttemptStateUpdateEvent(PSAttemptId id, Map<String, String> params) {\n     super(PSAttemptEventType.PA_UPDATE_STATE, id);\n     this.params = params;\n-  }\n+    }\n \n   /**\n    * Get counters\n    * @return counters\n    */\n-  public Map<String, String> getParams() {\n+\n+    public Map<String, String> getParams() {\n     return params;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}