{
    "error_id": "936",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/936/NnzNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/936/NnzNode.java\nindex f32838fff4..d90dff2afa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/936/NnzNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/936/NnzNode.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.summary;\n \n import com.tencent.angel.ml.matrix.psf.aggr.enhance.UnaryAggrFunc;\n@@ -21,26 +22,26 @@ import com.tencent.angel.ps.storage.vector.ServerRow;\n \n public class NnzNode extends UnaryAggrFunc {\n \n-  public NnzNode(int matrixId, int rowId) {\n-    super(matrixId, rowId);\n-  }\n+    public NnzNode(int matrixId, int rowId) {\n+        super(matrixId, rowId);\n+    }\n \n-  public NnzNode() {\n-    super(-1, -1);\n-  }\n+    public NnzNode() {\n+        super(-1, -1);\n+    }\n \n-  @Override\n-  public double mergeInit() {\n-    return 0;\n-  }\n+    @Override\n+    public double mergeInit() {\n+        return 0;\n+    }\n \n-  @Override\n-  public double mergeOp(double a, double b) {\n-    return a + b;\n-  }\n+    @Override\n+    public double mergeOp(double a, double b) {\n+        return a + b;\n+    }\n \n-  @Override\n-  public double processRow(ServerRow row) {\n-    return row.size();\n-  }\n+    @Override\n+    public double processRow(ServerRow row) {\n+        return row.size();\n+    }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/936/NnzNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/936/NnzNode.java\nindex f32838fff4..5a863ad963 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/936/NnzNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/936/NnzNode.java\n@@ -43,4 +43,4 @@ public class NnzNode extends UnaryAggrFunc {\n   public double processRow(ServerRow row) {\n     return row.size();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/936/NnzNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/936/NnzNode.java\nindex f32838fff4..16965c2751 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/936/NnzNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/936/NnzNode.java\n@@ -21,26 +21,27 @@ import com.tencent.angel.ps.storage.vector.ServerRow;\n \n public class NnzNode extends UnaryAggrFunc {\n \n-  public NnzNode(int matrixId, int rowId) {\n+    public NnzNode(int matrixId, int rowId) {\n     super(matrixId, rowId);\n-  }\n+    }\n \n-  public NnzNode() {\n+    public NnzNode() {\n     super(-1, -1);\n-  }\n+    }\n \n-  @Override\n-  public double mergeInit() {\n+    @Override\n+    public double mergeInit() {\n     return 0;\n-  }\n+    }\n \n-  @Override\n-  public double mergeOp(double a, double b) {\n+    @Override\n+    public double mergeOp(double a, double b) {\n     return a + b;\n-  }\n+    }\n \n-  @Override\n-  public double processRow(ServerRow row) {\n+    @Override\n+    public double processRow(ServerRow row) {\n     return row.size();\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}