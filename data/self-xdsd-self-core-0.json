{
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "68",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final Contract contract = this.storage.contracts().findById(contractId);\n        BigDecimal totalAmount = BigDecimal.ZERO;\n        if(contract != null){\n            final BigDecimal rate = contract.hourlyRate();\n            totalAmount = this.tasks().stream()\n                .reduce(BigDecimal.ZERO,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/0/StoredInvoice.java\nindex 09ec484d37..b942ddc285 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/0/StoredInvoice.java\n@@ -65,7 +65,7 @@ public final class StoredInvoice implements Invoice {\n     public BigDecimal totalAmount() {\n         final Contract contract = this.storage.contracts().findById(contractId);\n         BigDecimal totalAmount = BigDecimal.ZERO;\n-        if(contract != null){\n+        if (contract != null){\n             final BigDecimal rate = contract.hourlyRate();\n             totalAmount = this.tasks().stream()\n                 .reduce(BigDecimal.ZERO,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/0/StoredInvoice.java\nindex 09ec484d37..0d64d568a4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/0/StoredInvoice.java\n@@ -10,6 +10,7 @@ import java.util.List;\n \n /**\n  * A Invoice stored in self.\n+ *\n  * @author criske\n  * @version $Id$\n  * @since 0.0.3\n@@ -32,8 +33,9 @@ public final class StoredInvoice implements Invoice {\n \n     /**\n      * Ctor.\n-     * @param id Invoice id.\n-     * @param storage Self storage context.\n+     *\n+     * @param id         Invoice id.\n+     * @param storage    Self storage context.\n      * @param contractId Contract's id of this invoice\n      */\n     public StoredInvoice(\n@@ -65,13 +67,13 @@ public final class StoredInvoice implements Invoice {\n     public BigDecimal totalAmount() {\n         final Contract contract = this.storage.contracts().findById(contractId);\n         BigDecimal totalAmount = BigDecimal.ZERO;\n-        if(contract != null){\n+        if (contract != null) {\n             final BigDecimal rate = contract.hourlyRate();\n             totalAmount = this.tasks().stream()\n                 .reduce(BigDecimal.ZERO,\n-                    (acc, curr)-> acc.add(rate.multiply(BigDecimal\n+                    (acc, curr) -> acc.add(rate.multiply(BigDecimal\n                         .valueOf(curr.timeSpent().toHours()))),\n-                    (acc, curr)-> acc);\n+                    (acc, curr) -> acc);\n         }\n         return totalAmount;\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "72",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "70",
                    "column": "157",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/0/StoredInvoice.java\nindex 09ec484d37..c695e8c8f3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/0/StoredInvoice.java\n@@ -20,7 +20,8 @@ public final class StoredInvoice implements Invoice {\n      * Invoice id.\n      */\n     private final int id;\n-    /**\n+\n+/**\n      * Self storage context.\n      */\n     private final Storage storage;\n@@ -40,7 +41,7 @@ public final class StoredInvoice implements Invoice {\n         final int id,\n         final Storage storage,\n         final Contract.Id contractId) {\n-        this.id = id;\n+    this.id = id;\n         this.storage = storage;\n         this.contractId = contractId;\n     }\n@@ -57,28 +58,22 @@ public final class StoredInvoice implements Invoice {\n \n     @Override\n     public boolean isActive() {\n-        return this.storage.invoices().ofContract(this.contractId)\n-            .isActive(this.id);\n+        return this.storage.invoices().ofContract(this.contractId).isActive(this.id);\n     }\n \n     @Override\n     public BigDecimal totalAmount() {\n         final Contract contract = this.storage.contracts().findById(contractId);\n         BigDecimal totalAmount = BigDecimal.ZERO;\n-        if(contract != null){\n+        if(contract != null) {\n             final BigDecimal rate = contract.hourlyRate();\n-            totalAmount = this.tasks().stream()\n-                .reduce(BigDecimal.ZERO,\n-                    (acc, curr)-> acc.add(rate.multiply(BigDecimal\n-                        .valueOf(curr.timeSpent().toHours()))),\n-                    (acc, curr)-> acc);\n-        }\n+            totalAmount = this.tasks().stream().reduce(BigDecimal.ZERO,(acc, curr)-> acc.add(rate.multiply(BigDecimal.valueOf(curr.timeSpent().toHours()))),(acc, curr)-> acc);\n+    }\n         return totalAmount;\n     }\n \n     @Override\n     public List<InvoiceTask> tasks() {\n-        return this.storage.invoices().ofContract(this.contractId)\n-            .tasks(this.id);\n+        return this.storage.invoices().ofContract(this.contractId).tasks(this.id);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "100",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "77",
                    "column": "181",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "186",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/0/StoredInvoice.java\nindex 09ec484d37..4837b3242c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/0/StoredInvoice.java\n@@ -4,7 +4,6 @@ import com.selfxdsd.api.Contract;\n import com.selfxdsd.api.Invoice;\n import com.selfxdsd.api.InvoiceTask;\n import com.selfxdsd.api.storage.Storage;\n-\n import java.math.BigDecimal;\n import java.util.List;\n \n@@ -14,20 +13,28 @@ import java.util.List;\n  * @version $Id$\n  * @since 0.0.3\n  */\n+\n+\n public final class StoredInvoice implements Invoice {\n \n     /**\n      * Invoice id.\n      */\n+\n+\n     private final int id;\n     /**\n      * Self storage context.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Contract's id of this invoice.\n      */\n+\n+\n     private final Contract.Id contractId;\n \n     /**\n@@ -36,10 +43,9 @@ public final class StoredInvoice implements Invoice {\n      * @param storage Self storage context.\n      * @param contractId Contract's id of this invoice\n      */\n-    public StoredInvoice(\n-        final int id,\n-        final Storage storage,\n-        final Contract.Id contractId) {\n+\n+\n+    public StoredInvoice(final int id, final Storage storage, final Contract.Id contractId) {\n         this.id = id;\n         this.storage = storage;\n         this.contractId = contractId;\n@@ -57,28 +63,24 @@ public final class StoredInvoice implements Invoice {\n \n     @Override\n     public boolean isActive() {\n-        return this.storage.invoices().ofContract(this.contractId)\n-            .isActive(this.id);\n+        return this.storage.invoices().ofContract(this.contractId).isActive(this.id);\n     }\n \n     @Override\n     public BigDecimal totalAmount() {\n         final Contract contract = this.storage.contracts().findById(contractId);\n+\n+\n         BigDecimal totalAmount = BigDecimal.ZERO;\n-        if(contract != null){\n-            final BigDecimal rate = contract.hourlyRate();\n-            totalAmount = this.tasks().stream()\n-                .reduce(BigDecimal.ZERO,\n-                    (acc, curr)-> acc.add(rate.multiply(BigDecimal\n-                        .valueOf(curr.timeSpent().toHours()))),\n-                    (acc, curr)-> acc);\n-        }\n+        if( contract!= null) {\n+                                 final BigDecimal rate = contract.hourlyRate();\n+                                 totalAmount = this.tasks().stream().reduce(BigDecimal.ZERO, ( acc,curr)-> acc.add(rate.multiply(BigDecimal.valueOf(curr.timeSpent().toHours()))), ( acc,curr)-> acc);\n+                             }\n         return totalAmount;\n     }\n \n     @Override\n     public List<InvoiceTask> tasks() {\n-        return this.storage.invoices().ofContract(this.contractId)\n-            .tasks(this.id);\n+        return this.storage.invoices().ofContract(this.contractId).tasks(this.id);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/0/StoredInvoice.java\nindex 09ec484d37..b942ddc285 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/0/StoredInvoice.java\n@@ -65,7 +65,7 @@ public final class StoredInvoice implements Invoice {\n     public BigDecimal totalAmount() {\n         final Contract contract = this.storage.contracts().findById(contractId);\n         BigDecimal totalAmount = BigDecimal.ZERO;\n-        if(contract != null){\n+        if (contract != null){\n             final BigDecimal rate = contract.hourlyRate();\n             totalAmount = this.tasks().stream()\n                 .reduce(BigDecimal.ZERO,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/0/StoredInvoice.java\nindex 09ec484d37..b942ddc285 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/0/StoredInvoice.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/0/StoredInvoice.java\n@@ -65,7 +65,7 @@ public final class StoredInvoice implements Invoice {\n     public BigDecimal totalAmount() {\n         final Contract contract = this.storage.contracts().findById(contractId);\n         BigDecimal totalAmount = BigDecimal.ZERO;\n-        if(contract != null){\n+        if (contract != null){\n             final BigDecimal rate = contract.hourlyRate();\n             totalAmount = this.tasks().stream()\n                 .reduce(BigDecimal.ZERO,\n",
            "diff_size": 1
        }
    ]
}