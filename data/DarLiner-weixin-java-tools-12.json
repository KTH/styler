{
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Created by ecoolper on 2017/5/5.\n */\npublic class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n  public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n    super(requestHttp);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler/12/JoddMaterialUploadRequestExecutor.java\nindex a7a5509c08..d2c367fe35 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler/12/JoddMaterialUploadRequestExecutor.java\n@@ -22,41 +22,44 @@ import java.util.Map;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n-  public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n-    super(requestHttp);\n-  }\n-\n-  @Override\n-  public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n-    HttpRequest request = HttpRequest.post(uri);\n-    if (requestHttp.getRequestHttpProxy() != null) {\n-      requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n-    }\n-    request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n-    if (material == null) {\n-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n-    }\n-\n-    File file = material.getFile();\n-    if (file == null || !file.exists()) {\n-      throw new FileNotFoundException();\n-    }\n-    request.form(\"media\", file);\n-    Map<String, String> form = material.getForm();\n-    if (material.getForm() != null) {\n-      request.form(\"description\", WxGsonBuilder.create().toJson(form));\n-    }\n-\n-    HttpResponse response = request.send();\n-    response.charset(StringPool.UTF_8);\n-    String responseContent = response.bodyText();\n-    WxError error = WxError.fromJson(responseContent);\n-    if (error.getErrorCode() != 0) {\n-      throw new WxErrorException(error);\n-    } else {\n-      return WxMpMaterialUploadResult.fromJson(responseContent);\n-    }\n-  }\n-}\n+     public\n+\n+class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+   public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n+     super(requestHttp);\n+   }\n+\n+   @Override\n+   public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n+     HttpRequest request = HttpRequest.post(uri);\n+     if (requestHttp.getRequestHttpProxy() != null) {\n+       requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n+     }\n+     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n+\n+     if (material == null) {\n+       throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n+     }\n+\n+     File file = material.getFile();\n+     if (file == null || !file.exists()) {\n+       throw new FileNotFoundException();\n+     }\n+     request.form(\"media\", file);\n+     Map<String, String> form = material.getForm();\n+     if (material.getForm() != null) {\n+       request.form(\"description\", WxGsonBuilder.create().toJson(form));\n+     }\n+\n+     HttpResponse response = request.send();\n+     response.charset(StringPool.UTF_8);\n+     String responseContent = response.bodyText();\n+     WxError error = WxError.fromJson(responseContent);\n+     if (error.getErrorCode() != 0) {\n+       throw new WxErrorException(error);\n+     } else {\n+       return WxMpMaterialUploadResult.fromJson(responseContent);\n+     }\n+   }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/12/JoddMaterialUploadRequestExecutor.java\nindex a7a5509c08..178e050836 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/12/JoddMaterialUploadRequestExecutor.java\n@@ -22,7 +22,8 @@ import java.util.Map;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddMaterialUploadRequestExecutor\n+    extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/12/JoddMaterialUploadRequestExecutor.java\nindex a7a5509c08..82f0b61fde 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/12/JoddMaterialUploadRequestExecutor.java\n@@ -59,4 +59,4 @@ public class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExec\n       return WxMpMaterialUploadResult.fromJson(responseContent);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/12/JoddMaterialUploadRequestExecutor.java\nindex a7a5509c08..df9fde8dd6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/12/JoddMaterialUploadRequestExecutor.java\n@@ -5,7 +5,6 @@ import jodd.http.HttpRequest;\n import jodd.http.HttpResponse;\n import jodd.http.ProxyInfo;\n import jodd.util.StringPool;\n-\n import me.chanjar.weixin.common.bean.result.WxError;\n import me.chanjar.weixin.common.exception.WxErrorException;\n import me.chanjar.weixin.common.util.http.RequestHttp;\n@@ -13,7 +12,6 @@ import me.chanjar.weixin.common.util.json.WxGsonBuilder;\n import me.chanjar.weixin.mp.bean.material.WxMpMaterial;\n import me.chanjar.weixin.mp.bean.material.WxMpMaterialUploadResult;\n import me.chanjar.weixin.mp.util.http.MaterialUploadRequestExecutor;\n-\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n@@ -22,31 +20,33 @@ import java.util.Map;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n+\n+\n public class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n-  public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n+\n+    public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n-  }\n+    }\n \n-  @Override\n-  public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n+    @Override\n+    public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n     HttpRequest request = HttpRequest.post(uri);\n     if (requestHttp.getRequestHttpProxy() != null) {\n-      requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n+        requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n     }\n     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n     if (material == null) {\n-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n+        throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n     }\n \n     File file = material.getFile();\n     if (file == null || !file.exists()) {\n-      throw new FileNotFoundException();\n+        throw new FileNotFoundException();\n     }\n     request.form(\"media\", file);\n     Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n-      request.form(\"description\", WxGsonBuilder.create().toJson(form));\n+        request.form(\"description\", WxGsonBuilder.create().toJson(form));\n     }\n \n     HttpResponse response = request.send();\n@@ -54,9 +54,9 @@ public class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExec\n     String responseContent = response.bodyText();\n     WxError error = WxError.fromJson(responseContent);\n     if (error.getErrorCode() != 0) {\n-      throw new WxErrorException(error);\n+        throw new WxErrorException(error);\n     } else {\n       return WxMpMaterialUploadResult.fromJson(responseContent);\n     }\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_random/12/JoddMaterialUploadRequestExecutor.java\nindex a7a5509c08..d2c367fe35 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/12/JoddMaterialUploadRequestExecutor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_random/12/JoddMaterialUploadRequestExecutor.java\n@@ -22,41 +22,44 @@ import java.util.Map;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n-  public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n-    super(requestHttp);\n-  }\n-\n-  @Override\n-  public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n-    HttpRequest request = HttpRequest.post(uri);\n-    if (requestHttp.getRequestHttpProxy() != null) {\n-      requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n-    }\n-    request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n-    if (material == null) {\n-      throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n-    }\n-\n-    File file = material.getFile();\n-    if (file == null || !file.exists()) {\n-      throw new FileNotFoundException();\n-    }\n-    request.form(\"media\", file);\n-    Map<String, String> form = material.getForm();\n-    if (material.getForm() != null) {\n-      request.form(\"description\", WxGsonBuilder.create().toJson(form));\n-    }\n-\n-    HttpResponse response = request.send();\n-    response.charset(StringPool.UTF_8);\n-    String responseContent = response.bodyText();\n-    WxError error = WxError.fromJson(responseContent);\n-    if (error.getErrorCode() != 0) {\n-      throw new WxErrorException(error);\n-    } else {\n-      return WxMpMaterialUploadResult.fromJson(responseContent);\n-    }\n-  }\n-}\n+     public\n+\n+class JoddMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+   public JoddMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n+     super(requestHttp);\n+   }\n+\n+   @Override\n+   public WxMpMaterialUploadResult execute(String uri, WxMpMaterial material) throws WxErrorException, IOException {\n+     HttpRequest request = HttpRequest.post(uri);\n+     if (requestHttp.getRequestHttpProxy() != null) {\n+       requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n+     }\n+     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n+\n+     if (material == null) {\n+       throw new WxErrorException(WxError.builder().errorCode(-1).errorMsg(\"\u975e\u6cd5\u8bf7\u6c42\uff0cmaterial\u53c2\u6570\u4e3a\u7a7a\").build());\n+     }\n+\n+     File file = material.getFile();\n+     if (file == null || !file.exists()) {\n+       throw new FileNotFoundException();\n+     }\n+     request.form(\"media\", file);\n+     Map<String, String> form = material.getForm();\n+     if (material.getForm() != null) {\n+       request.form(\"description\", WxGsonBuilder.create().toJson(form));\n+     }\n+\n+     HttpResponse response = request.send();\n+     response.charset(StringPool.UTF_8);\n+     String responseContent = response.bodyText();\n+     WxError error = WxError.fromJson(responseContent);\n+     if (error.getErrorCode() != 0) {\n+       throw new WxErrorException(error);\n+     } else {\n+       return WxMpMaterialUploadResult.fromJson(responseContent);\n+     }\n+   }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}