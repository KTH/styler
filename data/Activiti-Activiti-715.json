{
    "error_id": "715",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/715/BoundaryEvent.java\nindex 9dd6b08394..287f2c2238 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/715/BoundaryEvent.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/715/BoundaryEvent.java\nindex 9dd6b08394..48ebf421e4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/715/BoundaryEvent.java\n@@ -1,60 +1,61 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n \n public class BoundaryEvent extends Event {\n \n-  @JsonIgnore\n-  protected Activity attachedToRef;\n-  protected String attachedToRefId;\n-  protected boolean cancelActivity = true;\n-\n-  public Activity getAttachedToRef() {\n-    return attachedToRef;\n-  }\n-\n-  public void setAttachedToRef(Activity attachedToRef) {\n-    this.attachedToRef = attachedToRef;\n-  }\n-\n-  public String getAttachedToRefId() {\n-    return attachedToRefId;\n-  }\n-\n-  public void setAttachedToRefId(String attachedToRefId) {\n-    this.attachedToRefId = attachedToRefId;\n-  }\n-\n-  public boolean isCancelActivity() {\n-    return cancelActivity;\n-  }\n-\n-  public void setCancelActivity(boolean cancelActivity) {\n-    this.cancelActivity = cancelActivity;\n-  }\n-\n-  public BoundaryEvent clone() {\n-    BoundaryEvent clone = new BoundaryEvent();\n-    clone.setValues(this);\n-    return clone;\n-  }\n-\n-  public void setValues(BoundaryEvent otherEvent) {\n-    super.setValues(otherEvent);\n-    setAttachedToRefId(otherEvent.getAttachedToRefId());\n-    setAttachedToRef(otherEvent.getAttachedToRef());\n-    setCancelActivity(otherEvent.isCancelActivity());\n-  }\n+    @JsonIgnore\n+    protected Activity attachedToRef;\n+    protected String attachedToRefId;\n+    protected boolean cancelActivity = true;\n+\n+    public Activity getAttachedToRef() {\n+        return attachedToRef;\n+    }\n+\n+    public void setAttachedToRef(Activity attachedToRef) {\n+        this.attachedToRef = attachedToRef;\n+    }\n+\n+    public String getAttachedToRefId() {\n+        return attachedToRefId;\n+    }\n+\n+    public void setAttachedToRefId(String attachedToRefId) {\n+        this.attachedToRefId = attachedToRefId;\n+    }\n+\n+    public boolean isCancelActivity() {\n+        return cancelActivity;\n+    }\n+\n+    public void setCancelActivity(boolean cancelActivity) {\n+        this.cancelActivity = cancelActivity;\n+    }\n+\n+    public BoundaryEvent clone() {\n+        BoundaryEvent clone = new BoundaryEvent();\n+        clone.setValues(this);\n+        return clone;\n+    }\n+\n+    public void setValues(BoundaryEvent otherEvent) {\n+        super.setValues(otherEvent);\n+        setAttachedToRefId(otherEvent.getAttachedToRefId());\n+        setAttachedToRef(otherEvent.getAttachedToRef());\n+        setCancelActivity(otherEvent.isCancelActivity());\n+    }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/715/BoundaryEvent.java\nindex 9dd6b08394..86a092f447 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/715/BoundaryEvent.java\n@@ -14,47 +14,46 @@ package org.activiti.bpmn.model;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n \n-public class BoundaryEvent extends Event {\n \n-  @JsonIgnore\n-  protected Activity attachedToRef;\n-  protected String attachedToRefId;\n-  protected boolean cancelActivity = true;\n+public class BoundaryEvent extends Event {\n \n-  public Activity getAttachedToRef() {\n+    @JsonIgnore protected Activity attachedToRef;\n+    protected String attachedToRefId;\n+    protected boolean cancelActivity = true;\n+    public Activity getAttachedToRef() {\n     return attachedToRef;\n-  }\n+    }\n \n-  public void setAttachedToRef(Activity attachedToRef) {\n+    public void setAttachedToRef(Activity attachedToRef) {\n     this.attachedToRef = attachedToRef;\n-  }\n+    }\n \n-  public String getAttachedToRefId() {\n+    public String getAttachedToRefId() {\n     return attachedToRefId;\n-  }\n+    }\n \n-  public void setAttachedToRefId(String attachedToRefId) {\n+    public void setAttachedToRefId(String attachedToRefId) {\n     this.attachedToRefId = attachedToRefId;\n-  }\n+    }\n \n-  public boolean isCancelActivity() {\n+    public boolean isCancelActivity() {\n     return cancelActivity;\n-  }\n+    }\n \n-  public void setCancelActivity(boolean cancelActivity) {\n+    public void setCancelActivity(boolean cancelActivity) {\n     this.cancelActivity = cancelActivity;\n-  }\n+    }\n \n-  public BoundaryEvent clone() {\n+    public BoundaryEvent clone() {\n     BoundaryEvent clone = new BoundaryEvent();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(BoundaryEvent otherEvent) {\n+    public void setValues(BoundaryEvent otherEvent) {\n     super.setValues(otherEvent);\n     setAttachedToRefId(otherEvent.getAttachedToRefId());\n     setAttachedToRef(otherEvent.getAttachedToRef());\n     setCancelActivity(otherEvent.isCancelActivity());\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/715/BoundaryEvent.java\nindex 9dd6b08394..287f2c2238 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/715/BoundaryEvent.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/715/BoundaryEvent.java\nindex 9dd6b08394..287f2c2238 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/715/BoundaryEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/715/BoundaryEvent.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n",
            "diff_size": 1
        }
    ]
}