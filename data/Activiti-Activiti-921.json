{
    "error_id": "921",
    "information": {
        "errors": [
            {
                "line": "99",
                "column": "33",
                "severity": "error",
                "message": "'+' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "                    if ( warningBuilder.length() > 0 ) {\n                        LOGGER.warn(\"Following warnings encountered during process validation: \"\n                                + warningBuilder.toString());\n                    }\n\n                    if ( errorBuilder.length() > 0 ) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/921/AbstractAutoDeploymentStrategy.java\nindex 165b2d2d5b..15b0a31a3c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/921/AbstractAutoDeploymentStrategy.java\n@@ -95,20 +95,20 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n \n                     // Write out warnings (if any)\n                     if ( warningBuilder.length() > 0 ) {\n-                        LOGGER.warn(\"Following warnings encountered during process validation: \"\n-                                + warningBuilder.toString());\n-                    }\n+                        LOGGER.warn(\"Following warnings encountered during process validation: \" +\n+                                                              warningBuilder.toString());\n+             }\n \n-                    if ( errorBuilder.length() > 0 ) {\n-                        LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n-                        return false;\n-                    }\n-                }\n-            }\n-        } catch ( Exception e ) {\n-            LOGGER.error(\"Error parsing XML\", e);\n-            return false;\n-        }\n-        return true;\n-    }\n+             if ( errorBuilder.length() > 0 ) {\n+                 LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n+                 return false;\n+             }\n+         }\n+     }\n+ } catch ( Exception e ) {\n+     LOGGER.error(\"Error parsing XML\", e);\n+     return false;\n+ }\n+ return true;\n+}\n }\n",
            "diff_size": 15
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "'+' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/921/AbstractAutoDeploymentStrategy.java\nindex 165b2d2d5b..4ad833a4c3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/921/AbstractAutoDeploymentStrategy.java\n@@ -30,8 +30,6 @@ import org.springframework.core.io.Resource;\n \n /**\n  * Abstract base class for implementations of {@link AutoDeploymentStrategy}.\n- * \n- * \n  */\n public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentStrategy {\n \n@@ -39,7 +37,7 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n \n     /**\n      * Gets the deployment mode this strategy handles.\n-     * \n+     *\n      * @return the name of the deployment mode\n      */\n     protected abstract String getDeploymentMode();\n@@ -51,7 +49,7 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n \n     /**\n      * Determines the name to be used for the provided resource.\n-     * \n+     *\n      * @param resource the resource to get the name for\n      * @return the name of the resource\n      */\n@@ -80,12 +78,12 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n             BpmnModel bpmnModel = converter.convertToBpmnModel(new InputStreamSource(resource.getInputStream()), true,\n                     false);\n             List<ValidationError> validationErrors = repositoryService.validateProcess(bpmnModel);\n-            if ( validationErrors != null && !validationErrors.isEmpty() ) {\n+            if (validationErrors != null && !validationErrors.isEmpty()) {\n                 StringBuilder warningBuilder = new StringBuilder();\n                 StringBuilder errorBuilder = new StringBuilder();\n \n                 for (ValidationError error : validationErrors) {\n-                    if ( error.isWarning() ) {\n+                    if (error.isWarning()) {\n                         warningBuilder.append(error.toString());\n                         warningBuilder.append(\"\\n\");\n                     } else {\n@@ -94,18 +92,18 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n                     }\n \n                     // Write out warnings (if any)\n-                    if ( warningBuilder.length() > 0 ) {\n+                    if (warningBuilder.length() > 0) {\n                         LOGGER.warn(\"Following warnings encountered during process validation: \"\n                                 + warningBuilder.toString());\n                     }\n \n-                    if ( errorBuilder.length() > 0 ) {\n+                    if (errorBuilder.length() > 0) {\n                         LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n                         return false;\n                     }\n                 }\n             }\n-        } catch ( Exception e ) {\n+        } catch (Exception e) {\n             LOGGER.error(\"Error parsing XML\", e);\n             return false;\n         }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 20, expected is 12, indentation should be the same level as line 97.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/921/AbstractAutoDeploymentStrategy.java\nindex 165b2d2d5b..580cadd34b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/921/AbstractAutoDeploymentStrategy.java\n@@ -15,7 +15,6 @@ package org.activiti.spring.autodeployment;\n \n import java.io.IOException;\n import java.util.List;\n-\n import org.activiti.bpmn.converter.BpmnXMLConverter;\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.engine.RepositoryService;\n@@ -33,6 +32,8 @@ import org.springframework.core.io.Resource;\n  * \n  * \n  */\n+\n+\n public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentStrategy {\n \n     protected static final Logger LOGGER = LoggerFactory.getLogger(AbstractAutoDeploymentStrategy.class);\n@@ -55,60 +56,58 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n      * @param resource the resource to get the name for\n      * @return the name of the resource\n      */\n-    protected String determineResourceName(final Resource resource) {\n-        String resourceName = null;\n \n-        if (resource instanceof ContextResource) {\n-            resourceName = ((ContextResource) resource).getPathWithinContext();\n-\n-        } else if (resource instanceof ByteArrayResource) {\n-            resourceName = resource.getDescription();\n-\n-        } else {\n-            try {\n-                resourceName = resource.getFile().getAbsolutePath();\n-            } catch (IOException e) {\n-                resourceName = resource.getFilename();\n-            }\n-        }\n-        return resourceName;\n+    protected String determineResourceName(final Resource resource) {\n+    String resourceName = null;\n+    if (resource instanceof ContextResource) {\n+        resourceName = ((ContextResource) resource).getPathWithinContext();\n+    } else if (resource instanceof ByteArrayResource) {\n+      resourceName = resource.getDescription();\n+    } else {\n+      try {\n+               resourceName = resource.getFile().getAbsolutePath();\n+      } catch (IOException e) {\n+        resourceName = resource.getFilename();\n+      }\n+    }\n+    return resourceName;\n     }\n \n     protected boolean validateModel(Resource resource, final RepositoryService repositoryService) {\n-        try {\n-            BpmnXMLConverter converter = new BpmnXMLConverter();\n-            BpmnModel bpmnModel = converter.convertToBpmnModel(new InputStreamSource(resource.getInputStream()), true,\n-                    false);\n-            List<ValidationError> validationErrors = repositoryService.validateProcess(bpmnModel);\n-            if ( validationErrors != null && !validationErrors.isEmpty() ) {\n-                StringBuilder warningBuilder = new StringBuilder();\n-                StringBuilder errorBuilder = new StringBuilder();\n-\n-                for (ValidationError error : validationErrors) {\n-                    if ( error.isWarning() ) {\n-                        warningBuilder.append(error.toString());\n-                        warningBuilder.append(\"\\n\");\n-                    } else {\n-                        errorBuilder.append(error.toString());\n-                        errorBuilder.append(\"\\n\");\n-                    }\n+    try {\n+        BpmnXMLConverter converter = new BpmnXMLConverter();\n+        BpmnModel bpmnModel = converter.convertToBpmnModel(new InputStreamSource(resource.getInputStream()),\n+                                                           true,\n+                                                           false);\n+        List<ValidationError> validationErrors = repositoryService.validateProcess(bpmnModel);\n+        if (validationErrors != null && !validationErrors.isEmpty()) {\n+            StringBuilder warningBuilder = new StringBuilder();\n+            StringBuilder errorBuilder = new StringBuilder();\n+            for (ValidationError error : validationErrors) {\n+            if (error.isWarning()) {\n+                                                               warningBuilder.append(error.toString());\n+                                                               warningBuilder.append(\"\\n\");\n+            } else {\n+                errorBuilder.append(error.toString());\n+                errorBuilder.append(\"\\n\");\n+            }\n \n                     // Write out warnings (if any)\n-                    if ( warningBuilder.length() > 0 ) {\n-                        LOGGER.warn(\"Following warnings encountered during process validation: \"\n-                                + warningBuilder.toString());\n-                    }\n \n-                    if ( errorBuilder.length() > 0 ) {\n-                        LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n-                        return false;\n-                    }\n-                }\n+            if (warningBuilder.length() > 0) {\n+                LOGGER.warn(\"Following warnings encountered during process validation: \" + warningBuilder.toString());\n+            }\n+\n+            if (errorBuilder.length() > 0) {\n+                LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n+                return false;\n+            }\n             }\n-        } catch ( Exception e ) {\n-            LOGGER.error(\"Error parsing XML\", e);\n-            return false;\n         }\n-        return true;\n+    } catch (Exception e) {\n+      LOGGER.error(\"Error parsing XML\", e);\n+      return false;\n+    }\n+    return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/921/AbstractAutoDeploymentStrategy.java\nindex 165b2d2d5b..63fbe544a6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/921/AbstractAutoDeploymentStrategy.java\n@@ -95,20 +95,19 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n \n                     // Write out warnings (if any)\n                     if ( warningBuilder.length() > 0 ) {\n-                        LOGGER.warn(\"Following warnings encountered during process validation: \"\n-                                + warningBuilder.toString());\n-                    }\n+                        LOGGER.warn(\"Following warnings encountered during process validation: \" + warningBuilder.toString());\n+            }\n \n-                    if ( errorBuilder.length() > 0 ) {\n-                        LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n-                        return false;\n-                    }\n-                }\n+            if ( errorBuilder.length() > 0 ) {\n+                LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n+                return false;\n             }\n-        } catch ( Exception e ) {\n-            LOGGER.error(\"Error parsing XML\", e);\n-            return false;\n         }\n-        return true;\n     }\n+} catch ( Exception e ) {\n+    LOGGER.error(\"Error parsing XML\", e);\n+    return false;\n+}\n+return true;\n+}\n }\n",
            "diff_size": 18
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/921/AbstractAutoDeploymentStrategy.java\nindex 165b2d2d5b..15b0a31a3c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/921/AbstractAutoDeploymentStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/921/AbstractAutoDeploymentStrategy.java\n@@ -95,20 +95,20 @@ public abstract class AbstractAutoDeploymentStrategy implements AutoDeploymentSt\n \n                     // Write out warnings (if any)\n                     if ( warningBuilder.length() > 0 ) {\n-                        LOGGER.warn(\"Following warnings encountered during process validation: \"\n-                                + warningBuilder.toString());\n-                    }\n+                        LOGGER.warn(\"Following warnings encountered during process validation: \" +\n+                                                              warningBuilder.toString());\n+             }\n \n-                    if ( errorBuilder.length() > 0 ) {\n-                        LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n-                        return false;\n-                    }\n-                }\n-            }\n-        } catch ( Exception e ) {\n-            LOGGER.error(\"Error parsing XML\", e);\n-            return false;\n-        }\n-        return true;\n-    }\n+             if ( errorBuilder.length() > 0 ) {\n+                 LOGGER.error(\"Errors while parsing:\\n\" + errorBuilder.toString());\n+                 return false;\n+             }\n+         }\n+     }\n+ } catch ( Exception e ) {\n+     LOGGER.error(\"Error parsing XML\", e);\n+     return false;\n+ }\n+ return true;\n+}\n }\n",
            "diff_size": 15
        }
    ]
}