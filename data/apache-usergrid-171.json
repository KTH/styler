{
    "error_id": "171",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Interface for scanning all index buckets.\n *\n * @author tnine\n */\npublic interface IndexScanner\n        extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/171/IndexScanner.java\nindex e5e9adb77f..ae1f85c695 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/171/IndexScanner.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.cassandra.index;\n \n \n@@ -30,22 +31,26 @@ import me.prettyprint.hector.api.beans.HColumn;\n  * @author tnine\n  */\n public interface IndexScanner\n-        extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {\n-\n-    /** Reset the scanner back to the start */\n-    void reset();\n-\n-    /**\n-     * Return the page size of the index\n-     * @return\n-     */\n-    int getPageSize();\n-\n-    /**\n-     * Return true if this iterator iterates in reverse\n-     * @return\n-     */\n-    boolean isReversed();\n+    extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {\n+\n+  /**\n+   * Reset the scanner back to the start\n+   */\n+  void reset();\n+\n+  /**\n+   * Return the page size of the index\n+   *\n+   * @return\n+   */\n+  int getPageSize();\n+\n+  /**\n+   * Return true if this iterator iterates in reverse\n+   *\n+   * @return\n+   */\n+  boolean isReversed();\n \n \n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/171/IndexScanner.java\nindex e5e9adb77f..63d2b4d096 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/171/IndexScanner.java\n@@ -29,8 +29,7 @@ import me.prettyprint.hector.api.beans.HColumn;\n  *\n  * @author tnine\n  */\n-public interface IndexScanner\n-        extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {\n+public interface IndexScanner extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {\n \n     /** Reset the scanner back to the start */\n     void reset();\n@@ -46,6 +45,4 @@ public interface IndexScanner\n      * @return\n      */\n     boolean isReversed();\n-\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/171/IndexScanner.java\nindex e5e9adb77f..02a548bbb4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/171/IndexScanner.java\n@@ -20,7 +20,6 @@ package org.apache.usergrid.persistence.cassandra.index;\n import java.nio.ByteBuffer;\n import java.util.Iterator;\n import java.util.List;\n-\n import me.prettyprint.hector.api.beans.HColumn;\n \n \n@@ -29,23 +28,26 @@ import me.prettyprint.hector.api.beans.HColumn;\n  *\n  * @author tnine\n  */\n-public interface IndexScanner\n-        extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {\n+\n+\n+public interface IndexScanner extends Iterable<List<HColumn<ByteBuffer, ByteBuffer>>>, Iterator<List<HColumn<ByteBuffer, ByteBuffer>>> {\n \n     /** Reset the scanner back to the start */\n+\n+\n     void reset();\n \n     /**\n      * Return the page size of the index\n      * @return\n      */\n+\n     int getPageSize();\n \n     /**\n      * Return true if this iterator iterates in reverse\n      * @return\n      */\n-    boolean isReversed();\n \n-\n-}\n+    boolean isReversed();\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/171/IndexScanner.java\nindex e5e9adb77f..3bf7f381c8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/171/IndexScanner.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/171/IndexScanner.java\n@@ -23,7 +23,6 @@ import java.util.List;\n \n import me.prettyprint.hector.api.beans.HColumn;\n \n-\n /**\n  * Interface for scanning all index buckets.\n  *\n",
            "diff_size": 1
        }
    ]
}