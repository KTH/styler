{
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "35",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class StreamElementCoderTest {\n\n  private final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n  private final Coder<StreamElement> coder = StreamElementCoder.of(repo);\n\n  @Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/36/StreamElementCoderTest.java\nindex 3c407ef02d..8ba675bb19 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/36/StreamElementCoderTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core.io;\n \n import static org.junit.Assert.assertTrue;\n@@ -32,7 +33,8 @@ import org.junit.Test;\n /** Test suite for {@link StreamElementCoder}. */\n public class StreamElementCoderTest {\n \n-  private final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n+  private final Repository repo =\n+      Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n   private final Coder<StreamElement> coder = StreamElementCoder.of(repo);\n \n   @Test\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/36/StreamElementCoderTest.java\nindex 3c407ef02d..5751cef8b6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/36/StreamElementCoderTest.java\n@@ -53,8 +53,9 @@ public class StreamElementCoderTest {\n             armed.getName(),\n             System.currentTimeMillis(),\n             new byte[] {1, 2, 3});\n-    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n     coder.encode(element, baos);\n     assertTrue(baos.toByteArray().length < 100);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/36/StreamElementCoderTest.java\nindex 3c407ef02d..0917a055a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/36/StreamElementCoderTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.beam.core.io;\n \n import static org.junit.Assert.assertTrue;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.repository.AttributeDescriptor;\n import cz.o2.proxima.repository.EntityDescriptor;\n@@ -30,31 +29,25 @@ import org.apache.beam.sdk.coders.Coder;\n import org.junit.Test;\n \n /** Test suite for {@link StreamElementCoder}. */\n+\n+\n public class StreamElementCoderTest {\n \n-  private final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n-  private final Coder<StreamElement> coder = StreamElementCoder.of(repo);\n+    private final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n+    private final Coder<StreamElement> coder = StreamElementCoder.of(repo);\n \n-  @Test\n-  public void testCoderSerializable() throws IOException, ClassNotFoundException {\n+    @Test\n+    public void testCoderSerializable() throws IOException, ClassNotFoundException {\n     TestUtils.assertSerializable(coder);\n-  }\n+    }\n \n-  @Test\n-  public void testCoderOutputReasonableSize() throws IOException {\n+    @Test\n+    public void testCoderOutputReasonableSize() throws IOException {\n     EntityDescriptor gateway = repo.getEntity(\"gateway\");\n     AttributeDescriptor<Object> armed = gateway.getAttribute(\"armed\");\n-    StreamElement element =\n-        StreamElement.upsert(\n-            gateway,\n-            armed,\n-            \"key\",\n-            UUID.randomUUID().toString(),\n-            armed.getName(),\n-            System.currentTimeMillis(),\n-            new byte[] {1, 2, 3});\n+    StreamElement element = StreamElement.upsert(gateway, armed, \"key\", UUID.randomUUID().toString(), armed.getName(), System.currentTimeMillis(), new byte[]{1, 2, 3});\n     ByteArrayOutputStream baos = new ByteArrayOutputStream();\n     coder.encode(element, baos);\n     assertTrue(baos.toByteArray().length < 100);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'\"test-reference.conf\"' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/36/StreamElementCoderTest.java\nindex 3c407ef02d..f95978a62a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/36/StreamElementCoderTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/36/StreamElementCoderTest.java\n@@ -32,7 +32,8 @@ import org.junit.Test;\n /** Test suite for {@link StreamElementCoder}. */\n public class StreamElementCoderTest {\n \n-  private final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\"));\n+  private final Repository repo = Repository .of(ConfigFactory.load(\n+  \"test-reference.conf\" ) );\n   private final Coder<StreamElement> coder = StreamElementCoder.of(repo);\n \n   @Test\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}