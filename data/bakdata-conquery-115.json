{
    "error_id": "115",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "/**\n * Query type that combines a set of {@link ConceptQuery}s which are separately evaluated\n * and whose results are merged. If a SpecialDateUnion is required, the result will hold \n * the union of all dates from the separate queries.\n */\n@Getter",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/115/ArrayQuery.java\nindex efee365232..fbfa3a6dd6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/115/ArrayQuery.java\n@@ -19,48 +19,48 @@ import lombok.Setter;\n \n /**\n  * Query type that combines a set of {@link ConceptQuery}s which are separately evaluated\n- * and whose results are merged. If a SpecialDateUnion is required, the result will hold \n+ * and whose results are merged. If a SpecialDateUnion is required, the result will hold\n  * the union of all dates from the separate queries.\n  */\n @Getter\n @Setter\n @CPSType(id = \"ARRAY_QUERY\", base = IQuery.class)\n public class ArrayQuery implements IQuery {\n-\tList<ConceptQuery> childQueries = new ArrayList<>();\n+    List<ConceptQuery> childQueries = new ArrayList<>();\n \n-\t@Override\n-\tpublic ArrayQuery resolve(QueryResolveContext context) {\n-\t\tfor(ConceptQuery child : childQueries) {\n-\t\t\tchild = child.resolve(context);\n-\t\t}\n-\t\treturn this;\n-\t}\n+    @Override\n+    public ArrayQuery resolve(QueryResolveContext context) {\n+        for (ConceptQuery child : childQueries) {\n+            child = child.resolve(context);\n+        }\n+        return this;\n+    }\n \n-\t@Override\n-\tpublic ArrayQueryPlan createQueryPlan(QueryPlanContext context) {\n-\t\t// Make sure the constructor and the adding is called with the same context.\n-\t\tArrayQueryPlan aq = new ArrayQueryPlan(context);\n-\t\taq.addChildPlans(childQueries, context);\n-\t\treturn aq;\n-\t}\n+    @Override\n+    public ArrayQueryPlan createQueryPlan(QueryPlanContext context) {\n+        // Make sure the constructor and the adding is called with the same context.\n+        ArrayQueryPlan aq = new ArrayQueryPlan(context);\n+        aq.addChildPlans(childQueries, context);\n+        return aq;\n+    }\n \n-\t@Override\n-\tpublic void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries) {\n-\t\tchildQueries.forEach(q -> q.collectRequiredQueries(requiredQueries));\n-\t}\n+    @Override\n+    public void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries) {\n+        childQueries.forEach(q -> q.collectRequiredQueries(requiredQueries));\n+    }\n \n-\t@Override\n-\tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tchildQueries.forEach(q -> q.collectResultInfos(collector));\n-\t\t// Remove DateInfo from each childQuery\n-\t\tcollector.getInfos().removeAll(List.of(ConqueryConstants.DATES_INFO));\n-\t\t// Add one DateInfo for the whole Query\n-\t\tcollector.getInfos().add(0, ConqueryConstants.DATES_INFO);\n-\t}\n+    @Override\n+    public void collectResultInfos(ResultInfoCollector collector) {\n+        childQueries.forEach(q -> q.collectResultInfos(collector));\n+        // Remove DateInfo from each childQuery\n+        collector.getInfos().removeAll(List.of(ConqueryConstants.DATES_INFO));\n+        // Add one DateInfo for the whole Query\n+        collector.getInfos().add(0, ConqueryConstants.DATES_INFO);\n+    }\n \n-\t@Override\n-\tpublic void visit(QueryVisitor visitor) {\n-\t\tchildQueries.forEach(q -> q.visit(visitor));\n-\t}\n+    @Override\n+    public void visit(QueryVisitor visitor) {\n+        childQueries.forEach(q -> q.visit(visitor));\n+    }\n \n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/115/ArrayQuery.java\nindex efee365232..6b34b8e893 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/115/ArrayQuery.java\n@@ -63,4 +63,4 @@ public class ArrayQuery implements IQuery {\n \t\tchildQueries.forEach(q -> q.visit(visitor));\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/115/ArrayQuery.java\nindex efee365232..82afd98b65 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/115/ArrayQuery.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.query.concept;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n-\n import com.bakdata.conquery.ConqueryConstants;\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n@@ -13,7 +12,6 @@ import com.bakdata.conquery.models.query.QueryResolveContext;\n import com.bakdata.conquery.models.query.queryplan.ArrayQueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n import com.bakdata.conquery.models.query.visitor.QueryVisitor;\n-\n import lombok.Getter;\n import lombok.Setter;\n \n@@ -22,45 +20,45 @@ import lombok.Setter;\n  * and whose results are merged. If a SpecialDateUnion is required, the result will hold \n  * the union of all dates from the separate queries.\n  */\n+\n @Getter\n @Setter\n-@CPSType(id = \"ARRAY_QUERY\", base = IQuery.class)\n+@CPSType(id= \"ARRAY_QUERY\", base= IQuery.class)\n public class ArrayQuery implements IQuery {\n-\tList<ConceptQuery> childQueries = new ArrayList<>();\n-\n-\t@Override\n-\tpublic ArrayQuery resolve(QueryResolveContext context) {\n-\t\tfor(ConceptQuery child : childQueries) {\n-\t\t\tchild = child.resolve(context);\n-\t\t}\n-\t\treturn this;\n-\t}\n \n-\t@Override\n-\tpublic ArrayQueryPlan createQueryPlan(QueryPlanContext context) {\n-\t\t// Make sure the constructor and the adding is called with the same context.\n-\t\tArrayQueryPlan aq = new ArrayQueryPlan(context);\n-\t\taq.addChildPlans(childQueries, context);\n-\t\treturn aq;\n-\t}\n+    List<ConceptQuery> childQueries = new ArrayList<>();\n+    @Override\n+    public ArrayQuery resolve(QueryResolveContext context) {\n+        for(ConceptQuery child : childQueries) {\n+            child = child.resolve(context);\n+        }\n+        return this;\n+    }\n \n-\t@Override\n-\tpublic void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries) {\n-\t\tchildQueries.forEach(q -> q.collectRequiredQueries(requiredQueries));\n-\t}\n+    @Override\n+    public ArrayQueryPlan createQueryPlan(QueryPlanContext context) {\n+        // Make sure the constructor and the adding is called with the same context.\n+        ArrayQueryPlan aq = new ArrayQueryPlan(context);\n+        aq.addChildPlans(childQueries, context);\n+        return aq;\n+    }\n \n-\t@Override\n-\tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tchildQueries.forEach(q -> q.collectResultInfos(collector));\n-\t\t// Remove DateInfo from each childQuery\n-\t\tcollector.getInfos().removeAll(List.of(ConqueryConstants.DATES_INFO));\n-\t\t// Add one DateInfo for the whole Query\n-\t\tcollector.getInfos().add(0, ConqueryConstants.DATES_INFO);\n-\t}\n+    @Override\n+    public void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries) {\n+        childQueries.forEach(q->q.collectRequiredQueries(requiredQueries));\n+    }\n \n-\t@Override\n-\tpublic void visit(QueryVisitor visitor) {\n-\t\tchildQueries.forEach(q -> q.visit(visitor));\n-\t}\n+    @Override\n+    public void collectResultInfos(ResultInfoCollector collector) {\n+        childQueries.forEach(q->q.collectResultInfos(collector));\n+        // Remove DateInfo from each childQuery\n+        collector.getInfos().removeAll(List.of(ConqueryConstants.DATES_INFO));\n+        // Add one DateInfo for the whole Query\n+        collector.getInfos().add(0, ConqueryConstants.DATES_INFO);\n+    }\n \n-}\n+    @Override\n+    public void visit(QueryVisitor visitor) {\n+        childQueries.forEach(q->q.visit(visitor));\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/115/ArrayQuery.java\nindex efee365232..08d4e4d400 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/115/ArrayQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/115/ArrayQuery.java\n@@ -15,13 +15,12 @@ import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n import com.bakdata.conquery.models.query.visitor.QueryVisitor;\n \n import lombok.Getter;\n-import lombok.Setter;\n-\n-/**\n+import lombok.Setter;/**\n  * Query type that combines a set of {@link ConceptQuery}s which are separately evaluated\n  * and whose results are merged. If a SpecialDateUnion is required, the result will hold \n  * the union of all dates from the separate queries.\n  */\n+\n @Getter\n @Setter\n @CPSType(id = \"ARRAY_QUERY\", base = IQuery.class)\n",
            "diff_size": 4
        }
    ]
}