{
    "error_id": "766",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/766/SquareLoss.java\nindex 85ceba041e..85d0c1fff1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/766/SquareLoss.java\n@@ -21,39 +21,39 @@ import com.tencent.angel.ml.math.vector.TDoubleVector;\n \n public class SquareLoss implements Loss {\n \n-  @Override\n-  public double loss(double dot, double y) {\n-    return (dot - y) * (dot - y) / 2.0;\n-  }\n-\n-  @Override\n-  public double grad(double dot, double y) {\n-    return (y - dot);\n-  }\n-\n-  @Override\n-  public double predict(TDoubleVector w, TAbstractVector x) {\n-    return w.dot(x);\n-  }\n-\n-  @Override\n-  public boolean isL2Reg() {\n-    return false;\n-  }\n-\n-  @Override\n-  public boolean isL1Reg() {\n-    return false;\n-  }\n-\n-  @Override\n-  public double getRegParam() {\n-    return 0;\n-  }\n-\n-  @Override\n-  public double getReg(TDoubleVector w) {\n-    return 0;\n-  }\n+    @Override\n+    public double loss(double dot, double y) {\n+        return (dot - y) * (dot - y) / 2.0;\n+    }\n+\n+    @Override\n+    public double grad(double dot, double y) {\n+        return (y - dot);\n+    }\n+\n+    @Override\n+    public double predict(TDoubleVector w, TAbstractVector x) {\n+        return w.dot(x);\n+    }\n+\n+    @Override\n+    public boolean isL2Reg() {\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean isL1Reg() {\n+        return false;\n+    }\n+\n+    @Override\n+    public double getRegParam() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public double getReg(TDoubleVector w) {\n+        return 0;\n+    }\n \n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/766/SquareLoss.java\nindex 85ceba041e..0f4e5323e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/766/SquareLoss.java\n@@ -20,7 +20,6 @@ import com.tencent.angel.ml.math.TAbstractVector;\n import com.tencent.angel.ml.math.vector.TDoubleVector;\n \n public class SquareLoss implements Loss {\n-\n   @Override\n   public double loss(double dot, double y) {\n     return (dot - y) * (dot - y) / 2.0;\n@@ -56,4 +55,4 @@ public class SquareLoss implements Loss {\n     return 0;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/766/SquareLoss.java\nindex 85ceba041e..c50a391732 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/766/SquareLoss.java\n@@ -21,39 +21,40 @@ import com.tencent.angel.ml.math.vector.TDoubleVector;\n \n public class SquareLoss implements Loss {\n \n-  @Override\n-  public double loss(double dot, double y) {\n+\n+    @Override\n+    public double loss(double dot, double y) {\n     return (dot - y) * (dot - y) / 2.0;\n-  }\n+    }\n \n-  @Override\n-  public double grad(double dot, double y) {\n+    @Override\n+    public double grad(double dot, double y) {\n     return (y - dot);\n-  }\n+    }\n \n-  @Override\n-  public double predict(TDoubleVector w, TAbstractVector x) {\n+    @Override\n+    public double predict(TDoubleVector w, TAbstractVector x) {\n     return w.dot(x);\n-  }\n+    }\n \n-  @Override\n-  public boolean isL2Reg() {\n+    @Override\n+    public boolean isL2Reg() {\n     return false;\n-  }\n+    }\n \n-  @Override\n-  public boolean isL1Reg() {\n+    @Override\n+    public boolean isL1Reg() {\n     return false;\n-  }\n+    }\n \n-  @Override\n-  public double getRegParam() {\n+    @Override\n+    public double getRegParam() {\n     return 0;\n-  }\n+    }\n \n-  @Override\n-  public double getReg(TDoubleVector w) {\n+    @Override\n+    public double getReg(TDoubleVector w) {\n     return 0;\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/766/SquareLoss.java\nindex 85ceba041e..2531b0e5fb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/766/SquareLoss.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/766/SquareLoss.java\n@@ -12,9 +12,7 @@\n  * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n- */\n-\n-package com.tencent.angel.ml.algorithm.optimizer.sgd;\n+ */ package com.tencent.angel.ml.algorithm.optimizer.sgd;\n \n import com.tencent.angel.ml.math.TAbstractVector;\n import com.tencent.angel.ml.math.vector.TDoubleVector;\n",
            "diff_size": 3
        }
    ]
}