{
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "1",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n/**\n * Convert a single GlskPoint to Scalable\n * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n */",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler/42/GlskPointScalableConverter.java\nindex 7435f2e5a3..31d8501481 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler/42/GlskPointScalableConverter.java\n@@ -22,7 +22,6 @@ import org.slf4j.LoggerFactory;\n import java.util.*;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to Scalable\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/intellij/42/GlskPointScalableConverter.java\nindex 7435f2e5a3..53715a10e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/intellij/42/GlskPointScalableConverter.java\n@@ -4,6 +4,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package com.farao_community.farao.data.glsk.import_.actors;\n \n import com.farao_community.farao.commons.FaraoException;\n@@ -25,6 +26,7 @@ import java.util.stream.Collectors;\n \n /**\n  * Convert a single GlskPoint to Scalable\n+ *\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n  */\n public final class GlskPointScalableConverter {\n@@ -35,7 +37,7 @@ public final class GlskPointScalableConverter {\n     }\n \n     /**\n-     * @param network IIDM network\n+     * @param network   IIDM network\n      * @param glskPoint GLSK Point\n      * @return powsybl-core Scalable\n      */\n@@ -73,7 +75,8 @@ public final class GlskPointScalableConverter {\n \n     /**\n      * convert merit order glsk point to scalable\n-     * @param network iidm network\n+     *\n+     * @param network   iidm network\n      * @param glskPoint glsk point merit order\n      * @return stack scalable\n      */\n@@ -110,10 +113,11 @@ public final class GlskPointScalableConverter {\n \n     /**\n      * convert country proportional glsk point to scalable\n-     * @param network iidm network\n+     *\n+     * @param network      iidm network\n      * @param glskShiftKey shift key\n-     * @param percentages list of percentage factor of scalable\n-     * @param scalables list of scalable\n+     * @param percentages  list of percentage factor of scalable\n+     * @param scalables    list of scalable\n      */\n     private static void convertCountryProportional(Network network, GlskShiftKey glskShiftKey, List<Float> percentages, List<Scalable> scalables) {\n         Country country = new EICode(glskShiftKey.getSubjectDomainmRID()).getCountry();\n@@ -122,30 +126,31 @@ public final class GlskPointScalableConverter {\n             LOGGER.debug(\"GLSK Type B42, empty registered resources list --> country (proportional) GSK\");\n             //calculate sum P of country's generators\n             double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Generator::getTargetP).sum();\n+                .mapToDouble(Generator::getTargetP).sum();\n             //calculate factor of each generator\n             network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n+                .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n             network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n+                .forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             LOGGER.debug(\"GLSK Type B42, empty registered resources list --> country (proportional) LSK\");\n             //calculate sum P of country's loads\n             double totalCountryP = network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Load::getP0).sum();\n+                .mapToDouble(Load::getP0).sum();\n             network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryP));\n+                .forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryP));\n             network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n+                .forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n         }\n     }\n \n     /**\n      * convert explicit glsk point to scalable\n-     * @param network iidm network\n+     *\n+     * @param network      iidm network\n      * @param glskShiftKey shift key\n-     * @param percentages list of percentage factor of scalable\n-     * @param scalables list of scalable\n+     * @param percentages  list of percentage factor of scalable\n+     * @param scalables    list of scalable\n      */\n     private static void convertExplicitProportional(Network network, GlskShiftKey glskShiftKey, List<Float> percentages, List<Scalable> scalables, TypeGlskFile typeGlskFile) {\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n@@ -154,26 +159,27 @@ public final class GlskPointScalableConverter {\n             double totalP = network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId())).mapToDouble(Generator::getTargetP).sum();\n             //calculate factor of each generator\n             network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId()))\n-                    .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n+                .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n             network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId()))\n-                    .forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n+                .forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             LOGGER.debug(\"GLSK Type B42, not empty registered resources list --> (explicit/manual) proportional LSK\");\n             List<String> loadsList = glskShiftKey.getRegisteredResourceArrayList().stream().map(loadResource -> loadResource.getLoadId(typeGlskFile)).collect(Collectors.toList());\n             double totalP = network.getLoadStream().filter(load -> loadsList.contains(load.getId())).mapToDouble(Load::getP0).sum();\n             network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalP));\n+                .forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalP));\n             network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n+                .forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n         }\n     }\n \n     /**\n      * convert participation factor glsk point to scalable\n-     * @param network iidm network\n+     *\n+     * @param network      iidm network\n      * @param glskShiftKey shift key\n-     * @param percentages list of percentage factor of scalable\n-     * @param scalables list of scalable\n+     * @param percentages  list of percentage factor of scalable\n+     * @param scalables    list of scalable\n      */\n     private static void convertParticipationFactor(Network network, GlskShiftKey glskShiftKey, List<Float> percentages, List<Scalable> scalables, TypeGlskFile typeGlskFile) {\n         List<GlskRegisteredResource> resourceList = glskShiftKey.getRegisteredResourceArrayList();\n@@ -181,23 +187,23 @@ public final class GlskPointScalableConverter {\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             LOGGER.debug(\"GLSK Type B43 GSK\");\n             double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n+                .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n+                .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n \n             resourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .forEach(generatorResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n+                .forEach(generatorResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n             resourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .forEach(generatorResource -> scalables.add(Scalable.onGenerator(generatorResource.getGeneratorId(typeGlskFile))));\n+                .forEach(generatorResource -> scalables.add(Scalable.onGenerator(generatorResource.getGeneratorId(typeGlskFile))));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             LOGGER.debug(\"GLSK Type B43 LSK\");\n             double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n+                .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n+                .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n \n             resourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .forEach(loadResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n+                .forEach(loadResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n             resourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .forEach(loadResource -> scalables.add(Scalable.onLoad(loadResource.getLoadId(typeGlskFile), -Double.MAX_VALUE, Double.MAX_VALUE)));\n+                .forEach(loadResource -> scalables.add(Scalable.onLoad(loadResource.getLoadId(typeGlskFile), -Double.MAX_VALUE, Double.MAX_VALUE)));\n         }\n     }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/naturalize/42/GlskPointScalableConverter.java\nindex 7435f2e5a3..2f0e657cff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/naturalize/42/GlskPointScalableConverter.java\n@@ -22,7 +22,6 @@ import org.slf4j.LoggerFactory;\n import java.util.*;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to Scalable\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n@@ -123,7 +122,8 @@ public final class GlskPointScalableConverter {\n             //calculate sum P of country's generators\n             double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n                     .mapToDouble(Generator::getTargetP).sum();\n-            //calculate factor of each generator\n+\n+//calculate factor of each generator\n             network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n                     .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n             network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n@@ -200,4 +200,4 @@ public final class GlskPointScalableConverter {\n                     .forEach(loadResource -> scalables.add(Scalable.onLoad(loadResource.getLoadId(typeGlskFile), -Double.MAX_VALUE, Double.MAX_VALUE)));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/codebuff/42/GlskPointScalableConverter.java\nindex 7435f2e5a3..716e28f40a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/codebuff/42/GlskPointScalableConverter.java\n@@ -18,7 +18,6 @@ import com.powsybl.iidm.network.Load;\n import com.powsybl.iidm.network.Network;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.*;\n import java.util.stream.Collectors;\n \n@@ -27,6 +26,8 @@ import java.util.stream.Collectors;\n  * Convert a single GlskPoint to Scalable\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n  */\n+\n+\n public final class GlskPointScalableConverter {\n     private static final Logger LOGGER = LoggerFactory.getLogger(GlskPointScalableConverter.class);\n \n@@ -39,9 +40,12 @@ public final class GlskPointScalableConverter {\n      * @param glskPoint GLSK Point\n      * @return powsybl-core Scalable\n      */\n+\n     public static Scalable convert(Network network, GlskPoint glskPoint, TypeGlskFile typeGlskFile) {\n         Objects.requireNonNull(glskPoint.getGlskShiftKeys());\n-        if (!glskPoint.getGlskShiftKeys().get(0).getBusinessType().equals(\"B45\")) {\n+        if (!glskPoint.getGlskShiftKeys().get(0)\n+.getBusinessType()\n+.equals(\"B45\")) {\n             //B42 and B43 proportional\n             if (glskPoint.getGlskShiftKeys().size() > 2) {\n                 throw new FaraoException(\"Multi shift keys not supported for proportional GLSK.\");\n@@ -49,20 +53,20 @@ public final class GlskPointScalableConverter {\n \n             List<Float> percentages = new ArrayList<>();\n             List<Scalable> scalables = new ArrayList<>();\n-\n             for (GlskShiftKey glskShiftKey : glskPoint.getGlskShiftKeys()) {\n-                if (glskShiftKey.getBusinessType().equals(\"B42\") && glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n+                if (glskShiftKey.getBusinessType().equals(\"B42\") &&\n+                    glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n                     //B42 country\n                     convertCountryProportional(network, glskShiftKey, percentages, scalables);\n                 } else if (glskShiftKey.getBusinessType().equals(\"B42\") && !glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n                     //B42 explicit\n-                    convertExplicitProportional(network, glskShiftKey, percentages, scalables, typeGlskFile);\n-                } else if (glskShiftKey.getBusinessType().equals(\"B43\") && !glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n+                           convertExplicitProportional(network, glskShiftKey, percentages, scalables, typeGlskFile);\n+                       } else if (glskShiftKey.getBusinessType().equals(\"B43\") && !glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n                     //B43 participation factor\n-                    convertParticipationFactor(network, glskShiftKey, percentages, scalables, typeGlskFile);\n-                } else {\n-                    throw new FaraoException(\"In convert glskShiftKey business type not supported\");\n-                }\n+                                  convertParticipationFactor(network, glskShiftKey, percentages, scalables, typeGlskFile);\n+                              } else {\n+                                  throw new FaraoException(\"In convert glskShiftKey business type not supported\");\n+                              }\n             }\n             return Scalable.proportional(percentages, scalables, true);\n         } else {\n@@ -77,9 +81,9 @@ public final class GlskPointScalableConverter {\n      * @param glskPoint glsk point merit order\n      * @return stack scalable\n      */\n+\n     private static Scalable convertMeritOrder(Network network, GlskPoint glskPoint, TypeGlskFile typeGlskFile) {\n         Objects.requireNonNull(network);\n-\n         Map<Integer, String> orders = new HashMap<>(); //Merit order position\n         int maxPosition = -1;\n         for (GlskShiftKey glskShiftKey : glskPoint.getGlskShiftKeys()) {\n@@ -94,9 +98,11 @@ public final class GlskPointScalableConverter {\n                     LOGGER.debug(String.format(\"MeritOrder ShiftKey changes %s MaxP value from %s to: %s\", generatorId, generator.getMaxP(), incomingMaxP));\n                     LOGGER.debug(String.format(\"MeritOrder ShiftKey changes %s MinP value from %s to: %s\", generatorId, generator.getMinP(), incomingMinP));\n                 }\n+\n                 generator.setMaxP(incomingMaxP);\n                 generator.setMinP(incomingMinP);\n             }\n+\n             orders.put(glskShiftKey.getMeritOrderPosition(), generatorId); //order Scalable according to position in a map\n             maxPosition = Math.max(maxPosition, glskShiftKey.getMeritOrderPosition()); //get max position\n         }\n@@ -115,29 +121,51 @@ public final class GlskPointScalableConverter {\n      * @param percentages list of percentage factor of scalable\n      * @param scalables list of scalable\n      */\n+\n     private static void convertCountryProportional(Network network, GlskShiftKey glskShiftKey, List<Float> percentages, List<Scalable> scalables) {\n         Country country = new EICode(glskShiftKey.getSubjectDomainmRID()).getCountry();\n-\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             LOGGER.debug(\"GLSK Type B42, empty registered resources list --> country (proportional) GSK\");\n             //calculate sum P of country's generators\n-            double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Generator::getTargetP).sum();\n+            double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel()\n+.getSubstation()\n+.getCountry()\n+.orElse(null)\n+.equals(country))\n+.mapToDouble(Generator::getTargetP)\n+.sum();\n             //calculate factor of each generator\n-            network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n-            network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n+            network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel()\n+.getSubstation()\n+.getCountry()\n+.orElse(null)\n+.equals(country)).forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n+            network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel()\n+.getSubstation()\n+.getCountry()\n+.orElse(null)\n+.equals(country)).forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n-            LOGGER.debug(\"GLSK Type B42, empty registered resources list --> country (proportional) LSK\");\n+                   LOGGER.debug(\"GLSK Type B42, empty registered resources list --> country (proportional) LSK\");\n             //calculate sum P of country's loads\n-            double totalCountryP = network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Load::getP0).sum();\n-            network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryP));\n-            network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n-        }\n+                   double totalCountryP = network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel()\n+.getSubstation()\n+.getCountry()\n+.orElse(null)\n+.equals(country))\n+.mapToDouble(Load::getP0)\n+.sum();\n+                   network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel()\n+.getSubstation()\n+.getCountry()\n+.orElse(null)\n+.equals(country)).forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryP));\n+                   network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel()\n+.getSubstation()\n+.getCountry()\n+.orElse(null)\n+.equals(country)).forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n+               }\n     }\n \n     /**\n@@ -147,25 +175,34 @@ public final class GlskPointScalableConverter {\n      * @param percentages list of percentage factor of scalable\n      * @param scalables list of scalable\n      */\n-    private static void convertExplicitProportional(Network network, GlskShiftKey glskShiftKey, List<Float> percentages, List<Scalable> scalables, TypeGlskFile typeGlskFile) {\n+\n+    private static void convertExplicitProportional(\n+        Network network,\n+        GlskShiftKey glskShiftKey,\n+        List<Float> percentages,\n+        List<Scalable> scalables, TypeGlskFile typeGlskFile) {\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             LOGGER.debug(\"GLSK Type B42, not empty registered resources list --> (explicit/manual) proportional GSK\");\n-            List<String> genenratorsList = glskShiftKey.getRegisteredResourceArrayList().stream().map(generatorResource -> generatorResource.getGeneratorId(typeGlskFile)).collect(Collectors.toList());\n-            double totalP = network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId())).mapToDouble(Generator::getTargetP).sum();\n+            List<String> genenratorsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n+.map(generatorResource -> generatorResource.getGeneratorId(typeGlskFile))\n+.collect(Collectors.toList());\n+            double totalP = network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId()))\n+.mapToDouble(Generator::getTargetP)\n+.sum();\n             //calculate factor of each generator\n-            network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId()))\n-                    .forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n-            network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId()))\n-                    .forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n+            network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId())).forEach(generator -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n+            network.getGeneratorStream().filter(generator -> genenratorsList.contains(generator.getId())).forEach(generator -> scalables.add(Scalable.onGenerator(generator.getId())));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n-            LOGGER.debug(\"GLSK Type B42, not empty registered resources list --> (explicit/manual) proportional LSK\");\n-            List<String> loadsList = glskShiftKey.getRegisteredResourceArrayList().stream().map(loadResource -> loadResource.getLoadId(typeGlskFile)).collect(Collectors.toList());\n-            double totalP = network.getLoadStream().filter(load -> loadsList.contains(load.getId())).mapToDouble(Load::getP0).sum();\n-            network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalP));\n-            network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n-        }\n+                   LOGGER.debug(\"GLSK Type B42, not empty registered resources list --> (explicit/manual) proportional LSK\");\n+                   List<String> loadsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n+.map(loadResource -> loadResource.getLoadId(typeGlskFile))\n+.collect(Collectors.toList());\n+                   double totalP = network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n+.mapToDouble(Load::getP0)\n+.sum();\n+                   network.getLoadStream().filter(load -> loadsList.contains(load.getId())).forEach(load -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalP));\n+                   network.getLoadStream().filter(load -> loadsList.contains(load.getId())).forEach(load -> scalables.add(Scalable.onLoad(load.getId(), -Double.MAX_VALUE, Double.MAX_VALUE)));\n+               }\n     }\n \n     /**\n@@ -175,29 +212,29 @@ public final class GlskPointScalableConverter {\n      * @param percentages list of percentage factor of scalable\n      * @param scalables list of scalable\n      */\n-    private static void convertParticipationFactor(Network network, GlskShiftKey glskShiftKey, List<Float> percentages, List<Scalable> scalables, TypeGlskFile typeGlskFile) {\n-        List<GlskRegisteredResource> resourceList = glskShiftKey.getRegisteredResourceArrayList();\n \n+    private static void convertParticipationFactor(\n+        Network network,\n+        GlskShiftKey glskShiftKey,\n+        List<Float> percentages,\n+        List<Scalable> scalables, TypeGlskFile typeGlskFile) {\n+        List<GlskRegisteredResource> resourceList = glskShiftKey.getRegisteredResourceArrayList();\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             LOGGER.debug(\"GLSK Type B43 GSK\");\n             double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n-\n-            resourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .forEach(generatorResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n-            resourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .forEach(generatorResource -> scalables.add(Scalable.onGenerator(generatorResource.getGeneratorId(typeGlskFile))));\n+.filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n+.mapToDouble(GlskRegisteredResource::getParticipationFactor)\n+.sum();\n+            resourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null).forEach(generatorResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n+            resourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null).forEach(generatorResource -> scalables.add(Scalable.onGenerator(generatorResource.getGeneratorId(typeGlskFile))));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n-            LOGGER.debug(\"GLSK Type B43 LSK\");\n-            double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n-\n-            resourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .forEach(loadResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n-            resourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .forEach(loadResource -> scalables.add(Scalable.onLoad(loadResource.getLoadId(typeGlskFile), -Double.MAX_VALUE, Double.MAX_VALUE)));\n-        }\n+                   LOGGER.debug(\"GLSK Type B43 LSK\");\n+                   double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n+.filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n+.mapToDouble(GlskRegisteredResource::getParticipationFactor)\n+.sum();\n+                   resourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null).forEach(loadResource -> percentages.add(100 * glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n+                   resourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null).forEach(loadResource -> scalables.add(Scalable.onLoad(loadResource.getLoadId(typeGlskFile), -Double.MAX_VALUE, Double.MAX_VALUE)));\n+               }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 110
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_random/42/GlskPointScalableConverter.java\nindex 7435f2e5a3..31d8501481 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_random/42/GlskPointScalableConverter.java\n@@ -22,7 +22,6 @@ import org.slf4j.LoggerFactory;\n import java.util.*;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to Scalable\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_three_grams/42/GlskPointScalableConverter.java\nindex 7435f2e5a3..0c4bf19066 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/errored/1/42/GlskPointScalableConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/farao-community-farao-core/styler_three_grams/42/GlskPointScalableConverter.java\n@@ -22,12 +22,10 @@ import org.slf4j.LoggerFactory;\n import java.util.*;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to Scalable\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n- */\n-public final class GlskPointScalableConverter {\n+ */ public final class GlskPointScalableConverter {\n     private static final Logger LOGGER = LoggerFactory.getLogger(GlskPointScalableConverter.class);\n \n     private GlskPointScalableConverter() {\n",
            "diff_size": 3
        }
    ]
}