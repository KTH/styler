{
    "error_id": "211",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/211/ValidationResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/211/ValidationResult.java\nindex 3815d0e351..099c960998 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/211/ValidationResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/211/ValidationResult.java\n@@ -21,121 +21,137 @@ package com.cloudera.director.client.latest.model;\n import java.util.Set;\n \n public class ValidationResult {\n-  /* Validation Errors */\n-  private Set<ErrorInfo> errors;\n-  /* Format Warnings */\n-  private Set<WarningInfo> formatWarnings;\n-  /* Validation Warnings */\n-  private Set<WarningInfo> warnings;\n-  public ValidationResult() { }\n-\n-  private ValidationResult(Set<ErrorInfo> errors, Set<WarningInfo> formatWarnings, Set<WarningInfo> warnings) {\n-    this.errors = errors;\n-    this.formatWarnings = formatWarnings;\n-    this.warnings = warnings;\n-  }\n-\n-  private ValidationResult(ValidationResultBuilder builder) {\n-    this.errors = builder.errors;\n-    this.formatWarnings = builder.formatWarnings;\n-    this.warnings = builder.warnings;\n-  }\n-\n-  public static ValidationResultBuilder builder() {\n-    return new ValidationResultBuilder();\n-  }\n-\n-  public static class ValidationResultBuilder {\n-    private Set<ErrorInfo> errors = null;\n-    private Set<WarningInfo> formatWarnings = null;\n-    private Set<WarningInfo> warnings = null;\n-\n-    public ValidationResultBuilder errors(Set<ErrorInfo> errors) {\n-      this.errors = errors;\n-      return this;\n+    /* Validation Errors */\n+    private Set<ErrorInfo> errors;\n+    /* Format Warnings */\n+    private Set<WarningInfo> formatWarnings;\n+    /* Validation Warnings */\n+    private Set<WarningInfo> warnings;\n+\n+    public ValidationResult() {\n     }\n \n-    public ValidationResultBuilder formatWarnings(Set<WarningInfo> formatWarnings) {\n-      this.formatWarnings = formatWarnings;\n-      return this;\n+    private ValidationResult(Set<ErrorInfo> errors, Set<WarningInfo> formatWarnings, Set<WarningInfo> warnings) {\n+        this.errors = errors;\n+        this.formatWarnings = formatWarnings;\n+        this.warnings = warnings;\n     }\n \n-    public ValidationResultBuilder warnings(Set<WarningInfo> warnings) {\n-      this.warnings = warnings;\n-      return this;\n+    private ValidationResult(ValidationResultBuilder builder) {\n+        this.errors = builder.errors;\n+        this.formatWarnings = builder.formatWarnings;\n+        this.warnings = builder.warnings;\n     }\n \n-    public ValidationResult build() {\n-      return new ValidationResult(this);\n+    public static ValidationResultBuilder builder() {\n+        return new ValidationResultBuilder();\n+    }\n+\n+    public static class ValidationResultBuilder {\n+        private Set<ErrorInfo> errors = null;\n+        private Set<WarningInfo> formatWarnings = null;\n+        private Set<WarningInfo> warnings = null;\n+\n+        public ValidationResultBuilder errors(Set<ErrorInfo> errors) {\n+            this.errors = errors;\n+            return this;\n+        }\n+\n+        public ValidationResultBuilder formatWarnings(Set<WarningInfo> formatWarnings) {\n+            this.formatWarnings = formatWarnings;\n+            return this;\n+        }\n+\n+        public ValidationResultBuilder warnings(Set<WarningInfo> warnings) {\n+            this.warnings = warnings;\n+            return this;\n+        }\n+\n+        public ValidationResult build() {\n+            return new ValidationResult(this);\n+        }\n+    }\n+\n+    public ValidationResultBuilder toBuilder() {\n+        return builder()\n+            .errors(errors)\n+            .formatWarnings(formatWarnings)\n+            .warnings(warnings)\n+            ;\n+    }\n+\n+    public Set<ErrorInfo> getErrors() {\n+        return errors;\n+    }\n+\n+    public void setErrors(Set<ErrorInfo> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Set<WarningInfo> getFormatWarnings() {\n+        return formatWarnings;\n+    }\n+\n+    public void setFormatWarnings(Set<WarningInfo> formatWarnings) {\n+        this.formatWarnings = formatWarnings;\n+    }\n+\n+    public Set<WarningInfo> getWarnings() {\n+        return warnings;\n+    }\n+\n+    public void setWarnings(Set<WarningInfo> warnings) {\n+        this.warnings = warnings;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        ValidationResult other = (ValidationResult) o; // NOPMD\n+\n+        if (errors != null ?\n+            !errors.equals(other.errors) :\n+            other.errors != null) {\n+            return false;\n+        }\n+        if (formatWarnings != null ?\n+            !formatWarnings.equals(other.formatWarnings) :\n+            other.formatWarnings != null) {\n+            return false;\n+        }\n+        if (warnings != null ?\n+            !warnings.equals(other.warnings) :\n+            other.warnings != null) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = 0;\n+        result = 31 * result + (errors != null ? errors.hashCode() : 0);\n+        result = 31 * result + (formatWarnings != null ? formatWarnings.hashCode() : 0);\n+        result = 31 * result + (warnings != null ? warnings.hashCode() : 0);\n+        return result;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        String newLine = System.getProperty(\"line.separator\");\n+        sb.append(\"class ValidationResult {\" + newLine);\n+        sb.append(\"  errors: \").append(errors).append(newLine);\n+        sb.append(\"  formatWarnings: \").append(formatWarnings).append(newLine);\n+        sb.append(\"  warnings: \").append(warnings).append(newLine);\n+        sb.append(\"}\" + newLine);\n+        return sb.toString();\n     }\n-  }\n-\n-  public ValidationResultBuilder toBuilder() {\n-    return builder()\n-      .errors(errors)\n-      .formatWarnings(formatWarnings)\n-      .warnings(warnings)\n-      ;\n-  }\n-  public Set<ErrorInfo> getErrors() {\n-    return errors;\n-  }\n-  public void setErrors(Set<ErrorInfo> errors) {\n-    this.errors = errors;\n-  }\n-\n-  public Set<WarningInfo> getFormatWarnings() {\n-    return formatWarnings;\n-  }\n-  public void setFormatWarnings(Set<WarningInfo> formatWarnings) {\n-    this.formatWarnings = formatWarnings;\n-  }\n-\n-  public Set<WarningInfo> getWarnings() {\n-    return warnings;\n-  }\n-  public void setWarnings(Set<WarningInfo> warnings) {\n-    this.warnings = warnings;\n-  }\n-\n-  @Override\n-  public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ValidationResult other = (ValidationResult) o; // NOPMD\n-\n-    if (errors != null ?\n-        !errors.equals(other.errors) :\n-        other.errors != null) return false;\n-    if (formatWarnings != null ?\n-        !formatWarnings.equals(other.formatWarnings) :\n-        other.formatWarnings != null) return false;\n-    if (warnings != null ?\n-        !warnings.equals(other.warnings) :\n-        other.warnings != null) return false;\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int result = 0;\n-    result = 31 * result + (errors != null ? errors.hashCode() : 0);\n-    result = 31 * result + (formatWarnings != null ? formatWarnings.hashCode() : 0);\n-    result = 31 * result + (warnings != null ? warnings.hashCode() : 0);\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString()  {\n-    StringBuilder sb = new StringBuilder();\n-    String newLine = System.getProperty(\"line.separator\");\n-    sb.append(\"class ValidationResult {\" + newLine);\n-    sb.append(\"  errors: \").append(errors).append(newLine);\n-    sb.append(\"  formatWarnings: \").append(formatWarnings).append(newLine);\n-    sb.append(\"  warnings: \").append(warnings).append(newLine);\n-    sb.append(\"}\" + newLine);\n-    return sb.toString();\n-  }\n }\n \n",
            "diff_size": 218
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "96",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/211/ValidationResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/211/ValidationResult.java\nindex 3815d0e351..aa89f766eb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/211/ValidationResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/211/ValidationResult.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.latest.model;\n@@ -27,7 +12,8 @@ public class ValidationResult {\n   private Set<WarningInfo> formatWarnings;\n   /* Validation Warnings */\n   private Set<WarningInfo> warnings;\n-  public ValidationResult() { }\n+\n+public ValidationResult() { }\n \n   private ValidationResult(Set<ErrorInfo> errors, Set<WarningInfo> formatWarnings, Set<WarningInfo> warnings) {\n     this.errors = errors;\n@@ -46,7 +32,8 @@ public class ValidationResult {\n   }\n \n   public static class ValidationResultBuilder {\n-    private Set<ErrorInfo> errors = null;\n+\n+  private Set<ErrorInfo> errors = null;\n     private Set<WarningInfo> formatWarnings = null;\n     private Set<WarningInfo> warnings = null;\n \n@@ -71,11 +58,9 @@ public class ValidationResult {\n   }\n \n   public ValidationResultBuilder toBuilder() {\n-    return builder()\n-      .errors(errors)\n+    return builder().errors(errors)\n       .formatWarnings(formatWarnings)\n-      .warnings(warnings)\n-      ;\n+      .warnings(warnings);\n   }\n   public Set<ErrorInfo> getErrors() {\n     return errors;\n@@ -101,19 +86,18 @@ public class ValidationResult {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ValidationResult other = (ValidationResult) o; // NOPMD\n-\n-    if (errors != null ?\n-        !errors.equals(other.errors) :\n-        other.errors != null) return false;\n-    if (formatWarnings != null ?\n-        !formatWarnings.equals(other.formatWarnings) :\n-        other.formatWarnings != null) return false;\n-    if (warnings != null ?\n-        !warnings.equals(other.warnings) :\n-        other.warnings != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    ValidationResult other = (ValidationResult) o;\n+\n+// NOPMD\n+\n+    if (errors != null ?!errors.equals(other.errors) : other.errors != null) return false;\n+\n+if (formatWarnings != null ?!formatWarnings.equals(other.formatWarnings) : other.formatWarnings != null) return false;\n+\n+if (warnings != null ?!warnings.equals(other.warnings) : other.warnings != null) return false;\n     return true;\n   }\n \n@@ -127,7 +111,7 @@ public class ValidationResult {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ValidationResult {\" + newLine);\n@@ -137,5 +121,4 @@ public class ValidationResult {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "36",
                    "column": "31",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "36",
                    "column": "32",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "column": "47",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "52",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "31",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "31",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "76",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "58",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "42",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "50",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "77",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "65",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/211/ValidationResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/211/ValidationResult.java\nindex 3815d0e351..f9b675fe69 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/211/ValidationResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/211/ValidationResult.java\n@@ -20,114 +20,126 @@ package com.cloudera.director.client.latest.model;\n \n import java.util.Set;\n \n+\n public class ValidationResult {\n   /* Validation Errors */\n-  private Set<ErrorInfo> errors;\n+\n+    private Set<ErrorInfo> errors;\n   /* Format Warnings */\n-  private Set<WarningInfo> formatWarnings;\n+\n+    private Set<WarningInfo> formatWarnings;\n   /* Validation Warnings */\n-  private Set<WarningInfo> warnings;\n-  public ValidationResult() { }\n \n-  private ValidationResult(Set<ErrorInfo> errors, Set<WarningInfo> formatWarnings, Set<WarningInfo> warnings) {\n-    this.errors = errors;\n-    this.formatWarnings = formatWarnings;\n-    this.warnings = warnings;\n-  }\n+    private Set<WarningInfo> warnings;\n+\n+\n+    public ValidationResult() {}\n \n-  private ValidationResult(ValidationResultBuilder builder) {\n-    this.errors = builder.errors;\n-    this.formatWarnings = builder.formatWarnings;\n-    this.warnings = builder.warnings;\n-  }\n+    private ValidationResult(Set<ErrorInfo> errors, Set<WarningInfo> formatWarnings, Set<WarningInfo> warnings) {\n+                                                                                                                this.errors = errors;\n+                                                                                                                this.formatWarnings = formatWarnings;\n+                                                                                                                this.warnings = warnings;\n+                              }\n \n-  public static ValidationResultBuilder builder() {\n+    private ValidationResult(ValidationResultBuilder builder) {\n+                                                              this.errors = builder.errors;\n+                                                              this.formatWarnings = builder.formatWarnings;\n+                                                              this.warnings = builder.warnings;\n+                              }\n+\n+    public static ValidationResultBuilder builder() {\n     return new ValidationResultBuilder();\n-  }\n+    }\n+\n+    public static class ValidationResultBuilder {\n \n-  public static class ValidationResultBuilder {\n     private Set<ErrorInfo> errors = null;\n+\n     private Set<WarningInfo> formatWarnings = null;\n+\n     private Set<WarningInfo> warnings = null;\n \n     public ValidationResultBuilder errors(Set<ErrorInfo> errors) {\n-      this.errors = errors;\n-      return this;\n+        this.errors = errors;\n+        return this;\n     }\n \n     public ValidationResultBuilder formatWarnings(Set<WarningInfo> formatWarnings) {\n-      this.formatWarnings = formatWarnings;\n-      return this;\n+        this.formatWarnings = formatWarnings;\n+        return this;\n     }\n \n     public ValidationResultBuilder warnings(Set<WarningInfo> warnings) {\n-      this.warnings = warnings;\n-      return this;\n+        this.warnings = warnings;\n+        return this;\n     }\n \n     public ValidationResult build() {\n-      return new ValidationResult(this);\n-    }\n-  }\n-\n-  public ValidationResultBuilder toBuilder() {\n-    return builder()\n-      .errors(errors)\n-      .formatWarnings(formatWarnings)\n-      .warnings(warnings)\n-      ;\n-  }\n-  public Set<ErrorInfo> getErrors() {\n+        return new ValidationResult(this);\n+    }\n+    }\n+\n+    public ValidationResultBuilder toBuilder() {\n+    return builder().errors(errors)\n+                    .formatWarnings(formatWarnings)\n+                    .warnings(warnings);\n+    }\n+\n+    public Set<ErrorInfo> getErrors() {\n     return errors;\n-  }\n-  public void setErrors(Set<ErrorInfo> errors) {\n+    }\n+\n+    public void setErrors(Set<ErrorInfo> errors) {\n     this.errors = errors;\n-  }\n+    }\n \n-  public Set<WarningInfo> getFormatWarnings() {\n+    public Set<WarningInfo> getFormatWarnings() {\n     return formatWarnings;\n-  }\n-  public void setFormatWarnings(Set<WarningInfo> formatWarnings) {\n+    }\n+\n+    public void setFormatWarnings(Set<WarningInfo> formatWarnings) {\n     this.formatWarnings = formatWarnings;\n-  }\n+    }\n \n-  public Set<WarningInfo> getWarnings() {\n+    public Set<WarningInfo> getWarnings() {\n     return warnings;\n-  }\n-  public void setWarnings(Set<WarningInfo> warnings) {\n+    }\n+\n+    public void setWarnings(Set<WarningInfo> warnings) {\n     this.warnings = warnings;\n-  }\n+    }\n+\n \n-  @Override\n-  public boolean equals(Object o) {\n+    @Override\n+    public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ValidationResult other = (ValidationResult) o; // NOPMD\n-\n-    if (errors != null ?\n-        !errors.equals(other.errors) :\n-        other.errors != null) return false;\n-    if (formatWarnings != null ?\n-        !formatWarnings.equals(other.formatWarnings) :\n-        other.formatWarnings != null) return false;\n-    if (warnings != null ?\n-        !warnings.equals(other.warnings) :\n-        other.warnings != null) return false;\n+\n+    if (o == null ||\n+        getClass() != o.getClass()) return false;\n+\n+    ValidationResult other = (ValidationResult)o; // NOPMD\n+\n+    if (errors != null?!errors.equals(other.errors): other.errors != null) return false;\n+\n+    if (formatWarnings != null?!formatWarnings.equals(other.formatWarnings): other.formatWarnings != null) return false;\n+\n+    if (warnings != null?!warnings.equals(other.warnings): other.warnings != null) return false;\n     return true;\n-  }\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (errors != null ? errors.hashCode() : 0);\n-    result = 31 * result + (formatWarnings != null ? formatWarnings.hashCode() : 0);\n-    result = 31 * result + (warnings != null ? warnings.hashCode() : 0);\n+    result = 31 *result + (errors != null? errors.hashCode(): 0);\n+    result = 31 *result + (formatWarnings != null? formatWarnings.hashCode(): 0);\n+    result = 31 *result + (warnings != null? warnings.hashCode(): 0);\n     return result;\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString()  {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ValidationResult {\" + newLine);\n@@ -136,6 +148,5 @@ public class ValidationResult {\n     sb.append(\"  warnings: \").append(warnings).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n-  }\n-}\n-\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 92
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}