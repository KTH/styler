{
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "18",
                "column": "28",
                "severity": "error",
                "message": "'}' at column 28 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public final class SecurityUtils {\n\n  private SecurityUtils() {}\n\n  /**\n   * Get the login of the current user.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/26/SecurityUtils.java\nindex 738661ac28..be5d0126dd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/26/SecurityUtils.java\n@@ -15,7 +15,8 @@ import org.springframework.security.core.userdetails.UserDetails;\n  */\n public final class SecurityUtils {\n \n-  private SecurityUtils() {}\n+  private SecurityUtils() {\n+  }\n \n   /**\n    * Get the login of the current user.\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/26/SecurityUtils.java\nindex 738661ac28..e1808fe45c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/26/SecurityUtils.java\n@@ -95,4 +95,4 @@ public final class SecurityUtils {\n     return user.getAuthorities().stream()\n         .anyMatch(userAuthority -> userAuthority.getName().equals(authority));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 59, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/26/SecurityUtils.java\nindex 738661ac28..4817121ec7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/26/SecurityUtils.java\n@@ -1,7 +1,6 @@\n package eu.dzhw.fdz.metadatamanagement.usermanagement.security;\n \n import java.util.Collection;\n-\n import eu.dzhw.fdz.metadatamanagement.usermanagement.domain.User;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n@@ -13,86 +12,102 @@ import org.springframework.security.core.userdetails.UserDetails;\n /**\n  * Utility class for Spring Security.\n  */\n+\n+\n public final class SecurityUtils {\n \n-  private SecurityUtils() {}\n+    private SecurityUtils() {\n+    }\n \n   /**\n    * Get the login of the current user.\n    */\n-  public static String getCurrentUserLogin() {\n+\n+    public static String getCurrentUserLogin() {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n     Authentication authentication = securityContext.getAuthentication();\n     String userName = null;\n     if (authentication != null) {\n-      if (authentication.getPrincipal() instanceof UserDetails) {\n-        UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();\n-        userName = springSecurityUser.getUsername();\n-      } else if (authentication.getPrincipal() instanceof String) {\n-        userName = (String) authentication.getPrincipal();\n-      }\n+        if (authentication.getPrincipal() instanceof UserDetails) {\n+                                    UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();\n+                                    userName = springSecurityUser.getUsername();\n+        } else if (authentication.getPrincipal() instanceof String) {\n+                                    userName = (String) authentication.getPrincipal();\n+               }\n     }\n+\n     return userName;\n-  }\n+    }\n \n   /**\n    * Check if a user is authenticated.\n    *\n    * @return true if the user is authenticated, false otherwise\n    */\n-  public static boolean isAuthenticated() {\n+\n+\n+    public static boolean isAuthenticated() {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n-    Collection<? extends GrantedAuthority> authorities =\n-        securityContext.getAuthentication().getAuthorities();\n+    Collection<? extends GrantedAuthority> authorities = securityContext.getAuthentication().getAuthorities();\n     if (authorities != null) {\n-      for (GrantedAuthority authority : authorities) {\n+        for (GrantedAuthority authority : authorities) {\n         if (authority.getAuthority().equals(AuthoritiesConstants.ANONYMOUS)) {\n-          return false;\n+                                                           return false;\n+        }\n         }\n-      }\n     }\n+\n     return true;\n-  }\n+    }\n \n   /**\n    * Return the current user id, or throws an exception, if the user is not authenticated yet.\n    *\n    * @return the current user id\n    */\n-  public static String getCurrentUserId() {\n+\n+\n+    public static String getCurrentUserId() {\n     return getCurrentUser().getId();\n-  }\n+    }\n \n   /**\n    * Return the current user, or throws an exception, if the user is not authenticated yet.\n    *\n    * @return the current user\n    */\n-  public static CustomUserDetails getCurrentUser() {\n+\n+\n+    public static CustomUserDetails getCurrentUser() {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n     Authentication authentication = securityContext.getAuthentication();\n     if (authentication != null && authentication.getPrincipal() instanceof CustomUserDetails) {\n-      return (CustomUserDetails) authentication.getPrincipal();\n+        return (CustomUserDetails) authentication.getPrincipal();\n     }\n     throw new IllegalStateException(\"User not found!\");\n-  }\n+    }\n \n   /**\n    * If the current user has a specific authority (security role). The name of this method comes\n    * from the isUserInRole() method in the Servlet API.\n    */\n-  public static boolean isUserInRole(String authority) {\n+\n+\n+    public static boolean isUserInRole(String authority) {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n     Authentication authentication = securityContext.getAuthentication();\n     if (authentication != null && authentication.getPrincipal() instanceof UserDetails) {\n-      UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();\n-      return springSecurityUser.getAuthorities().contains(new SimpleGrantedAuthority(authority));\n+        UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();\n+        return springSecurityUser.getAuthorities().contains(new SimpleGrantedAuthority(authority));\n     }\n+\n     return false;\n-  }\n+    }\n+\n \n-  public static boolean isUserInRole(String authority, User user) {\n+    public static boolean isUserInRole(String authority,\n+        User user) {\n     return user.getAuthorities().stream()\n-        .anyMatch(userAuthority -> userAuthority.getName().equals(authority));\n-  }\n-}\n+                                .anyMatch(userAuthority -> userAuthority.getName().equals(authority));\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/26/SecurityUtils.java\nindex 738661ac28..c3e38ffd10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/26/SecurityUtils.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/26/SecurityUtils.java\n@@ -15,9 +15,9 @@ import org.springframework.security.core.userdetails.UserDetails;\n  */\n public final class SecurityUtils {\n \n-  private SecurityUtils() {}\n+  private SecurityUtils() {\n \n-  /**\n+  } /**\n    * Get the login of the current user.\n    */\n   public static String getCurrentUserLogin() {\n",
            "diff_size": 2
        }
    ]
}