{
    "error_id": "315",
    "information": {
        "errors": [
            {
                "line": "78",
                "column": "84",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t * Inner class that matches any credentials.\n\t */\n\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n\n\t\t@Override\n\t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/315/AllGrantedRealm.java\nindex b32959e5ec..cae834ee1f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/315/AllGrantedRealm.java\n@@ -38,7 +38,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n \t\t\t\" \u00a7                    \u00a7\\n\" +\n \t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n+\n \t/**\n \t * Standard constructor.\n \t */\n@@ -61,7 +61,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n \t}\n-\t\n+\n \t/**\n \t * Inner class that represents a permission, that is always valid.\n \t */\n@@ -71,17 +71,17 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\treturn true;\n \t\t}\n \t}\n-\t\n+\n \t/**\n \t * Inner class that matches any credentials.\n \t */\n-\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n+\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher {\n \n \t\t@Override\n \t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n \t\t\treturn true;\n \t\t}\n-\t\t\n+\n \t}\n \n }\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/315/AllGrantedRealm.java\nindex b32959e5ec..925f1b2ae3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/315/AllGrantedRealm.java\n@@ -22,66 +22,66 @@ import lombok.extern.slf4j.Slf4j;\n  */\n @Slf4j\n public class AllGrantedRealm extends AuthorizingRealm {\n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\" +\n-\t\t\t\"           \u00a7\u00a7\\n\" +\n-\t\t\t\"          \u00a7  \u00a7\\n\" +\n-\t\t\t\"         \u00a7    \u00a7\\n\" +\n-\t\t\t\"        \u00a7      \u00a7\\n\" +\n-\t\t\t\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n-\t\t\t\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n-\t\t\t\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n-\t\t\t\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n-\t\t\t\"   $                \u00a7\\n\" +\n-\t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n-\t\t\t\" \u00a7                    \u00a7\\n\" +\n-\t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic AllGrantedRealm() {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(ConqueryToken.class);\n-\t\tthis.setCredentialsMatcher(new AllGrantedCredentialsMatcher());\n-\t}\n+    /**\n+     * The warning that is displayed, when the realm is instantiated.\n+     */\n+    private static final String WARNING = \"\\n\" +\n+        \"           \u00a7\u00a7\\n\" +\n+        \"          \u00a7  \u00a7\\n\" +\n+        \"         \u00a7    \u00a7\\n\" +\n+        \"        \u00a7      \u00a7\\n\" +\n+        \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n+        \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n+        \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n+        \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n+        \"   $                \u00a7\\n\" +\n+        \"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n+        \" \u00a7                    \u00a7\\n\" +\n+        \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n \n-\t@Override\n-\tprotected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n-\t\tSet<Permission> permissions = new HashSet<Permission>();\n-\t\tpermissions.add(new AllGrantedPermission());\n-\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n-\t\tinfo.addObjectPermissions(permissions);\n-\t\treturn info;\n-\t}\n+    /**\n+     * Standard constructor.\n+     */\n+    public AllGrantedRealm() {\n+        log.warn(WARNING);\n+        this.setAuthenticationTokenClass(ConqueryToken.class);\n+        this.setCredentialsMatcher(new AllGrantedCredentialsMatcher());\n+    }\n \n-\t@Override\n-\tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n-\t}\n-\t\n-\t/**\n-\t * Inner class that represents a permission, that is always valid.\n-\t */\n-\tprivate static class AllGrantedPermission implements Permission {\n-\t\t@Override\n-\t\tpublic boolean implies(Permission permission) {\n-\t\t\treturn true;\n-\t\t}\n-\t}\n-\t\n-\t/**\n-\t * Inner class that matches any credentials.\n-\t */\n-\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n+    @Override\n+    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n+        Set<Permission> permissions = new HashSet<Permission>();\n+        permissions.add(new AllGrantedPermission());\n+        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n+        info.addObjectPermissions(permissions);\n+        return info;\n+    }\n \n-\t\t@Override\n-\t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n-\t\t\treturn true;\n-\t\t}\n-\t\t\n-\t}\n+    @Override\n+    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        return new SingleAuthenticationInfo(DevAuthConfig.USER.getId(), token.getCredentials());\n+    }\n+\n+    /**\n+     * Inner class that represents a permission, that is always valid.\n+     */\n+    private static class AllGrantedPermission implements Permission {\n+        @Override\n+        public boolean implies(Permission permission) {\n+            return true;\n+        }\n+    }\n+\n+    /**\n+     * Inner class that matches any credentials.\n+     */\n+    private static class AllGrantedCredentialsMatcher implements CredentialsMatcher {\n+\n+        @Override\n+        public boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n+            return true;\n+        }\n+\n+    }\n \n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/315/AllGrantedRealm.java\nindex b32959e5ec..3670d81461 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/315/AllGrantedRealm.java\n@@ -25,20 +25,8 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t/**\n \t * The warning that is displayed, when the realm is instantiated.\n \t */\n-\tprivate static final String WARNING = \"\\n\" +\n-\t\t\t\"           \u00a7\u00a7\\n\" +\n-\t\t\t\"          \u00a7  \u00a7\\n\" +\n-\t\t\t\"         \u00a7    \u00a7\\n\" +\n-\t\t\t\"        \u00a7      \u00a7\\n\" +\n-\t\t\t\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n-\t\t\t\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n-\t\t\t\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n-\t\t\t\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n-\t\t\t\"   $                \u00a7\\n\" +\n-\t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n-\t\t\t\" \u00a7                    \u00a7\\n\" +\n-\t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n+\tprivate static final String WARNING = \"\\n\" + \"           \u00a7\u00a7\\n\" + \"          \u00a7  \u00a7\\n\" + \"         \u00a7    \u00a7\\n\" + \"        \u00a7      \u00a7\\n\" + \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" + \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" + \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" + \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" + \"   $                \u00a7\\n\" + \"  \u00a7        \u00a7\u00a7        \u00a7\\n\" + \" \u00a7                    \u00a7\\n\" + \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+\n \t/**\n \t * Standard constructor.\n \t */\n@@ -52,7 +40,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \tprotected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n \t\tSet<Permission> permissions = new HashSet<Permission>();\n \t\tpermissions.add(new AllGrantedPermission());\n-\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n+\t\tSimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n \t\tinfo.addObjectPermissions(permissions);\n \t\treturn info;\n \t}\n@@ -75,7 +63,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t/**\n \t * Inner class that matches any credentials.\n \t */\n-\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n+\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher {\n \n \t\t@Override\n \t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n@@ -84,4 +72,4 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/315/AllGrantedRealm.java\nindex b32959e5ec..d6c1687b9f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/315/AllGrantedRealm.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.models.auth;\n \n import java.util.HashSet;\n import java.util.Set;\n-\n import org.apache.shiro.authc.AuthenticationException;\n import org.apache.shiro.authc.AuthenticationInfo;\n import org.apache.shiro.authc.AuthenticationToken;\n@@ -12,76 +11,66 @@ import org.apache.shiro.authz.Permission;\n import org.apache.shiro.authz.SimpleAuthorizationInfo;\n import org.apache.shiro.realm.AuthorizingRealm;\n import org.apache.shiro.subject.PrincipalCollection;\n-\n import com.bakdata.conquery.models.auth.util.SingleAuthenticationInfo;\n-\n import lombok.extern.slf4j.Slf4j;\n \n /**\n  * This realm authenticates and authorizes all requests given to it positive.\n  */\n+\n @Slf4j\n public class AllGrantedRealm extends AuthorizingRealm {\n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\" +\n-\t\t\t\"           \u00a7\u00a7\\n\" +\n-\t\t\t\"          \u00a7  \u00a7\\n\" +\n-\t\t\t\"         \u00a7    \u00a7\\n\" +\n-\t\t\t\"        \u00a7      \u00a7\\n\" +\n-\t\t\t\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n-\t\t\t\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n-\t\t\t\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n-\t\t\t\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n-\t\t\t\"   $                \u00a7\\n\" +\n-\t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n-\t\t\t\" \u00a7                    \u00a7\\n\" +\n-\t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic AllGrantedRealm() {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(ConqueryToken.class);\n-\t\tthis.setCredentialsMatcher(new AllGrantedCredentialsMatcher());\n-\t}\n+    /**\n+     * The warning that is displayed, when the realm is instantiated.\n+     */\n+\n+    private static final String WARNING = \"\\n\"+\"           \u00a7\u00a7\\n\"+\"          \u00a7  \u00a7\\n\"+\"         \u00a7    \u00a7\\n\"+\"        \u00a7      \u00a7\\n\"+\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"+\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"+\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"+\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"+\"   $                \u00a7\\n\"+\"  \u00a7        \u00a7\u00a7        \u00a7\\n\"+\" \u00a7                    \u00a7\\n\"+\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+    \n+    /**\n+     * Standard constructor.\n+     */\n+\n+    public AllGrantedRealm() {\n+        log.warn(WARNING);\n+        this.setAuthenticationTokenClass(ConqueryToken.class);\n+        this.setCredentialsMatcher(new AllGrantedCredentialsMatcher());\n+    }\n+\n+    @Override\n+    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n+        Set<Permission> permissions = new HashSet<Permission>();\n+        permissions.add(new AllGrantedPermission());\n+        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n+        info.addObjectPermissions(permissions);\n+        return info;\n+    }\n+\n+    @Override\n+    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        return new SingleAuthenticationInfo(DevAuthConfig.USER.getId(), token.getCredentials());\n+    }\n+    \n+    /**\n+     * Inner class that represents a permission, that is always valid.\n+     */\n \n-\t@Override\n-\tprotected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n-\t\tSet<Permission> permissions = new HashSet<Permission>();\n-\t\tpermissions.add(new AllGrantedPermission());\n-\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n-\t\tinfo.addObjectPermissions(permissions);\n-\t\treturn info;\n-\t}\n+    private static class AllGrantedPermission implements Permission {\n \n-\t@Override\n-\tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n-\t}\n-\t\n-\t/**\n-\t * Inner class that represents a permission, that is always valid.\n-\t */\n-\tprivate static class AllGrantedPermission implements Permission {\n-\t\t@Override\n-\t\tpublic boolean implies(Permission permission) {\n-\t\t\treturn true;\n-\t\t}\n-\t}\n-\t\n-\t/**\n-\t * Inner class that matches any credentials.\n-\t */\n-\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n+        @Override\n+        public boolean implies(Permission permission) {\n+            return true;\n+        }\n+    }\n+    \n+    /**\n+     * Inner class that matches any credentials.\n+     */\n \n-\t\t@Override\n-\t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n-\t\t\treturn true;\n-\t\t}\n-\t\t\n-\t}\n+    private static class AllGrantedCredentialsMatcher implements CredentialsMatcher {\n \n-}\n+        @Override\n+        public boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n+            return true;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 76
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/315/AllGrantedRealm.java\nindex b32959e5ec..cae834ee1f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/315/AllGrantedRealm.java\n@@ -38,7 +38,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n \t\t\t\" \u00a7                    \u00a7\\n\" +\n \t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n+\n \t/**\n \t * Standard constructor.\n \t */\n@@ -61,7 +61,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n \t}\n-\t\n+\n \t/**\n \t * Inner class that represents a permission, that is always valid.\n \t */\n@@ -71,17 +71,17 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\treturn true;\n \t\t}\n \t}\n-\t\n+\n \t/**\n \t * Inner class that matches any credentials.\n \t */\n-\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n+\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher {\n \n \t\t@Override\n \t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n \t\t\treturn true;\n \t\t}\n-\t\t\n+\n \t}\n \n }\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/315/AllGrantedRealm.java\nindex b32959e5ec..cae834ee1f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/315/AllGrantedRealm.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/315/AllGrantedRealm.java\n@@ -38,7 +38,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n \t\t\t\" \u00a7                    \u00a7\\n\" +\n \t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n+\n \t/**\n \t * Standard constructor.\n \t */\n@@ -61,7 +61,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n \t}\n-\t\n+\n \t/**\n \t * Inner class that represents a permission, that is always valid.\n \t */\n@@ -71,17 +71,17 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\treturn true;\n \t\t}\n \t}\n-\t\n+\n \t/**\n \t * Inner class that matches any credentials.\n \t */\n-\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher{\n+\tprivate static class AllGrantedCredentialsMatcher implements CredentialsMatcher {\n \n \t\t@Override\n \t\tpublic boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info) {\n \t\t\treturn true;\n \t\t}\n-\t\t\n+\n \t}\n \n }\n",
            "diff_size": 5
        }
    ]
}