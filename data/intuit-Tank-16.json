{
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "71",
                "column": "5",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     */\n    public void deleteProject(int projectId) throws RestServiceException {\n    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n                ProjectService.METHOD_DELETE, projectId));\n        Response response = webTarget.request().delete();\n        exceptionHandler.checkStatusCode(response);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "82",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/16/ProjectServiceClientV1.java\nindex 797222a2f0..e2c8e5ac37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/16/ProjectServiceClientV1.java\n@@ -68,7 +68,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public void deleteProject(int projectId) throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 ProjectService.METHOD_DELETE, projectId));\n         Response response = webTarget.request().delete();\n         exceptionHandler.checkStatusCode(response);\n@@ -79,7 +79,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @return\n      */\n     public List<ProjectTO> getProjects() {\n-    \tWebTarget webTarget = client.target(urlBuilder\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder\n                 .buildUrl(ProjectService.METHOD_PROJECTS));\n         Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n         exceptionHandler.checkStatusCode(response);\n@@ -88,7 +88,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n     }\n \n     public String downloadTestScriptForProject(Integer projectId) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n                 projectId));\n         Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n         exceptionHandler.checkStatusCode(response);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/16/ProjectServiceClientV1.java\nindex 797222a2f0..c0a135149b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/16/ProjectServiceClientV1.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.client.v1.project;\n \n /*\n@@ -31,68 +32,63 @@ import com.intuit.tank.rest.util.ServiceConsants;\n \n /**\n  * ProjectClientV1\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class ProjectServiceClientV1 extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + ProjectService.SERVICE_RELATIVE_PATH;\n+  private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n+    + ProjectService.SERVICE_RELATIVE_PATH;\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public ProjectServiceClientV1(String serviceUrl) {\n-        super(serviceUrl, null, null);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public ProjectServiceClientV1(String serviceUrl) {\n+    super(serviceUrl, null, null);\n+  }\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public ProjectServiceClientV1(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n-        super(serviceUrl, proxyServer, proxyPort);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public ProjectServiceClientV1(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n+    super(serviceUrl, proxyServer, proxyPort);\n+  }\n \n-    /**\n-     * \n-     * @return\n-     */\n-    protected String getServiceBaseUrl() {\n-        return SERVICE_BASE_URL;\n-    }\n+  /**\n+   * @return\n+   */\n+  protected String getServiceBaseUrl() {\n+    return SERVICE_BASE_URL;\n+  }\n \n-    /**\n-     * @inheritDoc\n-     */\n-    public void deleteProject(int projectId) throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                ProjectService.METHOD_DELETE, projectId));\n-        Response response = webTarget.request().delete();\n-        exceptionHandler.checkStatusCode(response);\n-    }\n+  /**\n+   * @inheritDoc\n+   */\n+  public void deleteProject(int projectId) throws RestServiceException {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n+      ProjectService.METHOD_DELETE, projectId));\n+    Response response = webTarget.request().delete();\n+    exceptionHandler.checkStatusCode(response);\n+  }\n \n-    /**\n-     * \n-     * @return\n-     */\n-    public List<ProjectTO> getProjects() {\n-    \tWebTarget webTarget = client.target(urlBuilder\n-                .buildUrl(ProjectService.METHOD_PROJECTS));\n-        Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n-        exceptionHandler.checkStatusCode(response);\n-        ProjectContainer container = response.readEntity(ProjectContainer.class);\n-        return container.getProjects();\n-    }\n+  /**\n+   * @return\n+   */\n+  public List<ProjectTO> getProjects() {\n+    WebTarget webTarget = client.target(urlBuilder\n+      .buildUrl(ProjectService.METHOD_PROJECTS));\n+    Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n+    exceptionHandler.checkStatusCode(response);\n+    ProjectContainer container = response.readEntity(ProjectContainer.class);\n+    return container.getProjects();\n+  }\n \n-    public String downloadTestScriptForProject(Integer projectId) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n-                projectId));\n-        Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(String.class);\n-    }\n+  public String downloadTestScriptForProject(Integer projectId) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n+      projectId));\n+    Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(String.class);\n+  }\n \n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/16/ProjectServiceClientV1.java\nindex 797222a2f0..a674dccd12 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/16/ProjectServiceClientV1.java\n@@ -68,8 +68,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public void deleteProject(int projectId) throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                ProjectService.METHOD_DELETE, projectId));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_DELETE, projectId));\n         Response response = webTarget.request().delete();\n         exceptionHandler.checkStatusCode(response);\n     }\n@@ -79,8 +78,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @return\n      */\n     public List<ProjectTO> getProjects() {\n-    \tWebTarget webTarget = client.target(urlBuilder\n-                .buildUrl(ProjectService.METHOD_PROJECTS));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECTS));\n         Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n         exceptionHandler.checkStatusCode(response);\n         ProjectContainer container = response.readEntity(ProjectContainer.class);\n@@ -88,11 +86,10 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n     }\n \n     public String downloadTestScriptForProject(Integer projectId) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n-                projectId));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD, projectId));\n         Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/16/ProjectServiceClientV1.java\nindex 797222a2f0..9f6ec03b04 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/16/ProjectServiceClientV1.java\n@@ -16,12 +16,12 @@ package com.intuit.tank.client.v1.project;\n  * #L%\n  */\n \n-import java.util.List;\n \n+\n+import java.util.List;\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-\n import com.intuit.tank.api.model.v1.project.ProjectContainer;\n import com.intuit.tank.api.model.v1.project.ProjectTO;\n import com.intuit.tank.api.service.v1.project.ProjectService;\n@@ -35,15 +35,17 @@ import com.intuit.tank.rest.util.ServiceConsants;\n  * @author dangleton\n  * \n  */\n+\n public class ProjectServiceClientV1 extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + ProjectService.SERVICE_RELATIVE_PATH;\n+    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT + ProjectService.SERVICE_RELATIVE_PATH;\n \n     /**\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public ProjectServiceClientV1(String serviceUrl) {\n         super(serviceUrl, null, null);\n     }\n@@ -52,6 +54,8 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public ProjectServiceClientV1(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n         super(serviceUrl, proxyServer, proxyPort);\n     }\n@@ -60,6 +64,8 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * \n      * @return\n      */\n+\n+\n     protected String getServiceBaseUrl() {\n         return SERVICE_BASE_URL;\n     }\n@@ -67,9 +73,10 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n     /**\n      * @inheritDoc\n      */\n+\n+\n     public void deleteProject(int projectId) throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n-                ProjectService.METHOD_DELETE, projectId));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_DELETE, projectId));\n         Response response = webTarget.request().delete();\n         exceptionHandler.checkStatusCode(response);\n     }\n@@ -78,21 +85,23 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * \n      * @return\n      */\n+\n+\n     public List<ProjectTO> getProjects() {\n-    \tWebTarget webTarget = client.target(urlBuilder\n-                .buildUrl(ProjectService.METHOD_PROJECTS));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECTS));\n         Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n         exceptionHandler.checkStatusCode(response);\n         ProjectContainer container = response.readEntity(ProjectContainer.class);\n         return container.getProjects();\n     }\n \n+\n     public String downloadTestScriptForProject(Integer projectId) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n-                projectId));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n+            projectId));\n         Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "82",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/16/ProjectServiceClientV1.java\nindex 797222a2f0..e2c8e5ac37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/16/ProjectServiceClientV1.java\n@@ -68,7 +68,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public void deleteProject(int projectId) throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 ProjectService.METHOD_DELETE, projectId));\n         Response response = webTarget.request().delete();\n         exceptionHandler.checkStatusCode(response);\n@@ -79,7 +79,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @return\n      */\n     public List<ProjectTO> getProjects() {\n-    \tWebTarget webTarget = client.target(urlBuilder\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder\n                 .buildUrl(ProjectService.METHOD_PROJECTS));\n         Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n         exceptionHandler.checkStatusCode(response);\n@@ -88,7 +88,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n     }\n \n     public String downloadTestScriptForProject(Integer projectId) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n                 projectId));\n         Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n         exceptionHandler.checkStatusCode(response);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "82",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/16/ProjectServiceClientV1.java\nindex 797222a2f0..33d0e2a3ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/16/ProjectServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/16/ProjectServiceClientV1.java\n@@ -68,7 +68,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public void deleteProject(int projectId) throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(\n                 ProjectService.METHOD_DELETE, projectId));\n         Response response = webTarget.request().delete();\n         exceptionHandler.checkStatusCode(response);\n@@ -79,7 +79,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n      * @return\n      */\n     public List<ProjectTO> getProjects() {\n-    \tWebTarget webTarget = client.target(urlBuilder\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder\n                 .buildUrl(ProjectService.METHOD_PROJECTS));\n         Response response = webTarget.request(MediaType.APPLICATION_XML_TYPE).get();\n         exceptionHandler.checkStatusCode(response);\n@@ -88,7 +88,7 @@ public class ProjectServiceClientV1 extends BaseRestClient {\n     }\n \n     public String downloadTestScriptForProject(Integer projectId) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(ProjectService.METHOD_PROJECT_SCRIPT_DOWNLOAD,\n                 projectId));\n         Response response = webTarget.request(MediaType.APPLICATION_OCTET_STREAM).get();\n         exceptionHandler.checkStatusCode(response);\n",
            "diff_size": 3
        }
    ]
}