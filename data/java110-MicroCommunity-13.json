{
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "129",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        JSONObject resultUserInfo = new JSONObject();\n        responseEntity = super.getStoreInfo(pd, restTemplate);\n        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n            String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n            resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/13/NavServiceSMOImpl.java\nindex f53475236c..83f8003f5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/13/NavServiceSMOImpl.java\n@@ -69,7 +69,7 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n         JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n         JSONObject resultUserInfo = new JSONObject();\n         responseEntity = super.getStoreInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n+        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(), \"storeTypeCd\")) {\n             String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n             resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/13/NavServiceSMOImpl.java\nindex f53475236c..1dd295fec7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/13/NavServiceSMOImpl.java\n@@ -26,100 +26,100 @@ import org.springframework.web.client.RestTemplate;\n  */\n @Service(\"navServiceSMOImpl\")\n public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSMO {\n-    private static Logger logger = LoggerFactory.getLogger(NavServiceSMOImpl.class);\n-\n-    @Autowired\n-    private RestTemplate restTemplate;\n-\n-\n-    @Autowired\n-    private ICommunityServiceSMO communityServiceSMOImpl;\n-\n-    /**\n-     * \u7528\u6237\u9000\u51fa\n-     *\n-     * @param pd\n-     * @return\n-     */\n-    @Override\n-    public ResponseEntity<String> doExit(IPageData pd) {\n-        ResponseEntity<String> responseEntity = null;\n-        JSONObject exitInfo = new JSONObject();\n-        exitInfo.put(\"token\", pd.getToken());\n-        responseEntity = this.callCenterService(restTemplate, pd, exitInfo.toJSONString(),\n-                ServiceConstant.SERVICE_API_URL + \"/api/user.service.logout\", HttpMethod.POST);\n-\n-        return responseEntity;\n+  private static Logger logger = LoggerFactory.getLogger(NavServiceSMOImpl.class);\n+\n+  @Autowired\n+  private RestTemplate restTemplate;\n+\n+\n+  @Autowired\n+  private ICommunityServiceSMO communityServiceSMOImpl;\n+\n+  /**\n+   * \u7528\u6237\u9000\u51fa\n+   *\n+   * @param pd\n+   * @return\n+   */\n+  @Override\n+  public ResponseEntity<String> doExit(IPageData pd) {\n+    ResponseEntity<String> responseEntity = null;\n+    JSONObject exitInfo = new JSONObject();\n+    exitInfo.put(\"token\", pd.getToken());\n+    responseEntity = this.callCenterService(restTemplate, pd, exitInfo.toJSONString(),\n+      ServiceConstant.SERVICE_API_URL + \"/api/user.service.logout\", HttpMethod.POST);\n+\n+    return responseEntity;\n+  }\n+\n+  /**\n+   * \u83b7\u53d6\u7528\u6237\u4fe1\u606f\n+   *\n+   * @param pd\n+   * @return\n+   */\n+  @Override\n+  public ResponseEntity<String> getUserInfo(IPageData pd) {\n+    Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n+    ResponseEntity<String> responseEntity = null;\n+    responseEntity = super.getUserInfo(pd, restTemplate);\n+    if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+      return responseEntity;\n     }\n-\n-    /**\n-     * \u83b7\u53d6\u7528\u6237\u4fe1\u606f\n-     *\n-     * @param pd\n-     * @return\n-     */\n-    @Override\n-    public ResponseEntity<String> getUserInfo(IPageData pd) {\n-        Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n-        ResponseEntity<String> responseEntity = null;\n-        responseEntity = super.getUserInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n-            return responseEntity;\n-        }\n-        JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n-        JSONObject resultUserInfo = new JSONObject();\n-        responseEntity = super.getStoreInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n-            String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n-            resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n-        }\n-        resultUserInfo.put(\"name\", tmpUserInfo.getString(\"name\"));\n-        resultUserInfo.put(\"address\", tmpUserInfo.getString(\"address\"));\n-        resultUserInfo.put(\"sex\", tmpUserInfo.getString(\"sex\"));\n-        resultUserInfo.put(\"localtionCd\", tmpUserInfo.getString(\"localtionCd\"));\n-        resultUserInfo.put(\"levelCd\", tmpUserInfo.getString(\"levelCd\"));\n-        resultUserInfo.put(\"tel\", CommonUtil.mobileEncrypt(tmpUserInfo.getString(\"tel\")));\n-        resultUserInfo.put(\"email\", tmpUserInfo.getString(\"email\"));\n-        responseEntity = new ResponseEntity<String>(resultUserInfo.toJSONString(), HttpStatus.OK);\n-\n-        return responseEntity;\n+    JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n+    JSONObject resultUserInfo = new JSONObject();\n+    responseEntity = super.getStoreInfo(pd, restTemplate);\n+    if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(), \"storeTypeCd\")) {\n+      String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n+      resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n+    }\n+    resultUserInfo.put(\"name\", tmpUserInfo.getString(\"name\"));\n+    resultUserInfo.put(\"address\", tmpUserInfo.getString(\"address\"));\n+    resultUserInfo.put(\"sex\", tmpUserInfo.getString(\"sex\"));\n+    resultUserInfo.put(\"localtionCd\", tmpUserInfo.getString(\"localtionCd\"));\n+    resultUserInfo.put(\"levelCd\", tmpUserInfo.getString(\"levelCd\"));\n+    resultUserInfo.put(\"tel\", CommonUtil.mobileEncrypt(tmpUserInfo.getString(\"tel\")));\n+    resultUserInfo.put(\"email\", tmpUserInfo.getString(\"email\"));\n+    responseEntity = new ResponseEntity<String>(resultUserInfo.toJSONString(), HttpStatus.OK);\n+\n+    return responseEntity;\n+  }\n+\n+\n+  @Override\n+  public ResponseEntity<String> listMyCommunity(IPageData pd) {\n+    ResponseEntity<String> responseEntity = communityServiceSMOImpl.listMyCommunity(pd);\n+    if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+      return responseEntity;\n     }\n \n+    JSONArray communitys = JSONArray.parseArray(responseEntity.getBody());\n \n-    @Override\n-    public ResponseEntity<String> listMyCommunity(IPageData pd) {\n-        ResponseEntity<String> responseEntity = communityServiceSMOImpl.listMyCommunity(pd);\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n-            return responseEntity;\n-        }\n-\n-        JSONArray communitys = JSONArray.parseArray(responseEntity.getBody());\n-\n-        JSONArray newCommunitys = new JSONArray();\n-\n-        //\u53ea\u8fd4\u56de\u5c0f\u533aID\u548c\u5c0f\u533a\u540d\u79f0 \u5e76\u4e14\u662f\u5728\u7528\u7684\n-        JSONObject tempCommunity = null;\n-        JSONObject newCommunity = null;\n-        for (int communityIndex = 0; communityIndex < communitys.size(); communityIndex++) {\n-            tempCommunity = communitys.getJSONObject(communityIndex);\n-\n-            if (!StateConstant.AGREE_AUDIT.equals(tempCommunity.getString(\"auditStatusCd\"))) {\n-                continue;\n-            }\n-            newCommunity = new JSONObject();\n-            newCommunity.put(\"communityId\", tempCommunity.getString(\"communityId\"));\n-            newCommunity.put(\"name\", tempCommunity.getString(\"name\"));\n-            newCommunitys.add(newCommunity);\n-        }\n-        responseEntity = new ResponseEntity<String>(newCommunitys.toJSONString(), HttpStatus.OK);\n-        return responseEntity;\n-    }\n+    JSONArray newCommunitys = new JSONArray();\n \n-    public ICommunityServiceSMO getCommunityServiceSMOImpl() {\n-        return communityServiceSMOImpl;\n-    }\n+    //\u53ea\u8fd4\u56de\u5c0f\u533aID\u548c\u5c0f\u533a\u540d\u79f0 \u5e76\u4e14\u662f\u5728\u7528\u7684\n+    JSONObject tempCommunity = null;\n+    JSONObject newCommunity = null;\n+    for (int communityIndex = 0; communityIndex < communitys.size(); communityIndex++) {\n+      tempCommunity = communitys.getJSONObject(communityIndex);\n \n-    public void setCommunityServiceSMOImpl(ICommunityServiceSMO communityServiceSMOImpl) {\n-        this.communityServiceSMOImpl = communityServiceSMOImpl;\n+      if (!StateConstant.AGREE_AUDIT.equals(tempCommunity.getString(\"auditStatusCd\"))) {\n+        continue;\n+      }\n+      newCommunity = new JSONObject();\n+      newCommunity.put(\"communityId\", tempCommunity.getString(\"communityId\"));\n+      newCommunity.put(\"name\", tempCommunity.getString(\"name\"));\n+      newCommunitys.add(newCommunity);\n     }\n+    responseEntity = new ResponseEntity<String>(newCommunitys.toJSONString(), HttpStatus.OK);\n+    return responseEntity;\n+  }\n+\n+  public ICommunityServiceSMO getCommunityServiceSMOImpl() {\n+    return communityServiceSMOImpl;\n+  }\n+\n+  public void setCommunityServiceSMOImpl(ICommunityServiceSMO communityServiceSMOImpl) {\n+    this.communityServiceSMOImpl = communityServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 123
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/13/NavServiceSMOImpl.java\nindex f53475236c..bbe0de2c5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/13/NavServiceSMOImpl.java\n@@ -69,7 +69,7 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n         JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n         JSONObject resultUserInfo = new JSONObject();\n         responseEntity = super.getStoreInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n+        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(), \"storeTypeCd\")) {\n             String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n             resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n         }\n@@ -122,4 +122,4 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n     public void setCommunityServiceSMOImpl(ICommunityServiceSMO communityServiceSMOImpl) {\n         this.communityServiceSMOImpl = communityServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/13/NavServiceSMOImpl.java\nindex f53475236c..efc56aa336 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/13/NavServiceSMOImpl.java\n@@ -24,14 +24,16 @@ import org.springframework.web.client.RestTemplate;\n  * \u5bfc\u822a\u680f\u4e1a\u52a1\u5904\u7406\u7c7b\n  * Created by Administrator on 2019/4/1.\n  */\n+\n+\n @Service(\"navServiceSMOImpl\")\n public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSMO {\n+\n     private static Logger logger = LoggerFactory.getLogger(NavServiceSMOImpl.class);\n \n     @Autowired\n     private RestTemplate restTemplate;\n \n-\n     @Autowired\n     private ICommunityServiceSMO communityServiceSMOImpl;\n \n@@ -41,14 +43,13 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n      * @param pd\n      * @return\n      */\n+\n     @Override\n     public ResponseEntity<String> doExit(IPageData pd) {\n         ResponseEntity<String> responseEntity = null;\n         JSONObject exitInfo = new JSONObject();\n         exitInfo.put(\"token\", pd.getToken());\n-        responseEntity = this.callCenterService(restTemplate, pd, exitInfo.toJSONString(),\n-                ServiceConstant.SERVICE_API_URL + \"/api/user.service.logout\", HttpMethod.POST);\n-\n+        responseEntity = this.callCenterService(restTemplate, pd, exitInfo.toJSONString(), ServiceConstant.SERVICE_API_URL + \"/api/user.service.logout\", HttpMethod.POST);\n         return responseEntity;\n     }\n \n@@ -58,18 +59,24 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n      * @param pd\n      * @return\n      */\n+\n+\n     @Override\n     public ResponseEntity<String> getUserInfo(IPageData pd) {\n         Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n+\n         ResponseEntity<String> responseEntity = null;\n         responseEntity = super.getUserInfo(pd, restTemplate);\n+\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             return responseEntity;\n         }\n+\n         JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n         JSONObject resultUserInfo = new JSONObject();\n         responseEntity = super.getStoreInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n+\n+        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(), \"storeTypeCd\")) {\n             String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n             resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n         }\n@@ -81,7 +88,6 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n         resultUserInfo.put(\"tel\", CommonUtil.mobileEncrypt(tmpUserInfo.getString(\"tel\")));\n         resultUserInfo.put(\"email\", tmpUserInfo.getString(\"email\"));\n         responseEntity = new ResponseEntity<String>(resultUserInfo.toJSONString(), HttpStatus.OK);\n-\n         return responseEntity;\n     }\n \n@@ -94,7 +100,6 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n         }\n \n         JSONArray communitys = JSONArray.parseArray(responseEntity.getBody());\n-\n         JSONArray newCommunitys = new JSONArray();\n \n         //\u53ea\u8fd4\u56de\u5c0f\u533aID\u548c\u5c0f\u533a\u540d\u79f0 \u5e76\u4e14\u662f\u5728\u7528\u7684\n@@ -122,4 +127,4 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n     public void setCommunityServiceSMOImpl(ICommunityServiceSMO communityServiceSMOImpl) {\n         this.communityServiceSMOImpl = communityServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/13/NavServiceSMOImpl.java\nindex f53475236c..83f8003f5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/13/NavServiceSMOImpl.java\n@@ -69,7 +69,7 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n         JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n         JSONObject resultUserInfo = new JSONObject();\n         responseEntity = super.getStoreInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n+        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(), \"storeTypeCd\")) {\n             String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n             resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "72",
                    "column": "130",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "72",
                    "column": "130",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/13/NavServiceSMOImpl.java\nindex f53475236c..74d1a1fd4c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/13/NavServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/13/NavServiceSMOImpl.java\n@@ -69,7 +69,7 @@ public class NavServiceSMOImpl extends BaseComponentSMO implements INavServiceSM\n         JSONObject tmpUserInfo = JSONObject.parseObject(responseEntity.getBody().toString());\n         JSONObject resultUserInfo = new JSONObject();\n         responseEntity = super.getStoreInfo(pd, restTemplate);\n-        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString(),\"storeTypeCd\")) {\n+        if (responseEntity.getStatusCode() == HttpStatus.OK && StringUtil.jsonHasKayAndValue(responseEntity.getBody().toString() ,\"storeTypeCd\")) {\n             String storeTypeCd = JSONObject.parseObject(responseEntity.getBody().toString()).getString(\"storeTypeCd\");\n             resultUserInfo.put(\"storeTypeCd\", storeTypeCd);\n         }\n",
            "diff_size": 1
        }
    ]
}