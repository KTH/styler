{
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "72",
                "severity": "error",
                "message": "Prohibit invoking System.out.println in source code !",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "                //The message sent to the sourceQueue will be delivered to anotherConsumer by the routing rule\n                //In this case, the push consumer will only receive the message with red color.\n                System.out.println(\"Received a red message: \" + message);\n                context.ack();\n            }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/styler/46/RoutingApp.java\nindex c1f365d273..b305590222 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/styler/46/RoutingApp.java\n@@ -68,8 +68,8 @@ public class RoutingApp {\n             @Override\n             public void onReceived(Message message, Context context) {\n                 //The message sent to the sourceQueue will be delivered to anotherConsumer by the routing rule\n-                //In this case, the push consumer will only receive the message with red color.\n-                System.out.println(\"Received a red message: \" + message);\n+                //In this case, the push consumer will only receive the message with red color.System.out.\n+                println(\"Received a red message: \" + message);\n                 context.ack();\n             }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "column": "118",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 4, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/naturalize/46/RoutingApp.java\nindex c1f365d273..f2581e254b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/naturalize/46/RoutingApp.java\n@@ -30,38 +30,28 @@ import io.openmessaging.producer.Producer;\n \n public class RoutingApp {\n     public static void main(String[] args) throws OMSResourceNotExistException {\n-        final MessagingAccessPoint messagingAccessPoint =\n-            OMS.getMessagingAccessPoint(\"oms:rocketmq://alice@rocketmq.apache.org/us-east:default_space\");\n+        final MessagingAccessPoint messagingAccessPoint = OMS.getMessagingAccessPoint(\"oms:rocketmq://alice@rocketmq.apache.org/us-east:default_space\");\n \n-        messagingAccessPoint.startup();\n-\n-        String destinationQueue = \"DESTINATION_QUEUE\";\n-        String sourceQueue = \"SOURCE_QUEUE\";\n-\n-        ResourceManager resourceManager = messagingAccessPoint.resourceManager();\n+messagingAccessPoint.startup();\n+String destinationQueue = \"DESTINATION_QUEUE\";\n+        String sourceQueue = \"SOURCE_QUEUE\"; ResourceManager resourceManager = messagingAccessPoint.resourceManager();\n \n         //Create the destination queue.\n         resourceManager.createQueue(destinationQueue, OMS.newKeyValue());\n         //Create the source queue.\n         resourceManager.createQueue(sourceQueue, OMS.newKeyValue());\n+KeyValue routingAttr = OMS.newKeyValue();\n+        routingAttr.put(OMSBuiltinKeys.ROUTING_SOURCE, sourceQueue).put(OMSBuiltinKeys.ROUTING_DESTINATION, destinationQueue).put(OMSBuiltinKeys.ROUTING_EXPRESSION, \"color = 'red'\");\n \n-        KeyValue routingAttr = OMS.newKeyValue();\n-        routingAttr.put(OMSBuiltinKeys.ROUTING_SOURCE, sourceQueue)\n-            .put(OMSBuiltinKeys.ROUTING_DESTINATION, destinationQueue)\n-            .put(OMSBuiltinKeys.ROUTING_EXPRESSION, \"color = 'red'\");\n-\n-        resourceManager.createRouting(\"HELLO_ROUTING\", routingAttr);\n+resourceManager.createRouting(\"HELLO_ROUTING\", routingAttr);\n \n         //Send messages to the source queue ahead of the routing\n         final Producer producer = messagingAccessPoint.createProducer();\n \n-        producer.send(producer.createBytesMessage(sourceQueue, \"RED_COLOR\".getBytes())\n-            .putUserHeaders(\"color\", \"red\"));\n+        producer.send(producer.createBytesMessage(sourceQueue, \"RED_COLOR\".getBytes()).putUserHeaders(\"color\", \"red\"));\n \n-        producer.send(producer.createBytesMessage(sourceQueue, \"GREEN_COLOR\".getBytes())\n-            .putUserHeaders(\"color\", \"green\"));\n-\n-        //Consume messages from the queue behind the routing.\n+producer.send(producer.createBytesMessage(sourceQueue, \"GREEN_COLOR\".getBytes()).putUserHeaders(\"color\", \"green\"));\n+    //Consume messages from the queue behind the routing.\n         final PushConsumer pushConsumer = messagingAccessPoint.createPushConsumer();\n \n         pushConsumer.attachQueue(destinationQueue, new MessageListener() {\n@@ -72,7 +62,6 @@ public class RoutingApp {\n                 System.out.println(\"Received a red message: \" + message);\n                 context.ack();\n             }\n-\n-        });\n+    });\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/codebuff/46/RoutingApp.java\nindex c1f365d273..f5fb72a31a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/codebuff/46/RoutingApp.java\n@@ -30,49 +30,37 @@ import io.openmessaging.producer.Producer;\n \n public class RoutingApp {\n     public static void main(String[] args) throws OMSResourceNotExistException {\n-        final MessagingAccessPoint messagingAccessPoint =\n-            OMS.getMessagingAccessPoint(\"oms:rocketmq://alice@rocketmq.apache.org/us-east:default_space\");\n-\n+        final MessagingAccessPoint messagingAccessPoint = OMS.getMessagingAccessPoint(\"oms:rocketmq://alice@rocketmq.apache.org/us-east:default_space\");\n         messagingAccessPoint.startup();\n-\n         String destinationQueue = \"DESTINATION_QUEUE\";\n         String sourceQueue = \"SOURCE_QUEUE\";\n-\n         ResourceManager resourceManager = messagingAccessPoint.resourceManager();\n \n         //Create the destination queue.\n         resourceManager.createQueue(destinationQueue, OMS.newKeyValue());\n         //Create the source queue.\n         resourceManager.createQueue(sourceQueue, OMS.newKeyValue());\n-\n         KeyValue routingAttr = OMS.newKeyValue();\n-        routingAttr.put(OMSBuiltinKeys.ROUTING_SOURCE, sourceQueue)\n-            .put(OMSBuiltinKeys.ROUTING_DESTINATION, destinationQueue)\n-            .put(OMSBuiltinKeys.ROUTING_EXPRESSION, \"color = 'red'\");\n-\n+        routingAttr.put(OMSBuiltinKeys.ROUTING_SOURCE, sourceQueue).put(OMSBuiltinKeys.ROUTING_DESTINATION, destinationQueue).put(OMSBuiltinKeys.ROUTING_EXPRESSION, \"color = 'red'\");\n         resourceManager.createRouting(\"HELLO_ROUTING\", routingAttr);\n \n         //Send messages to the source queue ahead of the routing\n-        final Producer producer = messagingAccessPoint.createProducer();\n-\n-        producer.send(producer.createBytesMessage(sourceQueue, \"RED_COLOR\".getBytes())\n-            .putUserHeaders(\"color\", \"red\"));\n \n-        producer.send(producer.createBytesMessage(sourceQueue, \"GREEN_COLOR\".getBytes())\n-            .putUserHeaders(\"color\", \"green\"));\n+        final Producer producer = messagingAccessPoint.createProducer();\n+        producer.send(producer.createBytesMessage(sourceQueue, \"RED_COLOR\".getBytes()).putUserHeaders(\"color\", \"red\"));\n+        producer.send(producer.createBytesMessage(sourceQueue, \"GREEN_COLOR\".getBytes()).putUserHeaders(\"color\", \"green\"));\n \n         //Consume messages from the queue behind the routing.\n-        final PushConsumer pushConsumer = messagingAccessPoint.createPushConsumer();\n \n+        final PushConsumer pushConsumer = messagingAccessPoint.createPushConsumer();\n         pushConsumer.attachQueue(destinationQueue, new MessageListener() {\n-            @Override\n-            public void onReceived(Message message, Context context) {\n+@Override\n+public void onReceived(Message message, Context context) {\n                 //The message sent to the sourceQueue will be delivered to anotherConsumer by the routing rule\n                 //In this case, the push consumer will only receive the message with red color.\n-                System.out.println(\"Received a red message: \" + message);\n-                context.ack();\n-            }\n-\n-        });\n-    }\n+    System.out.println(\"Received a red message: \" + message);\n+    context.ack();\n }\n+});\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/styler_three_grams/46/RoutingApp.java\nindex c1f365d273..b305590222 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/errored/1/46/RoutingApp.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/openmessaging-openmessaging-java/styler_three_grams/46/RoutingApp.java\n@@ -68,8 +68,8 @@ public class RoutingApp {\n             @Override\n             public void onReceived(Message message, Context context) {\n                 //The message sent to the sourceQueue will be delivered to anotherConsumer by the routing rule\n-                //In this case, the push consumer will only receive the message with red color.\n-                System.out.println(\"Received a red message: \" + message);\n+                //In this case, the push consumer will only receive the message with red color.System.out.\n+                println(\"Received a red message: \" + message);\n                 context.ack();\n             }\n \n",
            "diff_size": 2
        }
    ]
}