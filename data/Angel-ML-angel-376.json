{
    "error_id": "376",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/376/WideAndDeepLocalExample.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/376/WideAndDeepLocalExample.java\nindex 0e82548e1a..0846b35a5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/376/WideAndDeepLocalExample.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/376/WideAndDeepLocalExample.java\n@@ -33,147 +33,147 @@ import java.util.Scanner;\n \n public class WideAndDeepLocalExample {\n \n-  private static final Log LOG = LogFactory.getLog(WideAndDeepLocalExample.class);\n+    private static final Log LOG = LogFactory.getLog(WideAndDeepLocalExample.class);\n \n-  private Configuration conf = new Configuration();\n+    private Configuration conf = new Configuration();\n \n-  private static boolean inPackage = false;\n-  private static String CLASSBASE = \"com.tencent.angel.ml.classification.\";\n+    private static boolean inPackage = false;\n+    private static String CLASSBASE = \"com.tencent.angel.ml.classification.\";\n \n-  static {\n-    File confFile = new File(\"../conf/log4j.properties\");\n-    if (confFile.exists()) {\n-      PropertyConfigurator.configure(\"../conf/log4j.properties\");\n-      inPackage = true;\n-    } else {\n-      PropertyConfigurator.configure(\"angel-ps/conf/log4j.properties\");\n+    static {\n+        File confFile = new File(\"../conf/log4j.properties\");\n+        if (confFile.exists()) {\n+            PropertyConfigurator.configure(\"../conf/log4j.properties\");\n+            inPackage = true;\n+        } else {\n+            PropertyConfigurator.configure(\"angel-ps/conf/log4j.properties\");\n+        }\n     }\n-  }\n \n-  public void setConf(int mode) {\n-\n-    String trainInput = \"\";\n-    String predictInput = \"\";\n-\n-    // Dataset\n-    if (inPackage) {\n-      trainInput = \"../data/census/census_148d_train.dummy\";\n-      predictInput = \"../data/census/census_148d_train.dummy\";\n-    } else {\n-      trainInput = \"data/census/census_148d_train.dummy\";\n-      predictInput = \"data/census/census_148d_train.dummy\";\n-    }\n-\n-    // Set file system\n-    String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n-    String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n-\n-    // Set basic configuration keys\n-    conf.setBoolean(\"mapred.mapper.new-api\", true);\n-    conf.setBoolean(AngelConf.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n-    conf.setInt(AngelConf.ANGEL_PSAGENT_CACHE_SYNC_TIMEINTERVAL_MS, 50);\n-\n-    // Use local deploy mode\n-    conf.set(AngelConf.ANGEL_DEPLOY_MODE, \"LOCAL\");\n-\n-    // Set data path\n-    conf.set(AngelConf.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n-    if (mode == 1) {  // train mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"train\");\n-      conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n-      conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n-    } else if (mode == 2) { // incTrain mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"inctrain\");\n-      conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n-      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n-      conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep-inc\");\n-    } else if (mode == 3) {  // predict mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"predict\");\n-      conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, predictInput);\n-      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n-      conf.set(AngelConf.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict/WideDeep\");\n+    public void setConf(int mode) {\n+\n+        String trainInput = \"\";\n+        String predictInput = \"\";\n+\n+        // Dataset\n+        if (inPackage) {\n+            trainInput = \"../data/census/census_148d_train.dummy\";\n+            predictInput = \"../data/census/census_148d_train.dummy\";\n+        } else {\n+            trainInput = \"data/census/census_148d_train.dummy\";\n+            predictInput = \"data/census/census_148d_train.dummy\";\n+        }\n+\n+        // Set file system\n+        String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n+        String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+\n+        // Set basic configuration keys\n+        conf.setBoolean(\"mapred.mapper.new-api\", true);\n+        conf.setBoolean(AngelConf.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n+        conf.setInt(AngelConf.ANGEL_PSAGENT_CACHE_SYNC_TIMEINTERVAL_MS, 50);\n+\n+        // Use local deploy mode\n+        conf.set(AngelConf.ANGEL_DEPLOY_MODE, \"LOCAL\");\n+\n+        // Set data path\n+        conf.set(AngelConf.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+        if (mode == 1) {  // train mode\n+            conf.set(AngelConf.ANGEL_ACTION_TYPE, \"train\");\n+            conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n+            conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n+        } else if (mode == 2) { // incTrain mode\n+            conf.set(AngelConf.ANGEL_ACTION_TYPE, \"inctrain\");\n+            conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n+            conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n+            conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep-inc\");\n+        } else if (mode == 3) {  // predict mode\n+            conf.set(AngelConf.ANGEL_ACTION_TYPE, \"predict\");\n+            conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, predictInput);\n+            conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n+            conf.set(AngelConf.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict/WideDeep\");\n+        }\n+        conf.set(AngelConf.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/log\");\n+\n+        // Set angel resource parameters #worker, #task, #PS\n+        conf.setInt(AngelConf.ANGEL_WORKERGROUP_NUMBER, 1);\n+        conf.setInt(AngelConf.ANGEL_WORKER_TASK_NUMBER, 1);\n+        conf.setInt(AngelConf.ANGEL_PS_NUMBER, 1);\n+\n+        // Set WideAndDeep algorithm parameters\n+        String angelConfFile = null;\n+        if (inPackage) {\n+            angelConfFile = \"../examples/src/jsons/daw.json\";\n+        } else {\n+            angelConfFile = \"angel-ps/examples/src/jsons/daw.json\";\n+        }\n+        conf.set(AngelConf.ANGEL_ML_CONF, angelConfFile);\n+\n+        // Set model class\n+        conf.set(MLConf.ML_MODEL_CLASS_NAME(), CLASSBASE + \"WideAndDeep\");\n     }\n-    conf.set(AngelConf.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/log\");\n-\n-    // Set angel resource parameters #worker, #task, #PS\n-    conf.setInt(AngelConf.ANGEL_WORKERGROUP_NUMBER, 1);\n-    conf.setInt(AngelConf.ANGEL_WORKER_TASK_NUMBER, 1);\n-    conf.setInt(AngelConf.ANGEL_PS_NUMBER, 1);\n-\n-    // Set WideAndDeep algorithm parameters\n-    String angelConfFile = null;\n-    if (inPackage) {\n-      angelConfFile = \"../examples/src/jsons/daw.json\";\n-    } else {\n-      angelConfFile = \"angel-ps/examples/src/jsons/daw.json\";\n-    }\n-    conf.set(AngelConf.ANGEL_ML_CONF, angelConfFile);\n \n-    // Set model class\n-    conf.set(MLConf.ML_MODEL_CLASS_NAME(), CLASSBASE + \"WideAndDeep\");\n-  }\n+    public void train() {\n \n-  public void train() {\n+        try {\n+            setConf(1);\n \n-    try {\n-      setConf(1);\n+            GraphRunner runner = new GraphRunner();\n+            runner.train(conf);\n+        } catch (Exception e) {\n+            LOG.error(\"run WideAndDeepLocalExample:train failed.\", e);\n+            throw e;\n+        }\n \n-      GraphRunner runner = new GraphRunner();\n-      runner.train(conf);\n-    } catch (Exception e) {\n-      LOG.error(\"run WideAndDeepLocalExample:train failed.\", e);\n-      throw e;\n     }\n \n-  }\n \n+    public void incTrain() {\n \n-  public void incTrain() {\n+        try {\n+            setConf(2);\n \n-    try {\n-      setConf(2);\n+            GraphRunner runner = new GraphRunner();\n+            runner.train(conf);\n+        } catch (Exception e) {\n+            LOG.error(\"run WideAndDeepLocalExample:incTrain failed.\", e);\n+            throw e;\n+        }\n \n-      GraphRunner runner = new GraphRunner();\n-      runner.train(conf);\n-    } catch (Exception e) {\n-      LOG.error(\"run WideAndDeepLocalExample:incTrain failed.\", e);\n-      throw e;\n     }\n \n-  }\n-\n \n-  public void predict() {\n+    public void predict() {\n \n-    try {\n-      setConf(3);\n+        try {\n+            setConf(3);\n \n-      GraphRunner runner = new GraphRunner();\n-      runner.predict(conf);\n-    } catch (Exception e) {\n-      LOG.error(\"run WideAndDeepLocalExample:predict failed.\", e);\n-      throw e;\n-    }\n-  }\n-\n-  public static void main(String[] args) throws Exception {\n-    WideAndDeepLocalExample example = new WideAndDeepLocalExample();\n-    Scanner scanner = new Scanner(System.in);\n-    System.out.println(\"1-train 2-incTrain 3-predict\");\n-    System.out.println(\"Please input the mode:\");\n-    int mode = scanner.nextInt();\n-    switch (mode) {\n-      case 1:\n-        example.train();\n-        break;\n-      case 2:\n-        example.incTrain();\n-        break;\n-      case 3:\n-        example.predict();\n-        break;\n+            GraphRunner runner = new GraphRunner();\n+            runner.predict(conf);\n+        } catch (Exception e) {\n+            LOG.error(\"run WideAndDeepLocalExample:predict failed.\", e);\n+            throw e;\n+        }\n     }\n \n-    System.exit(0);\n-  }\n+    public static void main(String[] args) throws Exception {\n+        WideAndDeepLocalExample example = new WideAndDeepLocalExample();\n+        Scanner scanner = new Scanner(System.in);\n+        System.out.println(\"1-train 2-incTrain 3-predict\");\n+        System.out.println(\"Please input the mode:\");\n+        int mode = scanner.nextInt();\n+        switch (mode) {\n+            case 1:\n+                example.train();\n+                break;\n+            case 2:\n+                example.incTrain();\n+                break;\n+            case 3:\n+                example.predict();\n+                break;\n+        }\n+\n+        System.exit(0);\n+    }\n }\n",
            "diff_size": 169
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/376/WideAndDeepLocalExample.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/376/WideAndDeepLocalExample.java\nindex 0e82548e1a..2690f1d240 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/376/WideAndDeepLocalExample.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/376/WideAndDeepLocalExample.java\n@@ -27,44 +27,40 @@ import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.fs.LocalFileSystem;\n import org.apache.hadoop.mapreduce.lib.input.CombineTextInputFormat;\n import org.apache.log4j.PropertyConfigurator;\n-\n import java.io.File;\n import java.util.Scanner;\n \n public class WideAndDeepLocalExample {\n+    private static final Log LOG = LogFactory.getLog(WideAndDeepLocalExample.class);\n+    private Configuration conf = new Configuration();\n+    private static boolean inPackage = false;\n+    private static String CLASSBASE = \"com.tencent.angel.ml.classification.\";\n \n-  private static final Log LOG = LogFactory.getLog(WideAndDeepLocalExample.class);\n-\n-  private Configuration conf = new Configuration();\n-\n-  private static boolean inPackage = false;\n-  private static String CLASSBASE = \"com.tencent.angel.ml.classification.\";\n-\n-  static {\n+    static {\n     File confFile = new File(\"../conf/log4j.properties\");\n     if (confFile.exists()) {\n-      PropertyConfigurator.configure(\"../conf/log4j.properties\");\n-      inPackage = true;\n+                                         PropertyConfigurator.configure(\"../conf/log4j.properties\");\n+                                         inPackage = true;\n     } else {\n       PropertyConfigurator.configure(\"angel-ps/conf/log4j.properties\");\n     }\n-  }\n-\n-  public void setConf(int mode) {\n+    }\n \n+    public void setConf(int mode) {\n     String trainInput = \"\";\n     String predictInput = \"\";\n \n     // Dataset\n     if (inPackage) {\n-      trainInput = \"../data/census/census_148d_train.dummy\";\n-      predictInput = \"../data/census/census_148d_train.dummy\";\n+        trainInput = \"../data/census/census_148d_train.dummy\";\n+        predictInput = \"../data/census/census_148d_train.dummy\";\n     } else {\n       trainInput = \"data/census/census_148d_train.dummy\";\n       predictInput = \"data/census/census_148d_train.dummy\";\n     }\n \n     // Set file system\n+\n     String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n     String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n \n@@ -79,20 +75,20 @@ public class WideAndDeepLocalExample {\n     // Set data path\n     conf.set(AngelConf.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n     if (mode == 1) {  // train mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"train\");\n-      conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n-      conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n+        conf.set(AngelConf.ANGEL_ACTION_TYPE, \"train\");\n+        conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n+        conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n     } else if (mode == 2) { // incTrain mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"inctrain\");\n-      conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n-      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n-      conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep-inc\");\n+                                      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"inctrain\");\n+                                      conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n+                                      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n+                                      conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep-inc\");\n     } else if (mode == 3) {  // predict mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"predict\");\n-      conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, predictInput);\n-      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n-      conf.set(AngelConf.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict/WideDeep\");\n-    }\n+        conf.set(AngelConf.ANGEL_ACTION_TYPE, \"predict\");\n+        conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, predictInput);\n+        conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/WideDeep\");\n+        conf.set(AngelConf.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict/WideDeep\");\n+           }\n     conf.set(AngelConf.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/log\");\n \n     // Set angel resource parameters #worker, #task, #PS\n@@ -103,7 +99,7 @@ public class WideAndDeepLocalExample {\n     // Set WideAndDeep algorithm parameters\n     String angelConfFile = null;\n     if (inPackage) {\n-      angelConfFile = \"../examples/src/jsons/daw.json\";\n+        angelConfFile = \"../examples/src/jsons/daw.json\";\n     } else {\n       angelConfFile = \"angel-ps/examples/src/jsons/daw.json\";\n     }\n@@ -111,69 +107,59 @@ public class WideAndDeepLocalExample {\n \n     // Set model class\n     conf.set(MLConf.ML_MODEL_CLASS_NAME(), CLASSBASE + \"WideAndDeep\");\n-  }\n-\n-  public void train() {\n+    }\n \n+    public void train() {\n     try {\n-      setConf(1);\n-\n-      GraphRunner runner = new GraphRunner();\n-      runner.train(conf);\n+        setConf(1);\n+        GraphRunner runner = new GraphRunner();\n+        runner.train(conf);\n     } catch (Exception e) {\n       LOG.error(\"run WideAndDeepLocalExample:train failed.\", e);\n       throw e;\n     }\n+    }\n \n-  }\n-\n-\n-  public void incTrain() {\n-\n+    public void incTrain() {\n     try {\n-      setConf(2);\n-\n-      GraphRunner runner = new GraphRunner();\n-      runner.train(conf);\n+        setConf(2);\n+        GraphRunner runner = new GraphRunner();\n+        runner.train(conf);\n     } catch (Exception e) {\n       LOG.error(\"run WideAndDeepLocalExample:incTrain failed.\", e);\n       throw e;\n     }\n+    }\n \n-  }\n-\n-\n-  public void predict() {\n-\n+    public void predict() {\n     try {\n-      setConf(3);\n-\n-      GraphRunner runner = new GraphRunner();\n-      runner.predict(conf);\n+        setConf(3);\n+        GraphRunner runner = new GraphRunner();\n+        runner.predict(conf);\n     } catch (Exception e) {\n       LOG.error(\"run WideAndDeepLocalExample:predict failed.\", e);\n       throw e;\n     }\n-  }\n+    }\n \n-  public static void main(String[] args) throws Exception {\n+    public static void main(String[] args) throws Exception {\n     WideAndDeepLocalExample example = new WideAndDeepLocalExample();\n     Scanner scanner = new Scanner(System.in);\n     System.out.println(\"1-train 2-incTrain 3-predict\");\n     System.out.println(\"Please input the mode:\");\n+\n     int mode = scanner.nextInt();\n     switch (mode) {\n-      case 1:\n+        case 1:\n         example.train();\n         break;\n-      case 2:\n+        case 2:\n         example.incTrain();\n         break;\n-      case 3:\n+        case 3:\n         example.predict();\n         break;\n     }\n-\n     System.exit(0);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/376/WideAndDeepLocalExample.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/376/WideAndDeepLocalExample.java\nindex 0e82548e1a..0d04954f50 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/376/WideAndDeepLocalExample.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/376/WideAndDeepLocalExample.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.example.ml;\n \n import com.tencent.angel.conf.AngelConf;\n",
            "diff_size": 1
        }
    ]
}