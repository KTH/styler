{
    "error_id": "319",
    "information": {
        "errors": [
            {
                "line": "50",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    };\n\n    Assert.assertEquals((String) null, FallbackPolicyManager.getFallbackResponse(\"Consumer\", null, invocation).getResult());\n\n    new Expectations() {\n      {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/319/TestFallbackPolicyManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/319/TestFallbackPolicyManager.java\nindex 04672eac1a..7df6e180af 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/319/TestFallbackPolicyManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/319/TestFallbackPolicyManager.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.bizkeeper;\n \n import org.apache.servicecomb.core.Invocation;\n@@ -29,7 +30,7 @@ import mockit.Mocked;\n public class TestFallbackPolicyManager {\n   @Test\n   public void testFallbackPolicyManager(final @Mocked Configuration config, final @Mocked Invocation invocation,\n-      final @Mocked OperationMeta operation) {\n+                                        final @Mocked OperationMeta operation) {\n     FallbackPolicyManager.addPolicy(new ReturnNullFallbackPolicy());\n     FallbackPolicyManager.addPolicy(new ThrowExceptionFallbackPolicy());\n     FallbackPolicyManager.addPolicy(new FromCacheFallbackPolicy());\n@@ -47,7 +48,8 @@ public class TestFallbackPolicyManager {\n       }\n     };\n \n-    Assert.assertEquals((String) null, FallbackPolicyManager.getFallbackResponse(\"Consumer\", null, invocation).getResult());\n+    Assert.assertEquals((String) null,\n+        FallbackPolicyManager.getFallbackResponse(\"Consumer\", null, invocation).getResult());\n \n     new Expectations() {\n       {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/319/TestFallbackPolicyManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/319/TestFallbackPolicyManager.java\nindex 04672eac1a..ed6d5395fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/319/TestFallbackPolicyManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/319/TestFallbackPolicyManager.java\n@@ -64,8 +64,7 @@ public class TestFallbackPolicyManager {\n     Assert.assertEquals(CseException.class,\n         ((Exception) FallbackPolicyManager.getFallbackResponse(\"Consumer\", null, invocation).getResult()).getCause()\n             .getClass());\n-\n-    new Expectations() {\n+new Expectations() {\n       {\n         invocation.getMicroserviceName();\n         result = \"testservice\";\n@@ -83,8 +82,7 @@ public class TestFallbackPolicyManager {\n     FallbackPolicyManager.record(\"Consumer\", invocation, Response.succResp(\"mockedfailure\"), false);\n     Assert.assertEquals(\"mockedsuccess\",\n         FallbackPolicyManager.getFallbackResponse(\"Consumer\", null, invocation).getResult());\n-\n-    new Expectations() {\n+new Expectations() {\n       {\n         invocation.getMicroserviceName();\n         result = \"testservice\";\n@@ -100,4 +98,4 @@ public class TestFallbackPolicyManager {\n         ((Exception) FallbackPolicyManager.getFallbackResponse(\"Consumer\", null, invocation).getResult()).getCause()\n             .getClass());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}