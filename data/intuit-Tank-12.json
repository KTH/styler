{
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "5",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     */\n    public List<User> getAllUsers() {\n    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n        Response response = webTarget.request().get();\n        exceptionHandler.checkStatusCode(response);\n        UserContainer container = response.readEntity(UserContainer.class);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/12/UserServiceClientV1.java\nindex e925617b3f..671cf3c46a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/12/UserServiceClientV1.java\n@@ -69,7 +69,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public List<User> getAllUsers() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         UserContainer container = response.readEntity(UserContainer.class);\n@@ -80,7 +80,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User getUser(String name) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n@@ -90,7 +90,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User authenticate(UserCredentials credentials) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n         Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/12/UserServiceClientV1.java\nindex e925617b3f..8be549187f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/12/UserServiceClientV1.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.client.v1.project;\n \n /*\n@@ -32,67 +33,63 @@ import com.intuit.tank.rest.util.ServiceConsants;\n \n /**\n  * ProjectClientV1\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class UserServiceClientV1 extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + UserService.SERVICE_RELATIVE_PATH;\n+  private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n+    + UserService.SERVICE_RELATIVE_PATH;\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public UserServiceClientV1(String serviceUrl) {\n-        super(serviceUrl, null, null);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public UserServiceClientV1(String serviceUrl) {\n+    super(serviceUrl, null, null);\n+  }\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public UserServiceClientV1(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n-        super(serviceUrl, proxyServer, proxyPort);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public UserServiceClientV1(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n+    super(serviceUrl, proxyServer, proxyPort);\n+  }\n \n-    /**\n-     * \n-     * @return\n-     */\n-    protected String getServiceBaseUrl() {\n-        return SERVICE_BASE_URL;\n-    }\n+  /**\n+   * @return\n+   */\n+  protected String getServiceBaseUrl() {\n+    return SERVICE_BASE_URL;\n+  }\n \n-    /**\n-     * @inheritDoc\n-     */\n-    public List<User> getAllUsers() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n-        Response response = webTarget.request().get();\n-        exceptionHandler.checkStatusCode(response);\n-        UserContainer container = response.readEntity(UserContainer.class);\n-        return container.getUsers();\n-    }\n+  /**\n+   * @inheritDoc\n+   */\n+  public List<User> getAllUsers() {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n+    Response response = webTarget.request().get();\n+    exceptionHandler.checkStatusCode(response);\n+    UserContainer container = response.readEntity(UserContainer.class);\n+    return container.getUsers();\n+  }\n \n-    /**\n-     * @inheritDoc\n-     */\n-    public User getUser(String name) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n-        Response response = webTarget.request().get();\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(User.class);\n-    }\n+  /**\n+   * @inheritDoc\n+   */\n+  public User getUser(String name) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n+    Response response = webTarget.request().get();\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(User.class);\n+  }\n \n-    /**\n-     * @inheritDoc\n-     */\n-    public User authenticate(UserCredentials credentials) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n-        Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(User.class);\n-    }\n+  /**\n+   * @inheritDoc\n+   */\n+  public User authenticate(UserCredentials credentials) {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n+    Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(User.class);\n+  }\n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/12/UserServiceClientV1.java\nindex e925617b3f..eb0e89662c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/12/UserServiceClientV1.java\n@@ -69,8 +69,8 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public List<User> getAllUsers() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n-        Response response = webTarget.request().get();\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n+Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         UserContainer container = response.readEntity(UserContainer.class);\n         return container.getUsers();\n@@ -80,8 +80,8 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User getUser(String name) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n-        Response response = webTarget.request().get();\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n+Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n     }\n@@ -90,9 +90,9 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User authenticate(UserCredentials credentials) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n-        Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n+Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/12/UserServiceClientV1.java\nindex e925617b3f..c63a242f88 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/12/UserServiceClientV1.java\n@@ -16,13 +16,13 @@ package com.intuit.tank.client.v1.project;\n  * #L%\n  */\n \n-import java.util.List;\n \n+\n+import java.util.List;\n import javax.ws.rs.client.Entity;\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-\n import com.intuit.tank.api.model.v1.user.User;\n import com.intuit.tank.api.model.v1.user.UserContainer;\n import com.intuit.tank.api.model.v1.user.UserCredentials;\n@@ -36,15 +36,17 @@ import com.intuit.tank.rest.util.ServiceConsants;\n  * @author dangleton\n  * \n  */\n+\n public class UserServiceClientV1 extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + UserService.SERVICE_RELATIVE_PATH;\n+    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT + UserService.SERVICE_RELATIVE_PATH;\n \n     /**\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public UserServiceClientV1(String serviceUrl) {\n         super(serviceUrl, null, null);\n     }\n@@ -53,6 +55,8 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public UserServiceClientV1(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n         super(serviceUrl, proxyServer, proxyPort);\n     }\n@@ -61,6 +65,8 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * \n      * @return\n      */\n+\n+\n     protected String getServiceBaseUrl() {\n         return SERVICE_BASE_URL;\n     }\n@@ -68,8 +74,10 @@ public class UserServiceClientV1 extends BaseRestClient {\n     /**\n      * @inheritDoc\n      */\n+\n+\n     public List<User> getAllUsers() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         UserContainer container = response.readEntity(UserContainer.class);\n@@ -79,8 +87,10 @@ public class UserServiceClientV1 extends BaseRestClient {\n     /**\n      * @inheritDoc\n      */\n+\n+\n     public User getUser(String name) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n@@ -89,10 +99,13 @@ public class UserServiceClientV1 extends BaseRestClient {\n     /**\n      * @inheritDoc\n      */\n+\n+\n     public User authenticate(UserCredentials credentials) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n         Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/12/UserServiceClientV1.java\nindex e925617b3f..671cf3c46a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/12/UserServiceClientV1.java\n@@ -69,7 +69,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public List<User> getAllUsers() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         UserContainer container = response.readEntity(UserContainer.class);\n@@ -80,7 +80,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User getUser(String name) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n@@ -90,7 +90,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User authenticate(UserCredentials credentials) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n         Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/12/UserServiceClientV1.java\nindex e925617b3f..0925a2c7f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/12/UserServiceClientV1.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/12/UserServiceClientV1.java\n@@ -69,7 +69,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public List<User> getAllUsers() {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USERS));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         UserContainer container = response.readEntity(UserContainer.class);\n@@ -80,7 +80,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User getUser(String name) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_USER, name));\n         Response response = webTarget.request().get();\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n@@ -90,7 +90,7 @@ public class UserServiceClientV1 extends BaseRestClient {\n      * @inheritDoc\n      */\n     public User authenticate(UserCredentials credentials) {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n+\t\t\t\t\tWebTarget webTarget = client.target(urlBuilder.buildUrl(UserService.METHOD_AUTHENTICATE));\n         Response response = webTarget.request().post(Entity.entity(credentials, MediaType.APPLICATION_XML));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(User.class);\n",
            "diff_size": 3
        }
    ]
}