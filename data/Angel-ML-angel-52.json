{
    "error_id": "52",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "error",
                "message": "No trailing whitespace allowed.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "public class TextModelLineConvert implements ModelLineConvert {\n  private final String seperator;\n  \n  public TextModelLineConvert() {\n    seperator = \":\";\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/52/TextModelLineConvert.java\nindex 566bb5c4c7..1aec3569bd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/52/TextModelLineConvert.java\n@@ -26,7 +26,7 @@ import java.io.IOException;\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n   private final String seperator;\n-  \n+\n   public TextModelLineConvert() {\n     seperator = \":\";\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/52/TextModelLineConvert.java\nindex 566bb5c4c7..64db29b0ac 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/52/TextModelLineConvert.java\n@@ -25,38 +25,43 @@ import java.io.IOException;\n  * Text serializer\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n-  private final String seperator;\n-  \n-  public TextModelLineConvert() {\n-    seperator = \":\";\n-  }\n-\n-  public TextModelLineConvert(String seperator) {\n-    this.seperator = seperator;\n-  }\n-\n-  @Override public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n-    IOException {\n-    output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n-  }\n-\n-  @Override public void convertDouble(FSDataOutputStream output, int index, double value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-\n-  @Override public void convertFloat(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-\n-  @Override public void convertInt(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-\n-  @Override public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n+    private final String seperator;\n+\n+    public TextModelLineConvert() {\n+        seperator = \":\";\n+    }\n+\n+    public TextModelLineConvert(String seperator) {\n+        this.seperator = seperator;\n+    }\n+\n+    @Override\n+    public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n+            IOException {\n+        output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertDouble(FSDataOutputStream output, int index, double value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertFloat(FSDataOutputStream output, int index, float value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertInt(FSDataOutputStream output, int index, float value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/52/TextModelLineConvert.java\nindex 566bb5c4c7..543ce1a134 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/52/TextModelLineConvert.java\n@@ -26,37 +26,37 @@ import java.io.IOException;\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n   private final String seperator;\n-  \n-  public TextModelLineConvert() {\n-    seperator = \":\";\n+\n+public TextModelLineConvert() {\n+  seperator = \":\";\n   }\n \n   public TextModelLineConvert(String seperator) {\n     this.seperator = seperator;\n   }\n \n-  @Override public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n-    IOException {\n+  @Override\n+public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws IOException {\n     output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n   }\n \n-  @Override public void convertDouble(FSDataOutputStream output, int index, double value)\n-    throws IOException {\n+  @Override\n+public void convertDouble(FSDataOutputStream output, int index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertFloat(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+  @Override\n+public void convertFloat(FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertInt(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+  @Override\n+public void convertInt(FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n-    throws IOException {\n+  @Override\n+public void convertDoubleLongKey(FSDataOutputStream output, long index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/52/TextModelLineConvert.java\nindex 566bb5c4c7..c062e964d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/52/TextModelLineConvert.java\n@@ -18,45 +18,45 @@\n package com.tencent.angel.tools;\n \n import org.apache.hadoop.fs.FSDataOutputStream;\n-\n import java.io.IOException;\n \n /**\n  * Text serializer\n  */\n+\n public class TextModelLineConvert implements ModelLineConvert {\n-  private final String seperator;\n-  \n-  public TextModelLineConvert() {\n+    private final String seperator;\n+\n+    public TextModelLineConvert() {\n     seperator = \":\";\n-  }\n+    }\n \n-  public TextModelLineConvert(String seperator) {\n+    public TextModelLineConvert(String seperator) {\n     this.seperator = seperator;\n-  }\n+    }\n \n-  @Override public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n-    IOException {\n+    @Override\n+    public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws IOException {\n     output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n-  }\n+    }\n \n-  @Override public void convertDouble(FSDataOutputStream output, int index, double value)\n-    throws IOException {\n+    @Override\n+    public void convertDouble(FSDataOutputStream output, int index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n+    }\n \n-  @Override public void convertFloat(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+    @Override\n+    public void convertFloat(FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n+    }\n \n-  @Override public void convertInt(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+    @Override\n+    public void convertInt(FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n+    }\n \n-  @Override public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n-    throws IOException {\n+    @Override\n+    public void convertDoubleLongKey(FSDataOutputStream output, long index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/52/TextModelLineConvert.java\nindex 566bb5c4c7..1aec3569bd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/52/TextModelLineConvert.java\n@@ -26,7 +26,7 @@ import java.io.IOException;\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n   private final String seperator;\n-  \n+\n   public TextModelLineConvert() {\n     seperator = \":\";\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/52/TextModelLineConvert.java\nindex 566bb5c4c7..42215f7878 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/52/TextModelLineConvert.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/52/TextModelLineConvert.java\n@@ -25,8 +25,8 @@ import java.io.IOException;\n  * Text serializer\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n-  private final String seperator;\n-  \n+  private final String seperator ;\n+\n   public TextModelLineConvert() {\n     seperator = \":\";\n   }\n",
            "diff_size": 2
        }
    ]
}