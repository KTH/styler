{
    "error_id": "87",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "55",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    } else {\n      ItemDTO beforeItem = baseItems.get(0);\n      if (!configText.equals(beforeItem.getValue())) {//update\n        changeSets.addUpdateItem(createItem(namespaceId, configText));\n      }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler/87/FileTextResolver.java\nindex 499701851e..8973fc898f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler/87/FileTextResolver.java\n@@ -24,7 +24,7 @@ public class FileTextResolver implements ConfigTextResolver {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n       ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+      if (!configText.equals(beforeItem.getValue())) { //update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "column": "57",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/codebuff/87/FileTextResolver.java\nindex 499701851e..9166837088 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/codebuff/87/FileTextResolver.java\n@@ -4,39 +4,35 @@ import com.ctrip.framework.apollo.core.ConfigConsts;\n import com.ctrip.framework.apollo.core.dto.ItemChangeSets;\n import com.ctrip.framework.apollo.core.dto.ItemDTO;\n import com.ctrip.framework.apollo.core.utils.StringUtils;\n-\n import org.springframework.stereotype.Component;\n import org.springframework.util.CollectionUtils;\n-\n import java.util.List;\n \n @Component(\"fileTextResolver\")\n public class FileTextResolver implements ConfigTextResolver {\n-\n-\n-  @Override\n-  public ItemChangeSets resolve(long namespaceId, String configText, List<ItemDTO> baseItems) {\n+    @Override\n+    public ItemChangeSets resolve(long namespaceId, String configText, List<ItemDTO> baseItems) {\n     ItemChangeSets changeSets = new ItemChangeSets();\n     if (StringUtils.isEmpty(configText)) {\n-      return changeSets;\n+        return changeSets;\n     }\n+\n     if (CollectionUtils.isEmpty(baseItems)) {\n-      changeSets.addCreateItem(createItem(namespaceId, configText));\n+        changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n-      ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+        ItemDTO beforeItem = baseItems.get(0);\n+        if (!configText.equals(beforeItem.getValue())) {//update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n-      }\n+        }\n     }\n-\n     return changeSets;\n-  }\n+    }\n \n-  private ItemDTO createItem(long namespaceId, String value) {\n+    private ItemDTO createItem(long namespaceId, String value) {\n     ItemDTO item = new ItemDTO();\n     item.setNamespaceId(namespaceId);\n     item.setValue(value);\n     item.setKey(ConfigConsts.CONFIG_FILE_CONTENT_KEY);\n     return item;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_random/87/FileTextResolver.java\nindex 499701851e..8973fc898f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_random/87/FileTextResolver.java\n@@ -24,7 +24,7 @@ public class FileTextResolver implements ConfigTextResolver {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n       ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+      if (!configText.equals(beforeItem.getValue())) { //update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_three_grams/87/FileTextResolver.java\nindex 499701851e..8973fc898f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/87/FileTextResolver.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_three_grams/87/FileTextResolver.java\n@@ -24,7 +24,7 @@ public class FileTextResolver implements ConfigTextResolver {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n       ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+      if (!configText.equals(beforeItem.getValue())) { //update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n",
            "diff_size": 1
        }
    ]
}