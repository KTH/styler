{
    "error_id": "151",
    "information": {
        "errors": [
            {
                "line": "420",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/151/VoipReader.java\nindex 58b58d6b83..177bddec0f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/151/VoipReader.java\n@@ -417,7 +417,7 @@ public class VoipReader extends Reader<Voip> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/151/VoipReader.java\nindex 58b58d6b83..a0dcb18946 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/151/VoipReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account.availablephonenumbercountry;\n@@ -417,7 +417,7 @@ public class VoipReader extends Reader<Voip> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/151/VoipReader.java\nindex 58b58d6b83..908b8d0bc8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/151/VoipReader.java\n@@ -48,6 +48,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param pathCountryCode The ISO Country code of the country from which to\n      *                        read phone numbers\n      */\n+\n+\n     public VoipReader(final String pathCountryCode) {\n         this.pathCountryCode = pathCountryCode;\n     }\n@@ -60,6 +62,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param pathCountryCode The ISO Country code of the country from which to\n      *                        read phone numbers\n      */\n+\n+\n     public VoipReader(final String pathAccountSid,\n                       final String pathCountryCode) {\n         this.pathAccountSid = pathAccountSid;\n@@ -73,6 +77,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param areaCode The area code of the phone numbers to read\n      * @return this\n      */\n+\n+\n     public VoipReader setAreaCode(final Integer areaCode) {\n         this.areaCode = areaCode;\n         return this;\n@@ -87,6 +93,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param contains The pattern on which to match phone numbers\n      * @return this\n      */\n+\n+\n     public VoipReader setContains(final String contains) {\n         this.contains = contains;\n         return this;\n@@ -99,6 +107,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param smsEnabled Whether the phone numbers can receive text messages\n      * @return this\n      */\n+\n+\n     public VoipReader setSmsEnabled(final Boolean smsEnabled) {\n         this.smsEnabled = smsEnabled;\n         return this;\n@@ -111,6 +121,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param mmsEnabled Whether the phone numbers can receive MMS messages\n      * @return this\n      */\n+\n+\n     public VoipReader setMmsEnabled(final Boolean mmsEnabled) {\n         this.mmsEnabled = mmsEnabled;\n         return this;\n@@ -122,6 +134,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param voiceEnabled Whether the phone numbers can receive calls.\n      * @return this\n      */\n+\n+\n     public VoipReader setVoiceEnabled(final Boolean voiceEnabled) {\n         this.voiceEnabled = voiceEnabled;\n         return this;\n@@ -136,6 +150,8 @@ public class VoipReader extends Reader<Voip> {\n      *                                  require an Address\n      * @return this\n      */\n+\n+\n     public VoipReader setExcludeAllAddressRequired(final Boolean excludeAllAddressRequired) {\n         this.excludeAllAddressRequired = excludeAllAddressRequired;\n         return this;\n@@ -150,6 +166,8 @@ public class VoipReader extends Reader<Voip> {\n      *                                    require a local address\n      * @return this\n      */\n+\n+\n     public VoipReader setExcludeLocalAddressRequired(final Boolean excludeLocalAddressRequired) {\n         this.excludeLocalAddressRequired = excludeLocalAddressRequired;\n         return this;\n@@ -164,6 +182,8 @@ public class VoipReader extends Reader<Voip> {\n      *                                      require a foreign address\n      * @return this\n      */\n+\n+\n     public VoipReader setExcludeForeignAddressRequired(final Boolean excludeForeignAddressRequired) {\n         this.excludeForeignAddressRequired = excludeForeignAddressRequired;\n         return this;\n@@ -176,6 +196,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param beta Whether to read phone numbers new to the Twilio platform\n      * @return this\n      */\n+\n+\n     public VoipReader setBeta(final Boolean beta) {\n         this.beta = beta;\n         return this;\n@@ -190,6 +212,8 @@ public class VoipReader extends Reader<Voip> {\n      *                   within distance miles. (US/Canada only)\n      * @return this\n      */\n+\n+\n     public VoipReader setNearNumber(final com.twilio.type.PhoneNumber nearNumber) {\n         this.nearNumber = nearNumber;\n         return this;\n@@ -204,6 +228,8 @@ public class VoipReader extends Reader<Voip> {\n      *                   within distance miles. (US/Canada only)\n      * @return this\n      */\n+\n+\n     public VoipReader setNearNumber(final String nearNumber) {\n         return setNearNumber(Promoter.phoneNumberFromString(nearNumber));\n     }\n@@ -217,6 +243,8 @@ public class VoipReader extends Reader<Voip> {\n      *                    (US/Canada only)\n      * @return this\n      */\n+\n+\n     public VoipReader setNearLatLong(final String nearLatLong) {\n         this.nearLatLong = nearLatLong;\n         return this;\n@@ -230,6 +258,8 @@ public class VoipReader extends Reader<Voip> {\n      *                 only)\n      * @return this\n      */\n+\n+\n     public VoipReader setDistance(final Integer distance) {\n         this.distance = distance;\n         return this;\n@@ -244,6 +274,8 @@ public class VoipReader extends Reader<Voip> {\n      *                     only)\n      * @return this\n      */\n+\n+\n     public VoipReader setInPostalCode(final String inPostalCode) {\n         this.inPostalCode = inPostalCode;\n         return this;\n@@ -257,6 +289,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param inRegion Limit results to a particular region. (US/Canada only)\n      * @return this\n      */\n+\n+\n     public VoipReader setInRegion(final String inRegion) {\n         this.inRegion = inRegion;\n         return this;\n@@ -272,6 +306,8 @@ public class VoipReader extends Reader<Voip> {\n      *                     number. (US/Canada only)\n      * @return this\n      */\n+\n+\n     public VoipReader setInRateCenter(final String inRateCenter) {\n         this.inRateCenter = inRateCenter;\n         return this;\n@@ -288,6 +324,8 @@ public class VoipReader extends Reader<Voip> {\n      *               (US/Canada only)\n      * @return this\n      */\n+\n+\n     public VoipReader setInLata(final String inLata) {\n         this.inLata = inLata;\n         return this;\n@@ -300,6 +338,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param inLocality Limit results to a particular locality\n      * @return this\n      */\n+\n+\n     public VoipReader setInLocality(final String inLocality) {\n         this.inLocality = inLocality;\n         return this;\n@@ -311,6 +351,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param faxEnabled Whether the phone numbers can receive faxes\n      * @return this\n      */\n+\n+\n     public VoipReader setFaxEnabled(final Boolean faxEnabled) {\n         this.faxEnabled = faxEnabled;\n         return this;\n@@ -322,6 +364,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Voip ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Voip> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -333,6 +377,8 @@ public class VoipReader extends Reader<Voip> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Voip ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Voip> firstPage(final TwilioRestClient client) {\n@@ -341,7 +387,7 @@ public class VoipReader extends Reader<Voip> {\n             HttpMethod.GET,\n             Domains.API.toString(),\n             \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/AvailablePhoneNumbers/\" + this.pathCountryCode + \"/Voip.json\"\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -354,15 +400,14 @@ public class VoipReader extends Reader<Voip> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Voip ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Voip> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<Voip> getPage(final String targetUrl,\n+                              final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -373,13 +418,12 @@ public class VoipReader extends Reader<Voip> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Voip> nextPage(final Page<Voip> page,\n                                final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -390,13 +434,12 @@ public class VoipReader extends Reader<Voip> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Voip> previousPage(final Page<Voip> page,\n                                    final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -407,9 +450,11 @@ public class VoipReader extends Reader<Voip> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Voip> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Voip> pageForRequest(final TwilioRestClient client,\n+                                      final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Voip read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -417,7 +462,8 @@ public class VoipReader extends Reader<Voip> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -425,7 +471,7 @@ public class VoipReader extends Reader<Voip> {\n             response.getContent(),\n             Voip.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -433,6 +479,8 @@ public class VoipReader extends Reader<Voip> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (areaCode != null) {\n             request.addQueryParam(\"AreaCode\", areaCode.toString());\n",
            "diff_size": 79
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/151/VoipReader.java\nindex 58b58d6b83..177bddec0f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/151/VoipReader.java\n@@ -417,7 +417,7 @@ public class VoipReader extends Reader<Voip> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/151/VoipReader.java\nindex 58b58d6b83..3de172b310 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/151/VoipReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/151/VoipReader.java\n@@ -417,7 +417,8 @@ public class VoipReader extends Reader<Voip> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}