{
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 214).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n\n        if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n            return smallWechatAttrs;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/39/SmallWechatAttrInnerServiceSMOImpl.java\nindex e7bf61eeee..7579d26415 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/39/SmallWechatAttrInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             smallWechatAttrDto.setPage((page - 1) * smallWechatAttrDto.getRow());\n-        }\n-\n-        List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n+        } List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n \n         if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n             return smallWechatAttrs;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/39/SmallWechatAttrInnerServiceSMOImpl.java\nindex e7bf61eeee..799dc74c53 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/39/SmallWechatAttrInnerServiceSMOImpl.java\n@@ -27,85 +27,88 @@ import java.util.List;\n @RestController\n public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISmallWechatAttrInnerServiceSMO {\n \n-    @Autowired\n-    private ISmallWechatAttrServiceDao smallWechatAttrServiceDaoImpl;\n+  @Autowired\n+  private ISmallWechatAttrServiceDao smallWechatAttrServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<SmallWechatAttrDto> querySmallWechatAttrs(@RequestBody  SmallWechatAttrDto smallWechatAttrDto) {\n+  @Override\n+  public List<SmallWechatAttrDto> querySmallWechatAttrs(@RequestBody SmallWechatAttrDto smallWechatAttrDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = smallWechatAttrDto.getPage();\n+    int page = smallWechatAttrDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            smallWechatAttrDto.setPage((page - 1) * smallWechatAttrDto.getRow());\n-        }\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      smallWechatAttrDto.setPage((page - 1) * smallWechatAttrDto.getRow());\n+    }\n \n-        List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n+    List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil\n+      .covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)),\n+        SmallWechatAttrDto.class);\n \n-        if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n-            return smallWechatAttrs;\n-        }\n+    if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n+      return smallWechatAttrs;\n+    }\n \n-        String[] userIds = getUserIds(smallWechatAttrs);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n+    String[] userIds = getUserIds(smallWechatAttrs);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-        for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n-            refreshSmallWechatAttr(smallWechatAttr, users);\n-        }\n-        return smallWechatAttrs;\n+    for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n+      refreshSmallWechatAttr(smallWechatAttr, users);\n     }\n-\n-    /**\n-     * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n-     *\n-     * @param smallWechatAttr \u5c0f\u533a\u5fae\u4fe1\u5c5e\u6027\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n-     */\n-    private void refreshSmallWechatAttr(SmallWechatAttrDto smallWechatAttr, List<UserDto> users) {\n-        for (UserDto user : users) {\n-            if (smallWechatAttr.getAttrId().equals(user.getUserId())) {\n-                BeanConvertUtil.covertBean(user, smallWechatAttr);\n-            }\n-        }\n+    return smallWechatAttrs;\n+  }\n+\n+  /**\n+   * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n+   *\n+   * @param smallWechatAttr \u5c0f\u533a\u5fae\u4fe1\u5c5e\u6027\u4fe1\u606f\n+   * @param users           \u7528\u6237\u5217\u8868\n+   */\n+  private void refreshSmallWechatAttr(SmallWechatAttrDto smallWechatAttr, List<UserDto> users) {\n+    for (UserDto user : users) {\n+      if (smallWechatAttr.getAttrId().equals(user.getUserId())) {\n+        BeanConvertUtil.covertBean(user, smallWechatAttr);\n+      }\n     }\n-\n-    /**\n-     * \u83b7\u53d6\u6279\u91cfuserId\n-     *\n-     * @param smallWechatAttrs \u5c0f\u533a\u697c\u4fe1\u606f\n-     * @return \u6279\u91cfuserIds \u4fe1\u606f\n-     */\n-     private String[] getUserIds(List<SmallWechatAttrDto> smallWechatAttrs) {\n-        List<String> userIds = new ArrayList<String>();\n-        for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n-            userIds.add(smallWechatAttr.getAttrId());\n-        }\n-\n-        return userIds.toArray(new String[userIds.size()]);\n+  }\n+\n+  /**\n+   * \u83b7\u53d6\u6279\u91cfuserId\n+   *\n+   * @param smallWechatAttrs \u5c0f\u533a\u697c\u4fe1\u606f\n+   * @return \u6279\u91cfuserIds \u4fe1\u606f\n+   */\n+  private String[] getUserIds(List<SmallWechatAttrDto> smallWechatAttrs) {\n+    List<String> userIds = new ArrayList<String>();\n+    for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n+      userIds.add(smallWechatAttr.getAttrId());\n     }\n \n-    @Override\n-    public int querySmallWechatAttrsCount(@RequestBody SmallWechatAttrDto smallWechatAttrDto) {\n-        return smallWechatAttrServiceDaoImpl.querySmallWechatAttrsCount(BeanConvertUtil.beanCovertMap(smallWechatAttrDto));    }\n+    return userIds.toArray(new String[userIds.size()]);\n+  }\n \n-    public ISmallWechatAttrServiceDao getSmallWechatAttrServiceDaoImpl() {\n-        return smallWechatAttrServiceDaoImpl;\n-    }\n+  @Override\n+  public int querySmallWechatAttrsCount(@RequestBody SmallWechatAttrDto smallWechatAttrDto) {\n+    return smallWechatAttrServiceDaoImpl.querySmallWechatAttrsCount(BeanConvertUtil.beanCovertMap(smallWechatAttrDto));\n+  }\n \n-    public void setSmallWechatAttrServiceDaoImpl(ISmallWechatAttrServiceDao smallWechatAttrServiceDaoImpl) {\n-        this.smallWechatAttrServiceDaoImpl = smallWechatAttrServiceDaoImpl;\n-    }\n+  public ISmallWechatAttrServiceDao getSmallWechatAttrServiceDaoImpl() {\n+    return smallWechatAttrServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public void setSmallWechatAttrServiceDaoImpl(ISmallWechatAttrServiceDao smallWechatAttrServiceDaoImpl) {\n+    this.smallWechatAttrServiceDaoImpl = smallWechatAttrServiceDaoImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n+\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/39/SmallWechatAttrInnerServiceSMOImpl.java\nindex e7bf61eeee..72618b684f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/39/SmallWechatAttrInnerServiceSMOImpl.java\n@@ -80,8 +80,8 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n      * @param smallWechatAttrs \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-     private String[] getUserIds(List<SmallWechatAttrDto> smallWechatAttrs) {\n-        List<String> userIds = new ArrayList<String>();\n+private String[] getUserIds(List<SmallWechatAttrDto> smallWechatAttrs) {\n+    List<String> userIds = new ArrayList<String>();\n         for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n             userIds.add(smallWechatAttr.getAttrId());\n         }\n@@ -108,4 +108,4 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/39/SmallWechatAttrInnerServiceSMOImpl.java\nindex e7bf61eeee..10d42b3ab1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/39/SmallWechatAttrInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.store.smo.impl;\n \n-\n import com.java110.store.dao.ISmallWechatAttrServiceDao;\n import com.java110.core.smo.store.ISmallWechatAttrInnerServiceSMO;\n import com.java110.dto.smallWechatAttr.SmallWechatAttrDto;\n@@ -12,7 +11,6 @@ import com.java110.dto.PageDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -24,6 +22,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISmallWechatAttrInnerServiceSMO {\n \n@@ -34,18 +34,15 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<SmallWechatAttrDto> querySmallWechatAttrs(@RequestBody  SmallWechatAttrDto smallWechatAttrDto) {\n+    public List<SmallWechatAttrDto> querySmallWechatAttrs(@RequestBody SmallWechatAttrDto smallWechatAttrDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = smallWechatAttrDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             smallWechatAttrDto.setPage((page - 1) * smallWechatAttrDto.getRow());\n         }\n \n         List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n-\n         if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n             return smallWechatAttrs;\n         }\n@@ -53,10 +50,10 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n         String[] userIds = getUserIds(smallWechatAttrs);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n             refreshSmallWechatAttr(smallWechatAttr, users);\n         }\n+\n         return smallWechatAttrs;\n     }\n \n@@ -66,6 +63,8 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n      * @param smallWechatAttr \u5c0f\u533a\u5fae\u4fe1\u5c5e\u6027\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshSmallWechatAttr(SmallWechatAttrDto smallWechatAttr, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (smallWechatAttr.getAttrId().equals(user.getUserId())) {\n@@ -80,7 +79,9 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n      * @param smallWechatAttrs \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-     private String[] getUserIds(List<SmallWechatAttrDto> smallWechatAttrs) {\n+\n+\n+    private String[] getUserIds(List<SmallWechatAttrDto> smallWechatAttrs) {\n         List<String> userIds = new ArrayList<String>();\n         for (SmallWechatAttrDto smallWechatAttr : smallWechatAttrs) {\n             userIds.add(smallWechatAttr.getAttrId());\n@@ -89,9 +90,11 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n+\n     @Override\n     public int querySmallWechatAttrsCount(@RequestBody SmallWechatAttrDto smallWechatAttrDto) {\n-        return smallWechatAttrServiceDaoImpl.querySmallWechatAttrsCount(BeanConvertUtil.beanCovertMap(smallWechatAttrDto));    }\n+        return smallWechatAttrServiceDaoImpl.querySmallWechatAttrsCount(BeanConvertUtil.beanCovertMap(smallWechatAttrDto));\n+    }\n \n     public ISmallWechatAttrServiceDao getSmallWechatAttrServiceDaoImpl() {\n         return smallWechatAttrServiceDaoImpl;\n@@ -108,4 +111,4 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/39/SmallWechatAttrInnerServiceSMOImpl.java\nindex e7bf61eeee..7579d26415 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/39/SmallWechatAttrInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             smallWechatAttrDto.setPage((page - 1) * smallWechatAttrDto.getRow());\n-        }\n-\n-        List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n+        } List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n \n         if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n             return smallWechatAttrs;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/39/SmallWechatAttrInnerServiceSMOImpl.java\nindex e7bf61eeee..a1e23bdb31 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/39/SmallWechatAttrInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/39/SmallWechatAttrInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class SmallWechatAttrInnerServiceSMOImpl extends BaseServiceSMO implement\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             smallWechatAttrDto.setPage((page - 1) * smallWechatAttrDto.getRow());\n-        }\n-\n-        List<SmallWechatAttrDto> smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n+        } List<SmallWechatAttrDto>smallWechatAttrs = BeanConvertUtil.covertBeanList(smallWechatAttrServiceDaoImpl.getSmallWechatAttrInfo(BeanConvertUtil.beanCovertMap(smallWechatAttrDto)), SmallWechatAttrDto.class);\n \n         if (smallWechatAttrs == null || smallWechatAttrs.size() == 0) {\n             return smallWechatAttrs;\n",
            "diff_size": 3
        }
    ]
}