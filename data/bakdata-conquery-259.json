{
    "error_id": "259",
    "information": {
        "errors": [
            {
                "line": "155",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\t\tcBlock.getMostSpecificChildren().add(null);\n\t\t\t\t}\n\t\t\t} catch (ConceptConfigurationException ex) {\n\t\t\t\tlog.error(\"Failed to resolve event \"+bucket+\"-\"+entry.getEvent()+\" against concept \"+connector, ex);\n\t\t\t}\n\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "155",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/259/CalculateCBlocksJob.java\nindex 71e297185d..c266b8f72b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/259/CalculateCBlocksJob.java\n@@ -44,16 +44,16 @@ public class CalculateCBlocksJob extends Job {\n \tpublic String getLabel() {\n \t\treturn \"Calculate \"+infos.size()+\" CBlocks for \"+connector.getId();\n \t}\n-\t\n+\n \tpublic void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n \t\tinfos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n \t}\n-\t\n+\n \t@Override\n \tpublic void execute() throws Exception {\n \t\tboolean treeConcept = connector.getConcept() instanceof TreeConcept;\n \t\tthis.progressReporter.setMax(infos.size());\n-\t\t\n+\n \t\tfor(int i=0;i<infos.size();i++) {\n \t\t\ttry {\n \t\t\t\tif (!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n@@ -79,7 +79,7 @@ public class CalculateCBlocksJob extends Job {\n \t\t}\n \t\tprogressReporter.done();\n \t}\n-\t\n+\n \tprivate void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n \t\tBucket bucket = info.getBucket();\n \t\tTable table = storage.getDataset().getTables().get(bucket.getImp().getTable());\n@@ -109,7 +109,7 @@ public class CalculateCBlocksJob extends Job {\n \tprivate void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n \n \t\tBucket bucket = info.getBucket();\n-\t\t\n+\n \t\tAStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n \n \t\tfinal TreeConcept treeConcept = connector.getConcept();\n@@ -123,13 +123,13 @@ public class CalculateCBlocksJob extends Job {\n \t\tcBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n \n \t\tfinal ConceptTreeCache cache = treeConcept.getCache(importId);\n-\t\t\n+\n \t\tfor(BucketEntry entry : bucket.entries()) {\n \t\t\ttry {\n \t\t\t\tfinal int event = entry.getEvent();\n \t\t\t\tif(bucket.has(event, connector.getColumn())) {\n \t\t\t\t\tint valueIndex = bucket.getString(event, connector.getColumn());\n-\t\t\t\t\t\n+\n \t\t\t\t\tfinal CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n \t\t\t\t\t\t() -> bucket.calculateMap(event, info.getImp())\n \t\t\t\t\t);\n",
            "diff_size": 7
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/259/CalculateCBlocksJob.java\nindex 71e297185d..40cb5d33e0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/259/CalculateCBlocksJob.java\n@@ -31,151 +31,149 @@ import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n-@RequiredArgsConstructor @Slf4j\n+@RequiredArgsConstructor\n+@Slf4j\n public class CalculateCBlocksJob extends Job {\n \n-\tprivate final List<CalculationInformation> infos = new ArrayList<>();\n-\tprivate final WorkerStorage storage;\n-\tprivate final BucketManager bucketManager;\n-\tprivate final Connector connector;\n-\tprivate final Table table;\n-\n-\t@Override\n-\tpublic String getLabel() {\n-\t\treturn \"Calculate \"+infos.size()+\" CBlocks for \"+connector.getId();\n-\t}\n-\t\n-\tpublic void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n-\t\tinfos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n-\t}\n-\t\n-\t@Override\n-\tpublic void execute() throws Exception {\n-\t\tboolean treeConcept = connector.getConcept() instanceof TreeConcept;\n-\t\tthis.progressReporter.setMax(infos.size());\n-\t\t\n-\t\tfor(int i=0;i<infos.size();i++) {\n-\t\t\ttry {\n-\t\t\t\tif (!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n-\t\t\t\t\tCBlock cBlock = createCBlock(connector, infos.get(i));\n-\t\t\t\t\tcBlock.initIndizes(infos.get(i).getBucket().getBucketSize());\n-\t\t\t\t\tif (treeConcept) {\n-\t\t\t\t\t\tcalculateCBlock(cBlock, (ConceptTreeConnector) connector, infos.get(i));\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\tcalculateCBlock(cBlock, (VirtualConceptConnector) connector, infos.get(i));\n-\t\t\t\t\t}\n-\t\t\t\t\tsetDateRangeIndex(cBlock, infos.get(i));\n-\t\t\t\t\tbucketManager.addCalculatedCBlock(cBlock);\n-\t\t\t\t\tstorage.addCBlock(cBlock);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tcatch (Exception e){\n-\t\t\t\tthrow new Exception(String.format(\"Exception in CalculateCBlocksJob (CBlock=%s, connector=%s, table=%s)\", infos.get(i).getCBlockId(), connector, table), e);\n-\t\t\t}\n-\t\t\tfinally {\n-\t\t\t\tthis.progressReporter.report(1);\n-\t\t\t}\n-\t\t}\n-\t\tprogressReporter.done();\n-\t}\n-\t\n-\tprivate void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n-\t\tBucket bucket = info.getBucket();\n-\t\tTable table = storage.getDataset().getTables().get(bucket.getImp().getTable());\n-\t\tfor(Column column : table.getColumns()) {\n-\t\t\tif(column.getType().isDateCompatible()) {\n-\t\t\t\tfor(BucketEntry entry : bucket.entries()) {\n-\t\t\t\t\tif(bucket.has(entry.getEvent(), column)) {\n-\t\t\t\t\t\tCDateRange range = bucket.getAsDateRange(entry.getEvent(), column);\n-\t\t\t\t\t\tcBlock.getMinDate()[entry.getLocalEntity()] = Math.min(cBlock.getMinDate()[entry.getLocalEntity()], range.getMinValue());\n-\t\t\t\t\t\tcBlock.getMaxDate()[entry.getLocalEntity()] = Math.max(cBlock.getMaxDate()[entry.getLocalEntity()], range.getMaxValue());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate CBlock createCBlock(Connector connector, CalculationInformation info) {\n-\t\treturn new CBlock(\n-\t\t\tinfo.getBucket().getId(),\n-\t\t\tconnector.getId()\n-\t\t);\n-\t}\n-\n-\tprivate void calculateCBlock(CBlock cBlock, VirtualConceptConnector connector, CalculationInformation info) {\n-\t}\n-\n-\tprivate void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n-\n-\t\tBucket bucket = info.getBucket();\n-\t\t\n-\t\tAStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n-\n-\t\tfinal TreeConcept treeConcept = connector.getConcept();\n-\n-\t\tfinal ImportId importId = info.getImp().getId();\n-\n-\t\tTreeChildPrefixIndex.putIndexInto(treeConcept);\n-\n-\t\ttreeConcept.initializeIdCache(stringType, importId);\n-\n-\t\tcBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n-\n-\t\tfinal ConceptTreeCache cache = treeConcept.getCache(importId);\n-\t\t\n-\t\tfor(BucketEntry entry : bucket.entries()) {\n-\t\t\ttry {\n-\t\t\t\tfinal int event = entry.getEvent();\n-\t\t\t\tif(bucket.has(event, connector.getColumn())) {\n-\t\t\t\t\tint valueIndex = bucket.getString(event, connector.getColumn());\n-\t\t\t\t\t\n-\t\t\t\t\tfinal CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n-\t\t\t\t\t\t() -> bucket.calculateMap(event, info.getImp())\n-\t\t\t\t\t);\n-\n-\t\t\t\t\tConceptTreeChild child = cache.findMostSpecificChild(valueIndex, rowMap);\n-\n-\t\t\t\t\tif (child != null) {\n-\t\t\t\t\t\tcBlock.getMostSpecificChildren().add(child.getPrefix());\n-\t\t\t\t\t\tConceptTreeNode<?> it = child;\n-\t\t\t\t\t\twhile(it != null) {\n-\t\t\t\t\t\t\tcBlock.getIncludedConcepts()[entry.getLocalEntity()] |= it.calculateBitMask();\n-\t\t\t\t\t\t\tit = it.getParent();\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\t//see #174  improve handling by copying the relevant things from the old project\n-\t\t\t\t\t\tcBlock.getMostSpecificChildren().add(null);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tcBlock.getMostSpecificChildren().add(null);\n-\t\t\t\t}\n-\t\t\t} catch (ConceptConfigurationException ex) {\n-\t\t\t\tlog.error(\"Failed to resolve event \"+bucket+\"-\"+entry.getEvent()+\" against concept \"+connector, ex);\n-\t\t\t}\n-\t\t}\n-\n-\t\t//see #175  metrics candidate\n-\t\tlog.trace(\n-\t\t\t\"Hits: {}, Misses: {}, Hits/Misses: {}, %Hits: {} (Up to now)\",\n-\t\t\tcache.getHits(),\n-\t\t\tcache.getMisses(),\n-\t\t\t(double) cache.getHits() / cache.getMisses(),\n-\t\t\t(double) cache.getHits() / (cache.getHits() + cache.getMisses())\n-\t\t);\n-\t}\n-\n-\tpublic boolean isEmpty() {\n-\t\treturn infos.isEmpty();\n-\t}\n-\n-\t@RequiredArgsConstructor @Getter @Setter\n-\tprivate static class CalculationInformation {\n-\t\tprivate final Table table;\n-\t\tprivate final Import imp;\n-\t\tprivate final Bucket bucket;\n-\t\tprivate final CBlockId cBlockId;\n-\t}\n+    private final List<CalculationInformation> infos = new ArrayList<>();\n+    private final WorkerStorage storage;\n+    private final BucketManager bucketManager;\n+    private final Connector connector;\n+    private final Table table;\n+\n+    @Override\n+    public String getLabel() {\n+        return \"Calculate \" + infos.size() + \" CBlocks for \" + connector.getId();\n+    }\n+\n+    public void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n+        infos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n+    }\n+\n+    @Override\n+    public void execute() throws Exception {\n+        boolean treeConcept = connector.getConcept() instanceof TreeConcept;\n+        this.progressReporter.setMax(infos.size());\n+\n+        for (int i = 0; i < infos.size(); i++) {\n+            try {\n+                if (!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n+                    CBlock cBlock = createCBlock(connector, infos.get(i));\n+                    cBlock.initIndizes(infos.get(i).getBucket().getBucketSize());\n+                    if (treeConcept) {\n+                        calculateCBlock(cBlock, (ConceptTreeConnector) connector, infos.get(i));\n+                    } else {\n+                        calculateCBlock(cBlock, (VirtualConceptConnector) connector, infos.get(i));\n+                    }\n+                    setDateRangeIndex(cBlock, infos.get(i));\n+                    bucketManager.addCalculatedCBlock(cBlock);\n+                    storage.addCBlock(cBlock);\n+                }\n+            } catch (Exception e) {\n+                throw new Exception(String.format(\"Exception in CalculateCBlocksJob (CBlock=%s, connector=%s, table=%s)\", infos.get(i).getCBlockId(), connector, table), e);\n+            } finally {\n+                this.progressReporter.report(1);\n+            }\n+        }\n+        progressReporter.done();\n+    }\n+\n+    private void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n+        Bucket bucket = info.getBucket();\n+        Table table = storage.getDataset().getTables().get(bucket.getImp().getTable());\n+        for (Column column : table.getColumns()) {\n+            if (column.getType().isDateCompatible()) {\n+                for (BucketEntry entry : bucket.entries()) {\n+                    if (bucket.has(entry.getEvent(), column)) {\n+                        CDateRange range = bucket.getAsDateRange(entry.getEvent(), column);\n+                        cBlock.getMinDate()[entry.getLocalEntity()] = Math.min(cBlock.getMinDate()[entry.getLocalEntity()], range.getMinValue());\n+                        cBlock.getMaxDate()[entry.getLocalEntity()] = Math.max(cBlock.getMaxDate()[entry.getLocalEntity()], range.getMaxValue());\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private CBlock createCBlock(Connector connector, CalculationInformation info) {\n+        return new CBlock(\n+            info.getBucket().getId(),\n+            connector.getId()\n+        );\n+    }\n+\n+    private void calculateCBlock(CBlock cBlock, VirtualConceptConnector connector, CalculationInformation info) {\n+    }\n+\n+    private void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n+\n+        Bucket bucket = info.getBucket();\n+\n+        AStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n+\n+        final TreeConcept treeConcept = connector.getConcept();\n+\n+        final ImportId importId = info.getImp().getId();\n+\n+        TreeChildPrefixIndex.putIndexInto(treeConcept);\n+\n+        treeConcept.initializeIdCache(stringType, importId);\n+\n+        cBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n+\n+        final ConceptTreeCache cache = treeConcept.getCache(importId);\n+\n+        for (BucketEntry entry : bucket.entries()) {\n+            try {\n+                final int event = entry.getEvent();\n+                if (bucket.has(event, connector.getColumn())) {\n+                    int valueIndex = bucket.getString(event, connector.getColumn());\n+\n+                    final CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n+                        () -> bucket.calculateMap(event, info.getImp())\n+                    );\n+\n+                    ConceptTreeChild child = cache.findMostSpecificChild(valueIndex, rowMap);\n+\n+                    if (child != null) {\n+                        cBlock.getMostSpecificChildren().add(child.getPrefix());\n+                        ConceptTreeNode<?> it = child;\n+                        while (it != null) {\n+                            cBlock.getIncludedConcepts()[entry.getLocalEntity()] |= it.calculateBitMask();\n+                            it = it.getParent();\n+                        }\n+                    } else {\n+                        //see #174  improve handling by copying the relevant things from the old project\n+                        cBlock.getMostSpecificChildren().add(null);\n+                    }\n+                } else {\n+                    cBlock.getMostSpecificChildren().add(null);\n+                }\n+            } catch (ConceptConfigurationException ex) {\n+                log.error(\"Failed to resolve event \" + bucket + \"-\" + entry.getEvent() + \" against concept \" + connector, ex);\n+            }\n+        }\n+\n+        //see #175  metrics candidate\n+        log.trace(\n+            \"Hits: {}, Misses: {}, Hits/Misses: {}, %Hits: {} (Up to now)\",\n+            cache.getHits(),\n+            cache.getMisses(),\n+            (double) cache.getHits() / cache.getMisses(),\n+            (double) cache.getHits() / (cache.getHits() + cache.getMisses())\n+        );\n+    }\n+\n+    public boolean isEmpty() {\n+        return infos.isEmpty();\n+    }\n+\n+    @RequiredArgsConstructor\n+    @Getter\n+    @Setter\n+    private static class CalculationInformation {\n+        private final Table table;\n+        private final Import imp;\n+        private final Bucket bucket;\n+        private final CBlockId cBlockId;\n+    }\n }\n",
            "diff_size": 146
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/259/CalculateCBlocksJob.java\nindex 71e297185d..c52d4e46d8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/259/CalculateCBlocksJob.java\n@@ -111,8 +111,7 @@ public class CalculateCBlocksJob extends Job {\n \t\tBucket bucket = info.getBucket();\n \t\t\n \t\tAStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n-\n-\t\tfinal TreeConcept treeConcept = connector.getConcept();\n+final TreeConcept treeConcept = connector.getConcept();\n \n \t\tfinal ImportId importId = info.getImp().getId();\n \n@@ -129,9 +128,7 @@ public class CalculateCBlocksJob extends Job {\n \t\t\t\tfinal int event = entry.getEvent();\n \t\t\t\tif(bucket.has(event, connector.getColumn())) {\n \t\t\t\t\tint valueIndex = bucket.getString(event, connector.getColumn());\n-\t\t\t\t\t\n-\t\t\t\t\tfinal CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n-\t\t\t\t\t\t() -> bucket.calculateMap(event, info.getImp())\n+final CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(() -> bucket.calculateMap(event, info.getImp())\n \t\t\t\t\t);\n \n \t\t\t\t\tConceptTreeChild child = cache.findMostSpecificChild(valueIndex, rowMap);\n@@ -152,7 +149,8 @@ public class CalculateCBlocksJob extends Job {\n \t\t\t\telse {\n \t\t\t\t\tcBlock.getMostSpecificChildren().add(null);\n \t\t\t\t}\n-\t\t\t} catch (ConceptConfigurationException ex) {\n+\t\t\t}\n+catch (ConceptConfigurationException ex) {\n \t\t\t\tlog.error(\"Failed to resolve event \"+bucket+\"-\"+entry.getEvent()+\" against concept \"+connector, ex);\n \t\t\t}\n \t\t}\n@@ -161,9 +159,7 @@ public class CalculateCBlocksJob extends Job {\n \t\tlog.trace(\n \t\t\t\"Hits: {}, Misses: {}, Hits/Misses: {}, %Hits: {} (Up to now)\",\n \t\t\tcache.getHits(),\n-\t\t\tcache.getMisses(),\n-\t\t\t(double) cache.getHits() / cache.getMisses(),\n-\t\t\t(double) cache.getHits() / (cache.getHits() + cache.getMisses())\n+\t\t\tcache.getMisses(), (double) cache.getHits() / cache.getMisses(), (double) cache.getHits() / (cache.getHits() + cache.getMisses())\n \t\t);\n \t}\n \n@@ -178,4 +174,4 @@ public class CalculateCBlocksJob extends Job {\n \t\tprivate final Bucket bucket;\n \t\tprivate final CBlockId cBlockId;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/259/CalculateCBlocksJob.java\nindex 71e297185d..4150206f67 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/259/CalculateCBlocksJob.java\n@@ -26,156 +26,141 @@ import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.Setter;\n import lombok.extern.slf4j.Slf4j;\n-\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n-@RequiredArgsConstructor @Slf4j\n+@RequiredArgsConstructor\n+@Slf4j\n public class CalculateCBlocksJob extends Job {\n \n-\tprivate final List<CalculationInformation> infos = new ArrayList<>();\n-\tprivate final WorkerStorage storage;\n-\tprivate final BucketManager bucketManager;\n-\tprivate final Connector connector;\n-\tprivate final Table table;\n-\n-\t@Override\n-\tpublic String getLabel() {\n-\t\treturn \"Calculate \"+infos.size()+\" CBlocks for \"+connector.getId();\n-\t}\n-\t\n-\tpublic void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n-\t\tinfos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n-\t}\n-\t\n-\t@Override\n-\tpublic void execute() throws Exception {\n-\t\tboolean treeConcept = connector.getConcept() instanceof TreeConcept;\n-\t\tthis.progressReporter.setMax(infos.size());\n-\t\t\n-\t\tfor(int i=0;i<infos.size();i++) {\n-\t\t\ttry {\n-\t\t\t\tif (!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n-\t\t\t\t\tCBlock cBlock = createCBlock(connector, infos.get(i));\n-\t\t\t\t\tcBlock.initIndizes(infos.get(i).getBucket().getBucketSize());\n-\t\t\t\t\tif (treeConcept) {\n-\t\t\t\t\t\tcalculateCBlock(cBlock, (ConceptTreeConnector) connector, infos.get(i));\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\tcalculateCBlock(cBlock, (VirtualConceptConnector) connector, infos.get(i));\n-\t\t\t\t\t}\n-\t\t\t\t\tsetDateRangeIndex(cBlock, infos.get(i));\n-\t\t\t\t\tbucketManager.addCalculatedCBlock(cBlock);\n-\t\t\t\t\tstorage.addCBlock(cBlock);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tcatch (Exception e){\n-\t\t\t\tthrow new Exception(String.format(\"Exception in CalculateCBlocksJob (CBlock=%s, connector=%s, table=%s)\", infos.get(i).getCBlockId(), connector, table), e);\n-\t\t\t}\n-\t\t\tfinally {\n-\t\t\t\tthis.progressReporter.report(1);\n-\t\t\t}\n-\t\t}\n-\t\tprogressReporter.done();\n-\t}\n-\t\n-\tprivate void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n-\t\tBucket bucket = info.getBucket();\n-\t\tTable table = storage.getDataset().getTables().get(bucket.getImp().getTable());\n-\t\tfor(Column column : table.getColumns()) {\n-\t\t\tif(column.getType().isDateCompatible()) {\n-\t\t\t\tfor(BucketEntry entry : bucket.entries()) {\n-\t\t\t\t\tif(bucket.has(entry.getEvent(), column)) {\n-\t\t\t\t\t\tCDateRange range = bucket.getAsDateRange(entry.getEvent(), column);\n-\t\t\t\t\t\tcBlock.getMinDate()[entry.getLocalEntity()] = Math.min(cBlock.getMinDate()[entry.getLocalEntity()], range.getMinValue());\n-\t\t\t\t\t\tcBlock.getMaxDate()[entry.getLocalEntity()] = Math.max(cBlock.getMaxDate()[entry.getLocalEntity()], range.getMaxValue());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate CBlock createCBlock(Connector connector, CalculationInformation info) {\n-\t\treturn new CBlock(\n-\t\t\tinfo.getBucket().getId(),\n-\t\t\tconnector.getId()\n-\t\t);\n-\t}\n-\n-\tprivate void calculateCBlock(CBlock cBlock, VirtualConceptConnector connector, CalculationInformation info) {\n-\t}\n-\n-\tprivate void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n-\n-\t\tBucket bucket = info.getBucket();\n-\t\t\n-\t\tAStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n-\n-\t\tfinal TreeConcept treeConcept = connector.getConcept();\n-\n-\t\tfinal ImportId importId = info.getImp().getId();\n-\n-\t\tTreeChildPrefixIndex.putIndexInto(treeConcept);\n-\n-\t\ttreeConcept.initializeIdCache(stringType, importId);\n-\n-\t\tcBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n-\n-\t\tfinal ConceptTreeCache cache = treeConcept.getCache(importId);\n-\t\t\n-\t\tfor(BucketEntry entry : bucket.entries()) {\n-\t\t\ttry {\n-\t\t\t\tfinal int event = entry.getEvent();\n-\t\t\t\tif(bucket.has(event, connector.getColumn())) {\n-\t\t\t\t\tint valueIndex = bucket.getString(event, connector.getColumn());\n-\t\t\t\t\t\n-\t\t\t\t\tfinal CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n-\t\t\t\t\t\t() -> bucket.calculateMap(event, info.getImp())\n-\t\t\t\t\t);\n-\n-\t\t\t\t\tConceptTreeChild child = cache.findMostSpecificChild(valueIndex, rowMap);\n-\n-\t\t\t\t\tif (child != null) {\n-\t\t\t\t\t\tcBlock.getMostSpecificChildren().add(child.getPrefix());\n-\t\t\t\t\t\tConceptTreeNode<?> it = child;\n-\t\t\t\t\t\twhile(it != null) {\n-\t\t\t\t\t\t\tcBlock.getIncludedConcepts()[entry.getLocalEntity()] |= it.calculateBitMask();\n-\t\t\t\t\t\t\tit = it.getParent();\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\t//see #174  improve handling by copying the relevant things from the old project\n-\t\t\t\t\t\tcBlock.getMostSpecificChildren().add(null);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tcBlock.getMostSpecificChildren().add(null);\n-\t\t\t\t}\n-\t\t\t} catch (ConceptConfigurationException ex) {\n-\t\t\t\tlog.error(\"Failed to resolve event \"+bucket+\"-\"+entry.getEvent()+\" against concept \"+connector, ex);\n-\t\t\t}\n-\t\t}\n-\n-\t\t//see #175  metrics candidate\n-\t\tlog.trace(\n-\t\t\t\"Hits: {}, Misses: {}, Hits/Misses: {}, %Hits: {} (Up to now)\",\n-\t\t\tcache.getHits(),\n-\t\t\tcache.getMisses(),\n-\t\t\t(double) cache.getHits() / cache.getMisses(),\n-\t\t\t(double) cache.getHits() / (cache.getHits() + cache.getMisses())\n-\t\t);\n-\t}\n-\n-\tpublic boolean isEmpty() {\n-\t\treturn infos.isEmpty();\n-\t}\n-\n-\t@RequiredArgsConstructor @Getter @Setter\n-\tprivate static class CalculationInformation {\n-\t\tprivate final Table table;\n-\t\tprivate final Import imp;\n-\t\tprivate final Bucket bucket;\n-\t\tprivate final CBlockId cBlockId;\n-\t}\n-}\n+    private final List<CalculationInformation> infos = new ArrayList<>();\n+    private final WorkerStorage storage;\n+    private final BucketManager bucketManager;\n+    private final Connector connector;\n+    private final Table table;\n+    @Override\n+    public String getLabel() {\n+        return \"Calculate \"+infos.size()+\" CBlocks for \"+connector.getId();\n+    }\n+\n+    public void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n+        infos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n+    }\n+\n+    @Override\n+    public void execute() throws Exception {\n+        boolean treeConcept = connector.getConcept() instanceof TreeConcept;\n+        this.progressReporter.setMax(infos.size());\n+        for(int i = 0;i<infos.size(); i++) {\n+            try {\n+                if(!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n+                    CBlock cBlock = createCBlock(connector, infos.get(i));\n+                    cBlock.initIndizes(infos.get(i).getBucket()\n+                                                   .getBucketSize());\n+\n+                    if(treeConcept) {\n+                        calculateCBlock(cBlock, (ConceptTreeConnector)connector, infos.get(i));\n+                    }\n+                    else {\n+                        calculateCBlock(cBlock, (VirtualConceptConnector)connector, infos.get(i));\n+                    }\n+                    setDateRangeIndex(cBlock, infos.get(i));\n+                    bucketManager.addCalculatedCBlock(cBlock);\n+                    storage.addCBlock(cBlock);\n+                }\n+            }\n+            catch (Exception e) {\n+                throw new Exception(String.format(\"Exception in CalculateCBlocksJob (CBlock=%s, connector=%s, table=%s)\", infos.get(i).getCBlockId(), connector, table), e);\n+            }\n+            finally {\n+                this.progressReporter.report(1);\n+            }\n+        }\n+        progressReporter.done();\n+    }\n+\n+    private void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n+        Bucket bucket = info.getBucket();\n+        Table table = storage.getDataset().getTables()\n+                                          .get(bucket.getImp().getTable());\n+        for(Column column : table.getColumns()) {\n+            if(column.getType().isDateCompatible()) {\n+                for(BucketEntry entry : bucket.entries()) {\n+                    if(bucket.has(entry.getEvent(), column)) {\n+                        CDateRange range = bucket.getAsDateRange(entry.getEvent(), column);\n+                        cBlock.getMinDate()[entry.getLocalEntity()] = Math.min(cBlock.getMinDate()[entry.getLocalEntity()], range.getMinValue());\n+                        cBlock.getMaxDate()[entry.getLocalEntity()] = Math.max(cBlock.getMaxDate()[entry.getLocalEntity()], range.getMaxValue());\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private CBlock createCBlock(Connector connector, CalculationInformation info) {\n+        return new CBlock(info.getBucket().getId(), connector.getId());\n+    }\n+\n+    private void calculateCBlock(CBlock cBlock, VirtualConceptConnector connector, CalculationInformation info) {}\n+    private void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n+        Bucket bucket = info.getBucket();\n+        AStringType<?> stringType = (AStringType<?>)info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n+\n+        final TreeConcept treeConcept = connector.getConcept();\n+\n+        final ImportId importId = info.getImp().getId();\n+        TreeChildPrefixIndex.putIndexInto(treeConcept);\n+        treeConcept.initializeIdCache(stringType, importId);\n+        cBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n+        final ConceptTreeCache cache = treeConcept.getCache(importId);\n+        for(BucketEntry entry : bucket.entries()) {\n+            try {\n+                final int event = entry.getEvent();\n+                if(bucket.has(event, connector.getColumn())) {\n+                    int valueIndex = bucket.getString(event, connector.getColumn());\n+\n+                    final CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(()->bucket.calculateMap(event, info.getImp()));\n+                    ConceptTreeChild child = cache.findMostSpecificChild(valueIndex, rowMap);\n+                    if(child != null) {\n+                        cBlock.getMostSpecificChildren().add(child.getPrefix());\n+                        ConceptTreeNode<?> it = child;\n+                        while(it != null) {\n+                            cBlock.getIncludedConcepts()[entry.getLocalEntity()] |= it.calculateBitMask();\n+                            it = it.getParent();\n+                        }\n+                    }\n+                    else {\n+                        //see #174  improve handling by copying the relevant things from the old project\n+                        cBlock.getMostSpecificChildren().add(null);\n+                    }\n+                }\n+                else {\n+                    cBlock.getMostSpecificChildren().add(null);\n+                }\n+            }\n+            catch (ConceptConfigurationException ex) {\n+                log.error(\"Failed to resolve event \"+bucket+\"-\"+entry.getEvent()+\" against concept \"+connector,\n+                          ex\n+                );\n+            }\n+        }\n+\n+        //see #175  metrics candidate\n+        log.trace(\"Hits: {}, Misses: {}, Hits/Misses: {}, %Hits: {} (Up to now)\", cache.getHits(), cache.getMisses(), (double)cache.getHits() /cache.getMisses(), (double)cache.getHits() / (cache.getHits()+cache.getMisses()));\n+    }\n+\n+    public boolean isEmpty() {\n+        return infos.isEmpty();\n+    }\n+\n+    @RequiredArgsConstructor\n+    @Getter\n+    @Setter\n+    private static class CalculationInformation {\n+\n+        private final Table table;\n+        private final Import imp;\n+        private final Bucket bucket;\n+        private final CBlockId cBlockId;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 148
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "155",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/259/CalculateCBlocksJob.java\nindex 71e297185d..c266b8f72b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/259/CalculateCBlocksJob.java\n@@ -44,16 +44,16 @@ public class CalculateCBlocksJob extends Job {\n \tpublic String getLabel() {\n \t\treturn \"Calculate \"+infos.size()+\" CBlocks for \"+connector.getId();\n \t}\n-\t\n+\n \tpublic void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n \t\tinfos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n \t}\n-\t\n+\n \t@Override\n \tpublic void execute() throws Exception {\n \t\tboolean treeConcept = connector.getConcept() instanceof TreeConcept;\n \t\tthis.progressReporter.setMax(infos.size());\n-\t\t\n+\n \t\tfor(int i=0;i<infos.size();i++) {\n \t\t\ttry {\n \t\t\t\tif (!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n@@ -79,7 +79,7 @@ public class CalculateCBlocksJob extends Job {\n \t\t}\n \t\tprogressReporter.done();\n \t}\n-\t\n+\n \tprivate void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n \t\tBucket bucket = info.getBucket();\n \t\tTable table = storage.getDataset().getTables().get(bucket.getImp().getTable());\n@@ -109,7 +109,7 @@ public class CalculateCBlocksJob extends Job {\n \tprivate void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n \n \t\tBucket bucket = info.getBucket();\n-\t\t\n+\n \t\tAStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n \n \t\tfinal TreeConcept treeConcept = connector.getConcept();\n@@ -123,13 +123,13 @@ public class CalculateCBlocksJob extends Job {\n \t\tcBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n \n \t\tfinal ConceptTreeCache cache = treeConcept.getCache(importId);\n-\t\t\n+\n \t\tfor(BucketEntry entry : bucket.entries()) {\n \t\t\ttry {\n \t\t\t\tfinal int event = entry.getEvent();\n \t\t\t\tif(bucket.has(event, connector.getColumn())) {\n \t\t\t\t\tint valueIndex = bucket.getString(event, connector.getColumn());\n-\t\t\t\t\t\n+\n \t\t\t\t\tfinal CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n \t\t\t\t\t\t() -> bucket.calculateMap(event, info.getImp())\n \t\t\t\t\t);\n",
            "diff_size": 7
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "155",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/259/CalculateCBlocksJob.java\nindex 71e297185d..c266b8f72b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/259/CalculateCBlocksJob.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/259/CalculateCBlocksJob.java\n@@ -44,16 +44,16 @@ public class CalculateCBlocksJob extends Job {\n \tpublic String getLabel() {\n \t\treturn \"Calculate \"+infos.size()+\" CBlocks for \"+connector.getId();\n \t}\n-\t\n+\n \tpublic void addCBlock(Import imp, Bucket bucket, CBlockId cBlockId) {\n \t\tinfos.add(new CalculationInformation(table, imp, bucket, cBlockId));\n \t}\n-\t\n+\n \t@Override\n \tpublic void execute() throws Exception {\n \t\tboolean treeConcept = connector.getConcept() instanceof TreeConcept;\n \t\tthis.progressReporter.setMax(infos.size());\n-\t\t\n+\n \t\tfor(int i=0;i<infos.size();i++) {\n \t\t\ttry {\n \t\t\t\tif (!bucketManager.hasCBlock(infos.get(i).getCBlockId())) {\n@@ -79,7 +79,7 @@ public class CalculateCBlocksJob extends Job {\n \t\t}\n \t\tprogressReporter.done();\n \t}\n-\t\n+\n \tprivate void setDateRangeIndex(CBlock cBlock, CalculationInformation info) {\n \t\tBucket bucket = info.getBucket();\n \t\tTable table = storage.getDataset().getTables().get(bucket.getImp().getTable());\n@@ -109,7 +109,7 @@ public class CalculateCBlocksJob extends Job {\n \tprivate void calculateCBlock(CBlock cBlock, ConceptTreeConnector connector, CalculationInformation info) {\n \n \t\tBucket bucket = info.getBucket();\n-\t\t\n+\n \t\tAStringType<?> stringType = (AStringType<?>) info.getImp().getColumns()[connector.getColumn().getPosition()].getType();\n \n \t\tfinal TreeConcept treeConcept = connector.getConcept();\n@@ -123,13 +123,13 @@ public class CalculateCBlocksJob extends Job {\n \t\tcBlock.setMostSpecificChildren(new ArrayList<>(bucket.getNumberOfEvents()));\n \n \t\tfinal ConceptTreeCache cache = treeConcept.getCache(importId);\n-\t\t\n+\n \t\tfor(BucketEntry entry : bucket.entries()) {\n \t\t\ttry {\n \t\t\t\tfinal int event = entry.getEvent();\n \t\t\t\tif(bucket.has(event, connector.getColumn())) {\n \t\t\t\t\tint valueIndex = bucket.getString(event, connector.getColumn());\n-\t\t\t\t\t\n+\n \t\t\t\t\tfinal CalculatedValue<Map<String, Object>> rowMap = new CalculatedValue<>(\n \t\t\t\t\t\t() -> bucket.calculateMap(event, info.getImp())\n \t\t\t\t\t);\n",
            "diff_size": 7
        }
    ]
}