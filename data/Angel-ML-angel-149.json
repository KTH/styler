{
    "error_id": "149",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/149/ServerPartitionStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/149/ServerPartitionStorage.java\nindex 9604e85039..83a3b541b0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/149/ServerPartitionStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/149/ServerPartitionStorage.java\n@@ -28,47 +28,47 @@ import java.io.IOException;\n  * Base class of server partition storage\n  */\n public abstract class ServerPartitionStorage implements IServerPartitionStorage {\n-  /**\n-   * Row id offset\n-   */\n-  protected volatile int rowIdOffset;\n+    /**\n+     * Row id offset\n+     */\n+    protected volatile int rowIdOffset;\n \n-  public ServerPartitionStorage(int rowIdOffset) {\n-    this.rowIdOffset = rowIdOffset;\n-  }\n+    public ServerPartitionStorage(int rowIdOffset) {\n+        this.rowIdOffset = rowIdOffset;\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n-    output.writeInt(rowIdOffset);\n-  }\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        output.writeInt(rowIdOffset);\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    rowIdOffset = input.readInt();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        rowIdOffset = input.readInt();\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    return 4;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return 4;\n+    }\n \n-  @Override\n-  public void serialize(DataOutputStream output) throws IOException {\n-    output.writeInt(rowIdOffset);\n-  }\n+    @Override\n+    public void serialize(DataOutputStream output) throws IOException {\n+        output.writeInt(rowIdOffset);\n+    }\n \n-  @Override\n-  public void deserialize(DataInputStream input) throws IOException {\n-    rowIdOffset = input.readInt();\n-  }\n+    @Override\n+    public void deserialize(DataInputStream input) throws IOException {\n+        rowIdOffset = input.readInt();\n+    }\n \n-  @Override\n-  public int dataLen() {\n-    return 4;\n-  }\n+    @Override\n+    public int dataLen() {\n+        return 4;\n+    }\n \n-  @Override\n-  public void update(UpdateFunc func, PartitionUpdateParam partParam) {\n-    func.partitionUpdate(partParam);\n-  }\n+    @Override\n+    public void update(UpdateFunc func, PartitionUpdateParam partParam) {\n+        func.partitionUpdate(partParam);\n+    }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/149/ServerPartitionStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/149/ServerPartitionStorage.java\nindex 9604e85039..67449a32d4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/149/ServerPartitionStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/149/ServerPartitionStorage.java\n@@ -71,4 +71,4 @@ public abstract class ServerPartitionStorage implements IServerPartitionStorage\n   public void update(UpdateFunc func, PartitionUpdateParam partParam) {\n     func.partitionUpdate(partParam);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/149/ServerPartitionStorage.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/149/ServerPartitionStorage.java\nindex 9604e85039..3f22bedbb0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/149/ServerPartitionStorage.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/149/ServerPartitionStorage.java\n@@ -27,48 +27,50 @@ import java.io.IOException;\n /**\n  * Base class of server partition storage\n  */\n+\n public abstract class ServerPartitionStorage implements IServerPartitionStorage {\n   /**\n    * Row id offset\n    */\n-  protected volatile int rowIdOffset;\n \n-  public ServerPartitionStorage(int rowIdOffset) {\n+    protected volatile int rowIdOffset;\n+\n+    public ServerPartitionStorage(int rowIdOffset) {\n     this.rowIdOffset = rowIdOffset;\n-  }\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n+    @Override\n+    public void serialize(ByteBuf output) {\n     output.writeInt(rowIdOffset);\n-  }\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n+    @Override\n+    public void deserialize(ByteBuf input) {\n     rowIdOffset = input.readInt();\n-  }\n+    }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return 4;\n-  }\n+    }\n \n-  @Override\n-  public void serialize(DataOutputStream output) throws IOException {\n+    @Override\n+    public void serialize(DataOutputStream output) throws IOException {\n     output.writeInt(rowIdOffset);\n-  }\n+    }\n \n-  @Override\n-  public void deserialize(DataInputStream input) throws IOException {\n+    @Override\n+    public void deserialize(DataInputStream input) throws IOException {\n     rowIdOffset = input.readInt();\n-  }\n+    }\n \n-  @Override\n-  public int dataLen() {\n+    @Override\n+    public int dataLen() {\n     return 4;\n-  }\n+    }\n \n-  @Override\n-  public void update(UpdateFunc func, PartitionUpdateParam partParam) {\n+    @Override\n+    public void update(UpdateFunc func, PartitionUpdateParam partParam) {\n     func.partitionUpdate(partParam);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}