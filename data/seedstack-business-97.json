{
    "error_id": "97",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.pagination;\n\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static com.google.common.base.Preconditions.checkState;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/97/RepositoryPaginatorContext.java\nindex 837142234e..198e12b64d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/97/RepositoryPaginatorContext.java\n@@ -5,7 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.pagination;\n+\n+package org .seedstack.business.internal.pagination;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n import static com.google.common.base.Preconditions.checkState;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/97/RepositoryPaginatorContext.java\nindex 837142234e..13e7cbb4ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/97/RepositoryPaginatorContext.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.pagination;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n@@ -29,7 +30,7 @@ class RepositoryPaginatorContext<A extends AggregateRoot<I>, I> extends Abstract\n     private final Repository.Option[] options;\n \n     RepositoryPaginatorContext(BusinessConfig.PaginationConfig paginationConfig, Repository<A, I> repository,\n-            Repository.Option... options) {\n+                               Repository.Option... options) {\n         super(paginationConfig);\n         this.repository = checkNotNull(repository, \"Repository cannot be null\");\n         checkNotNull(options, \"Options cannot be null\");\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "column": "34",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "23",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "77",
                    "severity": "warning",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "76",
                    "column": "110",
                    "severity": "warning",
                    "message": "WhitespaceAround: '-' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "76",
                    "column": "114",
                    "severity": "warning",
                    "message": "WhitespaceAround: '*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/97/RepositoryPaginatorContext.java\nindex 837142234e..89f5b52edf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/97/RepositoryPaginatorContext.java\n@@ -8,8 +8,8 @@\n package org.seedstack.business.internal.pagination;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n-import static com.google.common.base.Preconditions.checkState;\n \n+import static com.google.common.base.Preconditions.checkState;\n import com.google.common.collect.ObjectArrays;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n@@ -24,33 +24,36 @@ import org.seedstack.business.pagination.SimpleSlice;\n import org.seedstack.business.pagination.Slice;\n import org.seedstack.business.specification.Specification;\n \n-class RepositoryPaginatorContext<A extends AggregateRoot<I>, I> extends AbstractPaginatorContext<A> {\n+\n+class RepositoryPaginatorContext <A extends AggregateRoot<I>, I> extends AbstractPaginatorContext<A> {\n+\n     private final Repository<A, I> repository;\n     private final Repository.Option[] options;\n \n-    RepositoryPaginatorContext(BusinessConfig.PaginationConfig paginationConfig, Repository<A, I> repository,\n-            Repository.Option... options) {\n+\n+    RepositoryPaginatorContext(BusinessConfig.PaginationConfig paginationConfig, Repository<A, I> repository, Repository.Option... options) {\n         super(paginationConfig);\n         this.repository = checkNotNull(repository, \"Repository cannot be null\");\n         checkNotNull(options, \"Options cannot be null\");\n-        for (Repository.Option option : options) {\n+        for(Repository.Option option : options) {\n             if (option instanceof OffsetOption) {\n                 throw new IllegalArgumentException(\"Cannot specify an offset when using pagination\");\n             } else if (option instanceof LimitOption) {\n-                throw new IllegalArgumentException(\"Cannot specify a limit when using pagination\");\n-            }\n+                       throw new IllegalArgumentException(\"Cannot specify a limit when using pagination\");\n+                   }\n         }\n         this.options = options;\n     }\n \n     @Override\n     Page<A> buildPage(Specification<A> specification) {\n-        checkState(getMode() == PaginationMode.PAGE, \"A page can only be built in PAGE pagination mode\");\n+        checkState(getMode() == PaginationMode.PAGE,\n+\"A page can only be built in PAGE pagination mode\");\n         Stream<A> stream = buildStream(specification);\n         return new SimplePage<>(stream.collect(Collectors.toList()),\n-                getPageIndex(),\n-                getLimit(),\n-                repository.count(specification));\n+getPageIndex(),\n+getLimit(),\n+repository.count(specification));\n     }\n \n     @Override\n@@ -58,29 +61,32 @@ class RepositoryPaginatorContext<A extends AggregateRoot<I>, I> extends Abstract\n         return new SimpleSlice<>(buildStream(specification).collect(Collectors.toList()));\n     }\n \n+\n     private Stream<A> buildStream(Specification<A> specification) {\n         Stream<A> streamRepo;\n+\n         PaginationMode mode = getMode();\n         if (mode.equals(PaginationMode.ATTRIBUTE)) {\n             streamRepo = repository.get(specification.and(getAttributeSpecification()),\n-                    applyLimit(options, getLimit()));\n-        } else if (mode.equals(PaginationMode.OFFSET)) {\n-            streamRepo = repository.get(specification, applyLimit(applyOffset(options, getOffset()), getLimit()));\n-        } else if (mode.equals(PaginationMode.PAGE)) {\n-            streamRepo = repository.get(specification, applyLimit(applyOffset(\n-                    options,\n-                    (getPaginationConfig().isZeroBasedPageIndex() ? getPageIndex() : getPageIndex() - 1) * getLimit()),\n-                    getLimit()));\n-        } else {\n-            throw new IllegalStateException(\"Unsupported pagination mode \" + mode);\n-        }\n+                applyLimit(options, getLimit()));\n+        } else if(mode.equals(PaginationMode.OFFSET)) {\n+                   streamRepo = repository.get(specification, applyLimit(applyOffset(options, getOffset()), getLimit()));\n+               } else if(mode.equals(PaginationMode.PAGE)) {\n+                          streamRepo = repository.get(specification, applyLimit(applyOffset(options,\n+                              ( getPaginationConfig().isZeroBasedPageIndex()? getPageIndex() : getPageIndex()- 1)* getLimit()),\n+                                  getLimit()));\n+                      } else {\n+                          throw new IllegalStateException(\"Unsupported pagination mode \" + mode);\n+                      }\n         return streamRepo;\n     }\n \n+\n     private Repository.Option[] applyOffset(Repository.Option[] options, long offset) {\n         return ObjectArrays.concat(options, new OffsetOption(offset));\n     }\n \n+\n     private Repository.Option[] applyLimit(Repository.Option[] options, long limit) {\n         return ObjectArrays.concat(options, new LimitOption(limit));\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/97/RepositoryPaginatorContext.java\nindex 837142234e..198e12b64d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/97/RepositoryPaginatorContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/97/RepositoryPaginatorContext.java\n@@ -5,7 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.pagination;\n+\n+package org .seedstack.business.internal.pagination;\n \n import static com.google.common.base.Preconditions.checkNotNull;\n import static com.google.common.base.Preconditions.checkState;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}