{
    "error_id": "925",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/925/GetClosenessPartResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/925/GetClosenessPartResult.java\nindex cc6d2f4003..26311a6569 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/925/GetClosenessPartResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/925/GetClosenessPartResult.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.spark.ml.psf.hyperanf;\n \n import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetResult;\n@@ -24,48 +25,48 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n \n public class GetClosenessPartResult extends PartitionGetResult {\n \n-  private Long2DoubleOpenHashMap closenesses;\n-\n-  public GetClosenessPartResult(Long2DoubleOpenHashMap closenesses) {\n-    this.closenesses = closenesses;\n-  }\n+    private Long2DoubleOpenHashMap closenesses;\n \n-  public GetClosenessPartResult() {\n-    this.closenesses = new Long2DoubleOpenHashMap();\n-  }\n+    public GetClosenessPartResult(Long2DoubleOpenHashMap closenesses) {\n+        this.closenesses = closenesses;\n+    }\n \n-  public Long2DoubleOpenHashMap getClosenesses() {\n-    return closenesses;\n-  }\n+    public GetClosenessPartResult() {\n+        this.closenesses = new Long2DoubleOpenHashMap();\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n-    output.writeInt(closenesses.size());\n-    ObjectIterator<Long2DoubleMap.Entry> it =\n-        closenesses.long2DoubleEntrySet().fastIterator();\n-    while (it.hasNext()) {\n-      Long2DoubleMap.Entry entry = it.next();\n-      output.writeLong(entry.getLongKey());\n-      output.writeDouble(entry.getDoubleValue());\n+    public Long2DoubleOpenHashMap getClosenesses() {\n+        return closenesses;\n     }\n \n-  }\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        output.writeInt(closenesses.size());\n+        ObjectIterator<Long2DoubleMap.Entry> it =\n+                closenesses.long2DoubleEntrySet().fastIterator();\n+        while (it.hasNext()) {\n+            Long2DoubleMap.Entry entry = it.next();\n+            output.writeLong(entry.getLongKey());\n+            output.writeDouble(entry.getDoubleValue());\n+        }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    int size = input.readInt();\n-    closenesses = new Long2DoubleOpenHashMap();\n-    for (int i = 0; i < size; i++) {\n-      long key = input.readLong();\n-      double val = input.readDouble();\n-      closenesses.put(key, val);\n     }\n-  }\n \n-  @Override\n-  public int bufferLen() {\n-    int len = 4;\n-    len += closenesses.size() * 16;\n-    return len;\n-  }\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        int size = input.readInt();\n+        closenesses = new Long2DoubleOpenHashMap();\n+        for (int i = 0; i < size; i++) {\n+            long key = input.readLong();\n+            double val = input.readDouble();\n+            closenesses.put(key, val);\n+        }\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        int len = 4;\n+        len += closenesses.size() * 16;\n+        return len;\n+    }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/925/GetClosenessPartResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/925/GetClosenessPartResult.java\nindex cc6d2f4003..f1d977297d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/925/GetClosenessPartResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/925/GetClosenessPartResult.java\n@@ -43,7 +43,7 @@ public class GetClosenessPartResult extends PartitionGetResult {\n     output.writeInt(closenesses.size());\n     ObjectIterator<Long2DoubleMap.Entry> it =\n         closenesses.long2DoubleEntrySet().fastIterator();\n-    while (it.hasNext()) {\n+while (it.hasNext()) {\n       Long2DoubleMap.Entry entry = it.next();\n       output.writeLong(entry.getLongKey());\n       output.writeDouble(entry.getDoubleValue());\n@@ -68,4 +68,4 @@ public class GetClosenessPartResult extends PartitionGetResult {\n     len += closenesses.size() * 16;\n     return len;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/925/GetClosenessPartResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/925/GetClosenessPartResult.java\nindex cc6d2f4003..bbad8f5c1b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/925/GetClosenessPartResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/925/GetClosenessPartResult.java\n@@ -23,49 +23,47 @@ import it.unimi.dsi.fastutil.longs.Long2DoubleOpenHashMap;\n import it.unimi.dsi.fastutil.objects.ObjectIterator;\n \n public class GetClosenessPartResult extends PartitionGetResult {\n+    private Long2DoubleOpenHashMap closenesses;\n \n-  private Long2DoubleOpenHashMap closenesses;\n-\n-  public GetClosenessPartResult(Long2DoubleOpenHashMap closenesses) {\n+    public GetClosenessPartResult(Long2DoubleOpenHashMap closenesses) {\n     this.closenesses = closenesses;\n-  }\n+    }\n \n-  public GetClosenessPartResult() {\n+    public GetClosenessPartResult() {\n     this.closenesses = new Long2DoubleOpenHashMap();\n-  }\n+    }\n \n-  public Long2DoubleOpenHashMap getClosenesses() {\n+    public Long2DoubleOpenHashMap getClosenesses() {\n     return closenesses;\n-  }\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n+    @Override\n+    public void serialize(ByteBuf output) {\n     output.writeInt(closenesses.size());\n-    ObjectIterator<Long2DoubleMap.Entry> it =\n-        closenesses.long2DoubleEntrySet().fastIterator();\n+    ObjectIterator<Long2DoubleMap.Entry> it = closenesses.long2DoubleEntrySet().fastIterator();\n     while (it.hasNext()) {\n-      Long2DoubleMap.Entry entry = it.next();\n-      output.writeLong(entry.getLongKey());\n-      output.writeDouble(entry.getDoubleValue());\n+        Long2DoubleMap.Entry entry = it.next();\n+        output.writeLong(entry.getLongKey());\n+        output.writeDouble(entry.getDoubleValue());\n+    }\n     }\n \n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf input) {\n+    @Override\n+    public void deserialize(ByteBuf input) {\n     int size = input.readInt();\n     closenesses = new Long2DoubleOpenHashMap();\n     for (int i = 0; i < size; i++) {\n-      long key = input.readLong();\n-      double val = input.readDouble();\n-      closenesses.put(key, val);\n+        long key = input.readLong();\n+        double val = input.readDouble();\n+        closenesses.put(key, val);\n+    }\n     }\n-  }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     int len = 4;\n     len += closenesses.size() * 16;\n     return len;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}