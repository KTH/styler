{
    "error_id": "277",
    "information": {
        "errors": [
            {
                "line": "114",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        //   swagger interface is a.b.c, and consumer interface is a.b.c too.\n        //   version 1, they are the same\n        //   version 2, producer add a new operation, that means swagger have more operation than consumer interface a.b.c\n        //              interface a.b.c in consumer process is the old interface\n        //              so for swagger, can not do any valid check here\n        //              only need to save found method, that's enough.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/277/SchemaMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/277/SchemaMeta.java\nindex 84143f0f2a..2323160a2b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/277/SchemaMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/277/SchemaMeta.java\n@@ -121,7 +121,7 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n               operation.getOperationId(),\n               swaggerIntf.getName(),\n               getSchemaId());\n-          continue;\n+continue;\n         }\n \n         String httpMethod = operationEntry.getKey().name();\n@@ -171,4 +171,4 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n   public void setProviderHandlerChain(List<Handler> providerHandlerChain) {\n     this.providerHandlerChain = providerHandlerChain;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/277/SchemaMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/277/SchemaMeta.java\nindex 84143f0f2a..9ba6065c72 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/277/SchemaMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/277/SchemaMeta.java\n@@ -112,9 +112,7 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n         //   swagger interface is a.b.c, and consumer interface is a.b.c too.\n         //   version 1, they are the same\n         //   version 2, producer add a new operation, that means swagger have more operation than consumer interface a.b.c\n-        //              interface a.b.c in consumer process is the old interface\n-        //              so for swagger, can not do any valid check here\n-        //              only need to save found method, that's enough.\n+        //              interface a.b.c in consumer process is the old interface//              so for swagger, can not do any valid check here//              only need to save found method, that's enough.\n         Method method = ReflectUtils.findMethod(swaggerIntf, operation.getOperationId());\n         if (method == null) {\n           LOGGER.warn(\"method {} not found in swagger interface {}, schemaId={}\",\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}