{
    "error_id": "554",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/554/ServerComplexTypeRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/554/ServerComplexTypeRow.java\nindex 7d6f2e33b6..3520dc20a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/554/ServerComplexTypeRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/554/ServerComplexTypeRow.java\n@@ -26,21 +26,22 @@ import com.tencent.angel.ps.storage.vector.storage.ObjectTypeStorage;\n  */\n public abstract class ServerComplexTypeRow extends ServerRow {\n \n-  /**\n-   * Value type class\n-   */\n-  protected Class<? extends IElement> valueType;\n+    /**\n+     * Value type class\n+     */\n+    protected Class<? extends IElement> valueType;\n \n-  public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n-      long startCol, long endCol, long estElemNum,\n-      ObjectTypeStorage storage) {\n-    super(rowId, rowType, startCol, endCol, estElemNum, storage);\n-    this.valueType = valueType;\n-  }\n+    public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n+                                long startCol, long endCol, long estElemNum,\n+                                ObjectTypeStorage storage) {\n+        super(rowId, rowType, startCol, endCol, estElemNum, storage);\n+        this.valueType = valueType;\n+    }\n \n-  protected void initStorage() {\n-    storage = ServerRowStorageFactory\n-        .getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage,\n-            sparseToDenseFactor);\n-  }\n+    protected void initStorage() {\n+        storage = ServerRowStorageFactory\n+                .getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum,\n+                        useAdaptiveStorage,\n+                        sparseToDenseFactor);\n+    }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/554/ServerComplexTypeRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/554/ServerComplexTypeRow.java\nindex 7d6f2e33b6..07c33ab488 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/554/ServerComplexTypeRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/554/ServerComplexTypeRow.java\n@@ -32,15 +32,13 @@ public abstract class ServerComplexTypeRow extends ServerRow {\n   protected Class<? extends IElement> valueType;\n \n   public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n-      long startCol, long endCol, long estElemNum,\n+long startCol, long endCol, long estElemNum,\n       ObjectTypeStorage storage) {\n     super(rowId, rowType, startCol, endCol, estElemNum, storage);\n     this.valueType = valueType;\n   }\n \n   protected void initStorage() {\n-    storage = ServerRowStorageFactory\n-        .getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage,\n-            sparseToDenseFactor);\n+    storage = ServerRowStorageFactory.getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage, sparseToDenseFactor);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/554/ServerComplexTypeRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/554/ServerComplexTypeRow.java\nindex 7d6f2e33b6..5d14c69e9a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/554/ServerComplexTypeRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/554/ServerComplexTypeRow.java\n@@ -24,23 +24,27 @@ import com.tencent.angel.ps.storage.vector.storage.ObjectTypeStorage;\n /**\n  * Base class for basic type row\n  */\n+\n public abstract class ServerComplexTypeRow extends ServerRow {\n \n   /**\n    * Value type class\n    */\n-  protected Class<? extends IElement> valueType;\n \n-  public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n-      long startCol, long endCol, long estElemNum,\n-      ObjectTypeStorage storage) {\n+    protected Class<? extends IElement> valueType;\n+\n+    public ServerComplexTypeRow(Class<? extends IElement> valueType,\n+                                int rowId,\n+                                RowType rowType,\n+                                long startCol,\n+                                long endCol,\n+                                long estElemNum, ObjectTypeStorage storage) {\n     super(rowId, rowType, startCol, endCol, estElemNum, storage);\n     this.valueType = valueType;\n-  }\n-\n-  protected void initStorage() {\n-    storage = ServerRowStorageFactory\n-        .getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage,\n-            sparseToDenseFactor);\n-  }\n-}\n+    }\n+\n+    protected void initStorage() {\n+    storage = ServerRowStorageFactory.getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage, sparseToDenseFactor);\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}