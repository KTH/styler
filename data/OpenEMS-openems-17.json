{
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "9",
                "column": "23",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "import io.openems.edge.meter.api.SinglePhase;\n\n@ObjectClassDefinition( //\n\t\tname = \"Meter SOCOMEC Countis E14\", //\n\t\tdescription = \"Implements the SOCOMEC Countis E14 meter.\")\n@interface Config {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler/17/Config.java\nindex a1a2803e6e..77c220ce44 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler/17/Config.java\n@@ -6,7 +6,7 @@ import org.osgi.service.metatype.annotations.ObjectClassDefinition;\n import io.openems.edge.meter.api.MeterType;\n import io.openems.edge.meter.api.SinglePhase;\n \n-@ObjectClassDefinition( //\n+@ObjectClassDefinition(//\n \t\tname = \"Meter SOCOMEC Countis E14\", //\n \t\tdescription = \"Implements the SOCOMEC Countis E14 meter.\")\n @interface Config {\n@@ -31,7 +31,7 @@ import io.openems.edge.meter.api.SinglePhase;\n \n \t@AttributeDefinition(name = \"Modbus Unit-ID\", description = \"The Unit-ID of the Modbus device.\")\n \tint modbusUnitId();\n-\t\n+\n \t@AttributeDefinition(name = \"Invert Power\", description = \"Inverts all Power values, inverts current values, swaps production and consumptioon energy, i.e. Power is multiplied with -1.\")\n \tboolean invert() default false;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "9",
                    "column": "23",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/intellij/17/Config.java\nindex a1a2803e6e..4abc576064 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/intellij/17/Config.java\n@@ -7,36 +7,36 @@ import io.openems.edge.meter.api.MeterType;\n import io.openems.edge.meter.api.SinglePhase;\n \n @ObjectClassDefinition( //\n-\t\tname = \"Meter SOCOMEC Countis E14\", //\n-\t\tdescription = \"Implements the SOCOMEC Countis E14 meter.\")\n+    name = \"Meter SOCOMEC Countis E14\", //\n+    description = \"Implements the SOCOMEC Countis E14 meter.\")\n @interface Config {\n \n-\t@AttributeDefinition(name = \"Component-ID\", description = \"Unique ID of this Component\")\n-\tString id() default \"meter0\";\n+  @AttributeDefinition(name = \"Component-ID\", description = \"Unique ID of this Component\")\n+  String id() default \"meter0\";\n \n-\t@AttributeDefinition(name = \"Alias\", description = \"Human-readable name of this Component; defaults to Component-ID\")\n-\tString alias() default \"\";\n+  @AttributeDefinition(name = \"Alias\", description = \"Human-readable name of this Component; defaults to Component-ID\")\n+  String alias() default \"\";\n \n-\t@AttributeDefinition(name = \"Is enabled?\", description = \"Is this Component enabled?\")\n-\tboolean enabled() default true;\n+  @AttributeDefinition(name = \"Is enabled?\", description = \"Is this Component enabled?\")\n+  boolean enabled() default true;\n \n-\t@AttributeDefinition(name = \"Phase\", description = \"Which Phase is measured by this Meter?\")\n-\tSinglePhase phase() default SinglePhase.L1;\n+  @AttributeDefinition(name = \"Phase\", description = \"Which Phase is measured by this Meter?\")\n+  SinglePhase phase() default SinglePhase.L1;\n \n-\t@AttributeDefinition(name = \"Meter-Type\", description = \"What is measured by this Meter?\")\n-\tMeterType type() default MeterType.PRODUCTION;\n+  @AttributeDefinition(name = \"Meter-Type\", description = \"What is measured by this Meter?\")\n+  MeterType type() default MeterType.PRODUCTION;\n \n-\t@AttributeDefinition(name = \"Modbus-ID\", description = \"ID of Modbus brige.\")\n-\tString modbus_id() default \"modbus0\";\n+  @AttributeDefinition(name = \"Modbus-ID\", description = \"ID of Modbus brige.\")\n+  String modbus_id() default \"modbus0\";\n \n-\t@AttributeDefinition(name = \"Modbus Unit-ID\", description = \"The Unit-ID of the Modbus device.\")\n-\tint modbusUnitId();\n-\t\n-\t@AttributeDefinition(name = \"Invert Power\", description = \"Inverts all Power values, inverts current values, swaps production and consumptioon energy, i.e. Power is multiplied with -1.\")\n-\tboolean invert() default false;\n+  @AttributeDefinition(name = \"Modbus Unit-ID\", description = \"The Unit-ID of the Modbus device.\")\n+  int modbusUnitId();\n \n-\t@AttributeDefinition(name = \"Modbus target filter\", description = \"This is auto-generated by 'Modbus-ID'.\")\n-\tString Modbus_target() default \"\";\n+  @AttributeDefinition(name = \"Invert Power\", description = \"Inverts all Power values, inverts current values, swaps production and consumptioon energy, i.e. Power is multiplied with -1.\")\n+  boolean invert() default false;\n \n-\tString webconsole_configurationFactory_nameHint() default \"Meter SOCOMEC Countis E14 [{id}]\";\n+  @AttributeDefinition(name = \"Modbus target filter\", description = \"This is auto-generated by 'Modbus-ID'.\")\n+  String Modbus_target() default \"\";\n+\n+  String webconsole_configurationFactory_nameHint() default \"Meter SOCOMEC Countis E14 [{id}]\";\n }\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_random/17/Config.java\nindex a1a2803e6e..77c220ce44 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_random/17/Config.java\n@@ -6,7 +6,7 @@ import org.osgi.service.metatype.annotations.ObjectClassDefinition;\n import io.openems.edge.meter.api.MeterType;\n import io.openems.edge.meter.api.SinglePhase;\n \n-@ObjectClassDefinition( //\n+@ObjectClassDefinition(//\n \t\tname = \"Meter SOCOMEC Countis E14\", //\n \t\tdescription = \"Implements the SOCOMEC Countis E14 meter.\")\n @interface Config {\n@@ -31,7 +31,7 @@ import io.openems.edge.meter.api.SinglePhase;\n \n \t@AttributeDefinition(name = \"Modbus Unit-ID\", description = \"The Unit-ID of the Modbus device.\")\n \tint modbusUnitId();\n-\t\n+\n \t@AttributeDefinition(name = \"Invert Power\", description = \"Inverts all Power values, inverts current values, swaps production and consumptioon energy, i.e. Power is multiplied with -1.\")\n \tboolean invert() default false;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_three_grams/17/Config.java\nindex a1a2803e6e..77c220ce44 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/17/Config.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_three_grams/17/Config.java\n@@ -6,7 +6,7 @@ import org.osgi.service.metatype.annotations.ObjectClassDefinition;\n import io.openems.edge.meter.api.MeterType;\n import io.openems.edge.meter.api.SinglePhase;\n \n-@ObjectClassDefinition( //\n+@ObjectClassDefinition(//\n \t\tname = \"Meter SOCOMEC Countis E14\", //\n \t\tdescription = \"Implements the SOCOMEC Countis E14 meter.\")\n @interface Config {\n@@ -31,7 +31,7 @@ import io.openems.edge.meter.api.SinglePhase;\n \n \t@AttributeDefinition(name = \"Modbus Unit-ID\", description = \"The Unit-ID of the Modbus device.\")\n \tint modbusUnitId();\n-\t\n+\n \t@AttributeDefinition(name = \"Invert Power\", description = \"Inverts all Power values, inverts current values, swaps production and consumptioon energy, i.e. Power is multiplied with -1.\")\n \tboolean invert() default false;\n \n",
            "diff_size": 2
        }
    ]
}