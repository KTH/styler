{
    "error_id": "74",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 96).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "/** A metric with single scalar value. */\n@Stable\npublic abstract class ScalarMetric extends Metric<Double> implements ScalarMetricMBean<Double> {\n\n  public ScalarMetric(String group, String name) {\n    super(group, name);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/74/ScalarMetric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/74/ScalarMetric.java\nindex 8c87dc3584..51dba34b46 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/74/ScalarMetric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/74/ScalarMetric.java\n@@ -1,25 +1,27 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.metrics;\n \n import cz.o2.proxima.annotations.Stable;\n \n /** A metric with single scalar value. */\n @Stable\n-public abstract class ScalarMetric extends Metric<Double> implements ScalarMetricMBean<Double> {\n+public abstract class ScalarMetric extends Metric<Double>\n+    implements ScalarMetricMBean<Double> {\n \n   public ScalarMetric(String group, String name) {\n     super(group, name);\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/74/ScalarMetric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/74/ScalarMetric.java\nindex 8c87dc3584..dbc087d326 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/74/ScalarMetric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/74/ScalarMetric.java\n@@ -24,4 +24,4 @@ public abstract class ScalarMetric extends Metric<Double> implements ScalarMetri\n   public ScalarMetric(String group, String name) {\n     super(group, name);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/74/ScalarMetric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/74/ScalarMetric.java\nindex 8c87dc3584..328a150d5d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/74/ScalarMetric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/74/ScalarMetric.java\n@@ -18,10 +18,13 @@ package cz.o2.proxima.metrics;\n import cz.o2.proxima.annotations.Stable;\n \n /** A metric with single scalar value. */\n+\n+\n @Stable\n-public abstract class ScalarMetric extends Metric<Double> implements ScalarMetricMBean<Double> {\n+public abstract class ScalarMetric extends Metric<Double>\n+    implements ScalarMetricMBean<Double> {\n \n-  public ScalarMetric(String group, String name) {\n+        public ScalarMetric(String group, String name) {\n     super(group, name);\n-  }\n-}\n+        }\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}