{
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "13",
                "column": "46",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": " * read from.\n */\npublic interface CachedLog extends CachedFile{\n  Reader getReader() throws IOException;\n\n  Optional<MediaType> getMimeType();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/3/CachedLog.java\nindex 5f961c3011..4f28d3065c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/3/CachedLog.java\n@@ -10,7 +10,7 @@ import java.util.Optional;\n  * In interface that represents a log file that is already stored locally and can be repeatedly\n  * read from.\n  */\n-public interface CachedLog extends CachedFile{\n+public interface CachedLog extends CachedFile {\n   Reader getReader() throws IOException;\n \n   Optional<MediaType> getMimeType();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/3/CachedLog.java\nindex 5f961c3011..4f28d3065c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/3/CachedLog.java\n@@ -10,7 +10,7 @@ import java.util.Optional;\n  * In interface that represents a log file that is already stored locally and can be repeatedly\n  * read from.\n  */\n-public interface CachedLog extends CachedFile{\n+public interface CachedLog extends CachedFile {\n   Reader getReader() throws IOException;\n \n   Optional<MediaType> getMimeType();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/3/CachedLog.java\nindex 5f961c3011..4c8fc7c464 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/3/CachedLog.java\n@@ -10,8 +10,8 @@ import java.util.Optional;\n  * In interface that represents a log file that is already stored locally and can be repeatedly\n  * read from.\n  */\n-public interface CachedLog extends CachedFile{\n+public interface CachedLog extends CachedFile {\n   Reader getReader() throws IOException;\n \n   Optional<MediaType> getMimeType();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/3/CachedLog.java\nindex 5f961c3011..2d71418bc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/3/CachedLog.java\n@@ -10,8 +10,9 @@ import java.util.Optional;\n  * In interface that represents a log file that is already stored locally and can be repeatedly\n  * read from.\n  */\n-public interface CachedLog extends CachedFile{\n-  Reader getReader() throws IOException;\n \n-  Optional<MediaType> getMimeType();\n-}\n+public interface CachedLog extends CachedFile {\n+    Reader getReader() throws IOException;\n+\n+    Optional<MediaType> getMimeType();\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/3/CachedLog.java\nindex 5f961c3011..4f28d3065c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/3/CachedLog.java\n@@ -10,7 +10,7 @@ import java.util.Optional;\n  * In interface that represents a log file that is already stored locally and can be repeatedly\n  * read from.\n  */\n-public interface CachedLog extends CachedFile{\n+public interface CachedLog extends CachedFile {\n   Reader getReader() throws IOException;\n \n   Optional<MediaType> getMimeType();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/3/CachedLog.java\nindex 5f961c3011..4f28d3065c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/3/CachedLog.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/3/CachedLog.java\n@@ -10,7 +10,7 @@ import java.util.Optional;\n  * In interface that represents a log file that is already stored locally and can be repeatedly\n  * read from.\n  */\n-public interface CachedLog extends CachedFile{\n+public interface CachedLog extends CachedFile {\n   Reader getReader() throws IOException;\n \n   Optional<MediaType> getMimeType();\n",
            "diff_size": 1
        }
    ]
}