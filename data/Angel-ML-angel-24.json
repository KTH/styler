{
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/24/DotPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/24/DotPartitionResult.java\nindex 2bc401aace..7b9d073ffe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/24/DotPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/24/DotPartitionResult.java\n@@ -21,42 +21,42 @@ import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetResult;\n import io.netty.buffer.ByteBuf;\n \n public class DotPartitionResult extends PartitionGetResult {\n-  float[] values;\n-  int length;\n-  ByteBuf buf;\n-\n-  public DotPartitionResult(float[] values) {\n-    this.values = values;\n-  }\n-\n-  public DotPartitionResult() {\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    buf.writeInt(values.length);\n-    for (float value : values) {\n-      buf.writeFloat(value);\n+    float[] values;\n+    int length;\n+    ByteBuf buf;\n+\n+    public DotPartitionResult(float[] values) {\n+        this.values = values;\n+    }\n+\n+    public DotPartitionResult() {\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        buf.writeInt(values.length);\n+        for (float value : values) {\n+            buf.writeFloat(value);\n+        }\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        this.length = buf.readInt();\n+        this.buf = buf.duplicate();\n+        this.buf.retain();\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        return 4 + values.length * 4;\n+    }\n+\n+    public void merge(float[] result) {\n+        for (int c = 0; c < result.length; c++) result[c] += buf.readFloat();\n+    }\n+\n+    public void clear() {\n+        buf.release();\n     }\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    this.length = buf.readInt();\n-    this.buf = buf.duplicate();\n-    this.buf.retain();\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    return 4 + values.length * 4;\n-  }\n-\n-  public void merge(float[] result) {\n-    for (int c = 0; c < result.length; c++) result[c] += buf.readFloat();\n-  }\n-\n-  public void clear() {\n-    buf.release();\n-  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/24/DotPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/24/DotPartitionResult.java\nindex 2bc401aace..cdad30bba8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/24/DotPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/24/DotPartitionResult.java\n@@ -59,4 +59,4 @@ public class DotPartitionResult extends PartitionGetResult {\n   public void clear() {\n     buf.release();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/24/DotPartitionResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/24/DotPartitionResult.java\nindex 2bc401aace..7378ae0e9d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/24/DotPartitionResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/24/DotPartitionResult.java\n@@ -21,42 +21,44 @@ import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetResult;\n import io.netty.buffer.ByteBuf;\n \n public class DotPartitionResult extends PartitionGetResult {\n-  float[] values;\n-  int length;\n-  ByteBuf buf;\n \n-  public DotPartitionResult(float[] values) {\n+    float[] values;\n+\n+    int length;\n+    ByteBuf buf;\n+\n+    public DotPartitionResult(float[] values) {\n     this.values = values;\n-  }\n+    }\n \n-  public DotPartitionResult() {\n-  }\n+    public DotPartitionResult() {}\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n+    @Override\n+    public void serialize(ByteBuf buf) {\n     buf.writeInt(values.length);\n     for (float value : values) {\n-      buf.writeFloat(value);\n+        buf.writeFloat(value);\n+    }\n     }\n-  }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n     this.length = buf.readInt();\n     this.buf = buf.duplicate();\n     this.buf.retain();\n-  }\n+    }\n \n-  @Override\n-  public int bufferLen() {\n+    @Override\n+    public int bufferLen() {\n     return 4 + values.length * 4;\n-  }\n+    }\n \n-  public void merge(float[] result) {\n-    for (int c = 0; c < result.length; c++) result[c] += buf.readFloat();\n-  }\n+    public void merge(float[] result) {\n+    for (int c = 0; c < result.length; c++)\n+        result[c] += buf.readFloat();\n+    }\n \n-  public void clear() {\n+    public void clear() {\n     buf.release();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}