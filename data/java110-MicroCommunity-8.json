{
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "86",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n        if (owners == null || owners.size() == 0) {\n            return owners;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "77",
                    "severity": "error",
                    "message": "'{' at column 77 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/8/OwnerInnerServiceSMOImpl.java\nindex 60ae1ace13..581784a54c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/8/OwnerInnerServiceSMOImpl.java\n@@ -82,94 +82,93 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n     }\n \n     @Override\n-    public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n-        if (owners == null || owners.size() == 0) {\n-            return owners;\n-        }\n+    public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) { List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+    if (owners == null || owners.size() == 0) {\n+        return owners;\n+    }\n \n-        String[] userIds = getUserIds(owners);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n+    String[] userIds = getUserIds(owners);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-        for (OwnerDto owner : owners) {\n-            refreshOwner(owner, users);\n-        }\n-        return owners;\n+    for (OwnerDto owner : owners) {\n+        refreshOwner(owner, users);\n     }\n+    return owners;\n+}\n \n-    /**\n+/**\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n      * @param owner \u5c0f\u533a\u4e1a\u4e3b\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n-    private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n-        for (UserDto user : users) {\n-            if (owner.getUserId().equals(user.getUserId())) {\n-                //BeanConvertUtil.covertBean(user, owner);\n-                owner.setUserName(user.getUserName());\n-            }\n+private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n+    for (UserDto user : users) {\n+        if (owner.getUserId().equals(user.getUserId())) {\n+            //BeanConvertUtil.covertBean(user, owner);\n+            owner.setUserName(user.getUserName());\n         }\n     }\n+}\n \n-    /**\n+/**\n      * \u83b7\u53d6\u6279\u91cfuserId\n      *\n      * @param communityMemberDtos \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-    private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n-        List<String> ownerIds = new ArrayList<String>();\n-        for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n-            ownerIds.add(communityMemberDto.getMemberId());\n-        }\n-\n-        return ownerIds.toArray(new String[ownerIds.size()]);\n+private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n+    List<String> ownerIds = new ArrayList<String>();\n+    for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n+        ownerIds.add(communityMemberDto.getMemberId());\n     }\n \n-    /**\n+    return ownerIds.toArray(new String[ownerIds.size()]);\n+}\n+\n+/**\n      * \u83b7\u53d6\u6279\u91cfuserId\n      *\n      * @param owners \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-    private String[] getUserIds(List<OwnerDto> owners) {\n-        List<String> userIds = new ArrayList<String>();\n-        for (OwnerDto owner : owners) {\n-            userIds.add(owner.getUserId());\n-        }\n-\n-        return userIds.toArray(new String[userIds.size()]);\n+private String[] getUserIds(List<OwnerDto> owners) {\n+    List<String> userIds = new ArrayList<String>();\n+    for (OwnerDto owner : owners) {\n+        userIds.add(owner.getUserId());\n     }\n \n-    @Override\n-    public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n+    return userIds.toArray(new String[userIds.size()]);\n+}\n \n-        //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n-        CommunityMemberDto communityMemberDto = new CommunityMemberDto();\n-        communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n-        communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n-        return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n+@Override\n+public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n \n-    }\n+    //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n+    CommunityMemberDto communityMemberDto = new CommunityMemberDto();\n+    communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n+    communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n+    return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n \n-    @Override\n-    public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n+}\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+@Override\n+public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n \n-        int page = ownerDto.getPage();\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            ownerDto.setPage((page - 1) * ownerDto.getRow());\n-            ownerDto.setRow(page * ownerDto.getRow());\n-        }\n-        return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+    int page = ownerDto.getPage();\n+\n+    if (page != PageDto.DEFAULT_PAGE) {\n+        ownerDto.setPage((page - 1) * ownerDto.getRow());\n+        ownerDto.setRow(page * ownerDto.getRow());\n     }\n+    return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+}\n \n-    @Override\n-    public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n+@Override\n+public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n         int page = ownerDto.getPage();\n",
            "diff_size": 67
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/8/OwnerInnerServiceSMOImpl.java\nindex 60ae1ace13..ef39b52a54 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/8/OwnerInnerServiceSMOImpl.java\n@@ -34,204 +34,204 @@ import java.util.Map;\n @RestController\n public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerInnerServiceSMO {\n \n-    @Autowired\n-    private IOwnerServiceDao ownerServiceDaoImpl;\n+  @Autowired\n+  private IOwnerServiceDao ownerServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n \n-    @Autowired\n-    private ICommunityInnerServiceSMO communityInnerServiceSMOImpl;\n+  @Autowired\n+  private ICommunityInnerServiceSMO communityInnerServiceSMOImpl;\n \n-    @Override\n-    public List<OwnerDto> queryOwners(@RequestBody OwnerDto ownerDto) {\n+  @Override\n+  public List<OwnerDto> queryOwners(@RequestBody OwnerDto ownerDto) {\n \n-        //communityInnerServiceSMOImpl.getCommunityMembers()\n-        //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n-        CommunityMemberDto communityMemberDto = BeanConvertUtil.covertBean(ownerDto, CommunityMemberDto.class);\n-        communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n-        if (StringUtils.isEmpty(communityMemberDto.getMemberId()) && !StringUtils.isEmpty(ownerDto.getOwnerId())) {\n-            communityMemberDto.setMemberId(ownerDto.getOwnerId());\n-        }\n-        List<CommunityMemberDto> communityMemberDtos = communityInnerServiceSMOImpl.getCommunityMembers(communityMemberDto);\n+    //communityInnerServiceSMOImpl.getCommunityMembers()\n+    //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n+    CommunityMemberDto communityMemberDto = BeanConvertUtil.covertBean(ownerDto, CommunityMemberDto.class);\n+    communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n+    if (StringUtils.isEmpty(communityMemberDto.getMemberId()) && !StringUtils.isEmpty(ownerDto.getOwnerId())) {\n+      communityMemberDto.setMemberId(ownerDto.getOwnerId());\n+    }\n+    List<CommunityMemberDto> communityMemberDtos = communityInnerServiceSMOImpl.getCommunityMembers(communityMemberDto);\n \n-        if (communityMemberDtos == null || communityMemberDtos.size() < 1) {\n-            return null;\n-        }\n+    if (communityMemberDtos == null || communityMemberDtos.size() < 1) {\n+      return null;\n+    }\n \n-        Map ownerInfo = new HashMap();\n-        ownerInfo.put(\"ownerIds\", getOwnerIds(communityMemberDtos));\n-        ownerInfo.put(\"ownerTypeCd\", ownerDto.getOwnerTypeCd());\n-        ownerInfo.put(\"statusCd\", StatusConstant.STATUS_CD_VALID);\n+    Map ownerInfo = new HashMap();\n+    ownerInfo.put(\"ownerIds\", getOwnerIds(communityMemberDtos));\n+    ownerInfo.put(\"ownerTypeCd\", ownerDto.getOwnerTypeCd());\n+    ownerInfo.put(\"statusCd\", StatusConstant.STATUS_CD_VALID);\n \n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(ownerInfo), OwnerDto.class);\n+    List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(ownerInfo), OwnerDto.class);\n \n-        if (owners == null || owners.size() == 0) {\n-            return owners;\n-        }\n+    if (owners == null || owners.size() == 0) {\n+      return owners;\n+    }\n \n-        String[] userIds = getUserIds(owners);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n+    String[] userIds = getUserIds(owners);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-        for (OwnerDto owner : owners) {\n-            refreshOwner(owner, users);\n-        }\n-        return owners;\n+    for (OwnerDto owner : owners) {\n+      refreshOwner(owner, users);\n     }\n+    return owners;\n+  }\n \n-    @Override\n-    public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n-        if (owners == null || owners.size() == 0) {\n-            return owners;\n-        }\n-\n-        String[] userIds = getUserIds(owners);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n-        for (OwnerDto owner : owners) {\n-            refreshOwner(owner, users);\n-        }\n-        return owners;\n+  @Override\n+  public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n+    List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+    if (owners == null || owners.size() == 0) {\n+      return owners;\n     }\n \n-    /**\n-     * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n-     *\n-     * @param owner \u5c0f\u533a\u4e1a\u4e3b\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n-     */\n-    private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n-        for (UserDto user : users) {\n-            if (owner.getUserId().equals(user.getUserId())) {\n-                //BeanConvertUtil.covertBean(user, owner);\n-                owner.setUserName(user.getUserName());\n-            }\n-        }\n-    }\n+    String[] userIds = getUserIds(owners);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-    /**\n-     * \u83b7\u53d6\u6279\u91cfuserId\n-     *\n-     * @param communityMemberDtos \u5c0f\u533a\u697c\u4fe1\u606f\n-     * @return \u6279\u91cfuserIds \u4fe1\u606f\n-     */\n-    private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n-        List<String> ownerIds = new ArrayList<String>();\n-        for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n-            ownerIds.add(communityMemberDto.getMemberId());\n-        }\n-\n-        return ownerIds.toArray(new String[ownerIds.size()]);\n+    for (OwnerDto owner : owners) {\n+      refreshOwner(owner, users);\n     }\n+    return owners;\n+  }\n \n-    /**\n-     * \u83b7\u53d6\u6279\u91cfuserId\n-     *\n-     * @param owners \u5c0f\u533a\u697c\u4fe1\u606f\n-     * @return \u6279\u91cfuserIds \u4fe1\u606f\n-     */\n-    private String[] getUserIds(List<OwnerDto> owners) {\n-        List<String> userIds = new ArrayList<String>();\n-        for (OwnerDto owner : owners) {\n-            userIds.add(owner.getUserId());\n-        }\n-\n-        return userIds.toArray(new String[userIds.size()]);\n+  /**\n+   * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n+   *\n+   * @param owner \u5c0f\u533a\u4e1a\u4e3b\u4fe1\u606f\n+   * @param users \u7528\u6237\u5217\u8868\n+   */\n+  private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n+    for (UserDto user : users) {\n+      if (owner.getUserId().equals(user.getUserId())) {\n+        //BeanConvertUtil.covertBean(user, owner);\n+        owner.setUserName(user.getUserName());\n+      }\n     }\n+  }\n \n-    @Override\n-    public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n+  /**\n+   * \u83b7\u53d6\u6279\u91cfuserId\n+   *\n+   * @param communityMemberDtos \u5c0f\u533a\u697c\u4fe1\u606f\n+   * @return \u6279\u91cfuserIds \u4fe1\u606f\n+   */\n+  private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n+    List<String> ownerIds = new ArrayList<String>();\n+    for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n+      ownerIds.add(communityMemberDto.getMemberId());\n+    }\n \n-        //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n-        CommunityMemberDto communityMemberDto = new CommunityMemberDto();\n-        communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n-        communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n-        return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n+    return ownerIds.toArray(new String[ownerIds.size()]);\n+  }\n \n+  /**\n+   * \u83b7\u53d6\u6279\u91cfuserId\n+   *\n+   * @param owners \u5c0f\u533a\u697c\u4fe1\u606f\n+   * @return \u6279\u91cfuserIds \u4fe1\u606f\n+   */\n+  private String[] getUserIds(List<OwnerDto> owners) {\n+    List<String> userIds = new ArrayList<String>();\n+    for (OwnerDto owner : owners) {\n+      userIds.add(owner.getUserId());\n     }\n \n-    @Override\n-    public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n+    return userIds.toArray(new String[userIds.size()]);\n+  }\n+\n+  @Override\n+  public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n+    CommunityMemberDto communityMemberDto = new CommunityMemberDto();\n+    communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n+    communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n+    return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n \n-        int page = ownerDto.getPage();\n+  }\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            ownerDto.setPage((page - 1) * ownerDto.getRow());\n-            ownerDto.setRow(page * ownerDto.getRow());\n-        }\n-        return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+  @Override\n+  public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n+\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+\n+    int page = ownerDto.getPage();\n+\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      ownerDto.setPage((page - 1) * ownerDto.getRow());\n+      ownerDto.setRow(page * ownerDto.getRow());\n     }\n+    return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+  }\n \n-    @Override\n-    public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n+  @Override\n+  public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = ownerDto.getPage();\n-\n-        if (page != PageDto.DEFAULT_PAGE) {\n-            ownerDto.setPage((page - 1) * ownerDto.getRow());\n-            ownerDto.setRow(page * ownerDto.getRow());\n-        }\n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(\n-                ownerServiceDaoImpl.getOwnerInfoByCondition(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n-        if (owners == null || owners.size() == 0) {\n-            return owners;\n-        }\n-\n-        String[] userIds = getUserIds(owners);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n-        for (OwnerDto owner : owners) {\n-            refreshOwner(owner, users);\n-        }\n-        return owners;\n+    int page = ownerDto.getPage();\n+\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      ownerDto.setPage((page - 1) * ownerDto.getRow());\n+      ownerDto.setRow(page * ownerDto.getRow());\n+    }\n+    List<OwnerDto> owners = BeanConvertUtil.covertBeanList(\n+      ownerServiceDaoImpl.getOwnerInfoByCondition(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+    if (owners == null || owners.size() == 0) {\n+      return owners;\n     }\n \n+    String[] userIds = getUserIds(owners);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-    @Override\n-    public int queryNoEnterRoomOwnerCount(@RequestBody OwnerDto ownerDto) {\n-        return ownerServiceDaoImpl.queryNoEnterRoomOwnerCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+    for (OwnerDto owner : owners) {\n+      refreshOwner(owner, users);\n     }\n+    return owners;\n+  }\n \n-    @Override\n-    public List<OwnerDto> queryOwnersByRoom(@RequestBody OwnerDto ownerDto) {\n-        return BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.queryOwnersByRoom(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n-    }\n \n-    @Override\n-    public List<OwnerDto> queryOwnersByParkingSpace(@RequestBody OwnerDto ownerDto) {\n-        return BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.queryOwnersByParkingSpace(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n-    }\n+  @Override\n+  public int queryNoEnterRoomOwnerCount(@RequestBody OwnerDto ownerDto) {\n+    return ownerServiceDaoImpl.queryNoEnterRoomOwnerCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  @Override\n+  public List<OwnerDto> queryOwnersByRoom(@RequestBody OwnerDto ownerDto) {\n+    return BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.queryOwnersByRoom(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  @Override\n+  public List<OwnerDto> queryOwnersByParkingSpace(@RequestBody OwnerDto ownerDto) {\n+    return BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.queryOwnersByParkingSpace(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+  }\n \n-    public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n-        return communityInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setCommunityInnerServiceSMOImpl(ICommunityInnerServiceSMO communityInnerServiceSMOImpl) {\n-        this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n \n-    public IOwnerServiceDao getOwnerServiceDaoImpl() {\n-        return ownerServiceDaoImpl;\n-    }\n+  public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n+    return communityInnerServiceSMOImpl;\n+  }\n \n-    public void setOwnerServiceDaoImpl(IOwnerServiceDao ownerServiceDaoImpl) {\n-        this.ownerServiceDaoImpl = ownerServiceDaoImpl;\n-    }\n+  public void setCommunityInnerServiceSMOImpl(ICommunityInnerServiceSMO communityInnerServiceSMOImpl) {\n+    this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n+  }\n+\n+  public IOwnerServiceDao getOwnerServiceDaoImpl() {\n+    return ownerServiceDaoImpl;\n+  }\n+\n+  public void setOwnerServiceDaoImpl(IOwnerServiceDao ownerServiceDaoImpl) {\n+    this.ownerServiceDaoImpl = ownerServiceDaoImpl;\n+  }\n \n }\n",
            "diff_size": 209
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/8/OwnerInnerServiceSMOImpl.java\nindex 60ae1ace13..f151dbd9ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/8/OwnerInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.user.smo.impl;\n \n-\n import com.java110.common.constant.CommunityMemberTypeConstant;\n import com.java110.common.constant.StatusConstant;\n import com.java110.common.util.BeanConvertUtil;\n@@ -17,7 +16,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.util.StringUtils;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -31,6 +29,8 @@ import java.util.Map;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerInnerServiceSMO {\n \n@@ -40,7 +40,6 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n     @Autowired\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-\n     @Autowired\n     private ICommunityInnerServiceSMO communityInnerServiceSMOImpl;\n \n@@ -51,11 +50,12 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n         CommunityMemberDto communityMemberDto = BeanConvertUtil.covertBean(ownerDto, CommunityMemberDto.class);\n         communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n+\n         if (StringUtils.isEmpty(communityMemberDto.getMemberId()) && !StringUtils.isEmpty(ownerDto.getOwnerId())) {\n             communityMemberDto.setMemberId(ownerDto.getOwnerId());\n         }\n-        List<CommunityMemberDto> communityMemberDtos = communityInnerServiceSMOImpl.getCommunityMembers(communityMemberDto);\n \n+        List<CommunityMemberDto> communityMemberDtos = communityInnerServiceSMOImpl.getCommunityMembers(communityMemberDto);\n         if (communityMemberDtos == null || communityMemberDtos.size() < 1) {\n             return null;\n         }\n@@ -66,7 +66,6 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         ownerInfo.put(\"statusCd\", StatusConstant.STATUS_CD_VALID);\n \n         List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(ownerInfo), OwnerDto.class);\n-\n         if (owners == null || owners.size() == 0) {\n             return owners;\n         }\n@@ -74,13 +73,14 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         String[] userIds = getUserIds(owners);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (OwnerDto owner : owners) {\n             refreshOwner(owner, users);\n         }\n+\n         return owners;\n     }\n \n+\n     @Override\n     public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n         List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n@@ -91,10 +91,10 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         String[] userIds = getUserIds(owners);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (OwnerDto owner : owners) {\n             refreshOwner(owner, users);\n         }\n+\n         return owners;\n     }\n \n@@ -104,6 +104,8 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n      * @param owner \u5c0f\u533a\u4e1a\u4e3b\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (owner.getUserId().equals(user.getUserId())) {\n@@ -119,6 +121,8 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n      * @param communityMemberDtos \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n         List<String> ownerIds = new ArrayList<String>();\n         for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n@@ -134,6 +138,8 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n      * @param owners \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<OwnerDto> owners) {\n         List<String> userIds = new ArrayList<String>();\n         for (OwnerDto owner : owners) {\n@@ -143,6 +149,7 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n+\n     @Override\n     public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n \n@@ -151,35 +158,33 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n         communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n         return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n-\n     }\n \n+\n     @Override\n     public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = ownerDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             ownerDto.setPage((page - 1) * ownerDto.getRow());\n             ownerDto.setRow(page * ownerDto.getRow());\n         }\n+\n         return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n     }\n \n+\n     @Override\n     public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = ownerDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             ownerDto.setPage((page - 1) * ownerDto.getRow());\n             ownerDto.setRow(page * ownerDto.getRow());\n         }\n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(\n-                ownerServiceDaoImpl.getOwnerInfoByCondition(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+\n+        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfoByCondition(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n         if (owners == null || owners.size() == 0) {\n             return owners;\n         }\n@@ -187,10 +192,10 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         String[] userIds = getUserIds(owners);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (OwnerDto owner : owners) {\n             refreshOwner(owner, users);\n         }\n+\n         return owners;\n     }\n \n@@ -200,11 +205,13 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n         return ownerServiceDaoImpl.queryNoEnterRoomOwnerCount(BeanConvertUtil.beanCovertMap(ownerDto));\n     }\n \n+\n     @Override\n     public List<OwnerDto> queryOwnersByRoom(@RequestBody OwnerDto ownerDto) {\n         return BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.queryOwnersByRoom(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n     }\n \n+\n     @Override\n     public List<OwnerDto> queryOwnersByParkingSpace(@RequestBody OwnerDto ownerDto) {\n         return BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.queryOwnersByParkingSpace(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n@@ -233,5 +240,4 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n     public void setOwnerServiceDaoImpl(IOwnerServiceDao ownerServiceDaoImpl) {\n         this.ownerServiceDaoImpl = ownerServiceDaoImpl;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "87",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "87",
                    "column": "53",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/8/OwnerInnerServiceSMOImpl.java\nindex 60ae1ace13..c74545f530 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/8/OwnerInnerServiceSMOImpl.java\n@@ -83,7 +83,8 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n \n     @Override\n     public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo\n+        ( BeanConvertUtil. beanCovertMap (ownerDto)),OwnerDto.class);\n         if (owners == null || owners.size() == 0) {\n             return owners;\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "77",
                    "severity": "error",
                    "message": "'{' at column 77 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/8/OwnerInnerServiceSMOImpl.java\nindex 60ae1ace13..581784a54c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/8/OwnerInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/8/OwnerInnerServiceSMOImpl.java\n@@ -82,94 +82,93 @@ public class OwnerInnerServiceSMOImpl extends BaseServiceSMO implements IOwnerIn\n     }\n \n     @Override\n-    public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) {\n-        List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n-        if (owners == null || owners.size() == 0) {\n-            return owners;\n-        }\n+    public List<OwnerDto> queryOwnerMembers(@RequestBody OwnerDto ownerDto) { List<OwnerDto> owners = BeanConvertUtil.covertBeanList(ownerServiceDaoImpl.getOwnerInfo(BeanConvertUtil.beanCovertMap(ownerDto)), OwnerDto.class);\n+    if (owners == null || owners.size() == 0) {\n+        return owners;\n+    }\n \n-        String[] userIds = getUserIds(owners);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n+    String[] userIds = getUserIds(owners);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-        for (OwnerDto owner : owners) {\n-            refreshOwner(owner, users);\n-        }\n-        return owners;\n+    for (OwnerDto owner : owners) {\n+        refreshOwner(owner, users);\n     }\n+    return owners;\n+}\n \n-    /**\n+/**\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n      * @param owner \u5c0f\u533a\u4e1a\u4e3b\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n-    private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n-        for (UserDto user : users) {\n-            if (owner.getUserId().equals(user.getUserId())) {\n-                //BeanConvertUtil.covertBean(user, owner);\n-                owner.setUserName(user.getUserName());\n-            }\n+private void refreshOwner(OwnerDto owner, List<UserDto> users) {\n+    for (UserDto user : users) {\n+        if (owner.getUserId().equals(user.getUserId())) {\n+            //BeanConvertUtil.covertBean(user, owner);\n+            owner.setUserName(user.getUserName());\n         }\n     }\n+}\n \n-    /**\n+/**\n      * \u83b7\u53d6\u6279\u91cfuserId\n      *\n      * @param communityMemberDtos \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-    private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n-        List<String> ownerIds = new ArrayList<String>();\n-        for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n-            ownerIds.add(communityMemberDto.getMemberId());\n-        }\n-\n-        return ownerIds.toArray(new String[ownerIds.size()]);\n+private String[] getOwnerIds(List<CommunityMemberDto> communityMemberDtos) {\n+    List<String> ownerIds = new ArrayList<String>();\n+    for (CommunityMemberDto communityMemberDto : communityMemberDtos) {\n+        ownerIds.add(communityMemberDto.getMemberId());\n     }\n \n-    /**\n+    return ownerIds.toArray(new String[ownerIds.size()]);\n+}\n+\n+/**\n      * \u83b7\u53d6\u6279\u91cfuserId\n      *\n      * @param owners \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-    private String[] getUserIds(List<OwnerDto> owners) {\n-        List<String> userIds = new ArrayList<String>();\n-        for (OwnerDto owner : owners) {\n-            userIds.add(owner.getUserId());\n-        }\n-\n-        return userIds.toArray(new String[userIds.size()]);\n+private String[] getUserIds(List<OwnerDto> owners) {\n+    List<String> userIds = new ArrayList<String>();\n+    for (OwnerDto owner : owners) {\n+        userIds.add(owner.getUserId());\n     }\n \n-    @Override\n-    public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n+    return userIds.toArray(new String[userIds.size()]);\n+}\n \n-        //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n-        CommunityMemberDto communityMemberDto = new CommunityMemberDto();\n-        communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n-        communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n-        return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n+@Override\n+public int queryOwnersCount(@RequestBody OwnerDto ownerDto) {\n \n-    }\n+    //\u8c03\u7528 \u5c0f\u533a\u670d\u52a1\u67e5\u8be2 \u5c0f\u533a\u6210\u5458\u4e1a\u4e3b\u4fe1\u606f\n+    CommunityMemberDto communityMemberDto = new CommunityMemberDto();\n+    communityMemberDto.setCommunityId(ownerDto.getCommunityId());\n+    communityMemberDto.setMemberTypeCd(CommunityMemberTypeConstant.OWNER);\n+    return communityInnerServiceSMOImpl.getCommunityMemberCount(communityMemberDto);\n \n-    @Override\n-    public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n+}\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+@Override\n+public int queryOwnerCountByCondition(@RequestBody OwnerDto ownerDto) {\n \n-        int page = ownerDto.getPage();\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            ownerDto.setPage((page - 1) * ownerDto.getRow());\n-            ownerDto.setRow(page * ownerDto.getRow());\n-        }\n-        return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+    int page = ownerDto.getPage();\n+\n+    if (page != PageDto.DEFAULT_PAGE) {\n+        ownerDto.setPage((page - 1) * ownerDto.getRow());\n+        ownerDto.setRow(page * ownerDto.getRow());\n     }\n+    return ownerServiceDaoImpl.queryOwnersCount(BeanConvertUtil.beanCovertMap(ownerDto));\n+}\n \n-    @Override\n-    public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n+@Override\n+public List<OwnerDto> queryOwnersByCondition(@RequestBody OwnerDto ownerDto) {\n //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n         int page = ownerDto.getPage();\n",
            "diff_size": 67
        }
    ]
}