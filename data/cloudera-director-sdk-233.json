{
    "error_id": "233",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/233/ConfigurationPropertyValue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/233/ConfigurationPropertyValue.java\nindex 23fcbc7e8f..068f5369ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/233/ConfigurationPropertyValue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/233/ConfigurationPropertyValue.java\n@@ -20,96 +20,109 @@ package com.cloudera.director.client.v12.model;\n \n \n public class ConfigurationPropertyValue {\n-  private String label;\n-  private String value;\n-  public ConfigurationPropertyValue() { }\n-\n-  private ConfigurationPropertyValue(String label, String value) {\n-    this.label = label;\n-    this.value = value;\n-  }\n-\n-  private ConfigurationPropertyValue(ConfigurationPropertyValueBuilder builder) {\n-    this.label = builder.label;\n-    this.value = builder.value;\n-  }\n-\n-  public static ConfigurationPropertyValueBuilder builder() {\n-    return new ConfigurationPropertyValueBuilder();\n-  }\n-\n-  public static class ConfigurationPropertyValueBuilder {\n-    private String label = null;\n-    private String value = null;\n-\n-    public ConfigurationPropertyValueBuilder label(String label) {\n-      this.label = label;\n-      return this;\n+    private String label;\n+    private String value;\n+\n+    public ConfigurationPropertyValue() {\n+    }\n+\n+    private ConfigurationPropertyValue(String label, String value) {\n+        this.label = label;\n+        this.value = value;\n+    }\n+\n+    private ConfigurationPropertyValue(ConfigurationPropertyValueBuilder builder) {\n+        this.label = builder.label;\n+        this.value = builder.value;\n+    }\n+\n+    public static ConfigurationPropertyValueBuilder builder() {\n+        return new ConfigurationPropertyValueBuilder();\n+    }\n+\n+    public static class ConfigurationPropertyValueBuilder {\n+        private String label = null;\n+        private String value = null;\n+\n+        public ConfigurationPropertyValueBuilder label(String label) {\n+            this.label = label;\n+            return this;\n+        }\n+\n+        public ConfigurationPropertyValueBuilder value(String value) {\n+            this.value = value;\n+            return this;\n+        }\n+\n+        public ConfigurationPropertyValue build() {\n+            return new ConfigurationPropertyValue(this);\n+        }\n+    }\n+\n+    public ConfigurationPropertyValueBuilder toBuilder() {\n+        return builder()\n+            .label(label)\n+            .value(value)\n+            ;\n+    }\n+\n+    public String getLabel() {\n+        return label;\n+    }\n+\n+    public void setLabel(String label) {\n+        this.label = label;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(String value) {\n+        this.value = value;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        ConfigurationPropertyValue other = (ConfigurationPropertyValue) o; // NOPMD\n+\n+        if (label != null ?\n+            !label.equals(other.label) :\n+            other.label != null) {\n+            return false;\n+        }\n+        if (value != null ?\n+            !value.equals(other.value) :\n+            other.value != null) {\n+            return false;\n+        }\n+        return true;\n     }\n \n-    public ConfigurationPropertyValueBuilder value(String value) {\n-      this.value = value;\n-      return this;\n+    @Override\n+    public int hashCode() {\n+        int result = 0;\n+        result = 31 * result + (label != null ? label.hashCode() : 0);\n+        result = 31 * result + (value != null ? value.hashCode() : 0);\n+        return result;\n     }\n \n-    public ConfigurationPropertyValue build() {\n-      return new ConfigurationPropertyValue(this);\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        String newLine = System.getProperty(\"line.separator\");\n+        sb.append(\"class ConfigurationPropertyValue {\" + newLine);\n+        sb.append(\"  label: \").append(label).append(newLine);\n+        sb.append(\"  value: \").append(value).append(newLine);\n+        sb.append(\"}\" + newLine);\n+        return sb.toString();\n     }\n-  }\n-\n-  public ConfigurationPropertyValueBuilder toBuilder() {\n-    return builder()\n-      .label(label)\n-      .value(value)\n-      ;\n-  }\n-  public String getLabel() {\n-    return label;\n-  }\n-  public void setLabel(String label) {\n-    this.label = label;\n-  }\n-\n-  public String getValue() {\n-    return value;\n-  }\n-  public void setValue(String value) {\n-    this.value = value;\n-  }\n-\n-  @Override\n-  public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    ConfigurationPropertyValue other = (ConfigurationPropertyValue) o; // NOPMD\n-\n-    if (label != null ?\n-        !label.equals(other.label) :\n-        other.label != null) return false;\n-    if (value != null ?\n-        !value.equals(other.value) :\n-        other.value != null) return false;\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int result = 0;\n-    result = 31 * result + (label != null ? label.hashCode() : 0);\n-    result = 31 * result + (value != null ? value.hashCode() : 0);\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString()  {\n-    StringBuilder sb = new StringBuilder();\n-    String newLine = System.getProperty(\"line.separator\");\n-    sb.append(\"class ConfigurationPropertyValue {\" + newLine);\n-    sb.append(\"  label: \").append(label).append(newLine);\n-    sb.append(\"  value: \").append(value).append(newLine);\n-    sb.append(\"}\" + newLine);\n-    return sb.toString();\n-  }\n }\n \n",
            "diff_size": 155
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "19",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/233/ConfigurationPropertyValue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/233/ConfigurationPropertyValue.java\nindex 23fcbc7e8f..55ea1bca0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/233/ConfigurationPropertyValue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/233/ConfigurationPropertyValue.java\n@@ -1,28 +1,14 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v12.model;\n \n-\n public class ConfigurationPropertyValue {\n+\n   private String label;\n   private String value;\n-  public ConfigurationPropertyValue() { }\n+\n+public ConfigurationPropertyValue() { }\n \n   private ConfigurationPropertyValue(String label, String value) {\n     this.label = label;\n@@ -39,7 +25,8 @@ public class ConfigurationPropertyValue {\n   }\n \n   public static class ConfigurationPropertyValueBuilder {\n-    private String label = null;\n+\n+  private String label = null;\n     private String value = null;\n \n     public ConfigurationPropertyValueBuilder label(String label) {\n@@ -58,12 +45,11 @@ public class ConfigurationPropertyValue {\n   }\n \n   public ConfigurationPropertyValueBuilder toBuilder() {\n-    return builder()\n-      .label(label)\n-      .value(value)\n-      ;\n+    return builder().label(label)\n+      .value(value);\n   }\n-  public String getLabel() {\n+\n+public String getLabel() {\n     return label;\n   }\n   public void setLabel(String label) {\n@@ -80,16 +66,16 @@ public class ConfigurationPropertyValue {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    ConfigurationPropertyValue other = (ConfigurationPropertyValue) o;\n \n-    ConfigurationPropertyValue other = (ConfigurationPropertyValue) o; // NOPMD\n+// NOPMD\n \n-    if (label != null ?\n-        !label.equals(other.label) :\n-        other.label != null) return false;\n-    if (value != null ?\n-        !value.equals(other.value) :\n-        other.value != null) return false;\n+    if (label != null ?!label.equals(other.label) : other.label != null) return false;\n+\n+if (value != null ?!value.equals(other.value) : other.value != null) return false;\n     return true;\n   }\n \n@@ -102,7 +88,7 @@ public class ConfigurationPropertyValue {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ConfigurationPropertyValue {\" + newLine);\n@@ -111,5 +97,4 @@ public class ConfigurationPropertyValue {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "28",
                    "column": "41",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "28",
                    "column": "42",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "94",
                    "column": "67",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "96",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "column": "49",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "49",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "41",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "59",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "41",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "59",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/233/ConfigurationPropertyValue.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/233/ConfigurationPropertyValue.java\nindex 23fcbc7e8f..9f35e4e74c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/233/ConfigurationPropertyValue.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/233/ConfigurationPropertyValue.java\n@@ -18,91 +18,99 @@\n \n package com.cloudera.director.client.v12.model;\n \n-\n public class ConfigurationPropertyValue {\n-  private String label;\n-  private String value;\n-  public ConfigurationPropertyValue() { }\n \n-  private ConfigurationPropertyValue(String label, String value) {\n-    this.label = label;\n-    this.value = value;\n-  }\n+    private String label;\n+\n+    private String value;\n \n-  private ConfigurationPropertyValue(ConfigurationPropertyValueBuilder builder) {\n-    this.label = builder.label;\n-    this.value = builder.value;\n-  }\n \n-  public static ConfigurationPropertyValueBuilder builder() {\n+    public ConfigurationPropertyValue() {}\n+\n+    private ConfigurationPropertyValue(String label, String value) {\n+                                                                   this.label = label;\n+                                                                   this.value = value;\n+                                        }\n+\n+    private ConfigurationPropertyValue(ConfigurationPropertyValueBuilder builder) {\n+                                                                                  this.label = builder.label;\n+                                                                                  this.value = builder.value;\n+                                        }\n+\n+    public static ConfigurationPropertyValueBuilder builder() {\n     return new ConfigurationPropertyValueBuilder();\n-  }\n+    }\n+\n+    public static class ConfigurationPropertyValueBuilder {\n \n-  public static class ConfigurationPropertyValueBuilder {\n     private String label = null;\n+\n     private String value = null;\n \n     public ConfigurationPropertyValueBuilder label(String label) {\n-      this.label = label;\n-      return this;\n+        this.label = label;\n+        return this;\n     }\n \n     public ConfigurationPropertyValueBuilder value(String value) {\n-      this.value = value;\n-      return this;\n+        this.value = value;\n+        return this;\n     }\n \n     public ConfigurationPropertyValue build() {\n-      return new ConfigurationPropertyValue(this);\n+        return new ConfigurationPropertyValue(this);\n     }\n-  }\n-\n-  public ConfigurationPropertyValueBuilder toBuilder() {\n-    return builder()\n-      .label(label)\n-      .value(value)\n-      ;\n-  }\n-  public String getLabel() {\n+    }\n+\n+    public ConfigurationPropertyValueBuilder toBuilder() {\n+    return builder().label(label)\n+                    .value(value);\n+    }\n+\n+    public String getLabel() {\n     return label;\n-  }\n-  public void setLabel(String label) {\n+    }\n+\n+    public void setLabel(String label) {\n     this.label = label;\n-  }\n+    }\n \n-  public String getValue() {\n+    public String getValue() {\n     return value;\n-  }\n-  public void setValue(String value) {\n+    }\n+\n+    public void setValue(String value) {\n     this.value = value;\n-  }\n+    }\n+\n \n-  @Override\n-  public boolean equals(Object o) {\n+    @Override\n+    public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n \n-    ConfigurationPropertyValue other = (ConfigurationPropertyValue) o; // NOPMD\n+    if (o == null ||\n+        getClass() != o.getClass()) return false;\n+\n+    ConfigurationPropertyValue other = (ConfigurationPropertyValue)o; // NOPMD\n \n-    if (label != null ?\n-        !label.equals(other.label) :\n-        other.label != null) return false;\n-    if (value != null ?\n-        !value.equals(other.value) :\n-        other.value != null) return false;\n+    if (label != null?!label.equals(other.label): other.label != null) return false;\n+\n+    if (value != null?!value.equals(other.value): other.value != null) return false;\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (label != null ? label.hashCode() : 0);\n-    result = 31 * result + (value != null ? value.hashCode() : 0);\n+    result = 31 *result + (label != null? label.hashCode(): 0);\n+    result = 31 *result + (value != null? value.hashCode(): 0);\n     return result;\n-  }\n+    }\n \n-  @Override\n-  public String toString()  {\n+\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ConfigurationPropertyValue {\" + newLine);\n@@ -110,6 +118,5 @@ public class ConfigurationPropertyValue {\n     sb.append(\"  value: \").append(value).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n-  }\n-}\n-\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 80
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}