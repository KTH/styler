{
    "error_id": "413",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.child.multi.instance;\n\nimport static org.activiti.bpmn.constants.BpmnXMLConstants.ACTIVITI_EXTENSIONS_NAMESPACE;\nimport static org.activiti.bpmn.constants.BpmnXMLConstants.ATTRIBUTE_MULTIINSTANCE_COLLECTION;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/413/MultiInstanceAttributesParser.java\nindex 82437f7463..86e6866dbb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/413/MultiInstanceAttributesParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static org.activiti.bpmn.constants.BpmnXMLConstants.ACTIVITI_EXTENSIONS_NAMESPACE;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/413/MultiInstanceAttributesParser.java\nindex 82437f7463..fe28aee860 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/413/MultiInstanceAttributesParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static org.activiti.bpmn.constants.BpmnXMLConstants.ACTIVITI_EXTENSIONS_NAMESPACE;\n@@ -27,7 +28,7 @@ import org.activiti.bpmn.converter.child.ElementParser;\n import org.activiti.bpmn.model.MultiInstanceLoopCharacteristics;\n \n public class MultiInstanceAttributesParser implements\n-    ElementParser<MultiInstanceLoopCharacteristics> {\n+        ElementParser<MultiInstanceLoopCharacteristics> {\n \n     @Override\n     public boolean canParseCurrentElement(XMLStreamReader reader) {\n@@ -36,16 +37,16 @@ public class MultiInstanceAttributesParser implements\n \n     @Override\n     public void setInformation(XMLStreamReader reader,\n-        MultiInstanceLoopCharacteristics loopCharacteristics) {\n+                               MultiInstanceLoopCharacteristics loopCharacteristics) {\n         loopCharacteristics.setInputDataItem(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-            ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n+                ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n         loopCharacteristics.setElementVariable(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-            ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n+                ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n         loopCharacteristics.setElementIndexVariable(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-            ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n+                ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n \n         String isSequentialValue = reader.getAttributeValue(null,\n-            ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL);\n+                ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL);\n         if (isSequentialValue != null) {\n             loopCharacteristics.setSequential(Boolean.valueOf(isSequentialValue));\n         }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/413/MultiInstanceAttributesParser.java\nindex 82437f7463..cbe7b8256f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/413/MultiInstanceAttributesParser.java\n@@ -16,18 +16,22 @@\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static org.activiti.bpmn.constants.BpmnXMLConstants.ACTIVITI_EXTENSIONS_NAMESPACE;\n+\n import static org.activiti.bpmn.constants.BpmnXMLConstants.ATTRIBUTE_MULTIINSTANCE_COLLECTION;\n+\n import static org.activiti.bpmn.constants.BpmnXMLConstants.ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE;\n+\n import static org.activiti.bpmn.constants.BpmnXMLConstants.ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL;\n+\n import static org.activiti.bpmn.constants.BpmnXMLConstants.ATTRIBUTE_MULTIINSTANCE_VARIABLE;\n-import static org.activiti.bpmn.constants.BpmnXMLConstants.ELEMENT_MULTIINSTANCE;\n \n+import static org.activiti.bpmn.constants.BpmnXMLConstants.ELEMENT_MULTIINSTANCE;\n import javax.xml.stream.XMLStreamReader;\n import org.activiti.bpmn.converter.child.ElementParser;\n import org.activiti.bpmn.model.MultiInstanceLoopCharacteristics;\n \n-public class MultiInstanceAttributesParser implements\n-    ElementParser<MultiInstanceLoopCharacteristics> {\n+\n+public class MultiInstanceAttributesParser implements ElementParser<MultiInstanceLoopCharacteristics> {\n \n     @Override\n     public boolean canParseCurrentElement(XMLStreamReader reader) {\n@@ -35,19 +39,18 @@ public class MultiInstanceAttributesParser implements\n     }\n \n     @Override\n-    public void setInformation(XMLStreamReader reader,\n-        MultiInstanceLoopCharacteristics loopCharacteristics) {\n-        loopCharacteristics.setInputDataItem(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-            ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n-        loopCharacteristics.setElementVariable(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-            ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n-        loopCharacteristics.setElementIndexVariable(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n-            ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n-\n-        String isSequentialValue = reader.getAttributeValue(null,\n-            ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL);\n-        if (isSequentialValue != null) {\n-            loopCharacteristics.setSequential(Boolean.valueOf(isSequentialValue));\n-        }\n+    public void setInformation(XMLStreamReader reader, MultiInstanceLoopCharacteristics loopCharacteristics) {\n+    loopCharacteristics.setInputDataItem(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n+                                                                  ATTRIBUTE_MULTIINSTANCE_COLLECTION));\n+    loopCharacteristics.setElementVariable(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n+                                                                    ATTRIBUTE_MULTIINSTANCE_VARIABLE));\n+    loopCharacteristics.setElementIndexVariable(reader.getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE,\n+                                                                         ATTRIBUTE_MULTIINSTANCE_INDEX_VARIABLE));\n+\n+\n+    String isSequentialValue = reader.getAttributeValue(null, ATTRIBUTE_MULTIINSTANCE_SEQUENTIAL);\n+    if (isSequentialValue != null) {\n+        loopCharacteristics.setSequential(Boolean.valueOf(isSequentialValue));\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/413/MultiInstanceAttributesParser.java\nindex 82437f7463..86e6866dbb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/413/MultiInstanceAttributesParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static org.activiti.bpmn.constants.BpmnXMLConstants.ACTIVITI_EXTENSIONS_NAMESPACE;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/413/MultiInstanceAttributesParser.java\nindex 82437f7463..86e6866dbb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/413/MultiInstanceAttributesParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/413/MultiInstanceAttributesParser.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child.multi.instance;\n \n import static org.activiti.bpmn.constants.BpmnXMLConstants.ACTIVITI_EXTENSIONS_NAMESPACE;\n",
            "diff_size": 1
        }
    ]
}