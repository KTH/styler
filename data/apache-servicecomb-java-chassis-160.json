{
    "error_id": "160",
    "information": {
        "errors": [
            {
                "line": "82",
                "column": "7",
                "severity": "warning",
                "message": "'(' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "  @SuppressWarnings(\"unchecked\")\n  public static RegistryBean buildFromYamlModel\n      (String serviceName, Map<String, Object> serviceConfig) {\n    return new RegistryBean()\n        .setId(validId((String) serviceConfig.get(\"id\")))\n        .setServiceName(serviceName)",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/160/RegistryBean.java\nindex 320d5aa9dc..af8d8cf4fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler/160/RegistryBean.java\n@@ -78,119 +78,118 @@ public class RegistryBean {\n   private Instances instances;\n \n   @SuppressWarnings(\"unchecked\")\n-  public static RegistryBean buildFromYamlModel\n-      (String serviceName, Map<String, Object> serviceConfig) {\n-    return new RegistryBean()\n-        .setId(validId((String) serviceConfig.get(\"id\")))\n-        .setServiceName(serviceName)\n-        .setVersion((String) serviceConfig.get(\"version\"))\n-        .setAppId(validAppId((String) serviceConfig.get(\"appid\")))\n-        .setSchemaIds(validListsValue((List<String>) serviceConfig.get(\"schemaIds\")))\n-        .setInstances(\n-            new Instances()\n-                .setInstances(validInstances((List<Map<String, Object>>) serviceConfig.get(\"instances\"))));\n-  }\n-\n-  @SuppressWarnings(\"unchecked\")\n-  private static List<Instance> validInstances(List<Map<String, Object>> instancesConfig) {\n-    if (instancesConfig == null) {\n-      return Collections.emptyList();\n-    }\n+  public static RegistryBean buildFromYamlModel(String serviceName, Map<String, Object> serviceConfig) {\n+return new RegistryBean()\n+    .setId(validId((String) serviceConfig.get(\"id\")))\n+    .setServiceName(serviceName)\n+    .setVersion((String) serviceConfig.get(\"version\"))\n+    .setAppId(validAppId((String) serviceConfig.get(\"appid\")))\n+    .setSchemaIds(validListsValue((List<String>) serviceConfig.get(\"schemaIds\")))\n+    .setInstances(\n+        new Instances()\n+            .setInstances(validInstances((List<Map<String, Object>>) serviceConfig.get(\"instances\"))));\n+}\n \n-    List<Instance> instances = new ArrayList<>();\n-    for (Map<String, Object> instanceConfig : instancesConfig) {\n-      instances.add(new Instance().setEndpoints(\n-          validListsValue((List<String>) instanceConfig.get(\"endpoints\"))));\n-    }\n-    return instances;\n+@SuppressWarnings(\"unchecked\")\n+private static List<Instance> validInstances(List<Map<String, Object>> instancesConfig) {\n+  if (instancesConfig == null) {\n+    return Collections.emptyList();\n   }\n \n-  private static List<String> validListsValue(List<String> listsValue) {\n-    return listsValue == null ? Collections.emptyList() : listsValue;\n+  List<Instance> instances = new ArrayList<>();\n+  for (Map<String, Object> instanceConfig : instancesConfig) {\n+    instances.add(new Instance().setEndpoints(\n+        validListsValue((List<String>) instanceConfig.get(\"endpoints\"))));\n   }\n+  return instances;\n+}\n \n-  private static String validId(String serviceId) {\n-    return StringUtils.isEmpty(serviceId) ? UUID.randomUUID().toString() : serviceId;\n-  }\n+private static List<String> validListsValue(List<String> listsValue) {\n+  return listsValue == null ? Collections.emptyList() : listsValue;\n+}\n \n-  private static String validAppId(String configAppId) {\n-    if (!StringUtils.isEmpty(configAppId)) {\n-      return configAppId;\n-    }\n-    if (DynamicPropertyFactory.getInstance()\n-        .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get() != null) {\n-      return DynamicPropertyFactory.getInstance()\n-          .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get();\n-    }\n-    return DEFAULT_APPLICATION_ID;\n-  }\n+private static String validId(String serviceId) {\n+  return StringUtils.isEmpty(serviceId) ? UUID.randomUUID().toString() : serviceId;\n+}\n \n-  public String getId() {\n-    return id;\n+private static String validAppId(String configAppId) {\n+  if (!StringUtils.isEmpty(configAppId)) {\n+    return configAppId;\n   }\n-\n-  public RegistryBean setId(String id) {\n-    this.id = id;\n-    return this;\n+  if (DynamicPropertyFactory.getInstance()\n+      .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get() != null) {\n+    return DynamicPropertyFactory.getInstance()\n+        .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get();\n   }\n+  return DEFAULT_APPLICATION_ID;\n+}\n \n-  public String getServiceName() {\n-    return serviceName;\n-  }\n+public String getId() {\n+  return id;\n+}\n \n-  public RegistryBean setServiceName(String serviceName) {\n-    this.serviceName = serviceName;\n-    return this;\n-  }\n+public RegistryBean setId(String id) {\n+  this.id = id;\n+  return this;\n+}\n \n-  public String getVersion() {\n-    return version;\n-  }\n+public String getServiceName() {\n+  return serviceName;\n+}\n \n-  public RegistryBean setVersion(String version) {\n-    this.version = version;\n-    return this;\n-  }\n+public RegistryBean setServiceName(String serviceName) {\n+  this.serviceName = serviceName;\n+  return this;\n+}\n \n-  public String getAppId() {\n-    return appId;\n-  }\n+public String getVersion() {\n+  return version;\n+}\n \n-  public RegistryBean setAppId(String appId) {\n-    this.appId = appId;\n-    return this;\n-  }\n+public RegistryBean setVersion(String version) {\n+  this.version = version;\n+  return this;\n+}\n \n-  public List<String> getSchemaIds() {\n-    return schemaIds;\n-  }\n+public String getAppId() {\n+  return appId;\n+}\n \n-  public RegistryBean addSchemaId(String schemaId) {\n-    this.schemaIds.add(schemaId);\n-    return this;\n-  }\n+public RegistryBean setAppId(String appId) {\n+  this.appId = appId;\n+  return this;\n+}\n \n-  public RegistryBean addSchemaInterface(String schemaId, Class<?> schemaInterface) {\n-    this.schemaInterfaces.put(schemaId, schemaInterface);\n-    this.schemaIds.add(schemaId);\n-    return this;\n-  }\n+public List<String> getSchemaIds() {\n+  return schemaIds;\n+}\n \n-  public Map<String, Class<?>> getSchemaInterfaces() {\n-    return this.schemaInterfaces;\n-  }\n+public RegistryBean addSchemaId(String schemaId) {\n+  this.schemaIds.add(schemaId);\n+  return this;\n+}\n \n-  public RegistryBean setSchemaIds(List<String> schemaIds) {\n-    this.schemaIds = schemaIds;\n-    return this;\n-  }\n+public RegistryBean addSchemaInterface(String schemaId, Class<?> schemaInterface) {\n+  this.schemaInterfaces.put(schemaId, schemaInterface);\n+  this.schemaIds.add(schemaId);\n+  return this;\n+}\n \n-  public Instances getInstances() {\n-    return instances;\n-  }\n+public Map<String, Class<?>> getSchemaInterfaces() {\n+  return this.schemaInterfaces;\n+}\n \n-  public RegistryBean setInstances(Instances instances) {\n-    this.instances = instances;\n-    return this;\n-  }\n+public RegistryBean setSchemaIds(List<String> schemaIds) {\n+  this.schemaIds = schemaIds;\n+  return this;\n+}\n+\n+public Instances getInstances() {\n+  return instances;\n+}\n+\n+public RegistryBean setInstances(Instances instances) {\n+  this.instances = instances;\n+  return this;\n+}\n }\n",
            "diff_size": 111
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "81",
                    "column": "7",
                    "severity": "warning",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/160/RegistryBean.java\nindex 320d5aa9dc..7230a05afc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/160/RegistryBean.java\n@@ -34,7 +34,6 @@ import com.netflix.config.DynamicPropertyFactory;\n /**\n  * Configuration bean for local services. Bean configuration is token\n  * same as `registry.yaml` file configuration.\n- *\n  */\n public class RegistryBean {\n   public static class Instances {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/160/RegistryBean.java\nindex 320d5aa9dc..94c4379391 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/160/RegistryBean.java\n@@ -78,8 +78,7 @@ public class RegistryBean {\n   private Instances instances;\n \n   @SuppressWarnings(\"unchecked\")\n-  public static RegistryBean buildFromYamlModel\n-      (String serviceName, Map<String, Object> serviceConfig) {\n+  public static RegistryBean buildFromYamlModel(String serviceName, Map<String, Object> serviceConfig) {\n     return new RegistryBean()\n         .setId(validId((String) serviceConfig.get(\"id\")))\n         .setServiceName(serviceName)\n@@ -193,4 +192,4 @@ public class RegistryBean {\n     this.instances = instances;\n     return this;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/160/RegistryBean.java\nindex 320d5aa9dc..af8d8cf4fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/160/RegistryBean.java\n@@ -78,119 +78,118 @@ public class RegistryBean {\n   private Instances instances;\n \n   @SuppressWarnings(\"unchecked\")\n-  public static RegistryBean buildFromYamlModel\n-      (String serviceName, Map<String, Object> serviceConfig) {\n-    return new RegistryBean()\n-        .setId(validId((String) serviceConfig.get(\"id\")))\n-        .setServiceName(serviceName)\n-        .setVersion((String) serviceConfig.get(\"version\"))\n-        .setAppId(validAppId((String) serviceConfig.get(\"appid\")))\n-        .setSchemaIds(validListsValue((List<String>) serviceConfig.get(\"schemaIds\")))\n-        .setInstances(\n-            new Instances()\n-                .setInstances(validInstances((List<Map<String, Object>>) serviceConfig.get(\"instances\"))));\n-  }\n-\n-  @SuppressWarnings(\"unchecked\")\n-  private static List<Instance> validInstances(List<Map<String, Object>> instancesConfig) {\n-    if (instancesConfig == null) {\n-      return Collections.emptyList();\n-    }\n+  public static RegistryBean buildFromYamlModel(String serviceName, Map<String, Object> serviceConfig) {\n+return new RegistryBean()\n+    .setId(validId((String) serviceConfig.get(\"id\")))\n+    .setServiceName(serviceName)\n+    .setVersion((String) serviceConfig.get(\"version\"))\n+    .setAppId(validAppId((String) serviceConfig.get(\"appid\")))\n+    .setSchemaIds(validListsValue((List<String>) serviceConfig.get(\"schemaIds\")))\n+    .setInstances(\n+        new Instances()\n+            .setInstances(validInstances((List<Map<String, Object>>) serviceConfig.get(\"instances\"))));\n+}\n \n-    List<Instance> instances = new ArrayList<>();\n-    for (Map<String, Object> instanceConfig : instancesConfig) {\n-      instances.add(new Instance().setEndpoints(\n-          validListsValue((List<String>) instanceConfig.get(\"endpoints\"))));\n-    }\n-    return instances;\n+@SuppressWarnings(\"unchecked\")\n+private static List<Instance> validInstances(List<Map<String, Object>> instancesConfig) {\n+  if (instancesConfig == null) {\n+    return Collections.emptyList();\n   }\n \n-  private static List<String> validListsValue(List<String> listsValue) {\n-    return listsValue == null ? Collections.emptyList() : listsValue;\n+  List<Instance> instances = new ArrayList<>();\n+  for (Map<String, Object> instanceConfig : instancesConfig) {\n+    instances.add(new Instance().setEndpoints(\n+        validListsValue((List<String>) instanceConfig.get(\"endpoints\"))));\n   }\n+  return instances;\n+}\n \n-  private static String validId(String serviceId) {\n-    return StringUtils.isEmpty(serviceId) ? UUID.randomUUID().toString() : serviceId;\n-  }\n+private static List<String> validListsValue(List<String> listsValue) {\n+  return listsValue == null ? Collections.emptyList() : listsValue;\n+}\n \n-  private static String validAppId(String configAppId) {\n-    if (!StringUtils.isEmpty(configAppId)) {\n-      return configAppId;\n-    }\n-    if (DynamicPropertyFactory.getInstance()\n-        .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get() != null) {\n-      return DynamicPropertyFactory.getInstance()\n-          .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get();\n-    }\n-    return DEFAULT_APPLICATION_ID;\n-  }\n+private static String validId(String serviceId) {\n+  return StringUtils.isEmpty(serviceId) ? UUID.randomUUID().toString() : serviceId;\n+}\n \n-  public String getId() {\n-    return id;\n+private static String validAppId(String configAppId) {\n+  if (!StringUtils.isEmpty(configAppId)) {\n+    return configAppId;\n   }\n-\n-  public RegistryBean setId(String id) {\n-    this.id = id;\n-    return this;\n+  if (DynamicPropertyFactory.getInstance()\n+      .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get() != null) {\n+    return DynamicPropertyFactory.getInstance()\n+        .getStringProperty(ServiceCombConstants.CONFIG_APPLICATION_ID_KEY, null).get();\n   }\n+  return DEFAULT_APPLICATION_ID;\n+}\n \n-  public String getServiceName() {\n-    return serviceName;\n-  }\n+public String getId() {\n+  return id;\n+}\n \n-  public RegistryBean setServiceName(String serviceName) {\n-    this.serviceName = serviceName;\n-    return this;\n-  }\n+public RegistryBean setId(String id) {\n+  this.id = id;\n+  return this;\n+}\n \n-  public String getVersion() {\n-    return version;\n-  }\n+public String getServiceName() {\n+  return serviceName;\n+}\n \n-  public RegistryBean setVersion(String version) {\n-    this.version = version;\n-    return this;\n-  }\n+public RegistryBean setServiceName(String serviceName) {\n+  this.serviceName = serviceName;\n+  return this;\n+}\n \n-  public String getAppId() {\n-    return appId;\n-  }\n+public String getVersion() {\n+  return version;\n+}\n \n-  public RegistryBean setAppId(String appId) {\n-    this.appId = appId;\n-    return this;\n-  }\n+public RegistryBean setVersion(String version) {\n+  this.version = version;\n+  return this;\n+}\n \n-  public List<String> getSchemaIds() {\n-    return schemaIds;\n-  }\n+public String getAppId() {\n+  return appId;\n+}\n \n-  public RegistryBean addSchemaId(String schemaId) {\n-    this.schemaIds.add(schemaId);\n-    return this;\n-  }\n+public RegistryBean setAppId(String appId) {\n+  this.appId = appId;\n+  return this;\n+}\n \n-  public RegistryBean addSchemaInterface(String schemaId, Class<?> schemaInterface) {\n-    this.schemaInterfaces.put(schemaId, schemaInterface);\n-    this.schemaIds.add(schemaId);\n-    return this;\n-  }\n+public List<String> getSchemaIds() {\n+  return schemaIds;\n+}\n \n-  public Map<String, Class<?>> getSchemaInterfaces() {\n-    return this.schemaInterfaces;\n-  }\n+public RegistryBean addSchemaId(String schemaId) {\n+  this.schemaIds.add(schemaId);\n+  return this;\n+}\n \n-  public RegistryBean setSchemaIds(List<String> schemaIds) {\n-    this.schemaIds = schemaIds;\n-    return this;\n-  }\n+public RegistryBean addSchemaInterface(String schemaId, Class<?> schemaInterface) {\n+  this.schemaInterfaces.put(schemaId, schemaInterface);\n+  this.schemaIds.add(schemaId);\n+  return this;\n+}\n \n-  public Instances getInstances() {\n-    return instances;\n-  }\n+public Map<String, Class<?>> getSchemaInterfaces() {\n+  return this.schemaInterfaces;\n+}\n \n-  public RegistryBean setInstances(Instances instances) {\n-    this.instances = instances;\n-    return this;\n-  }\n+public RegistryBean setSchemaIds(List<String> schemaIds) {\n+  this.schemaIds = schemaIds;\n+  return this;\n+}\n+\n+public Instances getInstances() {\n+  return instances;\n+}\n+\n+public RegistryBean setInstances(Instances instances) {\n+  this.instances = instances;\n+  return this;\n+}\n }\n",
            "diff_size": 111
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "82",
                    "column": "3",
                    "severity": "warning",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/160/RegistryBean.java\nindex 320d5aa9dc..67753728c6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/160/RegistryBean.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_three_grams/160/RegistryBean.java\n@@ -79,7 +79,7 @@ public class RegistryBean {\n \n   @SuppressWarnings(\"unchecked\")\n   public static RegistryBean buildFromYamlModel\n-      (String serviceName, Map<String, Object> serviceConfig) {\n+  (String serviceName, Map<String, Object> serviceConfig) {\n     return new RegistryBean()\n         .setId(validId((String) serviceConfig.get(\"id\")))\n         .setServiceName(serviceName)\n",
            "diff_size": 1
        }
    ]
}