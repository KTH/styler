{
    "error_id": "319",
    "information": {
        "errors": [
            {
                "line": "110",
                "column": "54",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        /*apiFeeVo.setRoomId(roomDto.getRoomId());\n        apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n\n        // \u4e1a\u4e3b\u4fe1\u606f\n        OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/319/QueryIndexStatisticListener.java\nindex ff64c34a97..ca65f72794 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/319/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/319/QueryIndexStatisticListener.java\nindex ff64c34a97..7d1741a65c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/319/QueryIndexStatisticListener.java\n@@ -40,166 +40,166 @@ import java.util.List;\n @Java110Listener(\"queryIndexStatistic\")\n public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListener {\n \n-    @Autowired\n-    private IFeeInnerServiceSMO feeInnerServiceSMOImpl;\n+  @Autowired\n+  private IFeeInnerServiceSMO feeInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IRoomInnerServiceSMO roomInnerServiceSMOImpl;\n+  @Autowired\n+  private IRoomInnerServiceSMO roomInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IUnitInnerServiceSMO unitInnerServiceSMOImpl;\n+  @Autowired\n+  private IUnitInnerServiceSMO unitInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IFloorInnerServiceSMO floorInnerServiceSMOImpl;\n+  @Autowired\n+  private IFloorInnerServiceSMO floorInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IOwnerInnerServiceSMO ownerInnerServiceSMOImpl;\n+  @Autowired\n+  private IOwnerInnerServiceSMO ownerInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl;\n+  @Autowired\n+  private IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl;\n \n-    @Override\n-    public String getServiceCode() {\n-        return ServiceCodeConstant.SERVICE_CODE_QUERY_INDEX_STATISTIC;\n+  @Override\n+  public String getServiceCode() {\n+    return ServiceCodeConstant.SERVICE_CODE_QUERY_INDEX_STATISTIC;\n+  }\n+\n+  @Override\n+  public HttpMethod getHttpMethod() {\n+    return HttpMethod.GET;\n+  }\n+\n+  /**\n+   * \u4e1a\u52a1\u5c42\u6570\u636e\u5904\u7406\n+   *\n+   * @param event \u65f6\u95f4\u5bf9\u8c61\n+   */\n+  @Override\n+  public void soService(ServiceDataFlowEvent event) {\n+    DataFlowContext dataFlowContext = event.getDataFlowContext();\n+    //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n+    JSONObject reqJson = dataFlowContext.getReqJson();\n+    validateFeeData(reqJson);\n+    FeeDto feeDtoParamIn = BeanConvertUtil.covertBean(reqJson, FeeDto.class);\n+    feeDtoParamIn.setPayerObjId(reqJson.getString(\"roomId\"));\n+\n+    List<FeeDto> feeDtos = feeInnerServiceSMOImpl.queryFees(feeDtoParamIn);\n+    ResponseEntity<String> responseEntity = null;\n+    if (feeDtos == null || feeDtos.size() == 0) {\n+      responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n     }\n \n-    @Override\n-    public HttpMethod getHttpMethod() {\n-        return HttpMethod.GET;\n+    FeeDto feeDto = feeDtos.get(0);\n+\n+    ApiFeeVo apiFeeVo = BeanConvertUtil.covertBean(feeDto, ApiFeeVo.class);\n+    //apiFeeVo.setStartTime(DateUtil.getFormatTimeString(feeDto.getStartTime(), DateUtil.DATE_FORMATE_STRING_A));\n+    //apiFeeVo.setEndTime(DateUtil.getFormatTimeString(feeDto.getEndTime(), DateUtil.DATE_FORMATE_STRING_A));\n+\n+    //\u67e5\u8be2 \u623f\u5c4b\u4fe1\u606f\n+    RoomDto roomDto = new RoomDto();\n+    roomDto.setRoomId(feeDto.getPayerObjId());\n+    roomDto.setCommunityId(feeDto.getCommunityId());\n+    List<RoomDto> roomDtos = roomInnerServiceSMOImpl.queryRooms(roomDto);\n+\n+    if (roomDtos == null || roomDtos.size() != 1) {\n+      throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u4fe1\u606f roomId\" + feeDto.getPayerObjId());\n     }\n \n-    /**\n-     * \u4e1a\u52a1\u5c42\u6570\u636e\u5904\u7406\n-     *\n-     * @param event \u65f6\u95f4\u5bf9\u8c61\n-     */\n-    @Override\n-    public void soService(ServiceDataFlowEvent event) {\n-        DataFlowContext dataFlowContext = event.getDataFlowContext();\n-        //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n-        JSONObject reqJson = dataFlowContext.getReqJson();\n-        validateFeeData(reqJson);\n-        FeeDto feeDtoParamIn = BeanConvertUtil.covertBean(reqJson, FeeDto.class);\n-        feeDtoParamIn.setPayerObjId(reqJson.getString(\"roomId\"));\n-\n-        List<FeeDto> feeDtos = feeInnerServiceSMOImpl.queryFees(feeDtoParamIn);\n-        ResponseEntity<String> responseEntity = null;\n-        if (feeDtos == null || feeDtos.size() == 0) {\n-            responseEntity = new ResponseEntity<String>(\"{}\", HttpStatus.OK);\n-        }\n-\n-        FeeDto feeDto = feeDtos.get(0);\n-\n-        ApiFeeVo apiFeeVo = BeanConvertUtil.covertBean(feeDto, ApiFeeVo.class);\n-        //apiFeeVo.setStartTime(DateUtil.getFormatTimeString(feeDto.getStartTime(), DateUtil.DATE_FORMATE_STRING_A));\n-        //apiFeeVo.setEndTime(DateUtil.getFormatTimeString(feeDto.getEndTime(), DateUtil.DATE_FORMATE_STRING_A));\n-\n-        //\u67e5\u8be2 \u623f\u5c4b\u4fe1\u606f\n-        RoomDto roomDto = new RoomDto();\n-        roomDto.setRoomId(feeDto.getPayerObjId());\n-        roomDto.setCommunityId(feeDto.getCommunityId());\n-        List<RoomDto> roomDtos = roomInnerServiceSMOImpl.queryRooms(roomDto);\n-\n-        if (roomDtos == null || roomDtos.size() != 1) {\n-            throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u4fe1\u606f roomId\" + feeDto.getPayerObjId());\n-        }\n-\n-        roomDto = roomDtos.get(0);\n+    roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n-\n-        // \u4e1a\u4e3b\u4fe1\u606f\n-        OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n-        ownerRoomRelDto.setRoomId(roomDto.getRoomId());\n-        List<OwnerRoomRelDto> ownerRoomRelDtos = ownerRoomRelInnerServiceSMOImpl.queryOwnerRoomRels(ownerRoomRelDto);\n-        if (ownerRoomRelDtos == null || ownerRoomRelDtos.size() != 1) {\n-            throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u548c\u4e1a\u4e3b\u5173\u7cfb\u4fe1\u606f roomId=\" + roomDto.getRoomId());\n-        }\n-        OwnerDto ownerDto = new OwnerDto();\n-        ownerDto.setOwnerId(ownerRoomRelDtos.get(0).getOwnerId());\n-        ownerDto.setCommunityId(feeDto.getCommunityId());\n-        List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwners(ownerDto);\n-\n-        if (ownerDtos == null || ownerDtos.size() != 1) {\n-            throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u4e1a\u4e3b\u4fe1\u606f ownerId=\" + ownerRoomRelDtos.get(0).getOwnerId());\n-        }\n-        ownerDto = ownerDtos.get(0);\n-        apiFeeVo.setOwnerId(ownerDto.getOwnerId());\n-        apiFeeVo.setOwnerName(ownerDto.getName());\n-        apiFeeVo.setLink(ownerDto.getLink());\n-\n-        responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiFeeVo), HttpStatus.OK);\n-\n-\n-        dataFlowContext.setResponseEntity(responseEntity);\n+    apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n+\n+    // \u4e1a\u4e3b\u4fe1\u606f\n+    OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n+    ownerRoomRelDto.setRoomId(roomDto.getRoomId());\n+    List<OwnerRoomRelDto> ownerRoomRelDtos = ownerRoomRelInnerServiceSMOImpl.queryOwnerRoomRels(ownerRoomRelDto);\n+    if (ownerRoomRelDtos == null || ownerRoomRelDtos.size() != 1) {\n+      throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u548c\u4e1a\u4e3b\u5173\u7cfb\u4fe1\u606f roomId=\" + roomDto.getRoomId());\n     }\n+    OwnerDto ownerDto = new OwnerDto();\n+    ownerDto.setOwnerId(ownerRoomRelDtos.get(0).getOwnerId());\n+    ownerDto.setCommunityId(feeDto.getCommunityId());\n+    List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwners(ownerDto);\n \n-    /**\n-     * \u6821\u9a8c\u67e5\u8be2\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n-     *\n-     * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n-     */\n-    private void validateFeeData(JSONObject reqJson) {\n-        Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bcommunityId\u4fe1\u606f\");\n-        Assert.jsonObjectHaveKey(reqJson, \"feeTypeCd\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bfeeTypeCd\u4fe1\u606f\");\n-        Assert.jsonObjectHaveKey(reqJson, \"roomId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542broomId\u4fe1\u606f\");\n+    if (ownerDtos == null || ownerDtos.size() != 1) {\n+      throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u4e1a\u4e3b\u4fe1\u606f ownerId=\" + ownerRoomRelDtos.get(0).getOwnerId());\n+    }\n+    ownerDto = ownerDtos.get(0);\n+    apiFeeVo.setOwnerId(ownerDto.getOwnerId());\n+    apiFeeVo.setOwnerName(ownerDto.getName());\n+    apiFeeVo.setLink(ownerDto.getLink());\n \n+    responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiFeeVo), HttpStatus.OK);\n \n-    }\n \n-    @Override\n-    public int getOrder() {\n-        return super.DEFAULT_ORDER;\n-    }\n+    dataFlowContext.setResponseEntity(responseEntity);\n+  }\n \n-    public IFeeInnerServiceSMO getFeeInnerServiceSMOImpl() {\n-        return feeInnerServiceSMOImpl;\n-    }\n+  /**\n+   * \u6821\u9a8c\u67e5\u8be2\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n+   *\n+   * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n+   */\n+  private void validateFeeData(JSONObject reqJson) {\n+    Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bcommunityId\u4fe1\u606f\");\n+    Assert.jsonObjectHaveKey(reqJson, \"feeTypeCd\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bfeeTypeCd\u4fe1\u606f\");\n+    Assert.jsonObjectHaveKey(reqJson, \"roomId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542broomId\u4fe1\u606f\");\n \n-    public void setFeeInnerServiceSMOImpl(IFeeInnerServiceSMO feeInnerServiceSMOImpl) {\n-        this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n-    }\n \n+  }\n \n-    public IRoomInnerServiceSMO getRoomInnerServiceSMOImpl() {\n-        return roomInnerServiceSMOImpl;\n-    }\n+  @Override\n+  public int getOrder() {\n+    return super.DEFAULT_ORDER;\n+  }\n \n-    public void setRoomInnerServiceSMOImpl(IRoomInnerServiceSMO roomInnerServiceSMOImpl) {\n-        this.roomInnerServiceSMOImpl = roomInnerServiceSMOImpl;\n-    }\n+  public IFeeInnerServiceSMO getFeeInnerServiceSMOImpl() {\n+    return feeInnerServiceSMOImpl;\n+  }\n \n+  public void setFeeInnerServiceSMOImpl(IFeeInnerServiceSMO feeInnerServiceSMOImpl) {\n+    this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n+  }\n \n-    public IFloorInnerServiceSMO getFloorInnerServiceSMOImpl() {\n-        return floorInnerServiceSMOImpl;\n-    }\n \n-    public void setFloorInnerServiceSMOImpl(IFloorInnerServiceSMO floorInnerServiceSMOImpl) {\n-        this.floorInnerServiceSMOImpl = floorInnerServiceSMOImpl;\n-    }\n+  public IRoomInnerServiceSMO getRoomInnerServiceSMOImpl() {\n+    return roomInnerServiceSMOImpl;\n+  }\n \n-    public IUnitInnerServiceSMO getUnitInnerServiceSMOImpl() {\n-        return unitInnerServiceSMOImpl;\n-    }\n+  public void setRoomInnerServiceSMOImpl(IRoomInnerServiceSMO roomInnerServiceSMOImpl) {\n+    this.roomInnerServiceSMOImpl = roomInnerServiceSMOImpl;\n+  }\n \n-    public void setUnitInnerServiceSMOImpl(IUnitInnerServiceSMO unitInnerServiceSMOImpl) {\n-        this.unitInnerServiceSMOImpl = unitInnerServiceSMOImpl;\n-    }\n \n-    public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n-        return ownerInnerServiceSMOImpl;\n-    }\n+  public IFloorInnerServiceSMO getFloorInnerServiceSMOImpl() {\n+    return floorInnerServiceSMOImpl;\n+  }\n \n-    public void setOwnerInnerServiceSMOImpl(IOwnerInnerServiceSMO ownerInnerServiceSMOImpl) {\n-        this.ownerInnerServiceSMOImpl = ownerInnerServiceSMOImpl;\n-    }\n+  public void setFloorInnerServiceSMOImpl(IFloorInnerServiceSMO floorInnerServiceSMOImpl) {\n+    this.floorInnerServiceSMOImpl = floorInnerServiceSMOImpl;\n+  }\n \n-    public IOwnerRoomRelInnerServiceSMO getOwnerRoomRelInnerServiceSMOImpl() {\n-        return ownerRoomRelInnerServiceSMOImpl;\n-    }\n+  public IUnitInnerServiceSMO getUnitInnerServiceSMOImpl() {\n+    return unitInnerServiceSMOImpl;\n+  }\n \n-    public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n-        this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n-    }\n+  public void setUnitInnerServiceSMOImpl(IUnitInnerServiceSMO unitInnerServiceSMOImpl) {\n+    this.unitInnerServiceSMOImpl = unitInnerServiceSMOImpl;\n+  }\n+\n+  public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n+    return ownerInnerServiceSMOImpl;\n+  }\n+\n+  public void setOwnerInnerServiceSMOImpl(IOwnerInnerServiceSMO ownerInnerServiceSMOImpl) {\n+    this.ownerInnerServiceSMOImpl = ownerInnerServiceSMOImpl;\n+  }\n+\n+  public IOwnerRoomRelInnerServiceSMO getOwnerRoomRelInnerServiceSMOImpl() {\n+    return ownerRoomRelInnerServiceSMOImpl;\n+  }\n+\n+  public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n+    this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 199
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/319/QueryIndexStatisticListener.java\nindex ff64c34a97..fabf3d5124 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/319/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n@@ -202,4 +202,4 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/319/QueryIndexStatisticListener.java\nindex ff64c34a97..d76c975866 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/319/QueryIndexStatisticListener.java\n@@ -1,6 +1,5 @@\n package com.java110.api.listener.index;\n \n-\n import com.alibaba.fastjson.JSONObject;\n import com.java110.api.listener.AbstractServiceApiDataFlowListener;\n import com.java110.common.constant.ResponseConstant;\n@@ -26,7 +25,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n \n /**\n@@ -37,6 +35,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @Java110Listener(\"queryIndexStatistic\")\n public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListener {\n \n@@ -63,6 +63,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         return ServiceCodeConstant.SERVICE_CODE_QUERY_INDEX_STATISTIC;\n     }\n \n+\n     @Override\n     public HttpMethod getHttpMethod() {\n         return HttpMethod.GET;\n@@ -73,12 +74,15 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n      *\n      * @param event \u65f6\u95f4\u5bf9\u8c61\n      */\n+\n+\n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n         JSONObject reqJson = dataFlowContext.getReqJson();\n         validateFeeData(reqJson);\n+\n         FeeDto feeDtoParamIn = BeanConvertUtil.covertBean(reqJson, FeeDto.class);\n         feeDtoParamIn.setPayerObjId(reqJson.getString(\"roomId\"));\n \n@@ -89,7 +93,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         }\n \n         FeeDto feeDto = feeDtos.get(0);\n-\n         ApiFeeVo apiFeeVo = BeanConvertUtil.covertBean(feeDto, ApiFeeVo.class);\n         //apiFeeVo.setStartTime(DateUtil.getFormatTimeString(feeDto.getStartTime(), DateUtil.DATE_FORMATE_STRING_A));\n         //apiFeeVo.setEndTime(DateUtil.getFormatTimeString(feeDto.getEndTime(), DateUtil.DATE_FORMATE_STRING_A));\n@@ -98,29 +101,31 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         RoomDto roomDto = new RoomDto();\n         roomDto.setRoomId(feeDto.getPayerObjId());\n         roomDto.setCommunityId(feeDto.getCommunityId());\n-        List<RoomDto> roomDtos = roomInnerServiceSMOImpl.queryRooms(roomDto);\n \n+        List<RoomDto> roomDtos = roomInnerServiceSMOImpl.queryRooms(roomDto);\n         if (roomDtos == null || roomDtos.size() != 1) {\n             throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u4fe1\u606f roomId\" + feeDto.getPayerObjId());\n         }\n-\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n+\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n         ownerRoomRelDto.setRoomId(roomDto.getRoomId());\n+\n         List<OwnerRoomRelDto> ownerRoomRelDtos = ownerRoomRelInnerServiceSMOImpl.queryOwnerRoomRels(ownerRoomRelDto);\n         if (ownerRoomRelDtos == null || ownerRoomRelDtos.size() != 1) {\n             throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u623f\u5c4b\u548c\u4e1a\u4e3b\u5173\u7cfb\u4fe1\u606f roomId=\" + roomDto.getRoomId());\n         }\n+\n         OwnerDto ownerDto = new OwnerDto();\n         ownerDto.setOwnerId(ownerRoomRelDtos.get(0).getOwnerId());\n         ownerDto.setCommunityId(feeDto.getCommunityId());\n-        List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwners(ownerDto);\n \n+        List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwners(ownerDto);\n         if (ownerDtos == null || ownerDtos.size() != 1) {\n             throw new ListenerExecuteException(ResponseConstant.RESULT_CODE_ERROR, \"\u6570\u636e\u9519\u8bef\uff0c\u672a\u627e\u5230\u4e1a\u4e3b\u4fe1\u606f ownerId=\" + ownerRoomRelDtos.get(0).getOwnerId());\n         }\n@@ -128,10 +133,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         apiFeeVo.setOwnerId(ownerDto.getOwnerId());\n         apiFeeVo.setOwnerName(ownerDto.getName());\n         apiFeeVo.setLink(ownerDto.getLink());\n-\n         responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(apiFeeVo), HttpStatus.OK);\n-\n-\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n \n@@ -140,14 +142,15 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n      *\n      * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n      */\n+\n+\n     private void validateFeeData(JSONObject reqJson) {\n         Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bcommunityId\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"feeTypeCd\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bfeeTypeCd\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"roomId\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542broomId\u4fe1\u606f\");\n-\n-\n     }\n \n+\n     @Override\n     public int getOrder() {\n         return super.DEFAULT_ORDER;\n@@ -161,7 +164,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         this.feeInnerServiceSMOImpl = feeInnerServiceSMOImpl;\n     }\n \n-\n     public IRoomInnerServiceSMO getRoomInnerServiceSMOImpl() {\n         return roomInnerServiceSMOImpl;\n     }\n@@ -170,7 +172,6 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         this.roomInnerServiceSMOImpl = roomInnerServiceSMOImpl;\n     }\n \n-\n     public IFloorInnerServiceSMO getFloorInnerServiceSMOImpl() {\n         return floorInnerServiceSMOImpl;\n     }\n@@ -202,4 +203,4 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/319/QueryIndexStatisticListener.java\nindex ff64c34a97..ca65f72794 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/319/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto, apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "110",
                    "column": "55",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "110",
                    "column": "55",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/319/QueryIndexStatisticListener.java\nindex ff64c34a97..aa0bb3f50e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/319/QueryIndexStatisticListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/319/QueryIndexStatisticListener.java\n@@ -107,7 +107,7 @@ public class QueryIndexStatisticListener extends AbstractServiceApiDataFlowListe\n         roomDto = roomDtos.get(0);\n         /*apiFeeVo.setRoomId(roomDto.getRoomId());\n         apiFeeVo.setRoomNum(roomDto.getRoomNum());*/\n-        apiFeeVo = BeanConvertUtil.covertBean(roomDto,apiFeeVo);\n+        apiFeeVo = BeanConvertUtil.covertBean(roomDto ,apiFeeVo);\n \n         // \u4e1a\u4e3b\u4fe1\u606f\n         OwnerRoomRelDto ownerRoomRelDto = new OwnerRoomRelDto();\n",
            "diff_size": 1
        }
    ]
}