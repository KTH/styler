{
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "error",
                "message": "'for' has incorrect indentation level 7, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "        }\n\n       for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n            if (classModelBuilder.getIdPropertyName() == null) {\n                String propertyName = propertyModel.getName();\n                if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/21/ConventionDefaultsImpl.java\nindex c7628f8424..4f13af5f81 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/21/ConventionDefaultsImpl.java\n@@ -26,7 +26,7 @@ final class ConventionDefaultsImpl implements Convention {\n             classModelBuilder.discriminator(classModelBuilder.getType().getName());\n         }\n \n-       for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n+        for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n             if (classModelBuilder.getIdPropertyName() == null) {\n                 String propertyName = propertyModel.getName();\n                 if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/21/ConventionDefaultsImpl.java\nindex c7628f8424..4f13af5f81 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/21/ConventionDefaultsImpl.java\n@@ -26,7 +26,7 @@ final class ConventionDefaultsImpl implements Convention {\n             classModelBuilder.discriminator(classModelBuilder.getType().getName());\n         }\n \n-       for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n+        for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n             if (classModelBuilder.getIdPropertyName() == null) {\n                 String propertyName = propertyModel.getName();\n                 if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/21/ConventionDefaultsImpl.java\nindex c7628f8424..d7f3d448c2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/21/ConventionDefaultsImpl.java\n@@ -26,8 +26,8 @@ final class ConventionDefaultsImpl implements Convention {\n             classModelBuilder.discriminator(classModelBuilder.getType().getName());\n         }\n \n-       for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n-            if (classModelBuilder.getIdPropertyName() == null) {\n+for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n+    if (classModelBuilder.getIdPropertyName() == null) {\n                 String propertyName = propertyModel.getName();\n                 if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {\n                     classModelBuilder.idPropertyName(propertyName);\n@@ -35,4 +35,4 @@ final class ConventionDefaultsImpl implements Convention {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/21/ConventionDefaultsImpl.java\nindex c7628f8424..4f13af5f81 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/21/ConventionDefaultsImpl.java\n@@ -26,7 +26,7 @@ final class ConventionDefaultsImpl implements Convention {\n             classModelBuilder.discriminator(classModelBuilder.getType().getName());\n         }\n \n-       for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n+        for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n             if (classModelBuilder.getIdPropertyName() == null) {\n                 String propertyName = propertyModel.getName();\n                 if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "column": "11",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 21, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 17, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Trailing whitespace",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/21/ConventionDefaultsImpl.java\nindex c7628f8424..85624528e5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/21/ConventionDefaultsImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/21/ConventionDefaultsImpl.java\n@@ -24,15 +24,14 @@ final class ConventionDefaultsImpl implements Convention {\n         }\n         if (classModelBuilder.getDiscriminator() == null && classModelBuilder.getType() != null) {\n             classModelBuilder.discriminator(classModelBuilder.getType().getName());\n-        }\n-\n-       for (final PropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n-            if (classModelBuilder.getIdPropertyName() == null) {\n-                String propertyName = propertyModel.getName();\n-                if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {\n-                    classModelBuilder.idPropertyName(propertyName);\n-                }\n-            }\n-        }\n-    }\n-}\n+        } for(finalPropertyModelBuilder<?> propertyModel : classModelBuilder.getPropertyModelBuilders()) {\n+             if (classModelBuilder.getIdPropertyName() == null) {\n+                 String propertyName = propertyModel.getName();\n+                 if (propertyName.equals(\"_id\") || propertyName.equals(\"id\")) {\n+                     classModelBuilder.idPropertyName(propertyName);\n+                 }\n+             }\n+         }\n+     }\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 12
        }
    ]
}