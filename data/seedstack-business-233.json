{
    "error_id": "233",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.assembler.dsl;\n\nimport java.lang.annotation.Annotation;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/233/AssembleMultipleWithQualifier.java\nindex fe86c8b2e4..57ffc0bcf1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/233/AssembleMultipleWithQualifier.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -23,7 +24,7 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      */\n     AssembleMultiple with(Annotation qualifier);\n \n-    \n+\n     /**\n      * Allows to specify the qualifier of the assembler to use with Named annotation.\n      *\n@@ -32,9 +33,9 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      * @return the next element of the DSL.\n      */\n     AssembleMultiple with(String qualifier);\n-    \n-    \n-    \n+\n+\n+\n     /**\n      * Allows to specify the qualifier class of the assembler to use.\n      *\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/233/AssembleMultipleWithQualifier.java\nindex fe86c8b2e4..78bb21f00b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/233/AssembleMultipleWithQualifier.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -23,18 +24,16 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      */\n     AssembleMultiple with(Annotation qualifier);\n \n-    \n+\n     /**\n      * Allows to specify the qualifier of the assembler to use with Named annotation.\n      *\n-     * @param qualifier\n-     *            the value of javax.inject.Named annotation.\n+     * @param qualifier the value of javax.inject.Named annotation.\n      * @return the next element of the DSL.\n      */\n     AssembleMultiple with(String qualifier);\n-    \n-    \n-    \n+\n+\n     /**\n      * Allows to specify the qualifier class of the assembler to use.\n      *\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/233/AssembleMultipleWithQualifier.java\nindex fe86c8b2e4..7b8d063f86 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/233/AssembleMultipleWithQualifier.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -23,23 +24,18 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      */\n     AssembleMultiple with(Annotation qualifier);\n \n-    \n-    /**\n+/**\n      * Allows to specify the qualifier of the assembler to use with Named annotation.\n      *\n      * @param qualifier\n      *            the value of javax.inject.Named annotation.\n      * @return the next element of the DSL.\n-     */\n-    AssembleMultiple with(String qualifier);\n-    \n-    \n-    \n-    /**\n+     */ AssembleMultiple with(String qualifier);\n+\n+/**\n      * Allows to specify the qualifier class of the assembler to use.\n      *\n      * @param qualifier the qualifier annotation class.\n      * @return the next element of the DSL.\n-     */\n-    AssembleMultiple with(Class<? extends Annotation> qualifier);\n-}\n+     */ AssembleMultiple with(Class<? extends Annotation> qualifier);\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 26.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/233/AssembleMultipleWithQualifier.java\nindex fe86c8b2e4..bb96caab42 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/233/AssembleMultipleWithQualifier.java\n@@ -13,6 +13,8 @@ import java.lang.annotation.Annotation;\n  * An element of the {@link FluentAssembler} DSL allowing to assemble to multiple DTO in various\n  * forms (stream, list, set, array, ...) or specify the qualifier of the assembler to use.\n  */\n+\n+\n public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n \n     /**\n@@ -21,7 +23,7 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      * @param qualifier the qualifier annotation.\n      * @return the next element of the DSL.\n      */\n-    AssembleMultiple with(Annotation qualifier);\n+AssembleMultiple with(Annotation qualifier);\n \n     \n     /**\n@@ -31,7 +33,7 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      *            the value of javax.inject.Named annotation.\n      * @return the next element of the DSL.\n      */\n-    AssembleMultiple with(String qualifier);\n+AssembleMultiple with(String qualifier);\n     \n     \n     \n@@ -41,5 +43,5 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      * @param qualifier the qualifier annotation class.\n      * @return the next element of the DSL.\n      */\n-    AssembleMultiple with(Class<? extends Annotation> qualifier);\n-}\n+AssembleMultiple with(Class<? extends Annotation> qualifier);\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/233/AssembleMultipleWithQualifier.java\nindex fe86c8b2e4..57ffc0bcf1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/233/AssembleMultipleWithQualifier.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/233/AssembleMultipleWithQualifier.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import java.lang.annotation.Annotation;\n@@ -23,7 +24,7 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      */\n     AssembleMultiple with(Annotation qualifier);\n \n-    \n+\n     /**\n      * Allows to specify the qualifier of the assembler to use with Named annotation.\n      *\n@@ -32,9 +33,9 @@ public interface AssembleMultipleWithQualifier extends AssembleMultiple {\n      * @return the next element of the DSL.\n      */\n     AssembleMultiple with(String qualifier);\n-    \n-    \n-    \n+\n+\n+\n     /**\n      * Allows to specify the qualifier class of the assembler to use.\n      *\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}