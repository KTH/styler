{
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "14",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * the License.\n */\npackage org.springframework.data.domain;\n\nimport org.springframework.data.domain.Sort.Direction;\nimport org.springframework.lang.Nullable;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/1/PageRequest.java\nindex 6e9cc57e6b..a9837a67a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler/1/PageRequest.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.data.domain.Sort.Direction;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/1/PageRequest.java\nindex 6e9cc57e6b..715e786ff6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/intellij/1/PageRequest.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.data.domain.Sort.Direction;\n@@ -44,15 +45,15 @@ public class PageRequest extends AbstractPageRequest {\n   /**\n    * Creates a new {@link PageRequest} with sort parameters applied.\n    *\n-   * @param page zero-based page index.\n-   * @param size the size of the page to be returned.\n-   * @param direction the direction of the {@link Sort} to be specified, can be {@literal null}.\n+   * @param page       zero-based page index.\n+   * @param size       the size of the page to be returned.\n+   * @param direction  the direction of the {@link Sort} to be specified, can be {@literal null}.\n    * @param properties the properties to sort by, must not be {@literal null} or empty.\n    * @deprecated use {@link #of(int, int, Direction, String...)} instead.\n    */\n   @Deprecated\n   public PageRequest(final int page, final int size, final Direction direction,\n-      final String... properties) {\n+                     final String... properties) {\n     this(page, size, Sort.by(direction, properties));\n   }\n \n@@ -98,14 +99,14 @@ public class PageRequest extends AbstractPageRequest {\n   /**\n    * Creates a new {@link PageRequest} with sort direction and properties applied.\n    *\n-   * @param page zero-based page index.\n-   * @param size the size of the page to be returned.\n-   * @param direction must not be {@literal null}.\n+   * @param page       zero-based page index.\n+   * @param size       the size of the page to be returned.\n+   * @param direction  must not be {@literal null}.\n    * @param properties must not be {@literal null}.\n    * @since 2.0\n    */\n   public static PageRequest of(final int page, final int size, final Direction direction,\n-      final String... properties) {\n+                               final String... properties) {\n     return PageRequest.of(page, size, Sort.by(direction, properties));\n   }\n \n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/1/PageRequest.java\nindex 6e9cc57e6b..424ba13380 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/naturalize/1/PageRequest.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.data.domain.Sort.Direction;\n@@ -66,8 +67,7 @@ public class PageRequest extends AbstractPageRequest {\n    */\n   @Deprecated\n   public PageRequest(final int page, final int size, final Sort sort) {\n-\n-    super(page, size);\n+  super(page, size);\n \n     this.sort = sort;\n   }\n@@ -167,8 +167,7 @@ public class PageRequest extends AbstractPageRequest {\n     }\n \n     final PageRequest that = (PageRequest) obj;\n-\n-    return super.equals(that) && sort.equals(that.sort);\n+return super.equals(that) && sort.equals(that.sort);\n   }\n \n   /*\n@@ -191,4 +190,4 @@ public class PageRequest extends AbstractPageRequest {\n     return \"Page request [number: \" + getPageNumber() + \", size \" + getPageSize() + \", sort: \"\n         + sort + \"]\";\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/1/PageRequest.java\nindex 6e9cc57e6b..0237e32215 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/codebuff/1/PageRequest.java\n@@ -22,11 +22,11 @@ import org.springframework.lang.Nullable;\n  * @author Oliver Gierke\n  * @author Thomas Darimont\n  */\n-public class PageRequest extends AbstractPageRequest {\n \n-  private static final long serialVersionUID = -4541509938956089562L;\n \n-  private final Sort sort;\n+public class PageRequest extends AbstractPageRequest {\n+    private static final long serialVersionUID = -4541509938956089562L;\n+    private final Sort sort;\n \n   /**\n    * Creates a new {@link PageRequest}. Pages are zero indexed, thus providing 0 for {@code page}\n@@ -36,10 +36,13 @@ public class PageRequest extends AbstractPageRequest {\n    * @param size the size of the page to be returned.\n    * @deprecated use {@link #of(int, int)} instead.\n    */\n-  @Deprecated\n-  public PageRequest(final int page, final int size) {\n+\n+\n+    @Deprecated\n+    public PageRequest(final int page,\n+    final int size) {\n     this(page, size, Sort.unsorted());\n-  }\n+    }\n \n   /**\n    * Creates a new {@link PageRequest} with sort parameters applied.\n@@ -50,11 +53,12 @@ public class PageRequest extends AbstractPageRequest {\n    * @param properties the properties to sort by, must not be {@literal null} or empty.\n    * @deprecated use {@link #of(int, int, Direction, String...)} instead.\n    */\n-  @Deprecated\n-  public PageRequest(final int page, final int size, final Direction direction,\n-      final String... properties) {\n+\n+    @Deprecated\n+    public PageRequest(final int page, final int size, final Direction direction,\n+    final String... properties) {\n     this(page, size, Sort.by(direction, properties));\n-  }\n+    }\n \n   /**\n    * Creates a new {@link PageRequest} with sort parameters applied.\n@@ -64,13 +68,13 @@ public class PageRequest extends AbstractPageRequest {\n    * @param sort can be {@literal null}.\n    * @deprecated since 2.0, use {@link #of(int, int, Sort)} instead.\n    */\n-  @Deprecated\n-  public PageRequest(final int page, final int size, final Sort sort) {\n \n+    @Deprecated\n+    public PageRequest(final int page, final int size,\n+    final Sort sort) {\n     super(page, size);\n-\n     this.sort = sort;\n-  }\n+    }\n \n   /**\n    * Creates a new unsorted {@link PageRequest}.\n@@ -79,9 +83,11 @@ public class PageRequest extends AbstractPageRequest {\n    * @param size the size of the page to be returned.\n    * @since 2.0\n    */\n-  public static PageRequest of(final int page, final int size) {\n+\n+    public static PageRequest of(final int page,\n+        final int size) {\n     return PageRequest.of(page, size, Sort.unsorted());\n-  }\n+    }\n \n   /**\n    * Creates a new {@link PageRequest} with sort parameters applied.\n@@ -91,9 +97,11 @@ public class PageRequest extends AbstractPageRequest {\n    * @param sort must not be {@literal null}.\n    * @since 2.0\n    */\n-  public static PageRequest of(final int page, final int size, final Sort sort) {\n+\n+    public static PageRequest of(final int page, final int size,\n+        final Sort sort) {\n     return new PageRequest(page, size, sort);\n-  }\n+    }\n \n   /**\n    * Creates a new {@link PageRequest} with sort direction and properties applied.\n@@ -104,91 +112,95 @@ public class PageRequest extends AbstractPageRequest {\n    * @param properties must not be {@literal null}.\n    * @since 2.0\n    */\n-  public static PageRequest of(final int page, final int size, final Direction direction,\n-      final String... properties) {\n+\n+    public static PageRequest of(final int page, final int size, final Direction direction,\n+        final String... properties) {\n     return PageRequest.of(page, size, Sort.by(direction, properties));\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see org.springframework.data.domain.Pageable#getSort()\n    */\n-  @Override\n-  public Sort getSort() {\n+\n+    @Override\n+    public Sort getSort() {\n     return sort;\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see org.springframework.data.domain.Pageable#next()\n    */\n-  @Override\n-  public Pageable next() {\n+\n+    @Override\n+    public Pageable next() {\n     return new PageRequest(getPageNumber() + 1, getPageSize(), getSort());\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see org.springframework.data.domain.AbstractPageRequest#previous()\n    */\n-  @Override\n-  public PageRequest previous() {\n-    return getPageNumber() == 0 ? this\n-        : new PageRequest(getPageNumber() - 1, getPageSize(), getSort());\n-  }\n+\n+    @Override\n+    public PageRequest previous() {\n+    return getPageNumber() == 0 ? this : new PageRequest(getPageNumber() - 1, getPageSize(), getSort());\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see org.springframework.data.domain.Pageable#first()\n    */\n-  @Override\n-  public Pageable first() {\n+\n+    @Override\n+    public Pageable first() {\n     return new PageRequest(0, getPageSize(), getSort());\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see java.lang.Object#equals(java.lang.Object)\n    */\n-  @Override\n-  public boolean equals(@Nullable final Object obj) {\n \n+    @Override\n+    public boolean equals(@Nullable final Object obj) {\n     if (this == obj) {\n-      return true;\n+        return true;\n     }\n-\n     if (!(obj instanceof PageRequest)) {\n-      return false;\n+        return false;\n     }\n \n     final PageRequest that = (PageRequest) obj;\n-\n-    return super.equals(that) && sort.equals(that.sort);\n-  }\n+    return super.equals(that)\n+        && sort.equals(that.sort);\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see java.lang.Object#hashCode()\n    */\n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return 31 * super.hashCode() + sort.hashCode();\n-  }\n+    }\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see java.lang.Object#toString()\n    */\n-  @Override\n-  public String toString() {\n-    return \"Page request [number: \" + getPageNumber() + \", size \" + getPageSize() + \", sort: \"\n-        + sort + \"]\";\n-  }\n-}\n+\n+    @Override\n+    public String toString() {\n+    return \"Page request [number: \" + getPageNumber() + \", size \" + getPageSize() + \", sort: \" + sort + \"]\";\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/1/PageRequest.java\nindex 6e9cc57e6b..a9837a67a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_random/1/PageRequest.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.data.domain.Sort.Direction;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/1/PageRequest.java\nindex 6e9cc57e6b..a9837a67a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/errored/1/1/PageRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ManfredTremmel-gwt-bean-validators/styler_three_grams/1/PageRequest.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.data.domain.Sort.Direction;\n",
            "diff_size": 1
        }
    ]
}