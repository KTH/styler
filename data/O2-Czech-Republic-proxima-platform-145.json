{
    "error_id": "145",
    "information": {
        "errors": [
            {
                "line": "71",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    return client()\n        .create(\n            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n            Storage.BlobTargetOption.doesNotExist());\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/145/GCloudClient.java\nindex 97eee60781..6e3215d5bf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/145/GCloudClient.java\n@@ -68,8 +68,7 @@ class GCloudClient extends AbstractStorage {\n     final String nameNoSlash = dropSlashes(name);\n     return client()\n         .create(\n-            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n-            Storage.BlobTargetOption.doesNotExist());\n+            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),Storage.BlobTargetOption.doesNotExist());\n   }\n \n   private String dropSlashes(String name) {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/145/GCloudClient.java\nindex 97eee60781..0808ba9f84 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/145/GCloudClient.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.gcloud.storage;\n \n import com.google.cloud.storage.Blob;\n@@ -35,13 +36,18 @@ class GCloudClient extends AbstractStorage {\n \n   final Map<String, Object> cfg;\n \n-  @Getter final String bucket;\n+  @Getter\n+  final String bucket;\n \n-  @Getter final String path;\n+  @Getter\n+  final String path;\n \n-  @Getter final StorageClass storageClass;\n+  @Getter\n+  final StorageClass storageClass;\n \n-  @Nullable @Getter private transient Storage client;\n+  @Nullable\n+  @Getter\n+  private transient Storage client;\n \n   GCloudClient(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n     super(entityDesc, uri);\n@@ -68,7 +74,8 @@ class GCloudClient extends AbstractStorage {\n     final String nameNoSlash = dropSlashes(name);\n     return client()\n         .create(\n-            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n+            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass)\n+                .build(),\n             Storage.BlobTargetOption.doesNotExist());\n   }\n \n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/145/GCloudClient.java\nindex 97eee60781..16c9cb782b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/145/GCloudClient.java\n@@ -65,7 +65,8 @@ class GCloudClient extends AbstractStorage {\n   }\n \n   Blob createBlob(String name) {\n-    final String nameNoSlash = dropSlashes(name);\n+\n+  final String nameNoSlash = dropSlashes(name);\n     return client()\n         .create(\n             BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n@@ -87,4 +88,4 @@ class GCloudClient extends AbstractStorage {\n     }\n     return client;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 63.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'while' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/145/GCloudClient.java\nindex 97eee60781..6bc2e6faa4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/145/GCloudClient.java\n@@ -31,60 +31,58 @@ import java.util.Optional;\n import javax.annotation.Nullable;\n import lombok.Getter;\n \n+\n class GCloudClient extends AbstractStorage {\n \n-  final Map<String, Object> cfg;\n+    final Map<String, Object> cfg;\n \n-  @Getter final String bucket;\n+    @Getter final String bucket;\n \n-  @Getter final String path;\n+    @Getter final String path;\n \n-  @Getter final StorageClass storageClass;\n+    @Getter final StorageClass storageClass;\n \n-  @Nullable @Getter private transient Storage client;\n+    @Nullable @Getter private transient Storage client;\n \n-  GCloudClient(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n+    GCloudClient(EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n     super(entityDesc, uri);\n     this.cfg = cfg;\n     this.bucket = uri.getAuthority();\n     this.path = toPath(uri);\n-    this.storageClass =\n-        Optional.ofNullable(cfg.get(\"storage-class\"))\n-            .map(Object::toString)\n-            .map(StorageClass::valueOf)\n-            .orElse(StorageClass.STANDARD);\n-  }\n+    this.storageClass = Optional.ofNullable(cfg.get(\"storage-class\")).map(Object::toString)\n+                                                                     .map(StorageClass::valueOf)\n+                                                                     .orElse(StorageClass.STANDARD);\n+    }\n \n-  public Map<String, Object> getCfg() {\n+    public Map<String, Object> getCfg() {\n     return Collections.unmodifiableMap(cfg);\n-  }\n+    }\n \n   // normalize path to not start and to end with slash\n-  private static String toPath(URI uri) {\n+\n+    private static String toPath(URI uri) {\n     return UriUtil.getPathNormalized(uri) + \"/\";\n-  }\n+    }\n \n-  Blob createBlob(String name) {\n+    Blob createBlob(String name) {\n     final String nameNoSlash = dropSlashes(name);\n-    return client()\n-        .create(\n-            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n-            Storage.BlobTargetOption.doesNotExist());\n-  }\n+    return client().create(BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass)\n+                                                                          .build(), Storage.BlobTargetOption.doesNotExist());\n+    }\n \n-  private String dropSlashes(String name) {\n+    private String dropSlashes(String name) {\n     String ret = name;\n     while (ret.startsWith(\"/\")) {\n-      ret = ret.substring(1);\n+        ret = ret.substring(1);\n     }\n     return ret;\n-  }\n+    }\n \n-  @VisibleForTesting\n-  Storage client() {\n+    @VisibleForTesting\n+    Storage client() {\n     if (client == null) {\n-      client = StorageOptions.getDefaultInstance().getService();\n+        client = StorageOptions.getDefaultInstance().getService();\n     }\n     return client;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/145/GCloudClient.java\nindex 97eee60781..ebbedd5b08 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/145/GCloudClient.java\n@@ -68,8 +68,8 @@ class GCloudClient extends AbstractStorage {\n     final String nameNoSlash = dropSlashes(name);\n     return client()\n         .create(\n-            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n-            Storage.BlobTargetOption.doesNotExist());\n+            BlobInfo.newBuilder(bucket,path +nameNoSlash).setStorageClass(storageClass).build(\n+            ),Storage.BlobTargetOption.doesNotExist());\n   }\n \n   private String dropSlashes(String name) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/145/GCloudClient.java\nindex 97eee60781..6e3215d5bf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/145/GCloudClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/145/GCloudClient.java\n@@ -68,8 +68,7 @@ class GCloudClient extends AbstractStorage {\n     final String nameNoSlash = dropSlashes(name);\n     return client()\n         .create(\n-            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),\n-            Storage.BlobTargetOption.doesNotExist());\n+            BlobInfo.newBuilder(bucket, path + nameNoSlash).setStorageClass(storageClass).build(),Storage.BlobTargetOption.doesNotExist());\n   }\n \n   private String dropSlashes(String name) {\n",
            "diff_size": 2
        }
    ]
}