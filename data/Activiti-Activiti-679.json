{
    "error_id": "679",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\npublic class MessageFlow extends BaseElement {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/679/MessageFlow.java\nindex a2bd341d11..d636d86b1e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/679/MessageFlow.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class MessageFlow extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/679/MessageFlow.java\nindex a2bd341d11..51ce80088b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/679/MessageFlow.java\n@@ -1,80 +1,81 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class MessageFlow extends BaseElement {\n \n-  protected String name;\n-  protected String sourceRef;\n-  protected String targetRef;\n-  protected String messageRef;\n-\n-  public MessageFlow() {\n-\n-  }\n-\n-  public MessageFlow(String sourceRef, String targetRef) {\n-    this.sourceRef = sourceRef;\n-    this.targetRef = targetRef;\n-  }\n-\n-  public String getName() {\n-    return name;\n-  }\n-\n-  public void setName(String name) {\n-    this.name = name;\n-  }\n-\n-  public String getSourceRef() {\n-    return sourceRef;\n-  }\n-\n-  public void setSourceRef(String sourceRef) {\n-    this.sourceRef = sourceRef;\n-  }\n-\n-  public String getTargetRef() {\n-    return targetRef;\n-  }\n-\n-  public void setTargetRef(String targetRef) {\n-    this.targetRef = targetRef;\n-  }\n-\n-  public String getMessageRef() {\n-    return messageRef;\n-  }\n-\n-  public void setMessageRef(String messageRef) {\n-    this.messageRef = messageRef;\n-  }\n-\n-  public String toString() {\n-    return sourceRef + \" --> \" + targetRef;\n-  }\n-\n-  public MessageFlow clone() {\n-    MessageFlow clone = new MessageFlow();\n-    clone.setValues(this);\n-    return clone;\n-  }\n-\n-  public void setValues(MessageFlow otherFlow) {\n-    super.setValues(otherFlow);\n-    setName(otherFlow.getName());\n-    setSourceRef(otherFlow.getSourceRef());\n-    setTargetRef(otherFlow.getTargetRef());\n-    setMessageRef(otherFlow.getMessageRef());\n-  }\n+    protected String name;\n+    protected String sourceRef;\n+    protected String targetRef;\n+    protected String messageRef;\n+\n+    public MessageFlow() {\n+\n+    }\n+\n+    public MessageFlow(String sourceRef, String targetRef) {\n+        this.sourceRef = sourceRef;\n+        this.targetRef = targetRef;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getSourceRef() {\n+        return sourceRef;\n+    }\n+\n+    public void setSourceRef(String sourceRef) {\n+        this.sourceRef = sourceRef;\n+    }\n+\n+    public String getTargetRef() {\n+        return targetRef;\n+    }\n+\n+    public void setTargetRef(String targetRef) {\n+        this.targetRef = targetRef;\n+    }\n+\n+    public String getMessageRef() {\n+        return messageRef;\n+    }\n+\n+    public void setMessageRef(String messageRef) {\n+        this.messageRef = messageRef;\n+    }\n+\n+    public String toString() {\n+        return sourceRef + \" --> \" + targetRef;\n+    }\n+\n+    public MessageFlow clone() {\n+        MessageFlow clone = new MessageFlow();\n+        clone.setValues(this);\n+        return clone;\n+    }\n+\n+    public void setValues(MessageFlow otherFlow) {\n+        super.setValues(otherFlow);\n+        setName(otherFlow.getName());\n+        setSourceRef(otherFlow.getSourceRef());\n+        setTargetRef(otherFlow.getTargetRef());\n+        setMessageRef(otherFlow.getMessageRef());\n+    }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/679/MessageFlow.java\nindex a2bd341d11..61f25093bf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/679/MessageFlow.java\n@@ -12,69 +12,69 @@\n  */\n package org.activiti.bpmn.model;\n \n-public class MessageFlow extends BaseElement {\n \n-  protected String name;\n-  protected String sourceRef;\n-  protected String targetRef;\n-  protected String messageRef;\n+public class MessageFlow extends BaseElement {\n \n-  public MessageFlow() {\n+    protected String name;\n+    protected String sourceRef;\n+    protected String targetRef;\n+    protected String messageRef;\n \n-  }\n+    public MessageFlow() {\n+    }\n \n-  public MessageFlow(String sourceRef, String targetRef) {\n+    public MessageFlow(String sourceRef, String targetRef) {\n     this.sourceRef = sourceRef;\n     this.targetRef = targetRef;\n-  }\n+    }\n \n-  public String getName() {\n+    public String getName() {\n     return name;\n-  }\n+    }\n \n-  public void setName(String name) {\n+    public void setName(String name) {\n     this.name = name;\n-  }\n+    }\n \n-  public String getSourceRef() {\n+    public String getSourceRef() {\n     return sourceRef;\n-  }\n+    }\n \n-  public void setSourceRef(String sourceRef) {\n+    public void setSourceRef(String sourceRef) {\n     this.sourceRef = sourceRef;\n-  }\n+    }\n \n-  public String getTargetRef() {\n+    public String getTargetRef() {\n     return targetRef;\n-  }\n+    }\n \n-  public void setTargetRef(String targetRef) {\n+    public void setTargetRef(String targetRef) {\n     this.targetRef = targetRef;\n-  }\n+    }\n \n-  public String getMessageRef() {\n+    public String getMessageRef() {\n     return messageRef;\n-  }\n+    }\n \n-  public void setMessageRef(String messageRef) {\n+    public void setMessageRef(String messageRef) {\n     this.messageRef = messageRef;\n-  }\n+    }\n \n-  public String toString() {\n+    public String toString() {\n     return sourceRef + \" --> \" + targetRef;\n-  }\n+    }\n \n-  public MessageFlow clone() {\n+    public MessageFlow clone() {\n     MessageFlow clone = new MessageFlow();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(MessageFlow otherFlow) {\n+    public void setValues(MessageFlow otherFlow) {\n     super.setValues(otherFlow);\n     setName(otherFlow.getName());\n     setSourceRef(otherFlow.getSourceRef());\n     setTargetRef(otherFlow.getTargetRef());\n     setMessageRef(otherFlow.getMessageRef());\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/679/MessageFlow.java\nindex a2bd341d11..d636d86b1e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/679/MessageFlow.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class MessageFlow extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/679/MessageFlow.java\nindex a2bd341d11..d636d86b1e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/679/MessageFlow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/679/MessageFlow.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class MessageFlow extends BaseElement {\n",
            "diff_size": 1
        }
    ]
}