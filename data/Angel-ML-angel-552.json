{
    "error_id": "552",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/552/ServerPartitionStorageFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/552/ServerPartitionStorageFactory.java\nindex dee6d1ec7c..5d96d9e251 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/552/ServerPartitionStorageFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/552/ServerPartitionStorageFactory.java\n@@ -25,74 +25,75 @@ import com.tencent.angel.ml.matrix.RowType;\n  */\n public class ServerPartitionStorageFactory {\n \n-  /**\n-   * Get partition storage use storage class name\n-   *\n-   * @param storageClassName storage class name\n-   * @return partition storage\n-   */\n-  public static IServerPartitionStorage getStorage(String storageClassName) {\n-    try {\n-      return (IServerPartitionStorage) Class.forName(storageClassName).newInstance();\n-    } catch (Throwable e) {\n-      throw new RuntimeException(e);\n+    /**\n+     * Get partition storage use storage class name\n+     *\n+     * @param storageClassName storage class name\n+     * @return partition storage\n+     */\n+    public static IServerPartitionStorage getStorage(String storageClassName) {\n+        try {\n+            return (IServerPartitionStorage) Class.forName(storageClassName).newInstance();\n+        } catch (Throwable e) {\n+            throw new RuntimeException(e);\n+        }\n     }\n-  }\n \n-  /**\n-   * Get storage for row based partition\n-   *\n-   * @param storageClass storage class\n-   * @param partKey partition key\n-   * @param rowType row type\n-   * @return storage for row based partition\n-   */\n-  public static ServerRowsStorage getRowBasedStorage(\n-      Class<? extends IServerPartitionStorage> storageClass,\n-      PartitionKey partKey, RowType rowType) {\n-    // If storage is set, just get a instance\n-    if (storageClass != null) {\n-      try {\n-        return (ServerRowsStorage) storageClass\n-            .getConstructor(int.class, int.class)\n-            .newInstance(partKey.getStartRow(), partKey.getEndRow() - partKey.getStartRow());\n-      } catch (Throwable e) {\n-        throw new RuntimeException(\"get storage failed: \", e);\n-      }\n-    }\n-\n-    // If storage is not set, use default\n-    return new DenseServerRowsStorage(partKey.getStartRow(),\n-        partKey.getEndRow() - partKey.getStartRow());\n-  }\n+    /**\n+     * Get storage for row based partition\n+     *\n+     * @param storageClass storage class\n+     * @param partKey      partition key\n+     * @param rowType      row type\n+     * @return storage for row based partition\n+     */\n+    public static ServerRowsStorage getRowBasedStorage(\n+            Class<? extends IServerPartitionStorage> storageClass,\n+            PartitionKey partKey, RowType rowType) {\n+        // If storage is set, just get a instance\n+        if (storageClass != null) {\n+            try {\n+                return (ServerRowsStorage) storageClass\n+                        .getConstructor(int.class, int.class)\n+                        .newInstance(partKey.getStartRow(),\n+                                partKey.getEndRow() - partKey.getStartRow());\n+            } catch (Throwable e) {\n+                throw new RuntimeException(\"get storage failed: \", e);\n+            }\n+        }\n \n-  /**\n-   * Get storage for CSR partition\n-   *\n-   * @param storageClass storage class\n-   * @param partKey partition key\n-   * @param rowType row type\n-   * @return storage for CSR partition\n-   */\n-  public static CSRStorage getCSRStorage(Class<? extends IServerPartitionStorage> storageClass,\n-      PartitionKey partKey, RowType rowType) {\n-    // If storage is set, just get a instance\n-    if (storageClass != null) {\n-      try {\n-        return (CSRStorage) storageClass\n-            .getConstructor(int.class)\n-            .newInstance(partKey.getStartRow());\n-      } catch (Throwable e) {\n-        throw new RuntimeException(\"get storage failed: \", e);\n-      }\n+        // If storage is not set, use default\n+        return new DenseServerRowsStorage(partKey.getStartRow(),\n+                partKey.getEndRow() - partKey.getStartRow());\n     }\n \n-    // If storage is not set, use default\n-    if (rowType.isInt()) {\n-      return new IntCSRStorage(partKey.getStartRow());\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"Unsupport row type \" + rowType + \" for CSR format now\");\n+    /**\n+     * Get storage for CSR partition\n+     *\n+     * @param storageClass storage class\n+     * @param partKey      partition key\n+     * @param rowType      row type\n+     * @return storage for CSR partition\n+     */\n+    public static CSRStorage getCSRStorage(Class<? extends IServerPartitionStorage> storageClass,\n+                                           PartitionKey partKey, RowType rowType) {\n+        // If storage is set, just get a instance\n+        if (storageClass != null) {\n+            try {\n+                return (CSRStorage) storageClass\n+                        .getConstructor(int.class)\n+                        .newInstance(partKey.getStartRow());\n+            } catch (Throwable e) {\n+                throw new RuntimeException(\"get storage failed: \", e);\n+            }\n+        }\n+\n+        // If storage is not set, use default\n+        if (rowType.isInt()) {\n+            return new IntCSRStorage(partKey.getStartRow());\n+        } else {\n+            throw new UnsupportedOperationException(\n+                    \"Unsupport row type \" + rowType + \" for CSR format now\");\n+        }\n     }\n-  }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/552/ServerPartitionStorageFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/552/ServerPartitionStorageFactory.java\nindex dee6d1ec7c..6a7042a909 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/552/ServerPartitionStorageFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/552/ServerPartitionStorageFactory.java\n@@ -47,16 +47,14 @@ public class ServerPartitionStorageFactory {\n    * @param rowType row type\n    * @return storage for row based partition\n    */\n-  public static ServerRowsStorage getRowBasedStorage(\n-      Class<? extends IServerPartitionStorage> storageClass,\n+  public static ServerRowsStorage getRowBasedStorage(Class<? extends IServerPartitionStorage> storageClass,\n       PartitionKey partKey, RowType rowType) {\n     // If storage is set, just get a instance\n     if (storageClass != null) {\n       try {\n-        return (ServerRowsStorage) storageClass\n-            .getConstructor(int.class, int.class)\n+        return (ServerRowsStorage) storageClass.getConstructor(int.class, int.class)\n             .newInstance(partKey.getStartRow(), partKey.getEndRow() - partKey.getStartRow());\n-      } catch (Throwable e) {\n+  } catch (Throwable e) {\n         throw new RuntimeException(\"get storage failed: \", e);\n       }\n     }\n@@ -79,10 +77,9 @@ public class ServerPartitionStorageFactory {\n     // If storage is set, just get a instance\n     if (storageClass != null) {\n       try {\n-        return (CSRStorage) storageClass\n-            .getConstructor(int.class)\n+        return (CSRStorage) storageClass.getConstructor(int.class)\n             .newInstance(partKey.getStartRow());\n-      } catch (Throwable e) {\n+  } catch (Throwable e) {\n         throw new RuntimeException(\"get storage failed: \", e);\n       }\n     }\n@@ -91,8 +88,7 @@ public class ServerPartitionStorageFactory {\n     if (rowType.isInt()) {\n       return new IntCSRStorage(partKey.getStartRow());\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"Unsupport row type \" + rowType + \" for CSR format now\");\n+      throw new UnsupportedOperationException(\"Unsupport row type \" + rowType + \" for CSR format now\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 53.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 76.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/552/ServerPartitionStorageFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/552/ServerPartitionStorageFactory.java\nindex dee6d1ec7c..b07cafa8db 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/552/ServerPartitionStorageFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/552/ServerPartitionStorageFactory.java\n@@ -23,6 +23,7 @@ import com.tencent.angel.ml.matrix.RowType;\n /**\n  * Server partition storage factory\n  */\n+\n public class ServerPartitionStorageFactory {\n \n   /**\n@@ -31,13 +32,14 @@ public class ServerPartitionStorageFactory {\n    * @param storageClassName storage class name\n    * @return partition storage\n    */\n-  public static IServerPartitionStorage getStorage(String storageClassName) {\n+\n+    public static IServerPartitionStorage getStorage(String storageClassName) {\n     try {\n-      return (IServerPartitionStorage) Class.forName(storageClassName).newInstance();\n+        return (IServerPartitionStorage) Class.forName(storageClassName).newInstance();\n     } catch (Throwable e) {\n       throw new RuntimeException(e);\n     }\n-  }\n+    }\n \n   /**\n    * Get storage for row based partition\n@@ -47,24 +49,20 @@ public class ServerPartitionStorageFactory {\n    * @param rowType row type\n    * @return storage for row based partition\n    */\n-  public static ServerRowsStorage getRowBasedStorage(\n-      Class<? extends IServerPartitionStorage> storageClass,\n-      PartitionKey partKey, RowType rowType) {\n+\n+    public static ServerRowsStorage getRowBasedStorage(Class<? extends IServerPartitionStorage> storageClass, PartitionKey partKey, RowType rowType) {\n     // If storage is set, just get a instance\n     if (storageClass != null) {\n-      try {\n-        return (ServerRowsStorage) storageClass\n-            .getConstructor(int.class, int.class)\n-            .newInstance(partKey.getStartRow(), partKey.getEndRow() - partKey.getStartRow());\n-      } catch (Throwable e) {\n-        throw new RuntimeException(\"get storage failed: \", e);\n-      }\n+        try {\n+                                  return (ServerRowsStorage) storageClass.getConstructor(int.class, int.class).newInstance(partKey.getStartRow(), partKey.getEndRow() - partKey.getStartRow());\n+        } catch (Throwable e) {\n+          throw new RuntimeException(\"get storage failed: \", e);\n+        }\n     }\n \n     // If storage is not set, use default\n-    return new DenseServerRowsStorage(partKey.getStartRow(),\n-        partKey.getEndRow() - partKey.getStartRow());\n-  }\n+    return new DenseServerRowsStorage(partKey.getStartRow(), partKey.getEndRow() - partKey.getStartRow());\n+    }\n \n   /**\n    * Get storage for CSR partition\n@@ -74,25 +72,24 @@ public class ServerPartitionStorageFactory {\n    * @param rowType row type\n    * @return storage for CSR partition\n    */\n-  public static CSRStorage getCSRStorage(Class<? extends IServerPartitionStorage> storageClass,\n-      PartitionKey partKey, RowType rowType) {\n+\n+    public static CSRStorage getCSRStorage(Class<? extends IServerPartitionStorage> storageClass, PartitionKey partKey, RowType rowType) {\n     // If storage is set, just get a instance\n     if (storageClass != null) {\n-      try {\n-        return (CSRStorage) storageClass\n-            .getConstructor(int.class)\n-            .newInstance(partKey.getStartRow());\n-      } catch (Throwable e) {\n-        throw new RuntimeException(\"get storage failed: \", e);\n-      }\n+        try {\n+                                  return (CSRStorage) storageClass.getConstructor(int.class).newInstance(partKey.getStartRow());\n+        } catch (Throwable e) {\n+          throw new RuntimeException(\"get storage failed: \", e);\n+        }\n     }\n \n     // If storage is not set, use default\n+\n     if (rowType.isInt()) {\n-      return new IntCSRStorage(partKey.getStartRow());\n+        return new IntCSRStorage(partKey.getStartRow());\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"Unsupport row type \" + rowType + \" for CSR format now\");\n+      throw new UnsupportedOperationException(\"Unsupport row type \" + rowType + \" for CSR format now\");\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}