{
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "84",
                "column": "5",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    /**\n     @param ipAddress {@link #ipAddress}\n     */\n    public static PublicEndpointCapabilityBuilder builder(String ipAddress) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/styler/24/PublicEndpointCapability.java\nindex 88ff01486a..6d2b953ee1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/styler/24/PublicEndpointCapability.java\n@@ -80,7 +80,6 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n@@ -90,7 +89,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n \n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-    \n+\n     @Override\n     public void accept(Visitor v) {\n         v.visit(this);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "88",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/intellij/24/PublicEndpointCapability.java\nindex 88ff01486a..f6871449ad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/intellij/24/PublicEndpointCapability.java\n@@ -16,36 +16,36 @@ import lombok.Data;\n import lombok.Singular;\n \n /**\n- Represents a public endpoint which is accessible to the general internet (and its public IP\n- address ranges).\n- <p>\n- This public endpoint capability also can be used to create a floating (IP) address that the underlying\n- network assigns from a pool allocated from the application\u2019s underlying public network. This floating\n- address is managed by the underlying network such that can be routed an application\u2019s private address\n- and remains reliable to internet clients.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 154)\n- <p>\n- Note: If the networkName set to the name of a network (or sub-network) that is not public\n- (i.e., has non-public IP address ranges assigned to it), then TOSCA orchestrators SHALL treat this as an error.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n+ * Represents a public endpoint which is accessible to the general internet (and its public IP\n+ * address ranges).\n+ * <p>\n+ * This public endpoint capability also can be used to create a floating (IP) address that the underlying\n+ * network assigns from a pool allocated from the application\u2019s underlying public network. This floating\n+ * address is managed by the underlying network such that can be routed an application\u2019s private address\n+ * and remains reliable to internet clients.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 154)\n+ * <p>\n+ * Note: If the networkName set to the name of a network (or sub-network) that is not public\n+ * (i.e., has non-public IP address ranges assigned to it), then TOSCA orchestrators SHALL treat this as an error.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n  */\n @Data\n public class PublicEndpointCapability extends EndpointCapability {\n \n     /**\n-     indicates that the public address should be allocated from a pool of floating IPs\n-     that are associated with the network\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n+     * indicates that the public address should be allocated from a pool of floating IPs\n+     * that are associated with the network\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n      */\n     private final boolean floating;\n \n     /**\n-     The optional name to register with DNS (experimental)\n-     <p>\n-     Note: If a dns_name is set, TOSCA orchestrators SHALL attempt to register the name\n-     in the (local) DNS registry for the Cloud Provider.\n-     <p>\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n+     * The optional name to register with DNS (experimental)\n+     * <p>\n+     * Note: If a dns_name is set, TOSCA orchestrators SHALL attempt to register the name\n+     * in the (local) DNS registry for the Cloud Provider.\n+     * <p>\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n      */\n     private final String dnsName;\n \n@@ -61,20 +61,24 @@ public class PublicEndpointCapability extends EndpointCapability {\n                                        Initiator initiator,\n                                        @Singular Set<PortSpec> ports,\n                                        String ipAddress,\n-                                       @Singular Set<Class<? extends RootNode>> validSourceTypes,\n+                                       @Singular\n+                                           Set<Class<? extends RootNode>> validSourceTypes,\n                                        Range occurence,\n                                        String description) {\n-        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"),\n-            initiator, ports, ipAddress, validSourceTypes, occurence, description);\n+        super(protocol, port, secure, urlPath, portName,\n+            (networkName != null ? networkName : \"PUBLIC\"),\n+            initiator, ports, ipAddress, validSourceTypes, occurence,\n+            description);\n         if (networkName.equalsIgnoreCase(\"private\")) {\n-            throw new IllegalArgumentException(\"Constraint violation: network name must not equal 'private'\");\n+            throw new IllegalArgumentException(\n+                \"Constraint violation: network name must not equal 'private'\");\n         }\n         this.floating = floating;\n         this.dnsName = dnsName;\n     }\n \n     /**\n-     @return {@link #dnsName}\n+     * @return {@link #dnsName}\n      */\n     public Optional<String> getDnsName() {\n         return Optional.ofNullable(dnsName);\n@@ -82,15 +86,16 @@ public class PublicEndpointCapability extends EndpointCapability {\n \n \n     /**\n-     @param ipAddress {@link #ipAddress}\n+     * @param ipAddress {@link #ipAddress}\n      */\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n         return new PublicEndpointCapabilityBuilder().ipAddress(ipAddress);\n     }\n \n-    public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n+    public static class PublicEndpointCapabilityBuilder\n+        extends EndpointCapabilityBuilder {\n     }\n-    \n+\n     @Override\n     public void accept(Visitor v) {\n         v.visit(this);\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/naturalize/24/PublicEndpointCapability.java\nindex 88ff01486a..77be68ad7f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/naturalize/24/PublicEndpointCapability.java\n@@ -50,11 +50,9 @@ public class PublicEndpointCapability extends EndpointCapability {\n     private final String dnsName;\n \n     @Builder\n-    protected PublicEndpointCapability(boolean floating,\n-                                       String dnsName,\n+    protected PublicEndpointCapability(boolean floating, String dnsName,\n                                        NetworkProtocol protocol,\n-                                       Port port,\n-                                       boolean secure,\n+                                       Port port, boolean secure,\n                                        URL urlPath,\n                                        String portName,\n                                        String networkName,\n@@ -64,8 +62,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n                                        @Singular Set<Class<? extends RootNode>> validSourceTypes,\n                                        Range occurence,\n                                        String description) {\n-        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"),\n-            initiator, ports, ipAddress, validSourceTypes, occurence, description);\n+    super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"), initiator, ports, ipAddress, validSourceTypes, occurence, description);\n         if (networkName.equalsIgnoreCase(\"private\")) {\n             throw new IllegalArgumentException(\"Constraint violation: network name must not equal 'private'\");\n         }\n@@ -80,8 +77,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n-    /**\n+/**\n      @param ipAddress {@link #ipAddress}\n      */\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n@@ -90,9 +86,9 @@ public class PublicEndpointCapability extends EndpointCapability {\n \n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-    \n-    @Override\n-    public void accept(Visitor v) {\n+\n+@Override\n+public void accept(Visitor v) {\n         v.visit(this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/codebuff/24/PublicEndpointCapability.java\nindex 88ff01486a..35b7c42fd9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/codebuff/24/PublicEndpointCapability.java\n@@ -3,14 +3,12 @@ package org.opentosca.toscana.model.capability;\n import java.net.URL;\n import java.util.Optional;\n import java.util.Set;\n-\n import org.opentosca.toscana.model.datatype.NetworkProtocol;\n import org.opentosca.toscana.model.datatype.Port;\n import org.opentosca.toscana.model.datatype.PortSpec;\n import org.opentosca.toscana.model.datatype.Range;\n import org.opentosca.toscana.model.node.RootNode;\n import org.opentosca.toscana.model.visitor.Visitor;\n-\n import lombok.Builder;\n import lombok.Data;\n import lombok.Singular;\n@@ -29,6 +27,8 @@ import lombok.Singular;\n  (i.e., has non-public IP address ranges assigned to it), then TOSCA orchestrators SHALL treat this as an error.\n  (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n  */\n+\n+\n @Data\n public class PublicEndpointCapability extends EndpointCapability {\n \n@@ -37,6 +37,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n      that are associated with the network\n      (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n      */\n+\n     private final boolean floating;\n \n     /**\n@@ -50,22 +51,22 @@ public class PublicEndpointCapability extends EndpointCapability {\n     private final String dnsName;\n \n     @Builder\n-    protected PublicEndpointCapability(boolean floating,\n-                                       String dnsName,\n-                                       NetworkProtocol protocol,\n-                                       Port port,\n-                                       boolean secure,\n-                                       URL urlPath,\n-                                       String portName,\n-                                       String networkName,\n-                                       Initiator initiator,\n-                                       @Singular Set<PortSpec> ports,\n-                                       String ipAddress,\n-                                       @Singular Set<Class<? extends RootNode>> validSourceTypes,\n-                                       Range occurence,\n-                                       String description) {\n-        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"),\n-            initiator, ports, ipAddress, validSourceTypes, occurence, description);\n+    protected PublicEndpointCapability(\n+        boolean floating,\n+        String dnsName,\n+        NetworkProtocol protocol,\n+        Port port,\n+        boolean secure,\n+        URL urlPath,\n+        String portName,\n+        String networkName,\n+        Initiator initiator,\n+        @Singular Set<PortSpec> ports,\n+        String ipAddress,\n+        @Singular Set<Class<? extends RootNode>> validSourceTypes,\n+        Range occurence, String description\n+    ) {\n+        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"), initiator, ports, ipAddress, validSourceTypes, occurence, description);\n         if (networkName.equalsIgnoreCase(\"private\")) {\n             throw new IllegalArgumentException(\"Constraint violation: network name must not equal 'private'\");\n         }\n@@ -76,6 +77,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n     /**\n      @return {@link #dnsName}\n      */\n+\n     public Optional<String> getDnsName() {\n         return Optional.ofNullable(dnsName);\n     }\n@@ -84,15 +86,19 @@ public class PublicEndpointCapability extends EndpointCapability {\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n+\n+\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n-        return new PublicEndpointCapabilityBuilder().ipAddress(ipAddress);\n+        return new PublicEndpointCapabilityBuilder()\n+            .ipAddress(ipAddress);\n     }\n \n+\n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-    \n+\n     @Override\n     public void accept(Visitor v) {\n         v.visit(this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/styler_random/24/PublicEndpointCapability.java\nindex 88ff01486a..cbe532a246 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/styler_random/24/PublicEndpointCapability.java\n@@ -79,18 +79,15 @@ public class PublicEndpointCapability extends EndpointCapability {\n     public Optional<String> getDnsName() {\n         return Optional.ofNullable(dnsName);\n     }\n-\n-\n     /**\n      @param ipAddress {@link #ipAddress}\n-     */\n-    public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n+     */ public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n         return new PublicEndpointCapabilityBuilder().ipAddress(ipAddress);\n     }\n \n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-    \n+\n     @Override\n     public void accept(Visitor v) {\n         v.visit(this);\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/styler_three_grams/24/PublicEndpointCapability.java\nindex 88ff01486a..6d2b953ee1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/errored/1/24/PublicEndpointCapability.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/StuPro-TOSCAna-TOSCAna/styler_three_grams/24/PublicEndpointCapability.java\n@@ -80,7 +80,6 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n@@ -90,7 +89,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n \n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-    \n+\n     @Override\n     public void accept(Visitor v) {\n         v.visit(this);\n",
            "diff_size": 2
        }
    ]
}