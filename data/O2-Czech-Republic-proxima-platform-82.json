{
    "error_id": "82",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    /** String value that all strings should be less than. */\n    static final String MAX = new String(new byte[] {(byte) 0xFF}, 0, 1, Charset.forName(\"ascii\"));\n    /** String value that all strings should be greater or equal to. */\n    static final String MIN = \"\";\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'public' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/82/StringConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/82/StringConverter.java\nindex 07c80548d5..e9c87aa4f2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/82/StringConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/82/StringConverter.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.cassandra;\n \n import java.io.Serializable;\n@@ -25,7 +26,8 @@ public interface StringConverter<T> extends Serializable {\n   public static class DefaultConverter implements StringConverter<String> {\n \n     /** String value that all strings should be less than. */\n-    static final String MAX = new String(new byte[] {(byte) 0xFF}, 0, 1, Charset.forName(\"ascii\"));\n+    static final String MAX =\n+        new String(new byte[] {(byte) 0xFF}, 0, 1, Charset.forName(\"ascii\"));\n     /** String value that all strings should be greater or equal to. */\n     static final String MIN = \"\";\n \n@@ -35,7 +37,8 @@ public interface StringConverter<T> extends Serializable {\n     }\n \n     @Override\n-    public @Nullable String fromString(String what) {\n+    public @Nullable\n+    String fromString(String what) {\n       return what;\n     }\n \n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/82/StringConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/82/StringConverter.java\nindex 07c80548d5..60305d440e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/82/StringConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/82/StringConverter.java\n@@ -26,7 +26,8 @@ public interface StringConverter<T> extends Serializable {\n \n     /** String value that all strings should be less than. */\n     static final String MAX = new String(new byte[] {(byte) 0xFF}, 0, 1, Charset.forName(\"ascii\"));\n-    /** String value that all strings should be greater or equal to. */\n+\n+/** String value that all strings should be greater or equal to. */\n     static final String MIN = \"\";\n \n     @Override\n@@ -83,4 +84,4 @@ public interface StringConverter<T> extends Serializable {\n    * @return instance of minimal object\n    */\n   T min();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 41, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'public' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 90.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/82/StringConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/82/StringConverter.java\nindex 07c80548d5..d277f9ed3c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/82/StringConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/82/StringConverter.java\n@@ -20,39 +20,45 @@ import java.nio.charset.Charset;\n import javax.annotation.Nullable;\n \n /** A converter between a specified java type and {@code String}. */\n+\n+\n public interface StringConverter<T> extends Serializable {\n \n-  public static class DefaultConverter implements StringConverter<String> {\n+    public static class DefaultConverter implements StringConverter<String> {\n \n     /** String value that all strings should be less than. */\n-    static final String MAX = new String(new byte[] {(byte) 0xFF}, 0, 1, Charset.forName(\"ascii\"));\n+\n+    static final String MAX = new String(new byte[] {\n+                                         (byte) 0xFF\n+}, 0, 1, Charset.forName(\"ascii\"));\n     /** String value that all strings should be greater or equal to. */\n     static final String MIN = \"\";\n \n     @Override\n     public String asString(String what) {\n-      return what;\n+        return what;\n     }\n \n     @Override\n-    public @Nullable String fromString(String what) {\n-      return what;\n+    public @Nullable\n+    String fromString(String what) {\n+        return what;\n     }\n \n     @Override\n     public String max() {\n-      return MAX;\n+        return MAX;\n     }\n \n     @Override\n     public String min() {\n-      return MIN;\n+        return MIN;\n+    }\n     }\n-  }\n \n-  public static StringConverter<String> getDefault() {\n+    public static StringConverter<String> getDefault() {\n     return new DefaultConverter();\n-  }\n+    }\n \n   /**\n    * Convert type to string.\n@@ -60,7 +66,9 @@ public interface StringConverter<T> extends Serializable {\n    * @param what input type\n    * @return string representation of what\n    */\n-  String asString(T what);\n+\n+\n+    String asString(T what);\n \n   /**\n    * Convert type from string.\n@@ -68,19 +76,25 @@ public interface StringConverter<T> extends Serializable {\n    * @param what string representation\n    * @return the original object\n    */\n-  T fromString(String what);\n+\n+\n+    T fromString(String what);\n \n   /**\n    * Retrieve maximal element.\n    *\n    * @return instance of maximal object\n    */\n-  T max();\n+\n+\n+    T max();\n \n   /**\n    * Retrieve minimal element\n    *\n    * @return instance of minimal object\n    */\n-  T min();\n-}\n+\n+\n+    T min();\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}