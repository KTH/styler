{
    "error_id": "421",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.runtime.model.impl;\n\nimport java.util.Objects;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/421/BPMNActivityImpl.java\nindex e44130d843..8922d059d3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/421/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/421/BPMNActivityImpl.java\nindex e44130d843..42e32f146b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/421/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n@@ -76,8 +77,8 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n         }\n         BPMNActivityImpl other = (BPMNActivityImpl) obj;\n         return Objects.equals(activityName, other.activityName) &&\n-               Objects.equals(activityType, other.activityType) &&\n-               Objects.equals(executionId, other.executionId);\n+                Objects.equals(activityType, other.activityType) &&\n+                Objects.equals(executionId, other.executionId);\n     }\n \n     @Override\n@@ -92,14 +93,14 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     public String toString() {\n         StringBuilder builder = new StringBuilder();\n         builder.append(\"BPMNActivityImpl [activityName=\")\n-               .append(activityName)\n-               .append(\", activityType=\")\n-               .append(activityType)\n-               .append(\", executionId=\")\n-               .append(executionId)\n-               .append(\", toString()=\")\n-               .append(super.toString())\n-               .append(\"]\");\n+                .append(activityName)\n+                .append(\", activityType=\")\n+                .append(activityType)\n+                .append(\", executionId=\")\n+                .append(executionId)\n+                .append(\", toString()=\")\n+                .append(super.toString())\n+                .append(\"]\");\n         return builder.toString();\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/421/BPMNActivityImpl.java\nindex e44130d843..a71c510710 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/421/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n@@ -31,7 +32,7 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     public BPMNActivityImpl(String elementId,\n                             String activityName,\n                             String activityType) {\n-        this.setElementId(elementId);\n+  this.setElementId(elementId);\n         this.activityName = activityName;\n         this.activityType = activityType;\n     }\n@@ -75,8 +76,7 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n             return false;\n         }\n         BPMNActivityImpl other = (BPMNActivityImpl) obj;\n-        return Objects.equals(activityName, other.activityName) &&\n-               Objects.equals(activityType, other.activityType) &&\n+        return Objects.equals(activityName, other.activityName) && Objects.equals(activityType, other.activityType) &&\n                Objects.equals(executionId, other.executionId);\n     }\n \n@@ -91,8 +91,7 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     @Override\n     public String toString() {\n         StringBuilder builder = new StringBuilder();\n-        builder.append(\"BPMNActivityImpl [activityName=\")\n-               .append(activityName)\n+        builder.append(\"BPMNActivityImpl [activityName=\").append(activityName)\n                .append(\", activityType=\")\n                .append(activityType)\n                .append(\", executionId=\")\n@@ -100,6 +99,6 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n                .append(\", toString()=\")\n                .append(super.toString())\n                .append(\"]\");\n-        return builder.toString();\n+return builder.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/421/BPMNActivityImpl.java\nindex e44130d843..0ed7fa615e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/421/BPMNActivityImpl.java\n@@ -16,24 +16,24 @@\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n-\n import org.activiti.api.process.model.BPMNActivity;\n \n+\n public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n \n     private String activityName;\n+\n     private String activityType;\n+\n     private String executionId;\n \n     public BPMNActivityImpl() {\n     }\n \n-    public BPMNActivityImpl(String elementId,\n-                            String activityName,\n-                            String activityType) {\n-        this.setElementId(elementId);\n-        this.activityName = activityName;\n-        this.activityType = activityType;\n+    public BPMNActivityImpl(String elementId, String activityName, String activityType) {\n+    this.setElementId(elementId);\n+    this.activityName = activityName;\n+    this.activityType = activityType;\n     }\n \n     @Override\n@@ -42,7 +42,7 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     }\n \n     public void setActivityName(String activityName) {\n-        this.activityName = activityName;\n+    this.activityName = activityName;\n     }\n \n     @Override\n@@ -51,7 +51,7 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     }\n \n     public void setActivityType(String activityType) {\n-        this.activityType = activityType;\n+    this.activityType = activityType;\n     }\n \n     @Override\n@@ -60,46 +60,39 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     }\n \n     public void setExecutionId(String executionId) {\n-        this.executionId = executionId;\n+    this.executionId = executionId;\n     }\n \n     @Override\n     public boolean equals(Object obj) {\n         if (this == obj) {\n-            return true;\n+        return true;\n         }\n+\n         if (!super.equals(obj)) {\n-            return false;\n+        return false;\n         }\n+\n         if (getClass() != obj.getClass()) {\n-            return false;\n+        return false;\n         }\n+\n         BPMNActivityImpl other = (BPMNActivityImpl) obj;\n-        return Objects.equals(activityName, other.activityName) &&\n-               Objects.equals(activityType, other.activityType) &&\n-               Objects.equals(executionId, other.executionId);\n+        return Objects.equals(activityName, other.activityName) && Objects.equals(activityType, other.activityType) && Objects.equals(executionId, other.executionId);\n     }\n \n     @Override\n     public int hashCode() {\n-        final int prime = 31;\n-        int result = super.hashCode();\n-        result = prime * result + Objects.hash(activityName, activityType, executionId);\n-        return result;\n+    final int prime = 31;\n+    int result = super.hashCode();\n+    result = prime * result + Objects.hash(activityName, activityType, executionId);\n+    return result;\n     }\n \n     @Override\n     public String toString() {\n-        StringBuilder builder = new StringBuilder();\n-        builder.append(\"BPMNActivityImpl [activityName=\")\n-               .append(activityName)\n-               .append(\", activityType=\")\n-               .append(activityType)\n-               .append(\", executionId=\")\n-               .append(executionId)\n-               .append(\", toString()=\")\n-               .append(super.toString())\n-               .append(\"]\");\n-        return builder.toString();\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"BPMNActivityImpl [activityName=\").append(activityName).append(\", activityType=\").append(activityType).append(\", executionId=\").append(executionId).append(\", toString()=\").append(super.toString()).append(\"]\");\n+    return builder.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/421/BPMNActivityImpl.java\nindex e44130d843..8922d059d3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/421/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/421/BPMNActivityImpl.java\nindex e44130d843..8922d059d3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/421/BPMNActivityImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/421/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        }
    ]
}