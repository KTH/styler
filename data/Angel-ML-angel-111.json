{
    "error_id": "111",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/111/PartContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/111/PartContext.java\nindex e747e04d3e..1b4ff16f99 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/111/PartContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/111/PartContext.java\n@@ -18,68 +18,68 @@\n package com.tencent.angel.ml.matrix;\n \n public class PartContext {\n-  private int startRow;\n-  private int endRow;\n-  private long startCol;\n-  private long endCol;\n-  private int indexNum;\n+    private int startRow;\n+    private int endRow;\n+    private long startCol;\n+    private long endCol;\n+    private int indexNum;\n \n-  public PartContext(int startRow, int endRow, long startCol, long endCol, int indexNum) {\n-    this.startRow = startRow;\n-    this.endRow = endRow;\n-    this.startCol = startCol;\n-    this.endCol = endCol;\n-    this.indexNum = indexNum;\n-  }\n+    public PartContext(int startRow, int endRow, long startCol, long endCol, int indexNum) {\n+        this.startRow = startRow;\n+        this.endRow = endRow;\n+        this.startCol = startCol;\n+        this.endCol = endCol;\n+        this.indexNum = indexNum;\n+    }\n \n-  public int getStartRow() {\n-    return startRow;\n-  }\n+    public int getStartRow() {\n+        return startRow;\n+    }\n \n-  public void setStartRow(int startRow) {\n-    this.startRow = startRow;\n-  }\n+    public void setStartRow(int startRow) {\n+        this.startRow = startRow;\n+    }\n \n-  public int getEndRow() {\n-    return endRow;\n-  }\n+    public int getEndRow() {\n+        return endRow;\n+    }\n \n-  public void setEndRow(int endRow) {\n-    this.endRow = endRow;\n-  }\n+    public void setEndRow(int endRow) {\n+        this.endRow = endRow;\n+    }\n \n-  public long getStartCol() {\n-    return startCol;\n-  }\n+    public long getStartCol() {\n+        return startCol;\n+    }\n \n-  public void setStartCol(long startCol) {\n-    this.startCol = startCol;\n-  }\n+    public void setStartCol(long startCol) {\n+        this.startCol = startCol;\n+    }\n \n-  public long getEndCol() {\n-    return endCol;\n-  }\n+    public long getEndCol() {\n+        return endCol;\n+    }\n \n-  public void setEndCol(long endCol) {\n-    this.endCol = endCol;\n-  }\n+    public void setEndCol(long endCol) {\n+        this.endCol = endCol;\n+    }\n \n-  public int getIndexNum() {\n-    return indexNum;\n-  }\n+    public int getIndexNum() {\n+        return indexNum;\n+    }\n \n-  public void setIndexNum(int indexNum) {\n-    this.indexNum = indexNum;\n-  }\n+    public void setIndexNum(int indexNum) {\n+        this.indexNum = indexNum;\n+    }\n \n-  @Override\n-  public String toString() {\n-    return \"PartContext{\" +\n-        \"startRow=\" + startRow +\n-        \", endRow=\" + endRow +\n-        \", startCol=\" + startCol +\n-        \", endCol=\" + endCol +\n-        \", indexNum=\" + indexNum +\n-        '}';\n-  }\n+    @Override\n+    public String toString() {\n+        return \"PartContext{\" +\n+                \"startRow=\" + startRow +\n+                \", endRow=\" + endRow +\n+                \", startCol=\" + startCol +\n+                \", endCol=\" + endCol +\n+                \", indexNum=\" + indexNum +\n+                '}';\n+    }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/111/PartContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/111/PartContext.java\nindex e747e04d3e..658cc13db2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/111/PartContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/111/PartContext.java\n@@ -74,12 +74,6 @@ public class PartContext {\n \n   @Override\n   public String toString() {\n-    return \"PartContext{\" +\n-        \"startRow=\" + startRow +\n-        \", endRow=\" + endRow +\n-        \", startCol=\" + startCol +\n-        \", endCol=\" + endCol +\n-        \", indexNum=\" + indexNum +\n-        '}';\n+    return \"PartContext{\" + \"startRow=\" + startRow + \", endRow=\" + endRow + \", startCol=\" + startCol + \", endCol=\" + endCol + \", indexNum=\" + indexNum + '}';\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/111/PartContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/111/PartContext.java\nindex e747e04d3e..5dc990758c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/111/PartContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/111/PartContext.java\n@@ -17,69 +17,64 @@\n \n package com.tencent.angel.ml.matrix;\n \n+\n public class PartContext {\n-  private int startRow;\n-  private int endRow;\n-  private long startCol;\n-  private long endCol;\n-  private int indexNum;\n+    private int startRow;\n+    private int endRow;\n+    private long startCol;\n+    private long endCol;\n+    private int indexNum;\n \n-  public PartContext(int startRow, int endRow, long startCol, long endCol, int indexNum) {\n+    public PartContext(int startRow, int endRow, long startCol, long endCol, int indexNum) {\n     this.startRow = startRow;\n     this.endRow = endRow;\n     this.startCol = startCol;\n     this.endCol = endCol;\n     this.indexNum = indexNum;\n-  }\n+    }\n \n-  public int getStartRow() {\n+    public int getStartRow() {\n     return startRow;\n-  }\n+    }\n \n-  public void setStartRow(int startRow) {\n+    public void setStartRow(int startRow) {\n     this.startRow = startRow;\n-  }\n+    }\n \n-  public int getEndRow() {\n+    public int getEndRow() {\n     return endRow;\n-  }\n+    }\n \n-  public void setEndRow(int endRow) {\n+    public void setEndRow(int endRow) {\n     this.endRow = endRow;\n-  }\n+    }\n \n-  public long getStartCol() {\n+    public long getStartCol() {\n     return startCol;\n-  }\n+    }\n \n-  public void setStartCol(long startCol) {\n+    public void setStartCol(long startCol) {\n     this.startCol = startCol;\n-  }\n+    }\n \n-  public long getEndCol() {\n+    public long getEndCol() {\n     return endCol;\n-  }\n+    }\n \n-  public void setEndCol(long endCol) {\n+    public void setEndCol(long endCol) {\n     this.endCol = endCol;\n-  }\n+    }\n \n-  public int getIndexNum() {\n+    public int getIndexNum() {\n     return indexNum;\n-  }\n+    }\n \n-  public void setIndexNum(int indexNum) {\n+    public void setIndexNum(int indexNum) {\n     this.indexNum = indexNum;\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n-    return \"PartContext{\" +\n-        \"startRow=\" + startRow +\n-        \", endRow=\" + endRow +\n-        \", startCol=\" + startCol +\n-        \", endCol=\" + endCol +\n-        \", indexNum=\" + indexNum +\n-        '}';\n-  }\n-}\n+    @Override\n+    public String toString() {\n+    return \"PartContext{\" + \"startRow=\" + startRow + \", endRow=\" + endRow + \", startCol=\" + startCol + \", endCol=\" + endCol + \", indexNum=\" + indexNum + '}';\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}