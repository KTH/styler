{
    "error_id": "737",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/737/ArgsParser.java\nindex 88db330091..89aa3deb39 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/737/ArgsParser.java\n@@ -22,23 +22,23 @@ import org.apache.hadoop.conf.Configuration;\n \n public class ArgsParser {\n \n-  private static final Log LOG = LogFactory.getLog(ArgsParser.class);\n-  public static final String KEY_VALUE_SEP = \":\";\n+    private static final Log LOG = LogFactory.getLog(ArgsParser.class);\n+    public static final String KEY_VALUE_SEP = \":\";\n \n-  public static Configuration parse(String[] args) {\n-    Configuration cmdArgs = new Configuration();\n-    for (int i = 0; i < args.length; i++) {\n-      String argv = args[i];\n-      int sepIdx = argv.indexOf(KEY_VALUE_SEP);\n-      if (sepIdx != -1) {\n-        String k = argv.substring(0, sepIdx).trim();\n-        String v = argv.substring(sepIdx + 1).trim();\n-        if (v != \"\" && v != \"Nan\" && v != null) {\n-          cmdArgs.set(k, v);\n-          LOG.info(\"Argument: \" + k + \" -> \" + v);\n+    public static Configuration parse(String[] args) {\n+        Configuration cmdArgs = new Configuration();\n+        for (int i = 0; i < args.length; i++) {\n+            String argv = args[i];\n+            int sepIdx = argv.indexOf(KEY_VALUE_SEP);\n+            if (sepIdx != -1) {\n+                String k = argv.substring(0, sepIdx).trim();\n+                String v = argv.substring(sepIdx + 1).trim();\n+                if (v != \"\" && v != \"Nan\" && v != null) {\n+                    cmdArgs.set(k, v);\n+                    LOG.info(\"Argument: \" + k + \" -> \" + v);\n+                }\n+            }\n         }\n-      }\n+        return cmdArgs;\n     }\n-    return cmdArgs;\n-  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/737/ArgsParser.java\nindex 88db330091..c8ee213eca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/737/ArgsParser.java\n@@ -41,4 +41,4 @@ public class ArgsParser {\n     }\n     return cmdArgs;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/737/ArgsParser.java\nindex 88db330091..12870acf02 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/737/ArgsParser.java\n@@ -21,24 +21,25 @@ import org.apache.commons.logging.LogFactory;\n import org.apache.hadoop.conf.Configuration;\n \n public class ArgsParser {\n+    private static final Log LOG = LogFactory.getLog(ArgsParser.class);\n \n-  private static final Log LOG = LogFactory.getLog(ArgsParser.class);\n-  public static final String KEY_VALUE_SEP = \":\";\n+    public static final String KEY_VALUE_SEP = \":\";\n \n-  public static Configuration parse(String[] args) {\n+    public static Configuration parse(String[] args) {\n     Configuration cmdArgs = new Configuration();\n     for (int i = 0; i < args.length; i++) {\n-      String argv = args[i];\n-      int sepIdx = argv.indexOf(KEY_VALUE_SEP);\n-      if (sepIdx != -1) {\n+        String argv = args[i];\n+        int sepIdx = argv.indexOf(KEY_VALUE_SEP);\n+        if (sepIdx != -1) {\n         String k = argv.substring(0, sepIdx).trim();\n         String v = argv.substring(sepIdx + 1).trim();\n         if (v != \"\" && v != \"Nan\" && v != null) {\n-          cmdArgs.set(k, v);\n-          LOG.info(\"Argument: \" + k + \" -> \" + v);\n+            cmdArgs.set(k, v);\n+            LOG.info(\"Argument: \" + k + \" -> \" + v);\n+        }\n         }\n-      }\n     }\n     return cmdArgs;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/737/ArgsParser.java\nindex 88db330091..919683467f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/737/ArgsParser.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/737/ArgsParser.java\n@@ -12,9 +12,7 @@\n  * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n- */\n-\n-package com.tencent.angel.ml.algorithm.optimizer.admm;\n+ */ package com.tencent.angel.ml.algorithm.optimizer.admm;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n",
            "diff_size": 3
        }
    ]
}