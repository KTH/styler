{
    "error_id": "552",
    "information": {
        "errors": [
            {
                "line": "193",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/552/QueryReader.java\nindex e76b278623..38cf6b63ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/552/QueryReader.java\n@@ -190,7 +190,7 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/552/QueryReader.java\nindex e76b278623..884065d512 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/552/QueryReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.autopilot.v1.assistant;\n@@ -190,7 +190,7 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/552/QueryReader.java\nindex e76b278623..2e3635d14b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/552/QueryReader.java\n@@ -24,6 +24,7 @@ import com.twilio.rest.Domains;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class QueryReader extends Reader<Query> {\n     private final String pathAssistantSid;\n     private String language;\n@@ -37,6 +38,8 @@ public class QueryReader extends Reader<Query> {\n      * @param pathAssistantSid The SID of the Assistant that is the parent of the\n      *                         resources to read\n      */\n+\n+\n     public QueryReader(final String pathAssistantSid) {\n         this.pathAssistantSid = pathAssistantSid;\n     }\n@@ -49,6 +52,8 @@ public class QueryReader extends Reader<Query> {\n      *                 used by the Query resources to read\n      * @return this\n      */\n+\n+\n     public QueryReader setLanguage(final String language) {\n         this.language = language;\n         return this;\n@@ -61,6 +66,8 @@ public class QueryReader extends Reader<Query> {\n      * @param modelBuild The SID or unique name of the Model Build to be queried\n      * @return this\n      */\n+\n+\n     public QueryReader setModelBuild(final String modelBuild) {\n         this.modelBuild = modelBuild;\n         return this;\n@@ -73,6 +80,8 @@ public class QueryReader extends Reader<Query> {\n      * @param status The status of the resources to read\n      * @return this\n      */\n+\n+\n     public QueryReader setStatus(final String status) {\n         this.status = status;\n         return this;\n@@ -86,6 +95,8 @@ public class QueryReader extends Reader<Query> {\n      *                    [Dialogue](https://www.twilio.com/docs/autopilot/api/dialogue).\n      * @return this\n      */\n+\n+\n     public QueryReader setDialogueSid(final String dialogueSid) {\n         this.dialogueSid = dialogueSid;\n         return this;\n@@ -97,6 +108,8 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Query ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Query> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -108,6 +121,8 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Query ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Query> firstPage(final TwilioRestClient client) {\n@@ -115,7 +130,7 @@ public class QueryReader extends Reader<Query> {\n             HttpMethod.GET,\n             Domains.AUTOPILOT.toString(),\n             \"/v1/Assistants/\" + this.pathAssistantSid + \"/Queries\"\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -128,14 +143,13 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Query ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Query> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Query> getPage(final String targetUrl,\n+                               final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -146,13 +160,12 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Query> nextPage(final Page<Query> page,\n                                 final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.AUTOPILOT.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.AUTOPILOT.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -163,13 +176,12 @@ public class QueryReader extends Reader<Query> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Query> previousPage(final Page<Query> page,\n                                     final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.AUTOPILOT.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.AUTOPILOT.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -180,9 +192,11 @@ public class QueryReader extends Reader<Query> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Query> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Query> pageForRequest(final TwilioRestClient client,\n+                                       final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Query read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -190,15 +204,11 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"queries\",\n-            response.getContent(),\n-            Query.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"queries\", response.getContent(), Query.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -206,6 +216,8 @@ public class QueryReader extends Reader<Query> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (language != null) {\n             request.addQueryParam(\"Language\", language);\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/552/QueryReader.java\nindex e76b278623..38cf6b63ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/552/QueryReader.java\n@@ -190,7 +190,7 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/552/QueryReader.java\nindex e76b278623..bc90d63c3f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/552/QueryReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/552/QueryReader.java\n@@ -190,7 +190,8 @@ public class QueryReader extends Reader<Query> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}