{
    "error_id": "19",
    "information": {
        "errors": [
            {
                "line": "73",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        );\n        User signedUp = this.users.get(key);\n        if(signedUp == null) {\n            signedUp = new StoredUser(\n                username, email, provider, accessToken, this.storage\n            );",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/19/InMemoryUsers.java\nindex e2d46513ed..65bf20e725 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/19/InMemoryUsers.java\n@@ -70,7 +70,7 @@ public final class InMemoryUsers implements Users {\n             username, provider\n         );\n         User signedUp = this.users.get(key);\n-        if(signedUp == null) {\n+        if (signedUp == null) {\n             signedUp = new StoredUser(\n                 username, email, provider, accessToken, this.storage\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/19/InMemoryUsers.java\nindex e2d46513ed..0b43f2ba37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/19/InMemoryUsers.java\n@@ -1,13 +1,13 @@\n /**\n  * Copyright (c) 2020, Self XDSD Contributors\n  * All rights reserved.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"),\n  * to read the Software only. Permission is hereby NOT GRANTED to use, copy,\n  * modify, merge, publish, distribute, sublicense, and/or sell copies of\n  * the Software.\n- *\n+ * <p>\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.mock;\n \n import com.selfxdsd.api.User;\n@@ -70,7 +71,7 @@ public final class InMemoryUsers implements Users {\n             username, provider\n         );\n         User signedUp = this.users.get(key);\n-        if(signedUp == null) {\n+        if (signedUp == null) {\n             signedUp = new StoredUser(\n                 username, email, provider, accessToken, this.storage\n             );\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "72",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 105.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/19/InMemoryUsers.java\nindex e2d46513ed..28e86718b6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/19/InMemoryUsers.java\n@@ -66,16 +66,13 @@ public final class InMemoryUsers implements Users {\n         final String email,\n         final String accessToken\n     ) {\n-        final UserKey key = new UserKey(\n-            username, provider\n+        final UserKey key = new UserKey(username, provider\n         );\n         User signedUp = this.users.get(key);\n         if(signedUp == null) {\n-            signedUp = new StoredUser(\n-                username, email, provider, accessToken, this.storage\n+            signedUp = new StoredUser(username, email, provider, accessToken, this.storage\n             );\n-            this.users.put(\n-                key, signedUp\n+            this.users.put(key, signedUp\n             );\n         }\n         return signedUp;\n@@ -101,7 +98,8 @@ public final class InMemoryUsers implements Users {\n          * Username.\n          */\n         final String username;\n-        /**\n+\n+/**\n          * Provider.\n          */\n         final String provider;\n@@ -125,13 +123,12 @@ public final class InMemoryUsers implements Users {\n                 return false;\n             }\n             final UserKey userKey = (UserKey) object;\n-            return username.equals(userKey.username)\n-                && provider.equals(userKey.provider);\n-        }\n+            return username.equals(userKey.username)&& provider.equals(userKey.provider);\n+    }\n \n         @Override\n         public int hashCode() {\n             return Objects.hash(username, provider);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "77",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 68, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/19/InMemoryUsers.java\nindex e2d46513ed..49ebab2356 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/19/InMemoryUsers.java\n@@ -26,7 +26,6 @@ import com.selfxdsd.api.User;\n import com.selfxdsd.api.Users;\n import com.selfxdsd.api.storage.Storage;\n import com.selfxdsd.core.StoredUser;\n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -38,46 +37,47 @@ import java.util.Objects;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class InMemoryUsers implements Users {\n \n     /**\n      * User's \"table\".\n      */\n+\n+\n     private final Map<UserKey, User> users;\n \n     /**\n      * Parent storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Ctor.\n      * @param storage Parent storage.\n      */\n+\n+\n     public InMemoryUsers(final Storage storage) {\n         this.users = new HashMap<>();\n         this.storage = storage;\n     }\n \n     @Override\n-    public User signUp(\n-        final String username,\n-        final String provider,\n-        final String email,\n-        final String accessToken\n-    ) {\n-        final UserKey key = new UserKey(\n-            username, provider\n-        );\n+    public User signUp(final String username,\n+                       final String provider,\n+                       final String email, final String accessToken) {\n+        final UserKey key = new UserKey(username, provider);\n+\n+\n         User signedUp = this.users.get(key);\n-        if(signedUp == null) {\n-            signedUp = new StoredUser(\n-                username, email, provider, accessToken, this.storage\n-            );\n-            this.users.put(\n-                key, signedUp\n-            );\n-        }\n+        if( signedUp== null) {\n+                                 signedUp = new StoredUser(username, email, provider, accessToken, this.storage);\n+                                 this.users.put(key, signedUp);\n+                             }\n         return signedUp;\n     }\n \n@@ -95,15 +95,20 @@ public final class InMemoryUsers implements Users {\n      * User primary key.\n      * @checkstyle VisibilityModifier (50 lines)\n      */\n+\n     private static class UserKey {\n \n         /**\n          * Username.\n          */\n+\n+\n         final String username;\n         /**\n          * Provider.\n          */\n+\n+\n         final String provider;\n \n         /**\n@@ -111,6 +116,8 @@ public final class InMemoryUsers implements Users {\n          * @param username Given username.\n          * @param provider Given provider.\n          */\n+\n+\n         UserKey(final String username, final String provider) {\n             this.username = username;\n             this.provider = provider;\n@@ -118,15 +125,15 @@ public final class InMemoryUsers implements Users {\n \n         @Override\n         public boolean equals(final Object object) {\n-            if (this == object) {\n-                return true;\n-            }\n-            if (object == null || getClass() != object.getClass()) {\n-                return false;\n-            }\n-            final UserKey userKey = (UserKey) object;\n-            return username.equals(userKey.username)\n-                && provider.equals(userKey.provider);\n+            if(this== object) {\n+                                  return true;\n+                              }\n+            if( object== null|| getClass()!= object.getClass()) {\n+                                                                    return false;\n+                                                                }\n+\n+            final UserKey userKey = ( UserKey) object;\n+            return username.equals(userKey.username)&& provider.equals(userKey.provider);\n         }\n \n         @Override\n@@ -134,4 +141,4 @@ public final class InMemoryUsers implements Users {\n             return Objects.hash(username, provider);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/19/InMemoryUsers.java\nindex e2d46513ed..65bf20e725 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/19/InMemoryUsers.java\n@@ -70,7 +70,7 @@ public final class InMemoryUsers implements Users {\n             username, provider\n         );\n         User signedUp = this.users.get(key);\n-        if(signedUp == null) {\n+        if (signedUp == null) {\n             signedUp = new StoredUser(\n                 username, email, provider, accessToken, this.storage\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/19/InMemoryUsers.java\nindex e2d46513ed..65bf20e725 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/19/InMemoryUsers.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/19/InMemoryUsers.java\n@@ -70,7 +70,7 @@ public final class InMemoryUsers implements Users {\n             username, provider\n         );\n         User signedUp = this.users.get(key);\n-        if(signedUp == null) {\n+        if (signedUp == null) {\n             signedUp = new StoredUser(\n                 username, email, provider, accessToken, this.storage\n             );\n",
            "diff_size": 1
        }
    ]
}