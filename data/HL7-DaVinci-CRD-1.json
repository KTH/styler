{
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "warning",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    this.finder = finder;\n  }\n  public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n    return new CoverageRequirementRuleQuery(this.finder, criteria);\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/1/CoverageRequirementsRuleQueryFactory.java\nindex d1ab623a9e..5a45fc6344 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/1/CoverageRequirementsRuleQueryFactory.java\n@@ -10,6 +10,7 @@ public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFa\n   public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n     this.finder = finder;\n   }\n+\n   public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n     return new CoverageRequirementRuleQuery(this.finder, criteria);\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/1/CoverageRequirementsRuleQueryFactory.java\nindex d1ab623a9e..5a45fc6344 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/1/CoverageRequirementsRuleQueryFactory.java\n@@ -10,6 +10,7 @@ public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFa\n   public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n     this.finder = finder;\n   }\n+\n   public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n     return new CoverageRequirementRuleQuery(this.finder, criteria);\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/1/CoverageRequirementsRuleQueryFactory.java\nindex d1ab623a9e..7d0fa06915 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/1/CoverageRequirementsRuleQueryFactory.java\n@@ -4,13 +4,13 @@ import org.hl7.davinci.endpoint.components.AbstractCrdRuleQuery;\n import org.hl7.davinci.endpoint.components.AbstractCrdRuleQueryFactory;\n \n public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFactory {\n-\n   private CoverageRequirementRuleFinder finder;\n \n   public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n     this.finder = finder;\n   }\n-  public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n+\n+public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n     return new CoverageRequirementRuleQuery(this.finder, criteria);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/1/CoverageRequirementsRuleQueryFactory.java\nindex d1ab623a9e..4fdbadfea6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/1/CoverageRequirementsRuleQueryFactory.java\n@@ -3,14 +3,16 @@ package org.hl7.davinci.endpoint.database;\n import org.hl7.davinci.endpoint.components.AbstractCrdRuleQuery;\n import org.hl7.davinci.endpoint.components.AbstractCrdRuleQueryFactory;\n \n-public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFactory {\n \n-  private CoverageRequirementRuleFinder finder;\n+public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFactory {\n+    private CoverageRequirementRuleFinder finder;\n \n-  public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n+    public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n     this.finder = finder;\n-  }\n-  public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n+    }\n+\n+\n+    public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n     return new CoverageRequirementRuleQuery(this.finder, criteria);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/1/CoverageRequirementsRuleQueryFactory.java\nindex d1ab623a9e..5a45fc6344 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/1/CoverageRequirementsRuleQueryFactory.java\n@@ -10,6 +10,7 @@ public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFa\n   public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n     this.finder = finder;\n   }\n+\n   public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n     return new CoverageRequirementRuleQuery(this.finder, criteria);\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/1/CoverageRequirementsRuleQueryFactory.java\nindex d1ab623a9e..5a45fc6344 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/1/CoverageRequirementsRuleQueryFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/1/CoverageRequirementsRuleQueryFactory.java\n@@ -10,6 +10,7 @@ public class CoverageRequirementsRuleQueryFactory extends AbstractCrdRuleQueryFa\n   public CoverageRequirementsRuleQueryFactory(CoverageRequirementRuleFinder finder) {\n     this.finder = finder;\n   }\n+\n   public AbstractCrdRuleQuery create(CoverageRequirementRuleCriteria criteria) {\n     return new CoverageRequirementRuleQuery(this.finder, criteria);\n   }\n",
            "diff_size": 1
        }
    ]
}