{
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 129).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest, FileStore fileStore) {\n    FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSignRequest.getPrefetch(), fileStore);\n    fhirBundleProcessor.processDeviceRequests();\n    fhirBundleProcessor.processMedicationRequests();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/41/OrderSignService.java\nindex 8efd97985b..b993baba5f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/41/OrderSignService.java\n@@ -38,10 +38,13 @@ public class OrderSignService extends CdsService<OrderSignRequest> {\n   public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n   static final Logger logger = LoggerFactory.getLogger(OrderSignService.class);\n \n-  public OrderSignService() { super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS); }\n+  public OrderSignService() {\n+    super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n+  }\n \n   @Override\n-  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest, FileStore fileStore) {\n+  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest,\n+                                                                        FileStore fileStore) {\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSignRequest.getPrefetch(), fileStore);\n     fhirBundleProcessor.processDeviceRequests();\n     fhirBundleProcessor.processMedicationRequests();\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/41/OrderSignService.java\nindex 8efd97985b..1ded29c5ce 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/41/OrderSignService.java\n@@ -24,6 +24,7 @@ import org.springframework.stereotype.Component;\n @Component(\"r4_OrderSignService\")\n public class OrderSignService extends CdsService<OrderSignRequest> {\n \n+\n   public static final String ID = \"order-sign-crd\";\n   public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n   public static final Hook HOOK = Hook.ORDER_SIGN;\n@@ -36,9 +37,12 @@ public class OrderSignService extends CdsService<OrderSignRequest> {\n       CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n       CrdPrefetchTemplateElements.SERVICE_REQUEST_BUNDLE);\n   public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n-  static final Logger logger = LoggerFactory.getLogger(OrderSignService.class);\n \n-  public OrderSignService() { super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS); }\n+static final Logger logger = LoggerFactory.getLogger(OrderSignService.class);\n+\n+  public OrderSignService() {\n+  super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n+  }\n \n   @Override\n   public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest, FileStore fileStore) {\n@@ -53,4 +57,4 @@ public class OrderSignService extends CdsService<OrderSignRequest> {\n     }\n     return results;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 349).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/41/OrderSignService.java\nindex 8efd97985b..4eb85387e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/41/OrderSignService.java\n@@ -3,7 +3,6 @@ package org.hl7.davinci.endpoint.cdshooks.services.crd.r4;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n-\n import ca.uhn.fhir.context.FhirContext;\n import ca.uhn.fhir.parser.IParser;\n import org.cdshooks.Hook;\n@@ -24,33 +23,30 @@ import org.springframework.stereotype.Component;\n @Component(\"r4_OrderSignService\")\n public class OrderSignService extends CdsService<OrderSignRequest> {\n \n-  public static final String ID = \"order-sign-crd\";\n-  public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n-  public static final Hook HOOK = Hook.ORDER_SIGN;\n-  public static final String DESCRIPTION =\n-      \"Get information regarding the coverage requirements for durable medical equipment\";\n-  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-      CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n-      CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n-      CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n-      CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n-      CrdPrefetchTemplateElements.SERVICE_REQUEST_BUNDLE);\n-  public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n-  static final Logger logger = LoggerFactory.getLogger(OrderSignService.class);\n-\n-  public OrderSignService() { super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS); }\n-\n-  @Override\n-  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest, FileStore fileStore) {\n+\n+    public static final String ID = \"order-sign-crd\";\n+    public static final String TITLE = \"order-select Coverage Requirements Discovery\";\n+    public static final Hook HOOK = Hook.ORDER_SIGN;\n+    public static final String DESCRIPTION = \"Get information regarding the coverage requirements for durable medical equipment\";\n+    public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE, CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE, CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE, CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE, CrdPrefetchTemplateElements.SERVICE_REQUEST_BUNDLE);\n+    public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n+    static final Logger logger = LoggerFactory.getLogger(OrderSignService.class);\n+\n+    public OrderSignService() {\n+    super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n+    }\n+\n+\n+    @Override\n+    public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest, FileStore fileStore) {\n     FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSignRequest.getPrefetch(), fileStore);\n     fhirBundleProcessor.processDeviceRequests();\n     fhirBundleProcessor.processMedicationRequests();\n     fhirBundleProcessor.processServiceRequests();\n     List<CoverageRequirementRuleResult> results = fhirBundleProcessor.getResults();\n-\n     if (results.isEmpty()) {\n-      throw RequestIncompleteException.NoSupportedBundlesFound();\n+        throw RequestIncompleteException.NoSupportedBundlesFound();\n     }\n     return results;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "column": "72",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'fileStore' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "column": "15",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/41/OrderSignService.java\nindex 8efd97985b..15bac5d5c5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/41/OrderSignService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/41/OrderSignService.java\n@@ -41,8 +41,10 @@ public class OrderSignService extends CdsService<OrderSignRequest> {\n   public OrderSignService() { super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS); }\n \n   @Override\n-  public List<CoverageRequirementRuleResult> createCqlExecutionContexts(OrderSignRequest orderSignRequest, FileStore fileStore) {\n-    FhirBundleProcessor fhirBundleProcessor = new FhirBundleProcessor(orderSignRequest.getPrefetch(), fileStore);\n+  public List<CoverageRequirementRuleResult> createCqlExecutionContexts( OrderSignRequest orderSignRequest, FileStore\n+    fileStore ){FhirBundleProcessorfhirBundleProcessor\n+\n+  = new FhirBundleProcessor(orderSignRequest.getPrefetch(), fileStore);\n     fhirBundleProcessor.processDeviceRequests();\n     fhirBundleProcessor.processMedicationRequests();\n     fhirBundleProcessor.processServiceRequests();\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}