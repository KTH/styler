{
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "246",
                "severity": "warning",
                "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "            })\n        )\n        .take(1);\n\n        return\n            observable",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/100/DefaultConfigurationProvider.java\nindex 726bf06764..13d002f8e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/100/DefaultConfigurationProvider.java\n@@ -242,11 +242,10 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n                     return node;\n                 }\n             })\n-        )\n-        .take(1);\n+        ).take(1);\n \n         return\n-            observable\n+        observable\n             .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n                 @Override\n                 public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "184",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 16, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 8, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/100/DefaultConfigurationProvider.java\nindex 726bf06764..3ad0ed34e2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/100/DefaultConfigurationProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.config;\n \n import com.couchbase.client.core.ClusterFacade;\n@@ -48,38 +49,36 @@ import java.util.Set;\n \n /**\n  * **The default implementation of a {@link ConfigurationProvider}.**\n- *\n+ * <p>\n  * The {@link ConfigurationProvider} is the central orchestrator for configuration management. Observers can observe\n  * bucket and cluster configurations from this component. Behind the scenes, it facilitates configuration loaders and\n  * configuration refreshers that grab initial configurations and keep them refreshed respectively. The structure\n  * looks like this:\n- *\n+ * <p>\n  * ![Configuration Provider Architecture](architecture.png)\n  *\n+ * @author Michael Nitschinger\n  * @startuml architecture.png\n- *\n- *     [ConfigurationProvider] --> [Config from REST]\n- *     [ConfigurationProvider] --> [Config from Carrier]\n- *\n- *     package \"Config from REST\" {\n- *         [HttpLoader]\n- *         [HttpRefresher]\n- *     }\n- *\n- *     [HttpLoader] --> 8091\n- *     [HttpRefresher] --> 8091\n- *\n- *     package \"Config from Carrier\" {\n- *         [CarrierLoader]\n- *         [CarrierRefresher]\n- *     }\n- *\n- *     [CarrierLoader] --> 11210\n- *     [CarrierRefresher] --> 11210\n- *\n+ * <p>\n+ * [ConfigurationProvider] --> [Config from REST]\n+ * [ConfigurationProvider] --> [Config from Carrier]\n+ * <p>\n+ * package \"Config from REST\" {\n+ * [HttpLoader]\n+ * [HttpRefresher]\n+ * }\n+ * <p>\n+ * [HttpLoader] --> 8091\n+ * [HttpRefresher] --> 8091\n+ * <p>\n+ * package \"Config from Carrier\" {\n+ * [CarrierLoader]\n+ * [CarrierRefresher]\n+ * }\n+ * <p>\n+ * [CarrierLoader] --> 11210\n+ * [CarrierRefresher] --> 11210\n  * @enduml\n- *\n- * @author Michael Nitschinger\n  * @since 1.0\n  */\n public class DefaultConfigurationProvider implements ConfigurationProvider {\n@@ -121,11 +120,11 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n \n     /**\n      * Create a new {@link DefaultConfigurationProvider}.\n-     *\n+     * <p>\n      * When this constructor is used, the default loader chain is populated (first carrier is tried and the http\n      * loader is registered as a fallback).\n      *\n-     * @param cluster the cluster reference.\n+     * @param cluster     the cluster reference.\n      * @param environment the environment.\n      */\n     public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment) {\n@@ -145,12 +144,12 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n     /**\n      * Create a new {@link DefaultConfigurationProvider}.\n      *\n-     * @param cluster the cluster reference.\n+     * @param cluster     the cluster reference.\n      * @param environment the environment.\n      * @param loaderChain the configuration loaders which will be tried in sequence.\n      */\n     public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment,\n-        final List<Loader> loaderChain, final Map<LoaderType, Refresher> refreshers) {\n+                                        final List<Loader> loaderChain, final Map<LoaderType, Refresher> refreshers) {\n         if (cluster == null) {\n             throw new IllegalArgumentException(\"A cluster reference needs to be provided\");\n         }\n@@ -182,11 +181,11 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n                     return refresher.configs();\n                 }\n             }).subscribe(new Action1<BucketConfig>() {\n-                @Override\n-                public void call(BucketConfig bucketConfig) {\n-                    upsertBucketConfig(bucketConfig);\n-                }\n-            });\n+            @Override\n+            public void call(BucketConfig bucketConfig) {\n+                upsertBucketConfig(bucketConfig);\n+            }\n+        });\n     }\n \n     @Override\n@@ -243,46 +242,47 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n                 }\n             })\n         )\n-        .take(1);\n+            .take(1);\n \n         return\n             observable\n-            .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n-                @Override\n-                public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n-                    registerBucketForRefresh(tuple.value1(), tuple.value2());\n-                }\n-            })\n-            .map(new Func1<Tuple2<LoaderType, BucketConfig>, ClusterConfig>() {\n-                @Override\n-                public ClusterConfig call(final Tuple2<LoaderType, BucketConfig> tuple) {\n-                    upsertBucketConfig(tuple.value2());\n-                    return currentConfig;\n-                }\n-            })\n-            .doOnNext(new Action1<ClusterConfig>() {\n-                @Override\n-                public void call(ClusterConfig clusterConfig) {\n-                    LOGGER.info(\"Opened bucket \" + bucket);\n-                    if (eventBus != null && eventBus.hasSubscribers()) {\n-                        eventBus.publish(new BucketOpenedEvent(bucket));\n+                .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n+                    @Override\n+                    public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n+                        registerBucketForRefresh(tuple.value1(), tuple.value2());\n                     }\n-                    bootstrapped = true;\n-                }\n-            })\n-            .doOnError(new Action1<Throwable>() {\n-                @Override\n-                public void call(Throwable throwable) {\n-                    LOGGER.debug(\"Explicitly closing bucket {} after failed open attempt to clean resources.\", bucket);\n-                    removeBucketConfig(bucket);\n-                }\n-            })\n-            .onErrorResumeNext(new Func1<Throwable, Observable<ClusterConfig>>() {\n-                @Override\n-                public Observable<ClusterConfig> call(final Throwable throwable) {\n-                    return Observable.error(new ConfigurationException(\"Could not open bucket.\", throwable));\n-                }\n-            });\n+                })\n+                .map(new Func1<Tuple2<LoaderType, BucketConfig>, ClusterConfig>() {\n+                    @Override\n+                    public ClusterConfig call(final Tuple2<LoaderType, BucketConfig> tuple) {\n+                        upsertBucketConfig(tuple.value2());\n+                        return currentConfig;\n+                    }\n+                })\n+                .doOnNext(new Action1<ClusterConfig>() {\n+                    @Override\n+                    public void call(ClusterConfig clusterConfig) {\n+                        LOGGER.info(\"Opened bucket \" + bucket);\n+                        if (eventBus != null && eventBus.hasSubscribers()) {\n+                            eventBus.publish(new BucketOpenedEvent(bucket));\n+                        }\n+                        bootstrapped = true;\n+                    }\n+                })\n+                .doOnError(new Action1<Throwable>() {\n+                    @Override\n+                    public void call(Throwable throwable) {\n+                        LOGGER.debug(\"Explicitly closing bucket {} after failed open attempt to clean resources.\",\n+                            bucket);\n+                        removeBucketConfig(bucket);\n+                    }\n+                })\n+                .onErrorResumeNext(new Func1<Throwable, Observable<ClusterConfig>>() {\n+                    @Override\n+                    public Observable<ClusterConfig> call(final Throwable throwable) {\n+                        return Observable.error(new ConfigurationException(\"Could not open bucket.\", throwable));\n+                    }\n+                });\n     }\n \n     @Override\n@@ -356,7 +356,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      * Helper method which registers (after a {@link #openBucket(String, String)} call) the bucket for config\n      * refreshes.\n      *\n-     * @param loaderType the type of the lader used to determine the proper refresher.\n+     * @param loaderType   the type of the lader used to determine the proper refresher.\n      * @param bucketConfig the config itself.\n      */\n     private void registerBucketForRefresh(final LoaderType loaderType, final BucketConfig bucketConfig) {\n@@ -371,7 +371,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n \n     /**\n      * Helper method which takes the given bucket config and applies it to the cluster config.\n-     *\n+     * <p>\n      * This method also sends out an update to the subject afterwards, so that observers are notified.\n      *\n      * @param newConfig the configuration of the bucket.\n",
            "diff_size": 89
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/100/DefaultConfigurationProvider.java\nindex 726bf06764..547274e1a4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/100/DefaultConfigurationProvider.java\n@@ -129,11 +129,9 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      * @param environment the environment.\n      */\n     public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment) {\n-        this(\n-            cluster,\n+        this(cluster,\n             environment,\n-            Arrays.asList((Loader) new CarrierLoader(cluster, environment), new HttpLoader(cluster, environment)),\n-            new HashMap<LoaderType, Refresher>() {\n+            Arrays.asList((Loader) new CarrierLoader(cluster, environment), new HttpLoader(cluster, environment)), new HashMap<LoaderType, Refresher>() {\n                 {\n                     put(LoaderType.Carrier, new CarrierRefresher(environment, cluster));\n                     put(LoaderType.HTTP, new HttpRefresher(environment, cluster));\n@@ -151,7 +149,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      */\n     public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment,\n         final List<Loader> loaderChain, final Map<LoaderType, Refresher> refreshers) {\n-        if (cluster == null) {\n+    if (cluster == null) {\n             throw new IllegalArgumentException(\"A cluster reference needs to be provided\");\n         }\n         if (loaderChain == null || loaderChain.isEmpty()) {\n@@ -167,9 +165,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         seedHosts = null;\n         bootstrapped = false;\n         currentConfig = new DefaultClusterConfig();\n-\n-        Observable\n-            .from(refreshers.values())\n+Observable.from(refreshers.values())\n             .doOnNext(new Action1<Refresher>() {\n                 @Override\n                 public void call(Refresher refresher) {\n@@ -228,26 +224,21 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n             return Observable.error(new ConfigurationException(\"Seed node list not provided or empty.\"));\n         }\n \n-        Observable<Tuple2<LoaderType, BucketConfig>> observable = Observable.mergeDelayError(Observable\n-            .from(seedHosts)\n+        Observable<Tuple2<LoaderType, BucketConfig>> observable = Observable.mergeDelayError(Observable.from(seedHosts)\n             .map(new Func1<InetAddress, Observable<Tuple2<LoaderType, BucketConfig>>>() {\n                 @Override\n                 public Observable<Tuple2<LoaderType, BucketConfig>> call(InetAddress seedHost) {\n                     Observable<Tuple2<LoaderType, BucketConfig>> node = loaderChain.get(0)\n                         .loadConfig(seedHost, bucket, password);\n-                    for (int i = 1; i < loaderChain.size(); i++) {\n-                        node = node.onErrorResumeNext(loaderChain.get(i)\n-                            .loadConfig(seedHost, bucket, password));\n-                    }\n+for (int i = 1; i < loaderChain.size(); i++) {\n+                        node = node.onErrorResumeNext(loaderChain.get(i).loadConfig(seedHost, bucket, password));\n+    }\n                     return node;\n                 }\n-            })\n-        )\n+            }))\n         .take(1);\n \n-        return\n-            observable\n-            .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n+        return observable.doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n                 @Override\n                 public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n                     registerBucketForRefresh(tuple.value1(), tuple.value2());\n@@ -309,8 +300,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         }\n \n         Set<String> configs = new HashSet<String>(currentConfig.bucketConfigs().keySet());\n-        return Observable\n-            .from(configs)\n+        return Observable.from(configs)\n             .observeOn(environment.scheduler())\n             .flatMap(new Func1<String, Observable<? extends ClusterConfig>>() {\n                 @Override\n@@ -422,4 +412,4 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         currentConfig = cluster;\n         configObservable.onNext(currentConfig);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 179, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 247).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 179, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 241).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 175, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 49, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 53, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 49, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 44, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 51, expected level should be one of the following: 48, 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 55, expected level should be one of the following: 52, 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 51, expected level should be one of the following: 48, 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 46, expected level should be one of the following: 44, 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 52, expected level should be one of the following: 50, 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 56, expected level should be one of the following: 54, 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 52, expected level should be one of the following: 50, 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 8, expected level should be one of the following: 46, 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 124, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 204).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "229",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 128, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "229",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 128, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 132, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "232",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 128, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 128, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 124, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 119, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 29, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 33, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 29, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 22, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "245",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 22, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "247",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 17, expected level should be one of the following: 15, 19.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 24, expected level should be one of the following: 21, 25.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 28, expected level should be one of the following: 25, 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 28, expected level should be one of the following: 25, 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 32, expected level should be one of the following: 29, 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 28, expected level should be one of the following: 25, 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 28, expected level should be one of the following: 25, 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 24, expected level should be one of the following: 21, 25.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 19, expected level should be one of the following: 17, 21.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "258",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 26, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "260",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 30, expected level should be one of the following: 27, 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "260",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "261",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 30, expected level should be one of the following: 27, 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 26, expected level should be one of the following: 23, 27.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 21, expected level should be one of the following: 19, 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 28, expected level should be one of the following: 25, 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be one of the following: 29, 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 28, expected level should be one of the following: 25, 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 21, 25.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "275",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 41, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "277",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 45, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "278",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 45, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 45, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "283",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 41, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 36, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "295",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 79, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "296",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "297",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 83, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "298",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 79, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 74, expected level should be one of the following: 8, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "300",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 88, expected level should be one of the following: 78, 82.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "301",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "302",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 92, expected level should be one of the following: 82, 86.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 88, expected level should be one of the following: 78, 82.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "304",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 83, expected level should be one of the following: 74, 78.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/100/DefaultConfigurationProvider.java\nindex 726bf06764..4618da3033 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/100/DefaultConfigurationProvider.java\n@@ -35,7 +35,6 @@ import rx.functions.Action1;\n import rx.functions.Func1;\n import rx.subjects.PublishSubject;\n import rx.subjects.Subject;\n-\n import java.net.InetAddress;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -82,11 +81,14 @@ import java.util.Set;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n+\n public class DefaultConfigurationProvider implements ConfigurationProvider {\n \n     /**\n      * The logger used.\n      */\n+\n     private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(ConfigurationProvider.class);\n \n     /**\n@@ -98,7 +100,6 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      * The observable which will push out new config changes to interested parties.\n      */\n     private final Subject<ClusterConfig, ClusterConfig> configObservable;\n-\n     private final List<Loader> loaderChain;\n     private final Map<LoaderType, Refresher> refreshers;\n     private final CoreEnvironment environment;\n@@ -128,18 +129,15 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      * @param cluster the cluster reference.\n      * @param environment the environment.\n      */\n+\n     public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment) {\n-        this(\n-            cluster,\n-            environment,\n-            Arrays.asList((Loader) new CarrierLoader(cluster, environment), new HttpLoader(cluster, environment)),\n-            new HashMap<LoaderType, Refresher>() {\n+        this(cluster, environment, Arrays.asList((Loader) new CarrierLoader(cluster, environment), new HttpLoader(cluster, environment)), new HashMap<LoaderType, Refresher>() {\n+\n                 {\n-                    put(LoaderType.Carrier, new CarrierRefresher(environment, cluster));\n-                    put(LoaderType.HTTP, new HttpRefresher(environment, cluster));\n-                }\n-            }\n-        );\n+                                                                                                                                                                                   put(LoaderType.Carrier, new CarrierRefresher(environment, cluster));\n+                                                                                                                                                                                   put(LoaderType.HTTP, new HttpRefresher(environment, cluster));\n+                                                                                                                                                                               }\n+        });\n     }\n \n     /**\n@@ -149,11 +147,12 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      * @param environment the environment.\n      * @param loaderChain the configuration loaders which will be tried in sequence.\n      */\n-    public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment,\n-        final List<Loader> loaderChain, final Map<LoaderType, Refresher> refreshers) {\n+\n+    public DefaultConfigurationProvider(final ClusterFacade cluster, final CoreEnvironment environment, final List<Loader> loaderChain, final Map<LoaderType, Refresher> refreshers) {\n         if (cluster == null) {\n             throw new IllegalArgumentException(\"A cluster reference needs to be provided\");\n         }\n+\n         if (loaderChain == null || loaderChain.isEmpty()) {\n             throw new IllegalArgumentException(\"At least one config loader needs to be provided\");\n         }\n@@ -162,31 +161,26 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         this.refreshers = refreshers;\n         this.environment = environment;\n         this.eventBus = environment.eventBus();\n-\n         configObservable = PublishSubject.<ClusterConfig>create().toSerialized();\n         seedHosts = null;\n         bootstrapped = false;\n         currentConfig = new DefaultClusterConfig();\n-\n-        Observable\n-            .from(refreshers.values())\n-            .doOnNext(new Action1<Refresher>() {\n-                @Override\n-                public void call(Refresher refresher) {\n-                    refresher.provider(DefaultConfigurationProvider.this);\n-                }\n-            })\n-            .flatMap(new Func1<Refresher, Observable<BucketConfig>>() {\n-                @Override\n-                public Observable<BucketConfig> call(Refresher refresher) {\n-                    return refresher.configs();\n-                }\n-            }).subscribe(new Action1<BucketConfig>() {\n-                @Override\n-                public void call(BucketConfig bucketConfig) {\n-                    upsertBucketConfig(bucketConfig);\n-                }\n-            });\n+        Observable.from(refreshers.values()).doOnNext(new Action1<Refresher>() {\n+                                                 @Override\n+                                                 public void call(Refresher refresher) {\n+                                                     refresher.provider(DefaultConfigurationProvider.this);\n+                                                 }\n+                                            }).flatMap(new Func1<Refresher, Observable<BucketConfig>>() {\n+                                                   @Override\n+                                                   public Observable<BucketConfig> call(Refresher refresher) {\n+                                                       return refresher.configs();\n+                                                   }\n+                                              }).subscribe(new Action1<BucketConfig>() {\n+                                                    @Override\n+                                                    public void call(BucketConfig bucketConfig) {\n+                                                        upsertBucketConfig(bucketConfig);\n+                                                    }\n+        });\n     }\n \n     @Override\n@@ -205,7 +199,9 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n             LOGGER.debug(\"Seed hosts called with {}, but already bootstrapped.\", hosts);\n             return false;\n         }\n-        LOGGER.debug(\"Setting seed hosts to {}\", hosts);\n+\n+        LOGGER.debug(\"Setting seed hosts to {}\",\n+hosts);\n         if (shuffle) {\n             List<InetAddress> hostsList = new ArrayList<InetAddress>(hosts);\n             Collections.shuffle(hostsList);\n@@ -227,78 +223,65 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         if (seedHosts == null || seedHosts.isEmpty()) {\n             return Observable.error(new ConfigurationException(\"Seed node list not provided or empty.\"));\n         }\n-\n-        Observable<Tuple2<LoaderType, BucketConfig>> observable = Observable.mergeDelayError(Observable\n-            .from(seedHosts)\n-            .map(new Func1<InetAddress, Observable<Tuple2<LoaderType, BucketConfig>>>() {\n-                @Override\n-                public Observable<Tuple2<LoaderType, BucketConfig>> call(InetAddress seedHost) {\n-                    Observable<Tuple2<LoaderType, BucketConfig>> node = loaderChain.get(0)\n-                        .loadConfig(seedHost, bucket, password);\n-                    for (int i = 1; i < loaderChain.size(); i++) {\n-                        node = node.onErrorResumeNext(loaderChain.get(i)\n-                            .loadConfig(seedHost, bucket, password));\n-                    }\n-                    return node;\n-                }\n-            })\n-        )\n-        .take(1);\n-\n-        return\n-            observable\n-            .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n-                @Override\n-                public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n-                    registerBucketForRefresh(tuple.value1(), tuple.value2());\n-                }\n-            })\n-            .map(new Func1<Tuple2<LoaderType, BucketConfig>, ClusterConfig>() {\n-                @Override\n-                public ClusterConfig call(final Tuple2<LoaderType, BucketConfig> tuple) {\n-                    upsertBucketConfig(tuple.value2());\n-                    return currentConfig;\n-                }\n-            })\n-            .doOnNext(new Action1<ClusterConfig>() {\n-                @Override\n-                public void call(ClusterConfig clusterConfig) {\n-                    LOGGER.info(\"Opened bucket \" + bucket);\n-                    if (eventBus != null && eventBus.hasSubscribers()) {\n-                        eventBus.publish(new BucketOpenedEvent(bucket));\n-                    }\n-                    bootstrapped = true;\n-                }\n-            })\n-            .doOnError(new Action1<Throwable>() {\n-                @Override\n-                public void call(Throwable throwable) {\n-                    LOGGER.debug(\"Explicitly closing bucket {} after failed open attempt to clean resources.\", bucket);\n-                    removeBucketConfig(bucket);\n-                }\n-            })\n-            .onErrorResumeNext(new Func1<Throwable, Observable<ClusterConfig>>() {\n-                @Override\n-                public Observable<ClusterConfig> call(final Throwable throwable) {\n-                    return Observable.error(new ConfigurationException(\"Could not open bucket.\", throwable));\n-                }\n-            });\n+        Observable<Tuple2<LoaderType, BucketConfig>> observable = Observable.mergeDelayError(Observable.from(seedHosts).map(new Func1<InetAddress, Observable<Tuple2<LoaderType, BucketConfig>>>() {\n+                                                                                                                            @Override\n+                                                                                                                            public Observable<Tuple2<LoaderType, BucketConfig>> call(InetAddress seedHost) {\n+                                                                                                                                Observable<Tuple2<LoaderType, BucketConfig>> node = loaderChain.get(0).loadConfig(seedHost, bucket, password);\n+                                                                                                                                for (int i = 1; i < loaderChain.size(); i++) {\n+                                                                                                                                    node = node.onErrorResumeNext(loaderChain.get(i).loadConfig(seedHost, bucket, password));\n+                                                                                                                                }\n+                                                                                                                                return node;\n+                                                                                                                            }\n+                                                                                                                       })).take(1);\n+        return observable.doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n+                             @Override\n+                             public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n+                                 registerBucketForRefresh(tuple.value1(), tuple.value2());\n+                             }\n+               }).map(new Func1<Tuple2<LoaderType, BucketConfig>, ClusterConfig>() {\n+                      @Override\n+                      public ClusterConfig call(final Tuple2<LoaderType, BucketConfig> tuple) {\n+                          upsertBucketConfig(tuple.value2());\n+                          return currentConfig;\n+                      }\n+                 }).doOnNext(new Action1<ClusterConfig>() {\n+                        @Override\n+                        public void call(ClusterConfig clusterConfig) {\n+                            LOGGER.info(\"Opened bucket \" + bucket);\n+                            if (eventBus != null && eventBus.hasSubscribers()) {\n+                                eventBus.publish(new BucketOpenedEvent(bucket));\n+                            }\n+\n+                            bootstrapped = true;\n+                        }\n+                   }).doOnError(new Action1<Throwable>() {\n+                          @Override\n+                          public void call(Throwable throwable) {\n+                              LOGGER.debug(\"Explicitly closing bucket {} after failed open attempt to clean resources.\", bucket);\n+                              removeBucketConfig(bucket);\n+                          }\n+                     }).onErrorResumeNext(new Func1<Throwable, Observable<ClusterConfig>>() {\n+                            @Override\n+                            public Observable<ClusterConfig> call(final Throwable throwable) {\n+                                return Observable.error(new ConfigurationException(\"Could not open bucket.\", throwable));\n+                            }\n+                       });\n     }\n \n     @Override\n     public Observable<ClusterConfig> closeBucket(String name) {\n         LOGGER.debug(\"Closing bucket {}\", name);\n         return Observable.just(name).map(new Func1<String, ClusterConfig>() {\n-            @Override\n-            public ClusterConfig call(String bucket) {\n-                removeBucketConfig(bucket);\n-                LOGGER.info(\"Closed bucket \" + bucket);\n-                if (eventBus != null && eventBus.hasSubscribers()) {\n-                    eventBus.publish(new BucketClosedEvent(bucket));\n-                }\n-                return currentConfig;\n-            }\n-        });\n+                                         @Override\n+                                         public ClusterConfig call(String bucket) {\n+                                             removeBucketConfig(bucket);\n+                                             LOGGER.info(\"Closed bucket \" + bucket);\n+                                             if (eventBus != null && eventBus.hasSubscribers()) {\n+                                                 eventBus.publish(new BucketClosedEvent(bucket));\n+                                             }\n+                                             return currentConfig;\n+                                         }\n+                                    });\n     }\n \n     @Override\n@@ -307,24 +290,18 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         if (currentConfig == null || currentConfig.bucketConfigs().isEmpty()) {\n             return Observable.just(true);\n         }\n-\n         Set<String> configs = new HashSet<String>(currentConfig.bucketConfigs().keySet());\n-        return Observable\n-            .from(configs)\n-            .observeOn(environment.scheduler())\n-            .flatMap(new Func1<String, Observable<? extends ClusterConfig>>() {\n-                @Override\n-                public Observable<? extends ClusterConfig> call(String bucketName) {\n-                    return closeBucket(bucketName);\n-                }\n-            })\n-            .last()\n-            .map(new Func1<ClusterConfig, Boolean>() {\n-                @Override\n-                public Boolean call(ClusterConfig clusterConfig) {\n-                    return true;\n-                }\n-            });\n+        return Observable.from(configs).observeOn(environment.scheduler()).flatMap(new Func1<String, Observable<? extends ClusterConfig>>() {\n+                                                                               @Override\n+                                                                               public Observable<? extends ClusterConfig> call(String bucketName) {\n+                                                                                   return closeBucket(bucketName);\n+                                                                               }\n+                                                                          }).last().map(new Func1<ClusterConfig, Boolean>() {\n+                                                                                        @Override\n+                                                                                        public Boolean call(ClusterConfig clusterConfig) {\n+                                                                                            return true;\n+                                                                                        }\n+                                                                                   });\n     }\n \n     @Override\n@@ -333,7 +310,6 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         if (LOGGER.isTraceEnabled()) {\n             LOGGER.trace(\"Proposed raw config is {}\", rawConfig);\n         }\n-\n         BucketConfig config = BucketConfigParser.parse(rawConfig, environment);\n         upsertBucketConfig(config);\n     }\n@@ -341,12 +317,10 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n     @Override\n     public void signalOutdated() {\n         LOGGER.debug(\"Received signal to proactively refresh (a maybe outdated) configuration.\");\n-\n         if (currentConfig.bucketConfigs().isEmpty()) {\n             LOGGER.debug(\"Ignoring outdated signal, since no buckets are open.\");\n             return;\n         }\n-\n         for (Refresher refresher : refreshers.values()) {\n             refresher.refresh(currentConfig);\n         }\n@@ -359,6 +333,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      * @param loaderType the type of the lader used to determine the proper refresher.\n      * @param bucketConfig the config itself.\n      */\n+\n     private void registerBucketForRefresh(final LoaderType loaderType, final BucketConfig bucketConfig) {\n         LOGGER.debug(\"Registering Bucket {} to refresh at Loader {}\", bucketConfig.name(), loaderType);\n         Refresher refresher = refreshers.get(loaderType);\n@@ -376,10 +351,10 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      *\n      * @param newConfig the configuration of the bucket.\n      */\n+\n     private void upsertBucketConfig(final BucketConfig newConfig) {\n         ClusterConfig cluster = currentConfig;\n         BucketConfig oldConfig = cluster.bucketConfig(newConfig.name());\n-\n         if (newConfig.rev() > 0 && oldConfig != null && newConfig.rev() <= oldConfig.rev()) {\n             LOGGER.trace(\"Not applying new configuration, older rev ID.\");\n             return;\n@@ -389,15 +364,14 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         // make sure to transfer the password over to the new config. Otherwise it\n         // is possible that authentication errors because of a null password arise.\n         // See JVMCBC-185\n+\n         if (newConfig.password() == null && oldConfig != null) {\n             newConfig.password(oldConfig.password());\n         }\n \n         cluster.setBucketConfig(newConfig.name(), newConfig);\n         LOGGER.debug(\"Applying new configuration {}\", newConfig);\n-\n         currentConfig = cluster;\n-\n         boolean tainted = newConfig.tainted();\n         for (Refresher refresher : refreshers.values()) {\n             if (tainted) {\n@@ -415,6 +389,7 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n      *\n      * @param name the name of the bucket.\n      */\n+\n     private void removeBucketConfig(final String name) {\n         LOGGER.debug(\"Removing bucket {} configuration from known configs.\", name);\n         ClusterConfig cluster = currentConfig;\n@@ -422,4 +397,4 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n         currentConfig = cluster;\n         configObservable.onNext(currentConfig);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 137
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/100/DefaultConfigurationProvider.java\nindex 726bf06764..13d002f8e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/100/DefaultConfigurationProvider.java\n@@ -242,11 +242,10 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n                     return node;\n                 }\n             })\n-        )\n-        .take(1);\n+        ).take(1);\n \n         return\n-            observable\n+        observable\n             .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n                 @Override\n                 public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/100/DefaultConfigurationProvider.java\nindex 726bf06764..89ccce16f1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/100/DefaultConfigurationProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/100/DefaultConfigurationProvider.java\n@@ -243,11 +243,10 @@ public class DefaultConfigurationProvider implements ConfigurationProvider {\n                 }\n             })\n         )\n-        .take(1);\n+            .take(1);\n \n         return\n-            observable\n-            .doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n+        observable.doOnNext(new Action1<Tuple2<LoaderType, BucketConfig>>() {\n                 @Override\n                 public void call(final Tuple2<LoaderType, BucketConfig> tuple) {\n                     registerBucketForRefresh(tuple.value1(), tuple.value2());\n",
            "diff_size": 3
        }
    ]
}