{
    "error_id": "146",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "54",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "     * @throws IllegalArgumentException if source is null.\n     */\n    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n        super(source);\n        this.dataFlowContext = dataFlowContext;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/146/BusinessServiceDataFlowEvent.java\nindex c93481aec9..079a0a5e09 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/146/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/146/BusinessServiceDataFlowEvent.java\nindex c93481aec9..8374734cda 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/146/BusinessServiceDataFlowEvent.java\n@@ -9,22 +9,23 @@ import java.util.EventObject;\n  */\n public class BusinessServiceDataFlowEvent extends EventObject {\n \n-    private DataFlowContext dataFlowContext;\n-    /**\n-     * Constructs a prototypical Event.\n-     *\n-     * @param source The object on which the Event initially occurred.\n-     * @throws IllegalArgumentException if source is null.\n-     */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n-        super(source);\n-        this.dataFlowContext = dataFlowContext;\n-    }\n+  private DataFlowContext dataFlowContext;\n+\n+  /**\n+   * Constructs a prototypical Event.\n+   *\n+   * @param source The object on which the Event initially occurred.\n+   * @throws IllegalArgumentException if source is null.\n+   */\n+  public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n+    super(source);\n+    this.dataFlowContext = dataFlowContext;\n+  }\n \n \n-    public DataFlowContext getDataFlowContext() {\n-        return dataFlowContext;\n-    }\n+  public DataFlowContext getDataFlowContext() {\n+    return dataFlowContext;\n+  }\n \n     /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n         this.dataFlowContext = dataFlowContext;\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/146/BusinessServiceDataFlowEvent.java\nindex c93481aec9..7384038c3a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/146/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n@@ -25,8 +25,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n     public DataFlowContext getDataFlowContext() {\n         return dataFlowContext;\n     }\n-\n-    /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n+ /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n         this.dataFlowContext = dataFlowContext;\n     }*/\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/146/BusinessServiceDataFlowEvent.java\nindex c93481aec9..c417523aae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/146/BusinessServiceDataFlowEvent.java\n@@ -1,12 +1,13 @@\n package com.java110.core.event.service;\n \n import com.java110.core.context.DataFlowContext;\n-\n import java.util.EventObject;\n \n /**\n  * Created by wuxw on 2018/5/18.\n  */\n+\n+\n public class BusinessServiceDataFlowEvent extends EventObject {\n \n     private DataFlowContext dataFlowContext;\n@@ -16,7 +17,9 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+\n+\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n@@ -29,4 +32,4 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n     /*public void setDataFlowContext(DataFlowContext dataFlowContext) {\n         this.dataFlowContext = dataFlowContext;\n     }*/\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/146/BusinessServiceDataFlowEvent.java\nindex c93481aec9..079a0a5e09 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/146/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source, DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "column": "55",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "19",
                    "column": "55",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/146/BusinessServiceDataFlowEvent.java\nindex c93481aec9..d15fc9c532 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/146/BusinessServiceDataFlowEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/146/BusinessServiceDataFlowEvent.java\n@@ -16,7 +16,7 @@ public class BusinessServiceDataFlowEvent extends EventObject {\n      * @param source The object on which the Event initially occurred.\n      * @throws IllegalArgumentException if source is null.\n      */\n-    public BusinessServiceDataFlowEvent(Object source,DataFlowContext dataFlowContext) {\n+    public BusinessServiceDataFlowEvent(Object source ,DataFlowContext dataFlowContext) {\n         super(source);\n         this.dataFlowContext = dataFlowContext;\n     }\n",
            "diff_size": 1
        }
    ]
}