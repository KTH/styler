{
    "error_id": "117",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.assembler.dsl;\n\nimport static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'class def ident' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/117/MergeMultipleTuplesFromRepositoryImpl.java\nindex 384de2351a..67f4c14148 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/117/MergeMultipleTuplesFromRepositoryImpl.java\n@@ -5,91 +5,91 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n \n-import static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n+package org .seedstack.business.internal.assembler.dsl;import\n+static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n \n-import java.util.stream.Stream;\n-import org.javatuples.Tuple;\n-import org.seedstack.business.assembler.dsl.MergeAs;\n-import org.seedstack.business.assembler.dsl.MergeFromRepository;\n-import org.seedstack.business.assembler.dsl.MergeFromRepositoryOrFactory;\n-import org.seedstack.business.domain.AggregateNotFoundException;\n-import org.seedstack.business.domain.AggregateRoot;\n-import org.seedstack.business.util.Tuples;\n+ import java.util.stream.Stream;\n+ import org.javatuples.Tuple;\n+ import org.seedstack.business.assembler.dsl.MergeAs;\n+ import org.seedstack.business.assembler.dsl.MergeFromRepository;\n+ import org.seedstack.business.assembler.dsl.MergeFromRepositoryOrFactory;\n+ import org.seedstack.business.domain.AggregateNotFoundException;\n+ import org.seedstack.business.domain.AggregateRoot;\n+ import org.seedstack.business.util.Tuples;\n \n-class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements MergeFromRepository<MergeAs<T>>,\n-        MergeFromRepositoryOrFactory<MergeAs<T>> {\n+ class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements MergeFromRepository<MergeAs<T>>,\n+         MergeFromRepositoryOrFactory<MergeAs<T>> {\n \n-    private final Context context;\n-    private final Class<? extends AggregateRoot<?>>[] aggregateClasses;\n-    private final Class<?>[] aggregateIdClasses;\n-    private final Stream<D> dtoStream;\n+     private final Context context;\n+     private final Class<? extends AggregateRoot<?>>[] aggregateClasses;\n+     private final Class<?>[] aggregateIdClasses;\n+     private final Stream<D> dtoStream;\n \n-    @SafeVarargs\n-    MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream,\n-            Class<? extends AggregateRoot<?>>... aggregateClasses) {\n-        this.context = context;\n-        this.dtoStream = dtoStream;\n-        this.aggregateClasses = aggregateClasses;\n-        this.aggregateIdClasses = getAggregateIdClasses(aggregateClasses);\n-    }\n+     @SafeVarargs\n+     MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream,\n+             Class<? extends AggregateRoot<?>>... aggregateClasses) {\n+         this.context = context;\n+         this.dtoStream = dtoStream;\n+         this.aggregateClasses = aggregateClasses;\n+         this.aggregateIdClasses = getAggregateIdClasses(aggregateClasses);\n+     }\n \n-    @Override\n-    public MergeFromRepositoryOrFactory<MergeAs<T>> fromRepository() {\n-        return this;\n-    }\n+     @Override\n+     public MergeFromRepositoryOrFactory<MergeAs<T>> fromRepository() {\n+         return this;\n+     }\n \n-    @Override\n-    public MergeAs<T> fromFactory() {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n-    }\n+     @Override\n+     public MergeAs<T> fromFactory() {\n+         return new MergeAsImpl<>(dtoStream.map(dto -> {\n+             AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n+             for (int i = 0; i < aggregateClasses.length; i++) {\n+                 aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n+             }\n+             T tuple = Tuples.create((Object[]) aggregateRoots);\n+             context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+             return tuple;\n+         }));\n+     }\n \n-    @Override\n-    public MergeAs<T> orFail() throws AggregateNotFoundException {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                Object id = context.resolveId(dto, aggregateIdClasses[i], i);\n-                aggregateRoots[i] = load(id, aggregateClasses[i]);\n-                if (aggregateRoots[i] == null) {\n-                    throw new AggregateNotFoundException(\n-                            \"Unable to load aggregate \" + aggregateClasses[i].getName() + \"[\" + id + \"]\");\n-                }\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n-    }\n+     @Override\n+     public MergeAs<T> orFail() throws AggregateNotFoundException {\n+         return new MergeAsImpl<>(dtoStream.map(dto -> {\n+             AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n+             for (int i = 0; i < aggregateClasses.length; i++) {\n+                 Object id = context.resolveId(dto, aggregateIdClasses[i], i);\n+                 aggregateRoots[i] = load(id, aggregateClasses[i]);\n+                 if (aggregateRoots[i] == null) {\n+                     throw new AggregateNotFoundException(\n+                             \"Unable to load aggregate \" + aggregateClasses[i].getName() + \"[\" + id + \"]\");\n+                 }\n+             }\n+             T tuple = Tuples.create((Object[]) aggregateRoots);\n+             context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+             return tuple;\n+         }));\n+     }\n \n-    @Override\n-    public MergeAs<T> orFromFactory() {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                aggregateRoots[i] = load(context.resolveId(dto, aggregateIdClasses[i], i), aggregateClasses[i]);\n-                if (aggregateRoots[i] == null) {\n-                    aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n-                }\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n-    }\n+     @Override\n+     public MergeAs<T> orFromFactory() {\n+         return new MergeAsImpl<>(dtoStream.map(dto -> {\n+             AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n+             for (int i = 0; i < aggregateClasses.length; i++) {\n+                 aggregateRoots[i] = load(context.resolveId(dto, aggregateIdClasses[i], i), aggregateClasses[i]);\n+                 if (aggregateRoots[i] == null) {\n+                     aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n+                 }\n+             }\n+             T tuple = Tuples.create((Object[]) aggregateRoots);\n+             context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+             return tuple;\n+         }));\n+     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id,\n-            Class<? extends AggregateRoot<?>> aggregateClass) {\n-        return context.load((I) id, (Class<A>) aggregateClass);\n-    }\n-}\n\\ No newline at end of file\n+     @SuppressWarnings(\"unchecked\")\n+     private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id,\n+             Class<? extends AggregateRoot<?>> aggregateClass) {\n+         return context.load((I) id, (Class<A>) aggregateClass);\n+     }\n+ }\n\\ No newline at end of file\n",
            "diff_size": 85
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/117/MergeMultipleTuplesFromRepositoryImpl.java\nindex 384de2351a..2e07e8170a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/117/MergeMultipleTuplesFromRepositoryImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n@@ -28,7 +29,7 @@ class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements Merge\n \n     @SafeVarargs\n     MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream,\n-            Class<? extends AggregateRoot<?>>... aggregateClasses) {\n+                                          Class<? extends AggregateRoot<?>>... aggregateClasses) {\n         this.context = context;\n         this.dtoStream = dtoStream;\n         this.aggregateClasses = aggregateClasses;\n@@ -89,7 +90,7 @@ class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements Merge\n \n     @SuppressWarnings(\"unchecked\")\n     private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id,\n-            Class<? extends AggregateRoot<?>> aggregateClass) {\n+                                                                  Class<? extends AggregateRoot<?>> aggregateClass) {\n         return context.load((I) id, (Class<A>) aggregateClass);\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "21",
                    "column": "45",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "column": "115",
                    "severity": "warning",
                    "message": "'...' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "43",
                    "column": "51",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "column": "52",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 47, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "51",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "52",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "59",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 59, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "column": "74",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "84",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 47, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "column": "51",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "52",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "68",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 59, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 55, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 51, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 47, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/117/MergeMultipleTuplesFromRepositoryImpl.java\nindex 384de2351a..71027caa2d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/117/MergeMultipleTuplesFromRepositoryImpl.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.internal.assembler.dsl;\n \n import static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n-\n import java.util.stream.Stream;\n import org.javatuples.Tuple;\n import org.seedstack.business.assembler.dsl.MergeAs;\n@@ -18,8 +17,8 @@ import org.seedstack.business.domain.AggregateNotFoundException;\n import org.seedstack.business.domain.AggregateRoot;\n import org.seedstack.business.util.Tuples;\n \n-class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements MergeFromRepository<MergeAs<T>>,\n-        MergeFromRepositoryOrFactory<MergeAs<T>> {\n+\n+class MergeMultipleTuplesFromRepositoryImpl <T extends Tuple, D> implements MergeFromRepository<MergeAs<T>>, MergeFromRepositoryOrFactory<MergeAs<T>> {\n \n     private final Context context;\n     private final Class<? extends AggregateRoot<?>>[] aggregateClasses;\n@@ -27,8 +26,7 @@ class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements Merge\n     private final Stream<D> dtoStream;\n \n     @SafeVarargs\n-    MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream,\n-            Class<? extends AggregateRoot<?>>... aggregateClasses) {\n+    MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream, Class<? extends AggregateRoot<?>> ... aggregateClasses) {\n         this.context = context;\n         this.dtoStream = dtoStream;\n         this.aggregateClasses = aggregateClasses;\n@@ -42,54 +40,55 @@ class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements Merge\n \n     @Override\n     public MergeAs<T> fromFactory() {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n+        return new MergeAsImpl<>(dtoStream.map(dto-> {\n+                                                   AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?> [ aggregateClasses.length];\n+                                                   for(int i = 0;i <aggregateClasses.length;\n+i++) {\n+                                                       aggregateRoots[ i] = context.create(dto, aggregateClasses[i], i);\n+                                                   }\n+                                                   T tuple = Tuples.create((Object []) aggregateRoots);\n+                                                   context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+                                                   return tuple;\n+                                               }));\n     }\n \n     @Override\n     public MergeAs<T> orFail() throws AggregateNotFoundException {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                Object id = context.resolveId(dto, aggregateIdClasses[i], i);\n-                aggregateRoots[i] = load(id, aggregateClasses[i]);\n-                if (aggregateRoots[i] == null) {\n-                    throw new AggregateNotFoundException(\n-                            \"Unable to load aggregate \" + aggregateClasses[i].getName() + \"[\" + id + \"]\");\n-                }\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n+        return new MergeAsImpl<>(dtoStream.map(dto-> {\n+                                                   AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?> [ aggregateClasses.length];\n+                                                   for(int i = 0;i <aggregateClasses.length;\n+i++) {\n+                                                       Object id = context.resolveId(dto, aggregateIdClasses[i], i);\n+                                                       aggregateRoots[ i] = load(id, aggregateClasses[i]);\n+                                                       if (aggregateRoots[i] == null) {\n+                                                           throw new AggregateNotFoundException(\"Unable to load aggregate \" + aggregateClasses[i]\n+                                                               .getName()+ \"[\" + id+ \"]\");\n+                                                       }\n+                                                   }\n+                                                   T tuple = Tuples.create((Object []) aggregateRoots);\n+                                                   context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+                                                   return tuple;\n+                                               }));\n     }\n \n     @Override\n     public MergeAs<T> orFromFactory() {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                aggregateRoots[i] = load(context.resolveId(dto, aggregateIdClasses[i], i), aggregateClasses[i]);\n-                if (aggregateRoots[i] == null) {\n-                    aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n-                }\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n+        return new MergeAsImpl<>(dtoStream.map(dto-> {\n+                                                   AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?> [ aggregateClasses.length];\n+                                                   for(int i = 0;i <aggregateClasses.length;\n+i++) {\n+                                                       aggregateRoots[ i] = load(context.resolveId(dto, aggregateIdClasses[i], i), aggregateClasses[i]);\n+                                                       if (aggregateRoots[i] == null) {\n+                                                           aggregateRoots[ i] = context.create(dto, aggregateClasses[i], i);\n+                                                       }\n+                                                   }\n+                                                   T tuple = Tuples.create((Object []) aggregateRoots);\n+                                                   context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+                                                   return tuple;\n+                                               }));\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id,\n-            Class<? extends AggregateRoot<?>> aggregateClass) {\n+    @SuppressWarnings(\"unchecked\") private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id, Class<? extends AggregateRoot<?>> aggregateClass) {\n         return context.load((I) id, (Class<A>) aggregateClass);\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "9",
                    "severity": "warning",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'class def ident' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/117/MergeMultipleTuplesFromRepositoryImpl.java\nindex 384de2351a..67f4c14148 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/117/MergeMultipleTuplesFromRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/117/MergeMultipleTuplesFromRepositoryImpl.java\n@@ -5,91 +5,91 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.assembler.dsl;\n \n-import static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n+package org .seedstack.business.internal.assembler.dsl;import\n+static org.seedstack.business.internal.utils.BusinessUtils.getAggregateIdClasses;\n \n-import java.util.stream.Stream;\n-import org.javatuples.Tuple;\n-import org.seedstack.business.assembler.dsl.MergeAs;\n-import org.seedstack.business.assembler.dsl.MergeFromRepository;\n-import org.seedstack.business.assembler.dsl.MergeFromRepositoryOrFactory;\n-import org.seedstack.business.domain.AggregateNotFoundException;\n-import org.seedstack.business.domain.AggregateRoot;\n-import org.seedstack.business.util.Tuples;\n+ import java.util.stream.Stream;\n+ import org.javatuples.Tuple;\n+ import org.seedstack.business.assembler.dsl.MergeAs;\n+ import org.seedstack.business.assembler.dsl.MergeFromRepository;\n+ import org.seedstack.business.assembler.dsl.MergeFromRepositoryOrFactory;\n+ import org.seedstack.business.domain.AggregateNotFoundException;\n+ import org.seedstack.business.domain.AggregateRoot;\n+ import org.seedstack.business.util.Tuples;\n \n-class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements MergeFromRepository<MergeAs<T>>,\n-        MergeFromRepositoryOrFactory<MergeAs<T>> {\n+ class MergeMultipleTuplesFromRepositoryImpl<T extends Tuple, D> implements MergeFromRepository<MergeAs<T>>,\n+         MergeFromRepositoryOrFactory<MergeAs<T>> {\n \n-    private final Context context;\n-    private final Class<? extends AggregateRoot<?>>[] aggregateClasses;\n-    private final Class<?>[] aggregateIdClasses;\n-    private final Stream<D> dtoStream;\n+     private final Context context;\n+     private final Class<? extends AggregateRoot<?>>[] aggregateClasses;\n+     private final Class<?>[] aggregateIdClasses;\n+     private final Stream<D> dtoStream;\n \n-    @SafeVarargs\n-    MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream,\n-            Class<? extends AggregateRoot<?>>... aggregateClasses) {\n-        this.context = context;\n-        this.dtoStream = dtoStream;\n-        this.aggregateClasses = aggregateClasses;\n-        this.aggregateIdClasses = getAggregateIdClasses(aggregateClasses);\n-    }\n+     @SafeVarargs\n+     MergeMultipleTuplesFromRepositoryImpl(Context context, Stream<D> dtoStream,\n+             Class<? extends AggregateRoot<?>>... aggregateClasses) {\n+         this.context = context;\n+         this.dtoStream = dtoStream;\n+         this.aggregateClasses = aggregateClasses;\n+         this.aggregateIdClasses = getAggregateIdClasses(aggregateClasses);\n+     }\n \n-    @Override\n-    public MergeFromRepositoryOrFactory<MergeAs<T>> fromRepository() {\n-        return this;\n-    }\n+     @Override\n+     public MergeFromRepositoryOrFactory<MergeAs<T>> fromRepository() {\n+         return this;\n+     }\n \n-    @Override\n-    public MergeAs<T> fromFactory() {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n-    }\n+     @Override\n+     public MergeAs<T> fromFactory() {\n+         return new MergeAsImpl<>(dtoStream.map(dto -> {\n+             AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n+             for (int i = 0; i < aggregateClasses.length; i++) {\n+                 aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n+             }\n+             T tuple = Tuples.create((Object[]) aggregateRoots);\n+             context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+             return tuple;\n+         }));\n+     }\n \n-    @Override\n-    public MergeAs<T> orFail() throws AggregateNotFoundException {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                Object id = context.resolveId(dto, aggregateIdClasses[i], i);\n-                aggregateRoots[i] = load(id, aggregateClasses[i]);\n-                if (aggregateRoots[i] == null) {\n-                    throw new AggregateNotFoundException(\n-                            \"Unable to load aggregate \" + aggregateClasses[i].getName() + \"[\" + id + \"]\");\n-                }\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n-    }\n+     @Override\n+     public MergeAs<T> orFail() throws AggregateNotFoundException {\n+         return new MergeAsImpl<>(dtoStream.map(dto -> {\n+             AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n+             for (int i = 0; i < aggregateClasses.length; i++) {\n+                 Object id = context.resolveId(dto, aggregateIdClasses[i], i);\n+                 aggregateRoots[i] = load(id, aggregateClasses[i]);\n+                 if (aggregateRoots[i] == null) {\n+                     throw new AggregateNotFoundException(\n+                             \"Unable to load aggregate \" + aggregateClasses[i].getName() + \"[\" + id + \"]\");\n+                 }\n+             }\n+             T tuple = Tuples.create((Object[]) aggregateRoots);\n+             context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+             return tuple;\n+         }));\n+     }\n \n-    @Override\n-    public MergeAs<T> orFromFactory() {\n-        return new MergeAsImpl<>(dtoStream.map(dto -> {\n-            AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n-            for (int i = 0; i < aggregateClasses.length; i++) {\n-                aggregateRoots[i] = load(context.resolveId(dto, aggregateIdClasses[i], i), aggregateClasses[i]);\n-                if (aggregateRoots[i] == null) {\n-                    aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n-                }\n-            }\n-            T tuple = Tuples.create((Object[]) aggregateRoots);\n-            context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n-            return tuple;\n-        }));\n-    }\n+     @Override\n+     public MergeAs<T> orFromFactory() {\n+         return new MergeAsImpl<>(dtoStream.map(dto -> {\n+             AggregateRoot<?>[] aggregateRoots = new AggregateRoot<?>[aggregateClasses.length];\n+             for (int i = 0; i < aggregateClasses.length; i++) {\n+                 aggregateRoots[i] = load(context.resolveId(dto, aggregateIdClasses[i], i), aggregateClasses[i]);\n+                 if (aggregateRoots[i] == null) {\n+                     aggregateRoots[i] = context.create(dto, aggregateClasses[i], i);\n+                 }\n+             }\n+             T tuple = Tuples.create((Object[]) aggregateRoots);\n+             context.mergeDtoIntoTuple(dto, tuple, aggregateClasses);\n+             return tuple;\n+         }));\n+     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id,\n-            Class<? extends AggregateRoot<?>> aggregateClass) {\n-        return context.load((I) id, (Class<A>) aggregateClass);\n-    }\n-}\n\\ No newline at end of file\n+     @SuppressWarnings(\"unchecked\")\n+     private <A extends AggregateRoot<I>, I> AggregateRoot<?> load(Object id,\n+             Class<? extends AggregateRoot<?>> aggregateClass) {\n+         return context.load((I) id, (Class<A>) aggregateClass);\n+     }\n+ }\n\\ No newline at end of file\n",
            "diff_size": 85
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}