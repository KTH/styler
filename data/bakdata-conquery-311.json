{
    "error_id": "311",
    "information": {
        "errors": [
            {
                "line": "32",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\trequestContext.get().getRequestUri(),\n\t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n\t\t);\t\t\n\t\treturn Response.status(422)\n\t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n\t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/311/JsonValidationExceptionMapper.java\nindex 4662974ef1..955869b2ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/311/JsonValidationExceptionMapper.java\n@@ -22,20 +22,20 @@ import lombok.extern.slf4j.Slf4j;\n public class JsonValidationExceptionMapper implements ExceptionMapper<ConstraintViolationException> {\n \n \tprivate final javax.inject.Provider<ContainerRequest> requestContext;\n-\t\n+\n \t@Override\n \tpublic Response toResponse(ConstraintViolationException exception) {\n \t\tlog.warn(\"Json Validation error on {} {}:\\nproblem:{}\",\n \t\t\trequestContext.get().getMethod(),\n \t\t\trequestContext.get().getRequestUri(),\n \t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n-\t\t);\t\t\n+\t\t);\n \t\treturn Response.status(422)\n \t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n \t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n \t\t\t\t\t\t.build();\n \t}\n-\t\n+\n \tprivate <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n \t\treturn violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n \t}\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/311/JsonValidationExceptionMapper.java\nindex 4662974ef1..97f530886e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/311/JsonValidationExceptionMapper.java\n@@ -17,26 +17,27 @@ import io.dropwizard.jersey.errors.ErrorMessage;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j @Provider\n+@Slf4j\n+@Provider\n @RequiredArgsConstructor(onConstructor_ = @Inject)\n public class JsonValidationExceptionMapper implements ExceptionMapper<ConstraintViolationException> {\n \n-\tprivate final javax.inject.Provider<ContainerRequest> requestContext;\n-\t\n-\t@Override\n-\tpublic Response toResponse(ConstraintViolationException exception) {\n-\t\tlog.warn(\"Json Validation error on {} {}:\\nproblem:{}\",\n-\t\t\trequestContext.get().getMethod(),\n-\t\t\trequestContext.get().getRequestUri(),\n-\t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n-\t\t);\t\t\n-\t\treturn Response.status(422)\n-\t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n-\t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n-\t\t\t\t\t\t.build();\n-\t}\n-\t\n-\tprivate <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n-\t\treturn violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n-\t}\n+    private final javax.inject.Provider<ContainerRequest> requestContext;\n+\n+    @Override\n+    public Response toResponse(ConstraintViolationException exception) {\n+        log.warn(\"Json Validation error on {} {}:\\nproblem:{}\",\n+            requestContext.get().getMethod(),\n+            requestContext.get().getRequestUri(),\n+            Joiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n+        );\n+        return Response.status(422)\n+            .type(MediaType.APPLICATION_JSON_TYPE)\n+            .entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n+            .build();\n+    }\n+\n+    private <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n+        return violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n+    }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/311/JsonValidationExceptionMapper.java\nindex 4662974ef1..f6b1affb9f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/311/JsonValidationExceptionMapper.java\n@@ -29,9 +29,9 @@ public class JsonValidationExceptionMapper implements ExceptionMapper<Constraint\n \t\t\trequestContext.get().getMethod(),\n \t\t\trequestContext.get().getRequestUri(),\n \t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n-\t\t);\t\t\n-\t\treturn Response.status(422)\n-\t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n+\t\t);\n+return Response.status(422)\n+.type(MediaType.APPLICATION_JSON_TYPE)\n \t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n \t\t\t\t\t\t.build();\n \t}\n@@ -39,4 +39,4 @@ public class JsonValidationExceptionMapper implements ExceptionMapper<Constraint\n \tprivate <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n \t\treturn violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/311/JsonValidationExceptionMapper.java\nindex 4662974ef1..ddef500496 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/311/JsonValidationExceptionMapper.java\n@@ -7,36 +7,28 @@ import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.ext.ExceptionMapper;\n import javax.ws.rs.ext.Provider;\n-\n import org.glassfish.jersey.server.ContainerRequest;\n-\n import com.google.common.base.Joiner;\n import com.google.common.collect.Iterables;\n-\n import io.dropwizard.jersey.errors.ErrorMessage;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j @Provider\n-@RequiredArgsConstructor(onConstructor_ = @Inject)\n+@Slf4j\n+@Provider\n+@RequiredArgsConstructor(onConstructor_=@Inject)\n public class JsonValidationExceptionMapper implements ExceptionMapper<ConstraintViolationException> {\n \n-\tprivate final javax.inject.Provider<ContainerRequest> requestContext;\n-\t\n-\t@Override\n-\tpublic Response toResponse(ConstraintViolationException exception) {\n-\t\tlog.warn(\"Json Validation error on {} {}:\\nproblem:{}\",\n-\t\t\trequestContext.get().getMethod(),\n-\t\t\trequestContext.get().getRequestUri(),\n-\t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n-\t\t);\t\t\n-\t\treturn Response.status(422)\n-\t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n-\t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n-\t\t\t\t\t\t.build();\n-\t}\n-\t\n-\tprivate <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n-\t\treturn violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n-\t}\n-}\n+    private final javax.inject.Provider<ContainerRequest> requestContext;\n+    @Override\n+    public Response toResponse(ConstraintViolationException exception) {\n+        log.warn(\"Json Validation error on {} {}:\\nproblem:{}\", requestContext.get().getMethod(), requestContext.get().getRequestUri(), Joiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder)));\n+        return Response.status(422).type(MediaType.APPLICATION_JSON_TYPE)\n+                                   .entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n+                                   .build();\n+    }\n+\n+    private <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n+        return violation.getPropertyPath().toString()+\" \"+violation.getMessage();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/311/JsonValidationExceptionMapper.java\nindex 4662974ef1..e2e8e073e4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/311/JsonValidationExceptionMapper.java\n@@ -22,20 +22,21 @@ import lombok.extern.slf4j.Slf4j;\n public class JsonValidationExceptionMapper implements ExceptionMapper<ConstraintViolationException> {\n \n \tprivate final javax.inject.Provider<ContainerRequest> requestContext;\n-\t\n+\n \t@Override\n \tpublic Response toResponse(ConstraintViolationException exception) {\n \t\tlog.warn(\"Json Validation error on {} {}:\\nproblem:{}\",\n \t\t\trequestContext.get().getMethod(),\n \t\t\trequestContext.get().getRequestUri(),\n \t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n-\t\t);\t\t\n+\t\t);\n+\n \t\treturn Response.status(422)\n \t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n \t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n \t\t\t\t\t\t.build();\n \t}\n-\t\n+\n \tprivate <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n \t\treturn violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n \t}\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/311/JsonValidationExceptionMapper.java\nindex 4662974ef1..955869b2ef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/311/JsonValidationExceptionMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/311/JsonValidationExceptionMapper.java\n@@ -22,20 +22,20 @@ import lombok.extern.slf4j.Slf4j;\n public class JsonValidationExceptionMapper implements ExceptionMapper<ConstraintViolationException> {\n \n \tprivate final javax.inject.Provider<ContainerRequest> requestContext;\n-\t\n+\n \t@Override\n \tpublic Response toResponse(ConstraintViolationException exception) {\n \t\tlog.warn(\"Json Validation error on {} {}:\\nproblem:{}\",\n \t\t\trequestContext.get().getMethod(),\n \t\t\trequestContext.get().getRequestUri(),\n \t\t\tJoiner.on('\\n').join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))\n-\t\t);\t\t\n+\t\t);\n \t\treturn Response.status(422)\n \t\t\t\t\t\t.type(MediaType.APPLICATION_JSON_TYPE)\n \t\t\t\t\t\t.entity(new ErrorMessage(422, Joiner.on(\" AND \").join(Iterables.transform(exception.getConstraintViolations(), this::constraintMessageBuilder))))\n \t\t\t\t\t\t.build();\n \t}\n-\t\n+\n \tprivate <T> String constraintMessageBuilder(ConstraintViolation<T> violation) {\n \t\treturn violation.getPropertyPath().toString() + \" \" + violation.getMessage();\n \t}\n",
            "diff_size": 3
        }
    ]
}