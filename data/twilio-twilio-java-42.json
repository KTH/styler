{
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "144",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/42/FunctionVersionReader.java\nindex 00f52fa05b..aa9af6ac53 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/42/FunctionVersionReader.java\n@@ -141,7 +141,7 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/42/FunctionVersionReader.java\nindex 00f52fa05b..1e5200a328 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/42/FunctionVersionReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.serverless.v1.service.function;\n@@ -141,7 +141,7 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/42/FunctionVersionReader.java\nindex 00f52fa05b..6684344396 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/42/FunctionVersionReader.java\n@@ -24,6 +24,7 @@ import com.twilio.rest.Domains;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class FunctionVersionReader extends Reader<FunctionVersion> {\n     private final String pathServiceSid;\n     private final String pathFunctionSid;\n@@ -36,6 +37,8 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param pathFunctionSid The SID of the function that is the parent of the\n      *                        Function Version resources to read\n      */\n+\n+\n     public FunctionVersionReader(final String pathServiceSid,\n                                  final String pathFunctionSid) {\n         this.pathServiceSid = pathServiceSid;\n@@ -48,6 +51,8 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param client TwilioRestClient with which to make the request\n      * @return FunctionVersion ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<FunctionVersion> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -59,6 +64,8 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param client TwilioRestClient with which to make the request\n      * @return FunctionVersion ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<FunctionVersion> firstPage(final TwilioRestClient client) {\n@@ -66,7 +73,7 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             HttpMethod.GET,\n             Domains.SERVERLESS.toString(),\n             \"/v1/Services/\" + this.pathServiceSid + \"/Functions/\" + this.pathFunctionSid + \"/Versions\"\n-        );\n+                          );\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -79,14 +86,13 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param client TwilioRestClient with which to make the request\n      * @return FunctionVersion ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<FunctionVersion> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<FunctionVersion> getPage(final String targetUrl,\n+                                         final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -97,13 +103,12 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<FunctionVersion> nextPage(final Page<FunctionVersion> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.SERVERLESS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.SERVERLESS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -114,13 +119,12 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<FunctionVersion> previousPage(final Page<FunctionVersion> page,\n                                               final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.SERVERLESS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.SERVERLESS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -131,9 +135,11 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<FunctionVersion> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<FunctionVersion> pageForRequest(final TwilioRestClient client,\n+                                                 final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"FunctionVersion read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -141,7 +147,8 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -149,7 +156,7 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             response.getContent(),\n             FunctionVersion.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -157,6 +164,8 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/42/FunctionVersionReader.java\nindex 00f52fa05b..aa9af6ac53 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/42/FunctionVersionReader.java\n@@ -141,7 +141,7 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/42/FunctionVersionReader.java\nindex 00f52fa05b..e0fd09d004 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/42/FunctionVersionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/42/FunctionVersionReader.java\n@@ -141,7 +141,8 @@ public class FunctionVersionReader extends Reader<FunctionVersion> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}