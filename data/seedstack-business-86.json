{
    "error_id": "86",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.assembler.dsl;\n\nimport org.javatuples.Decade;\nimport org.javatuples.Ennead;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/86/MergeSingle.java\nindex 182d74015f..fddb74b93e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/86/MergeSingle.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/86/MergeSingle.java\nindex 182d74015f..0b47adba0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/86/MergeSingle.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n@@ -33,20 +34,26 @@ public interface MergeSingle {\n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third);\n+                                                                                       Class<A1> second,\n+                                                                                       Class<A2> third);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth);\n+                                                                                           Class<A1> second,\n+                                                                                           Class<A2> third,\n+                                                                                           Class<A3> fourth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n             A2 extends AggregateRoot<?>,\n             A3 extends AggregateRoot<?>,\n             A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);\n+                                                                                               Class<A1> second,\n+                                                                                               Class<A2> third,\n+                                                                                               Class<A3> fourth,\n+                                                                                               Class<A4> fifth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -54,7 +61,11 @@ public interface MergeSingle {\n             A3 extends AggregateRoot<?>,\n             A4 extends AggregateRoot<?>,\n             A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);\n+                                                                                                  Class<A1> second,\n+                                                                                                  Class<A2> third,\n+                                                                                                  Class<A3> fourth,\n+                                                                                                  Class<A4> fifth,\n+                                                                                                  Class<A5> sixth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -63,7 +74,12 @@ public interface MergeSingle {\n             A4 extends AggregateRoot<?>,\n             A5 extends AggregateRoot<?>,\n             A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh);\n+                                                                                                      Class<A1> second,\n+                                                                                                      Class<A2> third,\n+                                                                                                      Class<A3> fourth,\n+                                                                                                      Class<A4> fifth,\n+                                                                                                      Class<A5> sixth,\n+                                                                                                      Class<A6> seventh);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -134,7 +150,7 @@ public interface MergeSingle {\n             A4 extends AggregateRoot<?>,\n             A5 extends AggregateRoot<?>,\n             A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh);\n+                                                   A6 seventh);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -144,7 +160,7 @@ public interface MergeSingle {\n             A5 extends AggregateRoot<?>,\n             A6 extends AggregateRoot<?>,\n             A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth);\n+                                                   A6 seventh, A7 eighth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -155,7 +171,7 @@ public interface MergeSingle {\n             A6 extends AggregateRoot<?>,\n             A7 extends AggregateRoot<?>,\n             A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth);\n+                                                   A6 seventh, A7 eighth, A8 ninth);\n \n     <A0 extends AggregateRoot<?>,\n             A1 extends AggregateRoot<?>,\n@@ -167,7 +183,7 @@ public interface MergeSingle {\n             A7 extends AggregateRoot<?>,\n             A8 extends AggregateRoot<?>,\n             A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth);\n+                                                   A6 seventh, A7 eighth, A8 ninth, A9 tenth);\n \n     <A extends AggregateRoot<I>, I> void into(Unit<A> unit);\n \n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 3,096).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "column": "138",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "323",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "324",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "560",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "561",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "847",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "848",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "1183",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "1184",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "1571",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "1572",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "2009",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "2010",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "2498",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "2499",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "3037",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "31",
                    "column": "3038",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "3096",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 2,202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "column": "134",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "302",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "303",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "510",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "511",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "757",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "758",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "1045",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "1046",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "1373",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "1374",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "1740",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "1741",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "2146",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "35",
                    "column": "2147",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "35",
                    "column": "2202",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 2,020).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "column": "93",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "219",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "220",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "379",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "380",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "572",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "573",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "796",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "797",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "1053",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "1054",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "1341",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "1342",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "1664",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "37",
                    "column": "1665",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "37",
                    "column": "2020",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/86/MergeSingle.java\nindex 182d74015f..0189029b42 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/86/MergeSingle.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n@@ -27,209 +28,11 @@ public interface MergeSingle {\n \n     <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass);\n \n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n-            Class<A9> tenth);\n-\n-    <A extends AggregateRoot<I>, I> void into(A aggregateRoot);\n+    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first, Class<A1> second, Class<A2> third);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth);<A extends AggregateRoot<I>, I> void into(A aggregateRoot);\n \n     <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(A0 first, A1 second);\n \n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth);\n-\n-    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth);\n-\n-    <A extends AggregateRoot<I>, I> void into(Unit<A> unit);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet);\n-\n-    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead);\n+    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth, A9 tenth);<A extends AggregateRoot<I>, I> void into(Unit<A> unit);\n \n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade);\n-}\n+    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead);<A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade);\n+}\n\\ No newline at end of file\n",
            "diff_size": 203
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 7,575).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "column": "121",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "256",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "256",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "444",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "444",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "683",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "683",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "972",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "972",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "1310",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "1310",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "1700",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "1700",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "2140",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "2140",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "2631",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "2631",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "3172",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "3172",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "3233",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "3233",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "3325",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "3325",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "3456",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "3456",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "3627",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "3627",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "3837",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "3837",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "4086",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "4086",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "4376",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "4376",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "4706",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "4706",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "5075",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "5075",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "5483",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "5483",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "5541",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "5541",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "5631",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "5631",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "5760",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "5760",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "5922",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "5922",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "6117",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "6117",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "6343",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "6343",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "6602",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "6602",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "6892",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "6892",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "7217",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "7217",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "28",
                    "column": "7575",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "28",
                    "column": "7575",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/86/MergeSingle.java\nindex 182d74015f..053ce7123a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/86/MergeSingle.java\n@@ -23,213 +23,7 @@ import org.seedstack.business.domain.AggregateRoot;\n  * An element of the {@link FluentAssembler DSL} allowing to merge one DTO into an aggregate or a\n  * tuple of aggregates.\n  */\n-public interface MergeSingle {\n \n-    <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass);\n \n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first,\n-            Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(\n-            Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth,\n-            Class<A6> seventh, Class<A7> eighth, Class<A8> ninth,\n-            Class<A9> tenth);\n-\n-    <A extends AggregateRoot<I>, I> void into(A aggregateRoot);\n-\n-    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(A0 first, A1 second);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth);\n-\n-    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth,\n-            A6 seventh, A7 eighth, A8 ninth, A9 tenth);\n-\n-    <A extends AggregateRoot<I>, I> void into(Unit<A> unit);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet);\n-\n-    <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead);\n-\n-    <A0 extends AggregateRoot<?>,\n-            A1 extends AggregateRoot<?>,\n-            A2 extends AggregateRoot<?>,\n-            A3 extends AggregateRoot<?>,\n-            A4 extends AggregateRoot<?>,\n-            A5 extends AggregateRoot<?>,\n-            A6 extends AggregateRoot<?>,\n-            A7 extends AggregateRoot<?>,\n-            A8 extends AggregateRoot<?>,\n-            A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade);\n-}\n+public interface MergeSingle { <A extends AggregateRoot<I>, I> MergeFromRepository<A> into(Class<A> aggregateRootClass) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> MergeFromRepository<Pair<A0, A1>> into(Class<A0> first, Class<A1> second) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> MergeFromRepository<Triplet<A0, A1, A2>> into(Class<A0> first, Class<A1> second, Class<A2> third) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> MergeFromRepository<Quartet<A0, A1, A2, A3>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> MergeFromRepository<Quintet<A0, A1, A2, A3, A4>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> MergeFromRepository<Sextet<A0, A1, A2, A3, A4, A5>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> MergeFromRepository<Septet<A0, A1, A2, A3, A4, A5, A6>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> MergeFromRepository<Octet<A0, A1, A2, A3, A4, A5, A6, A7>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> MergeFromRepository<Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> MergeFromRepository<Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9>> into(Class<A0> first, Class<A1> second, Class<A2> third, Class<A3> fourth, Class<A4> fifth, Class<A5> sixth, Class<A6> seventh, Class<A7> eighth, Class<A8> ninth, Class<A9> tenth) ; <A extends AggregateRoot<I>, I> void into(A aggregateRoot) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(A0 first, A1 second) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(A0 first, A1 second, A2 third, A3 fourth, A4 fifth, A5 sixth, A6 seventh, A7 eighth, A8 ninth, A9 tenth) ; <A extends AggregateRoot<I>, I> void into(Unit<A> unit) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>> void into(Pair<A0, A1> pair) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>> void into(Triplet<A0, A1, A2> triplet) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>> void into(Quartet<A0, A1, A2, A3> quartet) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>> void into(Quintet<A0, A1, A2, A3, A4> quintet) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>> void into(Sextet<A0, A1, A2, A3, A4, A5> sextet) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>> void into(Septet<A0, A1, A2, A3, A4, A5, A6> septet) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>> void into(Octet<A0, A1, A2, A3, A4, A5, A6, A7> octet) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>> void into(Ennead<A0, A1, A2, A3, A4, A5, A6, A7, A8> ennead) ; <A0 extends AggregateRoot<?>, A1 extends AggregateRoot<?>, A2 extends AggregateRoot<?>, A3 extends AggregateRoot<?>, A4 extends AggregateRoot<?>, A5 extends AggregateRoot<?>, A6 extends AggregateRoot<?>, A7 extends AggregateRoot<?>, A8 extends AggregateRoot<?>, A9 extends AggregateRoot<?>> void into(Decade<A0, A1, A2, A3, A4, A5, A6, A7, A8, A9> decade) ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 208
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/86/MergeSingle.java\nindex 182d74015f..fddb74b93e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/86/MergeSingle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/86/MergeSingle.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler.dsl;\n \n import org.javatuples.Decade;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}