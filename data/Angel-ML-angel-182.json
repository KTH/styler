{
    "error_id": "182",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/182/RowIdColIdValueTextRowFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/182/RowIdColIdValueTextRowFormat.java\nindex 7b5030189a..677697e227 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/182/RowIdColIdValueTextRowFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/182/RowIdColIdValueTextRowFormat.java\n@@ -25,117 +25,133 @@ import java.io.IOException;\n  * Text format: row id + sep + column id + sep + elememt value\n  */\n public class RowIdColIdValueTextRowFormat extends RowFormat {\n-  private String sep = \",\";\n-\n-  @Override public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(IntIntElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(IntLongElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongIntElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongLongElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void load(IntFloatElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Integer.valueOf(kv[1]);\n-    element.value = Float.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Integer.valueOf(kv[1]);\n-    element.value = Double.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Integer.valueOf(kv[1]);\n-    element.value = Integer.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Integer.valueOf(kv[1]);\n-    element.value = Long.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(LongFloatElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Long.valueOf(kv[1]);\n-    element.value = Float.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Long.valueOf(kv[1]);\n-    element.value = Double.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Long.valueOf(kv[1]);\n-    element.value = Integer.valueOf(kv[2]);\n-  }\n-\n-  @Override public void load(LongLongElement element, DataInputStream in) throws IOException {\n-    String line = in.readLine();\n-    String[] kv = line.split(sep);\n-    element.rowId = Integer.valueOf(kv[0]);\n-    element.colId = Long.valueOf(kv[1]);\n-    element.value = Long.valueOf(kv[2]);\n-  }\n+    private String sep = \",\";\n+\n+    @Override\n+    public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(IntIntElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(IntLongElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongIntElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongLongElement element, DataOutputStream out) throws IOException {\n+        out.writeBytes(\n+                String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n+                        .valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void load(IntFloatElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Integer.valueOf(kv[1]);\n+        element.value = Float.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Integer.valueOf(kv[1]);\n+        element.value = Double.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(IntIntElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Integer.valueOf(kv[1]);\n+        element.value = Integer.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(IntLongElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Integer.valueOf(kv[1]);\n+        element.value = Long.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(LongFloatElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Long.valueOf(kv[1]);\n+        element.value = Float.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Long.valueOf(kv[1]);\n+        element.value = Double.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(LongIntElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Long.valueOf(kv[1]);\n+        element.value = Integer.valueOf(kv[2]);\n+    }\n+\n+    @Override\n+    public void load(LongLongElement element, DataInputStream in) throws IOException {\n+        String line = in.readLine();\n+        String[] kv = line.split(sep);\n+        element.rowId = Integer.valueOf(kv[0]);\n+        element.colId = Long.valueOf(kv[1]);\n+        element.value = Long.valueOf(kv[2]);\n+    }\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/182/RowIdColIdValueTextRowFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/182/RowIdColIdValueTextRowFormat.java\nindex 7b5030189a..fc633eeaa0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/182/RowIdColIdValueTextRowFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/182/RowIdColIdValueTextRowFormat.java\n@@ -27,55 +27,48 @@ import java.io.IOException;\n public class RowIdColIdValueTextRowFormat extends RowFormat {\n   private String sep = \",\";\n \n-  @Override public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(IntIntElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(IntIntElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(IntLongElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(IntLongElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(LongIntElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(LongIntElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void save(LongLongElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n+  @Override\n+public void save(LongLongElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n   }\n \n-  @Override public void load(IntFloatElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntFloatElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -83,7 +76,8 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Float.valueOf(kv[2]);\n   }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -91,7 +85,8 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Double.valueOf(kv[2]);\n   }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntIntElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -99,7 +94,8 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Integer.valueOf(kv[2]);\n   }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntLongElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -107,7 +103,8 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Long.valueOf(kv[2]);\n   }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongFloatElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -115,7 +112,8 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Float.valueOf(kv[2]);\n   }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -123,7 +121,8 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Double.valueOf(kv[2]);\n   }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongIntElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n@@ -131,11 +130,12 @@ public class RowIdColIdValueTextRowFormat extends RowFormat {\n     element.value = Integer.valueOf(kv[2]);\n   }\n \n-  @Override public void load(LongLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongLongElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Long.valueOf(kv[1]);\n     element.value = Long.valueOf(kv[2]);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/182/RowIdColIdValueTextRowFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/182/RowIdColIdValueTextRowFormat.java\nindex 7b5030189a..cb7d4333ed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/182/RowIdColIdValueTextRowFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/182/RowIdColIdValueTextRowFormat.java\n@@ -24,118 +24,119 @@ import java.io.IOException;\n /**\n  * Text format: row id + sep + column id + sep + elememt value\n  */\n+\n public class RowIdColIdValueTextRowFormat extends RowFormat {\n-  private String sep = \",\";\n-\n-  @Override public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(IntIntElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(IntLongElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongIntElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void save(LongLongElement element, DataOutputStream out) throws IOException {\n-    out.writeBytes(\n-      String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String\n-        .valueOf(element.value) + \"\\n\");\n-  }\n-\n-  @Override public void load(IntFloatElement element, DataInputStream in) throws IOException {\n+    private String sep = \",\";\n+\n+    @Override\n+    public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(IntIntElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(IntLongElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongIntElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void save(LongLongElement element, DataOutputStream out) throws IOException {\n+    out.writeBytes(String.valueOf(element.rowId) + sep + String.valueOf(element.colId) + sep + String.valueOf(element.value) + \"\\n\");\n+    }\n+\n+    @Override\n+    public void load(IntFloatElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Integer.valueOf(kv[1]);\n     element.value = Float.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Integer.valueOf(kv[1]);\n     element.value = Double.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntIntElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Integer.valueOf(kv[1]);\n     element.value = Integer.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntLongElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Integer.valueOf(kv[1]);\n     element.value = Long.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongFloatElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Long.valueOf(kv[1]);\n     element.value = Float.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Long.valueOf(kv[1]);\n     element.value = Double.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongIntElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Long.valueOf(kv[1]);\n     element.value = Integer.valueOf(kv[2]);\n-  }\n+    }\n \n-  @Override public void load(LongLongElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongLongElement element, DataInputStream in) throws IOException {\n     String line = in.readLine();\n     String[] kv = line.split(sep);\n     element.rowId = Integer.valueOf(kv[0]);\n     element.colId = Long.valueOf(kv[1]);\n     element.value = Long.valueOf(kv[2]);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}