{
    "error_id": "34",
    "information": {
        "errors": [
            {
                "line": "63",
                "severity": "error",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    }\n  }\n  public String getStatusInfo() {\n    return statusInfo;\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/34/ActualResult.java\nindex 8d951d7414..9975b57f68 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/34/ActualResult.java\n@@ -60,6 +60,7 @@ public class ActualResult {\n       return Optional.empty();\n     }\n   }\n+\n   public String getStatusInfo() {\n     return statusInfo;\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/34/ActualResult.java\nindex 8d951d7414..50bf6d99e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/34/ActualResult.java\n@@ -24,6 +24,7 @@ public class ActualResult {\n \n   /**\n    * The header collection.\n+   *\n    * @return headers, keys always lowercase\n    */\n   public LinkedListMultimap<String, String> getMultiHeaders() {\n@@ -32,9 +33,10 @@ public class ActualResult {\n \n   /**\n    * Use this if you expect only one header and are in a handlebars org OGNL context.\n-   * <p />\n+   * <p/>\n    * In those contexts this method allows you to write <pre>result.firstHeaders.location</pre> instead of\n    * <pre>result.getFirstHeader(\"location\")</pre>\n+   *\n    * @return a map with the first header of the collection indexed by the lowercased fieldname\n    */\n   public Map<String, String> getFirstHeaders() {\n@@ -49,6 +51,7 @@ public class ActualResult {\n    * Use this when you need a specific header, and you're not interested in duplucates.\n    * <p/>\n    * Use <pre>getMultiHeaders.get(fieldName)</pre> if you expect multiple headers\n+   *\n    * @param fieldName the header name\n    * @return the first header or Optional.empty if no header was defined\n    */\n@@ -60,6 +63,7 @@ public class ActualResult {\n       return Optional.empty();\n     }\n   }\n+\n   public String getStatusInfo() {\n     return statusInfo;\n   }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/34/ActualResult.java\nindex 8d951d7414..8951689fcb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/34/ActualResult.java\n@@ -63,4 +63,4 @@ public class ActualResult {\n   public String getStatusInfo() {\n     return statusInfo;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "12",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/34/ActualResult.java\nindex 8d951d7414..25ee3aeae2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/34/ActualResult.java\n@@ -1,34 +1,34 @@\n package nl.knaw.huygens.security.client;\n \n import com.google.common.collect.LinkedListMultimap;\n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Optional;\n \n public class ActualResult {\n-  private final int status;\n-  private final String statusInfo;\n-  private final LinkedListMultimap<String, String> headers;\n+    private final int status;\n+    private final String statusInfo;\n+    private final LinkedListMultimap<String, String> headers;\n \n-  public ActualResult(int status, String statusInfo, LinkedListMultimap<String, String> headers) {\n+    public ActualResult(int status, String statusInfo, LinkedListMultimap<String, String> headers) {\n     this.status = status;\n     this.statusInfo = statusInfo;\n     this.headers = headers;\n-  }\n+    }\n \n-  public int getStatus() {\n+    public int getStatus() {\n     return status;\n-  }\n+    }\n \n   /**\n    * The header collection.\n    * @return headers, keys always lowercase\n    */\n-  public LinkedListMultimap<String, String> getMultiHeaders() {\n+\n+    public LinkedListMultimap<String, String> getMultiHeaders() {\n     return headers;\n-  }\n+    }\n \n   /**\n    * Use this if you expect only one header and are in a handlebars org OGNL context.\n@@ -37,13 +37,14 @@ public class ActualResult {\n    * <pre>result.getFirstHeader(\"location\")</pre>\n    * @return a map with the first header of the collection indexed by the lowercased fieldname\n    */\n-  public Map<String, String> getFirstHeaders() {\n+\n+    public Map<String, String> getFirstHeaders() {\n     HashMap<String, String> result = new HashMap<>();\n     for (String key : headers.keySet()) {\n-      result.put(key.toLowerCase(), headers.get(key).get(0));\n+        result.put(key.toLowerCase(), headers.get(key).get(0));\n     }\n     return result;\n-  }\n+    }\n \n   /**\n    * Use this when you need a specific header, and you're not interested in duplucates.\n@@ -52,15 +53,17 @@ public class ActualResult {\n    * @param fieldName the header name\n    * @return the first header or Optional.empty if no header was defined\n    */\n-  public Optional<String> getFirstHeader(String fieldName) {\n+\n+    public Optional<String> getFirstHeader(String fieldName) {\n     Iterator<String> headerValues = headers.get(fieldName.toLowerCase()).iterator();\n     if (headerValues.hasNext()) {\n-      return Optional.of(headerValues.next());\n+        return Optional.of(headerValues.next());\n     } else {\n       return Optional.empty();\n     }\n-  }\n-  public String getStatusInfo() {\n+    }\n+\n+    public String getStatusInfo() {\n     return statusInfo;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/34/ActualResult.java\nindex 8d951d7414..9975b57f68 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/34/ActualResult.java\n@@ -60,6 +60,7 @@ public class ActualResult {\n       return Optional.empty();\n     }\n   }\n+\n   public String getStatusInfo() {\n     return statusInfo;\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/34/ActualResult.java\nindex 8d951d7414..9975b57f68 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/34/ActualResult.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/34/ActualResult.java\n@@ -60,6 +60,7 @@ public class ActualResult {\n       return Optional.empty();\n     }\n   }\n+\n   public String getStatusInfo() {\n     return statusInfo;\n   }\n",
            "diff_size": 1
        }
    ]
}