{
    "error_id": "103",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "77",
                "severity": "error",
                "message": "'}' at column 77 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "column": "77",
                    "severity": "error",
                    "message": "'}' at column 77 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/103/ValidRuleExpressionLanguageValidator.java\nindex f4e6ef255d..d0aaabb75b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/103/ValidRuleExpressionLanguageValidator.java\n@@ -10,24 +10,24 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.RuleExpressionLa\n /**\n  * Validator for the rule expression languages of a variable. Only valued from the\n  * {@link RuleExpressionLanguages} class are allowed.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class ValidRuleExpressionLanguageValidator\n     implements ConstraintValidator<ValidRuleExpressionLanguage, String> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {}\n+  public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "column": "77",
                    "severity": "error",
                    "message": "'}' at column 77 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/103/ValidRuleExpressionLanguageValidator.java\nindex f4e6ef255d..f48e8e2f5f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/103/ValidRuleExpressionLanguageValidator.java\n@@ -43,4 +43,4 @@ public class ValidRuleExpressionLanguageValidator\n     return RuleExpressionLanguages.ALL.contains(ruleExpressionLanguage);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/103/ValidRuleExpressionLanguageValidator.java\nindex f4e6ef255d..c12fe437b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/103/ValidRuleExpressionLanguageValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import com.google.common.base.Strings;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.RuleExpressionLanguages;\n \n /**\n@@ -14,16 +12,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.RuleExpressionLa\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidRuleExpressionLanguageValidator\n-    implements ConstraintValidator<ValidRuleExpressionLanguage, String> {\n+\n+\n+public class ValidRuleExpressionLanguageValidator implements ConstraintValidator<ValidRuleExpressionLanguage, String> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -31,16 +33,19 @@ public class ValidRuleExpressionLanguageValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(String ruleExpressionLanguage, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(String ruleExpressionLanguage,\n+        ConstraintValidatorContext context) {\n \n     // It is allowed, that the rule expression language is empty.\n     if (Strings.isNullOrEmpty(ruleExpressionLanguage)) {\n-      return true;\n+        return true;\n     }\n \n     // check for rule expression languages\n-    return RuleExpressionLanguages.ALL.contains(ruleExpressionLanguage);\n-  }\n \n-}\n+    return RuleExpressionLanguages.ALL.contains(ruleExpressionLanguage);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "column": "77",
                    "severity": "error",
                    "message": "'}' at column 77 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/103/ValidRuleExpressionLanguageValidator.java\nindex f4e6ef255d..1bb6d7b083 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/103/ValidRuleExpressionLanguageValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/103/ValidRuleExpressionLanguageValidator.java\n@@ -23,9 +23,8 @@ public class ValidRuleExpressionLanguageValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidRuleExpressionLanguage constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 3
        }
    ]
}