{
    "error_id": "65",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/65/RegTParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/65/RegTParam.java\nindex 4fff8af825..c2fccac74b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/65/RegTParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/65/RegTParam.java\n@@ -19,14 +19,14 @@ package com.tencent.angel.spark.ml.tree.param;\n \n public class RegTParam extends TreeParam {\n \n-  public float learningRate;  // step size of one tree\n-  public float minSplitGain;  // minimum loss gain required for a split\n+    public float learningRate;  // step size of one tree\n+    public float minSplitGain;  // minimum loss gain required for a split\n \n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder(super.toString());\n-    sb.append(String.format(\"|learningRate = %f\\n\", learningRate));\n-    sb.append(String.format(\"|minSplitGain = %f\\n\", minSplitGain));\n-    return sb.toString();\n-  }\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder(super.toString());\n+        sb.append(String.format(\"|learningRate = %f\\n\", learningRate));\n+        sb.append(String.format(\"|minSplitGain = %f\\n\", minSplitGain));\n+        return sb.toString();\n+    }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/65/RegTParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/65/RegTParam.java\nindex 4fff8af825..66fd26102a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/65/RegTParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/65/RegTParam.java\n@@ -19,8 +19,9 @@ package com.tencent.angel.spark.ml.tree.param;\n \n public class RegTParam extends TreeParam {\n \n-  public float learningRate;  // step size of one tree\n-  public float minSplitGain;  // minimum loss gain required for a split\n+  public float learningRate;\n+// step size of one tree\n+  public float minSplitGain; // minimum loss gain required for a split\n \n   @Override\n   public String toString() {\n@@ -29,4 +30,4 @@ public class RegTParam extends TreeParam {\n     sb.append(String.format(\"|minSplitGain = %f\\n\", minSplitGain));\n     return sb.toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/65/RegTParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/65/RegTParam.java\nindex 4fff8af825..105c0db5eb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/65/RegTParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/65/RegTParam.java\n@@ -17,16 +17,19 @@\n \n package com.tencent.angel.spark.ml.tree.param;\n \n+\n public class RegTParam extends TreeParam {\n \n-  public float learningRate;  // step size of one tree\n-  public float minSplitGain;  // minimum loss gain required for a split\n+    public float learningRate;  // step size of one tree\n+\n+    public float minSplitGain;  // minimum loss gain required for a split\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder(super.toString());\n     sb.append(String.format(\"|learningRate = %f\\n\", learningRate));\n     sb.append(String.format(\"|minSplitGain = %f\\n\", minSplitGain));\n     return sb.toString();\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}