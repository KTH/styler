{
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n    }\n\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "column": "28",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/50/DCPEndpoint.java\nindex 7c06bbccf2..483841ca66 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/50/DCPEndpoint.java\n@@ -41,7 +41,8 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+                           super(hostname, bucket, username, password, port, environment,responseBuffer ,false\n+                           , environment.ioPool(), true);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/50/DCPEndpoint.java\nindex 7c06bbccf2..a816cc5858 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/50/DCPEndpoint.java\n@@ -41,7 +41,8 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(),\n+            true);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/50/DCPEndpoint.java\nindex 7c06bbccf2..011a738fd2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/50/DCPEndpoint.java\n@@ -34,14 +34,12 @@ import io.netty.channel.ChannelPipeline;\n public class DCPEndpoint extends AbstractEndpoint {\n \n     @Deprecated\n-    public DCPEndpoint(String hostname, String bucket, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n+    public DCPEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+    public DCPEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n@@ -53,4 +51,4 @@ public class DCPEndpoint extends AbstractEndpoint {\n             .addLast(new DCPConnectionHandler(environment()))\n             .addLast(new DCPHandler(this, responseBuffer(), false, true));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 255).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/50/DCPEndpoint.java\nindex 7c06bbccf2..3cd0f4ed6c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/50/DCPEndpoint.java\n@@ -31,26 +31,24 @@ import io.netty.channel.ChannelPipeline;\n  * @author Sergey Avseyev\n  * @since 1.1.0\n  */\n+\n+\n public class DCPEndpoint extends AbstractEndpoint {\n \n     @Deprecated\n-    public DCPEndpoint(String hostname, String bucket, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    public DCPEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n-                       CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    public DCPEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n     }\n \n     @Override\n     protected void customEndpointHandlers(ChannelPipeline pipeline) {\n-        pipeline\n-            .addLast(new BinaryMemcacheClientCodec())\n-            .addLast(new BinaryMemcacheObjectAggregator(Integer.MAX_VALUE))\n-            .addLast(new KeyValueAuthHandler(username(), password()))\n-            .addLast(new DCPConnectionHandler(environment()))\n-            .addLast(new DCPHandler(this, responseBuffer(), false, true));\n+        pipeline.addLast(new BinaryMemcacheClientCodec()).addLast(new BinaryMemcacheObjectAggregator(Integer.MAX_VALUE)).addLast(new KeyValueAuthHandler(username(), password())).addLast(new DCPConnectionHandler(environment())).addLast(new DCPHandler(this,\n+            responseBuffer(),\n+            false,\n+            true));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "column": "20",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/50/DCPEndpoint.java\nindex 7c06bbccf2..9e8af1a648 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/50/DCPEndpoint.java\n@@ -41,10 +41,9 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n-    }\n-\n-    @Override\n+                           super(hostname, bucket, username, password, port,environment\n+                   , responseBuffer, false,environment. ioPool( ), true);\n+    } @ Override\n     protected void customEndpointHandlers(ChannelPipeline pipeline) {\n         pipeline\n             .addLast(new BinaryMemcacheClientCodec())\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "column": "28",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/50/DCPEndpoint.java\nindex 7c06bbccf2..483841ca66 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/50/DCPEndpoint.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/50/DCPEndpoint.java\n@@ -41,7 +41,8 @@ public class DCPEndpoint extends AbstractEndpoint {\n \n     public DCPEndpoint(String hostname, String bucket, String username, String password, int port,\n                        CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.ioPool(), true);\n+                           super(hostname, bucket, username, password, port, environment,responseBuffer ,false\n+                           , environment.ioPool(), true);\n     }\n \n     @Override\n",
            "diff_size": 2
        }
    ]
}