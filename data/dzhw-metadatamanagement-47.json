{
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 113).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * Returns a set of known languages.\n   *\n   * @param locale Locale to use for language names. Falls back to default JVM locale if given locale is unknown.\n   * @return Set of languages\n   */\n  public Set<Language> getLanguages(String locale) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/47/LanguagesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/47/LanguagesProvider.java\nindex f3ed75313b..c9938da1fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/47/LanguagesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/47/LanguagesProvider.java\n@@ -37,4 +37,4 @@ public class LanguagesProvider {\n       return new Language(l, languageLocale.getDisplayLanguage(clientLanguage));\n     }).collect(Collectors.toCollection(TreeSet::new));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 31, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/47/LanguagesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/47/LanguagesProvider.java\nindex f3ed75313b..d97a041235 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/47/LanguagesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/47/LanguagesProvider.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.common.service;\n \n import eu.dzhw.fdz.metadatamanagement.common.domain.Language;\n import org.springframework.stereotype.Service;\n-\n import java.util.Locale;\n import java.util.Set;\n import java.util.TreeSet;\n@@ -12,17 +11,20 @@ import java.util.stream.Stream;\n /**\n  * Provides a set of known languages.\n  */\n+\n+\n @Service\n public class LanguagesProvider {\n \n-  private String[] languages;\n+    private String[] languages;\n \n   /**\n    * Creates a new instance.\n    */\n-  public LanguagesProvider() {\n+\n+    public LanguagesProvider() {\n     languages = Locale.getISOLanguages();\n-  }\n+    }\n \n   /**\n    * Returns a set of known languages.\n@@ -30,11 +32,13 @@ public class LanguagesProvider {\n    * @param locale Locale to use for language names. Falls back to default JVM locale if given locale is unknown.\n    * @return Set of languages\n    */\n-  public Set<Language> getLanguages(String locale) {\n+\n+    public Set<Language> getLanguages(String locale) {\n     Locale clientLanguage = new Locale(locale);\n     return Stream.of(languages).map(l -> {\n-      Locale languageLocale = new Locale(l);\n-      return new Language(l, languageLocale.getDisplayLanguage(clientLanguage));\n-    }).collect(Collectors.toCollection(TreeSet::new));\n-  }\n-}\n+        Locale languageLocale = new Locale(l);\n+        return new Language(l, languageLocale.getDisplayLanguage(clientLanguage));\n+                               })\n+                               .collect(Collectors.toCollection(TreeSet::new));\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}