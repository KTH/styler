{
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "74",
                "severity": "error",
                "message": "'}' at column 74 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "74",
                    "severity": "error",
                    "message": "'}' at column 74 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/78/I18nStringEntireNotEmptyValidator.java\nindex cd89c134ee..72846ef061 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/78/I18nStringEntireNotEmptyValidator.java\n@@ -14,9 +14,9 @@ import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n  * @author Daniel Katzberg\n  *\n  */\n-public class I18nStringEntireNotEmptyValidator implements \n+public class I18nStringEntireNotEmptyValidator implements\n     ConstraintValidator<I18nStringEntireNotEmpty, I18nString> {\n-  \n+\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -31,12 +31,12 @@ public class I18nStringEntireNotEmptyValidator implements\n    */\n   @Override\n   public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n-        \n+\n     //Empty check\n     if (value == null) {\n       return false;\n     }\n-    \n+\n     //Check De /En Empty String    \n     return !Strings.isNullOrEmpty(value.getDe()) && !Strings.isNullOrEmpty(value.getEn());\n   }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/78/I18nStringEntireNotEmptyValidator.java\nindex cd89c134ee..af2aa83ae4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/78/I18nStringEntireNotEmptyValidator.java\n@@ -8,35 +8,35 @@ import com.google.common.base.Strings;\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n \n /**\n- * Validate the single strings of the i18n strings. If both are not null or empty, return true. \n+ * Validate the single strings of the i18n strings. If both are not null or empty, return true.\n  * If one or none of the String is set, then return false.\n- *  \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n-public class I18nStringEntireNotEmptyValidator implements \n+public class I18nStringEntireNotEmptyValidator implements\n     ConstraintValidator<I18nStringEntireNotEmpty, I18nString> {\n-  \n+\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {}\n+  public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n+   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n-        \n+\n     //Empty check\n     if (value == null) {\n       return false;\n     }\n-    \n+\n     //Check De /En Empty String    \n     return !Strings.isNullOrEmpty(value.getDe()) && !Strings.isNullOrEmpty(value.getEn());\n   }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/78/I18nStringEntireNotEmptyValidator.java\nindex cd89c134ee..dc823d7c3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/78/I18nStringEntireNotEmptyValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.common.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import com.google.common.base.Strings;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n \n /**\n@@ -14,31 +12,38 @@ import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n  * @author Daniel Katzberg\n  *\n  */\n-public class I18nStringEntireNotEmptyValidator implements \n-    ConstraintValidator<I18nStringEntireNotEmpty, I18nString> {\n+\n+\n+public class I18nStringEntireNotEmptyValidator implements ConstraintValidator<I18nStringEntireNotEmpty, I18nString> {\n   \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(I18nString value,\n+        ConstraintValidatorContext context) {\n         \n     //Empty check\n     if (value == null) {\n-      return false;\n+        return false;\n     }\n     \n     //Check De /En Empty String    \n-    return !Strings.isNullOrEmpty(value.getDe()) && !Strings.isNullOrEmpty(value.getEn());\n-  }\n \n-}\n+    return !Strings.isNullOrEmpty(value.getDe()) && !Strings.isNullOrEmpty(value.getEn());\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "74",
                    "severity": "error",
                    "message": "'}' at column 74 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/78/I18nStringEntireNotEmptyValidator.java\nindex cd89c134ee..72846ef061 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/78/I18nStringEntireNotEmptyValidator.java\n@@ -14,9 +14,9 @@ import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n  * @author Daniel Katzberg\n  *\n  */\n-public class I18nStringEntireNotEmptyValidator implements \n+public class I18nStringEntireNotEmptyValidator implements\n     ConstraintValidator<I18nStringEntireNotEmpty, I18nString> {\n-  \n+\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -31,12 +31,12 @@ public class I18nStringEntireNotEmptyValidator implements\n    */\n   @Override\n   public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n-        \n+\n     //Empty check\n     if (value == null) {\n       return false;\n     }\n-    \n+\n     //Check De /En Empty String    \n     return !Strings.isNullOrEmpty(value.getDe()) && !Strings.isNullOrEmpty(value.getEn());\n   }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/78/I18nStringEntireNotEmptyValidator.java\nindex cd89c134ee..de30d2c3e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/78/I18nStringEntireNotEmptyValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/78/I18nStringEntireNotEmptyValidator.java\n@@ -14,29 +14,28 @@ import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n  * @author Daniel Katzberg\n  *\n  */\n-public class I18nStringEntireNotEmptyValidator implements \n+public class I18nStringEntireNotEmptyValidator implements\n     ConstraintValidator<I18nStringEntireNotEmpty, I18nString> {\n-  \n+\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(I18nStringEntireNotEmpty constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(I18nString value, ConstraintValidatorContext context) {\n-        \n+\n     //Empty check\n     if (value == null) {\n       return false;\n     }\n-    \n+\n     //Check De /En Empty String    \n     return !Strings.isNullOrEmpty(value.getDe()) && !Strings.isNullOrEmpty(value.getEn());\n   }\n",
            "diff_size": 7
        }
    ]
}