{
    "error_id": "29",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n\n\n        return routes;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/29/RouteInnerServiceSMOImpl.java\nindex 6eca4b2372..34e3e62908 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/29/RouteInnerServiceSMOImpl.java\n@@ -41,9 +41,7 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n         if (page != PageDto.DEFAULT_PAGE) {\n             routeDto.setPage((page - 1) * routeDto.getRow());\n             routeDto.setRow(page * routeDto.getRow());\n-        }\n-\n-        List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n+        } List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n \n \n         return routes;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/29/RouteInnerServiceSMOImpl.java\nindex 6eca4b2372..55df314232 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/29/RouteInnerServiceSMOImpl.java\n@@ -25,63 +25,64 @@ import java.util.List;\n @RestController\n public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteInnerServiceSMO {\n \n-    @Autowired\n-    private IRouteServiceDao routeServiceDaoImpl;\n+  @Autowired\n+  private IRouteServiceDao routeServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<RouteDto> queryRoutes(@RequestBody  RouteDto routeDto) {\n+  @Override\n+  public List<RouteDto> queryRoutes(@RequestBody RouteDto routeDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = routeDto.getPage();\n+    int page = routeDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            routeDto.setPage((page - 1) * routeDto.getRow());\n-            routeDto.setRow(page * routeDto.getRow());\n-        }\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      routeDto.setPage((page - 1) * routeDto.getRow());\n+      routeDto.setRow(page * routeDto.getRow());\n+    }\n \n-        List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n+    List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n \n \n-        return routes;\n-    }\n+    return routes;\n+  }\n \n-    @Override\n-    public int updateRoute(@RequestBody RouteDto routeDto) {\n-        return routeServiceDaoImpl.updateRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n-    }\n+  @Override\n+  public int updateRoute(@RequestBody RouteDto routeDto) {\n+    return routeServiceDaoImpl.updateRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n+  }\n \n-    @Override\n-    public int saveRoute(@RequestBody RouteDto routeDto) {\n-        return routeServiceDaoImpl.saveRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n-    }\n+  @Override\n+  public int saveRoute(@RequestBody RouteDto routeDto) {\n+    return routeServiceDaoImpl.saveRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n+  }\n \n-    @Override\n-    public int deleteRoute(@RequestBody RouteDto routeDto) {\n-        routeDto.setStatusCd(\"1\");\n-        return routeServiceDaoImpl.updateRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n-    }\n+  @Override\n+  public int deleteRoute(@RequestBody RouteDto routeDto) {\n+    routeDto.setStatusCd(\"1\");\n+    return routeServiceDaoImpl.updateRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n+  }\n \n-    @Override\n-    public int queryRoutesCount(@RequestBody RouteDto routeDto) {\n-        return routeServiceDaoImpl.queryRoutesCount(BeanConvertUtil.beanCovertMap(routeDto));    }\n+  @Override\n+  public int queryRoutesCount(@RequestBody RouteDto routeDto) {\n+    return routeServiceDaoImpl.queryRoutesCount(BeanConvertUtil.beanCovertMap(routeDto));\n+  }\n \n-    public IRouteServiceDao getRouteServiceDaoImpl() {\n-        return routeServiceDaoImpl;\n-    }\n+  public IRouteServiceDao getRouteServiceDaoImpl() {\n+    return routeServiceDaoImpl;\n+  }\n \n-    public void setRouteServiceDaoImpl(IRouteServiceDao routeServiceDaoImpl) {\n-        this.routeServiceDaoImpl = routeServiceDaoImpl;\n-    }\n+  public void setRouteServiceDaoImpl(IRouteServiceDao routeServiceDaoImpl) {\n+    this.routeServiceDaoImpl = routeServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/29/RouteInnerServiceSMOImpl.java\nindex 6eca4b2372..07f97c9338 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/29/RouteInnerServiceSMOImpl.java\n@@ -45,8 +45,7 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n \n         List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n \n-\n-        return routes;\n+return routes;\n     }\n \n     @Override\n@@ -84,4 +83,4 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/29/RouteInnerServiceSMOImpl.java\nindex 6eca4b2372..9e55bb74b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/29/RouteInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.common.util.BeanConvertUtil;\n import com.java110.community.dao.IRouteServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -11,7 +10,6 @@ import com.java110.dto.service.RouteDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteInnerServiceSMO {\n \n@@ -32,12 +32,10 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<RouteDto> queryRoutes(@RequestBody  RouteDto routeDto) {\n+    public List<RouteDto> queryRoutes(@RequestBody RouteDto routeDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = routeDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             routeDto.setPage((page - 1) * routeDto.getRow());\n             routeDto.setRow(page * routeDto.getRow());\n@@ -45,29 +43,33 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n \n         List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n \n-\n         return routes;\n     }\n \n+\n     @Override\n     public int updateRoute(@RequestBody RouteDto routeDto) {\n         return routeServiceDaoImpl.updateRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n     }\n \n+\n     @Override\n     public int saveRoute(@RequestBody RouteDto routeDto) {\n         return routeServiceDaoImpl.saveRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n     }\n \n+\n     @Override\n     public int deleteRoute(@RequestBody RouteDto routeDto) {\n         routeDto.setStatusCd(\"1\");\n         return routeServiceDaoImpl.updateRouteInfo(BeanConvertUtil.beanCovertMap(routeDto));\n     }\n \n+\n     @Override\n     public int queryRoutesCount(@RequestBody RouteDto routeDto) {\n-        return routeServiceDaoImpl.queryRoutesCount(BeanConvertUtil.beanCovertMap(routeDto));    }\n+        return routeServiceDaoImpl.queryRoutesCount(BeanConvertUtil.beanCovertMap(routeDto));\n+    }\n \n     public IRouteServiceDao getRouteServiceDaoImpl() {\n         return routeServiceDaoImpl;\n@@ -84,4 +86,4 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/29/RouteInnerServiceSMOImpl.java\nindex 6eca4b2372..34e3e62908 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/29/RouteInnerServiceSMOImpl.java\n@@ -41,9 +41,7 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n         if (page != PageDto.DEFAULT_PAGE) {\n             routeDto.setPage((page - 1) * routeDto.getRow());\n             routeDto.setRow(page * routeDto.getRow());\n-        }\n-\n-        List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n+        } List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n \n \n         return routes;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "44",
                    "column": "31",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "31",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/29/RouteInnerServiceSMOImpl.java\nindex 6eca4b2372..759ee57a26 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/29/RouteInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/29/RouteInnerServiceSMOImpl.java\n@@ -41,9 +41,9 @@ public class RouteInnerServiceSMOImpl extends BaseServiceSMO implements IRouteIn\n         if (page != PageDto.DEFAULT_PAGE) {\n             routeDto.setPage((page - 1) * routeDto.getRow());\n             routeDto.setRow(page * routeDto.getRow());\n-        }\n+        } List<RouteDto>routes=BeanConvertUtil.covertBeanList(\n \n-        List<RouteDto> routes = BeanConvertUtil.covertBeanList(routeServiceDaoImpl.getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n+        routeServiceDaoImpl .getRouteInfo(BeanConvertUtil.beanCovertMap(routeDto)), RouteDto.class);\n \n \n         return routes;\n",
            "diff_size": 2
        }
    ]
}