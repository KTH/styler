{
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/30/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/30/User.java\nindex 06debd087d..6a45cb7096 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/30/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/intellij/30/User.java\n@@ -21,140 +21,157 @@ package com.cloudera.director.client.v6.model;\n import java.util.Set;\n \n public class User {\n-  /* Enabled */\n-  private Boolean enabled;\n-  /* Password [redacted on read] */\n-  private String password;\n-  /* Roles */\n-  private Set<String> roles;\n-  /* User name */\n-  private String username;\n-  public User() { }\n-\n-  private User(Boolean enabled, String password, Set<String> roles, String username) {\n-    this.enabled = enabled;\n-    this.password = password;\n-    this.roles = roles;\n-    this.username = username;\n-  }\n-\n-  private User(UserBuilder builder) {\n-    this.enabled = builder.enabled;\n-    this.password = builder.password;\n-    this.roles = builder.roles;\n-    this.username = builder.username;\n-  }\n-\n-  public static UserBuilder builder() {\n-    return new UserBuilder();\n-  }\n-\n-  public static class UserBuilder {\n-    private Boolean enabled = null;\n-    private String password = null;\n-    private Set<String> roles = null;\n-    private String username = null;\n-\n-    public UserBuilder enabled(Boolean enabled) {\n-      this.enabled = enabled;\n-      return this;\n-    }\n-\n-    public UserBuilder password(String password) {\n-      this.password = password;\n-      return this;\n-    }\n-\n-    public UserBuilder roles(Set<String> roles) {\n-      this.roles = roles;\n-      return this;\n-    }\n-\n-    public UserBuilder username(String username) {\n-      this.username = username;\n-      return this;\n-    }\n-\n-    public User build() {\n-      return new User(this);\n-    }\n-  }\n-\n-  public UserBuilder toBuilder() {\n-    return builder()\n-      .enabled(enabled)\n-      .password(password)\n-      .roles(roles)\n-      .username(username)\n-      ;\n-  }\n-  public Boolean getEnabled() {\n-    return enabled;\n-  }\n-  public void setEnabled(Boolean enabled) {\n-    this.enabled = enabled;\n-  }\n-\n-  public String getPassword() {\n-    return password;\n-  }\n-  public void setPassword(String password) {\n-    this.password = password;\n-  }\n-\n-  public Set<String> getRoles() {\n-    return roles;\n-  }\n-  public void setRoles(Set<String> roles) {\n-    this.roles = roles;\n-  }\n-\n-  public String getUsername() {\n-    return username;\n-  }\n-  public void setUsername(String username) {\n-    this.username = username;\n-  }\n-\n-  @Override\n-  public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    User other = (User) o; // NOPMD\n-\n-    if (enabled != null ?\n-        !enabled.equals(other.enabled) :\n-        other.enabled != null) return false;\n-    if (roles != null ?\n-        !roles.equals(other.roles) :\n-        other.roles != null) return false;\n-    if (username != null ?\n-        !username.equals(other.username) :\n-        other.username != null) return false;\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int result = 0;\n-    result = 31 * result + (enabled != null ? enabled.hashCode() : 0);\n-    result = 31 * result + (roles != null ? roles.hashCode() : 0);\n-    result = 31 * result + (username != null ? username.hashCode() : 0);\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString()  {\n-    StringBuilder sb = new StringBuilder();\n-    String newLine = System.getProperty(\"line.separator\");\n-    sb.append(\"class User {\" + newLine);\n-    sb.append(\"  enabled: \").append(enabled).append(newLine);\n-    sb.append(\"  password: \").append(\"REDACTED\").append(newLine);\n-    sb.append(\"  roles: \").append(roles).append(newLine);\n-    sb.append(\"  username: \").append(username).append(newLine);\n-    sb.append(\"}\" + newLine);\n-    return sb.toString();\n-  }\n+    /* Enabled */\n+    private Boolean enabled;\n+    /* Password [redacted on read] */\n+    private String password;\n+    /* Roles */\n+    private Set<String> roles;\n+    /* User name */\n+    private String username;\n+\n+    public User() {\n+    }\n+\n+    private User(Boolean enabled, String password, Set<String> roles, String username) {\n+        this.enabled = enabled;\n+        this.password = password;\n+        this.roles = roles;\n+        this.username = username;\n+    }\n+\n+    private User(UserBuilder builder) {\n+        this.enabled = builder.enabled;\n+        this.password = builder.password;\n+        this.roles = builder.roles;\n+        this.username = builder.username;\n+    }\n+\n+    public static UserBuilder builder() {\n+        return new UserBuilder();\n+    }\n+\n+    public static class UserBuilder {\n+        private Boolean enabled = null;\n+        private String password = null;\n+        private Set<String> roles = null;\n+        private String username = null;\n+\n+        public UserBuilder enabled(Boolean enabled) {\n+            this.enabled = enabled;\n+            return this;\n+        }\n+\n+        public UserBuilder password(String password) {\n+            this.password = password;\n+            return this;\n+        }\n+\n+        public UserBuilder roles(Set<String> roles) {\n+            this.roles = roles;\n+            return this;\n+        }\n+\n+        public UserBuilder username(String username) {\n+            this.username = username;\n+            return this;\n+        }\n+\n+        public User build() {\n+            return new User(this);\n+        }\n+    }\n+\n+    public UserBuilder toBuilder() {\n+        return builder()\n+            .enabled(enabled)\n+            .password(password)\n+            .roles(roles)\n+            .username(username)\n+            ;\n+    }\n+\n+    public Boolean getEnabled() {\n+        return enabled;\n+    }\n+\n+    public void setEnabled(Boolean enabled) {\n+        this.enabled = enabled;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public void setPassword(String password) {\n+        this.password = password;\n+    }\n+\n+    public Set<String> getRoles() {\n+        return roles;\n+    }\n+\n+    public void setRoles(Set<String> roles) {\n+        this.roles = roles;\n+    }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+    public void setUsername(String username) {\n+        this.username = username;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        User other = (User) o; // NOPMD\n+\n+        if (enabled != null ?\n+            !enabled.equals(other.enabled) :\n+            other.enabled != null) {\n+            return false;\n+        }\n+        if (roles != null ?\n+            !roles.equals(other.roles) :\n+            other.roles != null) {\n+            return false;\n+        }\n+        if (username != null ?\n+            !username.equals(other.username) :\n+            other.username != null) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = 0;\n+        result = 31 * result + (enabled != null ? enabled.hashCode() : 0);\n+        result = 31 * result + (roles != null ? roles.hashCode() : 0);\n+        result = 31 * result + (username != null ? username.hashCode() : 0);\n+        return result;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        String newLine = System.getProperty(\"line.separator\");\n+        sb.append(\"class User {\" + newLine);\n+        sb.append(\"  enabled: \").append(enabled).append(newLine);\n+        sb.append(\"  password: \").append(\"REDACTED\").append(newLine);\n+        sb.append(\"  roles: \").append(roles).append(newLine);\n+        sb.append(\"  username: \").append(username).append(newLine);\n+        sb.append(\"}\" + newLine);\n+        return sb.toString();\n+    }\n }\n \n",
            "diff_size": 152
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "115",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "117",
                    "column": "19",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "119",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/30/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/30/User.java\nindex 06debd087d..594464b8fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/30/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/naturalize/30/User.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v6.model;\n@@ -29,7 +14,8 @@ public class User {\n   private Set<String> roles;\n   /* User name */\n   private String username;\n-  public User() { }\n+\n+public User() { }\n \n   private User(Boolean enabled, String password, Set<String> roles, String username) {\n     this.enabled = enabled;\n@@ -50,7 +36,8 @@ public class User {\n   }\n \n   public static class UserBuilder {\n-    private Boolean enabled = null;\n+\n+  private Boolean enabled = null;\n     private String password = null;\n     private Set<String> roles = null;\n     private String username = null;\n@@ -81,14 +68,13 @@ public class User {\n   }\n \n   public UserBuilder toBuilder() {\n-    return builder()\n-      .enabled(enabled)\n+    return builder().enabled(enabled)\n       .password(password)\n       .roles(roles)\n-      .username(username)\n-      ;\n+      .username(username);\n   }\n-  public Boolean getEnabled() {\n+\n+public Boolean getEnabled() {\n     return enabled;\n   }\n   public void setEnabled(Boolean enabled) {\n@@ -119,19 +105,18 @@ public class User {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    User other = (User) o; // NOPMD\n-\n-    if (enabled != null ?\n-        !enabled.equals(other.enabled) :\n-        other.enabled != null) return false;\n-    if (roles != null ?\n-        !roles.equals(other.roles) :\n-        other.roles != null) return false;\n-    if (username != null ?\n-        !username.equals(other.username) :\n-        other.username != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    User other = (User) o;\n+\n+// NOPMD\n+\n+    if (enabled != null ?!enabled.equals(other.enabled) : other.enabled != null) return false;\n+\n+if (roles != null ?!roles.equals(other.roles) : other.roles != null) return false;\n+\n+if (username != null ?!username.equals(other.username) : other.username != null) return false;\n     return true;\n   }\n \n@@ -145,7 +130,7 @@ public class User {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class User {\" + newLine);\n@@ -156,5 +141,4 @@ public class User {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "39",
                    "column": "19",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "column": "20",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "141",
                    "column": "23",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "143",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "143",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "143",
                    "column": "55",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "49",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "column": "58",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "155",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "155",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "155",
                    "column": "63",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "column": "41",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "column": "59",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "column": "17",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "column": "65",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/30/User.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/30/User.java\nindex 06debd087d..9d5b324dd2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/errored/1/30/User.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/cloudera-director-sdk/codebuff/30/User.java\n@@ -20,132 +20,147 @@ package com.cloudera.director.client.v6.model;\n \n import java.util.Set;\n \n+\n public class User {\n   /* Enabled */\n-  private Boolean enabled;\n+\n+    private Boolean enabled;\n   /* Password [redacted on read] */\n-  private String password;\n+\n+    private String password;\n   /* Roles */\n-  private Set<String> roles;\n+\n+    private Set<String> roles;\n   /* User name */\n-  private String username;\n-  public User() { }\n \n-  private User(Boolean enabled, String password, Set<String> roles, String username) {\n-    this.enabled = enabled;\n-    this.password = password;\n-    this.roles = roles;\n-    this.username = username;\n-  }\n+    private String username;\n+\n \n-  private User(UserBuilder builder) {\n-    this.enabled = builder.enabled;\n-    this.password = builder.password;\n-    this.roles = builder.roles;\n-    this.username = builder.username;\n-  }\n+    public User() {}\n \n-  public static UserBuilder builder() {\n+    private User(Boolean enabled, String password, Set<String> roles, String username) {\n+                                                                                       this.enabled = enabled;\n+                                                                                       this.password = password;\n+                                                                                       this.roles = roles;\n+                                                                                       this.username = username;\n+                  }\n+\n+    private User(UserBuilder builder) {\n+                                      this.enabled = builder.enabled;\n+                                      this.password = builder.password;\n+                                      this.roles = builder.roles;\n+                                      this.username = builder.username;\n+                  }\n+\n+    public static UserBuilder builder() {\n     return new UserBuilder();\n-  }\n+    }\n+\n+    public static class UserBuilder {\n \n-  public static class UserBuilder {\n     private Boolean enabled = null;\n+\n     private String password = null;\n+\n     private Set<String> roles = null;\n+\n     private String username = null;\n \n     public UserBuilder enabled(Boolean enabled) {\n-      this.enabled = enabled;\n-      return this;\n+        this.enabled = enabled;\n+        return this;\n     }\n \n     public UserBuilder password(String password) {\n-      this.password = password;\n-      return this;\n+        this.password = password;\n+        return this;\n     }\n \n     public UserBuilder roles(Set<String> roles) {\n-      this.roles = roles;\n-      return this;\n+        this.roles = roles;\n+        return this;\n     }\n \n     public UserBuilder username(String username) {\n-      this.username = username;\n-      return this;\n+        this.username = username;\n+        return this;\n     }\n \n     public User build() {\n-      return new User(this);\n-    }\n-  }\n-\n-  public UserBuilder toBuilder() {\n-    return builder()\n-      .enabled(enabled)\n-      .password(password)\n-      .roles(roles)\n-      .username(username)\n-      ;\n-  }\n-  public Boolean getEnabled() {\n+        return new User(this);\n+    }\n+    }\n+\n+    public UserBuilder toBuilder() {\n+    return builder().enabled(enabled)\n+                    .password(password)\n+                    .roles(roles)\n+                    .username(username);\n+    }\n+\n+    public Boolean getEnabled() {\n     return enabled;\n-  }\n-  public void setEnabled(Boolean enabled) {\n+    }\n+\n+    public void setEnabled(Boolean enabled) {\n     this.enabled = enabled;\n-  }\n+    }\n \n-  public String getPassword() {\n+    public String getPassword() {\n     return password;\n-  }\n-  public void setPassword(String password) {\n+    }\n+\n+    public void setPassword(String password) {\n     this.password = password;\n-  }\n+    }\n \n-  public Set<String> getRoles() {\n+    public Set<String> getRoles() {\n     return roles;\n-  }\n-  public void setRoles(Set<String> roles) {\n+    }\n+\n+    public void setRoles(Set<String> roles) {\n     this.roles = roles;\n-  }\n+    }\n \n-  public String getUsername() {\n+    public String getUsername() {\n     return username;\n-  }\n-  public void setUsername(String username) {\n+    }\n+\n+    public void setUsername(String username) {\n     this.username = username;\n-  }\n+    }\n+\n \n-  @Override\n-  public boolean equals(Object o) {\n+    @Override\n+    public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    User other = (User) o; // NOPMD\n-\n-    if (enabled != null ?\n-        !enabled.equals(other.enabled) :\n-        other.enabled != null) return false;\n-    if (roles != null ?\n-        !roles.equals(other.roles) :\n-        other.roles != null) return false;\n-    if (username != null ?\n-        !username.equals(other.username) :\n-        other.username != null) return false;\n+\n+    if (o == null ||\n+        getClass() != o.getClass()) return false;\n+\n+    User other = (User)o; // NOPMD\n+\n+    if (enabled != null?!enabled.equals(other.enabled): other.enabled != null) return false;\n+\n+    if (roles != null?!roles.equals(other.roles): other.roles != null) return false;\n+\n+    if (username != null?!username.equals(other.username): other.username != null) return false;\n     return true;\n-  }\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (enabled != null ? enabled.hashCode() : 0);\n-    result = 31 * result + (roles != null ? roles.hashCode() : 0);\n-    result = 31 * result + (username != null ? username.hashCode() : 0);\n+    result = 31 *result + (enabled != null? enabled.hashCode(): 0);\n+    result = 31 *result + (roles != null? roles.hashCode(): 0);\n+    result = 31 *result + (username != null? username.hashCode(): 0);\n     return result;\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString()  {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class User {\" + newLine);\n@@ -155,6 +170,5 @@ public class User {\n     sb.append(\"  username: \").append(username).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n-  }\n-}\n-\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 113
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}