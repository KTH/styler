{
    "error_id": "19",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * style license a copy of which has been included with this distribution in\n * the LICENSE.txt file.\n * \n * Created on 15. February 2006 by Mauro Talevi\n */\npackage edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler/19/AbstractSingleValueConverter.java\nindex 41aacc2169..e9682f17ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler/19/AbstractSingleValueConverter.java\n@@ -1,50 +1,50 @@\n-/**\r\n- * Copyright 2014 Internet2\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-/*\r\n- * Copyright (C) 2006, 2007 XStream Committers.\r\n- * All rights reserved.\r\n- *\r\n- * The software in this package is published under the terms of the BSD\r\n- * style license a copy of which has been included with this distribution in\r\n- * the LICENSE.txt file.\r\n- * \r\n- * Created on 15. February 2006 by Mauro Talevi\r\n- */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\r\n-\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter;\r\n-\r\n-/**\r\n- * Base abstract implementation of  {@link edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter}.\r\n- * <p/>\r\n- * <p>Subclasses should implement methods canConvert(Class) and fromString(String) for the conversion.</p>\r\n- *\r\n- * @author Joe Walnes\r\n- * @author J&ouml;rg Schaible\r\n- * @author Mauro Talevi\r\n- * @see edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter\r\n- */\r\n-public abstract class AbstractSingleValueConverter implements SingleValueConverter {\r\n-\r\n-    public abstract boolean canConvert(Class type);\r\n-\r\n-    public String toString(Object obj) {\r\n-        return obj == null ? null : obj.toString();\r\n-    }\r\n-\r\n-    public abstract Object fromString(String str);\r\n-\r\n-}\r\n+/**\n+ * Copyright 2014 Internet2\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/*\n+ * Copyright (C) 2006, 2007 XStream Committers.\n+ * All rights reserved.\n+ *\n+ * The software in this package is published under the terms of the BSD\n+ * style license a copy of which has been included with this distribution in\n+ * the LICENSE.txt file.\n+ * \n+ * Created on 15. February 2006 by Mauro Talevi\n+ */\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\n+\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter;\n+\n+/**\n+ * Base abstract implementation of  {@link edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter}.\n+ * <p/>\n+ * <p>Subclasses should implement methods canConvert(Class) and fromString(String) for the conversion.</p>\n+ *\n+ * @author Joe Walnes\n+ * @author J&ouml;rg Schaible\n+ * @author Mauro Talevi\n+ * @see edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter\n+ */\n+public abstract class AbstractSingleValueConverter implements SingleValueConverter {\n+\n+    public abstract boolean canConvert(Class type);\n+\n+    public String toString(Object obj) {\n+        return obj == null ? null : obj.toString();\n+    }\n+\n+    public abstract Object fromString(String str);\n+\n+}\n",
            "diff_size": 50
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/intellij/19/AbstractSingleValueConverter.java\nindex 41aacc2169..668aa6d55d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/intellij/19/AbstractSingleValueConverter.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -20,9 +20,10 @@\n  * The software in this package is published under the terms of the BSD\r\n  * style license a copy of which has been included with this distribution in\r\n  * the LICENSE.txt file.\r\n- * \r\n+ *\r\n  * Created on 15. February 2006 by Mauro Talevi\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\r\n \r\n import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter;\r\n@@ -39,12 +40,12 @@ import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.conver\n  */\r\n public abstract class AbstractSingleValueConverter implements SingleValueConverter {\r\n \r\n-    public abstract boolean canConvert(Class type);\r\n+  public abstract boolean canConvert(Class type);\r\n \r\n-    public String toString(Object obj) {\r\n-        return obj == null ? null : obj.toString();\r\n-    }\r\n+  public String toString(Object obj) {\r\n+    return obj == null ? null : obj.toString();\r\n+  }\r\n \r\n-    public abstract Object fromString(String str);\r\n+  public abstract Object fromString(String str);\r\n \r\n }\r\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/naturalize/19/AbstractSingleValueConverter.java\nindex 41aacc2169..9a94430c1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/naturalize/19/AbstractSingleValueConverter.java\n@@ -37,9 +37,8 @@ import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.conver\n  * @author Mauro Talevi\r\n  * @see edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter\r\n  */\r\n-public abstract class AbstractSingleValueConverter implements SingleValueConverter {\r\n-\r\n-    public abstract boolean canConvert(Class type);\r\n+public abstract class AbstractSingleValueConverter implements SingleValueConverter {\n+  public abstract boolean canConvert(Class type);\r\n \r\n     public String toString(Object obj) {\r\n         return obj == null ? null : obj.toString();\r\n@@ -47,4 +46,4 @@ public abstract class AbstractSingleValueConverter implements SingleValueConvert\n \r\n     public abstract Object fromString(String str);\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/codebuff/19/AbstractSingleValueConverter.java\nindex 41aacc2169..704d0d08bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/codebuff/19/AbstractSingleValueConverter.java\n@@ -23,8 +23,8 @@\n  * \r\n  * Created on 15. February 2006 by Mauro Talevi\r\n  */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\r\n-\r\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\n+\n import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter;\r\n \r\n /**\r\n@@ -36,15 +36,17 @@ import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.conver\n  * @author J&ouml;rg Schaible\r\n  * @author Mauro Talevi\r\n  * @see edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter\r\n- */\r\n-public abstract class AbstractSingleValueConverter implements SingleValueConverter {\r\n-\r\n-    public abstract boolean canConvert(Class type);\r\n-\r\n-    public String toString(Object obj) {\r\n-        return obj == null ? null : obj.toString();\r\n-    }\r\n-\r\n-    public abstract Object fromString(String str);\r\n-\r\n-}\r\n+ */\n+\n+\n+public abstract class AbstractSingleValueConverter implements SingleValueConverter {\n+    public abstract boolean canConvert(Class type);\n+\n+\n+    public String toString(Object obj) {\n+    return obj == null ? null : obj.toString();\n+    }\n+\n+\n+    public abstract Object fromString(String str);\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler_random/19/AbstractSingleValueConverter.java\nindex 41aacc2169..e9682f17ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/19/AbstractSingleValueConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler_random/19/AbstractSingleValueConverter.java\n@@ -1,50 +1,50 @@\n-/**\r\n- * Copyright 2014 Internet2\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-/*\r\n- * Copyright (C) 2006, 2007 XStream Committers.\r\n- * All rights reserved.\r\n- *\r\n- * The software in this package is published under the terms of the BSD\r\n- * style license a copy of which has been included with this distribution in\r\n- * the LICENSE.txt file.\r\n- * \r\n- * Created on 15. February 2006 by Mauro Talevi\r\n- */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\r\n-\r\n-import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter;\r\n-\r\n-/**\r\n- * Base abstract implementation of  {@link edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter}.\r\n- * <p/>\r\n- * <p>Subclasses should implement methods canConvert(Class) and fromString(String) for the conversion.</p>\r\n- *\r\n- * @author Joe Walnes\r\n- * @author J&ouml;rg Schaible\r\n- * @author Mauro Talevi\r\n- * @see edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter\r\n- */\r\n-public abstract class AbstractSingleValueConverter implements SingleValueConverter {\r\n-\r\n-    public abstract boolean canConvert(Class type);\r\n-\r\n-    public String toString(Object obj) {\r\n-        return obj == null ? null : obj.toString();\r\n-    }\r\n-\r\n-    public abstract Object fromString(String str);\r\n-\r\n-}\r\n+/**\n+ * Copyright 2014 Internet2\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/*\n+ * Copyright (C) 2006, 2007 XStream Committers.\n+ * All rights reserved.\n+ *\n+ * The software in this package is published under the terms of the BSD\n+ * style license a copy of which has been included with this distribution in\n+ * the LICENSE.txt file.\n+ * \n+ * Created on 15. February 2006 by Mauro Talevi\n+ */\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.basic;\n+\n+import edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter;\n+\n+/**\n+ * Base abstract implementation of  {@link edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter}.\n+ * <p/>\n+ * <p>Subclasses should implement methods canConvert(Class) and fromString(String) for the conversion.</p>\n+ *\n+ * @author Joe Walnes\n+ * @author J&ouml;rg Schaible\n+ * @author Mauro Talevi\n+ * @see edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.converters.SingleValueConverter\n+ */\n+public abstract class AbstractSingleValueConverter implements SingleValueConverter {\n+\n+    public abstract boolean canConvert(Class type);\n+\n+    public String toString(Object obj) {\n+        return obj == null ? null : obj.toString();\n+    }\n+\n+    public abstract Object fromString(String str);\n+\n+}\n",
            "diff_size": 50
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}