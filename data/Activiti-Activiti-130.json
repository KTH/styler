{
    "error_id": "130",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/130/CallActivity.java\nindex 71c4efda97..705fdc325d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/130/CallActivity.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/130/CallActivity.java\nindex 71c4efda97..d1dfd2b095 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/130/CallActivity.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -20,86 +21,86 @@ import java.util.List;\n \n public class CallActivity extends Activity {\n \n-  protected String calledElement;\n-  protected boolean inheritVariables;\n-  protected List<IOParameter> inParameters = new ArrayList<IOParameter>();\n-  protected List<IOParameter> outParameters = new ArrayList<IOParameter>();\n-  protected String businessKey;\n-  protected boolean inheritBusinessKey;\n-\n-  public String getCalledElement() {\n-    return calledElement;\n-  }\n-\n-  public void setCalledElement(String calledElement) {\n-    this.calledElement = calledElement;\n-  }\n-\n-  public boolean isInheritVariables() {\n-    return inheritVariables;\n-  }\n-\n-  public void setInheritVariables(boolean inheritVariables) {\n-    this.inheritVariables = inheritVariables;\n-  }\n-\n-  public List<IOParameter> getInParameters() {\n-    return inParameters;\n-  }\n-\n-  public void setInParameters(List<IOParameter> inParameters) {\n-    this.inParameters = inParameters;\n-  }\n-\n-  public List<IOParameter> getOutParameters() {\n-    return outParameters;\n-  }\n-\n-  public void setOutParameters(List<IOParameter> outParameters) {\n-    this.outParameters = outParameters;\n-  }\n-\n-  public String getBusinessKey() {\n-    return businessKey;\n-  }\n-\n-  public void setBusinessKey(String businessKey) {\n-    this.businessKey = businessKey;\n-  }\n-\n-  public boolean isInheritBusinessKey() {\n-    return inheritBusinessKey;\n-  }\n-\n-  public void setInheritBusinessKey(boolean inheritBusinessKey) {\n-    this.inheritBusinessKey = inheritBusinessKey;\n-  }\n-\n-  public CallActivity clone() {\n-    CallActivity clone = new CallActivity();\n-    clone.setValues(this);\n-    return clone;\n-  }\n-\n-  public void setValues(CallActivity otherElement) {\n-    super.setValues(otherElement);\n-    setCalledElement(otherElement.getCalledElement());\n-    setBusinessKey(otherElement.getBusinessKey());\n-    setInheritBusinessKey(otherElement.isInheritBusinessKey());\n-\n-    inParameters = new ArrayList<IOParameter>();\n-    if (otherElement.getInParameters() != null && !otherElement.getInParameters().isEmpty()) {\n-      for (IOParameter parameter : otherElement.getInParameters()) {\n-        inParameters.add(parameter.clone());\n-      }\n+    protected String calledElement;\n+    protected boolean inheritVariables;\n+    protected List<IOParameter> inParameters = new ArrayList<IOParameter>();\n+    protected List<IOParameter> outParameters = new ArrayList<IOParameter>();\n+    protected String businessKey;\n+    protected boolean inheritBusinessKey;\n+\n+    public String getCalledElement() {\n+        return calledElement;\n+    }\n+\n+    public void setCalledElement(String calledElement) {\n+        this.calledElement = calledElement;\n+    }\n+\n+    public boolean isInheritVariables() {\n+        return inheritVariables;\n+    }\n+\n+    public void setInheritVariables(boolean inheritVariables) {\n+        this.inheritVariables = inheritVariables;\n+    }\n+\n+    public List<IOParameter> getInParameters() {\n+        return inParameters;\n+    }\n+\n+    public void setInParameters(List<IOParameter> inParameters) {\n+        this.inParameters = inParameters;\n+    }\n+\n+    public List<IOParameter> getOutParameters() {\n+        return outParameters;\n+    }\n+\n+    public void setOutParameters(List<IOParameter> outParameters) {\n+        this.outParameters = outParameters;\n+    }\n+\n+    public String getBusinessKey() {\n+        return businessKey;\n+    }\n+\n+    public void setBusinessKey(String businessKey) {\n+        this.businessKey = businessKey;\n+    }\n+\n+    public boolean isInheritBusinessKey() {\n+        return inheritBusinessKey;\n+    }\n+\n+    public void setInheritBusinessKey(boolean inheritBusinessKey) {\n+        this.inheritBusinessKey = inheritBusinessKey;\n+    }\n+\n+    public CallActivity clone() {\n+        CallActivity clone = new CallActivity();\n+        clone.setValues(this);\n+        return clone;\n     }\n \n-    outParameters = new ArrayList<IOParameter>();\n-    if (otherElement.getOutParameters() != null && !otherElement.getOutParameters().isEmpty()) {\n-      for (IOParameter parameter : otherElement.getOutParameters()) {\n-        outParameters.add(parameter.clone());\n-      }\n+    public void setValues(CallActivity otherElement) {\n+        super.setValues(otherElement);\n+        setCalledElement(otherElement.getCalledElement());\n+        setBusinessKey(otherElement.getBusinessKey());\n+        setInheritBusinessKey(otherElement.isInheritBusinessKey());\n+\n+        inParameters = new ArrayList<IOParameter>();\n+        if (otherElement.getInParameters() != null && !otherElement.getInParameters().isEmpty()) {\n+            for (IOParameter parameter : otherElement.getInParameters()) {\n+                inParameters.add(parameter.clone());\n+            }\n+        }\n+\n+        outParameters = new ArrayList<IOParameter>();\n+        if (otherElement.getOutParameters() != null && !otherElement.getOutParameters().isEmpty()) {\n+            for (IOParameter parameter : otherElement.getOutParameters()) {\n+                outParameters.add(parameter.clone());\n+            }\n+        }\n     }\n-  }\n \n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/130/CallActivity.java\nindex 71c4efda97..4b2f585633 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/130/CallActivity.java\n@@ -18,88 +18,86 @@ package org.activiti.bpmn.model;\n import java.util.ArrayList;\n import java.util.List;\n \n-public class CallActivity extends Activity {\n \n-  protected String calledElement;\n-  protected boolean inheritVariables;\n-  protected List<IOParameter> inParameters = new ArrayList<IOParameter>();\n-  protected List<IOParameter> outParameters = new ArrayList<IOParameter>();\n-  protected String businessKey;\n-  protected boolean inheritBusinessKey;\n+public class CallActivity extends Activity {\n \n-  public String getCalledElement() {\n+    protected String calledElement;\n+    protected boolean inheritVariables;\n+    protected List<IOParameter> inParameters = new ArrayList<IOParameter>();\n+    protected List<IOParameter> outParameters = new ArrayList<IOParameter>();\n+    protected String businessKey;\n+    protected boolean inheritBusinessKey;\n+    public String getCalledElement() {\n     return calledElement;\n-  }\n+    }\n \n-  public void setCalledElement(String calledElement) {\n+    public void setCalledElement(String calledElement) {\n     this.calledElement = calledElement;\n-  }\n+    }\n \n-  public boolean isInheritVariables() {\n+    public boolean isInheritVariables() {\n     return inheritVariables;\n-  }\n+    }\n \n-  public void setInheritVariables(boolean inheritVariables) {\n+    public void setInheritVariables(boolean inheritVariables) {\n     this.inheritVariables = inheritVariables;\n-  }\n+    }\n \n-  public List<IOParameter> getInParameters() {\n+    public List<IOParameter> getInParameters() {\n     return inParameters;\n-  }\n+    }\n \n-  public void setInParameters(List<IOParameter> inParameters) {\n+    public void setInParameters(List<IOParameter> inParameters) {\n     this.inParameters = inParameters;\n-  }\n+    }\n \n-  public List<IOParameter> getOutParameters() {\n+    public List<IOParameter> getOutParameters() {\n     return outParameters;\n-  }\n+    }\n \n-  public void setOutParameters(List<IOParameter> outParameters) {\n+    public void setOutParameters(List<IOParameter> outParameters) {\n     this.outParameters = outParameters;\n-  }\n+    }\n \n-  public String getBusinessKey() {\n+    public String getBusinessKey() {\n     return businessKey;\n-  }\n+    }\n \n-  public void setBusinessKey(String businessKey) {\n+    public void setBusinessKey(String businessKey) {\n     this.businessKey = businessKey;\n-  }\n+    }\n \n-  public boolean isInheritBusinessKey() {\n+    public boolean isInheritBusinessKey() {\n     return inheritBusinessKey;\n-  }\n+    }\n \n-  public void setInheritBusinessKey(boolean inheritBusinessKey) {\n+    public void setInheritBusinessKey(boolean inheritBusinessKey) {\n     this.inheritBusinessKey = inheritBusinessKey;\n-  }\n+    }\n \n-  public CallActivity clone() {\n+    public CallActivity clone() {\n     CallActivity clone = new CallActivity();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(CallActivity otherElement) {\n+    public void setValues(CallActivity otherElement) {\n     super.setValues(otherElement);\n     setCalledElement(otherElement.getCalledElement());\n     setBusinessKey(otherElement.getBusinessKey());\n     setInheritBusinessKey(otherElement.isInheritBusinessKey());\n-\n     inParameters = new ArrayList<IOParameter>();\n     if (otherElement.getInParameters() != null && !otherElement.getInParameters().isEmpty()) {\n-      for (IOParameter parameter : otherElement.getInParameters()) {\n-        inParameters.add(parameter.clone());\n-      }\n+        for (IOParameter parameter : otherElement.getInParameters()) {\n+            inParameters.add(parameter.clone());\n+        }\n     }\n-\n     outParameters = new ArrayList<IOParameter>();\n     if (otherElement.getOutParameters() != null && !otherElement.getOutParameters().isEmpty()) {\n-      for (IOParameter parameter : otherElement.getOutParameters()) {\n-        outParameters.add(parameter.clone());\n-      }\n+        for (IOParameter parameter : otherElement.getOutParameters()) {\n+            outParameters.add(parameter.clone());\n+        }\n+    }\n     }\n-  }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/130/CallActivity.java\nindex 71c4efda97..705fdc325d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/130/CallActivity.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/130/CallActivity.java\nindex 71c4efda97..705fdc325d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/130/CallActivity.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/130/CallActivity.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ]
}