{
    "error_id": "370",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    InvocationStartProcessingEvent event = (InvocationStartProcessingEvent) data;\n    InvocationMonitor monitor = registryMonitor.getInvocationMonitor(event.getOperationName());\n    //TODO:current java chassis unable know invocation type before starting process,so all type WaitInQueue increment(-1) (decrement)\n    monitor.getWaitInQueue().increment(-1);\n    monitor.setInvocationMonitorType(event.getInvocationType());\n    if (InvocationType.PRODUCER.equals(event.getInvocationType())) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/370/InvocationStartProcessingEventListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/370/InvocationStartProcessingEventListener.java\nindex d0288f49cc..29c8d54699 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/370/InvocationStartProcessingEventListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/370/InvocationStartProcessingEventListener.java\n@@ -51,4 +51,4 @@ public class InvocationStartProcessingEventListener implements EventListener {\n       monitor.getConsumerCall().increment();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/370/InvocationStartProcessingEventListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/370/InvocationStartProcessingEventListener.java\nindex d0288f49cc..6daec09fd0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/370/InvocationStartProcessingEventListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/370/InvocationStartProcessingEventListener.java\n@@ -41,8 +41,7 @@ public class InvocationStartProcessingEventListener implements EventListener {\n   public void process(Event data) {\n     InvocationStartProcessingEvent event = (InvocationStartProcessingEvent) data;\n     InvocationMonitor monitor = registryMonitor.getInvocationMonitor(event.getOperationName());\n-    //TODO:current java chassis unable know invocation type before starting process,so all type WaitInQueue increment(-1) (decrement)\n-    monitor.getWaitInQueue().increment(-1);\n+    //TODO:current java chassis unable know invocation type before starting process,so all type WaitInQueue increment(-1) (decrement)monitor.getWaitInQueue().increment(-1);\n     monitor.setInvocationMonitorType(event.getInvocationType());\n     if (InvocationType.PRODUCER.equals(event.getInvocationType())) {\n       monitor.getLifeTimeInQueue().update(event.getInQueueNanoTime());\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}