{
    "error_id": "180",
    "information": {
        "errors": [
            {
                "line": "97",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 151).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n\n        return staffs;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/180/UserInnerServiceSMOImpl.java\nindex 50611bb290..b71cb3391f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/180/UserInnerServiceSMOImpl.java\n@@ -93,8 +93,7 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Override\n     public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n+        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n         return staffs;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/180/UserInnerServiceSMOImpl.java\nindex 50611bb290..7769009e95 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/180/UserInnerServiceSMOImpl.java\n@@ -22,121 +22,121 @@ import java.util.Map;\n @RestController\n public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n-    @Autowired\n-    private IUserServiceDao userServiceDaoImpl;\n-\n-\n-    @Override\n-    public String getUserServiceVersion(@RequestParam(\"code\") String code) {\n-        return code + \" 0.0.6\";\n-    }\n-\n-    /**\n-     * \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-     *\n-     * @param userIds \u7528\u6237ID\n-     *                \u652f\u6301 \u591a\u4e2a\u67e5\u8be2\n-     * @return\n-     */\n-    @Override\n-    public List<UserDto> getUserInfo(String[] userIds) {\n-        Map userInfo = new HashMap();\n-        userInfo.put(\"statusCd\", StatusConstant.STATUS_CD_VALID);\n-        userInfo.put(\"userIds\", userIds);\n-        return BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUsersInfo(userInfo), UserDto.class);\n-    }\n-\n-    @Override\n-    public int getStaffCount(@RequestBody UserDto userDto) {\n-\n-        return userServiceDaoImpl.getStaffCount(BeanConvertUtil.beanCovertMap(userDto));\n+  @Autowired\n+  private IUserServiceDao userServiceDaoImpl;\n+\n+\n+  @Override\n+  public String getUserServiceVersion(@RequestParam(\"code\") String code) {\n+    return code + \" 0.0.6\";\n+  }\n+\n+  /**\n+   * \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+   *\n+   * @param userIds \u7528\u6237ID\n+   *                \u652f\u6301 \u591a\u4e2a\u67e5\u8be2\n+   * @return\n+   */\n+  @Override\n+  public List<UserDto> getUserInfo(String[] userIds) {\n+    Map userInfo = new HashMap();\n+    userInfo.put(\"statusCd\", StatusConstant.STATUS_CD_VALID);\n+    userInfo.put(\"userIds\", userIds);\n+    return BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUsersInfo(userInfo), UserDto.class);\n+  }\n+\n+  @Override\n+  public int getStaffCount(@RequestBody UserDto userDto) {\n+\n+    return userServiceDaoImpl.getStaffCount(BeanConvertUtil.beanCovertMap(userDto));\n+  }\n+\n+  @Override\n+  public List<UserDto> getStaffs(@RequestBody UserDto userDto) {\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+\n+    int page = userDto.getPage();\n+\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      userDto.setPage((page - 1) * userDto.getRow());\n     }\n \n-    @Override\n-    public List<UserDto> getStaffs(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getStaffs(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n-        int page = userDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            userDto.setPage((page - 1) * userDto.getRow());\n-        }\n+    return staffs;\n+  }\n \n-        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getStaffs(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n+  @Override\n+  public int getUserCount(@RequestBody UserDto userDto) {\n \n-        return staffs;\n-    }\n+    return userServiceDaoImpl.getUserCount(BeanConvertUtil.beanCovertMap(userDto));\n+  }\n \n+  @Override\n+  public List<UserDto> getUsers(@RequestBody UserDto userDto) {\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-    @Override\n-    public int getUserCount(@RequestBody UserDto userDto) {\n+    int page = userDto.getPage();\n \n-        return userServiceDaoImpl.getUserCount(BeanConvertUtil.beanCovertMap(userDto));\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      userDto.setPage((page - 1) * userDto.getRow());\n     }\n \n-    @Override\n-    public List<UserDto> getUsers(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n-        int page = userDto.getPage();\n-\n-        if (page != PageDto.DEFAULT_PAGE) {\n-            userDto.setPage((page - 1) * userDto.getRow());\n+    List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUsers(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n+\n+    freshUserAttrs(staffs);\n+    return staffs;\n+  }\n+\n+  @Override\n+  public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n+\n+    return staffs;\n+\n+  }\n+\n+  @Override\n+  public List<UserAttrDto> getUserAttrs(@RequestBody UserAttrDto userAttrDto) {\n+    List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(\n+      userServiceDaoImpl.queryUserInfoAttrs(BeanConvertUtil.beanCovertMap(userAttrDto)), UserAttrDto.class);\n+    return userAttrDtos;\n+  }\n+\n+  private void freshUserAttrs(List<UserDto> userDtos) {\n+\n+    Map param = null;\n+    for (UserDto userDto : userDtos) {\n+      param = new HashMap();\n+      param.put(\"userId\", userDto.getUserId());\n+      List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUserInfoAttrs(param), UserAttrDto.class);\n+      if (userAttrDtos == null || userAttrDtos.size() == 0) {\n+        continue;\n+      }\n+      userDto.setUserAttrs(userAttrDtos);\n+      for (UserAttrDto userAttrDto : userAttrDtos) {\n+        //openId \u5355\u72ec\u51fa\u6765\u5904\u7406\n+        if (\"100201911001\".equals(userAttrDto.getSpecCd())) {\n+          userDto.setOpenId(userAttrDto.getValue());\n         }\n+      }\n \n-        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUsers(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n-\n-        freshUserAttrs(staffs);\n-        return staffs;\n-    }\n-\n-    @Override\n-    public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n-\n-        return staffs;\n \n     }\n \n-    @Override\n-    public List<UserAttrDto> getUserAttrs(@RequestBody UserAttrDto userAttrDto) {\n-        List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(\n-                userServiceDaoImpl.queryUserInfoAttrs(BeanConvertUtil.beanCovertMap(userAttrDto)), UserAttrDto.class);\n-        return userAttrDtos;\n-    }\n-\n-    private void freshUserAttrs(List<UserDto> userDtos) {\n-\n-        Map param = null;\n-        for (UserDto userDto : userDtos) {\n-            param = new HashMap();\n-            param.put(\"userId\", userDto.getUserId());\n-            List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUserInfoAttrs(param), UserAttrDto.class);\n-            if (userAttrDtos == null || userAttrDtos.size() == 0) {\n-                continue;\n-            }\n-            userDto.setUserAttrs(userAttrDtos);\n-            for (UserAttrDto userAttrDto : userAttrDtos) {\n-                //openId \u5355\u72ec\u51fa\u6765\u5904\u7406\n-                if (\"100201911001\".equals(userAttrDto.getSpecCd())) {\n-                    userDto.setOpenId(userAttrDto.getValue());\n-                }\n-            }\n-\n \n-        }\n-\n-\n-    }\n+  }\n \n \n-    public IUserServiceDao getUserServiceDaoImpl() {\n-        return userServiceDaoImpl;\n-    }\n+  public IUserServiceDao getUserServiceDaoImpl() {\n+    return userServiceDaoImpl;\n+  }\n \n-    public void setUserServiceDaoImpl(IUserServiceDao userServiceDaoImpl) {\n-        this.userServiceDaoImpl = userServiceDaoImpl;\n-    }\n+  public void setUserServiceDaoImpl(IUserServiceDao userServiceDaoImpl) {\n+    this.userServiceDaoImpl = userServiceDaoImpl;\n+  }\n }\n",
            "diff_size": 142
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/180/UserInnerServiceSMOImpl.java\nindex 50611bb290..e5c26af0a1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/180/UserInnerServiceSMOImpl.java\n@@ -54,7 +54,8 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Override\n     public List<UserDto> getStaffs(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n         int page = userDto.getPage();\n \n@@ -64,8 +65,7 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n         List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getStaffs(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n-\n-        return staffs;\n+return staffs;\n     }\n \n \n@@ -77,7 +77,8 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Override\n     public List<UserDto> getUsers(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n         int page = userDto.getPage();\n \n@@ -102,8 +103,7 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Override\n     public List<UserAttrDto> getUserAttrs(@RequestBody UserAttrDto userAttrDto) {\n-        List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(\n-                userServiceDaoImpl.queryUserInfoAttrs(BeanConvertUtil.beanCovertMap(userAttrDto)), UserAttrDto.class);\n+        List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUserInfoAttrs(BeanConvertUtil.beanCovertMap(userAttrDto)), UserAttrDto.class);\n         return userAttrDtos;\n     }\n \n@@ -124,9 +124,7 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n                     userDto.setOpenId(userAttrDto.getValue());\n                 }\n             }\n-\n-\n-        }\n+    }\n \n \n     }\n@@ -139,4 +137,4 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n     public void setUserServiceDaoImpl(IUserServiceDao userServiceDaoImpl) {\n         this.userServiceDaoImpl = userServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/180/UserInnerServiceSMOImpl.java\nindex 50611bb290..c42cbb55fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/180/UserInnerServiceSMOImpl.java\n@@ -11,7 +11,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -19,13 +18,14 @@ import java.util.Map;\n /**\n  * \u7528\u6237\u670d\u52a1\u5b9e\u73b0\u7c7b\n  */\n+\n+\n @RestController\n public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Autowired\n     private IUserServiceDao userServiceDaoImpl;\n \n-\n     @Override\n     public String getUserServiceVersion(@RequestParam(\"code\") String code) {\n         return code + \" 0.0.6\";\n@@ -38,6 +38,8 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n      *                \u652f\u6301 \u591a\u4e2a\u67e5\u8be2\n      * @return\n      */\n+\n+\n     @Override\n     public List<UserDto> getUserInfo(String[] userIds) {\n         Map userInfo = new HashMap();\n@@ -46,74 +48,72 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n         return BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUsersInfo(userInfo), UserDto.class);\n     }\n \n+\n     @Override\n     public int getStaffCount(@RequestBody UserDto userDto) {\n-\n         return userServiceDaoImpl.getStaffCount(BeanConvertUtil.beanCovertMap(userDto));\n     }\n \n+\n     @Override\n     public List<UserDto> getStaffs(@RequestBody UserDto userDto) {\n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = userDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             userDto.setPage((page - 1) * userDto.getRow());\n         }\n \n         List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getStaffs(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n-\n         return staffs;\n     }\n \n \n     @Override\n     public int getUserCount(@RequestBody UserDto userDto) {\n-\n         return userServiceDaoImpl.getUserCount(BeanConvertUtil.beanCovertMap(userDto));\n     }\n \n+\n     @Override\n     public List<UserDto> getUsers(@RequestBody UserDto userDto) {\n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = userDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             userDto.setPage((page - 1) * userDto.getRow());\n         }\n \n         List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUsers(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n-\n         freshUserAttrs(staffs);\n         return staffs;\n     }\n \n+\n     @Override\n     public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n         List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n         return staffs;\n-\n     }\n \n+\n     @Override\n     public List<UserAttrDto> getUserAttrs(@RequestBody UserAttrDto userAttrDto) {\n-        List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(\n-                userServiceDaoImpl.queryUserInfoAttrs(BeanConvertUtil.beanCovertMap(userAttrDto)), UserAttrDto.class);\n+        List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUserInfoAttrs(BeanConvertUtil.beanCovertMap(userAttrDto)), UserAttrDto.class);\n+\n         return userAttrDtos;\n     }\n \n-    private void freshUserAttrs(List<UserDto> userDtos) {\n \n+    private void freshUserAttrs(List<UserDto> userDtos) {\n         Map param = null;\n         for (UserDto userDto : userDtos) {\n             param = new HashMap();\n             param.put(\"userId\", userDto.getUserId());\n-            List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUserInfoAttrs(param), UserAttrDto.class);\n+\n+            List<UserAttrDto> userAttrDtos = BeanConvertUtil.covertBeanList(userServiceDaoImpl.queryUserInfoAttrs(param),\n+UserAttrDto.class);\n             if (userAttrDtos == null || userAttrDtos.size() == 0) {\n                 continue;\n             }\n@@ -124,14 +124,9 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n                     userDto.setOpenId(userAttrDto.getValue());\n                 }\n             }\n-\n-\n         }\n-\n-\n     }\n \n-\n     public IUserServiceDao getUserServiceDaoImpl() {\n         return userServiceDaoImpl;\n     }\n@@ -139,4 +134,4 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n     public void setUserServiceDaoImpl(IUserServiceDao userServiceDaoImpl) {\n         this.userServiceDaoImpl = userServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/180/UserInnerServiceSMOImpl.java\nindex 50611bb290..b71cb3391f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/180/UserInnerServiceSMOImpl.java\n@@ -93,8 +93,7 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Override\n     public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n+        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n         return staffs;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/180/UserInnerServiceSMOImpl.java\nindex 50611bb290..b71cb3391f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/180/UserInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/180/UserInnerServiceSMOImpl.java\n@@ -93,8 +93,7 @@ public class UserInnerServiceSMOImpl implements IUserInnerServiceSMO {\n \n     @Override\n     public List<UserDto> getUserHasPwd(@RequestBody UserDto userDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-        List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n+        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f List<UserDto> staffs = BeanConvertUtil.covertBeanList(userServiceDaoImpl.getUserHasPwd(BeanConvertUtil.beanCovertMap(userDto)), UserDto.class);\n \n         return staffs;\n \n",
            "diff_size": 2
        }
    ]
}