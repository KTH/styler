{
    "error_id": "63",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 104).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "@Component\n@RequestScope\npublic class RelatedPublicationChangesProvider extends DomainObjectChangesProvider<RelatedPublication> {\n  /**\n   * Get the list of surveyIds which need to be updated.\n   * @return a list of surveyIds",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/63/RelatedPublicationChangesProvider.java\nindex f2dd44f971..a5930f58fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/63/RelatedPublicationChangesProvider.java\n@@ -34,7 +34,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of studyIds which need to be updated.\n    * @return a list of studyIds\n@@ -43,7 +43,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null \n+      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null\n           ? oldDomainObjects.get(relatedPublicationId).getStudyIds()\n           : new ArrayList<>();\n     }\n@@ -54,7 +54,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of dataSetIds which need to be updated.\n    * @return a list of dataSetIds\n@@ -86,7 +86,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of instrumentIds which need to be updated.\n    * @return a list of instrumentIds\n@@ -102,7 +102,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of questionIds which need to be updated.\n    * @return a list of questionIds\n@@ -118,28 +118,28 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Detect if changes need to be send to Dara.\n    * @param relatedPublicationId The id of the related publication\n    * @return true if the changes need to be send to dara\n    */\n   public boolean hasChangesRelevantForDara(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId) == null) {\n       return true;\n     }\n     return !oldDomainObjects.get(relatedPublicationId).getSourceReference()\n         .equals(newDomainObjects.get(relatedPublicationId).getSourceReference());\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been removed from the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been removed from the publications\n    */\n   public List<String> getDeletedStudyIds(String relatedPublicationId) {\n-    if (oldDomainObjects.get(relatedPublicationId) == null \n+    if (oldDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n       return new ArrayList<>();\n     }\n@@ -152,14 +152,14 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     deletedStudyIds.removeAll(newDomainObjects.get(relatedPublicationId).getStudyIds());\n     return deletedStudyIds;\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been added to the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been added to the publications\n    */\n   public List<String> getAddedStudyIds(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || newDomainObjects.get(relatedPublicationId)\n         .getStudyIds() == null) {\n       return new ArrayList<>();\n",
            "diff_size": 11
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/63/RelatedPublicationChangesProvider.java\nindex f2dd44f971..a26a4984ff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/63/RelatedPublicationChangesProvider.java\n@@ -13,14 +13,16 @@ import eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.domain.Relate\n /**\n  * Remember the previous version of a related publication per request\n  * in order to update elasticsearch correctly.\n- *  \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n @Component\n @RequestScope\n-public class RelatedPublicationChangesProvider extends DomainObjectChangesProvider<RelatedPublication> {\n+public class RelatedPublicationChangesProvider\n+    extends DomainObjectChangesProvider<RelatedPublication> {\n   /**\n    * Get the list of surveyIds which need to be updated.\n+   *\n    * @return a list of surveyIds\n    */\n   public List<String> getAffectedSurveyIds(String relatedPublicationId) {\n@@ -34,16 +36,17 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of studyIds which need to be updated.\n+   *\n    * @return a list of studyIds\n    */\n   public List<String> getAffectedStudyIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null \n+      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null\n           ? oldDomainObjects.get(relatedPublicationId).getStudyIds()\n           : new ArrayList<>();\n     }\n@@ -54,9 +57,10 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of dataSetIds which need to be updated.\n+   *\n    * @return a list of dataSetIds\n    */\n   public List<String> getAffectedDataSetIds(String relatedPublicationId) {\n@@ -73,6 +77,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n \n   /**\n    * Get the list of variableIds which need to be updated.\n+   *\n    * @return a list of variableIds\n    */\n   public List<String> getAffectedVariableIds(String relatedPublicationId) {\n@@ -86,9 +91,10 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of instrumentIds which need to be updated.\n+   *\n    * @return a list of instrumentIds\n    */\n   public List<String> getAffectedInstrumentIds(String relatedPublicationId) {\n@@ -102,9 +108,10 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of questionIds which need to be updated.\n+   *\n    * @return a list of questionIds\n    */\n   public List<String> getAffectedQuestionIds(String relatedPublicationId) {\n@@ -118,28 +125,30 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Detect if changes need to be send to Dara.\n+   *\n    * @param relatedPublicationId The id of the related publication\n    * @return true if the changes need to be send to dara\n    */\n   public boolean hasChangesRelevantForDara(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId) == null) {\n       return true;\n     }\n     return !oldDomainObjects.get(relatedPublicationId).getSourceReference()\n         .equals(newDomainObjects.get(relatedPublicationId).getSourceReference());\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been removed from the publication.\n+   *\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been removed from the publications\n    */\n   public List<String> getDeletedStudyIds(String relatedPublicationId) {\n-    if (oldDomainObjects.get(relatedPublicationId) == null \n+    if (oldDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n       return new ArrayList<>();\n     }\n@@ -152,14 +161,15 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     deletedStudyIds.removeAll(newDomainObjects.get(relatedPublicationId).getStudyIds());\n     return deletedStudyIds;\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been added to the publication.\n+   *\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been added to the publications\n    */\n   public List<String> getAddedStudyIds(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || newDomainObjects.get(relatedPublicationId)\n         .getStudyIds() == null) {\n       return new ArrayList<>();\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/63/RelatedPublicationChangesProvider.java\nindex f2dd44f971..385d6539e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/63/RelatedPublicationChangesProvider.java\n@@ -174,4 +174,4 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n         .getStudyIds());\n     return addedStudyIds;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/63/RelatedPublicationChangesProvider.java\nindex f2dd44f971..f1a3e9812a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/63/RelatedPublicationChangesProvider.java\n@@ -2,10 +2,8 @@ package eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.service;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import org.springframework.stereotype.Component;\n import org.springframework.web.context.annotation.RequestScope;\n-\n import eu.dzhw.fdz.metadatamanagement.common.service.DomainObjectChangesProvider;\n import eu.dzhw.fdz.metadatamanagement.common.service.util.ListUtils;\n import eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.domain.RelatedPublication;\n@@ -16,6 +14,8 @@ import eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.domain.Relate\n  *  \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n @Component\n @RequestScope\n public class RelatedPublicationChangesProvider extends DomainObjectChangesProvider<RelatedPublication> {\n@@ -23,155 +23,172 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n    * Get the list of surveyIds which need to be updated.\n    * @return a list of surveyIds\n    */\n-  public List<String> getAffectedSurveyIds(String relatedPublicationId) {\n+    public List<String> getAffectedSurveyIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getSurveyIds();\n+        oldIds = oldDomainObjects.get(relatedPublicationId).getSurveyIds();\n     }\n     if (newDomainObjects.get(relatedPublicationId) != null) {\n-      newIds = newDomainObjects.get(relatedPublicationId).getSurveyIds();\n+        newIds = newDomainObjects.get(relatedPublicationId).getSurveyIds();\n     }\n+\n     return ListUtils.combineUniquely(newIds, oldIds);\n-  }\n+    }\n   \n   /**\n    * Get the list of studyIds which need to be updated.\n    * @return a list of studyIds\n    */\n-  public List<String> getAffectedStudyIds(String relatedPublicationId) {\n+\n+\n+    public List<String> getAffectedStudyIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null \n-          ? oldDomainObjects.get(relatedPublicationId).getStudyIds()\n-          : new ArrayList<>();\n+        oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null ? oldDomainObjects.get(relatedPublicationId).getStudyIds()\n+                                                                                  : new ArrayList<>();\n     }\n     if (newDomainObjects.get(relatedPublicationId) != null) {\n-      newIds = newDomainObjects.get(relatedPublicationId).getStudyIds() != null\n-          ? newDomainObjects.get(relatedPublicationId).getStudyIds()\n-          : new ArrayList<>();\n+        newIds = newDomainObjects.get(relatedPublicationId).getStudyIds() != null ? newDomainObjects.get(relatedPublicationId).getStudyIds()\n+                                                                                  : new ArrayList<>();\n     }\n+\n     return ListUtils.combineUniquely(newIds, oldIds);\n-  }\n+    }\n   \n   /**\n    * Get the list of dataSetIds which need to be updated.\n    * @return a list of dataSetIds\n    */\n-  public List<String> getAffectedDataSetIds(String relatedPublicationId) {\n+\n+\n+    public List<String> getAffectedDataSetIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getDataSetIds();\n+        oldIds = oldDomainObjects.get(relatedPublicationId).getDataSetIds();\n     }\n     if (newDomainObjects.get(relatedPublicationId) != null) {\n-      newIds = newDomainObjects.get(relatedPublicationId).getDataSetIds();\n+        newIds = newDomainObjects.get(relatedPublicationId).getDataSetIds();\n     }\n+\n     return ListUtils.combineUniquely(newIds, oldIds);\n-  }\n+    }\n \n   /**\n    * Get the list of variableIds which need to be updated.\n    * @return a list of variableIds\n    */\n-  public List<String> getAffectedVariableIds(String relatedPublicationId) {\n+\n+\n+    public List<String> getAffectedVariableIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getVariableIds();\n+        oldIds = oldDomainObjects.get(relatedPublicationId).getVariableIds();\n     }\n     if (newDomainObjects.get(relatedPublicationId) != null) {\n-      newIds = newDomainObjects.get(relatedPublicationId).getVariableIds();\n+        newIds = newDomainObjects.get(relatedPublicationId).getVariableIds();\n     }\n+\n     return ListUtils.combineUniquely(newIds, oldIds);\n-  }\n+    }\n   \n   /**\n    * Get the list of instrumentIds which need to be updated.\n    * @return a list of instrumentIds\n    */\n-  public List<String> getAffectedInstrumentIds(String relatedPublicationId) {\n+\n+\n+    public List<String> getAffectedInstrumentIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getInstrumentIds();\n+        oldIds = oldDomainObjects.get(relatedPublicationId).getInstrumentIds();\n     }\n     if (newDomainObjects.get(relatedPublicationId) != null) {\n-      newIds = newDomainObjects.get(relatedPublicationId).getInstrumentIds();\n+        newIds = newDomainObjects.get(relatedPublicationId).getInstrumentIds();\n     }\n+\n     return ListUtils.combineUniquely(newIds, oldIds);\n-  }\n+    }\n   \n   /**\n    * Get the list of questionIds which need to be updated.\n    * @return a list of questionIds\n    */\n-  public List<String> getAffectedQuestionIds(String relatedPublicationId) {\n+\n+\n+    public List<String> getAffectedQuestionIds(String relatedPublicationId) {\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getQuestionIds();\n+        oldIds = oldDomainObjects.get(relatedPublicationId).getQuestionIds();\n     }\n     if (newDomainObjects.get(relatedPublicationId) != null) {\n-      newIds = newDomainObjects.get(relatedPublicationId).getQuestionIds();\n+        newIds = newDomainObjects.get(relatedPublicationId).getQuestionIds();\n     }\n+\n     return ListUtils.combineUniquely(newIds, oldIds);\n-  }\n+    }\n   \n   /**\n    * Detect if changes need to be send to Dara.\n    * @param relatedPublicationId The id of the related publication\n    * @return true if the changes need to be send to dara\n    */\n-  public boolean hasChangesRelevantForDara(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+\n+\n+    public boolean hasChangesRelevantForDara(String relatedPublicationId) {\n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId) == null) {\n-      return true;\n+        return true;\n     }\n+\n     return !oldDomainObjects.get(relatedPublicationId).getSourceReference()\n-        .equals(newDomainObjects.get(relatedPublicationId).getSourceReference());\n-  }\n+                                                      .equals(newDomainObjects.get(relatedPublicationId).getSourceReference());\n+    }\n   \n   /**\n    * Get the list of study ids which have been removed from the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been removed from the publications\n    */\n-  public List<String> getDeletedStudyIds(String relatedPublicationId) {\n-    if (oldDomainObjects.get(relatedPublicationId) == null \n+\n+\n+    public List<String> getDeletedStudyIds(String relatedPublicationId) {\n+    if (oldDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n-      return new ArrayList<>();\n+        return new ArrayList<>();\n     }\n     if (newDomainObjects.get(relatedPublicationId) == null\n         || newDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n-      return oldDomainObjects.get(relatedPublicationId).getStudyIds();\n+        return oldDomainObjects.get(relatedPublicationId).getStudyIds();\n     }\n-    List<String> deletedStudyIds = new ArrayList<>(oldDomainObjects.get(relatedPublicationId)\n-        .getStudyIds());\n+    List<String> deletedStudyIds = new ArrayList<>(oldDomainObjects.get(relatedPublicationId).getStudyIds());\n     deletedStudyIds.removeAll(newDomainObjects.get(relatedPublicationId).getStudyIds());\n     return deletedStudyIds;\n-  }\n+    }\n   \n   /**\n    * Get the list of study ids which have been added to the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been added to the publications\n    */\n-  public List<String> getAddedStudyIds(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n-        || newDomainObjects.get(relatedPublicationId)\n-        .getStudyIds() == null) {\n-      return new ArrayList<>();\n+\n+\n+    public List<String> getAddedStudyIds(String relatedPublicationId) {\n+    if (newDomainObjects.get(relatedPublicationId) == null\n+        || newDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n+        return new ArrayList<>();\n     }\n     if (oldDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n-      return newDomainObjects.get(relatedPublicationId).getStudyIds();\n+        return newDomainObjects.get(relatedPublicationId).getStudyIds();\n     }\n-    List<String> addedStudyIds = new ArrayList<>(newDomainObjects.get(relatedPublicationId)\n-        .getStudyIds());\n-    addedStudyIds.removeAll(oldDomainObjects.get(relatedPublicationId)\n-        .getStudyIds());\n+    List<String> addedStudyIds = new ArrayList<>(newDomainObjects.get(relatedPublicationId).getStudyIds());\n+    addedStudyIds.removeAll(oldDomainObjects.get(relatedPublicationId).getStudyIds());\n     return addedStudyIds;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 78
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/63/RelatedPublicationChangesProvider.java\nindex f2dd44f971..a5930f58fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/63/RelatedPublicationChangesProvider.java\n@@ -34,7 +34,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of studyIds which need to be updated.\n    * @return a list of studyIds\n@@ -43,7 +43,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null \n+      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null\n           ? oldDomainObjects.get(relatedPublicationId).getStudyIds()\n           : new ArrayList<>();\n     }\n@@ -54,7 +54,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of dataSetIds which need to be updated.\n    * @return a list of dataSetIds\n@@ -86,7 +86,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of instrumentIds which need to be updated.\n    * @return a list of instrumentIds\n@@ -102,7 +102,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of questionIds which need to be updated.\n    * @return a list of questionIds\n@@ -118,28 +118,28 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Detect if changes need to be send to Dara.\n    * @param relatedPublicationId The id of the related publication\n    * @return true if the changes need to be send to dara\n    */\n   public boolean hasChangesRelevantForDara(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId) == null) {\n       return true;\n     }\n     return !oldDomainObjects.get(relatedPublicationId).getSourceReference()\n         .equals(newDomainObjects.get(relatedPublicationId).getSourceReference());\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been removed from the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been removed from the publications\n    */\n   public List<String> getDeletedStudyIds(String relatedPublicationId) {\n-    if (oldDomainObjects.get(relatedPublicationId) == null \n+    if (oldDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n       return new ArrayList<>();\n     }\n@@ -152,14 +152,14 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     deletedStudyIds.removeAll(newDomainObjects.get(relatedPublicationId).getStudyIds());\n     return deletedStudyIds;\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been added to the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been added to the publications\n    */\n   public List<String> getAddedStudyIds(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || newDomainObjects.get(relatedPublicationId)\n         .getStudyIds() == null) {\n       return new ArrayList<>();\n",
            "diff_size": 11
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/63/RelatedPublicationChangesProvider.java\nindex f2dd44f971..a5930f58fc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/63/RelatedPublicationChangesProvider.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/63/RelatedPublicationChangesProvider.java\n@@ -34,7 +34,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of studyIds which need to be updated.\n    * @return a list of studyIds\n@@ -43,7 +43,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     List<String> oldIds = null;\n     List<String> newIds = null;\n     if (oldDomainObjects.get(relatedPublicationId) != null) {\n-      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null \n+      oldIds = oldDomainObjects.get(relatedPublicationId).getStudyIds() != null\n           ? oldDomainObjects.get(relatedPublicationId).getStudyIds()\n           : new ArrayList<>();\n     }\n@@ -54,7 +54,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of dataSetIds which need to be updated.\n    * @return a list of dataSetIds\n@@ -86,7 +86,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of instrumentIds which need to be updated.\n    * @return a list of instrumentIds\n@@ -102,7 +102,7 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Get the list of questionIds which need to be updated.\n    * @return a list of questionIds\n@@ -118,28 +118,28 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     }\n     return ListUtils.combineUniquely(newIds, oldIds);\n   }\n-  \n+\n   /**\n    * Detect if changes need to be send to Dara.\n    * @param relatedPublicationId The id of the related publication\n    * @return true if the changes need to be send to dara\n    */\n   public boolean hasChangesRelevantForDara(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId) == null) {\n       return true;\n     }\n     return !oldDomainObjects.get(relatedPublicationId).getSourceReference()\n         .equals(newDomainObjects.get(relatedPublicationId).getSourceReference());\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been removed from the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been removed from the publications\n    */\n   public List<String> getDeletedStudyIds(String relatedPublicationId) {\n-    if (oldDomainObjects.get(relatedPublicationId) == null \n+    if (oldDomainObjects.get(relatedPublicationId) == null\n         || oldDomainObjects.get(relatedPublicationId).getStudyIds() == null) {\n       return new ArrayList<>();\n     }\n@@ -152,14 +152,14 @@ public class RelatedPublicationChangesProvider extends DomainObjectChangesProvid\n     deletedStudyIds.removeAll(newDomainObjects.get(relatedPublicationId).getStudyIds());\n     return deletedStudyIds;\n   }\n-  \n+\n   /**\n    * Get the list of study ids which have been added to the publication.\n    * @param relatedPublicationId the id of the publication\n    * @return list of study ids which have been added to the publications\n    */\n   public List<String> getAddedStudyIds(String relatedPublicationId) {\n-    if (newDomainObjects.get(relatedPublicationId) == null \n+    if (newDomainObjects.get(relatedPublicationId) == null\n         || newDomainObjects.get(relatedPublicationId)\n         .getStudyIds() == null) {\n       return new ArrayList<>();\n",
            "diff_size": 11
        }
    ]
}