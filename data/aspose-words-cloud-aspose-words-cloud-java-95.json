{
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "150",
                "column": "22",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    Link link = (Link)o;\n    return\n        Objects.equals(this.href, link.href) &&\n        Objects.equals(this.rel, link.rel) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/95/Link.java\nindex c7ac16873f..670389afda 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/95/Link.java\n@@ -147,7 +147,7 @@ public class Link {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Link link = (Link)o;\n+    Link link = (Link) o;\n     return\n         Objects.equals(this.href, link.href) &&\n         Objects.equals(this.rel, link.rel) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/95/Link.java\nindex c7ac16873f..007668bf38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/95/Link.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -48,111 +51,116 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Provides information for the object link. This is supposed to be an atom:link, therefore it should have all attributes specified here http://tools.ietf.org/html/rfc4287#section-4.2.7.\")\n public class Link {\n-    @SerializedName(\"Href\")\n-    private String href = null;\n+  @SerializedName(\"Href\")\n+  private String href = null;\n \n-    @SerializedName(\"Rel\")\n-    private String rel = null;\n+  @SerializedName(\"Rel\")\n+  private String rel = null;\n \n-    @SerializedName(\"Title\")\n-    private String title = null;\n+  @SerializedName(\"Title\")\n+  private String title = null;\n \n-    @SerializedName(\"Type\")\n-    private String type = null;\n-    public Link href(String href) {\n-        this.href = href;\n-        return this;\n-    }\n+  @SerializedName(\"Type\")\n+  private String type = null;\n \n-    /**\n-     * Gets or sets the \"href\" attribute contains the link's IRI. atom:link elements MUST\n-     * have an href attribute, whose value MUST be a IRI reference.\n-    * @return href\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the \\\"href\\\" attribute contains the link's IRI. atom:link elements MUST have an href attribute, whose value MUST be a IRI reference.\")\n-    public String getHref() {\n-        return href;\n-    }\n+  public Link href(String href) {\n+    this.href = href;\n+    return this;\n+  }\n \n-    public void setHref(String href) {\n-        this.href = href;\n-    }\n+  /**\n+   * Gets or sets the \"href\" attribute contains the link's IRI. atom:link elements MUST\n+   * have an href attribute, whose value MUST be a IRI reference.\n+   *\n+   * @return href\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the \\\"href\\\" attribute contains the link's IRI. atom:link elements MUST have an href attribute, whose value MUST be a IRI reference.\")\n+  public String getHref() {\n+    return href;\n+  }\n \n-    public Link rel(String rel) {\n-        this.rel = rel;\n-        return this;\n-    }\n+  public void setHref(String href) {\n+    this.href = href;\n+  }\n \n-    /**\n-     * Gets or sets atom:link elements MAY have a \"rel\" attribute that indicates the link\n-     * relation type.  If the \"rel\" attribute is not present, the link\n-     * element MUST be interpreted as if the link relation type is \"alternate\".\n-    * @return rel\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets atom:link elements MAY have a \\\"rel\\\" attribute that indicates the link relation type.  If the \\\"rel\\\" attribute is not present, the link element MUST be interpreted as if the link relation type is \\\"alternate\\\".\")\n-    public String getRel() {\n-        return rel;\n-    }\n+  public Link rel(String rel) {\n+    this.rel = rel;\n+    return this;\n+  }\n \n-    public void setRel(String rel) {\n-        this.rel = rel;\n-    }\n+  /**\n+   * Gets or sets atom:link elements MAY have a \"rel\" attribute that indicates the link\n+   * relation type.  If the \"rel\" attribute is not present, the link\n+   * element MUST be interpreted as if the link relation type is \"alternate\".\n+   *\n+   * @return rel\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets atom:link elements MAY have a \\\"rel\\\" attribute that indicates the link relation type.  If the \\\"rel\\\" attribute is not present, the link element MUST be interpreted as if the link relation type is \\\"alternate\\\".\")\n+  public String getRel() {\n+    return rel;\n+  }\n \n-    public Link title(String title) {\n-        this.title = title;\n-        return this;\n-    }\n+  public void setRel(String rel) {\n+    this.rel = rel;\n+  }\n \n-    /**\n-     * Gets or sets the \"title\" attribute conveys human-readable information about the\n-     * link.  The content of the \"title\" attribute is Language-Sensitive.\n-    * @return title\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the \\\"title\\\" attribute conveys human-readable information about the link.  The content of the \\\"title\\\" attribute is Language-Sensitive.\")\n-    public String getTitle() {\n-        return title;\n-    }\n+  public Link title(String title) {\n+    this.title = title;\n+    return this;\n+  }\n \n-    public void setTitle(String title) {\n-        this.title = title;\n-    }\n+  /**\n+   * Gets or sets the \"title\" attribute conveys human-readable information about the\n+   * link.  The content of the \"title\" attribute is Language-Sensitive.\n+   *\n+   * @return title\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the \\\"title\\\" attribute conveys human-readable information about the link.  The content of the \\\"title\\\" attribute is Language-Sensitive.\")\n+  public String getTitle() {\n+    return title;\n+  }\n \n-    public Link type(String type) {\n-        this.type = type;\n-        return this;\n-    }\n+  public void setTitle(String title) {\n+    this.title = title;\n+  }\n \n-    /**\n-     * Gets or sets on the link element, the \"type\" attribute's value is an advisory\n-     * media type: it is a hint about the type of the representation that is\n-     * expected to be returned when the value of the href attribute is\n-     * dereferenced.  Note that the type attribute does not override the\n-     * actual media type returned with the representation.\n-    * @return type\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets on the link element, the \\\"type\\\" attribute's value is an advisory media type: it is a hint about the type of the representation that is expected to be returned when the value of the href attribute is dereferenced.  Note that the type attribute does not override the actual media type returned with the representation.\")\n-    public String getType() {\n-        return type;\n-    }\n+  public Link type(String type) {\n+    this.type = type;\n+    return this;\n+  }\n \n-    public void setType(String type) {\n-        this.type = type;\n-    }\n+  /**\n+   * Gets or sets on the link element, the \"type\" attribute's value is an advisory\n+   * media type: it is a hint about the type of the representation that is\n+   * expected to be returned when the value of the href attribute is\n+   * dereferenced.  Note that the type attribute does not override the\n+   * actual media type returned with the representation.\n+   *\n+   * @return type\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets on the link element, the \\\"type\\\" attribute's value is an advisory media type: it is a hint about the type of the representation that is expected to be returned when the value of the href attribute is dereferenced.  Note that the type attribute does not override the actual media type returned with the representation.\")\n+  public String getType() {\n+    return type;\n+  }\n+\n+  public void setType(String type) {\n+    this.type = type;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    Link link = (Link)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    Link link = (Link) o;\n     return\n         Objects.equals(this.href, link.href) &&\n-        Objects.equals(this.rel, link.rel) &&\n-        Objects.equals(this.title, link.title) &&\n-        Objects.equals(this.type, link.type);\n+            Objects.equals(this.rel, link.rel) &&\n+            Objects.equals(this.title, link.title) &&\n+            Objects.equals(this.type, link.type);\n   }\n \n   @Override\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "152",
                    "column": "18",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/95/Link.java\nindex c7ac16873f..4f21eaef21 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/95/Link.java\n@@ -59,7 +59,8 @@ public class Link {\n \n     @SerializedName(\"Type\")\n     private String type = null;\n-    public Link href(String href) {\n+\n+public Link href(String href) {\n         this.href = href;\n         return this;\n     }\n@@ -143,13 +144,13 @@ public class Link {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Link link = (Link)o;\n-    return\n-        Objects.equals(this.href, link.href) &&\n+\n+Link link = (Link)o;\n+    return Objects.equals(this.href, link.href) &&\n         Objects.equals(this.rel, link.rel) &&\n         Objects.equals(this.title, link.title) &&\n         Objects.equals(this.type, link.type);\n@@ -182,4 +183,4 @@ public class Link {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/95/Link.java\nindex c7ac16873f..d13a22790b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/95/Link.java\n@@ -46,7 +46,10 @@ import io.swagger.annotations.ApiModelProperty;\n  * Provides information for the object link.\n  * This is supposed to be an atom:link, therefore it should have all attributes specified here http://tools.ietf.org/html/rfc4287#section-4.2.7.\n  */\n+\n+\n @ApiModel(description = \"Provides information for the object link. This is supposed to be an atom:link, therefore it should have all attributes specified here http://tools.ietf.org/html/rfc4287#section-4.2.7.\")\n+\n public class Link {\n     @SerializedName(\"Href\")\n     private String href = null;\n@@ -59,9 +62,10 @@ public class Link {\n \n     @SerializedName(\"Type\")\n     private String type = null;\n+\n     public Link href(String href) {\n-        this.href = href;\n-        return this;\n+    this.href = href;\n+    return this;\n     }\n \n     /**\n@@ -69,18 +73,22 @@ public class Link {\n      * have an href attribute, whose value MUST be a IRI reference.\n     * @return href\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the \\\"href\\\" attribute contains the link's IRI. atom:link elements MUST have an href attribute, whose value MUST be a IRI reference.\")\n     public String getHref() {\n-        return href;\n+    return href;\n     }\n \n+\n     public void setHref(String href) {\n-        this.href = href;\n+    this.href = href;\n     }\n \n+\n     public Link rel(String rel) {\n-        this.rel = rel;\n-        return this;\n+    this.rel = rel;\n+    return this;\n     }\n \n     /**\n@@ -89,18 +97,22 @@ public class Link {\n      * element MUST be interpreted as if the link relation type is \"alternate\".\n     * @return rel\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets atom:link elements MAY have a \\\"rel\\\" attribute that indicates the link relation type.  If the \\\"rel\\\" attribute is not present, the link element MUST be interpreted as if the link relation type is \\\"alternate\\\".\")\n     public String getRel() {\n-        return rel;\n+    return rel;\n     }\n \n+\n     public void setRel(String rel) {\n-        this.rel = rel;\n+    this.rel = rel;\n     }\n \n+\n     public Link title(String title) {\n-        this.title = title;\n-        return this;\n+    this.title = title;\n+    return this;\n     }\n \n     /**\n@@ -108,18 +120,22 @@ public class Link {\n      * link.  The content of the \"title\" attribute is Language-Sensitive.\n     * @return title\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the \\\"title\\\" attribute conveys human-readable information about the link.  The content of the \\\"title\\\" attribute is Language-Sensitive.\")\n     public String getTitle() {\n-        return title;\n+    return title;\n     }\n \n+\n     public void setTitle(String title) {\n-        this.title = title;\n+    this.title = title;\n     }\n \n+\n     public Link type(String type) {\n-        this.type = type;\n-        return this;\n+    this.type = type;\n+    return this;\n     }\n \n     /**\n@@ -130,38 +146,46 @@ public class Link {\n      * actual media type returned with the representation.\n     * @return type\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets on the link element, the \\\"type\\\" attribute's value is an advisory media type: it is a hint about the type of the representation that is expected to be returned when the value of the href attribute is dereferenced.  Note that the type attribute does not override the actual media type returned with the representation.\")\n     public String getType() {\n-        return type;\n+    return type;\n     }\n \n+\n     public void setType(String type) {\n-        this.type = type;\n+    this.type = type;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    Link link = (Link)o;\n-    return\n-        Objects.equals(this.href, link.href) &&\n+\n+        Link link = (Link) o;\n+        return Objects.equals(this.href, link.href) &&\n         Objects.equals(this.rel, link.rel) &&\n-        Objects.equals(this.title, link.title) &&\n-        Objects.equals(this.type, link.type);\n-  }\n+            Objects.equals(this.title, link.title) &&\n+            Objects.equals(this.type, link.type);\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(href, rel, title, type);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class Link {\\n\");\n     sb.append(\"    href: \").append(toIndentedString(href)).append(\"\\n\");\n@@ -170,16 +194,19 @@ public class Link {\n     sb.append(\"    type: \").append(toIndentedString(type)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/95/Link.java\nindex c7ac16873f..670389afda 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/95/Link.java\n@@ -147,7 +147,7 @@ public class Link {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Link link = (Link)o;\n+    Link link = (Link) o;\n     return\n         Objects.equals(this.href, link.href) &&\n         Objects.equals(this.rel, link.rel) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/95/Link.java\nindex c7ac16873f..a2260075e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/95/Link.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/95/Link.java\n@@ -147,7 +147,8 @@ public class Link {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Link link = (Link)o;\n+    Link link = (Link\n+) o;\n     return\n         Objects.equals(this.href, link.href) &&\n         Objects.equals(this.rel, link.rel) &&\n",
            "diff_size": 2
        }
    ]
}