{
    "error_id": "142",
    "information": {
        "errors": [
            {
                "line": "161",
                "column": "76",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n        //\u6dfb\u52a0\u5c0f\u533a\u697c\n        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/142/AppUserBindingOwnerListener.java\nindex 5804bd92b8..414eff777f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/142/AppUserBindingOwnerListener.java\n@@ -158,7 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/142/AppUserBindingOwnerListener.java\nindex 5804bd92b8..cee4a972a5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/142/AppUserBindingOwnerListener.java\n@@ -43,173 +43,172 @@ import java.util.Map;\n public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener {\n \n \n-    private static final int DEFAULT_SEQ_COMMUNITY_MEMBER = 2;\n+  private static final int DEFAULT_SEQ_COMMUNITY_MEMBER = 2;\n \n-    @Autowired\n-    private IOwnerBMO ownerBMOImpl;\n+  @Autowired\n+  private IOwnerBMO ownerBMOImpl;\n \n-    @Autowired\n-    private IFileInnerServiceSMO fileInnerServiceSMOImpl;\n+  @Autowired\n+  private IFileInnerServiceSMO fileInnerServiceSMOImpl;\n \n-    @Autowired\n-    private ISmsInnerServiceSMO smsInnerServiceSMOImpl;\n+  @Autowired\n+  private ISmsInnerServiceSMO smsInnerServiceSMOImpl;\n \n-    @Autowired\n-    private ICommunityInnerServiceSMO communityInnerServiceSMOImpl;\n+  @Autowired\n+  private ICommunityInnerServiceSMO communityInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IOwnerInnerServiceSMO ownerInnerServiceSMOImpl;\n+  @Autowired\n+  private IOwnerInnerServiceSMO ownerInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IOwnerAppUserInnerServiceSMO ownerAppUserInnerServiceSMOImpl;\n+  @Autowired\n+  private IOwnerAppUserInnerServiceSMO ownerAppUserInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    private static Logger logger = LoggerFactory.getLogger(AppUserBindingOwnerListener.class);\n+  private static Logger logger = LoggerFactory.getLogger(AppUserBindingOwnerListener.class);\n \n-    @Override\n-    public String getServiceCode() {\n-        return ServiceCodeConstant.SERVICE_CODE_APP_USER_BINDING_OWNER;\n-    }\n+  @Override\n+  public String getServiceCode() {\n+    return ServiceCodeConstant.SERVICE_CODE_APP_USER_BINDING_OWNER;\n+  }\n \n-    @Override\n-    public HttpMethod getHttpMethod() {\n-        return HttpMethod.POST;\n-    }\n+  @Override\n+  public HttpMethod getHttpMethod() {\n+    return HttpMethod.POST;\n+  }\n \n-    @Override\n-    protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n-        Assert.hasKeyAndValue(reqJson, \"communityName\", \"\u672a\u5305\u542b\u5c0f\u533a\u540d\u79f0\");\n-        Assert.hasKeyAndValue(reqJson, \"areaCode\", \"\u672a\u5305\u542b\u5c0f\u533a\u5730\u533a\");\n-        Assert.hasKeyAndValue(reqJson, \"appUserName\", \"\u672a\u5305\u542b\u7528\u6237\u540d\u79f0\");\n-        Assert.hasKeyAndValue(reqJson, \"idCard\", \"\u672a\u5305\u542b\u8eab\u4efd\u8bc1\u53f7\");\n-        Assert.hasKeyAndValue(reqJson, \"link\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\");\n-        Assert.hasKeyAndValue(reqJson, \"msgCode\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\u9a8c\u8bc1\u7801\");\n-\n-        //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n-        Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n-\n-        Assert.hasKeyAndValue(headers, \"user_id\", \"\u8bf7\u6c42\u5934\u4e2d\u672a\u5305\u542b\u7528\u6237\u4fe1\u606f\");\n-        SmsDto smsDto = new SmsDto();\n-        smsDto.setTel(reqJson.getString(\"link\"));\n-        smsDto.setCode(reqJson.getString(\"msgCode\"));\n-        smsDto = smsInnerServiceSMOImpl.validateCode(smsDto);\n-\n-        if (!smsDto.isSuccess() && \"ON\".equals(MappingCache.getValue(SendSmsFactory.SMS_SEND_SWITCH))) {\n-            throw new IllegalArgumentException(smsDto.getMsg());\n-        }\n-    }\n+  @Override\n+  protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n+    Assert.hasKeyAndValue(reqJson, \"communityName\", \"\u672a\u5305\u542b\u5c0f\u533a\u540d\u79f0\");\n+    Assert.hasKeyAndValue(reqJson, \"areaCode\", \"\u672a\u5305\u542b\u5c0f\u533a\u5730\u533a\");\n+    Assert.hasKeyAndValue(reqJson, \"appUserName\", \"\u672a\u5305\u542b\u7528\u6237\u540d\u79f0\");\n+    Assert.hasKeyAndValue(reqJson, \"idCard\", \"\u672a\u5305\u542b\u8eab\u4efd\u8bc1\u53f7\");\n+    Assert.hasKeyAndValue(reqJson, \"link\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\");\n+    Assert.hasKeyAndValue(reqJson, \"msgCode\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\u9a8c\u8bc1\u7801\");\n \n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n+    //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n+    Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n \n-        logger.debug(\"ServiceDataFlowEvent : {}\", event);\n-        //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n-        Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n+    Assert.hasKeyAndValue(headers, \"user_id\", \"\u8bf7\u6c42\u5934\u4e2d\u672a\u5305\u542b\u7528\u6237\u4fe1\u606f\");\n+    SmsDto smsDto = new SmsDto();\n+    smsDto.setTel(reqJson.getString(\"link\"));\n+    smsDto.setCode(reqJson.getString(\"msgCode\"));\n+    smsDto = smsInnerServiceSMOImpl.validateCode(smsDto);\n \n-        String userId = headers.get(\"user_id\");\n-        UserDto userDto = new UserDto();\n-        userDto.setUserId(userId);\n-        List<UserDto> userDtos = userInnerServiceSMOImpl.getUsers(userDto);\n+    if (!smsDto.isSuccess() && \"ON\".equals(MappingCache.getValue(SendSmsFactory.SMS_SEND_SWITCH))) {\n+      throw new IllegalArgumentException(smsDto.getMsg());\n+    }\n+  }\n \n-        Assert.listOnlyOne(userDtos, \"\u672a\u627e\u5230\u76f8\u5e94\u7528\u6237\u4fe1\u606f\uff0c\u6216\u67e5\u8be2\u5230\u591a\u6761\");\n+  @Override\n+  protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n \n-        String openId = userDtos.get(0).getOpenId();\n+    logger.debug(\"ServiceDataFlowEvent : {}\", event);\n+    //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n+    Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n \n-        Assert.hasLength(openId, \"\u8be5\u7528\u6237\u4e0d\u662f\u80fd\u529b\u5f00\u653e\u7528\u6237\");\n+    String userId = headers.get(\"user_id\");\n+    UserDto userDto = new UserDto();\n+    userDto.setUserId(userId);\n+    List<UserDto> userDtos = userInnerServiceSMOImpl.getUsers(userDto);\n \n-        OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n-        ownerAppUserDto.setStates(new String[]{\"10000\", \"12000\"});\n+    Assert.listOnlyOne(userDtos, \"\u672a\u627e\u5230\u76f8\u5e94\u7528\u6237\u4fe1\u606f\uff0c\u6216\u67e5\u8be2\u5230\u591a\u6761\");\n \n-        List<OwnerAppUserDto> ownerAppUserDtos = ownerAppUserInnerServiceSMOImpl.queryOwnerAppUsers(ownerAppUserDto);\n+    String openId = userDtos.get(0).getOpenId();\n \n-        //Assert.listOnlyOne(ownerAppUserDtos, \"\u5df2\u7ecf\u7533\u8bf7\u8fc7\u5165\u9a7b\u5c0f\u533a\");\n-        if (ownerAppUserDtos != null && ownerAppUserDtos.size() > 0) {\n-            throw new IllegalArgumentException(\"\u5df2\u7ecf\u7533\u8bf7\u8fc7\u7ed1\u5b9a\u4e1a\u4e3b\");\n-        }\n+    Assert.hasLength(openId, \"\u8be5\u7528\u6237\u4e0d\u662f\u80fd\u529b\u5f00\u653e\u7528\u6237\");\n \n-        //\u67e5\u8be2\u5c0f\u533a\u662f\u5426\u5b58\u5728\n-        CommunityDto communityDto = new CommunityDto();\n-        communityDto.setCityCode(reqJson.getString(\"areaCode\"));\n-        communityDto.setName(reqJson.getString(\"communityName\"));\n-        communityDto.setState(\"1100\");\n-        List<CommunityDto> communityDtos = communityInnerServiceSMOImpl.queryCommunitys(communityDto);\n+    OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n+    ownerAppUserDto.setStates(new String[] {\"10000\", \"12000\"});\n \n-        Assert.listOnlyOne(communityDtos, \"\u586b\u5199\u5c0f\u533a\u4fe1\u606f\u9519\u8bef\");\n+    List<OwnerAppUserDto> ownerAppUserDtos = ownerAppUserInnerServiceSMOImpl.queryOwnerAppUsers(ownerAppUserDto);\n \n-        CommunityDto tmpCommunityDto = communityDtos.get(0);\n+    //Assert.listOnlyOne(ownerAppUserDtos, \"\u5df2\u7ecf\u7533\u8bf7\u8fc7\u5165\u9a7b\u5c0f\u533a\");\n+    if (ownerAppUserDtos != null && ownerAppUserDtos.size() > 0) {\n+      throw new IllegalArgumentException(\"\u5df2\u7ecf\u7533\u8bf7\u8fc7\u7ed1\u5b9a\u4e1a\u4e3b\");\n+    }\n \n-        OwnerDto ownerDto = new OwnerDto();\n-        ownerDto.setCommunityId(tmpCommunityDto.getCommunityId());\n-        ownerDto.setIdCard(reqJson.getString(\"idCard\"));\n-        ownerDto.setName(reqJson.getString(\"appUserName\"));\n-        ownerDto.setLink(reqJson.getString(\"link\"));\n-        List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n+    //\u67e5\u8be2\u5c0f\u533a\u662f\u5426\u5b58\u5728\n+    CommunityDto communityDto = new CommunityDto();\n+    communityDto.setCityCode(reqJson.getString(\"areaCode\"));\n+    communityDto.setName(reqJson.getString(\"communityName\"));\n+    communityDto.setState(\"1100\");\n+    List<CommunityDto> communityDtos = communityInnerServiceSMOImpl.queryCommunitys(communityDto);\n \n-        Assert.listOnlyOne(ownerDtos, \"\u586b\u5199\u4e1a\u4e3b\u4fe1\u606f\u9519\u8bef\");\n+    Assert.listOnlyOne(communityDtos, \"\u586b\u5199\u5c0f\u533a\u4fe1\u606f\u9519\u8bef\");\n \n-        OwnerDto tmpOwnerDto = ownerDtos.get(0);\n+    CommunityDto tmpCommunityDto = communityDtos.get(0);\n \n-        DataFlowContext dataFlowContext = event.getDataFlowContext();\n-        String paramIn = dataFlowContext.getReqData();\n-        JSONObject paramObj = JSONObject.parseObject(paramIn);\n-        paramObj.put(\"openId\", openId);\n-        paramObj.put(\"userId\", userId);\n+    OwnerDto ownerDto = new OwnerDto();\n+    ownerDto.setCommunityId(tmpCommunityDto.getCommunityId());\n+    ownerDto.setIdCard(reqJson.getString(\"idCard\"));\n+    ownerDto.setName(reqJson.getString(\"appUserName\"));\n+    ownerDto.setLink(reqJson.getString(\"link\"));\n+    List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n \n-        //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+    Assert.listOnlyOne(ownerDtos, \"\u586b\u5199\u4e1a\u4e3b\u4fe1\u606f\u9519\u8bef\");\n \n+    OwnerDto tmpOwnerDto = ownerDtos.get(0);\n \n+    DataFlowContext dataFlowContext = event.getDataFlowContext();\n+    String paramIn = dataFlowContext.getReqData();\n+    JSONObject paramObj = JSONObject.parseObject(paramIn);\n+    paramObj.put(\"openId\", openId);\n+    paramObj.put(\"userId\", userId);\n \n-    }\n+    //\u6dfb\u52a0\u5c0f\u533a\u697c\n+    ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n-    @Override\n-    public int getOrder() {\n-        return 0;\n-    }\n+  }\n \n \n-    public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n-        return fileInnerServiceSMOImpl;\n-    }\n+  @Override\n+  public int getOrder() {\n+    return 0;\n+  }\n \n-    public void setFileInnerServiceSMOImpl(IFileInnerServiceSMO fileInnerServiceSMOImpl) {\n-        this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n-    }\n \n+  public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n+    return fileInnerServiceSMOImpl;\n+  }\n \n-    public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n-        return communityInnerServiceSMOImpl;\n-    }\n+  public void setFileInnerServiceSMOImpl(IFileInnerServiceSMO fileInnerServiceSMOImpl) {\n+    this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n+  }\n \n-    public void setCommunityInnerServiceSMOImpl(ICommunityInnerServiceSMO communityInnerServiceSMOImpl) {\n-        this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n-    }\n \n+  public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n+    return communityInnerServiceSMOImpl;\n+  }\n \n-    public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n-        return ownerInnerServiceSMOImpl;\n-    }\n+  public void setCommunityInnerServiceSMOImpl(ICommunityInnerServiceSMO communityInnerServiceSMOImpl) {\n+    this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n+  }\n \n-    public void setOwnerInnerServiceSMOImpl(IOwnerInnerServiceSMO ownerInnerServiceSMOImpl) {\n-        this.ownerInnerServiceSMOImpl = ownerInnerServiceSMOImpl;\n-    }\n \n-    public IOwnerAppUserInnerServiceSMO getOwnerAppUserInnerServiceSMOImpl() {\n-        return ownerAppUserInnerServiceSMOImpl;\n-    }\n+  public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n+    return ownerInnerServiceSMOImpl;\n+  }\n \n-    public void setOwnerAppUserInnerServiceSMOImpl(IOwnerAppUserInnerServiceSMO ownerAppUserInnerServiceSMOImpl) {\n-        this.ownerAppUserInnerServiceSMOImpl = ownerAppUserInnerServiceSMOImpl;\n-    }\n+  public void setOwnerInnerServiceSMOImpl(IOwnerInnerServiceSMO ownerInnerServiceSMOImpl) {\n+    this.ownerInnerServiceSMOImpl = ownerInnerServiceSMOImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IOwnerAppUserInnerServiceSMO getOwnerAppUserInnerServiceSMOImpl() {\n+    return ownerAppUserInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setOwnerAppUserInnerServiceSMOImpl(IOwnerAppUserInnerServiceSMO ownerAppUserInnerServiceSMOImpl) {\n+    this.ownerAppUserInnerServiceSMOImpl = ownerAppUserInnerServiceSMOImpl;\n+  }\n+\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n+\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 157
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/142/AppUserBindingOwnerListener.java\nindex 5804bd92b8..a36a95a94f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/142/AppUserBindingOwnerListener.java\n@@ -158,10 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n-\n-\n-\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n     }\n \n \n@@ -212,4 +209,4 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/142/AppUserBindingOwnerListener.java\nindex 5804bd92b8..5465954f10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/142/AppUserBindingOwnerListener.java\n@@ -20,13 +20,13 @@ import com.java110.dto.owner.OwnerDto;\n import com.java110.core.event.service.api.ServiceDataFlowEvent;\n import com.java110.utils.cache.MappingCache;\n import com.java110.utils.constant.*;\n+\n import com.java110.utils.util.Assert;\n import com.java110.utils.util.BeanConvertUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n-\n import java.util.List;\n import java.util.Map;\n \n@@ -39,10 +39,10 @@ import java.util.Map;\n  * add by wuxw 2019/4/26\n  **/\n \n+\n @Java110Listener(\"appUserBindingOwnerListener\")\n public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener {\n \n-\n     private static final int DEFAULT_SEQ_COMMUNITY_MEMBER = 2;\n \n     @Autowired\n@@ -65,7 +65,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n \n     @Autowired\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n-\n     private static Logger logger = LoggerFactory.getLogger(AppUserBindingOwnerListener.class);\n \n     @Override\n@@ -73,11 +72,13 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         return ServiceCodeConstant.SERVICE_CODE_APP_USER_BINDING_OWNER;\n     }\n \n+\n     @Override\n     public HttpMethod getHttpMethod() {\n         return HttpMethod.POST;\n     }\n \n+\n     @Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n         Assert.hasKeyAndValue(reqJson, \"communityName\", \"\u672a\u5305\u542b\u5c0f\u533a\u540d\u79f0\");\n@@ -88,9 +89,10 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         Assert.hasKeyAndValue(reqJson, \"msgCode\", \"\u672a\u5305\u542b\u8054\u7cfb\u7535\u8bdd\u9a8c\u8bc1\u7801\");\n \n         //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n-        Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n \n+        Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n         Assert.hasKeyAndValue(headers, \"user_id\", \"\u8bf7\u6c42\u5934\u4e2d\u672a\u5305\u542b\u7528\u6237\u4fe1\u606f\");\n+\n         SmsDto smsDto = new SmsDto();\n         smsDto.setTel(reqJson.getString(\"link\"));\n         smsDto.setCode(reqJson.getString(\"msgCode\"));\n@@ -101,22 +103,22 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         }\n     }\n \n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n \n+    @Override\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n         //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n-        Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n \n+        Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n         String userId = headers.get(\"user_id\");\n         UserDto userDto = new UserDto();\n         userDto.setUserId(userId);\n-        List<UserDto> userDtos = userInnerServiceSMOImpl.getUsers(userDto);\n \n+        List<UserDto> userDtos = userInnerServiceSMOImpl.getUsers(userDto);\n         Assert.listOnlyOne(userDtos, \"\u672a\u627e\u5230\u76f8\u5e94\u7528\u6237\u4fe1\u606f\uff0c\u6216\u67e5\u8be2\u5230\u591a\u6761\");\n \n         String openId = userDtos.get(0).getOpenId();\n-\n         Assert.hasLength(openId, \"\u8be5\u7528\u6237\u4e0d\u662f\u80fd\u529b\u5f00\u653e\u7528\u6237\");\n \n         OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n@@ -130,27 +132,26 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         }\n \n         //\u67e5\u8be2\u5c0f\u533a\u662f\u5426\u5b58\u5728\n+\n         CommunityDto communityDto = new CommunityDto();\n         communityDto.setCityCode(reqJson.getString(\"areaCode\"));\n         communityDto.setName(reqJson.getString(\"communityName\"));\n         communityDto.setState(\"1100\");\n-        List<CommunityDto> communityDtos = communityInnerServiceSMOImpl.queryCommunitys(communityDto);\n \n+        List<CommunityDto> communityDtos = communityInnerServiceSMOImpl.queryCommunitys(communityDto);\n         Assert.listOnlyOne(communityDtos, \"\u586b\u5199\u5c0f\u533a\u4fe1\u606f\u9519\u8bef\");\n \n         CommunityDto tmpCommunityDto = communityDtos.get(0);\n-\n         OwnerDto ownerDto = new OwnerDto();\n         ownerDto.setCommunityId(tmpCommunityDto.getCommunityId());\n         ownerDto.setIdCard(reqJson.getString(\"idCard\"));\n         ownerDto.setName(reqJson.getString(\"appUserName\"));\n         ownerDto.setLink(reqJson.getString(\"link\"));\n-        List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n \n+        List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n         Assert.listOnlyOne(ownerDtos, \"\u586b\u5199\u4e1a\u4e3b\u4fe1\u606f\u9519\u8bef\");\n \n         OwnerDto tmpOwnerDto = ownerDtos.get(0);\n-\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         String paramIn = dataFlowContext.getReqData();\n         JSONObject paramObj = JSONObject.parseObject(paramIn);\n@@ -158,10 +159,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n-\n-\n-\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n     }\n \n \n@@ -170,7 +168,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         return 0;\n     }\n \n-\n     public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n         return fileInnerServiceSMOImpl;\n     }\n@@ -179,7 +176,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n     }\n \n-\n     public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n         return communityInnerServiceSMOImpl;\n     }\n@@ -188,7 +184,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n     }\n \n-\n     public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n         return ownerInnerServiceSMOImpl;\n     }\n@@ -212,4 +207,4 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/142/AppUserBindingOwnerListener.java\nindex 5804bd92b8..414eff777f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/142/AppUserBindingOwnerListener.java\n@@ -158,7 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "161",
                    "column": "77",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "161",
                    "column": "77",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/142/AppUserBindingOwnerListener.java\nindex 5804bd92b8..8c7c1b4ce1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/142/AppUserBindingOwnerListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/142/AppUserBindingOwnerListener.java\n@@ -158,7 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto ,context);\n \n \n \n",
            "diff_size": 1
        }
    ]
}