{
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "109",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 104).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      params = {\n          \"string - The input string\",\n          \"pattern - The regex pattern to be replaced. Special characters must be escaped (e.g. \\\\\\\\d)\",\n          \"value - The value to replace the regex pattern\"\n      },\n      returns = \"The modified input string with replaced values\")",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/20/RegExFunctions.java\nindex ddc8860541..ee96b0b54c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/intellij/20/RegExFunctions.java\n@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n+ * <p>\n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/20/RegExFunctions.java\nindex ddc8860541..7a7b3e149f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/naturalize/20/RegExFunctions.java\n@@ -136,4 +136,4 @@ public class RegExFunctions {\n       return matcher.replaceAll(value);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'description' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'params' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'\"pattern - The proposed regex pattern\"' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'}' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'returns' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'description' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'params' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'\"pattern - The proposed regex pattern\"' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'\"group - integer that selects what group to select, starting at 1\"' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'}' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'returns' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "'description' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'params' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'\"pattern - The regex pattern to be replaced. Special characters must be escaped (e.g. \\\\\\\\d)\"' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'\"value - The value to replace the regex pattern\"' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'}' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'returns' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/20/RegExFunctions.java\nindex ddc8860541..716ed42cb7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/codebuff/20/RegExFunctions.java\n@@ -29,111 +29,104 @@ import org.apache.metron.stellar.dsl.Stellar;\n \n public class RegExFunctions {\n \n-  @Stellar(name = \"REGEXP_MATCH\",\n-      description = \"Determines whether a regex matches a string\",\n-      params = {\n-          \"string - The string to test\",\n-          \"pattern - The proposed regex pattern\"\n-      },\n-      returns = \"True if the regex pattern matches the string and false if otherwise.\")\n-  public static class RegexpMatch extends BaseStellarFunction {\n+    @Stellar(name = \"REGEXP_MATCH\",\n+description = \"Determines whether a regex matches a string\",\n+params = {\"string - The string to test\",\n+   \"pattern - The proposed regex pattern\"\n+},\n+returns = \"True if the regex pattern matches the string and false if otherwise.\"\n+    )\n+    public static class RegexpMatch extends BaseStellarFunction {\n \n     @Override\n     public Object apply(List<Object> list) {\n-      if (list.size() < 2) {\n+        if (list.size() < 2) {\n         throw new IllegalStateException(\n             \"REGEXP_MATCH expects two args: [string, pattern] where pattern is a regexp pattern\");\n-      }\n-      String patternString = (String) list.get(1);\n-      String str = (String) list.get(0);\n-      if (str == null || patternString == null) {\n+        }\n+        String patternString = (String) list.get(1);\n+        String str = (String) list.get(0);\n+        if (str == null || patternString == null) {\n         return false;\n-      }\n-      return PatternCache.INSTANCE.getPattern(patternString).matcher(str).matches();\n+        }\n+        return PatternCache.INSTANCE.getPattern(patternString).matcher(str).matches();\n+    }\n     }\n-  }\n \n-  @Stellar(name = \"REGEXP_GROUP_VAL\",\n-      description = \"Returns the value of a group in a regex against a string\",\n-      params = {\n-          \"string - The string to test\",\n-          \"pattern - The proposed regex pattern\",\n-          \"group - integer that selects what group to select, starting at 1\"\n-      },\n-      returns = \"The value of the group, or null if not matched or no group at index\")\n-  public static class RegexpGroupValue extends BaseStellarFunction {\n+    @Stellar(name = \"REGEXP_GROUP_VAL\",\n+description = \"Returns the value of a group in a regex against a string\",\n+params = {\"string - The string to test\",\n+   \"pattern - The proposed regex pattern\",\n+   \"group - integer that selects what group to select, starting at 1\"\n+},\n+returns = \"The value of the group, or null if not matched or no group at index\"\n+    )\n+    public static class RegexpGroupValue extends BaseStellarFunction {\n \n     @Override\n     public Object apply(List<Object> list) {\n-      if (list.size() != 3) {\n+        if (list.size() != 3) {\n         throw new IllegalStateException(\n-            \"REGEXP_GROUP_VAL expects three args: [string, pattern, int]\" + \"\"\n-                + \"where pattern is a regexp pattern\");\n-      }\n-      String stringPattern = (String) list.get(1);\n-      String str = (String) list.get(0);\n-      Integer groupNumber = ConversionUtils.convert(list.get(2), Integer.class);\n-\n-      if (groupNumber == null) {\n+            \"REGEXP_GROUP_VAL expects three args: [string, pattern, int]\"\n+                + \"\" + \"where pattern is a regexp pattern\");\n+        }\n+        String stringPattern = (String) list.get(1);\n+        String str = (String) list.get(0);\n+        Integer groupNumber = ConversionUtils.convert(list.get(2), Integer.class);\n+        if (groupNumber == null) {\n         // group number was not a valid integer\n         return null;\n-      }\n-\n-      if (groupNumber == 0) {\n+        }\n+        if (groupNumber == 0) {\n         // 0, by default is the entire input\n         // default to returning a non-null\n         return str;\n-      }\n-\n-      if (str == null || stringPattern == null) {\n+        }\n+        if (str == null || stringPattern == null) {\n         return null;\n-      }\n-      Pattern pattern = PatternCache.INSTANCE.getPattern(stringPattern);\n-      Matcher matcher = pattern.matcher(str);\n-      if (!matcher.matches()) {\n+        }\n+        Pattern pattern = PatternCache.INSTANCE.getPattern(stringPattern);\n+        Matcher matcher = pattern.matcher(str);\n+        if (!matcher.matches()) {\n         return null;\n-      }\n-\n-      int groupCount = matcher.groupCount();\n-      if (groupCount == 0 || groupCount < groupNumber) {\n+        }\n+        int groupCount = matcher.groupCount();\n+        if (groupCount == 0 || groupCount < groupNumber) {\n         return null;\n-      }\n-      return matcher.group(groupNumber);\n+        }\n+        return matcher.group(groupNumber);\n+    }\n     }\n-  }\n \n-  @Stellar(name = \"REGEXP_REPLACE\",\n-      description = \"Replace all occurences of the regex pattern within the string by value\",\n-      params = {\n-          \"string - The input string\",\n-          \"pattern - The regex pattern to be replaced. Special characters must be escaped (e.g. \\\\\\\\d)\",\n-          \"value - The value to replace the regex pattern\"\n-      },\n-      returns = \"The modified input string with replaced values\")\n-  public static class RegexpReplace extends BaseStellarFunction {\n+    @Stellar(name = \"REGEXP_REPLACE\",\n+description = \"Replace all occurences of the regex pattern within the string by value\",\n+params = {\"string - The input string\",\n+   \"pattern - The regex pattern to be replaced. Special characters must be escaped (e.g. \\\\\\\\d)\",\n+   \"value - The value to replace the regex pattern\"\n+},\n+returns = \"The modified input string with replaced values\"\n+    )\n+    public static class RegexpReplace extends BaseStellarFunction {\n \n     @Override\n     public Object apply(List<Object> list) {\n-      if (list.size() != 3) {\n+        if (list.size() != 3) {\n         throw new IllegalStateException(\n             \"REGEXP_REPLACE expects three args: [string, pattern, value]\"\n                 + \" where pattern is a regexp pattern\");\n-      }\n-      String str = (String) list.get(0);\n-      String stringPattern = (String) list.get(1);\n-      String value = (String) list.get(2);\n-\n-      if (StringUtils.isEmpty(str)) {\n+        }\n+        String str = (String) list.get(0);\n+        String stringPattern = (String) list.get(1);\n+        String value = (String) list.get(2);\n+        if (StringUtils.isEmpty(str)) {\n         return null;\n-      }\n-\n-      if (StringUtils.isEmpty(stringPattern) || StringUtils.isEmpty(value)) {\n+        }\n+        if (StringUtils.isEmpty(stringPattern) || StringUtils.isEmpty(value)) {\n         return str;\n-      }\n-\n-      Pattern pattern = PatternCache.INSTANCE.getPattern(stringPattern);\n-      Matcher matcher = pattern.matcher(str);\n-      return matcher.replaceAll(value);\n+        }\n+        Pattern pattern = PatternCache.INSTANCE.getPattern(stringPattern);\n+        Matcher matcher = pattern.matcher(str);\n+        return matcher.replaceAll(value);\n+    }\n     }\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 79
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_random/20/RegExFunctions.java\nindex ddc8860541..9a768f3fc7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/errored/1/20/RegExFunctions.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-metron/styler_random/20/RegExFunctions.java\n@@ -107,7 +107,7 @@ public class RegExFunctions {\n       params = {\n           \"string - The input string\",\n           \"pattern - The regex pattern to be replaced. Special characters must be escaped (e.g. \\\\\\\\d)\",\n-          \"value - The value to replace the regex pattern\"\n+      \"value - The value to replace the regex pattern\"\n       },\n       returns = \"The modified input string with replaced values\")\n   public static class RegexpReplace extends BaseStellarFunction {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}