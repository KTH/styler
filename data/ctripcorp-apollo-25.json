{
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "25",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n    Version version = versionRepository.findById(versionId);\n    if (version == null){\n      return null;\n    }\n    VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler/25/AdminConfigServiceImpl.java\nindex 55385afb35..a1600c782c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler/25/AdminConfigServiceImpl.java\n@@ -69,7 +69,7 @@ public class AdminConfigServiceImpl implements AdminConfigService {\n       return null;\n     }\n     Version version = versionRepository.findById(versionId);\n-    if (version == null){\n+    if (version == null) {\n       return null;\n     }\n     VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/intellij/25/AdminConfigServiceImpl.java\nindex 55385afb35..a1600c782c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/intellij/25/AdminConfigServiceImpl.java\n@@ -69,7 +69,7 @@ public class AdminConfigServiceImpl implements AdminConfigService {\n       return null;\n     }\n     Version version = versionRepository.findById(versionId);\n-    if (version == null){\n+    if (version == null) {\n       return null;\n     }\n     VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/naturalize/25/AdminConfigServiceImpl.java\nindex 55385afb35..55c4c7ad1a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/naturalize/25/AdminConfigServiceImpl.java\n@@ -69,7 +69,7 @@ public class AdminConfigServiceImpl implements AdminConfigService {\n       return null;\n     }\n     Version version = versionRepository.findById(versionId);\n-    if (version == null){\n+    if (version == null) {\n       return null;\n     }\n     VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);\n@@ -102,4 +102,4 @@ public class AdminConfigServiceImpl implements AdminConfigService {\n     return ApolloBeanUtils.batchTransform(ConfigItemDTO.class, configItems);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/codebuff/25/AdminConfigServiceImpl.java\nindex 55385afb35..72a84e57b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/codebuff/25/AdminConfigServiceImpl.java\n@@ -14,92 +14,89 @@ import com.ctrip.apollo.core.dto.ClusterDTO;\n import com.ctrip.apollo.core.dto.ConfigItemDTO;\n import com.ctrip.apollo.core.dto.ReleaseSnapshotDTO;\n import com.ctrip.apollo.core.dto.VersionDTO;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n-\n import java.util.Collections;\n import java.util.List;\n \n @Service(\"adminConfigService\")\n public class AdminConfigServiceImpl implements AdminConfigService {\n+    @Autowired\n+    private VersionRepository versionRepository;\n+\n+    @Autowired\n+    private ReleaseSnapShotRepository releaseSnapShotRepository;\n \n-  @Autowired\n-  private VersionRepository versionRepository;\n-  @Autowired\n-  private ReleaseSnapShotRepository releaseSnapShotRepository;\n-  @Autowired\n-  private ClusterRepository clusterRepository;\n-  @Autowired\n-  private ConfigItemRepository configItemRepository;\n-\n-  @Override\n-  public List<ReleaseSnapshotDTO> findReleaseSnapshotByReleaseId(long releaseId) {\n+    @Autowired\n+    private ClusterRepository clusterRepository;\n+\n+    @Autowired\n+    private ConfigItemRepository configItemRepository;\n+\n+    @Override\n+    public List<ReleaseSnapshotDTO> findReleaseSnapshotByReleaseId(long releaseId) {\n     if (releaseId <= 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n \n     List<ReleaseSnapshot> releaseSnapShots = releaseSnapShotRepository.findByReleaseId(releaseId);\n-\n     if (releaseSnapShots == null || releaseSnapShots.size() == 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n-\n     return ApolloBeanUtils.batchTransform(ReleaseSnapshotDTO.class, releaseSnapShots);\n-  }\n-\n+    }\n \n-  @Override\n-  public List<VersionDTO> findVersionsByApp(long appId) {\n+    @Override\n+    public List<VersionDTO> findVersionsByApp(long appId) {\n     if (appId <= 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n \n     List<Version> versions = versionRepository.findByAppId(appId);\n     if (versions == null || versions.size() == 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n-\n     return ApolloBeanUtils.batchTransform(VersionDTO.class, versions);\n-  }\n+    }\n \n-  @Override\n-  public VersionDTO loadVersionById(long versionId) {\n+    @Override\n+    public VersionDTO loadVersionById(long versionId) {\n     if (versionId <= 0) {\n-      return null;\n+        return null;\n     }\n+\n     Version version = versionRepository.findById(versionId);\n-    if (version == null){\n-      return null;\n+    if (version == null) {\n+        return null;\n     }\n+\n     VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);\n     return dto;\n-  }\n+    }\n \n-  @Override\n-  public List<ClusterDTO> findClustersByApp(long appId) {\n+    @Override\n+    public List<ClusterDTO> findClustersByApp(long appId) {\n     if (appId <= 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n+\n     List<Cluster> clusters = clusterRepository.findByAppId(appId);\n     if (clusters == null || clusters.size() == 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n-\n     return ApolloBeanUtils.batchTransform(ClusterDTO.class, clusters);\n-  }\n+    }\n \n-  @Override\n-  public List<ConfigItemDTO> findConfigItemsByClusters(List<Long> clusterIds) {\n+    @Override\n+    public List<ConfigItemDTO> findConfigItemsByClusters(List<Long> clusterIds) {\n     if (clusterIds == null || clusterIds.size() == 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n+\n     List<ConfigItem> configItems = configItemRepository.findByClusterIdIsIn(clusterIds);\n     if (configItems == null || configItems.size() == 0) {\n-      return Collections.EMPTY_LIST;\n+        return Collections.EMPTY_LIST;\n     }\n-\n     return ApolloBeanUtils.batchTransform(ConfigItemDTO.class, configItems);\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_random/25/AdminConfigServiceImpl.java\nindex 55385afb35..a1600c782c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_random/25/AdminConfigServiceImpl.java\n@@ -69,7 +69,7 @@ public class AdminConfigServiceImpl implements AdminConfigService {\n       return null;\n     }\n     Version version = versionRepository.findById(versionId);\n-    if (version == null){\n+    if (version == null) {\n       return null;\n     }\n     VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_three_grams/25/AdminConfigServiceImpl.java\nindex 55385afb35..a1600c782c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/errored/1/25/AdminConfigServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/ctripcorp-apollo/styler_three_grams/25/AdminConfigServiceImpl.java\n@@ -69,7 +69,7 @@ public class AdminConfigServiceImpl implements AdminConfigService {\n       return null;\n     }\n     Version version = versionRepository.findById(versionId);\n-    if (version == null){\n+    if (version == null) {\n       return null;\n     }\n     VersionDTO dto = ApolloBeanUtils.transfrom(VersionDTO.class, version);\n",
            "diff_size": 1
        }
    ]
}