{
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "48",
                "column": "27",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "                if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n                    controller.restartJob(jobNode.getId());\n                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n                    controller.resumeRampJob(jobNode.getJobId());\n                } else {\n                    controller.startJob(jobNode.getId());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/3/JobQueueAction.java\nindex f17f8d6def..af89e9bdac 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/3/JobQueueAction.java\n@@ -45,7 +45,7 @@ public class JobQueueAction {\n             } else {\n                 if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n                     controller.restartJob(jobNode.getId());\n-                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n+                } else if (jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n                     controller.resumeRampJob(jobNode.getJobId());\n                 } else {\n                     controller.startJob(jobNode.getId());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/3/JobQueueAction.java\nindex f17f8d6def..95524ad6d0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/3/JobQueueAction.java\n@@ -26,88 +26,88 @@ import com.intuit.tank.vm.api.enumerated.JobStatus;\n @RequestScoped\n public class JobQueueAction {\n \n-    @Inject\n-    private JobController controller;\n+  @Inject\n+  private JobController controller;\n \n-    /**\n-     * Runs the job for the given jobId\n-     * \n-     * @param node\n-     */\n-    public void run(JobNodeBean node) {\n-        AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"run\");\n-        AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n-        if (node instanceof ActJobNodeBean) {\n-            ActJobNodeBean jobNode = (ActJobNodeBean) node;\n+  /**\n+   * Runs the job for the given jobId\n+   *\n+   * @param node\n+   */\n+  public void run(JobNodeBean node) {\n+    AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"run\");\n+    AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n+    if (node instanceof ActJobNodeBean) {\n+      ActJobNodeBean jobNode = (ActJobNodeBean) node;\n \n-            if (jobNode.getStatus().equals(JobQueueStatus.Created.toString())) {\n-                controller.startJob(jobNode.getId());\n-            } else {\n-                if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n-                    controller.restartJob(jobNode.getId());\n-                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n-                    controller.resumeRampJob(jobNode.getJobId());\n-                } else {\n-                    controller.startJob(jobNode.getId());\n-                }\n-            }\n-        } else if (node instanceof VMNodeBean) {\n-             controller.restartAgent(node.getId());\n+      if (jobNode.getStatus().equals(JobQueueStatus.Created.toString())) {\n+        controller.startJob(jobNode.getId());\n+      } else {\n+        if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n+          controller.restartJob(jobNode.getId());\n+        } else if (jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n+          controller.resumeRampJob(jobNode.getJobId());\n+        } else {\n+          controller.startJob(jobNode.getId());\n         }\n+      }\n+    } else if (node instanceof VMNodeBean) {\n+      controller.restartAgent(node.getId());\n     }\n+  }\n \n-    /**\n-     * Pauses the job for the given jobId\n-     */\n-    public void pause(JobNodeBean node) {\n-        AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"pause\");\n-        AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n-        if (node instanceof ActJobNodeBean) {\n-            controller.pauseJob(node.getId());\n-        } else if (node instanceof VMNodeBean) {\n-            controller.pauseAgent(node.getId());\n-        }\n+  /**\n+   * Pauses the job for the given jobId\n+   */\n+  public void pause(JobNodeBean node) {\n+    AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"pause\");\n+    AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n+    if (node instanceof ActJobNodeBean) {\n+      controller.pauseJob(node.getId());\n+    } else if (node instanceof VMNodeBean) {\n+      controller.pauseAgent(node.getId());\n     }\n+  }\n \n-    /**\n-     * Pauses the job for the given jobId\n-     */\n-    public void pauseRamp(JobNodeBean node) {\n-        AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"pauseRamp\");\n-        AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n-        if (node instanceof ActJobNodeBean) {\n-            controller.pauseRampJob(node.getId());\n-        } else if (node instanceof VMNodeBean) {\n-            controller.pauseRampInstance(node.getId());\n-        }\n+  /**\n+   * Pauses the job for the given jobId\n+   */\n+  public void pauseRamp(JobNodeBean node) {\n+    AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"pauseRamp\");\n+    AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n+    if (node instanceof ActJobNodeBean) {\n+      controller.pauseRampJob(node.getId());\n+    } else if (node instanceof VMNodeBean) {\n+      controller.pauseRampInstance(node.getId());\n     }\n+  }\n \n-    /**\n-     * Kills the job for the given jobId\n-     * \n-     * @param node\n-     */\n-    public void kill(JobNodeBean node) {\n-        AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"kill\");\n-        AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n-        if (node instanceof ActJobNodeBean) {\n-            controller.killJob(node.getId());\n-        } else if (node instanceof VMNodeBean) {\n-            controller.killInstance(node.getId());\n-        }\n+  /**\n+   * Kills the job for the given jobId\n+   *\n+   * @param node\n+   */\n+  public void kill(JobNodeBean node) {\n+    AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"kill\");\n+    AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n+    if (node instanceof ActJobNodeBean) {\n+      controller.killJob(node.getId());\n+    } else if (node instanceof VMNodeBean) {\n+      controller.killInstance(node.getId());\n     }\n+  }\n \n-    /**\n-     * Stops the job with the given jobId\n-     */\n-    public void stop(JobNodeBean node) {\n-        AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"stop\");\n-        AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n-        if (node instanceof ActJobNodeBean) {\n-            controller.stopJob(node.getId());\n-        } else if (node instanceof VMNodeBean) {\n-            controller.stopAgent(node.getId());\n-        }\n+  /**\n+   * Stops the job with the given jobId\n+   */\n+  public void stop(JobNodeBean node) {\n+    AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"stop\");\n+    AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n+    if (node instanceof ActJobNodeBean) {\n+      controller.stopJob(node.getId());\n+    } else if (node instanceof VMNodeBean) {\n+      controller.stopAgent(node.getId());\n     }\n+  }\n \n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/3/JobQueueAction.java\nindex f17f8d6def..868b03c9ae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/3/JobQueueAction.java\n@@ -45,15 +45,15 @@ public class JobQueueAction {\n             } else {\n                 if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n                     controller.restartJob(jobNode.getId());\n-                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n+                } else if (jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n                     controller.resumeRampJob(jobNode.getJobId());\n                 } else {\n                     controller.startJob(jobNode.getId());\n                 }\n             }\n         } else if (node instanceof VMNodeBean) {\n-             controller.restartAgent(node.getId());\n-        }\n+    controller.restartAgent(node.getId());\n+    }\n     }\n \n     /**\n@@ -110,4 +110,4 @@ public class JobQueueAction {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/3/JobQueueAction.java\nindex f17f8d6def..4d3a150fcd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/3/JobQueueAction.java\n@@ -13,10 +13,11 @@ package com.intuit.tank.job;\n  * #L%\n  */\n \n+\n+\n import javax.enterprise.context.RequestScoped;\n import javax.inject.Inject;\n import javax.inject.Named;\n-\n import com.amazonaws.xray.AWSXRay;\n import com.intuit.tank.service.impl.v1.cloud.JobController;\n import com.intuit.tank.vm.api.enumerated.JobQueueStatus;\n@@ -39,26 +40,27 @@ public class JobQueueAction {\n         AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n         if (node instanceof ActJobNodeBean) {\n             ActJobNodeBean jobNode = (ActJobNodeBean) node;\n-\n             if (jobNode.getStatus().equals(JobQueueStatus.Created.toString())) {\n                 controller.startJob(jobNode.getId());\n             } else {\n                 if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n                     controller.restartJob(jobNode.getId());\n-                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n+                } else if (jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n                     controller.resumeRampJob(jobNode.getJobId());\n                 } else {\n                     controller.startJob(jobNode.getId());\n                 }\n             }\n         } else if (node instanceof VMNodeBean) {\n-             controller.restartAgent(node.getId());\n+            controller.restartAgent(node.getId());\n         }\n     }\n \n     /**\n      * Pauses the job for the given jobId\n      */\n+\n+\n     public void pause(JobNodeBean node) {\n         AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"pause\");\n         AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n@@ -72,6 +74,8 @@ public class JobQueueAction {\n     /**\n      * Pauses the job for the given jobId\n      */\n+\n+\n     public void pauseRamp(JobNodeBean node) {\n         AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"pauseRamp\");\n         AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n@@ -87,6 +91,8 @@ public class JobQueueAction {\n      * \n      * @param node\n      */\n+\n+\n     public void kill(JobNodeBean node) {\n         AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"kill\");\n         AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n@@ -100,6 +106,8 @@ public class JobQueueAction {\n     /**\n      * Stops the job with the given jobId\n      */\n+\n+\n     public void stop(JobNodeBean node) {\n         AWSXRay.getCurrentSegment().putAnnotation(\"job.action\", \"stop\");\n         AWSXRay.getCurrentSegment().putAnnotation(\"jobId\", node.getJobId());\n@@ -109,5 +117,4 @@ public class JobQueueAction {\n             controller.stopAgent(node.getId());\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/3/JobQueueAction.java\nindex f17f8d6def..af89e9bdac 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/3/JobQueueAction.java\n@@ -45,7 +45,7 @@ public class JobQueueAction {\n             } else {\n                 if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n                     controller.restartJob(jobNode.getId());\n-                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n+                } else if (jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n                     controller.resumeRampJob(jobNode.getJobId());\n                 } else {\n                     controller.startJob(jobNode.getId());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/3/JobQueueAction.java\nindex f17f8d6def..af89e9bdac 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/3/JobQueueAction.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/3/JobQueueAction.java\n@@ -45,7 +45,7 @@ public class JobQueueAction {\n             } else {\n                 if (jobNode.getStatus().equals(JobStatus.Paused.toString())) {\n                     controller.restartJob(jobNode.getId());\n-                } else if ( jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n+                } else if (jobNode.getStatus().equals(JobStatus.RampPaused.toString())) {\n                     controller.resumeRampJob(jobNode.getJobId());\n                 } else {\n                     controller.startJob(jobNode.getId());\n",
            "diff_size": 1
        }
    ]
}