{
    "error_id": "163",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\tpublic Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n\t\tswitch (p.getCurrentTokenId()) {\n\t\t\tcase JsonTokenId.ID_STRING: // let's do implicit re-parse\n\t\t\t\tString text = p.getText().trim();\n\t\t\t\treturn Currency.getInstance(text);\n\t\t\tdefault:",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/163/CurrencyUnitDeserializer.java\nindex 333e179c85..21de08b72f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/163/CurrencyUnitDeserializer.java\n@@ -15,7 +15,7 @@ public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \tpublic CurrencyUnitDeserializer() {\n \t\tsuper(String.class);\n \t}\n-\t\n+\n \t@Override\n \tpublic Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n \t\tswitch (p.getCurrentTokenId()) {\n@@ -27,6 +27,6 @@ public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \t\t}\n \t}\n \n-\t\n+\n \n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/163/CurrencyUnitDeserializer.java\nindex 333e179c85..e45f85bea3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/163/CurrencyUnitDeserializer.java\n@@ -10,23 +10,22 @@ import com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer;\n \n public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \n-\tprivate static final long serialVersionUID = 1L;\n-\n-\tpublic CurrencyUnitDeserializer() {\n-\t\tsuper(String.class);\n-\t}\n-\t\n-\t@Override\n-\tpublic Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n-\t\tswitch (p.getCurrentTokenId()) {\n-\t\t\tcase JsonTokenId.ID_STRING: // let's do implicit re-parse\n-\t\t\t\tString text = p.getText().trim();\n-\t\t\t\treturn Currency.getInstance(text);\n-\t\t\tdefault:\n-\t\t\t\treturn (Currency) ctxt.handleUnexpectedToken(_valueClass, p);\n-\t\t}\n-\t}\n-\n-\t\n+    private static final long serialVersionUID = 1L;\n+\n+    public CurrencyUnitDeserializer() {\n+        super(String.class);\n+    }\n+\n+    @Override\n+    public Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n+        switch (p.getCurrentTokenId()) {\n+            case JsonTokenId.ID_STRING: // let's do implicit re-parse\n+                String text = p.getText().trim();\n+                return Currency.getInstance(text);\n+            default:\n+                return (Currency) ctxt.handleUnexpectedToken(_valueClass, p);\n+        }\n+    }\n+\n \n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/163/CurrencyUnitDeserializer.java\nindex 333e179c85..720b519f0c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/163/CurrencyUnitDeserializer.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.io.jackson.serializer;\n \n import java.io.IOException;\n import java.util.Currency;\n-\n import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.core.JsonTokenId;\n import com.fasterxml.jackson.databind.DeserializationContext;\n@@ -10,23 +9,20 @@ import com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer;\n \n public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \n-\tprivate static final long serialVersionUID = 1L;\n-\n-\tpublic CurrencyUnitDeserializer() {\n-\t\tsuper(String.class);\n-\t}\n-\t\n-\t@Override\n-\tpublic Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n-\t\tswitch (p.getCurrentTokenId()) {\n-\t\t\tcase JsonTokenId.ID_STRING: // let's do implicit re-parse\n-\t\t\t\tString text = p.getText().trim();\n-\t\t\t\treturn Currency.getInstance(text);\n-\t\t\tdefault:\n-\t\t\t\treturn (Currency) ctxt.handleUnexpectedToken(_valueClass, p);\n-\t\t}\n-\t}\n+    private static final long serialVersionUID = 1L;\n \n-\t\n+    public CurrencyUnitDeserializer() {\n+        super(String.class);\n+    }\n \n-}\n+    @Override\n+    public Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n+        switch (p.getCurrentTokenId()) {\n+            case JsonTokenId.ID_STRING: // let's do implicit re-parse\n+                String text = p.getText().trim();\n+                return Currency.getInstance(text);\n+            default:\n+                return (Currency)ctxt.handleUnexpectedToken(_valueClass, p);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/163/CurrencyUnitDeserializer.java\nindex 333e179c85..21de08b72f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/163/CurrencyUnitDeserializer.java\n@@ -15,7 +15,7 @@ public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \tpublic CurrencyUnitDeserializer() {\n \t\tsuper(String.class);\n \t}\n-\t\n+\n \t@Override\n \tpublic Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n \t\tswitch (p.getCurrentTokenId()) {\n@@ -27,6 +27,6 @@ public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \t\t}\n \t}\n \n-\t\n+\n \n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/163/CurrencyUnitDeserializer.java\nindex 333e179c85..6fb5a34137 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/163/CurrencyUnitDeserializer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/163/CurrencyUnitDeserializer.java\n@@ -15,11 +15,11 @@ public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \tpublic CurrencyUnitDeserializer() {\n \t\tsuper(String.class);\n \t}\n-\t\n+\n \t@Override\n \tpublic Currency deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n \t\tswitch (p.getCurrentTokenId()) {\n-\t\t\tcase JsonTokenId.ID_STRING: // let's do implicit re-parse\n+\t\tcase JsonTokenId.ID_STRING: // let's do implicit re-parse\n \t\t\t\tString text = p.getText().trim();\n \t\t\t\treturn Currency.getInstance(text);\n \t\t\tdefault:\n@@ -27,6 +27,6 @@ public class CurrencyUnitDeserializer extends StdScalarDeserializer<Currency> {\n \t\t}\n \t}\n \n-\t\n+\n \n }\n",
            "diff_size": 3
        }
    ]
}