{
    "error_id": "213",
    "information": {
        "errors": [
            {
                "line": "73",
                "column": "5",
                "severity": "warning",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "    RATIO_TO_REPORT,\n\n    ;\n\n    /**\n     * Returns the type of window function with the specified name, or null.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/213/WindowFunctionType.java\nindex e2c36d3749..3316d14714 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/213/WindowFunctionType.java\n@@ -68,9 +68,8 @@ public enum WindowFunctionType {\n     /**\n      * The type for RATIO_TO_REPORT() window function.\n      */\n-    RATIO_TO_REPORT,\n+    RATIO_TO_REPORT,;\n \n-    ;\n \n     /**\n      * Returns the type of window function with the specified name, or null.\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "74",
                    "column": "3",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/213/WindowFunctionType.java\nindex e2c36d3749..41dd107e85 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/213/WindowFunctionType.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.expression.analysis;\n \n /**\n@@ -10,133 +11,132 @@ package org.h2.expression.analysis;\n  */\n public enum WindowFunctionType {\n \n-    /**\n-     * The type for ROW_NUMBER() window function.\n-     */\n-    ROW_NUMBER,\n-\n-    /**\n-     * The type for RANK() window function.\n-     */\n-    RANK,\n-\n-    /**\n-     * The type for DENSE_RANK() window function.\n-     */\n-    DENSE_RANK,\n-\n-    /**\n-     * The type for PERCENT_RANK() window function.\n-     */\n-    PERCENT_RANK,\n-\n-    /**\n-     * The type for CUME_DIST() window function.\n-     */\n-    CUME_DIST,\n-\n-    /**\n-     * The type for NTILE() window function.\n-     */\n-    NTILE,\n-\n-    /**\n-     * The type for LEAD() window function.\n-     */\n-    LEAD,\n-\n-    /**\n-     * The type for LAG() window function.\n-     */\n-    LAG,\n-\n-    /**\n-     * The type for FIRST_VALUE() window function.\n-     */\n-    FIRST_VALUE,\n-\n-    /**\n-     * The type for LAST_VALUE() window function.\n-     */\n-    LAST_VALUE,\n-\n-    /**\n-     * The type for NTH_VALUE() window function.\n-     */\n-    NTH_VALUE,\n-\n-    /**\n-     * The type for RATIO_TO_REPORT() window function.\n-     */\n-    RATIO_TO_REPORT,\n-\n-    ;\n-\n-    /**\n-     * Returns the type of window function with the specified name, or null.\n-     *\n-     * @param name\n-     *            name of a window function\n-     * @return the type of window function, or null.\n-     */\n-    public static WindowFunctionType get(String name) {\n-        switch (name) {\n-        case \"ROW_NUMBER\":\n-            return ROW_NUMBER;\n-        case \"RANK\":\n-            return RANK;\n-        case \"DENSE_RANK\":\n-            return DENSE_RANK;\n-        case \"PERCENT_RANK\":\n-            return PERCENT_RANK;\n-        case \"CUME_DIST\":\n-            return CUME_DIST;\n-        case \"NTILE\":\n-            return NTILE;\n-        case \"LEAD\":\n-            return LEAD;\n-        case \"LAG\":\n-            return LAG;\n-        case \"FIRST_VALUE\":\n-            return FIRST_VALUE;\n-        case \"LAST_VALUE\":\n-            return LAST_VALUE;\n-        case \"NTH_VALUE\":\n-            return NTH_VALUE;\n-        case \"RATIO_TO_REPORT\":\n-            return RATIO_TO_REPORT;\n-        default:\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Returns SQL representation.\n-     *\n-     * @return SQL representation.\n-     * @see org.h2.expression.Expression#getSQL(int)\n-     */\n-    public String getSQL() {\n-        return name();\n+  /**\n+   * The type for ROW_NUMBER() window function.\n+   */\n+  ROW_NUMBER,\n+\n+  /**\n+   * The type for RANK() window function.\n+   */\n+  RANK,\n+\n+  /**\n+   * The type for DENSE_RANK() window function.\n+   */\n+  DENSE_RANK,\n+\n+  /**\n+   * The type for PERCENT_RANK() window function.\n+   */\n+  PERCENT_RANK,\n+\n+  /**\n+   * The type for CUME_DIST() window function.\n+   */\n+  CUME_DIST,\n+\n+  /**\n+   * The type for NTILE() window function.\n+   */\n+  NTILE,\n+\n+  /**\n+   * The type for LEAD() window function.\n+   */\n+  LEAD,\n+\n+  /**\n+   * The type for LAG() window function.\n+   */\n+  LAG,\n+\n+  /**\n+   * The type for FIRST_VALUE() window function.\n+   */\n+  FIRST_VALUE,\n+\n+  /**\n+   * The type for LAST_VALUE() window function.\n+   */\n+  LAST_VALUE,\n+\n+  /**\n+   * The type for NTH_VALUE() window function.\n+   */\n+  NTH_VALUE,\n+\n+  /**\n+   * The type for RATIO_TO_REPORT() window function.\n+   */\n+  RATIO_TO_REPORT,\n+\n+  ;\n+\n+  /**\n+   * Returns the type of window function with the specified name, or null.\n+   *\n+   * @param name name of a window function\n+   * @return the type of window function, or null.\n+   */\n+  public static WindowFunctionType get(String name) {\n+    switch (name) {\n+      case \"ROW_NUMBER\":\n+        return ROW_NUMBER;\n+      case \"RANK\":\n+        return RANK;\n+      case \"DENSE_RANK\":\n+        return DENSE_RANK;\n+      case \"PERCENT_RANK\":\n+        return PERCENT_RANK;\n+      case \"CUME_DIST\":\n+        return CUME_DIST;\n+      case \"NTILE\":\n+        return NTILE;\n+      case \"LEAD\":\n+        return LEAD;\n+      case \"LAG\":\n+        return LAG;\n+      case \"FIRST_VALUE\":\n+        return FIRST_VALUE;\n+      case \"LAST_VALUE\":\n+        return LAST_VALUE;\n+      case \"NTH_VALUE\":\n+        return NTH_VALUE;\n+      case \"RATIO_TO_REPORT\":\n+        return RATIO_TO_REPORT;\n+      default:\n+        return null;\n     }\n-\n-    /**\n-     * Returns whether window function of this type requires window ordering\n-     * clause.\n-     *\n-     * @return {@code true} if it does, {@code false} if it may be omitted\n-     */\n-    public boolean requiresWindowOrdering() {\n-        switch (this) {\n-        case RANK:\n-        case DENSE_RANK:\n-        case NTILE:\n-        case LEAD:\n-        case LAG:\n-            return true;\n-        default:\n-            return false;\n-        }\n+  }\n+\n+  /**\n+   * Returns SQL representation.\n+   *\n+   * @return SQL representation.\n+   * @see org.h2.expression.Expression#getSQL(int)\n+   */\n+  public String getSQL() {\n+    return name();\n+  }\n+\n+  /**\n+   * Returns whether window function of this type requires window ordering\n+   * clause.\n+   *\n+   * @return {@code true} if it does, {@code false} if it may be omitted\n+   */\n+  public boolean requiresWindowOrdering() {\n+    switch (this) {\n+      case RANK:\n+      case DENSE_RANK:\n+      case NTILE:\n+      case LEAD:\n+      case LAG:\n+        return true;\n+      default:\n+        return false;\n     }\n+  }\n \n }\n\\ No newline at end of file\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/213/WindowFunctionType.java\nindex e2c36d3749..baed562d24 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/codebuff/213/WindowFunctionType.java\n@@ -8,6 +8,8 @@ package org.h2.expression.analysis;\n /**\n  * A type of a window function.\n  */\n+\n+\n public enum WindowFunctionType {\n \n     /**\n@@ -68,9 +70,7 @@ public enum WindowFunctionType {\n     /**\n      * The type for RATIO_TO_REPORT() window function.\n      */\n-    RATIO_TO_REPORT,\n-\n-    ;\n+    RATIO_TO_REPORT,;\n \n     /**\n      * Returns the type of window function with the specified name, or null.\n@@ -79,6 +79,7 @@ public enum WindowFunctionType {\n      *            name of a window function\n      * @return the type of window function, or null.\n      */\n+\n     public static WindowFunctionType get(String name) {\n         switch (name) {\n         case \"ROW_NUMBER\":\n@@ -116,6 +117,8 @@ public enum WindowFunctionType {\n      * @return SQL representation.\n      * @see org.h2.expression.Expression#getSQL(int)\n      */\n+\n+\n     public String getSQL() {\n         return name();\n     }\n@@ -126,6 +129,8 @@ public enum WindowFunctionType {\n      *\n      * @return {@code true} if it does, {@code false} if it may be omitted\n      */\n+\n+\n     public boolean requiresWindowOrdering() {\n         switch (this) {\n         case RANK:\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/213/WindowFunctionType.java\nindex e2c36d3749..edf76750ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/213/WindowFunctionType.java\n@@ -68,9 +68,7 @@ public enum WindowFunctionType {\n     /**\n      * The type for RATIO_TO_REPORT() window function.\n      */\n-    RATIO_TO_REPORT,\n-\n-    ;\n+    RATIO_TO_REPORT,;\n \n     /**\n      * Returns the type of window function with the specified name, or null.\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/213/WindowFunctionType.java\nindex e2c36d3749..3316d14714 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/213/WindowFunctionType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/213/WindowFunctionType.java\n@@ -68,9 +68,8 @@ public enum WindowFunctionType {\n     /**\n      * The type for RATIO_TO_REPORT() window function.\n      */\n-    RATIO_TO_REPORT,\n+    RATIO_TO_REPORT,;\n \n-    ;\n \n     /**\n      * Returns the type of window function with the specified name, or null.\n",
            "diff_size": 2
        }
    ]
}