{
    "error_id": "314",
    "information": {
        "errors": [
            {
                "line": "211",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/314/EventReader.java\nindex 2775cf4b28..279314eaa1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/314/EventReader.java\n@@ -208,7 +208,7 @@ public class EventReader extends Reader<Event> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/314/EventReader.java\nindex 2775cf4b28..598e75572e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/314/EventReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.monitor.v1;\n@@ -208,7 +208,7 @@ public class EventReader extends Reader<Event> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/314/EventReader.java\nindex 2775cf4b28..705b41ff38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/314/EventReader.java\n@@ -36,6 +36,8 @@ public class EventReader extends Reader<Event> {\n      * @param actorSid Only include events initiated by this Actor\n      * @return this\n      */\n+\n+\n     public EventReader setActorSid(final String actorSid) {\n         this.actorSid = actorSid;\n         return this;\n@@ -48,6 +50,8 @@ public class EventReader extends Reader<Event> {\n      * @param eventType Only include events of this Event Type\n      * @return this\n      */\n+\n+\n     public EventReader setEventType(final String eventType) {\n         this.eventType = eventType;\n         return this;\n@@ -60,6 +64,8 @@ public class EventReader extends Reader<Event> {\n      * @param resourceSid Only include events that refer to this resource\n      * @return this\n      */\n+\n+\n     public EventReader setResourceSid(final String resourceSid) {\n         this.resourceSid = resourceSid;\n         return this;\n@@ -73,6 +79,8 @@ public class EventReader extends Reader<Event> {\n      *                        address\n      * @return this\n      */\n+\n+\n     public EventReader setSourceIpAddress(final String sourceIpAddress) {\n         this.sourceIpAddress = sourceIpAddress;\n         return this;\n@@ -85,6 +93,8 @@ public class EventReader extends Reader<Event> {\n      * @param startDate Only include events that occurred on or after this date\n      * @return this\n      */\n+\n+\n     public EventReader setStartDate(final DateTime startDate) {\n         this.startDate = startDate;\n         return this;\n@@ -97,6 +107,8 @@ public class EventReader extends Reader<Event> {\n      * @param endDate Only include events that occurred on or before this date\n      * @return this\n      */\n+\n+\n     public EventReader setEndDate(final DateTime endDate) {\n         this.endDate = endDate;\n         return this;\n@@ -108,6 +120,8 @@ public class EventReader extends Reader<Event> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Event ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Event> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -119,15 +133,12 @@ public class EventReader extends Reader<Event> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Event ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Event> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.MONITOR.toString(),\n-            \"/v1/Events\",\n-            client.getRegion()\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.MONITOR.toString(), \"/v1/Events\", client.getRegion());\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -140,14 +151,13 @@ public class EventReader extends Reader<Event> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Event ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Event> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Event> getPage(final String targetUrl,\n+                               final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -158,16 +168,15 @@ public class EventReader extends Reader<Event> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Event> nextPage(final Page<Event> page,\n                                 final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.MONITOR.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getNextPageUrl(Domains.MONITOR.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -178,16 +187,15 @@ public class EventReader extends Reader<Event> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Event> previousPage(final Page<Event> page,\n                                     final TwilioRestClient client) {\n         Request request = new Request(\n             HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.MONITOR.toString(),\n-                client.getRegion()\n-            )\n-        );\n+            page.getPreviousPageUrl(Domains.MONITOR.toString(), client.getRegion())\n+                          );\n         return pageForRequest(client, request);\n     }\n \n@@ -198,9 +206,11 @@ public class EventReader extends Reader<Event> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Event> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Event> pageForRequest(final TwilioRestClient client,\n+                                       final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Event read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -208,15 +218,11 @@ public class EventReader extends Reader<Event> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"events\",\n-            response.getContent(),\n-            Event.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"events\", response.getContent(), Event.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -224,6 +230,8 @@ public class EventReader extends Reader<Event> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (actorSid != null) {\n             request.addQueryParam(\"ActorSid\", actorSid);\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/314/EventReader.java\nindex 2775cf4b28..279314eaa1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/314/EventReader.java\n@@ -208,7 +208,7 @@ public class EventReader extends Reader<Event> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/314/EventReader.java\nindex 2775cf4b28..4976ecffcb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/314/EventReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/314/EventReader.java\n@@ -208,7 +208,8 @@ public class EventReader extends Reader<Event> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}