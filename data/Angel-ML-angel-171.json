{
    "error_id": "171",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/171/RowPartitionMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/171/RowPartitionMeta.java\nindex cca6941315..d80f88a381 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/171/RowPartitionMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/171/RowPartitionMeta.java\n@@ -28,181 +28,182 @@ import java.io.IOException;\n  * The meta data for row split\n  */\n public class RowPartitionMeta {\n-  /**\n-   * Row id\n-   */\n-  private int rowId;\n-\n-  /**\n-   * The offset for data file for this row split\n-   */\n-  private long offset;\n-\n-  /**\n-   * The element number for this row split\n-   */\n-  private int elementNum;\n-\n-  /**\n-   * Save type: 0 dense, 1 sparse. just for SnapshotFormat now\n-   */\n-  private int saveType;\n-\n-  /**\n-   * Create meta for row split\n-   *\n-   * @param rowId      row split\n-   * @param offset     data offset in the saved file\n-   * @param elementNum save element number\n-   * @param saveType   save type : 0 dense, 1 sparse\n-   */\n-  public RowPartitionMeta(int rowId, long offset, int elementNum, int saveType) {\n-    this.rowId = rowId;\n-    this.offset = offset;\n-    this.elementNum = elementNum;\n-    this.saveType = saveType;\n-  }\n-\n-  /**\n-   * Create meta for row split\n-   *\n-   * @param rowId      row split\n-   * @param offset     data offset in the saved file\n-   * @param elementNum save element number\n-   */\n-  public RowPartitionMeta(int rowId, long offset, int elementNum) {\n-    this(rowId, offset, elementNum, 0);\n-  }\n-\n-  /**\n-   * Write row split meta to output stream use binary format\n-   *\n-   * @param output output stream\n-   * @throws IOException\n-   */\n-  public void write(DataOutputStream output) throws IOException {\n-    output.writeInt(rowId);\n-    output.writeLong(offset);\n-    output.writeInt(elementNum);\n-    output.writeInt(saveType);\n-  }\n-\n-  /**\n-   * Read row split meta from input stream use binary format\n-   *\n-   * @param input input stream\n-   * @throws IOException\n-   */\n-  public void read(DataInputStream input) throws IOException {\n-    rowId = input.readInt();\n-    offset = input.readLong();\n-    elementNum = input.readInt();\n-    saveType = input.readInt();\n-  }\n-\n-  /**\n-   * Write row split meta to a Json object\n-   *\n-   * @return json object\n-   * @throws IOException\n-   * @throws JSONException\n-   */\n-  public void write(JSONObject rowJsonObject) throws IOException, JSONException {\n-    rowJsonObject.put(\"rowId\", rowId);\n-    rowJsonObject.put(\"offset\", offset);\n-    rowJsonObject.put(\"elementNum\", elementNum);\n-    rowJsonObject.put(\"saveType\", saveType);\n-  }\n-\n-  /**\n-   * Read row split meta from a Json object\n-   *\n-   * @param jsonObject json object\n-   * @throws IOException\n-   * @throws JSONException\n-   */\n-  public void read(JSONObject jsonObject) throws IOException, JSONException {\n-    rowId = jsonObject.getInt(\"rowId\");\n-    offset = jsonObject.getInt(\"offset\");\n-    elementNum = jsonObject.getInt(\"elementNum\");\n-    saveType = jsonObject.getInt(\"saveType\");\n-  }\n-\n-  /**\n-   * Get the row id for the row split\n-   *\n-   * @return row id\n-   */\n-  public int getRowId() {\n-    return rowId;\n-  }\n-\n-  /**\n-   * Set the row id for the row split\n-   *\n-   * @param rowId row id\n-   */\n-  public void setRowId(int rowId) {\n-    this.rowId = rowId;\n-  }\n-\n-  /**\n-   * Get the data offset in the saved file for this row split\n-   *\n-   * @return the data offset in the saved file for this row split\n-   */\n-  public long getOffset() {\n-    return offset;\n-  }\n-\n-  /**\n-   * Set the data offset in the saved file for this row split\n-   *\n-   * @param offset the data offset in the saved file for this row split\n-   */\n-  public void setOffset(long offset) {\n-    this.offset = offset;\n-  }\n-\n-  /**\n-   * Get save element number\n-   *\n-   * @return save element number\n-   */\n-  public int getElementNum() {\n-    return elementNum;\n-  }\n-\n-  /**\n-   * Set save element number\n-   *\n-   * @param elementNum save element number\n-   */\n-  public void setElementNum(int elementNum) {\n-    this.elementNum = elementNum;\n-  }\n-\n-  /**\n-   * Get save type\n-   *\n-   * @return save type\n-   */\n-  public int getSaveType() {\n-    return saveType;\n-  }\n-\n-  /**\n-   * Set save type\n-   *\n-   * @param saveType save type\n-   */\n-  public void setSaveType(int saveType) {\n-    this.saveType = saveType;\n-  }\n-\n-\n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n-  }\n+    /**\n+     * Row id\n+     */\n+    private int rowId;\n+\n+    /**\n+     * The offset for data file for this row split\n+     */\n+    private long offset;\n+\n+    /**\n+     * The element number for this row split\n+     */\n+    private int elementNum;\n+\n+    /**\n+     * Save type: 0 dense, 1 sparse. just for SnapshotFormat now\n+     */\n+    private int saveType;\n+\n+    /**\n+     * Create meta for row split\n+     *\n+     * @param rowId      row split\n+     * @param offset     data offset in the saved file\n+     * @param elementNum save element number\n+     * @param saveType   save type : 0 dense, 1 sparse\n+     */\n+    public RowPartitionMeta(int rowId, long offset, int elementNum, int saveType) {\n+        this.rowId = rowId;\n+        this.offset = offset;\n+        this.elementNum = elementNum;\n+        this.saveType = saveType;\n+    }\n+\n+    /**\n+     * Create meta for row split\n+     *\n+     * @param rowId      row split\n+     * @param offset     data offset in the saved file\n+     * @param elementNum save element number\n+     */\n+    public RowPartitionMeta(int rowId, long offset, int elementNum) {\n+        this(rowId, offset, elementNum, 0);\n+    }\n+\n+    /**\n+     * Write row split meta to output stream use binary format\n+     *\n+     * @param output output stream\n+     * @throws IOException\n+     */\n+    public void write(DataOutputStream output) throws IOException {\n+        output.writeInt(rowId);\n+        output.writeLong(offset);\n+        output.writeInt(elementNum);\n+        output.writeInt(saveType);\n+    }\n+\n+    /**\n+     * Read row split meta from input stream use binary format\n+     *\n+     * @param input input stream\n+     * @throws IOException\n+     */\n+    public void read(DataInputStream input) throws IOException {\n+        rowId = input.readInt();\n+        offset = input.readLong();\n+        elementNum = input.readInt();\n+        saveType = input.readInt();\n+    }\n+\n+    /**\n+     * Write row split meta to a Json object\n+     *\n+     * @return json object\n+     * @throws IOException\n+     * @throws JSONException\n+     */\n+    public void write(JSONObject rowJsonObject) throws IOException, JSONException {\n+        rowJsonObject.put(\"rowId\", rowId);\n+        rowJsonObject.put(\"offset\", offset);\n+        rowJsonObject.put(\"elementNum\", elementNum);\n+        rowJsonObject.put(\"saveType\", saveType);\n+    }\n+\n+    /**\n+     * Read row split meta from a Json object\n+     *\n+     * @param jsonObject json object\n+     * @throws IOException\n+     * @throws JSONException\n+     */\n+    public void read(JSONObject jsonObject) throws IOException, JSONException {\n+        rowId = jsonObject.getInt(\"rowId\");\n+        offset = jsonObject.getInt(\"offset\");\n+        elementNum = jsonObject.getInt(\"elementNum\");\n+        saveType = jsonObject.getInt(\"saveType\");\n+    }\n+\n+    /**\n+     * Get the row id for the row split\n+     *\n+     * @return row id\n+     */\n+    public int getRowId() {\n+        return rowId;\n+    }\n+\n+    /**\n+     * Set the row id for the row split\n+     *\n+     * @param rowId row id\n+     */\n+    public void setRowId(int rowId) {\n+        this.rowId = rowId;\n+    }\n+\n+    /**\n+     * Get the data offset in the saved file for this row split\n+     *\n+     * @return the data offset in the saved file for this row split\n+     */\n+    public long getOffset() {\n+        return offset;\n+    }\n+\n+    /**\n+     * Set the data offset in the saved file for this row split\n+     *\n+     * @param offset the data offset in the saved file for this row split\n+     */\n+    public void setOffset(long offset) {\n+        this.offset = offset;\n+    }\n+\n+    /**\n+     * Get save element number\n+     *\n+     * @return save element number\n+     */\n+    public int getElementNum() {\n+        return elementNum;\n+    }\n+\n+    /**\n+     * Set save element number\n+     *\n+     * @param elementNum save element number\n+     */\n+    public void setElementNum(int elementNum) {\n+        this.elementNum = elementNum;\n+    }\n+\n+    /**\n+     * Get save type\n+     *\n+     * @return save type\n+     */\n+    public int getSaveType() {\n+        return saveType;\n+    }\n+\n+    /**\n+     * Set save type\n+     *\n+     * @param saveType save type\n+     */\n+    public void setSaveType(int saveType) {\n+        this.saveType = saveType;\n+    }\n+\n+\n+    @Override\n+    public String toString() {\n+        return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n+                + elementNum + '}';\n+    }\n }\n",
            "diff_size": 178
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/171/RowPartitionMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/171/RowPartitionMeta.java\nindex cca6941315..55a8503e85 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/171/RowPartitionMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/171/RowPartitionMeta.java\n@@ -200,9 +200,8 @@ public class RowPartitionMeta {\n     this.saveType = saveType;\n   }\n \n-\n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n+@Override\n+public String toString() {\n+    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\" + elementNum + '}';\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 86.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 100.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 115.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 130.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 143.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 153.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 163.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 173.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 183.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 193.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 203.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 213.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/171/RowPartitionMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/171/RowPartitionMeta.java\nindex cca6941315..e46d000a7f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/171/RowPartitionMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/171/RowPartitionMeta.java\n@@ -19,7 +19,6 @@ package com.tencent.angel.model.output.format;\n \n import org.codehaus.jettison.json.JSONException;\n import org.codehaus.jettison.json.JSONObject;\n-\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -27,26 +26,27 @@ import java.io.IOException;\n /**\n  * The meta data for row split\n  */\n+\n public class RowPartitionMeta {\n   /**\n    * Row id\n    */\n-  private int rowId;\n+    private int rowId;\n \n   /**\n    * The offset for data file for this row split\n    */\n-  private long offset;\n+    private long offset;\n \n   /**\n    * The element number for this row split\n    */\n-  private int elementNum;\n+    private int elementNum;\n \n   /**\n    * Save type: 0 dense, 1 sparse. just for SnapshotFormat now\n    */\n-  private int saveType;\n+    private int saveType;\n \n   /**\n    * Create meta for row split\n@@ -56,12 +56,13 @@ public class RowPartitionMeta {\n    * @param elementNum save element number\n    * @param saveType   save type : 0 dense, 1 sparse\n    */\n-  public RowPartitionMeta(int rowId, long offset, int elementNum, int saveType) {\n+\n+    public RowPartitionMeta(int rowId, long offset, int elementNum, int saveType) {\n     this.rowId = rowId;\n     this.offset = offset;\n     this.elementNum = elementNum;\n     this.saveType = saveType;\n-  }\n+    }\n \n   /**\n    * Create meta for row split\n@@ -70,9 +71,10 @@ public class RowPartitionMeta {\n    * @param offset     data offset in the saved file\n    * @param elementNum save element number\n    */\n-  public RowPartitionMeta(int rowId, long offset, int elementNum) {\n+\n+    public RowPartitionMeta(int rowId, long offset, int elementNum) {\n     this(rowId, offset, elementNum, 0);\n-  }\n+    }\n \n   /**\n    * Write row split meta to output stream use binary format\n@@ -80,12 +82,13 @@ public class RowPartitionMeta {\n    * @param output output stream\n    * @throws IOException\n    */\n-  public void write(DataOutputStream output) throws IOException {\n+\n+    public void write(DataOutputStream output) throws IOException {\n     output.writeInt(rowId);\n     output.writeLong(offset);\n     output.writeInt(elementNum);\n     output.writeInt(saveType);\n-  }\n+    }\n \n   /**\n    * Read row split meta from input stream use binary format\n@@ -93,12 +96,13 @@ public class RowPartitionMeta {\n    * @param input input stream\n    * @throws IOException\n    */\n-  public void read(DataInputStream input) throws IOException {\n+\n+    public void read(DataInputStream input) throws IOException {\n     rowId = input.readInt();\n     offset = input.readLong();\n     elementNum = input.readInt();\n     saveType = input.readInt();\n-  }\n+    }\n \n   /**\n    * Write row split meta to a Json object\n@@ -107,12 +111,13 @@ public class RowPartitionMeta {\n    * @throws IOException\n    * @throws JSONException\n    */\n-  public void write(JSONObject rowJsonObject) throws IOException, JSONException {\n+\n+    public void write(JSONObject rowJsonObject) throws IOException, JSONException {\n     rowJsonObject.put(\"rowId\", rowId);\n     rowJsonObject.put(\"offset\", offset);\n     rowJsonObject.put(\"elementNum\", elementNum);\n     rowJsonObject.put(\"saveType\", saveType);\n-  }\n+    }\n \n   /**\n    * Read row split meta from a Json object\n@@ -121,88 +126,97 @@ public class RowPartitionMeta {\n    * @throws IOException\n    * @throws JSONException\n    */\n-  public void read(JSONObject jsonObject) throws IOException, JSONException {\n+\n+    public void read(JSONObject jsonObject) throws IOException, JSONException {\n     rowId = jsonObject.getInt(\"rowId\");\n     offset = jsonObject.getInt(\"offset\");\n     elementNum = jsonObject.getInt(\"elementNum\");\n     saveType = jsonObject.getInt(\"saveType\");\n-  }\n+    }\n \n   /**\n    * Get the row id for the row split\n    *\n    * @return row id\n    */\n-  public int getRowId() {\n+\n+    public int getRowId() {\n     return rowId;\n-  }\n+    }\n \n   /**\n    * Set the row id for the row split\n    *\n    * @param rowId row id\n    */\n-  public void setRowId(int rowId) {\n+\n+    public void setRowId(int rowId) {\n     this.rowId = rowId;\n-  }\n+    }\n \n   /**\n    * Get the data offset in the saved file for this row split\n    *\n    * @return the data offset in the saved file for this row split\n    */\n-  public long getOffset() {\n+\n+    public long getOffset() {\n     return offset;\n-  }\n+    }\n \n   /**\n    * Set the data offset in the saved file for this row split\n    *\n    * @param offset the data offset in the saved file for this row split\n    */\n-  public void setOffset(long offset) {\n+\n+    public void setOffset(long offset) {\n     this.offset = offset;\n-  }\n+    }\n \n   /**\n    * Get save element number\n    *\n    * @return save element number\n    */\n-  public int getElementNum() {\n+\n+    public int getElementNum() {\n     return elementNum;\n-  }\n+    }\n \n   /**\n    * Set save element number\n    *\n    * @param elementNum save element number\n    */\n-  public void setElementNum(int elementNum) {\n+\n+    public void setElementNum(int elementNum) {\n     this.elementNum = elementNum;\n-  }\n+    }\n \n   /**\n    * Get save type\n    *\n    * @return save type\n    */\n-  public int getSaveType() {\n+\n+    public int getSaveType() {\n     return saveType;\n-  }\n+    }\n \n   /**\n    * Set save type\n    *\n    * @param saveType save type\n    */\n-  public void setSaveType(int saveType) {\n+\n+    public void setSaveType(int saveType) {\n     this.saveType = saveType;\n-  }\n+    }\n \n+    @Override\n+    public String toString() {\n+    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\" + elementNum + '}';\n+    }\n \n-  @Override public String toString() {\n-    return \"RowPartitionMeta{\" + \"rowId=\" + rowId + \", offset=\" + offset + \", elementNum=\"\n-      + elementNum + '}';\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 57
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}