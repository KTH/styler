{
    "error_id": "51",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.domain;\n\nimport static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/51/BaseFactory.java\nindex 3e0bd03b39..28b6ee77d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/51/BaseFactory.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/51/BaseFactory.java\nindex 3e0bd03b39..28b6ee77d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/51/BaseFactory.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/51/BaseFactory.java\nindex 3e0bd03b39..aa06b40bcc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/51/BaseFactory.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n@@ -28,6 +29,7 @@ import org.seedstack.business.internal.utils.MethodMatcher;\n  * @see Factory\n  */\n public abstract class BaseFactory<P extends Producible> implements Factory<P> {\n+\n     private final Class<P> producedClass;\n \n     /**\n@@ -73,4 +75,4 @@ public abstract class BaseFactory<P extends Producible> implements Factory<P> {\n                     .put(\"parameters\", Arrays.toString(args));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/51/BaseFactory.java\nindex 3e0bd03b39..c7d6711a88 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/51/BaseFactory.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.domain;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n-\n import java.lang.reflect.Constructor;\n import java.util.Arrays;\n import org.seedstack.business.internal.BusinessErrorCode;\n@@ -27,15 +26,18 @@ import org.seedstack.business.internal.utils.MethodMatcher;\n  * @param <P> Type of the produced object.\n  * @see Factory\n  */\n+\n+\n public abstract class BaseFactory<P extends Producible> implements Factory<P> {\n+\n     private final Class<P> producedClass;\n \n     /**\n      * Creates a base domain factory. Actual class produced by the factory is determined by\n      * reflection.\n      */\n-    @SuppressWarnings(\"unchecked\")\n-    protected BaseFactory() {\n+\n+    @SuppressWarnings(\"unchecked\") protected BaseFactory() {\n         this.producedClass = (Class<P>) BusinessUtils.resolveGenerics(Factory.class, getClass())[0];\n     }\n \n@@ -45,6 +47,8 @@ public abstract class BaseFactory<P extends Producible> implements Factory<P> {\n      *\n      * @param producedClass the produced class.\n      */\n+\n+\n     protected BaseFactory(Class<P> producedClass) {\n         this.producedClass = producedClass;\n     }\n@@ -57,20 +61,20 @@ public abstract class BaseFactory<P extends Producible> implements Factory<P> {\n     @Override\n     public P create(Object... args) {\n         Class<P> effectivelyProducedClass = getProducedClass();\n+\n         Constructor<P> constructor = MethodMatcher.findMatchingConstructor(effectivelyProducedClass, args);\n         if (constructor == null) {\n-            throw BusinessException.createNew(BusinessErrorCode.DOMAIN_OBJECT_CONSTRUCTOR_NOT_FOUND)\n-                    .put(\"domainObject\", effectivelyProducedClass)\n-                    .put(\"parameters\", Arrays.toString(args));\n+            throw BusinessException.createNew(BusinessErrorCode.DOMAIN_OBJECT_CONSTRUCTOR_NOT_FOUND).put(\"domainObject\", effectivelyProducedClass)\n+.put(\"parameters\", Arrays.toString(args));\n         }\n-\n         try {\n             return makeAccessible(constructor).newInstance(args);\n-        } catch (Exception e) {\n-            throw BusinessException.wrap(e, BusinessErrorCode.UNABLE_TO_INVOKE_CONSTRUCTOR)\n-                    .put(\"constructor\", constructor)\n-                    .put(\"domainObject\", effectivelyProducedClass)\n-                    .put(\"parameters\", Arrays.toString(args));\n+        }\n+\n+catch(Exception e) {\n+            throw BusinessException.wrap(e, BusinessErrorCode.UNABLE_TO_INVOKE_CONSTRUCTOR).put(\"constructor\", constructor)\n+.put(\"domainObject\", effectivelyProducedClass)\n+.put(\"parameters\", Arrays.toString(args));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/51/BaseFactory.java\nindex 3e0bd03b39..28b6ee77d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/51/BaseFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/51/BaseFactory.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import static org.seedstack.shed.reflect.ReflectUtils.makeAccessible;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}