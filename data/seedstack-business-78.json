{
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.util.inmemory;\n\nimport java.util.Iterator;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/78/BaseInMemoryRepository.java\nindex a533d94d8f..b1cd92ef3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/78/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/78/BaseInMemoryRepository.java\nindex a533d94d8f..01f53be5be 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/78/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n@@ -44,10 +45,8 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n      * Creates a base in-memory repository. Actual classes managed by the repository\n      * are specified explicitly.\n      *\n-     * @param aggregateRootClass\n-     *            the actual aggregate root class.\n-     * @param idClass\n-     *            the actual aggregate identifier class.\n+     * @param aggregateRootClass the actual aggregate root class.\n+     * @param idClass            the actual aggregate identifier class.\n      */\n     protected BaseInMemoryRepository(Class<A> aggregateRootClass, Class<I> idClass) {\n         super(aggregateRootClass, idClass);\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/78/BaseInMemoryRepository.java\nindex a533d94d8f..bb35e4405a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/78/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n@@ -33,7 +34,7 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n     private final Map<I, A> bucket = (Map<I, A>) buckets.computeIfAbsent(getAggregateRootClass(),\n             key -> new ConcurrentHashMap<I, A>());\n \n-    /**\n+/**\n      * Creates a base in-memory repository. Actual classes managed by the repository\n      * are determined by reflection.\n      */\n@@ -92,4 +93,4 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n         }\n         return count;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "column": "46",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "column": "102",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "column": "20",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'while' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/78/BaseInMemoryRepository.java\nindex a533d94d8f..dceeec9f5e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/78/BaseInMemoryRepository.java\n@@ -27,16 +27,20 @@ import org.seedstack.business.specification.Specification;\n  * insertion order is NOT guaranteed to be maintained through the repository\n  * lifecycle.\n  */\n-public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> extends BaseRepository<A, I> {\n+\n+\n+public abstract class BaseInMemoryRepository <A extends AggregateRoot<I>, I> extends BaseRepository<A, I> {\n+\n     private static final ConcurrentMap<Class<?>, Map<?, ?>> buckets = new ConcurrentHashMap<>();\n     @SuppressWarnings(\"unchecked\")\n-    private final Map<I, A> bucket = (Map<I, A>) buckets.computeIfAbsent(getAggregateRootClass(),\n-            key -> new ConcurrentHashMap<I, A>());\n+    private final Map<I, A> bucket = (Map<I, A>) buckets.computeIfAbsent(getAggregateRootClass(), key-> new ConcurrentHashMap<I, A>());\n \n     /**\n      * Creates a base in-memory repository. Actual classes managed by the repository\n      * are determined by reflection.\n      */\n+\n+\n     protected BaseInMemoryRepository() {\n     }\n \n@@ -49,6 +53,8 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n      * @param idClass\n      *            the actual aggregate identifier class.\n      */\n+\n+\n     protected BaseInMemoryRepository(Class<A> aggregateRootClass, Class<I> idClass) {\n         super(aggregateRootClass, idClass);\n     }\n@@ -63,27 +69,25 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n \n     @Override\n     public Stream<A> get(Specification<A> specification, Option... options) {\n-        Stream<A> stream = bucket.values()\n-                .stream()\n-                .filter(specification.asPredicate());\n-        for (Option option : options) {\n+        Stream<A> stream = bucket.values().stream()\n+.filter(specification.asPredicate());\n+        for(Option option : options) {\n             if (option instanceof OffsetOption) {\n                 stream = stream.skip(((OffsetOption) option).getOffset());\n-            } else if (option instanceof LimitOption) {\n-                stream = stream.limit(((LimitOption) option).getLimit());\n-            } else if (option instanceof SortOption) {\n-                stream = stream.sorted(((SortOption) option).buildComparator());\n-            }\n+            } else if(option instanceof LimitOption) {\n+                       stream = stream.limit(((LimitOption) option).getLimit());\n+                   } else if (option instanceof SortOption) {\n+                              stream = stream.sorted(((SortOption) option).buildComparator());\n+                          }\n         }\n         return stream;\n     }\n \n     @Override\n     public long remove(Specification<A> specification) {\n-        Iterator<Map.Entry<I, A>> iterator = bucket.entrySet()\n-                .iterator();\n+        Iterator<Map.Entry<I, A>> iterator = bucket.entrySet().iterator();\n         int count = 0;\n-        while (iterator.hasNext()) {\n+        while(iterator.hasNext()) {\n             Map.Entry<I, A> next = iterator.next();\n             if (specification.isSatisfiedBy(next.getValue())) {\n                 iterator.remove();\n@@ -92,4 +96,4 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n         }\n         return count;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/78/BaseInMemoryRepository.java\nindex a533d94d8f..b1cd92ef3b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/78/BaseInMemoryRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/78/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}