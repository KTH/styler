{
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 131).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    Calendar cal = Calendar.getInstance();\n    cal.set(1970, Calendar.JULY, 4);\n    OrderReviewRequest request = CrdRequestCreator.createOrderReviewRequest(Enumerations.AdministrativeGender.MALE, cal.getTime());\n    ObjectMapper mapper = new ObjectMapper();\n    ObjectWriter w = mapper.writer();\n    String outputPath = args[0];",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/25/RequestWriter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/25/RequestWriter.java\nindex b1eef06b36..58839cb41a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/25/RequestWriter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/25/RequestWriter.java\n@@ -13,20 +13,22 @@ import java.util.Calendar;\n \n /**\n  * Small application that will write out a sample CRD request in JSON and XML.\n- *\n+ * <p>\n  * The first argument to the application is the desired directory to write the files into. If one is not provided,\n  * the application will use the current working directory.\n  */\n public class RequestWriter {\n   /**\n    * Main method for the application.\n+   *\n    * @param args command line arguments\n    * @throws Exception If there is an issue writing the file\n    */\n   public static void main(String[] args) throws Exception {\n     Calendar cal = Calendar.getInstance();\n     cal.set(1970, Calendar.JULY, 4);\n-    OrderReviewRequest request = CrdRequestCreator.createOrderReviewRequest(Enumerations.AdministrativeGender.MALE, cal.getTime());\n+    OrderReviewRequest request =\n+        CrdRequestCreator.createOrderReviewRequest(Enumerations.AdministrativeGender.MALE, cal.getTime());\n     ObjectMapper mapper = new ObjectMapper();\n     ObjectWriter w = mapper.writer();\n     String outputPath = args[0];\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/25/RequestWriter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/25/RequestWriter.java\nindex b1eef06b36..94eb4af2c3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/25/RequestWriter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/25/RequestWriter.java\n@@ -37,4 +37,4 @@ public class RequestWriter {\n     w.writeValue(jsonWriter, request);\n     jsonWriter.close();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/25/RequestWriter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/25/RequestWriter.java\nindex b1eef06b36..e30ce11f37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/25/RequestWriter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/25/RequestWriter.java\n@@ -5,8 +5,6 @@ import com.fasterxml.jackson.databind.ObjectWriter;\n import org.hl7.davinci.CrdRequestCreator;\n import org.hl7.davinci.cdshooks.orderreview.OrderReviewRequest;\n import org.hl7.fhir.r4.model.Enumerations;\n-\n-\n import java.io.FileWriter;\n import java.nio.file.Paths;\n import java.util.Calendar;\n@@ -17,13 +15,17 @@ import java.util.Calendar;\n  * The first argument to the application is the desired directory to write the files into. If one is not provided,\n  * the application will use the current working directory.\n  */\n+\n+\n public class RequestWriter {\n   /**\n    * Main method for the application.\n    * @param args command line arguments\n    * @throws Exception If there is an issue writing the file\n    */\n-  public static void main(String[] args) throws Exception {\n+\n+\n+    public static void main(String[] args) throws Exception {\n     Calendar cal = Calendar.getInstance();\n     cal.set(1970, Calendar.JULY, 4);\n     OrderReviewRequest request = CrdRequestCreator.createOrderReviewRequest(Enumerations.AdministrativeGender.MALE, cal.getTime());\n@@ -31,10 +33,12 @@ public class RequestWriter {\n     ObjectWriter w = mapper.writer();\n     String outputPath = args[0];\n     if (outputPath == null) {\n-      outputPath = Paths.get(\".\").toAbsolutePath().normalize().toString();\n+        outputPath = Paths.get(\".\").toAbsolutePath().normalize().toString();\n     }\n+\n+\n     FileWriter jsonWriter = new FileWriter(outputPath + \"/crd_request.json\");\n     w.writeValue(jsonWriter, request);\n     jsonWriter.close();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}