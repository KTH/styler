{
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    protected void encodeStage(final BsonWriter writer, final GraphLookup value, final EncoderContext encoderContext) {\n        writer.writeStartDocument();\n        if(value.getFrom() != null) {\n            writeNamedValue(writer, \"from\", value.getFrom(), encoderContext);\n        } else {\n            MongoCollection collection = getMapper().getCollection(value.getFromType());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/16/GraphLookupCodec.java\nindex d6df26dc32..b560cf075d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/16/GraphLookupCodec.java\n@@ -23,7 +23,7 @@ public class GraphLookupCodec extends StageCodec<GraphLookup> {\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final GraphLookup value, final EncoderContext encoderContext) {\n         writer.writeStartDocument();\n-        if(value.getFrom() != null) {\n+        if (value.getFrom() != null) {\n             writeNamedValue(writer, \"from\", value.getFrom(), encoderContext);\n         } else {\n             MongoCollection collection = getMapper().getCollection(value.getFromType());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/16/GraphLookupCodec.java\nindex d6df26dc32..b560cf075d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/16/GraphLookupCodec.java\n@@ -23,7 +23,7 @@ public class GraphLookupCodec extends StageCodec<GraphLookup> {\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final GraphLookup value, final EncoderContext encoderContext) {\n         writer.writeStartDocument();\n-        if(value.getFrom() != null) {\n+        if (value.getFrom() != null) {\n             writeNamedValue(writer, \"from\", value.getFrom(), encoderContext);\n         } else {\n             MongoCollection collection = getMapper().getCollection(value.getFromType());\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/16/GraphLookupCodec.java\nindex d6df26dc32..455e6cbcf2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/16/GraphLookupCodec.java\n@@ -23,7 +23,7 @@ public class GraphLookupCodec extends StageCodec<GraphLookup> {\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final GraphLookup value, final EncoderContext encoderContext) {\n         writer.writeStartDocument();\n-        if(value.getFrom() != null) {\n+        if (value.getFrom() != null) {\n             writeNamedValue(writer, \"from\", value.getFrom(), encoderContext);\n         } else {\n             MongoCollection collection = getMapper().getCollection(value.getFromType());\n@@ -46,4 +46,4 @@ public class GraphLookupCodec extends StageCodec<GraphLookup> {\n \n         writer.writeEndDocument();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/16/GraphLookupCodec.java\nindex d6df26dc32..b560cf075d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/16/GraphLookupCodec.java\n@@ -23,7 +23,7 @@ public class GraphLookupCodec extends StageCodec<GraphLookup> {\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final GraphLookup value, final EncoderContext encoderContext) {\n         writer.writeStartDocument();\n-        if(value.getFrom() != null) {\n+        if (value.getFrom() != null) {\n             writeNamedValue(writer, \"from\", value.getFrom(), encoderContext);\n         } else {\n             MongoCollection collection = getMapper().getCollection(value.getFromType());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/16/GraphLookupCodec.java\nindex d6df26dc32..bd168cf0a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/16/GraphLookupCodec.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/16/GraphLookupCodec.java\n@@ -23,7 +23,9 @@ public class GraphLookupCodec extends StageCodec<GraphLookup> {\n     @SuppressWarnings(\"unchecked\")\n     protected void encodeStage(final BsonWriter writer, final GraphLookup value, final EncoderContext encoderContext) {\n         writer.writeStartDocument();\n-        if(value.getFrom() != null) {\n+\n+\n+        if (value.getFrom() != null) {\n             writeNamedValue(writer, \"from\", value.getFrom(), encoderContext);\n         } else {\n             MongoCollection collection = getMapper().getCollection(value.getFromType());\n",
            "diff_size": 3
        }
    ]
}