{
    "error_id": "309",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/309/Operation.java\nindex 0ec8c7caf0..053d0e24ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/309/Operation.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/309/Operation.java\nindex 0ec8c7caf0..d4479d2c3f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/309/Operation.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -20,68 +21,68 @@ import java.util.List;\n \n public class Operation extends BaseElement {\n \n-  protected String name;\n-  protected String implementationRef;\n-  protected String inMessageRef;\n-  protected String outMessageRef;\n-  protected List<String> errorMessageRef = new ArrayList<String>();\n-\n-  public String getName() {\n-    return name;\n-  }\n-\n-  public void setName(String name) {\n-    this.name = name;\n-  }\n-\n-  public String getImplementationRef() {\n-    return implementationRef;\n-  }\n-\n-  public void setImplementationRef(String implementationRef) {\n-    this.implementationRef = implementationRef;\n-  }\n-\n-  public String getInMessageRef() {\n-    return inMessageRef;\n-  }\n-\n-  public void setInMessageRef(String inMessageRef) {\n-    this.inMessageRef = inMessageRef;\n-  }\n-\n-  public String getOutMessageRef() {\n-    return outMessageRef;\n-  }\n-\n-  public void setOutMessageRef(String outMessageRef) {\n-    this.outMessageRef = outMessageRef;\n-  }\n-\n-  public List<String> getErrorMessageRef() {\n-    return errorMessageRef;\n-  }\n-\n-  public void setErrorMessageRef(List<String> errorMessageRef) {\n-    this.errorMessageRef = errorMessageRef;\n-  }\n-\n-  public Operation clone() {\n-    Operation clone = new Operation();\n-    clone.setValues(this);\n-    return clone;\n-  }\n-\n-  public void setValues(Operation otherElement) {\n-    super.setValues(otherElement);\n-    setName(otherElement.getName());\n-    setImplementationRef(otherElement.getImplementationRef());\n-    setInMessageRef(otherElement.getInMessageRef());\n-    setOutMessageRef(otherElement.getOutMessageRef());\n-\n-    errorMessageRef = new ArrayList<String>();\n-    if (otherElement.getErrorMessageRef() != null && !otherElement.getErrorMessageRef().isEmpty()) {\n-      errorMessageRef.addAll(otherElement.getErrorMessageRef());\n+    protected String name;\n+    protected String implementationRef;\n+    protected String inMessageRef;\n+    protected String outMessageRef;\n+    protected List<String> errorMessageRef = new ArrayList<String>();\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getImplementationRef() {\n+        return implementationRef;\n+    }\n+\n+    public void setImplementationRef(String implementationRef) {\n+        this.implementationRef = implementationRef;\n+    }\n+\n+    public String getInMessageRef() {\n+        return inMessageRef;\n+    }\n+\n+    public void setInMessageRef(String inMessageRef) {\n+        this.inMessageRef = inMessageRef;\n+    }\n+\n+    public String getOutMessageRef() {\n+        return outMessageRef;\n+    }\n+\n+    public void setOutMessageRef(String outMessageRef) {\n+        this.outMessageRef = outMessageRef;\n+    }\n+\n+    public List<String> getErrorMessageRef() {\n+        return errorMessageRef;\n+    }\n+\n+    public void setErrorMessageRef(List<String> errorMessageRef) {\n+        this.errorMessageRef = errorMessageRef;\n+    }\n+\n+    public Operation clone() {\n+        Operation clone = new Operation();\n+        clone.setValues(this);\n+        return clone;\n+    }\n+\n+    public void setValues(Operation otherElement) {\n+        super.setValues(otherElement);\n+        setName(otherElement.getName());\n+        setImplementationRef(otherElement.getImplementationRef());\n+        setInMessageRef(otherElement.getInMessageRef());\n+        setOutMessageRef(otherElement.getOutMessageRef());\n+\n+        errorMessageRef = new ArrayList<String>();\n+        if (otherElement.getErrorMessageRef() != null && !otherElement.getErrorMessageRef().isEmpty()) {\n+            errorMessageRef.addAll(otherElement.getErrorMessageRef());\n+        }\n     }\n-  }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/309/Operation.java\nindex 0ec8c7caf0..fb00e93cd7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/309/Operation.java\n@@ -18,70 +18,69 @@ package org.activiti.bpmn.model;\n import java.util.ArrayList;\n import java.util.List;\n \n-public class Operation extends BaseElement {\n \n-  protected String name;\n-  protected String implementationRef;\n-  protected String inMessageRef;\n-  protected String outMessageRef;\n-  protected List<String> errorMessageRef = new ArrayList<String>();\n+public class Operation extends BaseElement {\n \n-  public String getName() {\n+    protected String name;\n+    protected String implementationRef;\n+    protected String inMessageRef;\n+    protected String outMessageRef;\n+    protected List<String> errorMessageRef = new ArrayList<String>();\n+    public String getName() {\n     return name;\n-  }\n+    }\n \n-  public void setName(String name) {\n+    public void setName(String name) {\n     this.name = name;\n-  }\n+    }\n \n-  public String getImplementationRef() {\n+    public String getImplementationRef() {\n     return implementationRef;\n-  }\n+    }\n \n-  public void setImplementationRef(String implementationRef) {\n+    public void setImplementationRef(String implementationRef) {\n     this.implementationRef = implementationRef;\n-  }\n+    }\n \n-  public String getInMessageRef() {\n+    public String getInMessageRef() {\n     return inMessageRef;\n-  }\n+    }\n \n-  public void setInMessageRef(String inMessageRef) {\n+    public void setInMessageRef(String inMessageRef) {\n     this.inMessageRef = inMessageRef;\n-  }\n+    }\n \n-  public String getOutMessageRef() {\n+    public String getOutMessageRef() {\n     return outMessageRef;\n-  }\n+    }\n \n-  public void setOutMessageRef(String outMessageRef) {\n+    public void setOutMessageRef(String outMessageRef) {\n     this.outMessageRef = outMessageRef;\n-  }\n+    }\n \n-  public List<String> getErrorMessageRef() {\n+    public List<String> getErrorMessageRef() {\n     return errorMessageRef;\n-  }\n+    }\n \n-  public void setErrorMessageRef(List<String> errorMessageRef) {\n+    public void setErrorMessageRef(List<String> errorMessageRef) {\n     this.errorMessageRef = errorMessageRef;\n-  }\n+    }\n \n-  public Operation clone() {\n+    public Operation clone() {\n     Operation clone = new Operation();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(Operation otherElement) {\n+    public void setValues(Operation otherElement) {\n     super.setValues(otherElement);\n     setName(otherElement.getName());\n     setImplementationRef(otherElement.getImplementationRef());\n     setInMessageRef(otherElement.getInMessageRef());\n     setOutMessageRef(otherElement.getOutMessageRef());\n-\n     errorMessageRef = new ArrayList<String>();\n     if (otherElement.getErrorMessageRef() != null && !otherElement.getErrorMessageRef().isEmpty()) {\n-      errorMessageRef.addAll(otherElement.getErrorMessageRef());\n+        errorMessageRef.addAll(otherElement.getErrorMessageRef());\n+    }\n     }\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/309/Operation.java\nindex 0ec8c7caf0..053d0e24ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/309/Operation.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/309/Operation.java\nindex 0ec8c7caf0..053d0e24ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/309/Operation.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/309/Operation.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ]
}