{
    "error_id": "105",
    "information": {
        "errors": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                             UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                             double minimumSamplingInterval, boolean historizing) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n    }\n\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 33, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler/105/BuildInfoTypeNode.java\nindex b5fac14130..c217be42cb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler/105/BuildInfoTypeNode.java\n@@ -36,7 +36,7 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n                              UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                              UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                              double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+                                 super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n \n     @Override\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/105/BuildInfoTypeNode.java\nindex b5fac14130..3d8265e561 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/intellij/105/BuildInfoTypeNode.java\n@@ -36,7 +36,8 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n                              UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                              UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                              double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType,\n+            valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n \n     @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/105/BuildInfoTypeNode.java\nindex b5fac14130..d1ad36617c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/naturalize/105/BuildInfoTypeNode.java\n@@ -140,4 +140,4 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n     public void setBuildDate(DateTime value) {\n         getVariableComponent(\"BuildDate\").ifPresent(n -> n.setValue(new DataValue(new Variant(value))));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/105/BuildInfoTypeNode.java\nindex b5fac14130..0baa669375 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/codebuff/105/BuildInfoTypeNode.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.server.model.nodes.variables;\n \n import java.util.Optional;\n-\n import org.eclipse.milo.opcua.sdk.server.api.nodes.VariableNode;\n import org.eclipse.milo.opcua.sdk.server.model.types.variables.BuildInfoType;\n import org.eclipse.milo.opcua.sdk.server.nodes.UaNodeContext;\n@@ -25,30 +24,62 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n \n public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements BuildInfoType {\n-    public BuildInfoTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                             LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                             UInteger userWriteMask) {\n+    public BuildInfoTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask, UInteger userWriteMask) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n     }\n \n-    public BuildInfoTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                             LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                             UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n-                             UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n-                             double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+    public BuildInfoTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask,\n+        UInteger userWriteMask,\n+        DataValue value,\n+        NodeId dataType,\n+        Integer valueRank,\n+        UInteger[] arrayDimensions,\n+        UByte accessLevel,\n+        UByte userAccessLevel,\n+        double minimumSamplingInterval,\n+        boolean historizing) {\n+        super(context,\n+nodeId,\n+browseName,\n+displayName,\n+description,\n+writeMask,\n+userWriteMask,\n+value,\n+dataType,\n+valueRank,\n+arrayDimensions,\n+accessLevel,\n+userAccessLevel,\n+minimumSamplingInterval,\n+historizing);\n     }\n \n     @Override\n     public BaseDataVariableTypeNode getProductUriNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"ProductUri\");\n+\n         return (BaseDataVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public String getProductUri() {\n         Optional<VariableNode> component = getVariableComponent(\"ProductUri\");\n-        return component.map(node -> (String) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (String) node.getValue().getValue()\n+                                                             .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -59,13 +90,16 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n     @Override\n     public BaseDataVariableTypeNode getManufacturerNameNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"ManufacturerName\");\n+\n         return (BaseDataVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public String getManufacturerName() {\n         Optional<VariableNode> component = getVariableComponent(\"ManufacturerName\");\n-        return component.map(node -> (String) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (String) node.getValue().getValue()\n+                                                             .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -76,13 +110,16 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n     @Override\n     public BaseDataVariableTypeNode getProductNameNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"ProductName\");\n+\n         return (BaseDataVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public String getProductName() {\n         Optional<VariableNode> component = getVariableComponent(\"ProductName\");\n-        return component.map(node -> (String) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (String) node.getValue().getValue()\n+                                                             .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -93,13 +130,16 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n     @Override\n     public BaseDataVariableTypeNode getSoftwareVersionNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"SoftwareVersion\");\n+\n         return (BaseDataVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public String getSoftwareVersion() {\n         Optional<VariableNode> component = getVariableComponent(\"SoftwareVersion\");\n-        return component.map(node -> (String) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (String) node.getValue().getValue()\n+                                                             .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -110,13 +150,16 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n     @Override\n     public BaseDataVariableTypeNode getBuildNumberNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"BuildNumber\");\n+\n         return (BaseDataVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public String getBuildNumber() {\n         Optional<VariableNode> component = getVariableComponent(\"BuildNumber\");\n-        return component.map(node -> (String) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (String) node.getValue().getValue()\n+                                                             .getValue()).orElse(null);\n     }\n \n     @Override\n@@ -127,17 +170,21 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n     @Override\n     public BaseDataVariableTypeNode getBuildDateNode() {\n         Optional<VariableNode> component = getVariableComponent(\"http://opcfoundation.org/UA/\", \"BuildDate\");\n+\n         return (BaseDataVariableTypeNode) component.orElse(null);\n     }\n \n     @Override\n     public DateTime getBuildDate() {\n         Optional<VariableNode> component = getVariableComponent(\"BuildDate\");\n-        return component.map(node -> (DateTime) node.getValue().getValue().getValue()).orElse(null);\n+\n+        return component.map(node -> (DateTime) node.getValue().getValue()\n+                                                               .getValue()).orElse(null);\n     }\n \n     @Override\n     public void setBuildDate(DateTime value) {\n         getVariableComponent(\"BuildDate\").ifPresent(n -> n.setValue(new DataValue(new Variant(value))));\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 65
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "column": "86",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "column": "26",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "41",
                    "column": "26",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_random/105/BuildInfoTypeNode.java\nindex b5fac14130..da919caeb8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_random/105/BuildInfoTypeNode.java\n@@ -36,7 +36,9 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n                              UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                              UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                              double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask,value\n+\n+                         ,dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n \n     @Override\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 33, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_three_grams/105/BuildInfoTypeNode.java\nindex b5fac14130..c217be42cb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/errored/1/105/BuildInfoTypeNode.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/eclipse-milo/styler_three_grams/105/BuildInfoTypeNode.java\n@@ -36,7 +36,7 @@ public class BuildInfoTypeNode extends BaseDataVariableTypeNode implements Build\n                              UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                              UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                              double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+                                 super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n \n     @Override\n",
            "diff_size": 1
        }
    ]
}