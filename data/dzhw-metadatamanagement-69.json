{
    "error_id": "69",
    "information": {
        "errors": [
            {
                "line": "23",
                "column": "72",
                "severity": "error",
                "message": "'}' at column 72 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidQuestionImageType constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "column": "72",
                    "severity": "error",
                    "message": "'}' at column 72 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/69/ValidQuestionImageTypeValidator.java\nindex 4fc728bbd7..d85b30ece5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/69/ValidQuestionImageTypeValidator.java\n@@ -12,7 +12,7 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidQuestionImageTypeValidator implements \n+public class ValidQuestionImageTypeValidator implements\n     ConstraintValidator<ValidQuestionImageType, ImageType> {\n \n   /*\n@@ -29,7 +29,7 @@ public class ValidQuestionImageTypeValidator implements\n    */\n   @Override\n   public boolean isValid(ImageType imageType, ConstraintValidatorContext context) {\n-        \n+\n     if (imageType == null) {\n       return true;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/69/ValidQuestionImageTypeValidator.java\nindex 4fc728bbd7..14611caa37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/69/ValidQuestionImageTypeValidator.java\n@@ -6,13 +6,12 @@ import javax.validation.ConstraintValidatorContext;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n \n /**\n- * Validator of the question image type. Only the png value from the enum {@link ImageType} is \n+ * Validator of the question image type. Only the png value from the enum {@link ImageType} is\n  * allowed.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n-public class ValidQuestionImageTypeValidator implements \n+public class ValidQuestionImageTypeValidator implements\n     ConstraintValidator<ValidQuestionImageType, ImageType> {\n \n   /*\n@@ -20,16 +19,17 @@ public class ValidQuestionImageTypeValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidQuestionImageType constraintAnnotation) {}\n+  public void initialize(ValidQuestionImageType constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n+   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(ImageType imageType, ConstraintValidatorContext context) {\n-        \n+\n     if (imageType == null) {\n       return true;\n     }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "column": "72",
                    "severity": "error",
                    "message": "'}' at column 72 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/69/ValidQuestionImageTypeValidator.java\nindex 4fc728bbd7..b29a47a687 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/69/ValidQuestionImageTypeValidator.java\n@@ -14,7 +14,6 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n  */\n public class ValidQuestionImageTypeValidator implements \n     ConstraintValidator<ValidQuestionImageType, ImageType> {\n-\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -29,13 +28,12 @@ public class ValidQuestionImageTypeValidator implements\n    */\n   @Override\n   public boolean isValid(ImageType imageType, ConstraintValidatorContext context) {\n-        \n-    if (imageType == null) {\n-      return true;\n+  if (imageType == null) {\n+  return true;\n     }\n \n     // check for scale levels\n     return imageType.equals(ImageType.PNG);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/69/ValidQuestionImageTypeValidator.java\nindex 4fc728bbd7..9dce000aaf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/69/ValidQuestionImageTypeValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n \n /**\n@@ -12,30 +11,36 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidQuestionImageTypeValidator implements \n-    ConstraintValidator<ValidQuestionImageType, ImageType> {\n+\n+\n+public class ValidQuestionImageTypeValidator implements ConstraintValidator<ValidQuestionImageType, ImageType> {\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidQuestionImageType constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidQuestionImageType constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(ImageType imageType, ConstraintValidatorContext context) {\n-        \n+\n+\n+    @Override\n+    public boolean isValid(ImageType imageType,\n+        ConstraintValidatorContext context) {\n     if (imageType == null) {\n-      return true;\n+        return true;\n     }\n \n     // check for scale levels\n-    return imageType.equals(ImageType.PNG);\n-  }\n \n-}\n+    return imageType.equals(ImageType.PNG);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "column": "72",
                    "severity": "error",
                    "message": "'}' at column 72 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/69/ValidQuestionImageTypeValidator.java\nindex 4fc728bbd7..d85b30ece5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/69/ValidQuestionImageTypeValidator.java\n@@ -12,7 +12,7 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidQuestionImageTypeValidator implements \n+public class ValidQuestionImageTypeValidator implements\n     ConstraintValidator<ValidQuestionImageType, ImageType> {\n \n   /*\n@@ -29,7 +29,7 @@ public class ValidQuestionImageTypeValidator implements\n    */\n   @Override\n   public boolean isValid(ImageType imageType, ConstraintValidatorContext context) {\n-        \n+\n     if (imageType == null) {\n       return true;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/69/ValidQuestionImageTypeValidator.java\nindex 4fc728bbd7..705f06e8cb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/69/ValidQuestionImageTypeValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/69/ValidQuestionImageTypeValidator.java\n@@ -12,7 +12,7 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.ImageType;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ValidQuestionImageTypeValidator implements \n+public class ValidQuestionImageTypeValidator implements\n     ConstraintValidator<ValidQuestionImageType, ImageType> {\n \n   /*\n@@ -20,16 +20,15 @@ public class ValidQuestionImageTypeValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidQuestionImageType constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidQuestionImageType constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(ImageType imageType, ConstraintValidatorContext context) {\n-        \n+\n     if (imageType == null) {\n       return true;\n     }\n",
            "diff_size": 5
        }
    ]
}