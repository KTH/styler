{
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 106).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public Optional<Instrument> findPredecessorOfShadowCopy(Instrument shadowCopy, String previousVersion) {\n    String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n    return instrumentRepository.findById(shadowCopyId);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/1/InstrumentShadowCopyDataSource.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/1/InstrumentShadowCopyDataSource.java\nindex bdb12423a8..f8470813e1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/1/InstrumentShadowCopyDataSource.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/1/InstrumentShadowCopyDataSource.java\n@@ -43,7 +43,8 @@ public class InstrumentShadowCopyDataSource implements ShadowCopyDataSource<Inst\n   }\n \n   @Override\n-  public Optional<Instrument> findPredecessorOfShadowCopy(Instrument shadowCopy, String previousVersion) {\n+  public Optional<Instrument> findPredecessorOfShadowCopy(Instrument shadowCopy,\n+                                                          String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return instrumentRepository.findById(shadowCopyId);\n   }\n@@ -60,7 +61,7 @@ public class InstrumentShadowCopyDataSource implements ShadowCopyDataSource<Inst\n \n   @Override\n   public Stream<Instrument> findShadowCopiesWithDeletedMasters(String projectId,\n-      String lastVersion) {\n+                                                               String lastVersion) {\n     String oldProjectId = projectId + \"-\" + lastVersion;\n     return instrumentRepository\n         .streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId)\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/1/InstrumentShadowCopyDataSource.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/1/InstrumentShadowCopyDataSource.java\nindex bdb12423a8..04637bb52c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/1/InstrumentShadowCopyDataSource.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/1/InstrumentShadowCopyDataSource.java\n@@ -71,4 +71,4 @@ public class InstrumentShadowCopyDataSource implements ShadowCopyDataSource<Inst\n     return surveyIds.stream().map(surveyId -> surveyId + \"-\" + version)\n         .collect(Collectors.toList());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/1/InstrumentShadowCopyDataSource.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/1/InstrumentShadowCopyDataSource.java\nindex bdb12423a8..825de2d2c4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/1/InstrumentShadowCopyDataSource.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/1/InstrumentShadowCopyDataSource.java\n@@ -4,10 +4,8 @@ import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Service;\n-\n import eu.dzhw.fdz.metadatamanagement.common.service.ShadowCopyDataSource;\n import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.domain.Instrument;\n import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.repository.InstrumentRepository;\n@@ -15,23 +13,27 @@ import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.repository.Instrument\n /**\n  * Provides data for creating shadow copies of {@link Instrument}.\n  */\n+\n+\n @Service\n public class InstrumentShadowCopyDataSource implements ShadowCopyDataSource<Instrument> {\n \n-  private InstrumentRepository instrumentRepository;\n+    private InstrumentRepository instrumentRepository;\n \n-  public InstrumentShadowCopyDataSource(InstrumentRepository instrumentRepository) {\n+    public InstrumentShadowCopyDataSource(InstrumentRepository instrumentRepository) {\n     this.instrumentRepository = instrumentRepository;\n-  }\n+    }\n+\n \n-  @Override\n-  public Stream<Instrument> getMasters(String dataAcquisitionProjectId) {\n-    return instrumentRepository\n-        .streamByDataAcquisitionProjectIdAndShadowIsFalse(dataAcquisitionProjectId);\n-  }\n+    @Override\n+    public Stream<Instrument> getMasters(String dataAcquisitionProjectId) {\n+    return instrumentRepository.streamByDataAcquisitionProjectIdAndShadowIsFalse(dataAcquisitionProjectId);\n+    }\n \n-  @Override\n-  public Instrument createShadowCopy(Instrument source, String version) {\n+\n+    @Override\n+    public Instrument createShadowCopy(Instrument source,\n+        String version) {\n     String derivedId = source.getId() + \"-\" + version;\n     Instrument copy = instrumentRepository.findById(derivedId).orElseGet(Instrument::new);\n     BeanUtils.copyProperties(source, copy, \"version\");\n@@ -40,35 +42,39 @@ public class InstrumentShadowCopyDataSource implements ShadowCopyDataSource<Inst\n     copy.setStudyId(source.getStudyId() + \"-\" + version);\n     copy.setSurveyIds(createDerivedSurveyIds(source.getSurveyIds(), version));\n     return copy;\n-  }\n+    }\n+\n \n-  @Override\n-  public Optional<Instrument> findPredecessorOfShadowCopy(Instrument shadowCopy, String previousVersion) {\n+    @Override\n+    public Optional<Instrument> findPredecessorOfShadowCopy(Instrument shadowCopy,\n+        String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return instrumentRepository.findById(shadowCopyId);\n-  }\n+    }\n+\n \n-  @Override\n-  public void updatePredecessor(Instrument predecessor) {\n+    @Override\n+    public void updatePredecessor(Instrument predecessor) {\n     instrumentRepository.save(predecessor);\n-  }\n+    }\n \n-  @Override\n-  public void saveShadowCopy(Instrument shadowCopy) {\n+\n+    @Override\n+    public void saveShadowCopy(Instrument shadowCopy) {\n     instrumentRepository.save(shadowCopy);\n-  }\n+    }\n+\n \n-  @Override\n-  public Stream<Instrument> findShadowCopiesWithDeletedMasters(String projectId,\n-      String lastVersion) {\n+    @Override\n+    public Stream<Instrument> findShadowCopiesWithDeletedMasters(String projectId,\n+        String lastVersion) {\n     String oldProjectId = projectId + \"-\" + lastVersion;\n-    return instrumentRepository\n-        .streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId)\n-        .filter(shadowCopy -> !instrumentRepository.existsById(shadowCopy.getMasterId()));\n-  }\n+    return instrumentRepository.streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId).filter(shadowCopy -> !instrumentRepository.existsById(shadowCopy.getMasterId()));\n+    }\n \n-  private static List<String> createDerivedSurveyIds(List<String> surveyIds, String version) {\n+    private static List<String> createDerivedSurveyIds(List<String> surveyIds,\n+        String version) {\n     return surveyIds.stream().map(surveyId -> surveyId + \"-\" + version)\n-        .collect(Collectors.toList());\n-  }\n-}\n+                             .collect(Collectors.toList());\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}