{
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.kafka;\n\nimport java.util.HashMap;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "20",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/24/KafkaConsumer.java\nindex 2eef722ceb..b99563520b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/24/KafkaConsumer.java\n@@ -16,7 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.kafka;\n+\n+package org .apache.iotdb.kafka;\n \n import java.util.HashMap;\n import java.util.List;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/24/KafkaConsumer.java\nindex 2eef722ceb..7ec9084bad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/24/KafkaConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.kafka;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 69.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 27, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 29, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "column": "54",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "column": "22",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "88",
                    "column": "22",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 31, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/24/KafkaConsumer.java\nindex 2eef722ceb..d788e9c720 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/24/KafkaConsumer.java\n@@ -17,7 +17,6 @@\n  * under the License.\n  */\n package org.apache.iotdb.kafka;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -34,51 +33,51 @@ import kafka.utils.VerifiableProperties;\n  * The class is to show how to get data from kafka through multi-threads. The data is sent by class\n  * KafkaProducer.\n  */\n+\n public class KafkaConsumer {\n \n-  private ConsumerConnector consumer;\n \n-  private KafkaConsumer() {\n+    private ConsumerConnector consumer;\n+\n+\n+    private KafkaConsumer() {\n     /**\n      * Consumer configuration\n      */\n-    Properties props = new Properties();\n+Properties props = new Properties();\n \n     /**\n      * Zookeeper configuration\n      */\n-    props.put(\"zookeeper.connect\", \"127.0.0.1:2181\");\n-    props.put(\"group.id\", \"consumeGroup\");\n-    props.put(\"zookeeper.session.timeout.ms\", \"400\");\n-    props.put(\"zookeeper.sync.time.ms\", \"200\");\n-    props.put(\"rebalance.max.retries\", \"5\");\n-    props.put(\"rebalance.backoff.ms\", \"1200\");\n-    props.put(\"auto.commit.interval.ms\", \"1000\");\n+props.put(\"zookeeper.connect\", \"127.0.0.1:2181\");\n+props.put(\"group.id\", \"consumeGroup\");\n+props.put(\"zookeeper.session.timeout.ms\", \"400\");\n+props.put(\"zookeeper.sync.time.ms\", \"200\");\n+props.put(\"rebalance.max.retries\", \"5\");\n+props.put(\"rebalance.backoff.ms\", \"1200\");\n+props.put(\"auto.commit.interval.ms\", \"1000\");\n \n     /**\n      * What to do when there is no initial offset in ZooKeeper or if an offset is out of range\n      * smallest : automatically reset the offset to the smallest offset\n      */\n-    props.put(\"auto.offset.reset\", \"smallest\");\n+props.put(\"auto.offset.reset\", \"smallest\");\n \n     /**\n      * serializer class\n      */\n-    props.put(\"serializer.class\", \"kafka.serializer.StringEncoder\");\n-\n-    ConsumerConfig config = new ConsumerConfig(props);\n-    consumer = kafka.consumer.Consumer.createJavaConsumerConnector(config);\n-  }\n-\n-  public static void main(String[] args) {\n+props.put(\"serializer.class\", \"kafka.serializer.StringEncoder\");\n+ConsumerConfig config = new ConsumerConfig(props);\n+consumer = kafka.consumer.Consumer.createJavaConsumerConnector(config);\n+                           } public static void main(String [] args) {\n     new KafkaConsumer().consume();\n-  }\n+                             }\n \n-  private void consume() {\n+    private void consume() {\n     /**\n      * Specify the number of consumer thread\n      */\n-    Map<String, Integer> topicCountMap = new HashMap<>();\n+    Map<String, Integer> topicCountMap = new HashMap <>();\n     topicCountMap.put(Constant.TOPIC, Constant.CONSUMER_THREAD_NUM);\n \n     /**\n@@ -86,15 +85,12 @@ public class KafkaConsumer {\n      */\n     StringDecoder keyDecoder = new StringDecoder(new VerifiableProperties());\n     StringDecoder valueDecoder = new StringDecoder(new VerifiableProperties());\n-\n-    Map<String, List<KafkaStream<String, String>>> consumerMap = consumer\n-        .createMessageStreams(topicCountMap, keyDecoder,\n-            valueDecoder);\n-\n-    List<KafkaStream<String, String>> streams = consumerMap.get(Constant.TOPIC);\n+    Map<String, List < KafkaStream<String, String>>> consumerMap = consumer.createMessageStreams(topicCountMap, keyDecoder, valueDecoder);\n+    List < KafkaStream<String, String>> streams = consumerMap.get(Constant.TOPIC);\n     ExecutorService executor = Executors.newFixedThreadPool(Constant.CONSUMER_THREAD_NUM);\n-    for (final KafkaStream<String, String> stream : streams) {\n-      executor.submit(new KafkaConsumerThread(stream));\n+    for(final KafkaStream<String, String> stream : streams) {\n+                               executor.submit(new KafkaConsumerThread(stream));\n     }\n-  }\n+    }\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'kafka' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/24/KafkaConsumer.java\nindex 2eef722ceb..981dff61d6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/24/KafkaConsumer.java\n@@ -16,7 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.kafka;\n+package org.apache.iotdb.\n+\n+kafka;\n \n import java.util.HashMap;\n import java.util.List;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "20",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/24/KafkaConsumer.java\nindex 2eef722ceb..b99563520b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/24/KafkaConsumer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/24/KafkaConsumer.java\n@@ -16,7 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.kafka;\n+\n+package org .apache.iotdb.kafka;\n \n import java.util.HashMap;\n import java.util.List;\n",
            "diff_size": 2
        }
    ]
}