{
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 142).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @author Jacobo Coll &lt;jacobo167@gmail.com&gt;\n */\npublic class HadoopVariantStatisticsManagerMultiFilesTest extends VariantStatisticsManagerMultiFilesTest implements HadoopVariantStorageTest {\n\n    @Override\n    public void before() throws Exception {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/53/HadoopVariantStatisticsManagerMultiFilesTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/intellij/53/HadoopVariantStatisticsManagerMultiFilesTest.java\nindex daaa6012c4..2003542d05 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/53/HadoopVariantStatisticsManagerMultiFilesTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/intellij/53/HadoopVariantStatisticsManagerMultiFilesTest.java\n@@ -18,37 +18,38 @@ import java.util.Map;\n  *\n  * @author Jacobo Coll &lt;jacobo167@gmail.com&gt;\n  */\n-public class HadoopVariantStatisticsManagerMultiFilesTest extends VariantStatisticsManagerMultiFilesTest implements HadoopVariantStorageTest {\n-\n-    @Override\n-    public void before() throws Exception {\n-        super.before();\n-        VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n-    }\n-\n-    @After\n-    public void tearDown() throws Exception {\n-        VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n-    }\n-\n-    @Rule\n-    public ExternalResource externalResource = new HadoopVariantStorageTest.HadoopExternalResource();\n-\n-    @Override\n-    public Map<String, ?> getOtherStorageConfigurationOptions() {\n-        return new ObjectMap(HadoopVariantStorageEngineOptions.VARIANT_TABLE_INDEXES_SKIP.key(), true)\n-                .append(VariantStorageEngine.Options.MERGE_MODE.key(), VariantStorageEngine.MergeMode.BASIC)\n-                .append(HadoopVariantStorageEngineOptions.STATS_LOCAL.key(), false)\n-                .append(HadoopVariantStorageEngineOptions.HADOOP_LOAD_BATCH_SIZE.key(), 1);\n-    }\n-\n-    @Test\n-    public void calculateStatsMultiCohortsAfterFillMissingTest() throws Exception {\n-        VariantStorageEngine storageEngine = getVariantStorageEngine();\n-        storageEngine.fillMissing(studyMetadata.getName(), new ObjectMap(), false);\n-        VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n-        calculateStatsMultiCohortsTest();\n-    }\n+public class HadoopVariantStatisticsManagerMultiFilesTest extends VariantStatisticsManagerMultiFilesTest\n+    implements HadoopVariantStorageTest {\n+\n+  @Override\n+  public void before() throws Exception {\n+    super.before();\n+    VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+    VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n+  }\n+\n+  @Rule\n+  public ExternalResource externalResource = new HadoopVariantStorageTest.HadoopExternalResource();\n+\n+  @Override\n+  public Map<String, ?> getOtherStorageConfigurationOptions() {\n+    return new ObjectMap(HadoopVariantStorageEngineOptions.VARIANT_TABLE_INDEXES_SKIP.key(), true)\n+        .append(VariantStorageEngine.Options.MERGE_MODE.key(), VariantStorageEngine.MergeMode.BASIC)\n+        .append(HadoopVariantStorageEngineOptions.STATS_LOCAL.key(), false)\n+        .append(HadoopVariantStorageEngineOptions.HADOOP_LOAD_BATCH_SIZE.key(), 1);\n+  }\n+\n+  @Test\n+  public void calculateStatsMultiCohortsAfterFillMissingTest() throws Exception {\n+    VariantStorageEngine storageEngine = getVariantStorageEngine();\n+    storageEngine.fillMissing(studyMetadata.getName(), new ObjectMap(), false);\n+    VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n+    calculateStatsMultiCohortsTest();\n+  }\n \n \n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/53/HadoopVariantStatisticsManagerMultiFilesTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/naturalize/53/HadoopVariantStatisticsManagerMultiFilesTest.java\nindex daaa6012c4..473d691397 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/53/HadoopVariantStatisticsManagerMultiFilesTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/naturalize/53/HadoopVariantStatisticsManagerMultiFilesTest.java\n@@ -51,4 +51,4 @@ public class HadoopVariantStatisticsManagerMultiFilesTest extends VariantStatist\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/53/HadoopVariantStatisticsManagerMultiFilesTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/styler_random/53/HadoopVariantStatisticsManagerMultiFilesTest.java\nindex daaa6012c4..8b3c5cc3e9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/53/HadoopVariantStatisticsManagerMultiFilesTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/styler_random/53/HadoopVariantStatisticsManagerMultiFilesTest.java\n@@ -18,37 +18,35 @@ import java.util.Map;\n  *\n  * @author Jacobo Coll &lt;jacobo167@gmail.com&gt;\n  */\n-public class HadoopVariantStatisticsManagerMultiFilesTest extends VariantStatisticsManagerMultiFilesTest implements HadoopVariantStorageTest {\n-\n-    @Override\n-    public void before() throws Exception {\n-        super.before();\n-        VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n-    }\n-\n-    @After\n-    public void tearDown() throws Exception {\n-        VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n-    }\n-\n-    @Rule\n-    public ExternalResource externalResource = new HadoopVariantStorageTest.HadoopExternalResource();\n-\n-    @Override\n-    public Map<String, ?> getOtherStorageConfigurationOptions() {\n-        return new ObjectMap(HadoopVariantStorageEngineOptions.VARIANT_TABLE_INDEXES_SKIP.key(), true)\n-                .append(VariantStorageEngine.Options.MERGE_MODE.key(), VariantStorageEngine.MergeMode.BASIC)\n-                .append(HadoopVariantStorageEngineOptions.STATS_LOCAL.key(), false)\n-                .append(HadoopVariantStorageEngineOptions.HADOOP_LOAD_BATCH_SIZE.key(), 1);\n-    }\n-\n-    @Test\n-    public void calculateStatsMultiCohortsAfterFillMissingTest() throws Exception {\n-        VariantStorageEngine storageEngine = getVariantStorageEngine();\n-        storageEngine.fillMissing(studyMetadata.getName(), new ObjectMap(), false);\n-        VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n-        calculateStatsMultiCohortsTest();\n-    }\n+public class HadoopVariantStatisticsManagerMultiFilesTest extends VariantStatisticsManagerMultiFilesTest implements HadoopVariantStorageTest { @Override\n+public void before() throws Exception {\n+    super.before();\n+    VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n+}\n+\n+@After\n+public void tearDown() throws Exception {\n+    VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n+}\n+\n+@Rule\n+public ExternalResource externalResource = new HadoopVariantStorageTest.HadoopExternalResource();\n+\n+@Override\n+public Map<String, ?> getOtherStorageConfigurationOptions() {\n+    return new ObjectMap(HadoopVariantStorageEngineOptions.VARIANT_TABLE_INDEXES_SKIP.key(), true)\n+            .append(VariantStorageEngine.Options.MERGE_MODE.key(), VariantStorageEngine.MergeMode.BASIC)\n+            .append(HadoopVariantStorageEngineOptions.STATS_LOCAL.key(), false)\n+            .append(HadoopVariantStorageEngineOptions.HADOOP_LOAD_BATCH_SIZE.key(), 1);\n+}\n+\n+@Test\n+public void calculateStatsMultiCohortsAfterFillMissingTest() throws Exception {\n+    VariantStorageEngine storageEngine = getVariantStorageEngine();\n+    storageEngine.fillMissing(studyMetadata.getName(), new ObjectMap(), false);\n+    VariantHbaseTestUtils.printVariants(getVariantStorageEngine().getDBAdaptor(), newOutputUri(getTestName().getMethodName()));\n+    calculateStatsMultiCohortsTest();\n+}\n \n \n }\n",
            "diff_size": 31
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}