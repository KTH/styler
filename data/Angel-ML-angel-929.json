{
    "error_id": "929",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/929/PytorchPSFSubmit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/929/PytorchPSFSubmit.java\nindex 3cc5c2839e..71072ca629 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/929/PytorchPSFSubmit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/929/PytorchPSFSubmit.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.example.psf;\n \n import com.tencent.angel.AppSubmitter;\n@@ -27,22 +28,22 @@ import org.apache.hadoop.conf.Configuration;\n \n public class PytorchPSFSubmit implements AppSubmitter {\n \n-  @Override\n-  public void submit(Configuration conf) throws Exception {\n-    conf.setBoolean(AngelConf.ANGEL_AM_USE_DUMMY_DATASPLITER, true);\n+    @Override\n+    public void submit(Configuration conf) throws Exception {\n+        conf.setBoolean(AngelConf.ANGEL_AM_USE_DUMMY_DATASPLITER, true);\n \n-    AngelClient angelClient = AngelClientFactory.get(conf);\n-    long col = conf.getLong(\"col\", 100000000);\n-    long blockCol = conf.getLong(\"blockcol\", -1);\n-    long modelSize = conf.getLong(\"model.size\", 100000000);\n+        AngelClient angelClient = AngelClientFactory.get(conf);\n+        long col = conf.getLong(\"col\", 100000000);\n+        long blockCol = conf.getLong(\"blockcol\", -1);\n+        long modelSize = conf.getLong(\"model.size\", 100000000);\n \n-    MatrixContext context = new MatrixContext(\"psf_test\", 1, col, modelSize, 1, blockCol);\n-    context.setRowType(RowType.T_FLOAT_DENSE);\n-    context.set(MatrixConf.MATRIX_SAVE_PATH, conf.get(\"angel.save.model.path\"));\n-    angelClient.addMatrix(context);\n-    angelClient.startPSServer();\n-    angelClient.run();\n-    angelClient.waitForCompletion();\n-    angelClient.stop(0);\n-  }\n+        MatrixContext context = new MatrixContext(\"psf_test\", 1, col, modelSize, 1, blockCol);\n+        context.setRowType(RowType.T_FLOAT_DENSE);\n+        context.set(MatrixConf.MATRIX_SAVE_PATH, conf.get(\"angel.save.model.path\"));\n+        angelClient.addMatrix(context);\n+        angelClient.startPSServer();\n+        angelClient.run();\n+        angelClient.waitForCompletion();\n+        angelClient.stop(0);\n+    }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/929/PytorchPSFSubmit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/929/PytorchPSFSubmit.java\nindex 3cc5c2839e..251c3e64aa 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/929/PytorchPSFSubmit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/929/PytorchPSFSubmit.java\n@@ -26,7 +26,6 @@ import com.tencent.angel.ml.matrix.RowType;\n import org.apache.hadoop.conf.Configuration;\n \n public class PytorchPSFSubmit implements AppSubmitter {\n-\n   @Override\n   public void submit(Configuration conf) throws Exception {\n     conf.setBoolean(AngelConf.ANGEL_AM_USE_DUMMY_DATASPLITER, true);\n@@ -45,4 +44,4 @@ public class PytorchPSFSubmit implements AppSubmitter {\n     angelClient.waitForCompletion();\n     angelClient.stop(0);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/929/PytorchPSFSubmit.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/929/PytorchPSFSubmit.java\nindex 3cc5c2839e..bb0591050a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/929/PytorchPSFSubmit.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/929/PytorchPSFSubmit.java\n@@ -27,15 +27,14 @@ import org.apache.hadoop.conf.Configuration;\n \n public class PytorchPSFSubmit implements AppSubmitter {\n \n-  @Override\n-  public void submit(Configuration conf) throws Exception {\n-    conf.setBoolean(AngelConf.ANGEL_AM_USE_DUMMY_DATASPLITER, true);\n \n+    @Override\n+    public void submit(Configuration conf) throws Exception {\n+    conf.setBoolean(AngelConf.ANGEL_AM_USE_DUMMY_DATASPLITER, true);\n     AngelClient angelClient = AngelClientFactory.get(conf);\n     long col = conf.getLong(\"col\", 100000000);\n     long blockCol = conf.getLong(\"blockcol\", -1);\n     long modelSize = conf.getLong(\"model.size\", 100000000);\n-\n     MatrixContext context = new MatrixContext(\"psf_test\", 1, col, modelSize, 1, blockCol);\n     context.setRowType(RowType.T_FLOAT_DENSE);\n     context.set(MatrixConf.MATRIX_SAVE_PATH, conf.get(\"angel.save.model.path\"));\n@@ -44,5 +43,6 @@ public class PytorchPSFSubmit implements AppSubmitter {\n     angelClient.run();\n     angelClient.waitForCompletion();\n     angelClient.stop(0);\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}