{
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "83",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            issue.repoFullName(), issue.provider()\n        );\n        if(project == null) {\n            throw new IllegalStateException(\n                \"Project not found, can't register Issue.\"\n            );",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/50/InMemoryTasks.java\nindex 1c07d528f8..c4a70bf4cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/50/InMemoryTasks.java\n@@ -80,7 +80,7 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if (project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "142",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/50/InMemoryTasks.java\nindex 1c07d528f8..2c05af2311 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/50/InMemoryTasks.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.mock;\n \n import com.selfxdsd.api.*;\n@@ -33,13 +34,14 @@ import java.util.Objects;\n \n /**\n  * In-memory Tasks for test purposes.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.1\n  * @todo #134:30min Implement and unit test method\n- *  ofContributor(...) which should return the specified\n- *  Contributor tasks using class\n- *  {@link com.selfxdsd.core.tasks.ContributorTasks}.\n+ * ofContributor(...) which should return the specified\n+ * Contributor tasks using class\n+ * {@link com.selfxdsd.core.tasks.ContributorTasks}.\n+ * @since 0.0.1\n  */\n public final class InMemoryTasks implements Tasks {\n \n@@ -55,6 +57,7 @@ public final class InMemoryTasks implements Tasks {\n \n     /**\n      * Ctor.\n+     *\n      * @param storage Parent storage.\n      */\n     public InMemoryTasks(final Storage storage) {\n@@ -80,7 +83,7 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if (project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n@@ -135,9 +138,10 @@ public final class InMemoryTasks implements Tasks {\n \n         /**\n          * Constructor.\n-         * @param issueId Given Issue ID.\n+         *\n+         * @param issueId      Given Issue ID.\n          * @param repoFullName Repo full name.\n-         * @param provider Given provider.\n+         * @param provider     Given provider.\n          */\n         TaskKey(\n             final String issueId,\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/50/InMemoryTasks.java\nindex 1c07d528f8..aea4a23bb1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/50/InMemoryTasks.java\n@@ -77,23 +77,15 @@ public final class InMemoryTasks implements Tasks {\n \n     @Override\n     public Task register(final Issue issue) {\n-        final Project project = this.storage.projects().getProjectById(\n-            issue.repoFullName(), issue.provider()\n-        );\n+        final Project project = this.storage.projects().getProjectById(issue.repoFullName(), issue.provider());\n         if(project == null) {\n             throw new IllegalStateException(\n-                \"Project not found, can't register Issue.\"\n-            );\n+                \"Project not found, can't register Issue.\");\n         } else {\n-            final Task newTask = new StoredTask(\n-                project, issue, issue.role(), issue.provider(), this.storage\n+            final Task newTask = new StoredTask(project, issue, issue.role(), issue.provider(), this.storage\n             );\n             this.tasks.put(\n-                new TaskKey(\n-                    issue.issueId(),\n-                    issue.repoFullName(),\n-                    issue.provider()\n-                ),\n+                new TaskKey(issue.issueId(), issue.repoFullName(), issue.provider()),\n                 newTask\n             );\n             return newTask;\n@@ -158,18 +150,14 @@ public final class InMemoryTasks implements Tasks {\n                 return false;\n             }\n             final TaskKey taskKey = (TaskKey) object;\n-            return this.issueId.equals(taskKey.issueId)\n-                && this.provider.equals(taskKey.provider)\n+            return this.issueId.equals(taskKey.issueId)&& this.provider.equals(taskKey.provider)\n                 && this.repoFullName.equals(taskKey.repoFullName);\n-        }\n+    }\n \n         @Override\n         public int hashCode() {\n             return Objects.hash(\n-                this.issueId,\n-                this.provider,\n-                this.repoFullName\n-            );\n+                this.issueId, this.provider, this.repoFullName);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 32, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 28, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "154",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 68, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "160",
                    "column": "62",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/50/InMemoryTasks.java\nindex 1c07d528f8..df9fc55bc0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/50/InMemoryTasks.java\n@@ -25,7 +25,6 @@ package com.selfxdsd.core.mock;\n import com.selfxdsd.api.*;\n import com.selfxdsd.api.storage.Storage;\n import com.selfxdsd.core.tasks.StoredTask;\n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -41,22 +40,30 @@ import java.util.Objects;\n  *  Contributor tasks using class\n  *  {@link com.selfxdsd.core.tasks.ContributorTasks}.\n  */\n+\n+\n public final class InMemoryTasks implements Tasks {\n \n     /**\n      * Parent storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Tasks \"table\".\n      */\n+\n+\n     private final Map<InMemoryTasks.TaskKey, Task> tasks = new HashMap<>();\n \n     /**\n      * Ctor.\n      * @param storage Parent storage.\n      */\n+\n+\n     public InMemoryTasks(final Storage storage) {\n         this.storage = storage;\n     }\n@@ -68,69 +75,61 @@ public final class InMemoryTasks implements Tasks {\n \n     @Override\n     public Task getById(\n-        final String issueId,\n-        final String repoFullName,\n-        final String provider\n-    ) {\n+final String issueId, final String repoFullName, final String provider) {\n         return this.tasks.get(new TaskKey(issueId, repoFullName, provider));\n     }\n \n     @Override\n     public Task register(final Issue issue) {\n-        final Project project = this.storage.projects().getProjectById(\n-            issue.repoFullName(), issue.provider()\n-        );\n-        if(project == null) {\n-            throw new IllegalStateException(\n-                \"Project not found, can't register Issue.\"\n-            );\n-        } else {\n-            final Task newTask = new StoredTask(\n-                project, issue, issue.role(), issue.provider(), this.storage\n-            );\n-            this.tasks.put(\n-                new TaskKey(\n-                    issue.issueId(),\n-                    issue.repoFullName(),\n-                    issue.provider()\n-                ),\n-                newTask\n-            );\n-            return newTask;\n-        }\n+        final Project project = this.storage.projects().getProjectById(issue.repoFullName(), issue.provider());\n+        if( project== null) {\n+                                throw new IllegalStateException(\n+                                    \"Project not found, can't register Issue.\");\n+                            }\n+\n+else {\n+         final Task newTask = new StoredTask(project, issue, issue.role(), issue.provider(), this.storage);\n+         this.tasks.put(new TaskKey(issue.issueId(), issue.repoFullName(), issue.provider()), newTask);\n+         return newTask;\n+     }\n     }\n \n     @Override\n-    public Tasks ofProject(\n-        final String repoFullName,\n-        final String repoProvider\n-    ) {\n+    public Tasks ofProject(final String repoFullName, final String repoProvider) {\n         return null;\n     }\n \n     @Override\n     public Tasks ofContributor(final String username, final String provider) {\n-        throw new UnsupportedOperationException(\"Not implemented yet\");\n+        throw new UnsupportedOperationException(\n+            \"Not implemented yet\");\n     }\n \n     /**\n      * A Task's primary key.\n      */\n+\n     public static final class TaskKey {\n \n         /**\n          * Issue ID.\n          */\n+\n+\n         private final String issueId;\n \n         /**\n          * Repo full name.\n          */\n+\n+\n         private final String repoFullName;\n \n         /**\n          * Provider.\n          */\n+\n+\n         private final String provider;\n \n         /**\n@@ -139,11 +138,9 @@ public final class InMemoryTasks implements Tasks {\n          * @param repoFullName Repo full name.\n          * @param provider Given provider.\n          */\n-        TaskKey(\n-            final String issueId,\n-            final String repoFullName,\n-            final String provider\n-        ) {\n+\n+\n+        TaskKey(final String issueId, final String repoFullName, final String provider) {\n             this.issueId = issueId;\n             this.repoFullName = repoFullName;\n             this.provider = provider;\n@@ -151,25 +148,22 @@ public final class InMemoryTasks implements Tasks {\n \n         @Override\n         public boolean equals(final Object object) {\n-            if (this == object) {\n-                return true;\n-            }\n-            if (object == null || getClass() != object.getClass()) {\n-                return false;\n-            }\n-            final TaskKey taskKey = (TaskKey) object;\n-            return this.issueId.equals(taskKey.issueId)\n-                && this.provider.equals(taskKey.provider)\n-                && this.repoFullName.equals(taskKey.repoFullName);\n+            if(this== object) {\n+                                  return true;\n+                              }\n+            if( object== null|| getClass()!= object.getClass()) {\n+                                                                    return false;\n+                                                                }\n+\n+            final TaskKey taskKey = ( TaskKey) object;\n+            return this.issueId.equals(taskKey.issueId)&&\n+                       this.provider.equals(taskKey.provider)&&\n+                       this.repoFullName.equals(taskKey.repoFullName);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(\n-                this.issueId,\n-                this.provider,\n-                this.repoFullName\n-            );\n+            return Objects.hash(this.issueId, this.provider, this.repoFullName);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 69
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/50/InMemoryTasks.java\nindex 1c07d528f8..c4a70bf4cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/50/InMemoryTasks.java\n@@ -80,7 +80,7 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if (project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/50/InMemoryTasks.java\nindex 1c07d528f8..c85591551e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/50/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/50/InMemoryTasks.java\n@@ -80,7 +80,8 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if\n+        ( project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n",
            "diff_size": 2
        }
    ]
}