{
    "error_id": "608",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.persistence.entity;\n\nimport java.util.List;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/608/DeadLetterJobEntityManagerImpl.java\nindex f8e4e9a1b1..39b85f5b38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/608/DeadLetterJobEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/608/DeadLetterJobEntityManagerImpl.java\nindex f8e4e9a1b1..aa0cd2e16e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/608/DeadLetterJobEntityManagerImpl.java\n@@ -49,7 +49,7 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n     public List<Job> findJobsByQueryCriteria(DeadLetterJobQueryImpl jobQuery,\n                                              Page page) {\n         return jobDataManager.findJobsByQueryCriteria(jobQuery,\n-                                                      page);\n+                page);\n     }\n \n     @Override\n@@ -61,7 +61,7 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n     public void updateJobTenantIdForDeployment(String deploymentId,\n                                                String newTenantId) {\n         jobDataManager.updateJobTenantIdForDeployment(deploymentId,\n-                                                      newTenantId);\n+                newTenantId);\n     }\n \n     @Override\n@@ -86,13 +86,13 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n         }\n \n         super.insert(jobEntity,\n-                     fireCreateEvent);\n+                fireCreateEvent);\n     }\n \n     @Override\n     public void insert(DeadLetterJobEntity jobEntity) {\n         insert(jobEntity,\n-               true);\n+                true);\n     }\n \n     @Override\n@@ -111,7 +111,7 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n         // Send event\n         if (getEventDispatcher().isEnabled()) {\n             getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED,\n-                                                                                      this));\n+                    this));\n         }\n     }\n \n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/608/DeadLetterJobEntityManagerImpl.java\nindex f8e4e9a1b1..72a29c3535 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/608/DeadLetterJobEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n@@ -67,8 +66,7 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n     @Override\n     public void insert(DeadLetterJobEntity jobEntity,\n                        boolean fireCreateEvent) {\n-\n-        // add link to execution\n+    // add link to execution\n         if (jobEntity.getExecutionId() != null) {\n             ExecutionEntity execution = getExecutionEntityManager().findById(jobEntity.getExecutionId());\n \n@@ -151,4 +149,4 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n     public void setJobDataManager(DeadLetterJobDataManager jobDataManager) {\n         this.jobDataManager = jobDataManager;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 133.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/608/DeadLetterJobEntityManagerImpl.java\nindex f8e4e9a1b1..357691bc8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/608/DeadLetterJobEntityManagerImpl.java\n@@ -18,7 +18,6 @@\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n-\n import org.activiti.engine.delegate.event.ActivitiEventType;\n import org.activiti.engine.delegate.event.impl.ActivitiEventBuilder;\n import org.activiti.engine.impl.DeadLetterJobQueryImpl;\n@@ -30,14 +29,14 @@ import org.activiti.engine.runtime.Job;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLetterJobEntity> implements DeadLetterJobEntityManager {\n \n     protected DeadLetterJobDataManager jobDataManager;\n \n-    public DeadLetterJobEntityManagerImpl(ProcessEngineConfigurationImpl processEngineConfiguration,\n-                                          DeadLetterJobDataManager jobDataManager) {\n-        super(processEngineConfiguration);\n-        this.jobDataManager = jobDataManager;\n+    public DeadLetterJobEntityManagerImpl(ProcessEngineConfigurationImpl processEngineConfiguration, DeadLetterJobDataManager jobDataManager) {\n+    super(processEngineConfiguration);\n+    this.jobDataManager = jobDataManager;\n     }\n \n     @Override\n@@ -46,10 +45,8 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n     }\n \n     @Override\n-    public List<Job> findJobsByQueryCriteria(DeadLetterJobQueryImpl jobQuery,\n-                                             Page page) {\n-        return jobDataManager.findJobsByQueryCriteria(jobQuery,\n-                                                      page);\n+    public List<Job> findJobsByQueryCriteria(DeadLetterJobQueryImpl jobQuery, Page page) {\n+        return jobDataManager.findJobsByQueryCriteria(jobQuery, page);\n     }\n \n     @Override\n@@ -58,15 +55,12 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n     }\n \n     @Override\n-    public void updateJobTenantIdForDeployment(String deploymentId,\n-                                               String newTenantId) {\n-        jobDataManager.updateJobTenantIdForDeployment(deploymentId,\n-                                                      newTenantId);\n+    public void updateJobTenantIdForDeployment(String deploymentId, String newTenantId) {\n+    jobDataManager.updateJobTenantIdForDeployment(deploymentId, newTenantId);\n     }\n \n     @Override\n-    public void insert(DeadLetterJobEntity jobEntity,\n-                       boolean fireCreateEvent) {\n+    public void insert(DeadLetterJobEntity jobEntity, boolean fireCreateEvent) {\n \n         // add link to execution\n         if (jobEntity.getExecutionId() != null) {\n@@ -85,22 +79,18 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n             }\n         }\n \n-        super.insert(jobEntity,\n-                     fireCreateEvent);\n+        super.insert(jobEntity, fireCreateEvent);\n     }\n \n     @Override\n     public void insert(DeadLetterJobEntity jobEntity) {\n-        insert(jobEntity,\n-               true);\n+    insert(jobEntity, true);\n     }\n \n     @Override\n     public void delete(DeadLetterJobEntity jobEntity) {\n         super.delete(jobEntity);\n-\n         deleteExceptionByteArrayRef(jobEntity);\n-\n         if (jobEntity.getExecutionId() != null && isExecutionRelatedEntityCountEnabledGlobally()) {\n             CountingExecutionEntity executionEntity = (CountingExecutionEntity) getExecutionEntityManager().findById(jobEntity.getExecutionId());\n             if (isExecutionRelatedEntityCountEnabled(executionEntity)) {\n@@ -109,9 +99,9 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n         }\n \n         // Send event\n+\n         if (getEventDispatcher().isEnabled()) {\n-            getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED,\n-                                                                                      this));\n+            getEventDispatcher().dispatchEvent(ActivitiEventBuilder.createEntityEvent(ActivitiEventType.ENTITY_DELETED, this));\n         }\n     }\n \n@@ -119,36 +109,38 @@ public class DeadLetterJobEntityManagerImpl extends AbstractEntityManager<DeadLe\n      * Deletes a the byte array used to store the exception information.  Subclasses may override\n      * to provide custom implementations.\n      */\n+\n     protected void deleteExceptionByteArrayRef(DeadLetterJobEntity jobEntity) {\n-        ByteArrayRef exceptionByteArrayRef = jobEntity.getExceptionByteArrayRef();\n-        if (exceptionByteArrayRef != null) {\n-            exceptionByteArrayRef.delete();\n-        }\n+    ByteArrayRef exceptionByteArrayRef = jobEntity.getExceptionByteArrayRef();\n+    if (exceptionByteArrayRef != null) {\n+        exceptionByteArrayRef.delete();\n+    }\n     }\n \n     protected DeadLetterJobEntity createDeadLetterJob(AbstractJobEntity job) {\n-        DeadLetterJobEntity newJobEntity = create();\n-        newJobEntity.setJobHandlerConfiguration(job.getJobHandlerConfiguration());\n-        newJobEntity.setJobHandlerType(job.getJobHandlerType());\n-        newJobEntity.setExclusive(job.isExclusive());\n-        newJobEntity.setRepeat(job.getRepeat());\n-        newJobEntity.setRetries(job.getRetries());\n-        newJobEntity.setEndDate(job.getEndDate());\n-        newJobEntity.setExecutionId(job.getExecutionId());\n-        newJobEntity.setProcessInstanceId(job.getProcessInstanceId());\n-        newJobEntity.setProcessDefinitionId(job.getProcessDefinitionId());\n+    DeadLetterJobEntity newJobEntity = create();\n+    newJobEntity.setJobHandlerConfiguration(job.getJobHandlerConfiguration());\n+    newJobEntity.setJobHandlerType(job.getJobHandlerType());\n+    newJobEntity.setExclusive(job.isExclusive());\n+    newJobEntity.setRepeat(job.getRepeat());\n+    newJobEntity.setRetries(job.getRetries());\n+    newJobEntity.setEndDate(job.getEndDate());\n+    newJobEntity.setExecutionId(job.getExecutionId());\n+    newJobEntity.setProcessInstanceId(job.getProcessInstanceId());\n+    newJobEntity.setProcessDefinitionId(job.getProcessDefinitionId());\n \n         // Inherit tenant\n-        newJobEntity.setTenantId(job.getTenantId());\n-        newJobEntity.setJobType(job.getJobType());\n-        return newJobEntity;\n+    newJobEntity.setTenantId(job.getTenantId());\n+    newJobEntity.setJobType(job.getJobType());\n+    return newJobEntity;\n     }\n \n     protected DeadLetterJobDataManager getDataManager() {\n-        return jobDataManager;\n+    return jobDataManager;\n     }\n \n     public void setJobDataManager(DeadLetterJobDataManager jobDataManager) {\n-        this.jobDataManager = jobDataManager;\n+    this.jobDataManager = jobDataManager;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/608/DeadLetterJobEntityManagerImpl.java\nindex f8e4e9a1b1..39b85f5b38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/608/DeadLetterJobEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/608/DeadLetterJobEntityManagerImpl.java\nindex f8e4e9a1b1..39b85f5b38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/608/DeadLetterJobEntityManagerImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/608/DeadLetterJobEntityManagerImpl.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.List;\n",
            "diff_size": 1
        }
    ]
}