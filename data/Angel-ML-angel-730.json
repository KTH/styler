{
    "error_id": "730",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/730/AggrFunc.java\nindex fbc0fac0dc..4b19b76e2f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/730/AggrFunc.java\n@@ -22,26 +22,26 @@ import java.util.List;\n  * The interface aggregation function,invoke at parameter server actually.\n  */\n public interface AggrFunc {\n-  /**\n-   * Gets aggregation param.\n-   *\n-   * @return the param\n-   */\n-  AggrParam getParam();\n+    /**\n+     * Gets aggregation param.\n+     *\n+     * @return the param\n+     */\n+    AggrParam getParam();\n \n-  /**\n-   * Aggregate partition.\n-   *\n-   * @param partParam the partition arameters\n-   * @return the partition aggr result\n-   */\n-  PartitionAggrResult aggr(PartitionAggrParam partParam);\n+    /**\n+     * Aggregate partition.\n+     *\n+     * @param partParam the partition arameters\n+     * @return the partition aggr result\n+     */\n+    PartitionAggrResult aggr(PartitionAggrParam partParam);\n \n-  /**\n-   * Merge aggregation result.\n-   *\n-   * @param partResults the partition results\n-   * @return the merged result\n-   */\n-  AggrResult merge(List<PartitionAggrResult> partResults);\n+    /**\n+     * Merge aggregation result.\n+     *\n+     * @param partResults the partition results\n+     * @return the merged result\n+     */\n+    AggrResult merge(List<PartitionAggrResult> partResults);\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/730/AggrFunc.java\nindex fbc0fac0dc..dc4de29ecc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/730/AggrFunc.java\n@@ -44,4 +44,4 @@ public interface AggrFunc {\n    * @return the merged result\n    */\n   AggrResult merge(List<PartitionAggrResult> partResults);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 51.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/730/AggrFunc.java\nindex fbc0fac0dc..5e5b7bb2ad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/730/AggrFunc.java\n@@ -21,13 +21,14 @@ import java.util.List;\n /**\n  * The interface aggregation function,invoke at parameter server actually.\n  */\n+\n public interface AggrFunc {\n   /**\n    * Gets aggregation param.\n    *\n    * @return the param\n    */\n-  AggrParam getParam();\n+    AggrParam getParam();\n \n   /**\n    * Aggregate partition.\n@@ -35,7 +36,9 @@ public interface AggrFunc {\n    * @param partParam the partition arameters\n    * @return the partition aggr result\n    */\n-  PartitionAggrResult aggr(PartitionAggrParam partParam);\n+\n+\n+    PartitionAggrResult aggr(PartitionAggrParam partParam);\n \n   /**\n    * Merge aggregation result.\n@@ -43,5 +46,7 @@ public interface AggrFunc {\n    * @param partResults the partition results\n    * @return the merged result\n    */\n-  AggrResult merge(List<PartitionAggrResult> partResults);\n-}\n+\n+\n+    AggrResult merge(List<PartitionAggrResult> partResults);\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/730/AggrFunc.java\nindex fbc0fac0dc..ffea49ea7b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/730/AggrFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/730/AggrFunc.java\n@@ -12,9 +12,7 @@\n  * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n- */\n-\n-package com.tencent.angel.ml.matrix.udf.aggr;\n+ */ package com.tencent.angel.ml.matrix.udf.aggr;\n \n import java.util.List;\n \n",
            "diff_size": 3
        }
    ]
}