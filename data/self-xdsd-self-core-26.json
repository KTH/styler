{
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "81",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            issue.repoFullName(), issue.provider()\n        );\n        if(project == null) {\n            throw new IllegalStateException(\n                \"Project not found, can't register Issue.\"\n            );",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/26/InMemoryTasks.java\nindex 6e3afddda8..0f7ba42227 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/26/InMemoryTasks.java\n@@ -78,7 +78,7 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if (project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "129",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/26/InMemoryTasks.java\nindex 6e3afddda8..687ae16bd9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/26/InMemoryTasks.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.mock;\n \n import com.selfxdsd.api.Issue;\n@@ -36,12 +37,13 @@ import java.util.Objects;\n \n /**\n  * In-memory Tasks for test purposes.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.1\n  * @todo #133:30min Implement and unit test method\n- *  ofProject(...) which should return the specified\n- *  Project tasks using class {@link com.selfxdsd.core.tasks.ProjectTasks}.\n+ * ofProject(...) which should return the specified\n+ * Project tasks using class {@link com.selfxdsd.core.tasks.ProjectTasks}.\n+ * @since 0.0.1\n  */\n public final class InMemoryTasks implements Tasks {\n \n@@ -57,6 +59,7 @@ public final class InMemoryTasks implements Tasks {\n \n     /**\n      * Ctor.\n+     *\n      * @param storage Parent storage.\n      */\n     public InMemoryTasks(final Storage storage) {\n@@ -78,7 +81,7 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if (project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n@@ -122,7 +125,8 @@ public final class InMemoryTasks implements Tasks {\n \n         /**\n          * Constructor.\n-         * @param issueId Given Issue ID.\n+         *\n+         * @param issueId  Given Issue ID.\n          * @param provider Given provider.\n          */\n         TaskKey(final String issueId, final String provider) {\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/26/InMemoryTasks.java\nindex 6e3afddda8..ef1c5ecef5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/26/InMemoryTasks.java\n@@ -75,22 +75,15 @@ public final class InMemoryTasks implements Tasks {\n \n     @Override\n     public Task register(final Issue issue) {\n-        final Project project = this.storage.projects().getProjectById(\n-            issue.repoFullName(), issue.provider()\n-        );\n+        final Project project = this.storage.projects().getProjectById(issue.repoFullName(), issue.provider());\n         if(project == null) {\n             throw new IllegalStateException(\n-                \"Project not found, can't register Issue.\"\n-            );\n+                \"Project not found, can't register Issue.\");\n         } else {\n-            final Task newTask = new StoredTask(\n-                project, issue, issue.role(), issue.provider(), this.storage\n+            final Task newTask = new StoredTask(project, issue, issue.role(), issue.provider(), this.storage\n             );\n             this.tasks.put(\n-                new TaskKey(\n-                    issue.issueId(),\n-                    issue.provider()\n-                ),\n+                new TaskKey(issue.issueId(), issue.provider()),\n                 newTask\n             );\n             return newTask;\n@@ -139,13 +132,12 @@ public final class InMemoryTasks implements Tasks {\n                 return false;\n             }\n             final TaskKey taskKey = (TaskKey) object;\n-            return this.issueId.equals(taskKey.issueId)\n-                && this.provider.equals(taskKey.provider);\n-        }\n+            return this.issueId.equals(taskKey.issueId)&& this.provider.equals(taskKey.provider);\n+    }\n \n         @Override\n         public int hashCode() {\n             return Objects.hash(this.issueId, this.provider);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 32, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 28, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 68, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 64, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/26/InMemoryTasks.java\nindex 6e3afddda8..2f139d334d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/26/InMemoryTasks.java\n@@ -28,7 +28,6 @@ import com.selfxdsd.api.Task;\n import com.selfxdsd.api.Tasks;\n import com.selfxdsd.api.storage.Storage;\n import com.selfxdsd.core.tasks.StoredTask;\n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -43,22 +42,30 @@ import java.util.Objects;\n  *  ofProject(...) which should return the specified\n  *  Project tasks using class {@link com.selfxdsd.core.tasks.ProjectTasks}.\n  */\n+\n+\n public final class InMemoryTasks implements Tasks {\n \n     /**\n      * Parent storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Tasks \"table\".\n      */\n+\n+\n     private final Map<InMemoryTasks.TaskKey, Task> tasks = new HashMap<>();\n \n     /**\n      * Ctor.\n      * @param storage Parent storage.\n      */\n+\n+\n     public InMemoryTasks(final Storage storage) {\n         this.storage = storage;\n     }\n@@ -75,49 +82,42 @@ public final class InMemoryTasks implements Tasks {\n \n     @Override\n     public Task register(final Issue issue) {\n-        final Project project = this.storage.projects().getProjectById(\n-            issue.repoFullName(), issue.provider()\n-        );\n-        if(project == null) {\n-            throw new IllegalStateException(\n-                \"Project not found, can't register Issue.\"\n-            );\n-        } else {\n-            final Task newTask = new StoredTask(\n-                project, issue, issue.role(), issue.provider(), this.storage\n-            );\n-            this.tasks.put(\n-                new TaskKey(\n-                    issue.issueId(),\n-                    issue.provider()\n-                ),\n-                newTask\n-            );\n-            return newTask;\n-        }\n+        final Project project = this.storage.projects().getProjectById(issue.repoFullName(), issue.provider());\n+        if( project== null) {\n+                                throw new IllegalStateException(\n+                                    \"Project not found, can't register Issue.\");\n+                            }\n+\n+else {\n+         final Task newTask = new StoredTask(project, issue, issue.role(), issue.provider(), this.storage);\n+         this.tasks.put(new TaskKey(issue.issueId(), issue.provider()), newTask);\n+         return newTask;\n+     }\n     }\n \n     @Override\n-    public Tasks ofProject(\n-        final String repoFullName,\n-        final String repoProvider\n-    ) {\n+    public Tasks ofProject(final String repoFullName, final String repoProvider) {\n         return null;\n     }\n \n     /**\n      * A Task's primary key.\n      */\n+\n     public static final class TaskKey {\n \n         /**\n          * Issue ID.\n          */\n+\n+\n         private final String issueId;\n \n         /**\n          * Provider.\n          */\n+\n+\n         private final String provider;\n \n         /**\n@@ -125,6 +125,8 @@ public final class InMemoryTasks implements Tasks {\n          * @param issueId Given Issue ID.\n          * @param provider Given provider.\n          */\n+\n+\n         TaskKey(final String issueId, final String provider) {\n             this.issueId = issueId;\n             this.provider = provider;\n@@ -132,15 +134,16 @@ public final class InMemoryTasks implements Tasks {\n \n         @Override\n         public boolean equals(final Object object) {\n-            if (this == object) {\n-                return true;\n-            }\n-            if (object == null || getClass() != object.getClass()) {\n-                return false;\n-            }\n-            final TaskKey taskKey = (TaskKey) object;\n-            return this.issueId.equals(taskKey.issueId)\n-                && this.provider.equals(taskKey.provider);\n+            if(this== object) {\n+                                  return true;\n+                              }\n+            if( object== null|| getClass()!= object.getClass()) {\n+                                                                    return false;\n+                                                                }\n+\n+            final TaskKey taskKey = ( TaskKey) object;\n+            return this.issueId.equals(taskKey.issueId)&&\n+                       this.provider.equals(taskKey.provider);\n         }\n \n         @Override\n@@ -148,4 +151,4 @@ public final class InMemoryTasks implements Tasks {\n             return Objects.hash(this.issueId, this.provider);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/26/InMemoryTasks.java\nindex 6e3afddda8..0f7ba42227 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/26/InMemoryTasks.java\n@@ -78,7 +78,7 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if (project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'(' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/26/InMemoryTasks.java\nindex 6e3afddda8..89be3145a7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/26/InMemoryTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/26/InMemoryTasks.java\n@@ -78,7 +78,8 @@ public final class InMemoryTasks implements Tasks {\n         final Project project = this.storage.projects().getProjectById(\n             issue.repoFullName(), issue.provider()\n         );\n-        if(project == null) {\n+        if\n+        ( project == null) {\n             throw new IllegalStateException(\n                 \"Project not found, can't register Issue.\"\n             );\n",
            "diff_size": 2
        }
    ]
}