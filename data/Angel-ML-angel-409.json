{
    "error_id": "409",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 108).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\n */\npublic class SparseDoubleMatrix extends TDoubleMatrix {\n  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/409/SparseDoubleMatrix.java\nindex 9ed9713b43..4930919c7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/409/SparseDoubleMatrix.java\n@@ -1,53 +1,53 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/BSD-3-Clause\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- */\r\n-\r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\r\n-import org.apache.commons.logging.Log;\r\n-import org.apache.commons.logging.LogFactory;\r\n-\r\n-/**\r\n- * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\r\n- */\r\n-public class SparseDoubleMatrix extends TDoubleMatrix {\r\n-  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n-  private final SparseIntDoubleVector[] vectors;\r\n-\r\n-  /**\r\n-   * Build a SparseDoubleMatrix\r\n-   * @param row row number\r\n-   * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    super(row, col);\r\n-    vectors = new SparseIntDoubleVector[row];\r\n-  }\r\n-\r\n-  /**\r\n-   * Init the empty vector\r\n-   *\r\n-   * @param rowIndex row index\r\n-   * @return\r\n-   */\r\n-  @Override\r\n-  public SparseIntDoubleVector initVector(int rowIndex) {\r\n-    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/BSD-3-Clause\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+/**\n+ * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\n+ */\n+public class SparseDoubleMatrix extends TDoubleMatrix {\n+  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\n+  private final SparseIntDoubleVector[] vectors;\n+\n+  /**\n+   * Build a SparseDoubleMatrix\n+   * @param row row number\n+   * @param col column number\n+   */\n+  public SparseDoubleMatrix(int row, int col) {\n+    super(row, col);\n+    vectors = new SparseIntDoubleVector[row];\n+  }\n+\n+  /**\n+   * Init the empty vector\n+   *\n+   * @param rowIndex row index\n+   * @return\n+   */\n+  @Override\n+  public SparseIntDoubleVector initVector(int rowIndex) {\n+    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+}\n",
            "diff_size": 53
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/409/SparseDoubleMatrix.java\nindex 9ed9713b43..a69bf1678a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/409/SparseDoubleMatrix.java\n@@ -24,30 +24,31 @@ import org.apache.commons.logging.LogFactory;\n  * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\r\n  */\r\n public class SparseDoubleMatrix extends TDoubleMatrix {\r\n-  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n-  private final SparseIntDoubleVector[] vectors;\r\n+    private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n+    private final SparseIntDoubleVector[] vectors;\r\n \r\n-  /**\r\n-   * Build a SparseDoubleMatrix\r\n-   * @param row row number\r\n-   * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    super(row, col);\r\n-    vectors = new SparseIntDoubleVector[row];\r\n-  }\r\n+    /**\r\n+     * Build a SparseDoubleMatrix\r\n+     *\r\n+     * @param row row number\r\n+     * @param col column number\r\n+     */\r\n+    public SparseDoubleMatrix(int row, int col) {\r\n+        super(row, col);\r\n+        vectors = new SparseIntDoubleVector[row];\r\n+    }\r\n \r\n-  /**\r\n-   * Init the empty vector\r\n-   *\r\n-   * @param rowIndex row index\r\n-   * @return\r\n-   */\r\n-  @Override\r\n-  public SparseIntDoubleVector initVector(int rowIndex) {\r\n-    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n+    /**\r\n+     * Init the empty vector\r\n+     *\r\n+     * @param rowIndex row index\r\n+     * @return\r\n+     */\r\n+    @Override\r\n+    public SparseIntDoubleVector initVector(int rowIndex) {\r\n+        SparseIntDoubleVector ret = new SparseIntDoubleVector((int) col);\r\n+        ret.setMatrixId(matrixId);\r\n+        ret.setRowId(rowIndex);\r\n+        return ret;\r\n+    }\r\n }\r\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/409/SparseDoubleMatrix.java\nindex 9ed9713b43..cb9604263a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/409/SparseDoubleMatrix.java\n@@ -45,9 +45,9 @@ public class SparseDoubleMatrix extends TDoubleMatrix {\n    */\r\n   @Override\r\n   public SparseIntDoubleVector initVector(int rowIndex) {\r\n-    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\r\n+    SparseIntDoubleVector ret = new SparseIntDoubleVector((int) col);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 37.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/409/SparseDoubleMatrix.java\nindex 9ed9713b43..bc9ccddae5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/409/SparseDoubleMatrix.java\n@@ -14,40 +14,44 @@\n  * the License.\r\n  */\r\n \r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\r\n-import org.apache.commons.logging.Log;\r\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\n+import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\r\n \r\n /**\r\n  * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\r\n- */\r\n-public class SparseDoubleMatrix extends TDoubleMatrix {\r\n-  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n-  private final SparseIntDoubleVector[] vectors;\r\n+ */\n+\n+public class SparseDoubleMatrix extends TDoubleMatrix {\n+    private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\n+    private final SparseIntDoubleVector[] vectors;\r\n \r\n   /**\r\n    * Build a SparseDoubleMatrix\r\n    * @param row row number\r\n    * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    super(row, col);\r\n-    vectors = new SparseIntDoubleVector[row];\r\n-  }\r\n+   */\n+\n+    public SparseDoubleMatrix(int row, int col) {\n+    super(row, col);\n+    vectors = new SparseIntDoubleVector[row];\n+    }\r\n \r\n   /**\r\n    * Init the empty vector\r\n    *\r\n    * @param rowIndex row index\r\n    * @return\r\n-   */\r\n-  @Override\r\n-  public SparseIntDoubleVector initVector(int rowIndex) {\r\n-    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+   */\n+\n+    @Override\n+    public SparseIntDoubleVector initVector(int rowIndex) {\n+    SparseIntDoubleVector ret = new SparseIntDoubleVector((int) col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/409/SparseDoubleMatrix.java\nindex 9ed9713b43..4930919c7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/409/SparseDoubleMatrix.java\n@@ -1,53 +1,53 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/BSD-3-Clause\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- */\r\n-\r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\r\n-import org.apache.commons.logging.Log;\r\n-import org.apache.commons.logging.LogFactory;\r\n-\r\n-/**\r\n- * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\r\n- */\r\n-public class SparseDoubleMatrix extends TDoubleMatrix {\r\n-  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n-  private final SparseIntDoubleVector[] vectors;\r\n-\r\n-  /**\r\n-   * Build a SparseDoubleMatrix\r\n-   * @param row row number\r\n-   * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    super(row, col);\r\n-    vectors = new SparseIntDoubleVector[row];\r\n-  }\r\n-\r\n-  /**\r\n-   * Init the empty vector\r\n-   *\r\n-   * @param rowIndex row index\r\n-   * @return\r\n-   */\r\n-  @Override\r\n-  public SparseIntDoubleVector initVector(int rowIndex) {\r\n-    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/BSD-3-Clause\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+/**\n+ * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\n+ */\n+public class SparseDoubleMatrix extends TDoubleMatrix {\n+  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\n+  private final SparseIntDoubleVector[] vectors;\n+\n+  /**\n+   * Build a SparseDoubleMatrix\n+   * @param row row number\n+   * @param col column number\n+   */\n+  public SparseDoubleMatrix(int row, int col) {\n+    super(row, col);\n+    vectors = new SparseIntDoubleVector[row];\n+  }\n+\n+  /**\n+   * Init the empty vector\n+   *\n+   * @param rowIndex row index\n+   * @return\n+   */\n+  @Override\n+  public SparseIntDoubleVector initVector(int rowIndex) {\n+    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+}\n",
            "diff_size": 53
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/409/SparseDoubleMatrix.java\nindex 9ed9713b43..bb795ace9b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/409/SparseDoubleMatrix.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/409/SparseDoubleMatrix.java\n@@ -1,53 +1,51 @@\n-/*\r\n- * Tencent is pleased to support the open source community by making Angel available.\r\n- *\r\n- * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\r\n- *\r\n- * Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except in\r\n- * compliance with the License. You may obtain a copy of the License at\r\n- *\r\n- * https://opensource.org/licenses/BSD-3-Clause\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n- * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n- * or implied. See the License for the specific language governing permissions and limitations under\r\n- * the License.\r\n- */\r\n-\r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\r\n-import org.apache.commons.logging.Log;\r\n-import org.apache.commons.logging.LogFactory;\r\n-\r\n-/**\r\n- * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\r\n- */\r\n-public class SparseDoubleMatrix extends TDoubleMatrix {\r\n-  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n-  private final SparseIntDoubleVector[] vectors;\r\n-\r\n-  /**\r\n-   * Build a SparseDoubleMatrix\r\n-   * @param row row number\r\n-   * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    super(row, col);\r\n-    vectors = new SparseIntDoubleVector[row];\r\n-  }\r\n-\r\n-  /**\r\n-   * Init the empty vector\r\n-   *\r\n-   * @param rowIndex row index\r\n-   * @return\r\n-   */\r\n-  @Override\r\n-  public SparseIntDoubleVector initVector(int rowIndex) {\r\n-    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+/*\n+ * Tencent is pleased to support the open source community by making Angel available.\n+ *\n+ * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\n+ *\n+ * Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except in\n+ * compliance with the License. You may obtain a copy of the License at\n+ *\n+ * https://opensource.org/licenses/BSD-3-Clause\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.SparseIntDoubleVector;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory; /**\n+ * Sparse double matrix that is represented by a group of sparse double vector {@link SparseIntDoubleVector}\n+ */\n+public class SparseDoubleMatrix extends TDoubleMatrix {\n+  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\n+  private final SparseIntDoubleVector[] vectors;\n+\n+  /**\n+   * Build a SparseDoubleMatrix\n+   * @param row row number\n+   * @param col column number\n+   */\n+  public SparseDoubleMatrix(int row, int col) {\n+    super(row, col);\n+    vectors = new SparseIntDoubleVector[row];\n+  }\n+\n+  /**\n+   * Init the empty vector\n+   *\n+   * @param rowIndex row index\n+   * @return\n+   */\n+  @Override\n+  public SparseIntDoubleVector initVector(int rowIndex) {\n+    SparseIntDoubleVector ret = new SparseIntDoubleVector((int)col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+}\n",
            "diff_size": 53
        }
    ]
}