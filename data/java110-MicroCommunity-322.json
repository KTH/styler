{
    "error_id": "322",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 166).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n\n\n        return mappings;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/322/MappingInnerServiceSMOImpl.java\nindex b8ec174d9b..60db1dc3c0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/322/MappingInnerServiceSMOImpl.java\n@@ -41,9 +41,7 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             mappingDto.setPage((page - 1) * mappingDto.getRow());\n-        }\n-\n-        List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n+        } List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n \n \n         return mappings;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/322/MappingInnerServiceSMOImpl.java\nindex b8ec174d9b..b3219fa766 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/322/MappingInnerServiceSMOImpl.java\n@@ -26,63 +26,64 @@ import java.util.List;\n @RestController\n public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappingInnerServiceSMO {\n \n-    @Autowired\n-    private IMappingServiceDao mappingServiceDaoImpl;\n+  @Autowired\n+  private IMappingServiceDao mappingServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<MappingDto> queryMappings(@RequestBody MappingDto mappingDto) {\n+  @Override\n+  public List<MappingDto> queryMappings(@RequestBody MappingDto mappingDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = mappingDto.getPage();\n+    int page = mappingDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            mappingDto.setPage((page - 1) * mappingDto.getRow());\n-        }\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      mappingDto.setPage((page - 1) * mappingDto.getRow());\n+    }\n \n-        List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n+    List<MappingDto> mappings =\n+      BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n \n \n-        return mappings;\n-    }\n+    return mappings;\n+  }\n \n-    @Override\n-    public int queryMappingsCount(@RequestBody MappingDto mappingDto) {\n-        return mappingServiceDaoImpl.queryMappingsCount(BeanConvertUtil.beanCovertMap(mappingDto));\n-    }\n+  @Override\n+  public int queryMappingsCount(@RequestBody MappingDto mappingDto) {\n+    return mappingServiceDaoImpl.queryMappingsCount(BeanConvertUtil.beanCovertMap(mappingDto));\n+  }\n \n-    @Override\n-    public int updateMapping(@RequestBody MappingDto serviceDto) {\n-        return mappingServiceDaoImpl.updateMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n-    }\n+  @Override\n+  public int updateMapping(@RequestBody MappingDto serviceDto) {\n+    return mappingServiceDaoImpl.updateMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n+  }\n \n-    @Override\n-    public int saveMapping(@RequestBody MappingDto serviceDto) {\n-        return mappingServiceDaoImpl.saveMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n-    }\n+  @Override\n+  public int saveMapping(@RequestBody MappingDto serviceDto) {\n+    return mappingServiceDaoImpl.saveMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n+  }\n \n-    @Override\n-    public int deleteMapping(@RequestBody MappingDto serviceDto) {\n-        serviceDto.setStatusCd(StatusConstant.STATUS_CD_INVALID);\n-        return mappingServiceDaoImpl.updateMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n-    }\n+  @Override\n+  public int deleteMapping(@RequestBody MappingDto serviceDto) {\n+    serviceDto.setStatusCd(StatusConstant.STATUS_CD_INVALID);\n+    return mappingServiceDaoImpl.updateMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n+  }\n \n-    public IMappingServiceDao getMappingServiceDaoImpl() {\n-        return mappingServiceDaoImpl;\n-    }\n+  public IMappingServiceDao getMappingServiceDaoImpl() {\n+    return mappingServiceDaoImpl;\n+  }\n \n-    public void setMappingServiceDaoImpl(IMappingServiceDao mappingServiceDaoImpl) {\n-        this.mappingServiceDaoImpl = mappingServiceDaoImpl;\n-    }\n+  public void setMappingServiceDaoImpl(IMappingServiceDao mappingServiceDaoImpl) {\n+    this.mappingServiceDaoImpl = mappingServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/322/MappingInnerServiceSMOImpl.java\nindex b8ec174d9b..1928bb5e7e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/322/MappingInnerServiceSMOImpl.java\n@@ -45,8 +45,7 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n \n         List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n \n-\n-        return mappings;\n+return mappings;\n     }\n \n     @Override\n@@ -85,4 +84,4 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/322/MappingInnerServiceSMOImpl.java\nindex b8ec174d9b..e554343388 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/322/MappingInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.utils.constant.StatusConstant;\n import com.java110.utils.util.BeanConvertUtil;\n import com.java110.community.dao.IMappingServiceDao;\n@@ -12,7 +11,6 @@ import com.java110.dto.mapping.MappingDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -23,6 +21,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappingInnerServiceSMO {\n \n@@ -36,34 +36,35 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n     public List<MappingDto> queryMappings(@RequestBody MappingDto mappingDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = mappingDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             mappingDto.setPage((page - 1) * mappingDto.getRow());\n         }\n \n         List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n \n-\n         return mappings;\n     }\n \n+\n     @Override\n     public int queryMappingsCount(@RequestBody MappingDto mappingDto) {\n         return mappingServiceDaoImpl.queryMappingsCount(BeanConvertUtil.beanCovertMap(mappingDto));\n     }\n \n+\n     @Override\n     public int updateMapping(@RequestBody MappingDto serviceDto) {\n         return mappingServiceDaoImpl.updateMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n     }\n \n+\n     @Override\n     public int saveMapping(@RequestBody MappingDto serviceDto) {\n         return mappingServiceDaoImpl.saveMappingInfo(BeanConvertUtil.beanCovertMap(serviceDto));\n     }\n \n+\n     @Override\n     public int deleteMapping(@RequestBody MappingDto serviceDto) {\n         serviceDto.setStatusCd(StatusConstant.STATUS_CD_INVALID);\n@@ -85,4 +86,4 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/322/MappingInnerServiceSMOImpl.java\nindex b8ec174d9b..60db1dc3c0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/322/MappingInnerServiceSMOImpl.java\n@@ -41,9 +41,7 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             mappingDto.setPage((page - 1) * mappingDto.getRow());\n-        }\n-\n-        List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n+        } List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n \n \n         return mappings;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/322/MappingInnerServiceSMOImpl.java\nindex b8ec174d9b..02d35d1d65 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/322/MappingInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/322/MappingInnerServiceSMOImpl.java\n@@ -41,9 +41,7 @@ public class MappingInnerServiceSMOImpl extends BaseServiceSMO implements IMappi\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             mappingDto.setPage((page - 1) * mappingDto.getRow());\n-        }\n-\n-        List<MappingDto> mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n+        } List<MappingDto>mappings = BeanConvertUtil.covertBeanList(mappingServiceDaoImpl.getMappingInfo(BeanConvertUtil.beanCovertMap(mappingDto)), MappingDto.class);\n \n \n         return mappings;\n",
            "diff_size": 3
        }
    ]
}