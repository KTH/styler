{
    "error_id": "235",
    "information": {
        "errors": [
            {
                "line": "11",
                "column": "58",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n\npublic interface IQuery extends Visitable, SubmittedQuery{\n\n\tIQuery resolve(QueryResolveContext context);\n\tQueryPlan createQueryPlan(QueryPlanContext context);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/235/IQuery.java\nindex e8c3dbdfa4..9d4ea951ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/235/IQuery.java\n@@ -8,13 +8,13 @@ import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n \n-public interface IQuery extends Visitable, SubmittedQuery{\n+public interface IQuery extends Visitable, SubmittedQuery {\n \n \tIQuery resolve(QueryResolveContext context);\n \tQueryPlan createQueryPlan(QueryPlanContext context);\n-\t\n+\n \tvoid collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n-\t\n+\n \tdefault Set<ManagedExecutionId> collectRequiredQueries() {\n \t\tHashSet<ManagedExecutionId> set = new HashSet<>();\n \t\tthis.collectRequiredQueries(set);\n@@ -26,7 +26,7 @@ public interface IQuery extends Visitable, SubmittedQuery{\n \t\tcollectResultInfos(collector);\n \t\treturn collector;\n \t}\n-\t\n+\n \tvoid collectResultInfos(ResultInfoCollector collector);\n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/235/IQuery.java\nindex e8c3dbdfa4..040099c834 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/235/IQuery.java\n@@ -8,25 +8,26 @@ import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n \n-public interface IQuery extends Visitable, SubmittedQuery{\n-\n-\tIQuery resolve(QueryResolveContext context);\n-\tQueryPlan createQueryPlan(QueryPlanContext context);\n-\t\n-\tvoid collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n-\t\n-\tdefault Set<ManagedExecutionId> collectRequiredQueries() {\n-\t\tHashSet<ManagedExecutionId> set = new HashSet<>();\n-\t\tthis.collectRequiredQueries(set);\n-\t\treturn set;\n-\t}\n-\n-\tdefault ResultInfoCollector collectResultInfos(PrintSettings config) {\n-\t\tResultInfoCollector collector = new ResultInfoCollector(config);\n-\t\tcollectResultInfos(collector);\n-\t\treturn collector;\n-\t}\n-\t\n-\tvoid collectResultInfos(ResultInfoCollector collector);\n+public interface IQuery extends Visitable, SubmittedQuery {\n+\n+    IQuery resolve(QueryResolveContext context);\n+\n+    QueryPlan createQueryPlan(QueryPlanContext context);\n+\n+    void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n+\n+    default Set<ManagedExecutionId> collectRequiredQueries() {\n+        HashSet<ManagedExecutionId> set = new HashSet<>();\n+        this.collectRequiredQueries(set);\n+        return set;\n+    }\n+\n+    default ResultInfoCollector collectResultInfos(PrintSettings config) {\n+        ResultInfoCollector collector = new ResultInfoCollector(config);\n+        collectResultInfos(collector);\n+        return collector;\n+    }\n+\n+    void collectResultInfos(ResultInfoCollector collector);\n \n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/235/IQuery.java\nindex e8c3dbdfa4..1e8974bcf9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/235/IQuery.java\n@@ -8,7 +8,7 @@ import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n \n-public interface IQuery extends Visitable, SubmittedQuery{\n+public interface IQuery extends Visitable, SubmittedQuery {\n \n \tIQuery resolve(QueryResolveContext context);\n \tQueryPlan createQueryPlan(QueryPlanContext context);\n@@ -29,4 +29,4 @@ public interface IQuery extends Visitable, SubmittedQuery{\n \t\n \tvoid collectResultInfos(ResultInfoCollector collector);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/235/IQuery.java\nindex e8c3dbdfa4..1410e9e252 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/235/IQuery.java\n@@ -2,31 +2,29 @@ package com.bakdata.conquery.models.query;\n \n import java.util.HashSet;\n import java.util.Set;\n-\n import com.bakdata.conquery.apiv1.SubmittedQuery;\n import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n \n-public interface IQuery extends Visitable, SubmittedQuery{\n+public interface IQuery extends Visitable, SubmittedQuery {\n+\n+    IQuery resolve(QueryResolveContext context);\n+\n+    QueryPlan createQueryPlan(QueryPlanContext context);\n+    void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n \n-\tIQuery resolve(QueryResolveContext context);\n-\tQueryPlan createQueryPlan(QueryPlanContext context);\n-\t\n-\tvoid collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n-\t\n-\tdefault Set<ManagedExecutionId> collectRequiredQueries() {\n-\t\tHashSet<ManagedExecutionId> set = new HashSet<>();\n-\t\tthis.collectRequiredQueries(set);\n-\t\treturn set;\n-\t}\n+    default Set<ManagedExecutionId> collectRequiredQueries() {\n+        HashSet<ManagedExecutionId> set = new HashSet<>();\n+        this.collectRequiredQueries(set);\n+        return set;\n+    }\n \n-\tdefault ResultInfoCollector collectResultInfos(PrintSettings config) {\n-\t\tResultInfoCollector collector = new ResultInfoCollector(config);\n-\t\tcollectResultInfos(collector);\n-\t\treturn collector;\n-\t}\n-\t\n-\tvoid collectResultInfos(ResultInfoCollector collector);\n+    default ResultInfoCollector collectResultInfos(PrintSettings config) {\n+        ResultInfoCollector collector = new ResultInfoCollector(config);\n+        collectResultInfos(collector);\n+        return collector;\n+    }\n \n-}\n+    void collectResultInfos(ResultInfoCollector collector);\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/235/IQuery.java\nindex e8c3dbdfa4..9d4ea951ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/235/IQuery.java\n@@ -8,13 +8,13 @@ import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n \n-public interface IQuery extends Visitable, SubmittedQuery{\n+public interface IQuery extends Visitable, SubmittedQuery {\n \n \tIQuery resolve(QueryResolveContext context);\n \tQueryPlan createQueryPlan(QueryPlanContext context);\n-\t\n+\n \tvoid collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n-\t\n+\n \tdefault Set<ManagedExecutionId> collectRequiredQueries() {\n \t\tHashSet<ManagedExecutionId> set = new HashSet<>();\n \t\tthis.collectRequiredQueries(set);\n@@ -26,7 +26,7 @@ public interface IQuery extends Visitable, SubmittedQuery{\n \t\tcollectResultInfos(collector);\n \t\treturn collector;\n \t}\n-\t\n+\n \tvoid collectResultInfos(ResultInfoCollector collector);\n \n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/235/IQuery.java\nindex e8c3dbdfa4..9d4ea951ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/235/IQuery.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/235/IQuery.java\n@@ -8,13 +8,13 @@ import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n \n-public interface IQuery extends Visitable, SubmittedQuery{\n+public interface IQuery extends Visitable, SubmittedQuery {\n \n \tIQuery resolve(QueryResolveContext context);\n \tQueryPlan createQueryPlan(QueryPlanContext context);\n-\t\n+\n \tvoid collectRequiredQueries(Set<ManagedExecutionId> requiredQueries);\n-\t\n+\n \tdefault Set<ManagedExecutionId> collectRequiredQueries() {\n \t\tHashSet<ManagedExecutionId> set = new HashSet<>();\n \t\tthis.collectRequiredQueries(set);\n@@ -26,7 +26,7 @@ public interface IQuery extends Visitable, SubmittedQuery{\n \t\tcollectResultInfos(collector);\n \t\treturn collector;\n \t}\n-\t\n+\n \tvoid collectResultInfos(ResultInfoCollector collector);\n \n }\n",
            "diff_size": 4
        }
    ]
}