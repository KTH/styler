{
    "error_id": "392",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/392/TaskContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/392/TaskContext.java\nindex 97c547af95..4cc052c8f6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/392/TaskContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/392/TaskContext.java\n@@ -45,278 +45,286 @@ import java.util.concurrent.atomic.AtomicLong;\n  * The context for task of worker side.\n  */\n public class TaskContext {\n-  private final TaskId taskId;\n-  private final TaskIdProto taskIdProto;\n-\n-\n-  @SuppressWarnings(\"rawtypes\")\n-  private Reader reader;\n-  private final com.tencent.angel.psagent.task.TaskContext context;\n-\n-  /**\n-   * Instantiates context with task id.\n-   *\n-   * @param taskId the task id\n-   */\n-  public TaskContext(TaskId taskId) {\n-    this.taskId = taskId;\n-    this.taskIdProto = ProtobufUtil.convertToIdProto(taskId);\n-    context = PSAgentContext.get().getTaskContext(taskId.getIndex());\n-  }\n-\n-  /**\n-   * Instantiates context with task meta.\n-   *\n-   * @param taskMeta the task meta\n-   */\n-  public TaskContext(TaskMetaInfoProto taskMeta) {\n-    taskIdProto = taskMeta.getTaskId();\n-    taskId = ProtobufUtil.convertToId(taskIdProto);\n-    context = PSAgentContext.get().getTaskContext(taskId.getIndex());\n-    context.setEpoch(taskMeta.getIteration());\n-    List<MatrixClock> matrixClocks = taskMeta.getMatrixClockList();\n-    int size = matrixClocks.size();\n-    for(int i = 0; i < size; i++){\n-      context.setMatrixClock(matrixClocks.get(i).getMatrixId(), matrixClocks.get(i).getClock());\n+    private final TaskId taskId;\n+    private final TaskIdProto taskIdProto;\n+\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    private Reader reader;\n+    private final com.tencent.angel.psagent.task.TaskContext context;\n+\n+    /**\n+     * Instantiates context with task id.\n+     *\n+     * @param taskId the task id\n+     */\n+    public TaskContext(TaskId taskId) {\n+        this.taskId = taskId;\n+        this.taskIdProto = ProtobufUtil.convertToIdProto(taskId);\n+        context = PSAgentContext.get().getTaskContext(taskId.getIndex());\n     }\n-  }\n-\n-  /**\n-   * Gets reader.\n-   *\n-   * @param <K> key type\n-   * @param <V> value type\n-   * @return the reader\n-   * @throws ClassNotFoundException\n-   * @throws IOException\n-   * @throws InterruptedException\n-   */\n-  @SuppressWarnings(\"unchecked\")\n-  public <K, V> Reader<K, V> getReader() throws ClassNotFoundException, IOException,\n-      InterruptedException {\n-    if (reader == null) {\n-      DataBlockManager dataBlockManager = WorkerContext.get().getDataBlockManager();\n-      reader = dataBlockManager.getReader(taskId);\n+\n+    /**\n+     * Instantiates context with task meta.\n+     *\n+     * @param taskMeta the task meta\n+     */\n+    public TaskContext(TaskMetaInfoProto taskMeta) {\n+        taskIdProto = taskMeta.getTaskId();\n+        taskId = ProtobufUtil.convertToId(taskIdProto);\n+        context = PSAgentContext.get().getTaskContext(taskId.getIndex());\n+        context.setEpoch(taskMeta.getIteration());\n+        List<MatrixClock> matrixClocks = taskMeta.getMatrixClockList();\n+        int size = matrixClocks.size();\n+        for (int i = 0; i < size; i++) {\n+            context.setMatrixClock(matrixClocks.get(i).getMatrixId(),\n+                    matrixClocks.get(i).getClock());\n+        }\n+    }\n+\n+    /**\n+     * Gets reader.\n+     *\n+     * @param <K> key type\n+     * @param <V> value type\n+     * @return the reader\n+     * @throws ClassNotFoundException\n+     * @throws IOException\n+     * @throws InterruptedException\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public <K, V> Reader<K, V> getReader() throws ClassNotFoundException, IOException,\n+            InterruptedException {\n+        if (reader == null) {\n+            DataBlockManager dataBlockManager = WorkerContext.get().getDataBlockManager();\n+            reader = dataBlockManager.getReader(taskId);\n+        }\n+        return reader;\n+    }\n+\n+    /**\n+     * Create matrix.\n+     *\n+     * @param matrixContext the matrix context\n+     * @param timeOutMs     the time out ms\n+     * @return the matrix meta\n+     * @throws ServiceException\n+     * @throws TimeOutException\n+     * @throws InterruptedException\n+     * @throws IOException\n+     */\n+    public MatrixMeta createMatrix(MatrixContext matrixContext, long timeOutMs)\n+            throws ServiceException, TimeOutException, InterruptedException, IOException {\n+        MasterClient masterClient = WorkerContext.get().getPSAgent().getMasterClient();\n+        MatrixMeta matrix = masterClient.createMatrix(matrixContext, timeOutMs);\n+        return matrix;\n+    }\n+\n+    /**\n+     * Release matrix.\n+     *\n+     * @param matrix the matrix\n+     * @return the matrix meta\n+     * @throws ServiceException\n+     * @throws InterruptedException\n+     */\n+    public MatrixMeta releaseMatrix(MatrixMeta matrix)\n+            throws ServiceException, InterruptedException {\n+        MasterClient masterClient = WorkerContext.get().getPSAgent().getMasterClient();\n+        masterClient.releaseMatrix(matrix);\n+        return matrix;\n+    }\n+\n+    /**\n+     * Gets task id.\n+     *\n+     * @return the task id\n+     */\n+    public TaskId getTaskId() {\n+        return taskId;\n+    }\n+\n+    /**\n+     * Gets task's index.\n+     *\n+     * @return the task index\n+     */\n+    public int getTaskIndex() {\n+        return taskId.getIndex();\n+    }\n+\n+    public TaskIdProto getTaskIdProto() {\n+        return taskIdProto;\n+    }\n+\n+    /**\n+     * Gets context of psagent side.\n+     *\n+     * @return the context\n+     */\n+    public com.tencent.angel.psagent.task.TaskContext getContext() {\n+        return context;\n+    }\n+\n+    /**\n+     * Get Task progress\n+     *\n+     * @return Task progress\n+     */\n+    public float getProgress() {\n+        return context.getProgress();\n+    }\n+\n+    /**\n+     * Set Task progress\n+     *\n+     * @param progress Task progress\n+     */\n+    public void setProgress(float progress) {\n+        context.setProgress(progress);\n+    }\n+\n+    /**\n+     * Gets ps agent.\n+     *\n+     * @return the ps agent\n+     */\n+    public PSAgent getPSAgent() {\n+        return WorkerContext.get().getPSAgent();\n+    }\n+\n+    /**\n+     * Gets matrix.\n+     *\n+     * @param matrixName the matrix name\n+     * @return the matrix\n+     * @throws Exception\n+     */\n+    public MatrixClient getMatrix(String matrixName) throws InvalidParameterException {\n+        return WorkerContext.get().getPSAgent().getMatrixClient(matrixName, taskId.getIndex());\n+    }\n+\n+    /**\n+     * Gets conf.\n+     *\n+     * @return the conf\n+     */\n+    public Configuration getConf() {\n+        return WorkerContext.get().getConf();\n+    }\n+\n+    /**\n+     * Gets total task num of current worker\n+     *\n+     * @return the total task num\n+     */\n+    public int getTotalTaskNum() {\n+        return WorkerContext.get().getActiveTaskNum();\n+    }\n+\n+    /**\n+     * Global sync with special matrix,still wait until all matrixes's clock is synchronized.\n+     *\n+     * @param matrixId the matrix id\n+     * @throws InterruptedException\n+     */\n+    public void globalSync(int matrixId) throws InterruptedException {\n+        context.globalSync(matrixId);\n+    }\n+\n+    /**\n+     * Global sync with all matrix.\n+     *\n+     * @throws InterruptedException\n+     */\n+    public void globalSync() throws InterruptedException {\n+        context.globalSync();\n+    }\n+\n+    /**\n+     * Gets iteration num.\n+     *\n+     * @return the iteration\n+     */\n+    public int getEpoch() {\n+        return context.getEpoch();\n+    }\n+\n+    /**\n+     * Increase iteration count.\n+     *\n+     * @throws ServiceException the service exception\n+     */\n+    public void incEpoch() throws ServiceException {\n+        context.increaseEpoch();\n+    }\n+\n+    /**\n+     * Gets all matrix clocks.\n+     *\n+     * @return the clocks\n+     */\n+    public Map<Integer, AtomicInteger> getMatrixClocks() {\n+        return context.getMatrixClocks();\n+    }\n+\n+    /**\n+     * Get matrix clock by matrix id\n+     *\n+     * @param matrixId the matrix id\n+     * @return the clock\n+     */\n+    public int getMatrixClock(int matrixId) {\n+        return context.getMatrixClock(matrixId);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TaskContext [taskId=\" + taskId + \", taskIdProto=\" + taskIdProto + \", context=\"\n+                + context + \"]\";\n+    }\n+\n+    /**\n+     * Update calculate profiling counters\n+     *\n+     * @param sampleNum calculate sample number\n+     * @param useTimeMs the time use to calculate the samples\n+     */\n+    public void updateProfileCounter(int sampleNum, int useTimeMs) {\n+        context.updateProfileCounter(sampleNum, useTimeMs);\n+    }\n+\n+    /**\n+     * Increment the counter\n+     *\n+     * @param counterName counter name\n+     * @param updateValue increment value\n+     */\n+    public void updateCounter(String counterName, int updateValue) {\n+        context.updateCounter(counterName, updateValue);\n+    }\n+\n+    /**\n+     * Update the counter\n+     *\n+     * @param counterName counter name\n+     * @param updateValue new counter value\n+     */\n+    public void setCounter(String counterName, int updateValue) {\n+        context.setCounter(counterName, updateValue);\n+    }\n+\n+    public Map<String, AtomicLong> getCounters() {\n+        return context.getMetrics();\n+    }\n+\n+    /**\n+     * Add a algorithm metric\n+     *\n+     * @param name   metric name\n+     * @param metric metric dependency values\n+     */\n+    public void addAlgoMetric(String name, Metric metric) {\n+        context.addAlgoMetric(name, metric);\n     }\n-    return reader;\n-  }\n-\n-  /**\n-   * Create matrix.\n-   *\n-   * @param matrixContext the matrix context\n-   * @param timeOutMs     the time out ms\n-   * @return the matrix meta\n-   * @throws ServiceException\n-   * @throws TimeOutException\n-   * @throws InterruptedException\n-   * @throws IOException\n-   */\n-  public MatrixMeta createMatrix(MatrixContext matrixContext, long timeOutMs)\n-      throws ServiceException, TimeOutException, InterruptedException, IOException {\n-    MasterClient masterClient = WorkerContext.get().getPSAgent().getMasterClient();\n-    MatrixMeta matrix = masterClient.createMatrix(matrixContext, timeOutMs);\n-    return matrix;\n-  }\n-\n-  /**\n-   * Release matrix.\n-   *\n-   * @param matrix the matrix\n-   * @return the matrix meta\n-   * @throws ServiceException\n-   * @throws InterruptedException\n-   */\n-  public MatrixMeta releaseMatrix(MatrixMeta matrix) throws ServiceException, InterruptedException {\n-    MasterClient masterClient = WorkerContext.get().getPSAgent().getMasterClient();\n-    masterClient.releaseMatrix(matrix);\n-    return matrix;\n-  }\n-\n-  /**\n-   * Gets task id.\n-   *\n-   * @return the task id\n-   */\n-  public TaskId getTaskId() {\n-    return taskId;\n-  }\n-\n-  /**\n-   * Gets task's index.\n-   *\n-   * @return the task index\n-   */\n-  public int getTaskIndex() {\n-    return taskId.getIndex();\n-  }\n-\n-  public TaskIdProto getTaskIdProto() {\n-    return taskIdProto;\n-  }\n-\n-  /**\n-   * Gets context of psagent side.\n-   *\n-   * @return the context\n-   */\n-  public com.tencent.angel.psagent.task.TaskContext getContext() {\n-    return context;\n-  }\n-\n-  /**\n-   * Get Task progress\n-   * @return Task progress\n-   */\n-  public float getProgress() {\n-    return context.getProgress();\n-  }\n-\n-  /**\n-   * Set Task progress\n-   * @param progress  Task progress\n-   */\n-  public void setProgress(float progress) {\n-    context.setProgress(progress);\n-  }\n-\n-  /**\n-   * Gets ps agent.\n-   *\n-   * @return the ps agent\n-   */\n-  public PSAgent getPSAgent() {\n-    return WorkerContext.get().getPSAgent();\n-  }\n-\n-  /**\n-   * Gets matrix.\n-   *\n-   * @param matrixName the matrix name\n-   * @return the matrix\n-   * @throws Exception\n-   */\n-  public MatrixClient getMatrix(String matrixName) throws InvalidParameterException{\n-    return WorkerContext.get().getPSAgent().getMatrixClient(matrixName, taskId.getIndex());\n-  }\n-\n-  /**\n-   * Gets conf.\n-   *\n-   * @return the conf\n-   */\n-  public Configuration getConf() {\n-    return WorkerContext.get().getConf();\n-  }\n-\n-  /**\n-   * Gets total task num of current worker\n-   *\n-   * @return the total task num\n-   */\n-  public int getTotalTaskNum() {\n-    return WorkerContext.get().getActiveTaskNum();\n-  }\n-\n-  /**\n-   * Global sync with special matrix,still wait until all matrixes's clock is synchronized.\n-   *\n-   * @param matrixId the matrix id\n-   * @throws InterruptedException\n-   */\n-  public void globalSync(int matrixId) throws InterruptedException {\n-    context.globalSync(matrixId);\n-  }\n-\n-  /**\n-   * Global sync with all matrix.\n-   *\n-   * @throws InterruptedException\n-   */\n-  public void globalSync() throws InterruptedException {\n-    context.globalSync();\n-  }\n-\n-  /**\n-   * Gets iteration num.\n-   *\n-   * @return the iteration\n-   */\n-  public int getEpoch() {\n-    return context.getEpoch();\n-  }\n-\n-  /**\n-   * Increase iteration count.\n-   *\n-   * @throws ServiceException the service exception\n-   */\n-  public void incEpoch() throws ServiceException{\n-    context.increaseEpoch();\n-  }\n-\n-  /**\n-   * Gets all matrix clocks.\n-   *\n-   * @return the clocks\n-   */\n-  public Map<Integer, AtomicInteger> getMatrixClocks() {\n-    return context.getMatrixClocks();\n-  }\n-\n-  /**\n-   * Get matrix clock by matrix id\n-   *\n-   * @param matrixId the matrix id\n-   * @return the clock\n-   */\n-  public int getMatrixClock(int matrixId){\n-    return context.getMatrixClock(matrixId);\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return \"TaskContext [taskId=\" + taskId + \", taskIdProto=\" + taskIdProto + \", context=\"\n-        + context + \"]\";\n-  }\n-\n-  /**\n-   * Update calculate profiling counters\n-   * @param sampleNum calculate sample number\n-   * @param useTimeMs the time use to calculate the samples\n-   */\n-  public void updateProfileCounter(int sampleNum, int useTimeMs) {\n-    context.updateProfileCounter(sampleNum, useTimeMs);\n-  }\n-\n-  /**\n-   * Increment the counter\n-   * @param counterName counter name\n-   * @param updateValue increment value\n-   */\n-  public void updateCounter(String counterName, int updateValue) {\n-    context.updateCounter(counterName,updateValue);\n-  }\n-\n-  /**\n-   * Update the counter\n-   * @param counterName counter name\n-   * @param updateValue new counter value\n-   */\n-  public void setCounter(String counterName, int updateValue) {\n-    context.setCounter(counterName, updateValue);\n-  }\n-\n-  public Map<String,AtomicLong> getCounters() {\n-    return context.getMetrics();\n-  }\n-\n-  /**\n-   * Add a algorithm metric\n-   * @param name metric name\n-   * @param metric metric dependency values\n-   */\n-  public void addAlgoMetric(String name, Metric metric) {\n-    context.addAlgoMetric(name, metric);\n-  }\n }\n",
            "diff_size": 517
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/392/TaskContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/392/TaskContext.java\nindex 97c547af95..bdbdf0497f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/392/TaskContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/392/TaskContext.java\n@@ -48,8 +48,7 @@ public class TaskContext {\n   private final TaskId taskId;\n   private final TaskIdProto taskIdProto;\n \n-\n-  @SuppressWarnings(\"rawtypes\")\n+@SuppressWarnings(\"rawtypes\")\n   private Reader reader;\n   private final com.tencent.angel.psagent.task.TaskContext context;\n \n@@ -76,7 +75,7 @@ public class TaskContext {\n     context.setEpoch(taskMeta.getIteration());\n     List<MatrixClock> matrixClocks = taskMeta.getMatrixClockList();\n     int size = matrixClocks.size();\n-    for(int i = 0; i < size; i++){\n+    for (int i = 0; i < size; i++) {\n       context.setMatrixClock(matrixClocks.get(i).getMatrixId(), matrixClocks.get(i).getClock());\n     }\n   }\n@@ -94,7 +93,7 @@ public class TaskContext {\n   @SuppressWarnings(\"unchecked\")\n   public <K, V> Reader<K, V> getReader() throws ClassNotFoundException, IOException,\n       InterruptedException {\n-    if (reader == null) {\n+  if (reader == null) {\n       DataBlockManager dataBlockManager = WorkerContext.get().getDataBlockManager();\n       reader = dataBlockManager.getReader(taskId);\n     }\n@@ -196,7 +195,7 @@ public class TaskContext {\n    * @return the matrix\n    * @throws Exception\n    */\n-  public MatrixClient getMatrix(String matrixName) throws InvalidParameterException{\n+  public MatrixClient getMatrix(String matrixName) throws InvalidParameterException {\n     return WorkerContext.get().getPSAgent().getMatrixClient(matrixName, taskId.getIndex());\n   }\n \n@@ -251,7 +250,7 @@ public class TaskContext {\n    *\n    * @throws ServiceException the service exception\n    */\n-  public void incEpoch() throws ServiceException{\n+  public void incEpoch() throws ServiceException {\n     context.increaseEpoch();\n   }\n \n@@ -270,7 +269,7 @@ public class TaskContext {\n    * @param matrixId the matrix id\n    * @return the clock\n    */\n-  public int getMatrixClock(int matrixId){\n+  public int getMatrixClock(int matrixId) {\n     return context.getMatrixClock(matrixId);\n   }\n \n@@ -295,7 +294,7 @@ public class TaskContext {\n    * @param updateValue increment value\n    */\n   public void updateCounter(String counterName, int updateValue) {\n-    context.updateCounter(counterName,updateValue);\n+    context.updateCounter(counterName, updateValue);\n   }\n \n   /**\n@@ -307,7 +306,7 @@ public class TaskContext {\n     context.setCounter(counterName, updateValue);\n   }\n \n-  public Map<String,AtomicLong> getCounters() {\n+  public Map<String, AtomicLong> getCounters() {\n     return context.getMetrics();\n   }\n \n@@ -319,4 +318,4 @@ public class TaskContext {\n   public void addAlgoMetric(String name, Metric metric) {\n     context.addAlgoMetric(name, metric);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 72.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 95.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "GenericWhitespace '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 116.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 131.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 143.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 153.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 167.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 176.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 185.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 195.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 207.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 217.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 227.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 238.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 248.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 258.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 268.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 278.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 289.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 304.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "308",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 314.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 324.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "332",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 338.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/392/TaskContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/392/TaskContext.java\nindex 97c547af95..c275db945a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/392/TaskContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/392/TaskContext.java\n@@ -34,7 +34,6 @@ import com.tencent.angel.worker.WorkerContext;\n import com.tencent.angel.worker.storage.DataBlockManager;\n import com.tencent.angel.worker.storage.Reader;\n import org.apache.hadoop.conf.Configuration;\n-\n import java.io.IOException;\n import java.util.List;\n import java.util.Map;\n@@ -44,42 +43,43 @@ import java.util.concurrent.atomic.AtomicLong;\n /**\n  * The context for task of worker side.\n  */\n-public class TaskContext {\n-  private final TaskId taskId;\n-  private final TaskIdProto taskIdProto;\n \n+public class TaskContext {\n+    private final TaskId taskId;\n+    private final TaskIdProto taskIdProto;\n \n-  @SuppressWarnings(\"rawtypes\")\n-  private Reader reader;\n-  private final com.tencent.angel.psagent.task.TaskContext context;\n+    @SuppressWarnings(\"rawtypes\") private Reader reader;\n+    private final com.tencent.angel.psagent.task.TaskContext context;\n \n   /**\n    * Instantiates context with task id.\n    *\n    * @param taskId the task id\n    */\n-  public TaskContext(TaskId taskId) {\n+\n+    public TaskContext(TaskId taskId) {\n     this.taskId = taskId;\n     this.taskIdProto = ProtobufUtil.convertToIdProto(taskId);\n     context = PSAgentContext.get().getTaskContext(taskId.getIndex());\n-  }\n+    }\n \n   /**\n    * Instantiates context with task meta.\n    *\n    * @param taskMeta the task meta\n    */\n-  public TaskContext(TaskMetaInfoProto taskMeta) {\n+\n+    public TaskContext(TaskMetaInfoProto taskMeta) {\n     taskIdProto = taskMeta.getTaskId();\n     taskId = ProtobufUtil.convertToId(taskIdProto);\n     context = PSAgentContext.get().getTaskContext(taskId.getIndex());\n     context.setEpoch(taskMeta.getIteration());\n     List<MatrixClock> matrixClocks = taskMeta.getMatrixClockList();\n     int size = matrixClocks.size();\n-    for(int i = 0; i < size; i++){\n-      context.setMatrixClock(matrixClocks.get(i).getMatrixId(), matrixClocks.get(i).getClock());\n+    for (int i = 0; i < size; i++) {\n+        context.setMatrixClock(matrixClocks.get(i).getMatrixId(), matrixClocks.get(i).getClock());\n+    }\n     }\n-  }\n \n   /**\n    * Gets reader.\n@@ -91,15 +91,15 @@ public class TaskContext {\n    * @throws IOException\n    * @throws InterruptedException\n    */\n-  @SuppressWarnings(\"unchecked\")\n-  public <K, V> Reader<K, V> getReader() throws ClassNotFoundException, IOException,\n-      InterruptedException {\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public<K, V> Reader<K, V> getReader() throws ClassNotFoundException, IOException, InterruptedException {\n     if (reader == null) {\n-      DataBlockManager dataBlockManager = WorkerContext.get().getDataBlockManager();\n-      reader = dataBlockManager.getReader(taskId);\n+        DataBlockManager dataBlockManager = WorkerContext.get().getDataBlockManager();\n+        reader = dataBlockManager.getReader(taskId);\n     }\n     return reader;\n-  }\n+    }\n \n   /**\n    * Create matrix.\n@@ -112,12 +112,12 @@ public class TaskContext {\n    * @throws InterruptedException\n    * @throws IOException\n    */\n-  public MatrixMeta createMatrix(MatrixContext matrixContext, long timeOutMs)\n-      throws ServiceException, TimeOutException, InterruptedException, IOException {\n+\n+    public MatrixMeta createMatrix(MatrixContext matrixContext, long timeOutMs) throws ServiceException, TimeOutException, InterruptedException, IOException {\n     MasterClient masterClient = WorkerContext.get().getPSAgent().getMasterClient();\n     MatrixMeta matrix = masterClient.createMatrix(matrixContext, timeOutMs);\n     return matrix;\n-  }\n+    }\n \n   /**\n    * Release matrix.\n@@ -127,67 +127,74 @@ public class TaskContext {\n    * @throws ServiceException\n    * @throws InterruptedException\n    */\n-  public MatrixMeta releaseMatrix(MatrixMeta matrix) throws ServiceException, InterruptedException {\n+\n+    public MatrixMeta releaseMatrix(MatrixMeta matrix) throws ServiceException, InterruptedException {\n     MasterClient masterClient = WorkerContext.get().getPSAgent().getMasterClient();\n     masterClient.releaseMatrix(matrix);\n     return matrix;\n-  }\n+    }\n \n   /**\n    * Gets task id.\n    *\n    * @return the task id\n    */\n-  public TaskId getTaskId() {\n+\n+    public TaskId getTaskId() {\n     return taskId;\n-  }\n+    }\n \n   /**\n    * Gets task's index.\n    *\n    * @return the task index\n    */\n-  public int getTaskIndex() {\n+\n+    public int getTaskIndex() {\n     return taskId.getIndex();\n-  }\n+    }\n \n-  public TaskIdProto getTaskIdProto() {\n+    public TaskIdProto getTaskIdProto() {\n     return taskIdProto;\n-  }\n+    }\n \n   /**\n    * Gets context of psagent side.\n    *\n    * @return the context\n    */\n-  public com.tencent.angel.psagent.task.TaskContext getContext() {\n+\n+    public com.tencent.angel.psagent.task.TaskContext getContext() {\n     return context;\n-  }\n+    }\n \n   /**\n    * Get Task progress\n    * @return Task progress\n    */\n-  public float getProgress() {\n+\n+    public float getProgress() {\n     return context.getProgress();\n-  }\n+    }\n \n   /**\n    * Set Task progress\n    * @param progress  Task progress\n    */\n-  public void setProgress(float progress) {\n+\n+    public void setProgress(float progress) {\n     context.setProgress(progress);\n-  }\n+    }\n \n   /**\n    * Gets ps agent.\n    *\n    * @return the ps agent\n    */\n-  public PSAgent getPSAgent() {\n+\n+    public PSAgent getPSAgent() {\n     return WorkerContext.get().getPSAgent();\n-  }\n+    }\n \n   /**\n    * Gets matrix.\n@@ -196,27 +203,30 @@ public class TaskContext {\n    * @return the matrix\n    * @throws Exception\n    */\n-  public MatrixClient getMatrix(String matrixName) throws InvalidParameterException{\n+\n+    public MatrixClient getMatrix(String matrixName) throws InvalidParameterException {\n     return WorkerContext.get().getPSAgent().getMatrixClient(matrixName, taskId.getIndex());\n-  }\n+    }\n \n   /**\n    * Gets conf.\n    *\n    * @return the conf\n    */\n-  public Configuration getConf() {\n+\n+    public Configuration getConf() {\n     return WorkerContext.get().getConf();\n-  }\n+    }\n \n   /**\n    * Gets total task num of current worker\n    *\n    * @return the total task num\n    */\n-  public int getTotalTaskNum() {\n+\n+    public int getTotalTaskNum() {\n     return WorkerContext.get().getActiveTaskNum();\n-  }\n+    }\n \n   /**\n    * Global sync with special matrix,still wait until all matrixes's clock is synchronized.\n@@ -224,45 +234,50 @@ public class TaskContext {\n    * @param matrixId the matrix id\n    * @throws InterruptedException\n    */\n-  public void globalSync(int matrixId) throws InterruptedException {\n+\n+    public void globalSync(int matrixId) throws InterruptedException {\n     context.globalSync(matrixId);\n-  }\n+    }\n \n   /**\n    * Global sync with all matrix.\n    *\n    * @throws InterruptedException\n    */\n-  public void globalSync() throws InterruptedException {\n+\n+    public void globalSync() throws InterruptedException {\n     context.globalSync();\n-  }\n+    }\n \n   /**\n    * Gets iteration num.\n    *\n    * @return the iteration\n    */\n-  public int getEpoch() {\n+\n+    public int getEpoch() {\n     return context.getEpoch();\n-  }\n+    }\n \n   /**\n    * Increase iteration count.\n    *\n    * @throws ServiceException the service exception\n    */\n-  public void incEpoch() throws ServiceException{\n+\n+    public void incEpoch() throws ServiceException {\n     context.increaseEpoch();\n-  }\n+    }\n \n   /**\n    * Gets all matrix clocks.\n    *\n    * @return the clocks\n    */\n-  public Map<Integer, AtomicInteger> getMatrixClocks() {\n+\n+    public Map<Integer, AtomicInteger> getMatrixClocks() {\n     return context.getMatrixClocks();\n-  }\n+    }\n \n   /**\n    * Get matrix clock by matrix id\n@@ -270,53 +285,58 @@ public class TaskContext {\n    * @param matrixId the matrix id\n    * @return the clock\n    */\n-  public int getMatrixClock(int matrixId){\n+\n+    public int getMatrixClock(int matrixId) {\n     return context.getMatrixClock(matrixId);\n-  }\n+    }\n \n-  @Override\n-  public String toString() {\n-    return \"TaskContext [taskId=\" + taskId + \", taskIdProto=\" + taskIdProto + \", context=\"\n-        + context + \"]\";\n-  }\n+    @Override\n+    public String toString() {\n+    return \"TaskContext [taskId=\" + taskId + \", taskIdProto=\" + taskIdProto + \", context=\" + context + \"]\";\n+    }\n \n   /**\n    * Update calculate profiling counters\n    * @param sampleNum calculate sample number\n    * @param useTimeMs the time use to calculate the samples\n    */\n-  public void updateProfileCounter(int sampleNum, int useTimeMs) {\n+\n+    public void updateProfileCounter(int sampleNum, int useTimeMs) {\n     context.updateProfileCounter(sampleNum, useTimeMs);\n-  }\n+    }\n \n   /**\n    * Increment the counter\n    * @param counterName counter name\n    * @param updateValue increment value\n    */\n-  public void updateCounter(String counterName, int updateValue) {\n-    context.updateCounter(counterName,updateValue);\n-  }\n+\n+    public void updateCounter(String counterName, int updateValue) {\n+    context.updateCounter(counterName, updateValue);\n+    }\n \n   /**\n    * Update the counter\n    * @param counterName counter name\n    * @param updateValue new counter value\n    */\n-  public void setCounter(String counterName, int updateValue) {\n+\n+    public void setCounter(String counterName, int updateValue) {\n     context.setCounter(counterName, updateValue);\n-  }\n+    }\n \n-  public Map<String,AtomicLong> getCounters() {\n+    public Map<String, AtomicLong> getCounters() {\n     return context.getMetrics();\n-  }\n+    }\n \n   /**\n    * Add a algorithm metric\n    * @param name metric name\n    * @param metric metric dependency values\n    */\n-  public void addAlgoMetric(String name, Metric metric) {\n+\n+    public void addAlgoMetric(String name, Metric metric) {\n     context.addAlgoMetric(name, metric);\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 100
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}