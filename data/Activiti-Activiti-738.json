{
    "error_id": "738",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\npublic class CompensateEventDefinition extends EventDefinition {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/738/CompensateEventDefinition.java\nindex eace457131..3105f30346 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/738/CompensateEventDefinition.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class CompensateEventDefinition extends EventDefinition {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/738/CompensateEventDefinition.java\nindex eace457131..7b7dc84bb2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/738/CompensateEventDefinition.java\n@@ -1,47 +1,48 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class CompensateEventDefinition extends EventDefinition {\n \n-  protected String activityRef;\n-  protected boolean waitForCompletion = true;\n+    protected String activityRef;\n+    protected boolean waitForCompletion = true;\n \n-  public String getActivityRef() {\n-    return activityRef;\n-  }\n+    public String getActivityRef() {\n+        return activityRef;\n+    }\n \n-  public void setActivityRef(String activityRef) {\n-    this.activityRef = activityRef;\n-  }\n+    public void setActivityRef(String activityRef) {\n+        this.activityRef = activityRef;\n+    }\n \n-  public boolean isWaitForCompletion() {\n-    return waitForCompletion;\n-  }\n+    public boolean isWaitForCompletion() {\n+        return waitForCompletion;\n+    }\n \n-  public void setWaitForCompletion(boolean waitForCompletion) {\n-    this.waitForCompletion = waitForCompletion;\n-  }\n+    public void setWaitForCompletion(boolean waitForCompletion) {\n+        this.waitForCompletion = waitForCompletion;\n+    }\n \n-  public CompensateEventDefinition clone() {\n-    CompensateEventDefinition clone = new CompensateEventDefinition();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public CompensateEventDefinition clone() {\n+        CompensateEventDefinition clone = new CompensateEventDefinition();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(CompensateEventDefinition otherDefinition) {\n-    super.setValues(otherDefinition);\n-    setActivityRef(otherDefinition.getActivityRef());\n-    setWaitForCompletion(otherDefinition.isWaitForCompletion());\n-  }\n+    public void setValues(CompensateEventDefinition otherDefinition) {\n+        super.setValues(otherDefinition);\n+        setActivityRef(otherDefinition.getActivityRef());\n+        setWaitForCompletion(otherDefinition.isWaitForCompletion());\n+    }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/738/CompensateEventDefinition.java\nindex eace457131..a3bc92c4b1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/738/CompensateEventDefinition.java\n@@ -12,36 +12,37 @@\n  */\n package org.activiti.bpmn.model;\n \n-public class CompensateEventDefinition extends EventDefinition {\n \n-  protected String activityRef;\n-  protected boolean waitForCompletion = true;\n+public class CompensateEventDefinition extends EventDefinition {\n \n-  public String getActivityRef() {\n+    protected String activityRef;\n+    protected boolean waitForCompletion = true;\n+    public String getActivityRef() {\n     return activityRef;\n-  }\n+    }\n \n-  public void setActivityRef(String activityRef) {\n+    public void setActivityRef(String activityRef) {\n     this.activityRef = activityRef;\n-  }\n+    }\n \n-  public boolean isWaitForCompletion() {\n+    public boolean isWaitForCompletion() {\n     return waitForCompletion;\n-  }\n+    }\n \n-  public void setWaitForCompletion(boolean waitForCompletion) {\n+    public void setWaitForCompletion(boolean waitForCompletion) {\n     this.waitForCompletion = waitForCompletion;\n-  }\n+    }\n \n-  public CompensateEventDefinition clone() {\n+    public CompensateEventDefinition clone() {\n     CompensateEventDefinition clone = new CompensateEventDefinition();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(CompensateEventDefinition otherDefinition) {\n+    public void setValues(CompensateEventDefinition otherDefinition) {\n     super.setValues(otherDefinition);\n     setActivityRef(otherDefinition.getActivityRef());\n     setWaitForCompletion(otherDefinition.isWaitForCompletion());\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/738/CompensateEventDefinition.java\nindex eace457131..3105f30346 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/738/CompensateEventDefinition.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class CompensateEventDefinition extends EventDefinition {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/738/CompensateEventDefinition.java\nindex eace457131..3105f30346 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/738/CompensateEventDefinition.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/738/CompensateEventDefinition.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class CompensateEventDefinition extends EventDefinition {\n",
            "diff_size": 1
        }
    ]
}