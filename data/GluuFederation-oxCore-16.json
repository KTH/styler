{
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "36",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class ExtendedResourceBundle extends ResourceBundle {\n\n\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n\n    private static final String BASE_NAME = \"messages\";\n    private static final Control CONTROL = new CustomControl();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/16/ExtendedResourceBundle.java\nindex c9d1b44f7c..aad3fa77d3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/16/ExtendedResourceBundle.java\n@@ -33,7 +33,7 @@ import org.slf4j.LoggerFactory;\n  */\n public class ExtendedResourceBundle extends ResourceBundle {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n \n     private static final String BASE_NAME = \"messages\";\n     private static final Control CONTROL = new CustomControl();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/16/ExtendedResourceBundle.java\nindex c9d1b44f7c..cbfc0037ff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/16/ExtendedResourceBundle.java\n@@ -33,7 +33,7 @@ import org.slf4j.LoggerFactory;\n  */\n public class ExtendedResourceBundle extends ResourceBundle {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n \n     private static final String BASE_NAME = \"messages\";\n     private static final Control CONTROL = new CustomControl();\n@@ -106,7 +106,7 @@ public class ExtendedResourceBundle extends ResourceBundle {\n     }\n \n     @Override\n-    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n     public Enumeration<String> getKeys() {\n         if (properties != null) {\n             Set keys = properties.keySet();\n@@ -145,7 +145,7 @@ public class ExtendedResourceBundle extends ResourceBundle {\n \n         @Override\n         public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload)\n-                throws IllegalAccessException, InstantiationException, IOException {\n+            throws IllegalAccessException, InstantiationException, IOException {\n             String resourceName = toResourceName(toBundleName(baseName, locale), \"properties\");\n             Properties properties = new Properties();\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/16/ExtendedResourceBundle.java\nindex c9d1b44f7c..f975872516 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/16/ExtendedResourceBundle.java\n@@ -33,9 +33,9 @@ import org.slf4j.LoggerFactory;\n  */\n public class ExtendedResourceBundle extends ResourceBundle {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n \n-    private static final String BASE_NAME = \"messages\";\n+private static final String BASE_NAME = \"messages\";\n     private static final Control CONTROL = new CustomControl();\n \n     private static Path EXTERNAL_PATH;\n@@ -171,4 +171,4 @@ public class ExtendedResourceBundle extends ResourceBundle {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/16/ExtendedResourceBundle.java\nindex c9d1b44f7c..b90f2ea490 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/16/ExtendedResourceBundle.java\n@@ -18,9 +18,7 @@ import java.util.Properties;\n import java.util.ResourceBundle;\n import java.util.Set;\n import java.util.concurrent.locks.ReentrantLock;\n-\n import javax.faces.context.FacesContext;\n-\n import org.apache.commons.io.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -31,13 +29,13 @@ import org.slf4j.LoggerFactory;\n  * @author Yuriy Movchan\n  * @version 02/23/2018\n  */\n-public class ExtendedResourceBundle extends ResourceBundle {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n \n+public class ExtendedResourceBundle extends ResourceBundle {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n     private static final String BASE_NAME = \"messages\";\n     private static final Control CONTROL = new CustomControl();\n-\n     private static Path EXTERNAL_PATH;\n     private static WatchKey WATCHER = null;\n     private static Date WATCHER_LAST_UPDATE = new Date();\n@@ -50,6 +48,7 @@ public class ExtendedResourceBundle extends ResourceBundle {\n                 EXTERNAL_PATH = customPath;\n             }\n         }\n+\n         try {\n             if (EXTERNAL_PATH != null) {\n                 WATCHER = EXTERNAL_PATH.register(FileSystems.getDefault().newWatchService(), StandardWatchEventKinds.ENTRY_MODIFY);\n@@ -72,7 +71,6 @@ public class ExtendedResourceBundle extends ResourceBundle {\n     private ExtendedResourceBundle(Path externalResource, Properties properties) {\n         this.externalResource = externalResource;\n         this.properties = properties;\n-\n         this.lastUpdate = new Date();\n     }\n \n@@ -81,7 +79,6 @@ public class ExtendedResourceBundle extends ResourceBundle {\n         if (properties != null) {\n             if ((EXTERNAL_PATH != null) && (WATCHER != null)) {\n                 checkWatcher();\n-\n                 updateLock.lock();\n                 try {\n                     if (WATCHER_LAST_UPDATE.after(this.lastUpdate)) {\n@@ -106,10 +103,11 @@ public class ExtendedResourceBundle extends ResourceBundle {\n     }\n \n     @Override\n-    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\"})\n     public Enumeration<String> getKeys() {\n         if (properties != null) {\n             Set keys = properties.keySet();\n+\n             return Collections.enumeration(keys);\n         }\n \n@@ -144,11 +142,9 @@ public class ExtendedResourceBundle extends ResourceBundle {\n     protected static class CustomControl extends Control {\n \n         @Override\n-        public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload)\n-                throws IllegalAccessException, InstantiationException, IOException {\n+        public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException {\n             String resourceName = toResourceName(toBundleName(baseName, locale), \"properties\");\n             Properties properties = new Properties();\n-\n             InputStream input = null;\n             try {\n                 input = loader.getResourceAsStream(resourceName);\n@@ -165,10 +161,9 @@ public class ExtendedResourceBundle extends ResourceBundle {\n                 externalResource = EXTERNAL_PATH.resolve(resourceName);\n             }\n             loadPropertiesFromFile(properties, externalResource);\n-\n             return new ExtendedResourceBundle(externalResource, properties);\n         }\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/16/ExtendedResourceBundle.java\nindex c9d1b44f7c..aad3fa77d3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/16/ExtendedResourceBundle.java\n@@ -33,7 +33,7 @@ import org.slf4j.LoggerFactory;\n  */\n public class ExtendedResourceBundle extends ResourceBundle {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n \n     private static final String BASE_NAME = \"messages\";\n     private static final Control CONTROL = new CustomControl();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/16/ExtendedResourceBundle.java\nindex c9d1b44f7c..3b06cb7067 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/16/ExtendedResourceBundle.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/16/ExtendedResourceBundle.java\n@@ -33,7 +33,7 @@ import org.slf4j.LoggerFactory;\n  */\n public class ExtendedResourceBundle extends ResourceBundle {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n+private static final Logger LOG = LoggerFactory.getLogger(ExtendedResourceBundle.class);\n \n     private static final String BASE_NAME = \"messages\";\n     private static final Control CONTROL = new CustomControl();\n",
            "diff_size": 1
        }
    ]
}