{
    "error_id": "84",
    "information": {
        "errors": [
            {
                "line": "49",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "        super(p, id);\n    }\n    \n    /**\n     * Gets the literal value.\n     * @return the integer literal",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler/84/ASTIntegerLiteral.java\nindex cc99b6bd0e..a0684468c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler/84/ASTIntegerLiteral.java\n@@ -1,63 +1,63 @@\n-/**\r\n- * Copyright 2014 Internet2\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parser;\r\n-\r\n-/**\r\n- * @deprecated Only for use in maintaining binary compatibility - should not actually be used - will be removed in 3.0\r\n- */\r\n-@Deprecated\r\n-public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\r\n-    /** The type literal value. */\r\n-    Integer literal = null;\r\n-\r\n-    ASTIntegerLiteral(int id) {\r\n-        super(id);\r\n-    }\r\n-\r\n-    ASTIntegerLiteral(Parser p, int id) {\r\n-        super(p, id);\r\n-    }\r\n-    \r\n-    /**\r\n-     * Gets the literal value.\r\n-     * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n-        return literal;\r\n-    }\r\n-\r\n-    /** {@inheritDoc} */\r\n-    @Override\r\n-    public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n-        return visitor.visit(this, data);\r\n-    }\r\n-}\r\n+/**\n+ * Copyright 2014 Internet2\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parser;\n+\n+/**\n+ * @deprecated Only for use in maintaining binary compatibility - should not actually be used - will be removed in 3.0\n+ */\n+@Deprecated\n+public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\n+    /** The type literal value. */\n+    Integer literal = null;\n+\n+    ASTIntegerLiteral(int id) {\n+        super(id);\n+    }\n+\n+    ASTIntegerLiteral(Parser p, int id) {\n+        super(p, id);\n+    }\n+    /**\n+     * Gets the literal value.\n+     * @return the integer literal\n+     */\n+\n+    public Integer getLiteral() {\n+        return literal;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public Object jjtAccept(ParserVisitor visitor, Object data) {\n+        return visitor.visit(this, data);\n+    }\n+}\n",
            "diff_size": 63
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/intellij/84/ASTIntegerLiteral.java\nindex cc99b6bd0e..c7c9f38b94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/intellij/84/ASTIntegerLiteral.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -29,6 +29,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parser;\r\n \r\n /**\r\n@@ -36,28 +37,28 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parse\n  */\r\n @Deprecated\r\n public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\r\n-    /** The type literal value. */\r\n-    Integer literal = null;\r\n+  /** The type literal value. */\r\n+  Integer literal = null;\r\n+\r\n+  ASTIntegerLiteral(int id) {\r\n+    super(id);\r\n+  }\r\n \r\n-    ASTIntegerLiteral(int id) {\r\n-        super(id);\r\n-    }\r\n+  ASTIntegerLiteral(Parser p, int id) {\r\n+    super(p, id);\r\n+  }\r\n \r\n-    ASTIntegerLiteral(Parser p, int id) {\r\n-        super(p, id);\r\n-    }\r\n-    \r\n-    /**\r\n-     * Gets the literal value.\r\n-     * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n-        return literal;\r\n-    }\r\n+  /**\r\n+   * Gets the literal value.\r\n+   * @return the integer literal\r\n+   */\r\n+  public Integer getLiteral() {\r\n+    return literal;\r\n+  }\r\n \r\n-    /** {@inheritDoc} */\r\n-    @Override\r\n-    public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n-        return visitor.visit(this, data);\r\n-    }\r\n+  /** {@inheritDoc} */\r\n+  @Override\r\n+  public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n+    return visitor.visit(this, data);\r\n+  }\r\n }\r\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/naturalize/84/ASTIntegerLiteral.java\nindex cc99b6bd0e..56066a0f94 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/naturalize/84/ASTIntegerLiteral.java\n@@ -45,13 +45,13 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n \r\n     ASTIntegerLiteral(Parser p, int id) {\r\n         super(p, id);\r\n-    }\r\n-    \r\n-    /**\r\n+    }\n+\n+/**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n+     */\n+public Integer getLiteral() {\r\n         return literal;\r\n     }\r\n \r\n@@ -60,4 +60,4 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n     public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n         return visitor.visit(this, data);\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/codebuff/84/ASTIntegerLiteral.java\nindex cc99b6bd0e..3dd29465ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/codebuff/84/ASTIntegerLiteral.java\n@@ -33,31 +33,37 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parse\n \r\n /**\r\n  * @deprecated Only for use in maintaining binary compatibility - should not actually be used - will be removed in 3.0\r\n- */\r\n-@Deprecated\r\n+ */\n+\n+\n+@Deprecated\n public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\r\n-    /** The type literal value. */\r\n-    Integer literal = null;\r\n-\r\n-    ASTIntegerLiteral(int id) {\r\n-        super(id);\r\n-    }\r\n-\r\n-    ASTIntegerLiteral(Parser p, int id) {\r\n-        super(p, id);\r\n+    /** The type literal value. */\n+    Integer literal = null;\n+\n+    ASTIntegerLiteral(int id) {\n+        super(id);\n+    }\n+\n+    ASTIntegerLiteral(Parser p, int id) {\n+        super(p, id);\n     }\r\n     \r\n     /**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n-        return literal;\r\n+     */\n+\n+\n+    public Integer getLiteral() {\n+    return literal;\n     }\r\n \r\n-    /** {@inheritDoc} */\r\n-    @Override\r\n-    public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n-        return visitor.visit(this, data);\r\n-    }\r\n-}\r\n+    /** {@inheritDoc} */\n+\n+\n+    @Override\n+    public Object jjtAccept(ParserVisitor visitor, Object data) {\n+        return visitor.visit(this, data);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler_random/84/ASTIntegerLiteral.java\nindex cc99b6bd0e..a0684468c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/84/ASTIntegerLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler_random/84/ASTIntegerLiteral.java\n@@ -1,63 +1,63 @@\n-/**\r\n- * Copyright 2014 Internet2\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to You under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parser;\r\n-\r\n-/**\r\n- * @deprecated Only for use in maintaining binary compatibility - should not actually be used - will be removed in 3.0\r\n- */\r\n-@Deprecated\r\n-public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\r\n-    /** The type literal value. */\r\n-    Integer literal = null;\r\n-\r\n-    ASTIntegerLiteral(int id) {\r\n-        super(id);\r\n-    }\r\n-\r\n-    ASTIntegerLiteral(Parser p, int id) {\r\n-        super(p, id);\r\n-    }\r\n-    \r\n-    /**\r\n-     * Gets the literal value.\r\n-     * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n-        return literal;\r\n-    }\r\n-\r\n-    /** {@inheritDoc} */\r\n-    @Override\r\n-    public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n-        return visitor.visit(this, data);\r\n-    }\r\n-}\r\n+/**\n+ * Copyright 2014 Internet2\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parser;\n+\n+/**\n+ * @deprecated Only for use in maintaining binary compatibility - should not actually be used - will be removed in 3.0\n+ */\n+@Deprecated\n+public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\n+    /** The type literal value. */\n+    Integer literal = null;\n+\n+    ASTIntegerLiteral(int id) {\n+        super(id);\n+    }\n+\n+    ASTIntegerLiteral(Parser p, int id) {\n+        super(p, id);\n+    }\n+    /**\n+     * Gets the literal value.\n+     * @return the integer literal\n+     */\n+\n+    public Integer getLiteral() {\n+        return literal;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public Object jjtAccept(ParserVisitor visitor, Object data) {\n+        return visitor.visit(this, data);\n+    }\n+}\n",
            "diff_size": 63
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}