{
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "90",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  }\n\n  static ElementWiseProxyTransform droppingUntilCharacter(char character, String rawPrefix) {\n    return new ElementWiseProxyTransform() {\n\n      @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/26/ElementWiseProxyTransform.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/26/ElementWiseProxyTransform.java\nindex b08dbe33af..24c110da87 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/26/ElementWiseProxyTransform.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/26/ElementWiseProxyTransform.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.transform;\n \n import cz.o2.proxima.annotations.Evolving;\n@@ -87,7 +88,8 @@ public interface ElementWiseProxyTransform extends ProxyTransform, DataOperatorA\n     };\n   }\n \n-  static ElementWiseProxyTransform droppingUntilCharacter(char character, String rawPrefix) {\n+  static ElementWiseProxyTransform droppingUntilCharacter(char character,\n+                                                          String rawPrefix) {\n     return new ElementWiseProxyTransform() {\n \n       @Override\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/26/ElementWiseProxyTransform.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/26/ElementWiseProxyTransform.java\nindex b08dbe33af..2da90b13ce 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/26/ElementWiseProxyTransform.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/26/ElementWiseProxyTransform.java\n@@ -146,4 +146,4 @@ public interface ElementWiseProxyTransform extends ProxyTransform, DataOperatorA\n   default void setup(AttributeDescriptor<?> target) {\n     // nop\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 73.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 136.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 146.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 155.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/26/ElementWiseProxyTransform.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/26/ElementWiseProxyTransform.java\nindex b08dbe33af..94fe902d9c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/26/ElementWiseProxyTransform.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/26/ElementWiseProxyTransform.java\n@@ -19,45 +19,48 @@ import cz.o2.proxima.annotations.Evolving;\n import cz.o2.proxima.functional.UnaryFunction;\n import cz.o2.proxima.repository.AttributeDescriptor;\n \n+\n @Evolving\n public interface ElementWiseProxyTransform extends ProxyTransform, DataOperatorAgnostic {\n \n-  static ElementWiseProxyTransform identity() {\n+\n+    static ElementWiseProxyTransform identity() {\n     return new ElementWiseProxyTransform() {\n-      @Override\n-      public String fromProxy(String proxy) {\n-        return proxy;\n-      }\n-\n-      @Override\n-      public String toProxy(String raw) {\n-        return raw;\n-      }\n-    };\n-  }\n \n-  static ElementWiseProxyTransform composite(ElementWiseProxyTransform... transforms) {\n+        @Override\n+        public String fromProxy(String proxy) {\n+               return proxy;\n+        }\n+\n+        @Override\n+        public String toProxy(String raw) {\n+               return raw;\n+        }\n+    };\n+    }\n \n+    static ElementWiseProxyTransform composite(ElementWiseProxyTransform... transforms) {\n     return new ElementWiseProxyTransform() {\n-      @Override\n-      public String fromProxy(String proxy) {\n-        String tmp = proxy;\n-        for (int i = transforms.length - 1; i >= 0; i--) {\n-          tmp = transforms[i].fromProxy(tmp);\n+\n+        @Override\n+        public String fromProxy(String proxy) {\n+               String tmp = proxy;\n+               for (int i = transforms.length - 1; i >= 0; i--) {\n+            tmp = transforms[i].fromProxy(tmp);\n+               }\n+               return tmp;\n         }\n-        return tmp;\n-      }\n-\n-      @Override\n-      public String toProxy(String raw) {\n-        String tmp = raw;\n-        for (ElementWiseProxyTransform t : transforms) {\n-          tmp = t.toProxy(tmp);\n+\n+        @Override\n+        public String toProxy(String raw) {\n+               String tmp = raw;\n+               for (ElementWiseProxyTransform t : transforms) {\n+            tmp = t.toProxy(tmp);\n+               }\n+               return tmp;\n         }\n-        return tmp;\n-      }\n     };\n-  }\n+    }\n \n   /**\n    * Proxy renaming attribute.\n@@ -66,61 +69,61 @@ public interface ElementWiseProxyTransform extends ProxyTransform, DataOperatorA\n    * @param raw name of raw attribute\n    * @return the transform performing the rename operation\n    */\n-  static ElementWiseProxyTransform renaming(String proxy, String raw) {\n+\n+    static ElementWiseProxyTransform renaming(String proxy, String raw) {\n     return new ElementWiseProxyTransform() {\n \n-      @Override\n-      public String fromProxy(String s) {\n-        if (s.startsWith(proxy)) {\n-          return raw + s.substring(proxy.length());\n+        @Override\n+        public String fromProxy(String s) {\n+               if (s.startsWith(proxy)) {\n+            return raw + s.substring(proxy.length());\n+               }\n+               return s;\n         }\n-        return s;\n-      }\n \n-      @Override\n-      public String toProxy(String s) {\n-        if (s.startsWith(raw)) {\n-          return proxy + s.substring(raw.length());\n+        @Override\n+        public String toProxy(String s) {\n+               if (s.startsWith(raw)) {\n+            return proxy + s.substring(raw.length());\n+               }\n+               return s;\n         }\n-        return s;\n-      }\n     };\n-  }\n+    }\n \n-  static ElementWiseProxyTransform droppingUntilCharacter(char character, String rawPrefix) {\n+    static ElementWiseProxyTransform droppingUntilCharacter(char character, String rawPrefix) {\n     return new ElementWiseProxyTransform() {\n \n-      @Override\n-      public String fromProxy(String proxy) {\n-        return rawPrefix + proxy;\n-      }\n+        @Override\n+        public String fromProxy(String proxy) {\n+               return rawPrefix + proxy;\n+        }\n \n-      @Override\n-      public String toProxy(String raw) {\n-        int pos = raw.indexOf(character);\n-        if (pos > 0) {\n-          return raw.substring(pos + 1);\n+        @Override\n+        public String toProxy(String raw) {\n+               int pos = raw.indexOf(character);\n+               if (pos > 0) {\n+            return raw.substring(pos + 1);\n+               }\n+               return raw;\n         }\n-        return raw;\n-      }\n     };\n-  }\n-\n-  static ElementWiseProxyTransform from(\n-      UnaryFunction<String, String> fromProxy, UnaryFunction<String, String> toProxy) {\n+    }\n \n+    static ElementWiseProxyTransform from(UnaryFunction<String, String> fromProxy, UnaryFunction<String, String> toProxy) {\n     return new ElementWiseProxyTransform() {\n-      @Override\n-      public String fromProxy(String proxy) {\n-        return fromProxy.apply(proxy);\n-      }\n-\n-      @Override\n-      public String toProxy(String raw) {\n-        return toProxy.apply(raw);\n-      }\n+\n+        @Override\n+        public String fromProxy(String proxy) {\n+               return fromProxy.apply(proxy);\n+        }\n+\n+        @Override\n+        public String toProxy(String raw) {\n+               return toProxy.apply(raw);\n+        }\n     };\n-  }\n+    }\n \n   /**\n    * Apply transformation to attribute name from proxy naming.\n@@ -128,7 +131,9 @@ public interface ElementWiseProxyTransform extends ProxyTransform, DataOperatorA\n    * @param proxy name of the attribute in proxy namespace\n    * @return the raw attribute\n    */\n-  String fromProxy(String proxy);\n+\n+\n+    String fromProxy(String proxy);\n \n   /**\n    * Apply transformation to attribute name to proxy naming.\n@@ -136,14 +141,19 @@ public interface ElementWiseProxyTransform extends ProxyTransform, DataOperatorA\n    * @param raw the raw attribute name\n    * @return the proxy attribute name\n    */\n-  String toProxy(String raw);\n+\n+\n+    String toProxy(String raw);\n \n   /**\n    * Setup this transform for given target attribute.\n    *\n    * @param target the target attribute descriptor\n    */\n-  default void setup(AttributeDescriptor<?> target) {\n+\n+\n+    default void setup(AttributeDescriptor<?> target) {\n     // nop\n-  }\n-}\n+\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 106
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}