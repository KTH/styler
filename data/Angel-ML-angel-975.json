{
    "error_id": "975",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/975/EnvironmentBlock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/975/EnvironmentBlock.java\nindex 116850b9e9..13c521cf4a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/975/EnvironmentBlock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/975/EnvironmentBlock.java\n@@ -33,66 +33,69 @@ import static org.apache.hadoop.yarn.webapp.view.JQueryUI._TH;\n // import java.lang.reflect.Field;\n \n public class EnvironmentBlock extends HtmlBlock {\n-  final AMContext amContext;\n-\n-  @Inject\n-  EnvironmentBlock(AMContext amctx) {\n-    amContext = amctx;\n-  }\n-\n-\n-  @Override\n-  protected void render(Block html) {\n-    set(TITLE, join(\"Angel Environment\"));\n-    html.h1(\"Runtime Information\");\n-\n-    TABLE<Hamlet> run_info_table = html.table();\n-    String UsrHome = System.getProperty(\"user.home\");\n-    String UsrDir = System.getProperty(\"user.dir\");\n-    String UsrName = System.getProperty(\"user.name\");\n-    String JavaHome = System.getProperty(\"java.home\");\n-    String OsNmae = System.getProperty(\"os.name\");\n-    String JavaVersion = System.getProperty(\"java.version\");\n-    run_info_table.tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._();\n-    run_info_table.tr().td(\"UsrHome\").td(UsrHome)._().tr().td(\"UsrDir\").td(UsrDir)._().tr()\n-        .td(\"UsrName\").td(UsrName)._().tr().td(\"JavaHome\").td(JavaHome)._().tr().td(\"OsNmae\")\n-        .td(OsNmae)._().tr().td(\"JavaVersion\").td(JavaVersion)._();\n-    run_info_table._();\n-    html.h1(\"    \");\n-\n-    html.h1(\"Angel Properties\");\n-    TABLE<Hamlet> angel_properties_table = html.table();\n-    angel_properties_table.tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._();\n-    AngelConf angelConfiguration = new AngelConf(this.amContext.getConf());\n-    Properties propertiesConfiguration = angelConfiguration.getAngelProps();\n-    SortedMap sortedMap = new TreeMap(propertiesConfiguration);\n-    Set<Object> set = sortedMap.keySet();\n-    Iterator<Object> propertiesSortedKeys = set.iterator();\n-    Object key;\n-    while (propertiesSortedKeys.hasNext()) {\n-      key = propertiesSortedKeys.next();\n-      angel_properties_table.tr().td(String.valueOf(key))\n-          .td((String) propertiesConfiguration.get(key))._();\n-    }\n-    angel_properties_table._();\n-    html.h1(\"    \");\n-\n-\n-    TBODY<TABLE<Hamlet>> tbody =\n-        html.h1(\"System Properties\").table(\"#jobs\").thead().tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")\n-            ._()._().tbody();\n-    Properties properties = System.getProperties();\n-    String propertiesName;\n-    String propertiesValue;\n-    for (Iterator<?> names = (Iterator<?>) properties.propertyNames(); names.hasNext();) {\n-      propertiesName = (String) names.next();\n-      propertiesValue = properties.getProperty(propertiesName);\n-      tbody.tr().td(propertiesName).td(propertiesValue).td().span().$title(propertiesName)._()._()\n-          .td().span().$title(propertiesValue)._()._()._();\n+    final AMContext amContext;\n+\n+    @Inject\n+    EnvironmentBlock(AMContext amctx) {\n+        amContext = amctx;\n     }\n-    tbody._()._();\n \n-  }\n+\n+    @Override\n+    protected void render(Block html) {\n+        set(TITLE, join(\"Angel Environment\"));\n+        html.h1(\"Runtime Information\");\n+\n+        TABLE<Hamlet> run_info_table = html.table();\n+        String UsrHome = System.getProperty(\"user.home\");\n+        String UsrDir = System.getProperty(\"user.dir\");\n+        String UsrName = System.getProperty(\"user.name\");\n+        String JavaHome = System.getProperty(\"java.home\");\n+        String OsNmae = System.getProperty(\"os.name\");\n+        String JavaVersion = System.getProperty(\"java.version\");\n+        run_info_table.tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._();\n+        run_info_table.tr().td(\"UsrHome\").td(UsrHome)._().tr().td(\"UsrDir\").td(UsrDir)._().tr()\n+                .td(\"UsrName\").td(UsrName)._().tr().td(\"JavaHome\").td(JavaHome)._().tr()\n+                .td(\"OsNmae\")\n+                .td(OsNmae)._().tr().td(\"JavaVersion\").td(JavaVersion)._();\n+        run_info_table._();\n+        html.h1(\"    \");\n+\n+        html.h1(\"Angel Properties\");\n+        TABLE<Hamlet> angel_properties_table = html.table();\n+        angel_properties_table.tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._();\n+        AngelConf angelConfiguration = new AngelConf(this.amContext.getConf());\n+        Properties propertiesConfiguration = angelConfiguration.getAngelProps();\n+        SortedMap sortedMap = new TreeMap(propertiesConfiguration);\n+        Set<Object> set = sortedMap.keySet();\n+        Iterator<Object> propertiesSortedKeys = set.iterator();\n+        Object key;\n+        while (propertiesSortedKeys.hasNext()) {\n+            key = propertiesSortedKeys.next();\n+            angel_properties_table.tr().td(String.valueOf(key))\n+                    .td((String) propertiesConfiguration.get(key))._();\n+        }\n+        angel_properties_table._();\n+        html.h1(\"    \");\n+\n+\n+        TBODY<TABLE<Hamlet>> tbody =\n+                html.h1(\"System Properties\").table(\"#jobs\").thead().tr().th(_TH, \"NAME\")\n+                        .th(_TH, \"VALUE\")\n+                        ._()._().tbody();\n+        Properties properties = System.getProperties();\n+        String propertiesName;\n+        String propertiesValue;\n+        for (Iterator<?> names = (Iterator<?>) properties.propertyNames(); names.hasNext(); ) {\n+            propertiesName = (String) names.next();\n+            propertiesValue = properties.getProperty(propertiesName);\n+            tbody.tr().td(propertiesName).td(propertiesValue).td().span().$title(propertiesName)._()\n+                    ._()\n+                    .td().span().$title(propertiesValue)._()._()._();\n+        }\n+        tbody._()._();\n+\n+    }\n \n \n }\n",
            "diff_size": 113
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/975/EnvironmentBlock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/975/EnvironmentBlock.java\nindex 116850b9e9..35747fee3d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/975/EnvironmentBlock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/975/EnvironmentBlock.java\n@@ -40,8 +40,7 @@ public class EnvironmentBlock extends HtmlBlock {\n     amContext = amctx;\n   }\n \n-\n-  @Override\n+@Override\n   protected void render(Block html) {\n     set(TITLE, join(\"Angel Environment\"));\n     html.h1(\"Runtime Information\");\n@@ -73,26 +72,24 @@ public class EnvironmentBlock extends HtmlBlock {\n       key = propertiesSortedKeys.next();\n       angel_properties_table.tr().td(String.valueOf(key))\n           .td((String) propertiesConfiguration.get(key))._();\n-    }\n+  }\n     angel_properties_table._();\n     html.h1(\"    \");\n-\n-\n-    TBODY<TABLE<Hamlet>> tbody =\n+TBODY<TABLE<Hamlet>> tbody =\n         html.h1(\"System Properties\").table(\"#jobs\").thead().tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")\n             ._()._().tbody();\n-    Properties properties = System.getProperties();\n+Properties properties = System.getProperties();\n     String propertiesName;\n     String propertiesValue;\n-    for (Iterator<?> names = (Iterator<?>) properties.propertyNames(); names.hasNext();) {\n+    for (Iterator<?> names = (Iterator<?>) properties.propertyNames();\n+names.hasNext();) {\n       propertiesName = (String) names.next();\n       propertiesValue = properties.getProperty(propertiesName);\n       tbody.tr().td(propertiesName).td(propertiesValue).td().span().$title(propertiesName)._()._()\n           .td().span().$title(propertiesValue)._()._()._();\n-    }\n+  }\n     tbody._()._();\n-\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/975/EnvironmentBlock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/975/EnvironmentBlock.java\nindex 116850b9e9..c33a23bb0a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/975/EnvironmentBlock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/975/EnvironmentBlock.java\n@@ -23,9 +23,7 @@ import org.apache.hadoop.yarn.webapp.hamlet.Hamlet;\n import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TABLE;\n import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TBODY;\n import org.apache.hadoop.yarn.webapp.view.HtmlBlock;\n-\n import java.util.*;\n-\n import static org.apache.hadoop.yarn.util.StringHelper.join;\n import static org.apache.hadoop.yarn.webapp.view.JQueryUI._TH;\n \n@@ -33,19 +31,18 @@ import static org.apache.hadoop.yarn.webapp.view.JQueryUI._TH;\n // import java.lang.reflect.Field;\n \n public class EnvironmentBlock extends HtmlBlock {\n-  final AMContext amContext;\n \n-  @Inject\n-  EnvironmentBlock(AMContext amctx) {\n-    amContext = amctx;\n-  }\n+    final AMContext amContext;\n \n+    @Inject\n+    EnvironmentBlock(AMContext amctx) {\n+    amContext = amctx;\n+    }\n \n-  @Override\n-  protected void render(Block html) {\n+    @Override\n+    protected void render(Block html) {\n     set(TITLE, join(\"Angel Environment\"));\n     html.h1(\"Runtime Information\");\n-\n     TABLE<Hamlet> run_info_table = html.table();\n     String UsrHome = System.getProperty(\"user.home\");\n     String UsrDir = System.getProperty(\"user.dir\");\n@@ -54,12 +51,9 @@ public class EnvironmentBlock extends HtmlBlock {\n     String OsNmae = System.getProperty(\"os.name\");\n     String JavaVersion = System.getProperty(\"java.version\");\n     run_info_table.tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._();\n-    run_info_table.tr().td(\"UsrHome\").td(UsrHome)._().tr().td(\"UsrDir\").td(UsrDir)._().tr()\n-        .td(\"UsrName\").td(UsrName)._().tr().td(\"JavaHome\").td(JavaHome)._().tr().td(\"OsNmae\")\n-        .td(OsNmae)._().tr().td(\"JavaVersion\").td(JavaVersion)._();\n+    run_info_table.tr().td(\"UsrHome\").td(UsrHome)._().tr().td(\"UsrDir\").td(UsrDir)._().tr().td(\"UsrName\").td(UsrName)._().tr().td(\"JavaHome\").td(JavaHome)._().tr().td(\"OsNmae\").td(OsNmae)._().tr().td(\"JavaVersion\").td(JavaVersion)._();\n     run_info_table._();\n     html.h1(\"    \");\n-\n     html.h1(\"Angel Properties\");\n     TABLE<Hamlet> angel_properties_table = html.table();\n     angel_properties_table.tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._();\n@@ -70,29 +64,21 @@ public class EnvironmentBlock extends HtmlBlock {\n     Iterator<Object> propertiesSortedKeys = set.iterator();\n     Object key;\n     while (propertiesSortedKeys.hasNext()) {\n-      key = propertiesSortedKeys.next();\n-      angel_properties_table.tr().td(String.valueOf(key))\n-          .td((String) propertiesConfiguration.get(key))._();\n+        key = propertiesSortedKeys.next();\n+        angel_properties_table.tr().td(String.valueOf(key)).td((String) propertiesConfiguration.get(key))._();\n     }\n     angel_properties_table._();\n     html.h1(\"    \");\n-\n-\n-    TBODY<TABLE<Hamlet>> tbody =\n-        html.h1(\"System Properties\").table(\"#jobs\").thead().tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")\n-            ._()._().tbody();\n+    TBODY<TABLE<Hamlet>> tbody = html.h1(\"System Properties\").table(\"#jobs\").thead().tr().th(_TH, \"NAME\").th(_TH, \"VALUE\")._()._().tbody();\n     Properties properties = System.getProperties();\n     String propertiesName;\n     String propertiesValue;\n     for (Iterator<?> names = (Iterator<?>) properties.propertyNames(); names.hasNext();) {\n-      propertiesName = (String) names.next();\n-      propertiesValue = properties.getProperty(propertiesName);\n-      tbody.tr().td(propertiesName).td(propertiesValue).td().span().$title(propertiesName)._()._()\n-          .td().span().$title(propertiesValue)._()._()._();\n+        propertiesName = (String) names.next();\n+        propertiesValue = properties.getProperty(propertiesName);\n+        tbody.tr().td(propertiesName).td(propertiesValue).td().span().$title(propertiesName)._()._().td().span().$title(propertiesValue)._()._()._();\n     }\n     tbody._()._();\n+    }\n \n-  }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}