{
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "16",
                "column": "65",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public void apply(RequestTemplate template) {\n        SecurityUtils.getCurrentUserJWT()\n            .ifPresent(s -> template.header(AUTHORIZATION_HEADER,String.format(\"%s %s\", BEARER, s)));\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": null,
            "diff": null
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/errored/1/7/UserFeignClientInterceptor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/naturalize/7/UserFeignClientInterceptor.java\nindex 20fa7e4e52..55d3fcd4b4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/errored/1/7/UserFeignClientInterceptor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/naturalize/7/UserFeignClientInterceptor.java\n@@ -13,6 +13,6 @@ public class UserFeignClientInterceptor implements RequestInterceptor {\n     @Override\n     public void apply(RequestTemplate template) {\n         SecurityUtils.getCurrentUserJWT()\n-            .ifPresent(s -> template.header(AUTHORIZATION_HEADER,String.format(\"%s %s\", BEARER, s)));\n+            .ifPresent(s -> template.header(AUTHORIZATION_HEADER, String.format(\"%s %s\", BEARER, s)));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "16",
                    "column": "66",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/errored/1/7/UserFeignClientInterceptor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/styler_three_grams/7/UserFeignClientInterceptor.java\nindex 20fa7e4e52..3c6ef2de90 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/errored/1/7/UserFeignClientInterceptor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/benetech-ServiceNet/styler_three_grams/7/UserFeignClientInterceptor.java\n@@ -13,6 +13,6 @@ public class UserFeignClientInterceptor implements RequestInterceptor {\n     @Override\n     public void apply(RequestTemplate template) {\n         SecurityUtils.getCurrentUserJWT()\n-            .ifPresent(s -> template.header(AUTHORIZATION_HEADER,String.format(\"%s %s\", BEARER, s)));\n+            .ifPresent(s -> template.header(AUTHORIZATION_HEADER ,String.format(\"%s %s\", BEARER, s)));\n     }\n }\n",
            "diff_size": 1
        }
    ]
}