{
    "error_id": "138",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.migrate;\n\nimport com.google.inject.AbstractModule;\nimport com.google.inject.Key;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/138/MigrateModule.java\nindex 40844c12d1..3f5d910ffd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/138/MigrateModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.inject.AbstractModule;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/138/MigrateModule.java\nindex 40844c12d1..17a37d88b3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/138/MigrateModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.inject.AbstractModule;\n@@ -27,7 +28,7 @@ class MigrateModule extends AbstractModule {\n     private final Map<Key<?>, Key<?>> assemblerBindings;\n \n     MigrateModule(Map<Key<?>, Key<?>> repositoryBindings, Map<Key<?>, Key<?>> factoryBindings,\n-            Map<Key<?>, Key<?>> assemblerBindings) {\n+                  Map<Key<?>, Key<?>> assemblerBindings) {\n         this.repositoryBindings = repositoryBindings;\n         this.factoryBindings = factoryBindings;\n         this.assemblerBindings = assemblerBindings;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/138/MigrateModule.java\nindex 40844c12d1..8686a69c3f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/138/MigrateModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.inject.AbstractModule;\n@@ -26,9 +27,8 @@ class MigrateModule extends AbstractModule {\n     private final Map<Key<?>, Key<?>> factoryBindings;\n     private final Map<Key<?>, Key<?>> assemblerBindings;\n \n-    MigrateModule(Map<Key<?>, Key<?>> repositoryBindings, Map<Key<?>, Key<?>> factoryBindings,\n-            Map<Key<?>, Key<?>> assemblerBindings) {\n-        this.repositoryBindings = repositoryBindings;\n+    MigrateModule(Map<Key<?>, Key<?>> repositoryBindings, Map<Key<?>, Key<?>> factoryBindings, Map<Key<?>, Key<?>> assemblerBindings) {\n+    this.repositoryBindings = repositoryBindings;\n         this.factoryBindings = factoryBindings;\n         this.assemblerBindings = assemblerBindings;\n     }\n@@ -52,9 +52,8 @@ class MigrateModule extends AbstractModule {\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private <A extends AggregateRoot<I>, I, T extends Repository<A, I>> Provider<T> createRepositoryProvider(\n-            Key<?> value) {\n-        return new LegacyRepositoryProvider<>((Key<T>) value);\n+    private <A extends AggregateRoot<I>, I, T extends Repository<A, I>> Provider<T> createRepositoryProvider(Key<?> value) {\n+    return new LegacyRepositoryProvider<>((Key<T>) value);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -66,4 +65,4 @@ class MigrateModule extends AbstractModule {\n     private <A, D, T extends Assembler<A, D>> Provider<T> createAssemblerProvider(Key<?> value) {\n         return new LegacyAssemblerProvider<>((Key<T>) value);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "41",
                    "column": "79",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "76",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "49",
                    "column": "78",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/138/MigrateModule.java\nindex 40844c12d1..9a7cb2c9fd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/138/MigrateModule.java\n@@ -20,14 +20,16 @@ import org.seedstack.business.domain.Repository;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n class MigrateModule extends AbstractModule {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(MigrateModule.class);\n     private final Map<Key<?>, Key<?>> repositoryBindings;\n     private final Map<Key<?>, Key<?>> factoryBindings;\n     private final Map<Key<?>, Key<?>> assemblerBindings;\n \n-    MigrateModule(Map<Key<?>, Key<?>> repositoryBindings, Map<Key<?>, Key<?>> factoryBindings,\n-            Map<Key<?>, Key<?>> assemblerBindings) {\n+\n+    MigrateModule(Map<Key<?>, Key<?>> repositoryBindings, Map<Key<?>, Key<?>> factoryBindings, Map<Key<?>, Key<?>> assemblerBindings) {\n         this.repositoryBindings = repositoryBindings;\n         this.factoryBindings = factoryBindings;\n         this.assemblerBindings = assemblerBindings;\n@@ -36,34 +38,29 @@ class MigrateModule extends AbstractModule {\n     @Override\n     protected void configure() {\n         bind(FluentAssembler.class).to(FluentAssemblerAdapter.class);\n-\n-        for (Map.Entry<Key<?>, Key<?>> binding : repositoryBindings.entrySet()) {\n+        for(Map.Entry<Key<?>, Key<?>> binding : repositoryBindings.entrySet() ) {\n             LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue());\n             bind(binding.getKey()).toProvider(createRepositoryProvider(binding.getValue()));\n         }\n-        for (Map.Entry<Key<?>, Key<?>> binding : factoryBindings.entrySet()) {\n+        for(Map.Entry<Key<?>, Key<?>> binding : factoryBindings.entrySet() ) {\n             LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue());\n             bind(binding.getKey()).toProvider(createFactoryProvider(binding.getValue()));\n         }\n-        for (Map.Entry<Key<?>, Key<?>> binding : assemblerBindings.entrySet()) {\n+        for(Map.Entry<Key<?>, Key<?>> binding : assemblerBindings.entrySet() ) {\n             LOGGER.trace(\"Binding {} to {}\", binding.getKey(), binding.getValue());\n             bind(binding.getKey()).toProvider(createAssemblerProvider(binding.getValue()));\n         }\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <A extends AggregateRoot<I>, I, T extends Repository<A, I>> Provider<T> createRepositoryProvider(\n-            Key<?> value) {\n+    @SuppressWarnings(\"unchecked\") private <A extends AggregateRoot<I>, I, T extends Repository<A, I>> Provider<T> createRepositoryProvider(Key<?> value) {\n         return new LegacyRepositoryProvider<>((Key<T>) value);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <P extends Producible, T extends Factory<P>> Provider<T> createFactoryProvider(Key<?> value) {\n+    @SuppressWarnings(\"unchecked\") private <P extends Producible, T extends Factory<P>> Provider<T> createFactoryProvider(Key<?> value) {\n         return new GenericFactoryProvider<>((Key<T>) value);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <A, D, T extends Assembler<A, D>> Provider<T> createAssemblerProvider(Key<?> value) {\n+    @SuppressWarnings(\"unchecked\") private <A, D, T extends Assembler<A, D>> Provider<T> createAssemblerProvider(Key<?> value) {\n         return new LegacyAssemblerProvider<>((Key<T>) value);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/138/MigrateModule.java\nindex 40844c12d1..3f5d910ffd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/138/MigrateModule.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/138/MigrateModule.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.inject.AbstractModule;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}