{
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "111",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public Contracts contracts() {\n        final Contracts assigned;\n        if(this.contracts == null) {\n            assigned = this.storage.contracts().ofContributor(this);\n        } else {\n            assigned = this.contracts;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/47/StoredContributor.java\nindex 3bed2734a5..670c3d31da 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/47/StoredContributor.java\n@@ -108,7 +108,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/47/StoredContributor.java\nindex 3bed2734a5..46c71fdd62 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/47/StoredContributor.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.contributors;\n \n import com.selfxdsd.api.Contracts;\n@@ -29,14 +30,15 @@ import com.selfxdsd.api.storage.Storage;\n \n /**\n  * A Contributor stored in Self.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.1\n  * @todo #192:30min Method tasks() here should return the tasks with\n- *  respect ot the encapsulated Contracts. If the Contracts exist (!= null),\n- *  then the method should only return the Tasks from these contracts.\n- *  Otherwise, it should return all the Tasks of the contributor, as it\n- *  does now.\n+ * respect ot the encapsulated Contracts. If the Contracts exist (!= null),\n+ * then the method should only return the Tasks from these contracts.\n+ * Otherwise, it should return all the Tasks of the contributor, as it\n+ * does now.\n+ * @since 0.0.1\n  */\n public final class StoredContributor implements Contributor {\n \n@@ -63,9 +65,10 @@ public final class StoredContributor implements Contributor {\n \n     /**\n      * Constructor.\n+     *\n      * @param username Username.\n      * @param provider Provider.\n-     * @param storage Storage.\n+     * @param storage  Storage.\n      */\n     public StoredContributor(\n         final String username,\n@@ -78,10 +81,11 @@ public final class StoredContributor implements Contributor {\n     /**\n      * Constructor. Use this when you want to load\n      * the Contributor's Contracts eagerly.\n-     * @param username Username.\n-     * @param provider Provider.\n+     *\n+     * @param username  Username.\n+     * @param provider  Provider.\n      * @param contracts Contributor's Contracts.\n-     * @param storage Storage.\n+     * @param storage   Storage.\n      */\n     public StoredContributor(\n         final String username,\n@@ -108,7 +112,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "111",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/47/StoredContributor.java\nindex 3bed2734a5..6e4addef33 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/47/StoredContributor.java\n@@ -120,4 +120,4 @@ public final class StoredContributor implements Contributor {\n     public Tasks tasks() {\n         return this.storage.tasks().ofContributor(this.username, this.provider);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 34, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "column": "35",
                    "severity": "error",
                    "message": "'}' at column 35 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/47/StoredContributor.java\nindex 3bed2734a5..8993fad530 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/47/StoredContributor.java\n@@ -38,27 +38,37 @@ import com.selfxdsd.api.storage.Storage;\n  *  Otherwise, it should return all the Tasks of the contributor, as it\n  *  does now.\n  */\n+\n+\n public final class StoredContributor implements Contributor {\n \n     /**\n      * Username.\n      */\n+\n+\n     private final String username;\n \n     /**\n      * Provider.\n      */\n+\n+\n     private final String provider;\n \n     /**\n      * This contributor's Contracts. If they are missing,\n      * they will be read from the storage.\n      */\n+\n+\n     private final Contracts contracts;\n \n     /**\n      * Self's Storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -67,11 +77,9 @@ public final class StoredContributor implements Contributor {\n      * @param provider Provider.\n      * @param storage Storage.\n      */\n-    public StoredContributor(\n-        final String username,\n-        final String provider,\n-        final Storage storage\n-    ) {\n+\n+\n+    public StoredContributor(final String username, final String provider, final Storage storage) {\n         this(username, provider, null, storage);\n     }\n \n@@ -83,11 +91,12 @@ public final class StoredContributor implements Contributor {\n      * @param contracts Contributor's Contracts.\n      * @param storage Storage.\n      */\n+\n+\n     public StoredContributor(\n         final String username,\n         final String provider,\n-        final Contracts contracts,\n-        final Storage storage\n+        final Contracts contracts, final Storage storage\n     ) {\n         this.username = username;\n         this.provider = provider;\n@@ -108,11 +117,13 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n-            assigned = this.storage.contracts().ofContributor(this);\n-        } else {\n-            assigned = this.contracts;\n-        }\n+        if(this.contracts== null) {\n+                                      assigned = this.storage.contracts().ofContributor(this);\n+                                  }\n+\n+else {\n+         assigned = this.contracts;\n+     }\n         return assigned;\n     }\n \n@@ -120,4 +131,4 @@ public final class StoredContributor implements Contributor {\n     public Tasks tasks() {\n         return this.storage.tasks().ofContributor(this.username, this.provider);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/47/StoredContributor.java\nindex 3bed2734a5..670c3d31da 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/47/StoredContributor.java\n@@ -108,7 +108,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/47/StoredContributor.java\nindex 3bed2734a5..670c3d31da 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/47/StoredContributor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_three_grams/47/StoredContributor.java\n@@ -108,7 +108,7 @@ public final class StoredContributor implements Contributor {\n     @Override\n     public Contracts contracts() {\n         final Contracts assigned;\n-        if(this.contracts == null) {\n+        if (this.contracts == null) {\n             assigned = this.storage.contracts().ofContributor(this);\n         } else {\n             assigned = this.contracts;\n",
            "diff_size": 1
        }
    ]
}