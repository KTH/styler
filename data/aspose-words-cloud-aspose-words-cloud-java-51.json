{
    "error_id": "51",
    "information": {
        "errors": [
            {
                "line": "207",
                "column": "82",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n    return\n        Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n        Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/51/FixedPageSaveOptionsData.java\nindex fbb32c9df9..dc71da8571 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/51/FixedPageSaveOptionsData.java\n@@ -204,7 +204,7 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n+    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData) o;\n     return\n         Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n         Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/51/FixedPageSaveOptionsData.java\nindex fbb32c9df9..25dd6a9473 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/51/FixedPageSaveOptionsData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,173 +50,181 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Contains common options that can be specified when saving a document into fixed page formats (PDF, XPS, images etc).\")\n public class FixedPageSaveOptionsData extends SaveOptionsData {\n-    @SerializedName(\"ColorMode\")\n-    private String colorMode = null;\n+  @SerializedName(\"ColorMode\")\n+  private String colorMode = null;\n \n-    @SerializedName(\"JpegQuality\")\n-    private Integer jpegQuality = null;\n+  @SerializedName(\"JpegQuality\")\n+  private Integer jpegQuality = null;\n \n-    @SerializedName(\"MetafileRenderingOptions\")\n-    private MetafileRenderingOptionsData metafileRenderingOptions = null;\n+  @SerializedName(\"MetafileRenderingOptions\")\n+  private MetafileRenderingOptionsData metafileRenderingOptions = null;\n \n-    @SerializedName(\"NumeralFormat\")\n-    private String numeralFormat = null;\n+  @SerializedName(\"NumeralFormat\")\n+  private String numeralFormat = null;\n \n-    @SerializedName(\"OptimizeOutput\")\n-    private Boolean optimizeOutput = null;\n+  @SerializedName(\"OptimizeOutput\")\n+  private Boolean optimizeOutput = null;\n \n-    @SerializedName(\"PageCount\")\n-    private Integer pageCount = null;\n+  @SerializedName(\"PageCount\")\n+  private Integer pageCount = null;\n \n-    @SerializedName(\"PageIndex\")\n-    private Integer pageIndex = null;\n-    public FixedPageSaveOptionsData colorMode(String colorMode) {\n-        this.colorMode = colorMode;\n-        return this;\n-    }\n+  @SerializedName(\"PageIndex\")\n+  private Integer pageIndex = null;\n \n-    /**\n-     * Gets or sets a value determining how colors are rendered.\n-     * { Normal | Grayscale}.\n-    * @return colorMode\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets a value determining how colors are rendered. { Normal | Grayscale}.\")\n-    public String getColorMode() {\n-        return colorMode;\n-    }\n+  public FixedPageSaveOptionsData colorMode(String colorMode) {\n+    this.colorMode = colorMode;\n+    return this;\n+  }\n \n-    public void setColorMode(String colorMode) {\n-        this.colorMode = colorMode;\n-    }\n+  /**\n+   * Gets or sets a value determining how colors are rendered.\n+   * { Normal | Grayscale}.\n+   *\n+   * @return colorMode\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets a value determining how colors are rendered. { Normal | Grayscale}.\")\n+  public String getColorMode() {\n+    return colorMode;\n+  }\n \n-    public FixedPageSaveOptionsData jpegQuality(Integer jpegQuality) {\n-        this.jpegQuality = jpegQuality;\n-        return this;\n-    }\n+  public void setColorMode(String colorMode) {\n+    this.colorMode = colorMode;\n+  }\n \n-    /**\n-     * Gets or sets determines the quality of the JPEG images inside PDF document.\n-    * @return jpegQuality\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets determines the quality of the JPEG images inside PDF document.\")\n-    public Integer getJpegQuality() {\n-        return jpegQuality;\n-    }\n+  public FixedPageSaveOptionsData jpegQuality(Integer jpegQuality) {\n+    this.jpegQuality = jpegQuality;\n+    return this;\n+  }\n \n-    public void setJpegQuality(Integer jpegQuality) {\n-        this.jpegQuality = jpegQuality;\n-    }\n+  /**\n+   * Gets or sets determines the quality of the JPEG images inside PDF document.\n+   *\n+   * @return jpegQuality\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets determines the quality of the JPEG images inside PDF document.\")\n+  public Integer getJpegQuality() {\n+    return jpegQuality;\n+  }\n \n-    public FixedPageSaveOptionsData metafileRenderingOptions(MetafileRenderingOptionsData metafileRenderingOptions) {\n-        this.metafileRenderingOptions = metafileRenderingOptions;\n-        return this;\n-    }\n+  public void setJpegQuality(Integer jpegQuality) {\n+    this.jpegQuality = jpegQuality;\n+  }\n \n-    /**\n-     * Gets or sets allows to specify metafile rendering options.\n-    * @return metafileRenderingOptions\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets allows to specify metafile rendering options.\")\n-    public MetafileRenderingOptionsData getMetafileRenderingOptions() {\n-        return metafileRenderingOptions;\n-    }\n+  public FixedPageSaveOptionsData metafileRenderingOptions(MetafileRenderingOptionsData metafileRenderingOptions) {\n+    this.metafileRenderingOptions = metafileRenderingOptions;\n+    return this;\n+  }\n \n-    public void setMetafileRenderingOptions(MetafileRenderingOptionsData metafileRenderingOptions) {\n-        this.metafileRenderingOptions = metafileRenderingOptions;\n-    }\n+  /**\n+   * Gets or sets allows to specify metafile rendering options.\n+   *\n+   * @return metafileRenderingOptions\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets allows to specify metafile rendering options.\")\n+  public MetafileRenderingOptionsData getMetafileRenderingOptions() {\n+    return metafileRenderingOptions;\n+  }\n \n-    public FixedPageSaveOptionsData numeralFormat(String numeralFormat) {\n-        this.numeralFormat = numeralFormat;\n-        return this;\n-    }\n+  public void setMetafileRenderingOptions(MetafileRenderingOptionsData metafileRenderingOptions) {\n+    this.metafileRenderingOptions = metafileRenderingOptions;\n+  }\n \n-    /**\n-     * Gets or sets indicates the symbol set that is used to represent numbers while rendering to fixed page formats.\n-    * @return numeralFormat\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets indicates the symbol set that is used to represent numbers while rendering to fixed page formats.\")\n-    public String getNumeralFormat() {\n-        return numeralFormat;\n-    }\n+  public FixedPageSaveOptionsData numeralFormat(String numeralFormat) {\n+    this.numeralFormat = numeralFormat;\n+    return this;\n+  }\n \n-    public void setNumeralFormat(String numeralFormat) {\n-        this.numeralFormat = numeralFormat;\n-    }\n+  /**\n+   * Gets or sets indicates the symbol set that is used to represent numbers while rendering to fixed page formats.\n+   *\n+   * @return numeralFormat\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets indicates the symbol set that is used to represent numbers while rendering to fixed page formats.\")\n+  public String getNumeralFormat() {\n+    return numeralFormat;\n+  }\n \n-    public FixedPageSaveOptionsData optimizeOutput(Boolean optimizeOutput) {\n-        this.optimizeOutput = optimizeOutput;\n-        return this;\n-    }\n+  public void setNumeralFormat(String numeralFormat) {\n+    this.numeralFormat = numeralFormat;\n+  }\n \n-    /**\n-     * Gets or sets flag indicates whether it is required to optimize output of XPS.\n-     * If this flag is set redundant nested canvases and empty canvases are removed, also neighbor glyphs with the same formatting are concatenated.\n-     * Note: The accuracy of the content display may be affected if this property is set to true.  Default is false.\n-    * @return optimizeOutput\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets flag indicates whether it is required to optimize output of XPS. If this flag is set redundant nested canvases and empty canvases are removed, also neighbor glyphs with the same formatting are concatenated. Note: The accuracy of the content display may be affected if this property is set to true.  Default is false.\")\n-    public Boolean getOptimizeOutput() {\n-        return optimizeOutput;\n-    }\n+  public FixedPageSaveOptionsData optimizeOutput(Boolean optimizeOutput) {\n+    this.optimizeOutput = optimizeOutput;\n+    return this;\n+  }\n \n-    public void setOptimizeOutput(Boolean optimizeOutput) {\n-        this.optimizeOutput = optimizeOutput;\n-    }\n+  /**\n+   * Gets or sets flag indicates whether it is required to optimize output of XPS.\n+   * If this flag is set redundant nested canvases and empty canvases are removed, also neighbor glyphs with the same formatting are concatenated.\n+   * Note: The accuracy of the content display may be affected if this property is set to true.  Default is false.\n+   *\n+   * @return optimizeOutput\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets flag indicates whether it is required to optimize output of XPS. If this flag is set redundant nested canvases and empty canvases are removed, also neighbor glyphs with the same formatting are concatenated. Note: The accuracy of the content display may be affected if this property is set to true.  Default is false.\")\n+  public Boolean getOptimizeOutput() {\n+    return optimizeOutput;\n+  }\n \n-    public FixedPageSaveOptionsData pageCount(Integer pageCount) {\n-        this.pageCount = pageCount;\n-        return this;\n-    }\n+  public void setOptimizeOutput(Boolean optimizeOutput) {\n+    this.optimizeOutput = optimizeOutput;\n+  }\n \n-    /**\n-     * Gets or sets determines number of pages to render.\n-    * @return pageCount\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets determines number of pages to render.\")\n-    public Integer getPageCount() {\n-        return pageCount;\n-    }\n+  public FixedPageSaveOptionsData pageCount(Integer pageCount) {\n+    this.pageCount = pageCount;\n+    return this;\n+  }\n \n-    public void setPageCount(Integer pageCount) {\n-        this.pageCount = pageCount;\n-    }\n+  /**\n+   * Gets or sets determines number of pages to render.\n+   *\n+   * @return pageCount\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets determines number of pages to render.\")\n+  public Integer getPageCount() {\n+    return pageCount;\n+  }\n \n-    public FixedPageSaveOptionsData pageIndex(Integer pageIndex) {\n-        this.pageIndex = pageIndex;\n-        return this;\n-    }\n+  public void setPageCount(Integer pageCount) {\n+    this.pageCount = pageCount;\n+  }\n \n-    /**\n-     * Gets or sets determines 0-based index of the first page to render.\n-    * @return pageIndex\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets determines 0-based index of the first page to render.\")\n-    public Integer getPageIndex() {\n-        return pageIndex;\n-    }\n+  public FixedPageSaveOptionsData pageIndex(Integer pageIndex) {\n+    this.pageIndex = pageIndex;\n+    return this;\n+  }\n \n-    public void setPageIndex(Integer pageIndex) {\n-        this.pageIndex = pageIndex;\n-    }\n+  /**\n+   * Gets or sets determines 0-based index of the first page to render.\n+   *\n+   * @return pageIndex\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets determines 0-based index of the first page to render.\")\n+  public Integer getPageIndex() {\n+    return pageIndex;\n+  }\n+\n+  public void setPageIndex(Integer pageIndex) {\n+    this.pageIndex = pageIndex;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData) o;\n     return\n         Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n-        Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n-        Objects.equals(this.metafileRenderingOptions, fixedPageSaveOptionsData.metafileRenderingOptions) &&\n-        Objects.equals(this.numeralFormat, fixedPageSaveOptionsData.numeralFormat) &&\n-        Objects.equals(this.optimizeOutput, fixedPageSaveOptionsData.optimizeOutput) &&\n-        Objects.equals(this.pageCount, fixedPageSaveOptionsData.pageCount) &&\n-        Objects.equals(this.pageIndex, fixedPageSaveOptionsData.pageIndex) &&\n-        super.equals(o);\n+            Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n+            Objects.equals(this.metafileRenderingOptions, fixedPageSaveOptionsData.metafileRenderingOptions) &&\n+            Objects.equals(this.numeralFormat, fixedPageSaveOptionsData.numeralFormat) &&\n+            Objects.equals(this.optimizeOutput, fixedPageSaveOptionsData.optimizeOutput) &&\n+            Objects.equals(this.pageCount, fixedPageSaveOptionsData.pageCount) &&\n+            Objects.equals(this.pageIndex, fixedPageSaveOptionsData.pageIndex) &&\n+            super.equals(o);\n   }\n \n   @Override\n",
            "diff_size": 192
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "209",
                    "column": "78",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/51/FixedPageSaveOptionsData.java\nindex fbb32c9df9..5f00e4cfef 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/51/FixedPageSaveOptionsData.java\n@@ -67,7 +67,8 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n \n     @SerializedName(\"PageIndex\")\n     private Integer pageIndex = null;\n-    public FixedPageSaveOptionsData colorMode(String colorMode) {\n+\n+public FixedPageSaveOptionsData colorMode(String colorMode) {\n         this.colorMode = colorMode;\n         return this;\n     }\n@@ -200,13 +201,13 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n-    return\n-        Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n+\n+FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n+    return Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n         Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n         Objects.equals(this.metafileRenderingOptions, fixedPageSaveOptionsData.metafileRenderingOptions) &&\n         Objects.equals(this.numeralFormat, fixedPageSaveOptionsData.numeralFormat) &&\n@@ -247,4 +248,4 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/51/FixedPageSaveOptionsData.java\nindex fbb32c9df9..e50aa70f43 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/51/FixedPageSaveOptionsData.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Contains common options that can be specified when saving a document into fixed page formats (PDF, XPS, images etc).\n  */\n+\n+\n @ApiModel(description = \"Contains common options that can be specified when saving a document into fixed page formats (PDF, XPS, images etc).\")\n+\n public class FixedPageSaveOptionsData extends SaveOptionsData {\n     @SerializedName(\"ColorMode\")\n     private String colorMode = null;\n@@ -67,9 +70,10 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n \n     @SerializedName(\"PageIndex\")\n     private Integer pageIndex = null;\n+\n     public FixedPageSaveOptionsData colorMode(String colorMode) {\n-        this.colorMode = colorMode;\n-        return this;\n+    this.colorMode = colorMode;\n+    return this;\n     }\n \n     /**\n@@ -77,72 +81,88 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n      * { Normal | Grayscale}.\n     * @return colorMode\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets a value determining how colors are rendered. { Normal | Grayscale}.\")\n     public String getColorMode() {\n-        return colorMode;\n+    return colorMode;\n     }\n \n+\n     public void setColorMode(String colorMode) {\n-        this.colorMode = colorMode;\n+    this.colorMode = colorMode;\n     }\n \n+\n     public FixedPageSaveOptionsData jpegQuality(Integer jpegQuality) {\n-        this.jpegQuality = jpegQuality;\n-        return this;\n+    this.jpegQuality = jpegQuality;\n+    return this;\n     }\n \n     /**\n      * Gets or sets determines the quality of the JPEG images inside PDF document.\n     * @return jpegQuality\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets determines the quality of the JPEG images inside PDF document.\")\n     public Integer getJpegQuality() {\n-        return jpegQuality;\n+    return jpegQuality;\n     }\n \n+\n     public void setJpegQuality(Integer jpegQuality) {\n-        this.jpegQuality = jpegQuality;\n+    this.jpegQuality = jpegQuality;\n     }\n \n+\n     public FixedPageSaveOptionsData metafileRenderingOptions(MetafileRenderingOptionsData metafileRenderingOptions) {\n-        this.metafileRenderingOptions = metafileRenderingOptions;\n-        return this;\n+    this.metafileRenderingOptions = metafileRenderingOptions;\n+    return this;\n     }\n \n     /**\n      * Gets or sets allows to specify metafile rendering options.\n     * @return metafileRenderingOptions\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets allows to specify metafile rendering options.\")\n     public MetafileRenderingOptionsData getMetafileRenderingOptions() {\n-        return metafileRenderingOptions;\n+    return metafileRenderingOptions;\n     }\n \n+\n     public void setMetafileRenderingOptions(MetafileRenderingOptionsData metafileRenderingOptions) {\n-        this.metafileRenderingOptions = metafileRenderingOptions;\n+    this.metafileRenderingOptions = metafileRenderingOptions;\n     }\n \n+\n     public FixedPageSaveOptionsData numeralFormat(String numeralFormat) {\n-        this.numeralFormat = numeralFormat;\n-        return this;\n+    this.numeralFormat = numeralFormat;\n+    return this;\n     }\n \n     /**\n      * Gets or sets indicates the symbol set that is used to represent numbers while rendering to fixed page formats.\n     * @return numeralFormat\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets indicates the symbol set that is used to represent numbers while rendering to fixed page formats.\")\n     public String getNumeralFormat() {\n-        return numeralFormat;\n+    return numeralFormat;\n     }\n \n+\n     public void setNumeralFormat(String numeralFormat) {\n-        this.numeralFormat = numeralFormat;\n+    this.numeralFormat = numeralFormat;\n     }\n \n+\n     public FixedPageSaveOptionsData optimizeOutput(Boolean optimizeOutput) {\n-        this.optimizeOutput = optimizeOutput;\n-        return this;\n+    this.optimizeOutput = optimizeOutput;\n+    return this;\n     }\n \n     /**\n@@ -151,78 +171,94 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n      * Note: The accuracy of the content display may be affected if this property is set to true.  Default is false.\n     * @return optimizeOutput\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets flag indicates whether it is required to optimize output of XPS. If this flag is set redundant nested canvases and empty canvases are removed, also neighbor glyphs with the same formatting are concatenated. Note: The accuracy of the content display may be affected if this property is set to true.  Default is false.\")\n     public Boolean getOptimizeOutput() {\n-        return optimizeOutput;\n+    return optimizeOutput;\n     }\n \n+\n     public void setOptimizeOutput(Boolean optimizeOutput) {\n-        this.optimizeOutput = optimizeOutput;\n+    this.optimizeOutput = optimizeOutput;\n     }\n \n+\n     public FixedPageSaveOptionsData pageCount(Integer pageCount) {\n-        this.pageCount = pageCount;\n-        return this;\n+    this.pageCount = pageCount;\n+    return this;\n     }\n \n     /**\n      * Gets or sets determines number of pages to render.\n     * @return pageCount\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets determines number of pages to render.\")\n     public Integer getPageCount() {\n-        return pageCount;\n+    return pageCount;\n     }\n \n+\n     public void setPageCount(Integer pageCount) {\n-        this.pageCount = pageCount;\n+    this.pageCount = pageCount;\n     }\n \n+\n     public FixedPageSaveOptionsData pageIndex(Integer pageIndex) {\n-        this.pageIndex = pageIndex;\n-        return this;\n+    this.pageIndex = pageIndex;\n+    return this;\n     }\n \n     /**\n      * Gets or sets determines 0-based index of the first page to render.\n     * @return pageIndex\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets determines 0-based index of the first page to render.\")\n     public Integer getPageIndex() {\n-        return pageIndex;\n+    return pageIndex;\n     }\n \n+\n     public void setPageIndex(Integer pageIndex) {\n-        this.pageIndex = pageIndex;\n+    this.pageIndex = pageIndex;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n-    return\n-        Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n+\n+        FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData) o;\n+        return Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n         Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n         Objects.equals(this.metafileRenderingOptions, fixedPageSaveOptionsData.metafileRenderingOptions) &&\n         Objects.equals(this.numeralFormat, fixedPageSaveOptionsData.numeralFormat) &&\n         Objects.equals(this.optimizeOutput, fixedPageSaveOptionsData.optimizeOutput) &&\n         Objects.equals(this.pageCount, fixedPageSaveOptionsData.pageCount) &&\n-        Objects.equals(this.pageIndex, fixedPageSaveOptionsData.pageIndex) &&\n-        super.equals(o);\n-  }\n+            Objects.equals(this.pageIndex, fixedPageSaveOptionsData.pageIndex) &&\n+            super.equals(o);\n+    }\n+\n \n-  @Override\n-  public int hashCode() {\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(colorMode, jpegQuality, metafileRenderingOptions, numeralFormat, optimizeOutput, pageCount, pageIndex, super.hashCode());\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class FixedPageSaveOptionsData {\\n\");\n     sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n@@ -235,16 +271,18 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n     sb.append(\"    pageIndex: \").append(toIndentedString(pageIndex)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/51/FixedPageSaveOptionsData.java\nindex fbb32c9df9..dc71da8571 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/51/FixedPageSaveOptionsData.java\n@@ -204,7 +204,7 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n+    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData) o;\n     return\n         Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n         Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/51/FixedPageSaveOptionsData.java\nindex fbb32c9df9..1dd342faa7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/51/FixedPageSaveOptionsData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/51/FixedPageSaveOptionsData.java\n@@ -204,7 +204,8 @@ public class FixedPageSaveOptionsData extends SaveOptionsData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData)o;\n+    FixedPageSaveOptionsData fixedPageSaveOptionsData = (FixedPageSaveOptionsData\n+) o;\n     return\n         Objects.equals(this.colorMode, fixedPageSaveOptionsData.colorMode) &&\n         Objects.equals(this.jpegQuality, fixedPageSaveOptionsData.jpegQuality) &&\n",
            "diff_size": 2
        }
    ]
}