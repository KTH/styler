{
    "error_id": "457",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.runtime.conf.impl;\n\nimport com.fasterxml.jackson.core.Version;\nimport com.fasterxml.jackson.databind.BeanDescription;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/457/CommonModelAutoConfiguration.java\nindex e9734b034a..546be7c35f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/457/CommonModelAutoConfiguration.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.conf.impl;\n \n import com.fasterxml.jackson.core.Version;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/457/CommonModelAutoConfiguration.java\nindex e9734b034a..57d9778826 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/457/CommonModelAutoConfiguration.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.conf.impl;\n \n import com.fasterxml.jackson.core.Version;\n@@ -40,7 +41,7 @@ public class CommonModelAutoConfiguration {\n     @Bean\n     public Module customizeCommonModelObjectMapper() {\n         SimpleModule module = new SimpleModule(\"mapCommonModelInterfaces\",\n-                                               Version.unknownVersion());\n+                Version.unknownVersion());\n         SimpleAbstractTypeResolver resolver = new SimpleAbstractTypeResolver() {\n             //this is a workaround for https://github.com/FasterXML/jackson-databind/issues/2019\n             //once version 2.9.6 is related we can remove this @override method\n@@ -48,22 +49,22 @@ public class CommonModelAutoConfiguration {\n             public JavaType resolveAbstractType(DeserializationConfig config,\n                                                 BeanDescription typeDesc) {\n                 return findTypeMapping(config,\n-                                       typeDesc.getType());\n+                        typeDesc.getType());\n             }\n         };\n \n         resolver.addMapping(VariableInstance.class,\n-                            VariableInstanceImpl.class);\n+                VariableInstanceImpl.class);\n \n         module.setAbstractTypes(resolver);\n \n         module.setMixInAnnotation(Payload.class,\n-                                  PayloadMixIn.class);\n+                PayloadMixIn.class);\n         module.setMixInAnnotation(Result.class,\n-                                  ResultMixIn.class);\n+                ResultMixIn.class);\n \n         module.registerSubtypes(new NamedType(EmptyResult.class,\n-                                              EmptyResult.class.getSimpleName()));\n+                EmptyResult.class.getSimpleName()));\n \n         return module;\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 12, expected is 35, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/457/CommonModelAutoConfiguration.java\nindex e9734b034a..1e7b5bad96 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/457/CommonModelAutoConfiguration.java\n@@ -37,34 +37,28 @@ import org.springframework.context.annotation.PropertySource;\n public class CommonModelAutoConfiguration {\n \n     //this bean will be automatically injected inside boot's ObjectMapper\n+\n     @Bean\n     public Module customizeCommonModelObjectMapper() {\n-        SimpleModule module = new SimpleModule(\"mapCommonModelInterfaces\",\n-                                               Version.unknownVersion());\n-        SimpleAbstractTypeResolver resolver = new SimpleAbstractTypeResolver() {\n+    SimpleModule module = new SimpleModule(\"mapCommonModelInterfaces\",\n+                                           Version.unknownVersion());\n+    SimpleAbstractTypeResolver resolver = new SimpleAbstractTypeResolver() {\n             //this is a workaround for https://github.com/FasterXML/jackson-databind/issues/2019\n             //once version 2.9.6 is related we can remove this @override method\n-            @Override\n-            public JavaType resolveAbstractType(DeserializationConfig config,\n-                                                BeanDescription typeDesc) {\n-                return findTypeMapping(config,\n-                                       typeDesc.getType());\n-            }\n-        };\n-\n-        resolver.addMapping(VariableInstance.class,\n-                            VariableInstanceImpl.class);\n-\n-        module.setAbstractTypes(resolver);\n \n-        module.setMixInAnnotation(Payload.class,\n-                                  PayloadMixIn.class);\n-        module.setMixInAnnotation(Result.class,\n-                                  ResultMixIn.class);\n-\n-        module.registerSubtypes(new NamedType(EmptyResult.class,\n-                                              EmptyResult.class.getSimpleName()));\n-\n-        return module;\n+                                   @Override\n+                                   public JavaType resolveAbstractType(DeserializationConfig config, BeanDescription typeDesc) {\n+                                       return findTypeMapping(config, typeDesc.getType());\n+                                   }\n+                               };\n+    resolver.addMapping(VariableInstance.class,\n+                        VariableInstanceImpl.class);\n+    module.setAbstractTypes(resolver);\n+    module.setMixInAnnotation(Payload.class, PayloadMixIn.class);\n+    module.setMixInAnnotation(Result.class, ResultMixIn.class);\n+    module.registerSubtypes(new NamedType(EmptyResult.class,\n+                                          EmptyResult.class.getSimpleName()));\n+    return module;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/457/CommonModelAutoConfiguration.java\nindex e9734b034a..546be7c35f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/457/CommonModelAutoConfiguration.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.conf.impl;\n \n import com.fasterxml.jackson.core.Version;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/457/CommonModelAutoConfiguration.java\nindex e9734b034a..546be7c35f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/457/CommonModelAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/457/CommonModelAutoConfiguration.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.conf.impl;\n \n import com.fasterxml.jackson.core.Version;\n",
            "diff_size": 1
        }
    ]
}