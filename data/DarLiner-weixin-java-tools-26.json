{
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "121",
                "column": "78",
                "severity": "warning",
                "message": "',' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
            }
        ]
    },
    "source_code": "\n    return WxMpGsonBuilder.create().fromJson(\n      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n      new TypeToken<List<String>>() {\n      }.getType());\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler/26/WxMpStoreServiceImpl.java\nindex 402102064c..78e025b55f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler/26/WxMpStoreServiceImpl.java\n@@ -118,8 +118,7 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n     }\n \n     return WxMpGsonBuilder.create().fromJson(\n-      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n-      new TypeToken<List<String>>() {\n+      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"), new TypeToken<List<String>>() {\n       }.getType());\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "121",
                    "column": "80",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/26/WxMpStoreServiceImpl.java\nindex 402102064c..c5a20233a1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/intellij/26/WxMpStoreServiceImpl.java\n@@ -49,7 +49,7 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n       throw new WxErrorException(wxError);\n     }\n     return WxMpStoreBaseInfo.fromJson(new JsonParser().parse(response).getAsJsonObject()\n-      .get(\"business\").getAsJsonObject().get(\"base_info\").toString());\n+        .get(\"business\").getAsJsonObject().get(\"base_info\").toString());\n   }\n \n   @Override\n@@ -65,7 +65,7 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n \n   @Override\n   public WxMpStoreListResult list(int begin, int limit)\n-    throws WxErrorException {\n+      throws WxErrorException {\n     JsonObject params = new JsonObject();\n     params.addProperty(\"begin\", begin);\n     params.addProperty(\"limit\", limit);\n@@ -118,9 +118,9 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n     }\n \n     return WxMpGsonBuilder.create().fromJson(\n-      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n-      new TypeToken<List<String>>() {\n-      }.getType());\n+        new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n+        new TypeToken<List<String>>() {\n+        }.getType());\n   }\n \n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/26/WxMpStoreServiceImpl.java\nindex 402102064c..a416f1ca10 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/naturalize/26/WxMpStoreServiceImpl.java\n@@ -117,10 +117,8 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n       throw new WxErrorException(wxError);\n     }\n \n-    return WxMpGsonBuilder.create().fromJson(\n-      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n-      new TypeToken<List<String>>() {\n+    return WxMpGsonBuilder.create().fromJson(new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"), new TypeToken<List<String>>() {\n       }.getType());\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/26/WxMpStoreServiceImpl.java\nindex 402102064c..da6ea398d7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/codebuff/26/WxMpStoreServiceImpl.java\n@@ -13,7 +13,6 @@ import me.chanjar.weixin.mp.bean.store.WxMpStoreBaseInfo;\n import me.chanjar.weixin.mp.bean.store.WxMpStoreInfo;\n import me.chanjar.weixin.mp.bean.store.WxMpStoreListResult;\n import me.chanjar.weixin.mp.util.json.WxMpGsonBuilder;\n-\n import java.util.List;\n \n /**\n@@ -21,106 +20,98 @@ import java.util.List;\n  *\n  * @author binarywang (https://github.com/binarywang)\n  */\n+\n+\n public class WxMpStoreServiceImpl implements WxMpStoreService {\n-  private WxMpService wxMpService;\n+    private WxMpService wxMpService;\n \n-  public WxMpStoreServiceImpl(WxMpService wxMpService) {\n+    public WxMpStoreServiceImpl(WxMpService wxMpService) {\n     this.wxMpService = wxMpService;\n-  }\n+    }\n \n-  @Override\n-  public void add(WxMpStoreBaseInfo request) throws WxErrorException {\n+    @Override\n+    public void add(WxMpStoreBaseInfo request) throws WxErrorException {\n     BeanUtils.checkRequiredFields(request);\n-\n     String response = this.wxMpService.post(POI_ADD_URL, request.toJson());\n     WxError wxError = WxError.fromJson(response, WxType.MP);\n     if (wxError.getErrorCode() != 0) {\n-      throw new WxErrorException(wxError);\n+        throw new WxErrorException(wxError);\n+    }\n     }\n-  }\n \n-  @Override\n-  public WxMpStoreBaseInfo get(String poiId) throws WxErrorException {\n+    @Override\n+    public WxMpStoreBaseInfo get(String poiId) throws WxErrorException {\n     JsonObject paramObject = new JsonObject();\n     paramObject.addProperty(\"poi_id\", poiId);\n     String response = this.wxMpService.post(POI_GET_URL, paramObject.toString());\n     WxError wxError = WxError.fromJson(response, WxType.MP);\n     if (wxError.getErrorCode() != 0) {\n-      throw new WxErrorException(wxError);\n+        throw new WxErrorException(wxError);\n+    }\n+    return WxMpStoreBaseInfo.fromJson(new JsonParser().parse(response).getAsJsonObject().get(\"business\").getAsJsonObject().get(\"base_info\").toString());\n     }\n-    return WxMpStoreBaseInfo.fromJson(new JsonParser().parse(response).getAsJsonObject()\n-      .get(\"business\").getAsJsonObject().get(\"base_info\").toString());\n-  }\n \n-  @Override\n-  public void delete(String poiId) throws WxErrorException {\n+    @Override\n+    public void delete(String poiId) throws WxErrorException {\n     JsonObject paramObject = new JsonObject();\n     paramObject.addProperty(\"poi_id\", poiId);\n     String response = this.wxMpService.post(POI_DEL_URL, paramObject.toString());\n     WxError wxError = WxError.fromJson(response, WxType.MP);\n     if (wxError.getErrorCode() != 0) {\n-      throw new WxErrorException(wxError);\n+        throw new WxErrorException(wxError);\n+    }\n     }\n-  }\n \n-  @Override\n-  public WxMpStoreListResult list(int begin, int limit)\n-    throws WxErrorException {\n+    @Override\n+    public WxMpStoreListResult list(int begin, int limit) throws WxErrorException {\n     JsonObject params = new JsonObject();\n     params.addProperty(\"begin\", begin);\n     params.addProperty(\"limit\", limit);\n     String response = this.wxMpService.post(POI_LIST_URL, params.toString());\n-\n     WxError wxError = WxError.fromJson(response, WxType.MP);\n     if (wxError.getErrorCode() != 0) {\n-      throw new WxErrorException(wxError);\n+        throw new WxErrorException(wxError);\n     }\n-\n     return WxMpStoreListResult.fromJson(response);\n-  }\n+    }\n \n-  @Override\n-  public List<WxMpStoreInfo> listAll() throws WxErrorException {\n+    @Override\n+    public List<WxMpStoreInfo> listAll() throws WxErrorException {\n     int limit = 50;\n     WxMpStoreListResult list = this.list(0, limit);\n     List<WxMpStoreInfo> stores = list.getBusinessList();\n     if (list.getTotalCount() > limit) {\n-      int begin = limit;\n-      WxMpStoreListResult followingList = this.list(begin, limit);\n-      while (followingList.getBusinessList().size() > 0) {\n-        stores.addAll(followingList.getBusinessList());\n-        begin += limit;\n-        if (begin >= list.getTotalCount()) {\n-          break;\n+        int begin = limit;\n+        WxMpStoreListResult followingList = this.list(begin, limit);\n+        while (followingList.getBusinessList().size() > 0) {\n+                                          stores.addAll(followingList.getBusinessList());\n+                                          begin += limit;\n+                                          if (begin >= list.getTotalCount()) {\n+                                                               break;\n+                                          }\n+                                          followingList = this.list(begin, limit);\n         }\n-        followingList = this.list(begin, limit);\n-      }\n     }\n-\n     return stores;\n-  }\n+    }\n \n-  @Override\n-  public void update(WxMpStoreBaseInfo request) throws WxErrorException {\n+    @Override\n+    public void update(WxMpStoreBaseInfo request) throws WxErrorException {\n     String response = this.wxMpService.post(POI_UPDATE_URL, request.toJson());\n     WxError wxError = WxError.fromJson(response, WxType.MP);\n     if (wxError.getErrorCode() != 0) {\n-      throw new WxErrorException(wxError);\n+        throw new WxErrorException(wxError);\n+    }\n     }\n-  }\n \n-  @Override\n-  public List<String> listCategories() throws WxErrorException {\n+    @Override\n+    public List<String> listCategories() throws WxErrorException {\n     String response = this.wxMpService.get(POI_GET_WX_CATEGORY_URL, null);\n     WxError wxError = WxError.fromJson(response, WxType.MP);\n     if (wxError.getErrorCode() != 0) {\n-      throw new WxErrorException(wxError);\n+        throw new WxErrorException(wxError);\n     }\n-\n-    return WxMpGsonBuilder.create().fromJson(\n-      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n-      new TypeToken<List<String>>() {\n-      }.getType());\n-  }\n-\n-}\n+    return WxMpGsonBuilder.create().fromJson(new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"), new TypeToken<List<String>>() {\n+           }.getType());\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 63
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "122",
                    "column": "7",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_random/26/WxMpStoreServiceImpl.java\nindex 402102064c..ae3b915aec 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_random/26/WxMpStoreServiceImpl.java\n@@ -118,8 +118,8 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n     }\n \n     return WxMpGsonBuilder.create().fromJson(\n-      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n-      new TypeToken<List<String>>() {\n+      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\")\n+      , new TypeToken<List<String>>() {\n       }.getType());\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_three_grams/26/WxMpStoreServiceImpl.java\nindex 402102064c..78e025b55f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/errored/1/26/WxMpStoreServiceImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/DarLiner-weixin-java-tools/styler_three_grams/26/WxMpStoreServiceImpl.java\n@@ -118,8 +118,7 @@ public class WxMpStoreServiceImpl implements WxMpStoreService {\n     }\n \n     return WxMpGsonBuilder.create().fromJson(\n-      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"),\n-      new TypeToken<List<String>>() {\n+      new JsonParser().parse(response).getAsJsonObject().get(\"category_list\"), new TypeToken<List<String>>() {\n       }.getType());\n   }\n \n",
            "diff_size": 2
        }
    ]
}