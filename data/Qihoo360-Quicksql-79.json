{
    "error_id": "79",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.calcite.adapter.enumerable;\n\n/**\n * Information for a call to",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler/79/WinAggResetContext.java\nindex 7db4877d19..9dee01e66a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler/79/WinAggResetContext.java\n@@ -1,35 +1,35 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to you under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.apache.calcite.adapter.enumerable;\r\n-\r\n-/**\r\n- * Information for a call to\r\n- * {@link AggImplementor#implementReset(AggContext, AggResetContext)}.\r\n- *\r\n- * <p>The {@link AggResetContext} provides access to the accumulator variables\r\n- * that should be reset.\r\n- *\r\n- * <p>Note: the very first reset of windowed aggregates is performed with null\r\n- * knowledge of indices and row count in the partition.\r\n- * In other words, the implementation should treat indices and partition row\r\n- * count as a hint to pre-size the collections.\r\n- */\r\n-public interface WinAggResetContext\r\n-    extends AggResetContext, WinAggFrameContext {\r\n-}\r\n-\r\n-// End WinAggResetContext.java\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.calcite.adapter.enumerable;\n+\n+/**\n+ * Information for a call to\n+ * {@link AggImplementor#implementReset(AggContext, AggResetContext)}.\n+ *\n+ * <p>The {@link AggResetContext} provides access to the accumulator variables\n+ * that should be reset.\n+ *\n+ * <p>Note: the very first reset of windowed aggregates is performed with null\n+ * knowledge of indices and row count in the partition.\n+ * In other words, the implementation should treat indices and partition row\n+ * count as a hint to pre-size the collections.\n+ */\n+public interface WinAggResetContext\n+    extends AggResetContext, WinAggFrameContext {\n+}\n+\n+// End WinAggResetContext.java\n",
            "diff_size": 35
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/intellij/79/WinAggResetContext.java\nindex 7db4877d19..5dd020b1d5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/intellij/79/WinAggResetContext.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.adapter.enumerable;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/codebuff/79/WinAggResetContext.java\nindex 7db4877d19..2054f1dcf5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/codebuff/79/WinAggResetContext.java\n@@ -27,9 +27,9 @@ package org.apache.calcite.adapter.enumerable;\n  * knowledge of indices and row count in the partition.\r\n  * In other words, the implementation should treat indices and partition row\r\n  * count as a hint to pre-size the collections.\r\n- */\r\n-public interface WinAggResetContext\r\n-    extends AggResetContext, WinAggFrameContext {\r\n-}\r\n-\r\n-// End WinAggResetContext.java\r\n+ */\n+\n+\n+public interface WinAggResetContext extends AggResetContext, WinAggFrameContext {\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler_random/79/WinAggResetContext.java\nindex 7db4877d19..9dee01e66a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/errored/1/79/WinAggResetContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Qihoo360-Quicksql/styler_random/79/WinAggResetContext.java\n@@ -1,35 +1,35 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one or more\r\n- * contributor license agreements.  See the NOTICE file distributed with\r\n- * this work for additional information regarding copyright ownership.\r\n- * The ASF licenses this file to you under the Apache License, Version 2.0\r\n- * (the \"License\"); you may not use this file except in compliance with\r\n- * the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.apache.calcite.adapter.enumerable;\r\n-\r\n-/**\r\n- * Information for a call to\r\n- * {@link AggImplementor#implementReset(AggContext, AggResetContext)}.\r\n- *\r\n- * <p>The {@link AggResetContext} provides access to the accumulator variables\r\n- * that should be reset.\r\n- *\r\n- * <p>Note: the very first reset of windowed aggregates is performed with null\r\n- * knowledge of indices and row count in the partition.\r\n- * In other words, the implementation should treat indices and partition row\r\n- * count as a hint to pre-size the collections.\r\n- */\r\n-public interface WinAggResetContext\r\n-    extends AggResetContext, WinAggFrameContext {\r\n-}\r\n-\r\n-// End WinAggResetContext.java\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.calcite.adapter.enumerable;\n+\n+/**\n+ * Information for a call to\n+ * {@link AggImplementor#implementReset(AggContext, AggResetContext)}.\n+ *\n+ * <p>The {@link AggResetContext} provides access to the accumulator variables\n+ * that should be reset.\n+ *\n+ * <p>Note: the very first reset of windowed aggregates is performed with null\n+ * knowledge of indices and row count in the partition.\n+ * In other words, the implementation should treat indices and partition row\n+ * count as a hint to pre-size the collections.\n+ */\n+public interface WinAggResetContext\n+    extends AggResetContext, WinAggFrameContext {\n+}\n+\n+// End WinAggResetContext.java\n",
            "diff_size": 35
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}