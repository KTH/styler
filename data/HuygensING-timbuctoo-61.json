{
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "8",
                "severity": "error",
                "message": "WhitespaceAround: 'try' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    try(Stream<Path> fileStream = Files.walk(path)) {\n      Set<Path> authFiles = fileStream\n        .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n        .collect(toSet());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/61/AuthorizationMigration.java\nindex 004a9e2fcf..565ccc1a3d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/61/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/61/AuthorizationMigration.java\nindex 004a9e2fcf..c8a036d75d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/61/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n@@ -75,7 +75,7 @@ public class AuthorizationMigration {\n               LOG.warn(\"No user found with id '{}'\", oldUserId);\n             }\n             newAuths\n-              .add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[]{})));\n+              .add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[] {})));\n           }\n \n           OBJECT_MAPPER.writeValue(outputFile, newAuths);\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/61/AuthorizationMigration.java\nindex 004a9e2fcf..be8d4f21a7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/61/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n@@ -118,4 +118,4 @@ public class AuthorizationMigration {\n     directory.mkdirs();\n     return new File(directory, \"authorizations.json\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'static initialization' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'static initialization rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 44, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 44, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 44, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 44, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 90, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 40, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 44, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 44, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/61/AuthorizationMigration.java\nindex 004a9e2fcf..8f180f14cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/61/AuthorizationMigration.java\n@@ -11,7 +11,6 @@ import nl.knaw.huygens.timbuctoo.v5.security.UserValidator;\n import nl.knaw.huygens.timbuctoo.v5.security.dto.User;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.File;\n import java.nio.file.Files;\n import java.nio.file.Path;\n@@ -23,72 +22,59 @@ import java.util.stream.Stream;\n import static java.util.stream.Collectors.toSet;\n \n public class AuthorizationMigration {\n+    private static final ObjectMapper OBJECT_MAPPER;\n+    private static final Logger LOG = LoggerFactory.getLogger(AuthorizationMigration.class);\n \n-  private static final ObjectMapper OBJECT_MAPPER;\n-  private static final Logger LOG = LoggerFactory.getLogger(AuthorizationMigration.class);\n-\n-  static {\n+    static {\n     OBJECT_MAPPER = new ObjectMapper();\n     OBJECT_MAPPER.registerModule(new GuavaModule());\n-  }\n+    }\n \n-  private final String authorizationsPath;\n-  private final UserValidator userValidator;\n-  private final String dataSetPath;\n+    private final String authorizationsPath;\n+    private final UserValidator userValidator;\n+    private final String dataSetPath;\n \n-  public AuthorizationMigration(String authorizationsPath, UserValidator userValidator, String dataSetPath) {\n+    public AuthorizationMigration(String authorizationsPath, UserValidator userValidator, String dataSetPath) {\n     this.authorizationsPath = authorizationsPath;\n     this.userValidator = userValidator;\n     this.dataSetPath = dataSetPath;\n-  }\n+    }\n \n-  public void migrate() throws Exception {\n+    public void migrate() throws Exception {\n     Path path = Paths.get(authorizationsPath);\n-\n     if (!path.toFile().exists()) {\n-      return;\n+        return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n-      Set<Path> authFiles = fileStream\n-        .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n-        .collect(toSet());\n-\n-      for (Path authFile : authFiles) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n+        Set<Path> authFiles = fileStream.filter(file -> file.toFile().getName()\n+                                                                     .endsWith(\".json\") && file.toFile().isFile()).collect(toSet());\n+        for (Path authFile : authFiles) {\n         final File outputFile = createOutputFile(authFile);\n         if (!outputFile.exists()) {\n-          LOG.info(\"Migrating \" + authFile.toAbsolutePath().toString());\n-          Set<VreAuthorization> oldAuths = OBJECT_MAPPER.readValue(\n-            authFile.toFile(),\n-            new TypeReference<Set<VreAuthorization>>() {\n-            }\n-          );\n-\n-          Set<VreAuthorization> newAuths = Sets.newHashSet();\n-          for (VreAuthorization oldAuth : oldAuths) {\n-            final String oldUserId = oldAuth.getUserId();\n-            String userId = oldUserId;\n-            Optional<User> userFromOldUserId = userValidator.getUserFromUserId(oldUserId);\n-            if (userFromOldUserId.isPresent()) {\n-              userId = userFromOldUserId.get().getPersistentId();\n-            } else {\n-              LOG.warn(\"No user found with id '{}'\", oldUserId);\n-            }\n-            newAuths\n-              .add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[]{})));\n-          }\n-\n-          OBJECT_MAPPER.writeValue(outputFile, newAuths);\n+                                            LOG.info(\"Migrating \" + authFile.toAbsolutePath().toString());\n+                                            Set<VreAuthorization> oldAuths = OBJECT_MAPPER.readValue(authFile.toFile(), new TypeReference<Set<VreAuthorization>>() {});\n+                                            Set<VreAuthorization> newAuths = Sets.newHashSet();\n+                                            for (VreAuthorization oldAuth : oldAuths) {\n+                                      final String oldUserId = oldAuth.getUserId();\n+                                      String userId = oldUserId;\n+                                      Optional<User> userFromOldUserId = userValidator.getUserFromUserId(oldUserId);\n+                                      if (userFromOldUserId.isPresent()) {\n+                                                                                          userId = userFromOldUserId.get().getPersistentId();\n+                                      } else {\n+                                        LOG.warn(\"No user found with id '{}'\", oldUserId);\n+                                      }\n+                                      newAuths.add(VreAuthorization.create(oldAuth.getVreId(), userId, oldAuth.getRoles().toArray(new String[]{})));\n+                                            }\n+                                            OBJECT_MAPPER.writeValue(outputFile, newAuths);\n         } else {\n-          LOG.info(\"Skipping migration of \" + authFile.toAbsolutePath().toString() + \" because \" +\n-            outputFile.getAbsolutePath() + \" already exists\");\n+          LOG.info(\"Skipping migration of \" + authFile.toAbsolutePath().toString() + \" because \" + outputFile.getAbsolutePath() + \" already exists\");\n+        }\n         }\n-      }\n+    }\n     }\n \n-  }\n-\n-  private File createOutputFile(Path authFile) {\n+    private File createOutputFile(Path authFile) {\n     String name = authFile.getName(authFile.getNameCount() - 1).toString();\n     String fileWithoutExtension = name.substring(0, name.indexOf(\".\"));\n \n@@ -100,22 +86,14 @@ public class AuthorizationMigration {\n      */\n     File directory;\n     if (name.equals(\"authorizations.json\")) {\n-      directory = Paths.get(dataSetPath).toFile();\n+        directory = Paths.get(dataSetPath).toFile();\n     } else if (fileWithoutExtension.contains(\"__\")) {\n       Tuple<String, String> ownerIdDataSetId = DataSetMetaData.splitCombinedId(fileWithoutExtension);\n-      directory = Paths.get(\n-        dataSetPath,\n-        ownerIdDataSetId.getLeft(),\n-        ownerIdDataSetId.getRight().replace(\"__\", \"\")\n-      ).toFile();\n+      directory = Paths.get(dataSetPath, ownerIdDataSetId.getLeft(), ownerIdDataSetId.getRight().replace(\"__\", \"\")).toFile();\n     } else {\n-      directory = Paths.get(\n-        dataSetPath,\n-        fileWithoutExtension\n-      ).toFile();\n+      directory = Paths.get(dataSetPath, fileWithoutExtension).toFile();\n     }\n-\n     directory.mkdirs();\n     return new File(directory, \"authorizations.json\");\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 63
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/61/AuthorizationMigration.java\nindex 004a9e2fcf..565ccc1a3d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/61/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/61/AuthorizationMigration.java\nindex 004a9e2fcf..565ccc1a3d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/61/AuthorizationMigration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/61/AuthorizationMigration.java\n@@ -49,7 +49,7 @@ public class AuthorizationMigration {\n       return;\n     }\n \n-    try(Stream<Path> fileStream = Files.walk(path)) {\n+    try (Stream<Path> fileStream = Files.walk(path)) {\n       Set<Path> authFiles = fileStream\n         .filter(file -> file.toFile().getName().endsWith(\".json\") && file.toFile().isFile())\n         .collect(toSet());\n",
            "diff_size": 1
        }
    ]
}