{
    "error_id": "92",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n\n/** @author tnine */\npublic class BooleanLiteral extends Literal<Boolean> {\n\n    private boolean value;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/92/BooleanLiteral.java\nindex 040fe75b75..91f1f9b2cc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/92/BooleanLiteral.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query.tree;\n \n \n@@ -21,29 +22,33 @@ import org.antlr.runtime.ClassicToken;\n import org.antlr.runtime.Token;\n \n \n-/** @author tnine */\n+/**\n+ * @author tnine\n+ */\n public class BooleanLiteral extends Literal<Boolean> {\n \n-    private boolean value;\n+  private boolean value;\n \n \n-    /**\n-     * @param t\n-     */\n-    protected BooleanLiteral( Token t ) {\n-        super( t );\n-        value = Boolean.valueOf( t.getText() );\n-    }\n+  /**\n+   * @param t\n+   */\n+  protected BooleanLiteral(Token t) {\n+    super(t);\n+    value = Boolean.valueOf(t.getText());\n+  }\n \n \n-    /** The boolean literal */\n-    public BooleanLiteral( boolean value ) {\n-        super( new ClassicToken( 0, String.valueOf( value ) ) );\n-        this.value = value;\n-    }\n+  /**\n+   * The boolean literal\n+   */\n+  public BooleanLiteral(boolean value) {\n+    super(new ClassicToken(0, String.valueOf(value)));\n+    this.value = value;\n+  }\n \n \n-    public Boolean getValue() {\n-        return value;\n-    }\n+  public Boolean getValue() {\n+    return value;\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/92/BooleanLiteral.java\nindex 040fe75b75..638d27e07e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/92/BooleanLiteral.java\n@@ -46,4 +46,4 @@ public class BooleanLiteral extends Literal<Boolean> {\n     public Boolean getValue() {\n         return value;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/92/BooleanLiteral.java\nindex 040fe75b75..45ced72579 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/92/BooleanLiteral.java\n@@ -22,6 +22,8 @@ import org.antlr.runtime.Token;\n \n \n /** @author tnine */\n+\n+\n public class BooleanLiteral extends Literal<Boolean> {\n \n     private boolean value;\n@@ -30,6 +32,8 @@ public class BooleanLiteral extends Literal<Boolean> {\n     /**\n      * @param t\n      */\n+\n+\n     protected BooleanLiteral( Token t ) {\n         super( t );\n         value = Boolean.valueOf( t.getText() );\n@@ -37,6 +41,8 @@ public class BooleanLiteral extends Literal<Boolean> {\n \n \n     /** The boolean literal */\n+\n+\n     public BooleanLiteral( boolean value ) {\n         super( new ClassicToken( 0, String.valueOf( value ) ) );\n         this.value = value;\n@@ -46,4 +52,4 @@ public class BooleanLiteral extends Literal<Boolean> {\n     public Boolean getValue() {\n         return value;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/92/BooleanLiteral.java\nindex 040fe75b75..e91d9c3514 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/92/BooleanLiteral.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/92/BooleanLiteral.java\n@@ -20,7 +20,6 @@ package org.apache.usergrid.persistence.query.tree;\n import org.antlr.runtime.ClassicToken;\n import org.antlr.runtime.Token;\n \n-\n /** @author tnine */\n public class BooleanLiteral extends Literal<Boolean> {\n \n",
            "diff_size": 1
        }
    ]
}