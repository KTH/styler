{
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.event.impl;\n\nimport java.util.Map;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/24/BPMNMessageConverter.java\nindex e1b995e1be..d46b87668b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/24/BPMNMessageConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Map;\n@@ -29,11 +30,11 @@ public class BPMNMessageConverter {\n         BPMNMessageImpl bpmnMessage = new BPMNMessageImpl(internalEvent.getActivityId());\n         bpmnMessage.setProcessDefinitionId(internalEvent.getProcessDefinitionId());\n         bpmnMessage.setProcessInstanceId(internalEvent.getProcessInstanceId());\n-   \n+\n         bpmnMessage.setMessagePayload(new MessageEventPayload(internalEvent.getMessageName(),\n                                                               internalEvent.getMessageCorrelationKey(),\n                                                               internalEvent.getMessageBusinessKey(),\n-                                                              (Map<String, Object>)internalEvent.getMessageData()));        \n+                                                              (Map<String, Object>)internalEvent.getMessageData()));\n \n         return bpmnMessage;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/24/BPMNMessageConverter.java\nindex e1b995e1be..1ebc35d3a8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/24/BPMNMessageConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Map;\n@@ -29,11 +30,11 @@ public class BPMNMessageConverter {\n         BPMNMessageImpl bpmnMessage = new BPMNMessageImpl(internalEvent.getActivityId());\n         bpmnMessage.setProcessDefinitionId(internalEvent.getProcessDefinitionId());\n         bpmnMessage.setProcessInstanceId(internalEvent.getProcessInstanceId());\n-   \n+\n         bpmnMessage.setMessagePayload(new MessageEventPayload(internalEvent.getMessageName(),\n-                                                              internalEvent.getMessageCorrelationKey(),\n-                                                              internalEvent.getMessageBusinessKey(),\n-                                                              (Map<String, Object>)internalEvent.getMessageData()));        \n+                internalEvent.getMessageCorrelationKey(),\n+                internalEvent.getMessageBusinessKey(),\n+                (Map<String, Object>) internalEvent.getMessageData()));\n \n         return bpmnMessage;\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/24/BPMNMessageConverter.java\nindex e1b995e1be..d854122884 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/24/BPMNMessageConverter.java\n@@ -16,26 +16,20 @@\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Map;\n-\n import org.activiti.api.process.model.payloads.MessageEventPayload;\n import org.activiti.api.runtime.model.impl.BPMNMessageImpl;\n import org.activiti.engine.delegate.event.ActivitiMessageEvent;\n \n+\n public class BPMNMessageConverter {\n \n     @SuppressWarnings(\"unchecked\")\n     public BPMNMessageImpl convertToBPMNMessage(ActivitiMessageEvent internalEvent) {\n-\n-        BPMNMessageImpl bpmnMessage = new BPMNMessageImpl(internalEvent.getActivityId());\n-        bpmnMessage.setProcessDefinitionId(internalEvent.getProcessDefinitionId());\n-        bpmnMessage.setProcessInstanceId(internalEvent.getProcessInstanceId());\n-   \n-        bpmnMessage.setMessagePayload(new MessageEventPayload(internalEvent.getMessageName(),\n-                                                              internalEvent.getMessageCorrelationKey(),\n-                                                              internalEvent.getMessageBusinessKey(),\n-                                                              (Map<String, Object>)internalEvent.getMessageData()));        \n-\n-        return bpmnMessage;\n+    BPMNMessageImpl bpmnMessage = new BPMNMessageImpl(internalEvent.getActivityId());\n+    bpmnMessage.setProcessDefinitionId(internalEvent.getProcessDefinitionId());\n+    bpmnMessage.setProcessInstanceId(internalEvent.getProcessInstanceId());\n+    bpmnMessage.setMessagePayload(new MessageEventPayload(internalEvent.getMessageName(), internalEvent.getMessageCorrelationKey(), internalEvent.getMessageBusinessKey(), (Map<String, Object>) internalEvent.getMessageData()));\n+    return bpmnMessage;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/24/BPMNMessageConverter.java\nindex e1b995e1be..d46b87668b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/24/BPMNMessageConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Map;\n@@ -29,11 +30,11 @@ public class BPMNMessageConverter {\n         BPMNMessageImpl bpmnMessage = new BPMNMessageImpl(internalEvent.getActivityId());\n         bpmnMessage.setProcessDefinitionId(internalEvent.getProcessDefinitionId());\n         bpmnMessage.setProcessInstanceId(internalEvent.getProcessInstanceId());\n-   \n+\n         bpmnMessage.setMessagePayload(new MessageEventPayload(internalEvent.getMessageName(),\n                                                               internalEvent.getMessageCorrelationKey(),\n                                                               internalEvent.getMessageBusinessKey(),\n-                                                              (Map<String, Object>)internalEvent.getMessageData()));        \n+                                                              (Map<String, Object>)internalEvent.getMessageData()));\n \n         return bpmnMessage;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/24/BPMNMessageConverter.java\nindex e1b995e1be..d46b87668b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/24/BPMNMessageConverter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/24/BPMNMessageConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Map;\n@@ -29,11 +30,11 @@ public class BPMNMessageConverter {\n         BPMNMessageImpl bpmnMessage = new BPMNMessageImpl(internalEvent.getActivityId());\n         bpmnMessage.setProcessDefinitionId(internalEvent.getProcessDefinitionId());\n         bpmnMessage.setProcessInstanceId(internalEvent.getProcessInstanceId());\n-   \n+\n         bpmnMessage.setMessagePayload(new MessageEventPayload(internalEvent.getMessageName(),\n                                                               internalEvent.getMessageCorrelationKey(),\n                                                               internalEvent.getMessageBusinessKey(),\n-                                                              (Map<String, Object>)internalEvent.getMessageData()));        \n+                                                              (Map<String, Object>)internalEvent.getMessageData()));\n \n         return bpmnMessage;\n     }\n",
            "diff_size": 3
        }
    ]
}