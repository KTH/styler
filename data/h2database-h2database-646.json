{
    "error_id": "646",
    "information": {
        "errors": [
            {
                "line": "269",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "     *      String)\n     */\n    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n            String functionNamePattern, String columnNamePattern);\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/646/DatabaseMeta.java\nindex a0e0a12301..f501df9cdc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler/646/DatabaseMeta.java\n@@ -266,16 +266,19 @@ public abstract class DatabaseMeta {\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern,\n \n-    /**\n+    //\n+    String functionNamePattern, String columnNamePattern);\n+\n+     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getPseudoColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n-            String columnNamePattern);\n+     public abstract ResultInterface getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n+             String columnNamePattern);\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "307",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/646/DatabaseMeta.java\nindex a0e0a12301..37dcdf2d5a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/intellij/646/DatabaseMeta.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.jdbc.meta;\n \n import org.h2.result.ResultInterface;\n@@ -12,270 +13,310 @@ import org.h2.result.ResultInterface;\n  */\n public abstract class DatabaseMeta {\n \n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#nullsAreSortedHigh()\n-     */\n-    public abstract boolean nullsAreSortedHigh();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getDatabaseProductVersion()\n-     */\n-    public abstract String getDatabaseProductVersion();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSQLKeywords()\n-     */\n-    public abstract String getSQLKeywords();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getNumericFunctions()\n-     */\n-    public abstract String getNumericFunctions();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getStringFunctions()\n-     */\n-    public abstract String getStringFunctions();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSystemFunctions()\n-     */\n-    public abstract String getSystemFunctions();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getTimeDateFunctions()\n-     */\n-    public abstract String getTimeDateFunctions();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSearchStringEscape()\n-     */\n-    public abstract String getSearchStringEscape();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getProcedures(String, String, String)\n-     */\n-    public abstract ResultInterface getProcedures(String catalogPattern, String schemaPattern,\n-            String procedureNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getProcedureColumns(String, String,\n-     *      String, String)\n-     */\n-    public abstract ResultInterface getProcedureColumns(String catalogPattern, String schemaPattern,\n-            String procedureNamePattern, String columnNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     * \n-     * @see java.sql.DatabaseMetaData#getTables(String, String, String,\n-     *      String[])\n-     */\n-    public abstract ResultInterface getTables(String catalogPattern, String schemaPattern, String tableNamePattern,\n-            String[] types);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSchemas()\n-     */\n-    public abstract ResultInterface getSchemas();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getCatalogs()\n-     */\n-    public abstract ResultInterface getCatalogs();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getTableTypes()\n-     */\n-    public abstract ResultInterface getTableTypes();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getColumns(String, String, String, String)\n-     */\n-    public abstract ResultInterface getColumns(String catalogPattern, String schemaPattern, String tableNamePattern,\n-            String columnNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getColumnPrivileges(String, String,\n-     *      String, String)\n-     */\n-    public abstract ResultInterface getColumnPrivileges(String catalogPattern, String schemaPattern, String table,\n-            String columnNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getTablePrivileges(String, String, String)\n-     */\n-    public abstract ResultInterface getTablePrivileges(String catalogPattern, String schemaPattern,\n-            String tableNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getBestRowIdentifier(String, String,\n-     *      String, int, boolean)\n-     */\n-    public abstract ResultInterface getBestRowIdentifier(String catalogPattern, String schemaPattern, String tableName,\n-            int scope, boolean nullable);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getVersionColumns(String, String, String)\n-     */\n-    public abstract ResultInterface getVersionColumns(String catalog, String schema, String tableName);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getPrimaryKeys(String, String, String)\n-     */\n-    public abstract ResultInterface getPrimaryKeys(String catalogPattern, String schemaPattern, String tableName);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getImportedKeys(String, String, String)\n-     */\n-    public abstract ResultInterface getImportedKeys(String catalogPattern, String schemaPattern, String tableName);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getExportedKeys(String, String, String)\n-     */\n-    public abstract ResultInterface getExportedKeys(String catalogPattern, String schemaPattern, String tableName);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getCrossReference(String, String, String,\n-     *      String, String, String)\n-     */\n-    public abstract ResultInterface getCrossReference(String primaryCatalogPattern, String primarySchemaPattern,\n-            String primaryTable, String foreignCatalogPattern, String foreignSchemaPattern, String foreignTable);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getTypeInfo()\n-     */\n-    public abstract ResultInterface getTypeInfo();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getIndexInfo(String, String, String,\n-     *      boolean, boolean)\n-     */\n-    public abstract ResultInterface getIndexInfo(String catalogPattern, String schemaPattern, String tableName,\n-            boolean unique, boolean approximate);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getUDTs(String, String, String, int[])\n-     */\n-    public abstract ResultInterface getUDTs(String catalog, String schemaPattern, String typeNamePattern, int[] types);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSuperTypes(String, String, String)\n-     */\n-    public abstract ResultInterface getSuperTypes(String catalog, String schemaPattern, String typeNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSuperTables(String, String, String)\n-     */\n-    public abstract ResultInterface getSuperTables(String catalog, String schemaPattern, String tableNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getAttributes(String, String, String,\n-     *      String)\n-     */\n-    public abstract ResultInterface getAttributes(String catalog, String schemaPattern, String typeNamePattern,\n-            String attributeNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getDatabaseMajorVersion()\n-     */\n-    public abstract int getDatabaseMajorVersion();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getDatabaseMinorVersion()\n-     */\n-    public abstract int getDatabaseMinorVersion();\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getSchemas(String, String)\n-     */\n-    public abstract ResultInterface getSchemas(String catalogPattern, String schemaPattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getFunctions(String, String, String)\n-     */\n-    public abstract ResultInterface getFunctions(String catalog, String schemaPattern, String functionNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n-     *      String)\n-     */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n-\n-    /**\n-     * INTERNAL\n-     *\n-     * @see java.sql.DatabaseMetaData#getPseudoColumns(String, String, String,\n-     *      String)\n-     */\n-    public abstract ResultInterface getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n-            String columnNamePattern);\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#nullsAreSortedHigh()\n+   */\n+  public abstract boolean nullsAreSortedHigh();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getDatabaseProductVersion()\n+   */\n+  public abstract String getDatabaseProductVersion();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSQLKeywords()\n+   */\n+  public abstract String getSQLKeywords();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getNumericFunctions()\n+   */\n+  public abstract String getNumericFunctions();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getStringFunctions()\n+   */\n+  public abstract String getStringFunctions();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSystemFunctions()\n+   */\n+  public abstract String getSystemFunctions();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getTimeDateFunctions()\n+   */\n+  public abstract String getTimeDateFunctions();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSearchStringEscape()\n+   */\n+  public abstract String getSearchStringEscape();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getProcedures(String, String, String)\n+   */\n+  public abstract ResultInterface getProcedures(String catalogPattern,\n+                                                String schemaPattern,\n+                                                String procedureNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getProcedureColumns(String, String,\n+   * String, String)\n+   */\n+  public abstract ResultInterface getProcedureColumns(String catalogPattern,\n+                                                      String schemaPattern,\n+                                                      String procedureNamePattern,\n+                                                      String columnNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getTables(String, String, String,\n+   * String[])\n+   */\n+  public abstract ResultInterface getTables(String catalogPattern,\n+                                            String schemaPattern,\n+                                            String tableNamePattern,\n+                                            String[] types);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSchemas()\n+   */\n+  public abstract ResultInterface getSchemas();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getCatalogs()\n+   */\n+  public abstract ResultInterface getCatalogs();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getTableTypes()\n+   */\n+  public abstract ResultInterface getTableTypes();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getColumns(String, String, String, String)\n+   */\n+  public abstract ResultInterface getColumns(String catalogPattern,\n+                                             String schemaPattern,\n+                                             String tableNamePattern,\n+                                             String columnNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getColumnPrivileges(String, String,\n+   * String, String)\n+   */\n+  public abstract ResultInterface getColumnPrivileges(String catalogPattern,\n+                                                      String schemaPattern,\n+                                                      String table,\n+                                                      String columnNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getTablePrivileges(String, String, String)\n+   */\n+  public abstract ResultInterface getTablePrivileges(String catalogPattern,\n+                                                     String schemaPattern,\n+                                                     String tableNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getBestRowIdentifier(String, String,\n+   * String, int, boolean)\n+   */\n+  public abstract ResultInterface getBestRowIdentifier(String catalogPattern,\n+                                                       String schemaPattern,\n+                                                       String tableName,\n+                                                       int scope,\n+                                                       boolean nullable);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getVersionColumns(String, String, String)\n+   */\n+  public abstract ResultInterface getVersionColumns(String catalog,\n+                                                    String schema,\n+                                                    String tableName);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getPrimaryKeys(String, String, String)\n+   */\n+  public abstract ResultInterface getPrimaryKeys(String catalogPattern,\n+                                                 String schemaPattern,\n+                                                 String tableName);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getImportedKeys(String, String, String)\n+   */\n+  public abstract ResultInterface getImportedKeys(String catalogPattern,\n+                                                  String schemaPattern,\n+                                                  String tableName);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getExportedKeys(String, String, String)\n+   */\n+  public abstract ResultInterface getExportedKeys(String catalogPattern,\n+                                                  String schemaPattern,\n+                                                  String tableName);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getCrossReference(String, String, String,\n+   * String, String, String)\n+   */\n+  public abstract ResultInterface getCrossReference(\n+      String primaryCatalogPattern, String primarySchemaPattern,\n+      String primaryTable, String foreignCatalogPattern,\n+      String foreignSchemaPattern, String foreignTable);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getTypeInfo()\n+   */\n+  public abstract ResultInterface getTypeInfo();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getIndexInfo(String, String, String,\n+   * boolean, boolean)\n+   */\n+  public abstract ResultInterface getIndexInfo(String catalogPattern,\n+                                               String schemaPattern,\n+                                               String tableName,\n+                                               boolean unique,\n+                                               boolean approximate);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getUDTs(String, String, String, int[])\n+   */\n+  public abstract ResultInterface getUDTs(String catalog, String schemaPattern,\n+                                          String typeNamePattern, int[] types);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSuperTypes(String, String, String)\n+   */\n+  public abstract ResultInterface getSuperTypes(String catalog,\n+                                                String schemaPattern,\n+                                                String typeNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSuperTables(String, String, String)\n+   */\n+  public abstract ResultInterface getSuperTables(String catalog,\n+                                                 String schemaPattern,\n+                                                 String tableNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getAttributes(String, String, String,\n+   * String)\n+   */\n+  public abstract ResultInterface getAttributes(String catalog,\n+                                                String schemaPattern,\n+                                                String typeNamePattern,\n+                                                String attributeNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getDatabaseMajorVersion()\n+   */\n+  public abstract int getDatabaseMajorVersion();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getDatabaseMinorVersion()\n+   */\n+  public abstract int getDatabaseMinorVersion();\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getSchemas(String, String)\n+   */\n+  public abstract ResultInterface getSchemas(String catalogPattern,\n+                                             String schemaPattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getFunctions(String, String, String)\n+   */\n+  public abstract ResultInterface getFunctions(String catalog,\n+                                               String schemaPattern,\n+                                               String functionNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n+   * String)\n+   */\n+  public abstract ResultInterface getFunctionColumns(String catalog,\n+                                                     String schemaPattern, //\n+                                                     String functionNamePattern,\n+                                                     String columnNamePattern);\n+\n+  /**\n+   * INTERNAL\n+   *\n+   * @see java.sql.DatabaseMetaData#getPseudoColumns(String, String, String,\n+   * String)\n+   */\n+  public abstract ResultInterface getPseudoColumns(String catalog,\n+                                                   String schemaPattern,\n+                                                   String tableNamePattern,\n+                                                   String columnNamePattern);\n \n }\n",
            "diff_size": 306
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/646/DatabaseMeta.java\nindex a0e0a12301..0a48b67554 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_random/646/DatabaseMeta.java\n@@ -265,8 +265,7 @@ public abstract class DatabaseMeta {\n      *\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n      *      String)\n-     */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n+     */public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n             String functionNamePattern, String columnNamePattern);\n \n     /**\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/646/DatabaseMeta.java\nindex a0e0a12301..f501df9cdc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/errored/1/646/DatabaseMeta.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/h2database-h2database/styler_three_grams/646/DatabaseMeta.java\n@@ -266,16 +266,19 @@ public abstract class DatabaseMeta {\n      * @see java.sql.DatabaseMetaData#getFunctionColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern, //\n-            String functionNamePattern, String columnNamePattern);\n+    public abstract ResultInterface getFunctionColumns(String catalog, String schemaPattern,\n \n-    /**\n+    //\n+    String functionNamePattern, String columnNamePattern);\n+\n+     /**\n      * INTERNAL\n      *\n      * @see java.sql.DatabaseMetaData#getPseudoColumns(String, String, String,\n      *      String)\n      */\n-    public abstract ResultInterface getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n-            String columnNamePattern);\n+     public abstract ResultInterface getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern,\n+             String columnNamePattern);\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 10
        }
    ]
}