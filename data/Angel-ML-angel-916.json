{
    "error_id": "916",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/916/AsyncAdagradFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/916/AsyncAdagradFunc.java\nindex 50d6de27c9..a41a3e9aad 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/916/AsyncAdagradFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/916/AsyncAdagradFunc.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.spark.ml.psf.optim;\n \n import com.tencent.angel.ml.math2.ufuncs.OptFuncs;\n@@ -22,24 +23,24 @@ import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n \n public class AsyncAdagradFunc extends AsyncOptimFunc {\n \n-  public AsyncAdagradFunc(UpdateParam param) {\n-    super(param);\n-  }\n+    public AsyncAdagradFunc(UpdateParam param) {\n+        super(param);\n+    }\n \n-  public AsyncAdagradFunc() {\n-    this(null);\n-  }\n+    public AsyncAdagradFunc() {\n+        this(null);\n+    }\n \n-  @Override\n-  public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n-    double eta = doubles[0];\n-    double factor = doubles[1];\n+    @Override\n+    public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n+        double eta = doubles[0];\n+        double factor = doubles[1];\n \n-    Vector weight = vectors[0];\n-    Vector square = vectors[1];\n+        Vector weight = vectors[0];\n+        Vector square = vectors[1];\n \n-    OptFuncs.iexpsmoothing2(square, grad, factor);\n-    grad = OptFuncs.adagraddelta(grad, square, 0.0, eta);\n-    weight.isub(grad);\n-  }\n+        OptFuncs.iexpsmoothing2(square, grad, factor);\n+        grad = OptFuncs.adagraddelta(grad, square, 0.0, eta);\n+        weight.isub(grad);\n+    }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/916/AsyncAdagradFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/916/AsyncAdagradFunc.java\nindex 50d6de27c9..733178f552 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/916/AsyncAdagradFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/916/AsyncAdagradFunc.java\n@@ -42,4 +42,4 @@ public class AsyncAdagradFunc extends AsyncOptimFunc {\n     grad = OptFuncs.adagraddelta(grad, square, 0.0, eta);\n     weight.isub(grad);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/916/AsyncAdagradFunc.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/916/AsyncAdagradFunc.java\nindex 50d6de27c9..827ea0dc7a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/916/AsyncAdagradFunc.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/916/AsyncAdagradFunc.java\n@@ -22,24 +22,23 @@ import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n \n public class AsyncAdagradFunc extends AsyncOptimFunc {\n \n-  public AsyncAdagradFunc(UpdateParam param) {\n+    public AsyncAdagradFunc(UpdateParam param) {\n     super(param);\n-  }\n+    }\n \n-  public AsyncAdagradFunc() {\n+    public AsyncAdagradFunc() {\n     this(null);\n-  }\n+    }\n \n-  @Override\n-  public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n+    @Override\n+    public void update(Vector[] vectors, Vector grad, double[] doubles, int[] ints) {\n     double eta = doubles[0];\n     double factor = doubles[1];\n-\n     Vector weight = vectors[0];\n     Vector square = vectors[1];\n-\n     OptFuncs.iexpsmoothing2(square, grad, factor);\n     grad = OptFuncs.adagraddelta(grad, square, 0.0, eta);\n     weight.isub(grad);\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}