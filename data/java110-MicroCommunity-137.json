{
    "error_id": "137",
    "information": {
        "errors": [
            {
                "line": "46",
                "column": "103",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n        JSONObject reqJson = event.getDataFlowContext().getReqJson();\n        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n        dataFlowContext.setResponseEntity(responseEntity);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/137/QueryDictListener.java\nindex e529cf9d8e..f0fc1ebcc8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/137/QueryDictListener.java\n@@ -43,7 +43,7 @@ public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n         JSONObject reqJson = event.getDataFlowContext().getReqJson();\n-        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n+        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson, DictQueryDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/137/QueryDictListener.java\nindex e529cf9d8e..61d47cab84 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/137/QueryDictListener.java\n@@ -25,31 +25,31 @@ import java.util.List;\n @Java110Listener(\"queryDictListener\")\n public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n \n-    @Autowired\n-    private DictInnerServiceSMO dictInnerServiceSMO;\n-\n-    @Override\n-    public String getServiceCode() {\n-        return ServiceCodeConstant.SERVICE_CODE_DICT_TYPE;\n-    }\n-\n-    @Override\n-    public HttpMethod getHttpMethod() {\n-        return HttpMethod.GET;\n-    }\n-\n-    @Override\n-    public void soService(ServiceDataFlowEvent event) {\n-        DataFlowContext dataFlowContext = event.getDataFlowContext();\n-        //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n-        JSONObject reqJson = event.getDataFlowContext().getReqJson();\n-        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n-        dataFlowContext.setResponseEntity(responseEntity);\n-    }\n-\n-    @Override\n-    public int getOrder() {\n-        return 0;\n-    }\n+  @Autowired\n+  private DictInnerServiceSMO dictInnerServiceSMO;\n+\n+  @Override\n+  public String getServiceCode() {\n+    return ServiceCodeConstant.SERVICE_CODE_DICT_TYPE;\n+  }\n+\n+  @Override\n+  public HttpMethod getHttpMethod() {\n+    return HttpMethod.GET;\n+  }\n+\n+  @Override\n+  public void soService(ServiceDataFlowEvent event) {\n+    DataFlowContext dataFlowContext = event.getDataFlowContext();\n+    //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n+    JSONObject reqJson = event.getDataFlowContext().getReqJson();\n+    List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson, DictQueryDto.class));\n+    ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n+    dataFlowContext.setResponseEntity(responseEntity);\n+  }\n+\n+  @Override\n+  public int getOrder() {\n+    return 0;\n+  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/137/QueryDictListener.java\nindex e529cf9d8e..3c1b4f2cd0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/137/QueryDictListener.java\n@@ -43,7 +43,7 @@ public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n         JSONObject reqJson = event.getDataFlowContext().getReqJson();\n-        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n+        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson, DictQueryDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n@@ -52,4 +52,4 @@ public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n     public int getOrder() {\n         return 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/137/QueryDictListener.java\nindex e529cf9d8e..6001d3e4ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/137/QueryDictListener.java\n@@ -14,7 +14,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +21,8 @@ import java.util.List;\n  * Created by \u79bb\u6b4c\u7b11 on 10/22/2019\n  * <p>\n  */\n+\n+\n @Java110Listener(\"queryDictListener\")\n public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n \n@@ -33,23 +34,26 @@ public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n         return ServiceCodeConstant.SERVICE_CODE_DICT_TYPE;\n     }\n \n+\n     @Override\n     public HttpMethod getHttpMethod() {\n         return HttpMethod.GET;\n     }\n \n+\n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n         JSONObject reqJson = event.getDataFlowContext().getReqJson();\n-        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n+        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson, DictQueryDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n \n+\n     @Override\n     public int getOrder() {\n         return 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/137/QueryDictListener.java\nindex e529cf9d8e..f0fc1ebcc8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/137/QueryDictListener.java\n@@ -43,7 +43,7 @@ public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n         JSONObject reqJson = event.getDataFlowContext().getReqJson();\n-        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n+        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson, DictQueryDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "column": "104",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "104",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/137/QueryDictListener.java\nindex e529cf9d8e..06c685c1f4 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/137/QueryDictListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/137/QueryDictListener.java\n@@ -43,7 +43,7 @@ public class QueryDictListener extends AbstractServiceApiDataFlowListener {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\n         JSONObject reqJson = event.getDataFlowContext().getReqJson();\n-        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson,DictQueryDto.class));\n+        List<DictDto> dictDtos = this.dictInnerServiceSMO.queryDict(BeanConvertUtil.covertBean(reqJson ,DictQueryDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(dictDtos), HttpStatus.OK);\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 1
        }
    ]
}