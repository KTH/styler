{
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "141",
                "column": "43",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    CompareData compareData = (CompareData)o;\n    return\n        Objects.equals(this.author, compareData.author) &&\n        Objects.equals(this.compareOptions, compareData.compareOptions) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/39/CompareData.java\nindex 8f81cd23b9..77c17ceac1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler/39/CompareData.java\n@@ -138,7 +138,7 @@ public class CompareData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CompareData compareData = (CompareData)o;\n+    CompareData compareData = (CompareData) o;\n     return\n         Objects.equals(this.author, compareData.author) &&\n         Objects.equals(this.compareOptions, compareData.compareOptions) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/39/CompareData.java\nindex 8f81cd23b9..1eb3c33aa3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/intellij/39/CompareData.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -47,103 +50,108 @@ import io.swagger.annotations.ApiModelProperty;\n  */\n @ApiModel(description = \"Container class for compare documents.\")\n public class CompareData {\n-    @SerializedName(\"Author\")\n-    private String author = null;\n+  @SerializedName(\"Author\")\n+  private String author = null;\n \n-    @SerializedName(\"CompareOptions\")\n-    private CompareOptions compareOptions = null;\n+  @SerializedName(\"CompareOptions\")\n+  private CompareOptions compareOptions = null;\n \n-    @SerializedName(\"ComparingWithDocument\")\n-    private String comparingWithDocument = null;\n+  @SerializedName(\"ComparingWithDocument\")\n+  private String comparingWithDocument = null;\n \n-    @SerializedName(\"DateTime\")\n-    private OffsetDateTime dateTime = null;\n-    public CompareData author(String author) {\n-        this.author = author;\n-        return this;\n-    }\n+  @SerializedName(\"DateTime\")\n+  private OffsetDateTime dateTime = null;\n \n-    /**\n-     * Gets or sets initials of the author to use for revisions.\n-    * @return author\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets initials of the author to use for revisions.\")\n-    public String getAuthor() {\n-        return author;\n-    }\n+  public CompareData author(String author) {\n+    this.author = author;\n+    return this;\n+  }\n \n-    public void setAuthor(String author) {\n-        this.author = author;\n-    }\n+  /**\n+   * Gets or sets initials of the author to use for revisions.\n+   *\n+   * @return author\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets initials of the author to use for revisions.\")\n+  public String getAuthor() {\n+    return author;\n+  }\n \n-    public CompareData compareOptions(CompareOptions compareOptions) {\n-        this.compareOptions = compareOptions;\n-        return this;\n-    }\n+  public void setAuthor(String author) {\n+    this.author = author;\n+  }\n \n-    /**\n-     * Gets or sets the compare options.\n-    * @return compareOptions\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the compare options.\")\n-    public CompareOptions getCompareOptions() {\n-        return compareOptions;\n-    }\n+  public CompareData compareOptions(CompareOptions compareOptions) {\n+    this.compareOptions = compareOptions;\n+    return this;\n+  }\n \n-    public void setCompareOptions(CompareOptions compareOptions) {\n-        this.compareOptions = compareOptions;\n-    }\n+  /**\n+   * Gets or sets the compare options.\n+   *\n+   * @return compareOptions\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the compare options.\")\n+  public CompareOptions getCompareOptions() {\n+    return compareOptions;\n+  }\n \n-    public CompareData comparingWithDocument(String comparingWithDocument) {\n-        this.comparingWithDocument = comparingWithDocument;\n-        return this;\n-    }\n+  public void setCompareOptions(CompareOptions compareOptions) {\n+    this.compareOptions = compareOptions;\n+  }\n \n-    /**\n-     * Gets or sets path to document to compare at the server.\n-    * @return comparingWithDocument\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets path to document to compare at the server.\")\n-    public String getComparingWithDocument() {\n-        return comparingWithDocument;\n-    }\n+  public CompareData comparingWithDocument(String comparingWithDocument) {\n+    this.comparingWithDocument = comparingWithDocument;\n+    return this;\n+  }\n \n-    public void setComparingWithDocument(String comparingWithDocument) {\n-        this.comparingWithDocument = comparingWithDocument;\n-    }\n+  /**\n+   * Gets or sets path to document to compare at the server.\n+   *\n+   * @return comparingWithDocument\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets path to document to compare at the server.\")\n+  public String getComparingWithDocument() {\n+    return comparingWithDocument;\n+  }\n \n-    public CompareData dateTime(OffsetDateTime dateTime) {\n-        this.dateTime = dateTime;\n-        return this;\n-    }\n+  public void setComparingWithDocument(String comparingWithDocument) {\n+    this.comparingWithDocument = comparingWithDocument;\n+  }\n \n-    /**\n-     * Gets or sets the date and time to use for revisions.\n-    * @return dateTime\n-    **/\n-    @ApiModelProperty(value = \"Gets or sets the date and time to use for revisions.\")\n-    public OffsetDateTime getDateTime() {\n-        return dateTime;\n-    }\n+  public CompareData dateTime(OffsetDateTime dateTime) {\n+    this.dateTime = dateTime;\n+    return this;\n+  }\n \n-    public void setDateTime(OffsetDateTime dateTime) {\n-        this.dateTime = dateTime;\n-    }\n+  /**\n+   * Gets or sets the date and time to use for revisions.\n+   *\n+   * @return dateTime\n+   **/\n+  @ApiModelProperty(value = \"Gets or sets the date and time to use for revisions.\")\n+  public OffsetDateTime getDateTime() {\n+    return dateTime;\n+  }\n+\n+  public void setDateTime(OffsetDateTime dateTime) {\n+    this.dateTime = dateTime;\n+  }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    CompareData compareData = (CompareData)o;\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    CompareData compareData = (CompareData) o;\n     return\n         Objects.equals(this.author, compareData.author) &&\n-        Objects.equals(this.compareOptions, compareData.compareOptions) &&\n-        Objects.equals(this.comparingWithDocument, compareData.comparingWithDocument) &&\n-        Objects.equals(this.dateTime, compareData.dateTime);\n+            Objects.equals(this.compareOptions, compareData.compareOptions) &&\n+            Objects.equals(this.comparingWithDocument, compareData.comparingWithDocument) &&\n+            Objects.equals(this.dateTime, compareData.dateTime);\n   }\n \n   @Override\n",
            "diff_size": 113
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "143",
                    "column": "39",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/39/CompareData.java\nindex 8f81cd23b9..db2bd8b3b8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/naturalize/39/CompareData.java\n@@ -58,7 +58,8 @@ public class CompareData {\n \n     @SerializedName(\"DateTime\")\n     private OffsetDateTime dateTime = null;\n-    public CompareData author(String author) {\n+\n+public CompareData author(String author) {\n         this.author = author;\n         return this;\n     }\n@@ -134,13 +135,13 @@ public class CompareData {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CompareData compareData = (CompareData)o;\n-    return\n-        Objects.equals(this.author, compareData.author) &&\n+\n+CompareData compareData = (CompareData)o;\n+    return Objects.equals(this.author, compareData.author) &&\n         Objects.equals(this.compareOptions, compareData.compareOptions) &&\n         Objects.equals(this.comparingWithDocument, compareData.comparingWithDocument) &&\n         Objects.equals(this.dateTime, compareData.dateTime);\n@@ -173,4 +174,4 @@ public class CompareData {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/39/CompareData.java\nindex 8f81cd23b9..12e7dce412 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/codebuff/39/CompareData.java\n@@ -45,7 +45,10 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Container class for compare documents.\n  */\n+\n+\n @ApiModel(description = \"Container class for compare documents.\")\n+\n public class CompareData {\n     @SerializedName(\"Author\")\n     private String author = null;\n@@ -58,101 +61,122 @@ public class CompareData {\n \n     @SerializedName(\"DateTime\")\n     private OffsetDateTime dateTime = null;\n+\n     public CompareData author(String author) {\n-        this.author = author;\n-        return this;\n+    this.author = author;\n+    return this;\n     }\n \n     /**\n      * Gets or sets initials of the author to use for revisions.\n     * @return author\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets initials of the author to use for revisions.\")\n     public String getAuthor() {\n-        return author;\n+    return author;\n     }\n \n+\n     public void setAuthor(String author) {\n-        this.author = author;\n+    this.author = author;\n     }\n \n+\n     public CompareData compareOptions(CompareOptions compareOptions) {\n-        this.compareOptions = compareOptions;\n-        return this;\n+    this.compareOptions = compareOptions;\n+    return this;\n     }\n \n     /**\n      * Gets or sets the compare options.\n     * @return compareOptions\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the compare options.\")\n     public CompareOptions getCompareOptions() {\n-        return compareOptions;\n+    return compareOptions;\n     }\n \n+\n     public void setCompareOptions(CompareOptions compareOptions) {\n-        this.compareOptions = compareOptions;\n+    this.compareOptions = compareOptions;\n     }\n \n+\n     public CompareData comparingWithDocument(String comparingWithDocument) {\n-        this.comparingWithDocument = comparingWithDocument;\n-        return this;\n+    this.comparingWithDocument = comparingWithDocument;\n+    return this;\n     }\n \n     /**\n      * Gets or sets path to document to compare at the server.\n     * @return comparingWithDocument\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets path to document to compare at the server.\")\n     public String getComparingWithDocument() {\n-        return comparingWithDocument;\n+    return comparingWithDocument;\n     }\n \n+\n     public void setComparingWithDocument(String comparingWithDocument) {\n-        this.comparingWithDocument = comparingWithDocument;\n+    this.comparingWithDocument = comparingWithDocument;\n     }\n \n+\n     public CompareData dateTime(OffsetDateTime dateTime) {\n-        this.dateTime = dateTime;\n-        return this;\n+    this.dateTime = dateTime;\n+    return this;\n     }\n \n     /**\n      * Gets or sets the date and time to use for revisions.\n     * @return dateTime\n     **/\n+\n+\n     @ApiModelProperty(value = \"Gets or sets the date and time to use for revisions.\")\n     public OffsetDateTime getDateTime() {\n-        return dateTime;\n+    return dateTime;\n     }\n \n+\n     public void setDateTime(OffsetDateTime dateTime) {\n-        this.dateTime = dateTime;\n+    this.dateTime = dateTime;\n     }\n \n+\n     @Override\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n-            return true;\n+        return true;\n         }\n+\n+\n         if (o == null || getClass() != o.getClass()) {\n-            return false;\n+        return false;\n         }\n-    CompareData compareData = (CompareData)o;\n-    return\n-        Objects.equals(this.author, compareData.author) &&\n+\n+        CompareData compareData = (CompareData) o;\n+        return Objects.equals(this.author, compareData.author) &&\n         Objects.equals(this.compareOptions, compareData.compareOptions) &&\n-        Objects.equals(this.comparingWithDocument, compareData.comparingWithDocument) &&\n-        Objects.equals(this.dateTime, compareData.dateTime);\n-  }\n+            Objects.equals(this.comparingWithDocument, compareData.comparingWithDocument) &&\n+            Objects.equals(this.dateTime, compareData.dateTime);\n+    }\n \n-  @Override\n-  public int hashCode() {\n+\n+    @Override\n+    public int hashCode() {\n     return Objects.hash(author, compareOptions, comparingWithDocument, dateTime);\n-  }\n+    }\n+\n \n-  @Override\n-  public String toString() {\n+    @Override\n+    public String toString() {\n     StringBuilder sb = new StringBuilder();\n     sb.append(\"class CompareData {\\n\");\n     sb.append(\"    author: \").append(toIndentedString(author)).append(\"\\n\");\n@@ -161,16 +185,19 @@ public class CompareData {\n     sb.append(\"    dateTime: \").append(toIndentedString(dateTime)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n-  }\n+    }\n \n   /**\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n-  private String toIndentedString(java.lang.Object o) {\n+\n+\n+    private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n-      return \"null\";\n+        return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/39/CompareData.java\nindex 8f81cd23b9..77c17ceac1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_random/39/CompareData.java\n@@ -138,7 +138,7 @@ public class CompareData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CompareData compareData = (CompareData)o;\n+    CompareData compareData = (CompareData) o;\n     return\n         Objects.equals(this.author, compareData.author) &&\n         Objects.equals(this.compareOptions, compareData.compareOptions) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/39/CompareData.java\nindex 8f81cd23b9..5c82fb2ded 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/errored/1/39/CompareData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/39/CompareData.java\n@@ -138,7 +138,8 @@ public class CompareData {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    CompareData compareData = (CompareData)o;\n+    CompareData compareData = (CompareData\n+) o;\n     return\n         Objects.equals(this.author, compareData.author) &&\n         Objects.equals(this.compareOptions, compareData.compareOptions) &&\n",
            "diff_size": 2
        }
    ]
}