{
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 100).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Test\n  public void testNamingConventionWithBucketAndNoPath() {\n    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n    NamingConvention convention = accessor.getNamingConvention();\n    assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "125",
                    "severity": "error",
                    "message": "WhitespaceAround: '=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "157",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/9/S3AccessorTest.java\nindex 4b97bca9b7..81c4536172 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler/9/S3AccessorTest.java\n@@ -41,8 +41,7 @@ public class S3AccessorTest {\n \n   @Test\n   public void testNamingConventionWithBucketAndNoPath() {\n-    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n-    NamingConvention convention = accessor.getNamingConvention();\n+    S3Accessor accessor = new S3Accessor(entity,URI.create(\"gs://bucket\"),Collections.emptyMap());NamingConventionconvention= accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n   }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/9/S3AccessorTest.java\nindex 4b97bca9b7..e8619e9db5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/intellij/9/S3AccessorTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2020 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.s3;\n \n import static org.junit.Assert.*;\n@@ -41,7 +42,8 @@ public class S3AccessorTest {\n \n   @Test\n   public void testNamingConventionWithBucketAndNoPath() {\n-    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n+    S3Accessor accessor =\n+        new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n     NamingConvention convention = accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n   }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/9/S3AccessorTest.java\nindex 4b97bca9b7..fb278f211c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/naturalize/9/S3AccessorTest.java\n@@ -29,13 +29,14 @@ public class S3AccessorTest {\n \n   private final Repository repo =\n       Repository.of(ConfigFactory.load(\"test-reference.conf\").resolve());\n-  private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n+private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n \n   @Test\n   public void testNamingConventionWithBucket() {\n     S3Accessor accessor =\n         new S3Accessor(entity, URI.create(\"gs://bucket/path\"), Collections.emptyMap());\n-    NamingConvention convention = accessor.getNamingConvention();\n+\n+        NamingConvention convention = accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n   }\n \n@@ -45,4 +46,4 @@ public class S3AccessorTest {\n     NamingConvention convention = accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/9/S3AccessorTest.java\nindex 4b97bca9b7..ef457b70ae 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/codebuff/9/S3AccessorTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.direct.s3;\n \n import static org.junit.Assert.*;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.direct.bulk.NamingConvention;\n import cz.o2.proxima.repository.EntityDescriptor;\n@@ -25,24 +24,23 @@ import java.net.URI;\n import java.util.Collections;\n import org.junit.Test;\n \n+\n public class S3AccessorTest {\n \n-  private final Repository repo =\n-      Repository.of(ConfigFactory.load(\"test-reference.conf\").resolve());\n-  private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n+    private final Repository repo = Repository.of(ConfigFactory.load(\"test-reference.conf\").resolve());\n+    private final EntityDescriptor entity = repo.getEntity(\"gateway\");\n \n-  @Test\n-  public void testNamingConventionWithBucket() {\n-    S3Accessor accessor =\n-        new S3Accessor(entity, URI.create(\"gs://bucket/path\"), Collections.emptyMap());\n+    @Test\n+    public void testNamingConventionWithBucket() {\n+    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket/path\"), Collections.emptyMap());\n     NamingConvention convention = accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n-  }\n+    }\n \n-  @Test\n-  public void testNamingConventionWithBucketAndNoPath() {\n+    @Test\n+    public void testNamingConventionWithBucketAndNoPath() {\n     S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n     NamingConvention convention = accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "125",
                    "severity": "error",
                    "message": "WhitespaceAround: '=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "157",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/9/S3AccessorTest.java\nindex 4b97bca9b7..81c4536172 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_random/9/S3AccessorTest.java\n@@ -41,8 +41,7 @@ public class S3AccessorTest {\n \n   @Test\n   public void testNamingConventionWithBucketAndNoPath() {\n-    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n-    NamingConvention convention = accessor.getNamingConvention();\n+    S3Accessor accessor = new S3Accessor(entity,URI.create(\"gs://bucket\"),Collections.emptyMap());NamingConventionconvention= accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n   }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "126",
                    "severity": "error",
                    "message": "WhitespaceAround: '=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "158",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/9/S3AccessorTest.java\nindex 4b97bca9b7..727ccf65f1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/errored/1/9/S3AccessorTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/O2-Czech-Republic-proxima-platform/styler_three_grams/9/S3AccessorTest.java\n@@ -41,8 +41,7 @@ public class S3AccessorTest {\n \n   @Test\n   public void testNamingConventionWithBucketAndNoPath() {\n-    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"), Collections.emptyMap());\n-    NamingConvention convention = accessor.getNamingConvention();\n+    S3Accessor accessor = new S3Accessor(entity, URI.create(\"gs://bucket\"),Collections.emptyMap());NamingConventionconvention= accessor.getNamingConvention();\n     assertTrue(convention.nameOf(1500000000000L).startsWith(\"/2017/07/\"));\n   }\n }\n",
            "diff_size": 2
        }
    ]
}