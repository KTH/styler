{
    "error_id": "320",
    "information": {
        "errors": [
            {
                "line": "120",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 136).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  }\n\n  public synchronized RequestRootSerializer createRequestRootSerializer(Message message, Map<String, Type> types, boolean noTypesInfo) {\n    return serializerSchemaManager.createRequestRootSerializer(message, types, noTypesInfo);\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/320/ProtoMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/320/ProtoMapper.java\nindex 1bb21e69ff..7683b6442f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/320/ProtoMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/320/ProtoMapper.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.foundation.protobuf;\n \n import java.lang.reflect.Type;\n@@ -117,7 +118,8 @@ public class ProtoMapper {\n     return createRootSerializer(message, type);\n   }\n \n-  public synchronized RequestRootSerializer createRequestRootSerializer(Message message, Map<String, Type> types, boolean noTypesInfo) {\n+  public synchronized RequestRootSerializer createRequestRootSerializer(Message message, Map<String, Type> types,\n+                                                                        boolean noTypesInfo) {\n     return serializerSchemaManager.createRequestRootSerializer(message, types, noTypesInfo);\n   }\n \n@@ -139,7 +141,7 @@ public class ProtoMapper {\n   }\n \n   public synchronized <T> RequestRootDeserializer<T> createRequestRootDeserializer(Message message,\n-      Map<String, Type> types) {\n+                                                                                   Map<String, Type> types) {\n     return deserializerSchemaManager.createRequestRootDeserializer(message, types);\n   }\n \n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/320/ProtoMapper.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/320/ProtoMapper.java\nindex 1bb21e69ff..c53eecdde2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/320/ProtoMapper.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/320/ProtoMapper.java\n@@ -154,4 +154,4 @@ public class ProtoMapper {\n   public synchronized <T> RootDeserializer<T> createRootDeserializer(Message message, Type type) {\n     return deserializerSchemaManager.createRootDeserializer(message, type);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}