{
    "error_id": "582",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport java.util.List;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/582/MappingAwareActivityBehaviorFactory.java\nindex e4e9f555d8..c60d0d8671 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/582/MappingAwareActivityBehaviorFactory.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/582/MappingAwareActivityBehaviorFactory.java\nindex e4e9f555d8..e5a591ae78 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/582/MappingAwareActivityBehaviorFactory.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.List;\n@@ -48,23 +49,23 @@ public class MappingAwareActivityBehaviorFactory extends DefaultActivityBehavior\n     @Override\n     public UserTaskActivityBehavior createUserTaskActivityBehavior(UserTask userTask) {\n         return new MappingAwareUserTaskBehavior(userTask,\n-                                                variablesMappingProvider);\n+                variablesMappingProvider);\n     }\n \n     @Override\n     protected CallActivityBehavior createCallActivityBehavior(Expression expression, List<MapExceptionEntry> mapExceptions) {\n         return new MappingAwareCallActivityBehavior(expression,\n-                                                    mapExceptions,\n-                                                    variablesMappingProvider,\n-                                                    processVariablesInitiator);\n+                mapExceptions,\n+                variablesMappingProvider,\n+                processVariablesInitiator);\n     }\n \n     @Override\n     protected CallActivityBehavior createCallActivityBehavior(String calledElement,\n                                                               List<MapExceptionEntry> mapExceptions) {\n         return new MappingAwareCallActivityBehavior(calledElement,\n-                                                    mapExceptions,\n-                                                    variablesMappingProvider,\n-                                                    processVariablesInitiator);\n+                mapExceptions,\n+                variablesMappingProvider,\n+                processVariablesInitiator);\n     }\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/582/MappingAwareActivityBehaviorFactory.java\nindex e4e9f555d8..09107e2390 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/582/MappingAwareActivityBehaviorFactory.java\n@@ -16,7 +16,6 @@\n package org.activiti.runtime.api.impl;\n \n import java.util.List;\n-\n import org.activiti.bpmn.model.MapExceptionEntry;\n import org.activiti.bpmn.model.UserTask;\n import org.activiti.engine.delegate.Expression;\n@@ -30,25 +29,24 @@ import org.activiti.spring.process.ProcessVariablesInitiator;\n /**\n  * Default implementation of the {@link ActivityBehaviorFactory}. Used when no custom {@link ActivityBehaviorFactory} is injected on the {@link ProcessEngineConfigurationImpl}.\n  */\n+\n+\n public class MappingAwareActivityBehaviorFactory extends DefaultActivityBehaviorFactory {\n \n     private VariablesMappingProvider variablesMappingProvider;\n \n     private ProcessVariablesInitiator processVariablesInitiator;\n \n-    public MappingAwareActivityBehaviorFactory(VariablesMappingProvider variablesMappingProvider,\n-                                               ProcessVariablesInitiator processVariablesInitiator) {\n-        super();\n-        this.variablesMappingProvider = variablesMappingProvider;\n-        this.processVariablesInitiator = processVariablesInitiator;\n-\n-        this.setMessagePayloadMappingProviderFactory(new JsonMessagePayloadMappingProviderFactory(variablesMappingProvider));\n+    public MappingAwareActivityBehaviorFactory(VariablesMappingProvider variablesMappingProvider, ProcessVariablesInitiator processVariablesInitiator) {\n+    super();\n+    this.variablesMappingProvider = variablesMappingProvider;\n+    this.processVariablesInitiator = processVariablesInitiator;\n+    this.setMessagePayloadMappingProviderFactory(new JsonMessagePayloadMappingProviderFactory(variablesMappingProvider));\n     }\n \n     @Override\n     public UserTaskActivityBehavior createUserTaskActivityBehavior(UserTask userTask) {\n-        return new MappingAwareUserTaskBehavior(userTask,\n-                                                variablesMappingProvider);\n+        return new MappingAwareUserTaskBehavior(userTask, variablesMappingProvider);\n     }\n \n     @Override\n@@ -60,11 +58,10 @@ public class MappingAwareActivityBehaviorFactory extends DefaultActivityBehavior\n     }\n \n     @Override\n-    protected CallActivityBehavior createCallActivityBehavior(String calledElement,\n-                                                              List<MapExceptionEntry> mapExceptions) {\n+    protected CallActivityBehavior createCallActivityBehavior(String calledElement, List<MapExceptionEntry> mapExceptions) {\n         return new MappingAwareCallActivityBehavior(calledElement,\n                                                     mapExceptions,\n                                                     variablesMappingProvider,\n                                                     processVariablesInitiator);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/582/MappingAwareActivityBehaviorFactory.java\nindex e4e9f555d8..c60d0d8671 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/582/MappingAwareActivityBehaviorFactory.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/582/MappingAwareActivityBehaviorFactory.java\nindex e4e9f555d8..c60d0d8671 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/582/MappingAwareActivityBehaviorFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/582/MappingAwareActivityBehaviorFactory.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.List;\n",
            "diff_size": 1
        }
    ]
}