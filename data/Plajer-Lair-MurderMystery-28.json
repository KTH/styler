{
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "90",
                "severity": "warning",
                "message": "'&&' has incorrect indentation level 14, expected level should be 16.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "          for (Arena arena : ArenaRegistry.getArenas()) {\n            if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n              && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n              ArenaManager.joinAttempt((Player) sender, arena);\n              return;\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'&&' has incorrect indentation level 14, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/styler/28/JoinArguments.java\nindex 5baf7fda93..9d3f5b3024 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/styler/28/JoinArguments.java\n@@ -88,7 +88,7 @@ public class JoinArguments {\n           for (Arena arena : ArenaRegistry.getArenas()) {\n             if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n               && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n-              ArenaManager.joinAttempt((Player) sender, arena);\n+                ArenaManager.joinAttempt((Player) sender, arena);\n               return;\n             }\n           }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/intellij/28/JoinArguments.java\nindex 5baf7fda93..f4f40e0aa5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/intellij/28/JoinArguments.java\n@@ -87,7 +87,7 @@ public class JoinArguments {\n           //fallback safe method\n           for (Arena arena : ArenaRegistry.getArenas()) {\n             if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n-              && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n+                && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n               ArenaManager.joinAttempt((Player) sender, arena);\n               return;\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/naturalize/28/JoinArguments.java\nindex 5baf7fda93..f3a01dc160 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/naturalize/28/JoinArguments.java\n@@ -87,8 +87,8 @@ public class JoinArguments {\n           //fallback safe method\n           for (Arena arena : ArenaRegistry.getArenas()) {\n             if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n-              && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n-              ArenaManager.joinAttempt((Player) sender, arena);\n+    && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n+  ArenaManager.joinAttempt((Player) sender, arena);\n               return;\n             }\n           }\n@@ -97,4 +97,4 @@ public class JoinArguments {\n       });\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 46, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 46, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 46, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 46, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 50, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 50, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 46, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 46, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 46, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 42, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 73, expected level should be one of the following: 33, 35, 37.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 73, indentation should be the same level as line 74.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 39, 41, 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 39, 41, 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 39, 41, 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 73, indentation should be the same level as line 90.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 39, 41, 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 77, expected level should be one of the following: 39, 41, 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 77, expected level should be one of the following: 37, 39, 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 73, expected level should be one of the following: 35, 37, 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 73, expected level should be one of the following: 33, 35, 37.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 69, expected level should be one of the following: 31, 33, 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/codebuff/28/JoinArguments.java\nindex 5baf7fda93..804229e442 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/codebuff/28/JoinArguments.java\n@@ -22,10 +22,8 @@ import java.util.HashMap;\n import java.util.Map;\n import java.util.Random;\n import java.util.stream.Stream;\n-\n import org.bukkit.command.CommandSender;\n import org.bukkit.entity.Player;\n-\n import pl.plajer.murdermystery.ConfigPreferences;\n import pl.plajer.murdermystery.arena.Arena;\n import pl.plajer.murdermystery.arena.ArenaManager;\n@@ -40,61 +38,65 @@ import pl.plajer.murdermystery.handlers.ChatManager;\n  * <p>\n  * Created at 18.05.2019\n  */\n+\n+\n public class JoinArguments {\n \n-  private Random random = new Random();\n+    private Random random = new Random();\n \n-  public JoinArguments(ArgumentsRegistry registry) {\n+    public JoinArguments(ArgumentsRegistry registry) {\n     //join argument\n     registry.mapArgument(\"murdermystery\", new CommandArgument(\"join\", \"\", CommandArgument.ExecutorType.PLAYER) {\n-      @Override\n-      public void execute(CommandSender sender, String[] args) {\n-        if (args.length == 1) {\n-          sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.Type-Arena-Name\"));\n-          return;\n-        }\n-        for (Arena arena : ArenaRegistry.getArenas()) {\n-          if (args[1].equalsIgnoreCase(arena.getId())) {\n-            ArenaManager.joinAttempt((Player) sender, arena);\n-            return;\n-          }\n-        }\n-        sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.No-Arena-Like-That\"));\n-      }\n-    });\n+\n+                                              @Override\n+                                              public void execute(CommandSender sender, String[] args) {\n+                                              if (args.length == 1) {\n+                                                  sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.Type-Arena-Name\"));\n+                                                  return;\n+                                              }\n+                                              for (Arena arena : ArenaRegistry.getArenas()) {\n+                                                  if (args[1].equalsIgnoreCase(arena.getId())) {\n+                                                  ArenaManager.joinAttempt((Player) sender, arena);\n+                                                  return;\n+                                                  }\n+                                              }\n+                                              sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.No-Arena-Like-That\"));\n+                                              }\n+                                          });\n \n     //random join argument, register only for multi arena\n     if (!registry.getPlugin().getConfigPreferences().getOption(ConfigPreferences.Option.BUNGEE_ENABLED)) {\n-      registry.mapArgument(\"murdermystery\", new CommandArgument(\"randomjoin\", \"\", CommandArgument.ExecutorType.PLAYER) {\n-        @Override\n-        public void execute(CommandSender sender, String[] args) {\n+                               registry.mapArgument(\"murdermystery\", new CommandArgument(\"randomjoin\", \"\", CommandArgument.ExecutorType.PLAYER) {\n+\n+                                                                         @Override\n+                                                                         public void execute(CommandSender sender, String[] args) {\n           //first random get method\n-          Map<Arena, Integer> arenas = new HashMap<>();\n-          for (Arena arena : ArenaRegistry.getArenas()) {\n-            if (arena.getArenaState() == ArenaState.STARTING && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n-              arenas.put(arena, arena.getPlayers().size());\n-            }\n-          }\n-          if (arenas.size() > 0) {\n-            Stream<Map.Entry<Arena, Integer>> sorted = arenas.entrySet().stream().sorted(Map.Entry.comparingByValue());\n-            Arena arena = sorted.findFirst().get().getKey();\n-            if (arena != null) {\n-              ArenaManager.joinAttempt((Player) sender, arena);\n-              return;\n-            }\n-          }\n+                                                                         Map<Arena, Integer> arenas = new HashMap<>();\n+                                                                         for (Arena arena : ArenaRegistry.getArenas()) {\n+                                                                             if (arena.getArenaState() == ArenaState.STARTING && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n+                                                                             arenas.put(arena, arena.getPlayers().size());\n+                                                                             }\n+                                                                         }\n+                                                                         if (arenas.size() > 0) {\n+                                                                             Stream<Map.Entry<Arena, Integer>> sorted = arenas.entrySet().stream().sorted(Map.Entry.comparingByValue());\n+                                                                             Arena arena = sorted.findFirst().get().getKey();\n+                                                                             if (arena != null) {\n+                                                                             ArenaManager.joinAttempt((Player) sender, arena);\n+                                                                             return;\n+                                                                             }\n+                                                                         }\n \n           //fallback safe method\n-          for (Arena arena : ArenaRegistry.getArenas()) {\n-            if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n-              && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n-              ArenaManager.joinAttempt((Player) sender, arena);\n-              return;\n-            }\n-          }\n-          sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.No-Free-Arenas\"));\n-        }\n-      });\n+                                                                         for (Arena arena : ArenaRegistry.getArenas()) {\n+                                                                             if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING) && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n+                                                                             ArenaManager.joinAttempt((Player) sender, arena);\n+                                                                             return;\n+                                                                             }\n+                                                                         }\n+                                                                         sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.No-Free-Arenas\"));\n+                                                                         }\n+                                                                     });\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "89",
                    "column": "122",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 10, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 12, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 10, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 6, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 4, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/styler_random/28/JoinArguments.java\nindex 5baf7fda93..c28d42f87b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/styler_random/28/JoinArguments.java\n@@ -86,15 +86,14 @@ public class JoinArguments {\n \n           //fallback safe method\n           for (Arena arena : ArenaRegistry.getArenas()) {\n-            if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n-              && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n-              ArenaManager.joinAttempt((Player) sender, arena);\n-              return;\n-            }\n+            if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)&& arena.getPlayers().size() < arena.getMaximumPlayers()) {\n+          ArenaManager.joinAttempt((Player) sender, arena);\n+            return;\n           }\n-          sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.No-Free-Arenas\"));\n         }\n-      });\n-    }\n+        sender.sendMessage(ChatManager.PLUGIN_PREFIX + ChatManager.colorMessage(\"Commands.No-Free-Arenas\"));\n+      }\n+    });\n   }\n }\n+}\n",
            "diff_size": 10
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'&&' has incorrect indentation level 14, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/styler_three_grams/28/JoinArguments.java\nindex 5baf7fda93..9d3f5b3024 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/errored/1/28/JoinArguments.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Plajer-Lair-MurderMystery/styler_three_grams/28/JoinArguments.java\n@@ -88,7 +88,7 @@ public class JoinArguments {\n           for (Arena arena : ArenaRegistry.getArenas()) {\n             if ((arena.getArenaState() == ArenaState.WAITING_FOR_PLAYERS || arena.getArenaState() == ArenaState.STARTING)\n               && arena.getPlayers().size() < arena.getMaximumPlayers()) {\n-              ArenaManager.joinAttempt((Player) sender, arena);\n+                ArenaManager.joinAttempt((Player) sender, arena);\n               return;\n             }\n           }\n",
            "diff_size": 1
        }
    ]
}