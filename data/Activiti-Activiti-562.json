{
    "error_id": "562",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.runtime.shared.security;\n\nimport java.util.List;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/562/AbstractSecurityManager.java\nindex ac976e7098..fe5cd4c9f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/562/AbstractSecurityManager.java\n@@ -13,12 +13,13 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.shared.security;\n \n import java.util.List;\n \n public abstract class AbstractSecurityManager implements SecurityManager {\n-    \n+\n     private static final String INVALID_AUTHENTICATED_PRINCIPAL = \"Invalid authenticated principal\";\n \n     private final SecurityContextPrincipalProvider securityContextPrincipalProvider;\n@@ -56,9 +57,9 @@ public abstract class AbstractSecurityManager implements SecurityManager {\n                                                .map(principalRolesProvider::getRoles)\n                                                .orElseThrow(this::securityException);\n     }\n-    \n+\n     protected SecurityException securityException() {\n         return new SecurityException(INVALID_AUTHENTICATED_PRINCIPAL);\n     }\n-    \n+\n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/562/AbstractSecurityManager.java\nindex ac976e7098..db4e01faf5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/562/AbstractSecurityManager.java\n@@ -13,12 +13,13 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.shared.security;\n \n import java.util.List;\n \n public abstract class AbstractSecurityManager implements SecurityManager {\n-    \n+\n     private static final String INVALID_AUTHENTICATED_PRINCIPAL = \"Invalid authenticated principal\";\n \n     private final SecurityContextPrincipalProvider securityContextPrincipalProvider;\n@@ -39,26 +40,26 @@ public abstract class AbstractSecurityManager implements SecurityManager {\n     @Override\n     public String getAuthenticatedUserId() {\n         return securityContextPrincipalProvider.getCurrentPrincipal()\n-                                               .map(principalIdentityProvider::getUserId)\n-                                               .orElseThrow(this::securityException);\n+                .map(principalIdentityProvider::getUserId)\n+                .orElseThrow(this::securityException);\n     }\n \n     @Override\n     public List<String> getAuthenticatedUserGroups() {\n         return securityContextPrincipalProvider.getCurrentPrincipal()\n-                                               .map(principalGroupsProvider::getGroups)\n-                                               .orElseThrow(this::securityException);\n+                .map(principalGroupsProvider::getGroups)\n+                .orElseThrow(this::securityException);\n     }\n \n     @Override\n     public List<String> getAuthenticatedUserRoles() {\n         return securityContextPrincipalProvider.getCurrentPrincipal()\n-                                               .map(principalRolesProvider::getRoles)\n-                                               .orElseThrow(this::securityException);\n+                .map(principalRolesProvider::getRoles)\n+                .orElseThrow(this::securityException);\n     }\n-    \n+\n     protected SecurityException securityException() {\n         return new SecurityException(INVALID_AUTHENTICATED_PRINCIPAL);\n     }\n-    \n+\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/562/AbstractSecurityManager.java\nindex ac976e7098..5c5fa1eb1c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/562/AbstractSecurityManager.java\n@@ -17,48 +17,45 @@ package org.activiti.api.runtime.shared.security;\n \n import java.util.List;\n \n+\n public abstract class AbstractSecurityManager implements SecurityManager {\n-    \n+\n     private static final String INVALID_AUTHENTICATED_PRINCIPAL = \"Invalid authenticated principal\";\n \n     private final SecurityContextPrincipalProvider securityContextPrincipalProvider;\n+\n     private final PrincipalIdentityProvider principalIdentityProvider;\n+\n     private final PrincipalGroupsProvider principalGroupsProvider;\n+\n     private final PrincipalRolesProvider principalRolesProvider;\n \n     public AbstractSecurityManager(SecurityContextPrincipalProvider securityContextPrincipalProvider,\n                                    PrincipalIdentityProvider principalIdentityProvider,\n-                                   PrincipalGroupsProvider principalGroupsProvider,\n-                                   PrincipalRolesProvider principalRolesProvider) {\n-        this.securityContextPrincipalProvider = securityContextPrincipalProvider;\n-        this.principalIdentityProvider = principalIdentityProvider;\n-        this.principalGroupsProvider = principalGroupsProvider;\n-        this.principalRolesProvider = principalRolesProvider;\n+                                   PrincipalGroupsProvider principalGroupsProvider, PrincipalRolesProvider principalRolesProvider) {\n+    this.securityContextPrincipalProvider = securityContextPrincipalProvider;\n+    this.principalIdentityProvider = principalIdentityProvider;\n+    this.principalGroupsProvider = principalGroupsProvider;\n+    this.principalRolesProvider = principalRolesProvider;\n     }\n \n     @Override\n     public String getAuthenticatedUserId() {\n-        return securityContextPrincipalProvider.getCurrentPrincipal()\n-                                               .map(principalIdentityProvider::getUserId)\n-                                               .orElseThrow(this::securityException);\n+        return securityContextPrincipalProvider.getCurrentPrincipal().map(principalIdentityProvider::getUserId).orElseThrow(this::securityException);\n     }\n \n     @Override\n     public List<String> getAuthenticatedUserGroups() {\n-        return securityContextPrincipalProvider.getCurrentPrincipal()\n-                                               .map(principalGroupsProvider::getGroups)\n-                                               .orElseThrow(this::securityException);\n+        return securityContextPrincipalProvider.getCurrentPrincipal().map(principalGroupsProvider::getGroups).orElseThrow(this::securityException);\n     }\n \n     @Override\n     public List<String> getAuthenticatedUserRoles() {\n-        return securityContextPrincipalProvider.getCurrentPrincipal()\n-                                               .map(principalRolesProvider::getRoles)\n-                                               .orElseThrow(this::securityException);\n+        return securityContextPrincipalProvider.getCurrentPrincipal().map(principalRolesProvider::getRoles).orElseThrow(this::securityException);\n     }\n-    \n+\n     protected SecurityException securityException() {\n-        return new SecurityException(INVALID_AUTHENTICATED_PRINCIPAL);\n+    return new SecurityException(INVALID_AUTHENTICATED_PRINCIPAL);\n     }\n-    \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/562/AbstractSecurityManager.java\nindex ac976e7098..fe5cd4c9f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/562/AbstractSecurityManager.java\n@@ -13,12 +13,13 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.shared.security;\n \n import java.util.List;\n \n public abstract class AbstractSecurityManager implements SecurityManager {\n-    \n+\n     private static final String INVALID_AUTHENTICATED_PRINCIPAL = \"Invalid authenticated principal\";\n \n     private final SecurityContextPrincipalProvider securityContextPrincipalProvider;\n@@ -56,9 +57,9 @@ public abstract class AbstractSecurityManager implements SecurityManager {\n                                                .map(principalRolesProvider::getRoles)\n                                                .orElseThrow(this::securityException);\n     }\n-    \n+\n     protected SecurityException securityException() {\n         return new SecurityException(INVALID_AUTHENTICATED_PRINCIPAL);\n     }\n-    \n+\n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/562/AbstractSecurityManager.java\nindex ac976e7098..fe5cd4c9f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/562/AbstractSecurityManager.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/562/AbstractSecurityManager.java\n@@ -13,12 +13,13 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.shared.security;\n \n import java.util.List;\n \n public abstract class AbstractSecurityManager implements SecurityManager {\n-    \n+\n     private static final String INVALID_AUTHENTICATED_PRINCIPAL = \"Invalid authenticated principal\";\n \n     private final SecurityContextPrincipalProvider securityContextPrincipalProvider;\n@@ -56,9 +57,9 @@ public abstract class AbstractSecurityManager implements SecurityManager {\n                                                .map(principalRolesProvider::getRoles)\n                                                .orElseThrow(this::securityException);\n     }\n-    \n+\n     protected SecurityException securityException() {\n         return new SecurityException(INVALID_AUTHENTICATED_PRINCIPAL);\n     }\n-    \n+\n }\n",
            "diff_size": 4
        }
    ]
}