{
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "16",
                "column": "138",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "import com.google.common.collect.ForwardingMap;\n\npublic class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n\n\tprivate final ConcurrentMap<ID, V> map;\n\t",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/13/IdMap.java\nindex 96a858a412..238ed34bc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/13/IdMap.java\n@@ -13,31 +13,31 @@ import java.util.stream.Stream;\n import com.bakdata.conquery.models.identifiable.ids.IId;\n import com.google.common.collect.ForwardingMap;\n \n-public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n+public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V> {\n \n \tprivate final ConcurrentMap<ID, V> map;\n-\t\n+\n \tpublic IdMap() {\n \t\tmap = new ConcurrentHashMap<ID, V>();\n \t}\n-\t\n+\n \tpublic IdMap(Collection<V> collection) {\n \t\tmap = new ConcurrentHashMap<>();\n \t\tfor(V value : collection) {\n \t\t\tmap.put(value.getId(), value);\n \t\t}\n \t}\n-\t\n+\n \t@Override\n \tpublic Set<Map.Entry <ID, V>> entrySet(){\n \t\treturn map.entrySet();\n \t}\n-\t\n+\n \t@Override\n \tpublic Collection<V> values() {\n \t\treturn map.values();\n \t}\n-\t\n+\n \t@Override\n \tpublic Iterator<V> iterator() {\n \t\treturn values().iterator();\n@@ -46,7 +46,7 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \tpublic Stream<V> stream() {\n \t\treturn map.values().stream();\n \t}\n-\t\n+\n \t@Override\n \tpublic int size() {\n \t\treturn map.values().size();\n@@ -70,31 +70,31 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \tpublic Optional<V> getOptional(ID id) {\n \t\treturn Optional.ofNullable(map.get(id));\n \t}\n-\t\n+\n \tpublic boolean add(V entry) {\n \t\taddToMap(entry);\n \t\treturn true;\n \t}\n-\t\n+\n \tpublic void update(V entry) {\n \t\tmap.put(entry.getId(), entry);\n \t}\n-\t\n+\n \tpublic V remove(ID id) {\n \t\tV obj = map.remove(id);\n \t\treturn obj;\n \t}\n-\t\n+\n \t@Override @Deprecated\n \tpublic V remove(Object object) {\n \t\treturn super.remove(object);\n \t}\n-\t\n+\n \t@Override @Deprecated\n \tpublic V put(ID key, V value) {\n \t\treturn super.put(key, value);\n \t}\n-\t\n+\n \tpublic boolean addAll(Collection<? extends V> c) {\n \t\tboolean modified = false;\n \t\tfor (V e : c) {\n",
            "diff_size": 13
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/13/IdMap.java\nindex 96a858a412..9ed76d89b9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/13/IdMap.java\n@@ -13,100 +13,102 @@ import java.util.stream.Stream;\n import com.bakdata.conquery.models.identifiable.ids.IId;\n import com.google.common.collect.ForwardingMap;\n \n-public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n-\n-\tprivate final ConcurrentMap<ID, V> map;\n-\t\n-\tpublic IdMap() {\n-\t\tmap = new ConcurrentHashMap<ID, V>();\n-\t}\n-\t\n-\tpublic IdMap(Collection<V> collection) {\n-\t\tmap = new ConcurrentHashMap<>();\n-\t\tfor(V value : collection) {\n-\t\t\tmap.put(value.getId(), value);\n-\t\t}\n-\t}\n-\t\n-\t@Override\n-\tpublic Set<Map.Entry <ID, V>> entrySet(){\n-\t\treturn map.entrySet();\n-\t}\n-\t\n-\t@Override\n-\tpublic Collection<V> values() {\n-\t\treturn map.values();\n-\t}\n-\t\n-\t@Override\n-\tpublic Iterator<V> iterator() {\n-\t\treturn values().iterator();\n-\t}\n-\n-\tpublic Stream<V> stream() {\n-\t\treturn map.values().stream();\n-\t}\n-\t\n-\t@Override\n-\tpublic int size() {\n-\t\treturn map.values().size();\n-\t}\n-\n-\tpublic V getOrFail(ID id) {\n-\t\tV res = map.get(id);\n-\t\tif(res==null) {\n-\t\t\tthrow new NoSuchElementException(\"Could not find an element called '\"+id+\"'\");\n-\t\t}\n-\t\treturn res;\n-\t}\n-\n-\tprivate void addToMap(V entry) {\n-\t\tV old = map.put(entry.getId(), entry);\n-\t\tif(old != null && !old.equals(entry)) {\n-\t\t\tthrow new IllegalStateException(\"The element \"+entry.getId()+\" is present twice in this map.\");\n-\t\t}\n-\t}\n-\n-\tpublic Optional<V> getOptional(ID id) {\n-\t\treturn Optional.ofNullable(map.get(id));\n-\t}\n-\t\n-\tpublic boolean add(V entry) {\n-\t\taddToMap(entry);\n-\t\treturn true;\n-\t}\n-\t\n-\tpublic void update(V entry) {\n-\t\tmap.put(entry.getId(), entry);\n-\t}\n-\t\n-\tpublic V remove(ID id) {\n-\t\tV obj = map.remove(id);\n-\t\treturn obj;\n-\t}\n-\t\n-\t@Override @Deprecated\n-\tpublic V remove(Object object) {\n-\t\treturn super.remove(object);\n-\t}\n-\t\n-\t@Override @Deprecated\n-\tpublic V put(ID key, V value) {\n-\t\treturn super.put(key, value);\n-\t}\n-\t\n-\tpublic boolean addAll(Collection<? extends V> c) {\n-\t\tboolean modified = false;\n-\t\tfor (V e : c) {\n-\t\t\tif (add(e)) {\n-\t\t\t\tmodified = true;\n-\t\t\t}\n-\t\t}\n-\t\treturn modified;\n-\t}\n-\n-\t@Override\n-\tprotected Map <ID, V> delegate() {\n-\t\treturn map;\n-\t}\n+public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap<ID, V> implements Iterable<V> {\n+\n+    private final ConcurrentMap<ID, V> map;\n+\n+    public IdMap() {\n+        map = new ConcurrentHashMap<ID, V>();\n+    }\n+\n+    public IdMap(Collection<V> collection) {\n+        map = new ConcurrentHashMap<>();\n+        for (V value : collection) {\n+            map.put(value.getId(), value);\n+        }\n+    }\n+\n+    @Override\n+    public Set<Map.Entry<ID, V>> entrySet() {\n+        return map.entrySet();\n+    }\n+\n+    @Override\n+    public Collection<V> values() {\n+        return map.values();\n+    }\n+\n+    @Override\n+    public Iterator<V> iterator() {\n+        return values().iterator();\n+    }\n+\n+    public Stream<V> stream() {\n+        return map.values().stream();\n+    }\n+\n+    @Override\n+    public int size() {\n+        return map.values().size();\n+    }\n+\n+    public V getOrFail(ID id) {\n+        V res = map.get(id);\n+        if (res == null) {\n+            throw new NoSuchElementException(\"Could not find an element called '\" + id + \"'\");\n+        }\n+        return res;\n+    }\n+\n+    private void addToMap(V entry) {\n+        V old = map.put(entry.getId(), entry);\n+        if (old != null && !old.equals(entry)) {\n+            throw new IllegalStateException(\"The element \" + entry.getId() + \" is present twice in this map.\");\n+        }\n+    }\n+\n+    public Optional<V> getOptional(ID id) {\n+        return Optional.ofNullable(map.get(id));\n+    }\n+\n+    public boolean add(V entry) {\n+        addToMap(entry);\n+        return true;\n+    }\n+\n+    public void update(V entry) {\n+        map.put(entry.getId(), entry);\n+    }\n+\n+    public V remove(ID id) {\n+        V obj = map.remove(id);\n+        return obj;\n+    }\n+\n+    @Override\n+    @Deprecated\n+    public V remove(Object object) {\n+        return super.remove(object);\n+    }\n+\n+    @Override\n+    @Deprecated\n+    public V put(ID key, V value) {\n+        return super.put(key, value);\n+    }\n+\n+    public boolean addAll(Collection<? extends V> c) {\n+        boolean modified = false;\n+        for (V e : c) {\n+            if (add(e)) {\n+                modified = true;\n+            }\n+        }\n+        return modified;\n+    }\n+\n+    @Override\n+    protected Map<ID, V> delegate() {\n+        return map;\n+    }\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/13/IdMap.java\nindex 96a858a412..7c6e7f522d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/13/IdMap.java\n@@ -13,7 +13,7 @@ import java.util.stream.Stream;\n import com.bakdata.conquery.models.identifiable.ids.IId;\n import com.google.common.collect.ForwardingMap;\n \n-public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n+public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID, V> implements Iterable<V> {\n \n \tprivate final ConcurrentMap<ID, V> map;\n \t\n@@ -29,7 +29,7 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \t}\n \t\n \t@Override\n-\tpublic Set<Map.Entry <ID, V>> entrySet(){\n+\tpublic Set<Map.Entry<ID, V>> entrySet(){\n \t\treturn map.entrySet();\n \t}\n \t\n@@ -96,7 +96,7 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \t}\n \t\n \tpublic boolean addAll(Collection<? extends V> c) {\n-\t\tboolean modified = false;\n+\tboolean modified = false;\n \t\tfor (V e : c) {\n \t\t\tif (add(e)) {\n \t\t\t\tmodified = true;\n@@ -106,7 +106,7 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \t}\n \n \t@Override\n-\tprotected Map <ID, V> delegate() {\n+\tprotected Map<ID, V> delegate() {\n \t\treturn map;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/13/IdMap.java\nindex 96a858a412..b1886de724 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/13/IdMap.java\n@@ -9,104 +9,105 @@ import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n import java.util.stream.Stream;\n-\n import com.bakdata.conquery.models.identifiable.ids.IId;\n import com.google.common.collect.ForwardingMap;\n \n-public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n-\n-\tprivate final ConcurrentMap<ID, V> map;\n-\t\n-\tpublic IdMap() {\n-\t\tmap = new ConcurrentHashMap<ID, V>();\n-\t}\n-\t\n-\tpublic IdMap(Collection<V> collection) {\n-\t\tmap = new ConcurrentHashMap<>();\n-\t\tfor(V value : collection) {\n-\t\t\tmap.put(value.getId(), value);\n-\t\t}\n-\t}\n-\t\n-\t@Override\n-\tpublic Set<Map.Entry <ID, V>> entrySet(){\n-\t\treturn map.entrySet();\n-\t}\n-\t\n-\t@Override\n-\tpublic Collection<V> values() {\n-\t\treturn map.values();\n-\t}\n-\t\n-\t@Override\n-\tpublic Iterator<V> iterator() {\n-\t\treturn values().iterator();\n-\t}\n-\n-\tpublic Stream<V> stream() {\n-\t\treturn map.values().stream();\n-\t}\n-\t\n-\t@Override\n-\tpublic int size() {\n-\t\treturn map.values().size();\n-\t}\n-\n-\tpublic V getOrFail(ID id) {\n-\t\tV res = map.get(id);\n-\t\tif(res==null) {\n-\t\t\tthrow new NoSuchElementException(\"Could not find an element called '\"+id+\"'\");\n-\t\t}\n-\t\treturn res;\n-\t}\n-\n-\tprivate void addToMap(V entry) {\n-\t\tV old = map.put(entry.getId(), entry);\n-\t\tif(old != null && !old.equals(entry)) {\n-\t\t\tthrow new IllegalStateException(\"The element \"+entry.getId()+\" is present twice in this map.\");\n-\t\t}\n-\t}\n-\n-\tpublic Optional<V> getOptional(ID id) {\n-\t\treturn Optional.ofNullable(map.get(id));\n-\t}\n-\t\n-\tpublic boolean add(V entry) {\n-\t\taddToMap(entry);\n-\t\treturn true;\n-\t}\n-\t\n-\tpublic void update(V entry) {\n-\t\tmap.put(entry.getId(), entry);\n-\t}\n-\t\n-\tpublic V remove(ID id) {\n-\t\tV obj = map.remove(id);\n-\t\treturn obj;\n-\t}\n-\t\n-\t@Override @Deprecated\n-\tpublic V remove(Object object) {\n-\t\treturn super.remove(object);\n-\t}\n-\t\n-\t@Override @Deprecated\n-\tpublic V put(ID key, V value) {\n-\t\treturn super.put(key, value);\n-\t}\n-\t\n-\tpublic boolean addAll(Collection<? extends V> c) {\n-\t\tboolean modified = false;\n-\t\tfor (V e : c) {\n-\t\t\tif (add(e)) {\n-\t\t\t\tmodified = true;\n-\t\t\t}\n-\t\t}\n-\t\treturn modified;\n-\t}\n-\n-\t@Override\n-\tprotected Map <ID, V> delegate() {\n-\t\treturn map;\n-\t}\n-}\n+public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap<ID, V> implements Iterable<V> {\n+\n+    private final ConcurrentMap<ID, V> map;\n+\n+    public IdMap() {\n+        map = new ConcurrentHashMap<ID, V>();\n+    }\n+\n+    public IdMap(Collection<V> collection) {\n+        map = new ConcurrentHashMap<>();\n+        for(V value : collection) {\n+            map.put(value.getId(), value);\n+        }\n+    }\n+\n+    @Override\n+    public Set<Map.Entry<ID, V>> entrySet() {\n+        return map.entrySet();\n+    }\n+\n+    @Override\n+    public Collection<V> values() {\n+        return map.values();\n+    }\n+\n+    @Override\n+    public Iterator<V> iterator() {\n+        return values().iterator();\n+    }\n+\n+    public Stream<V> stream() {\n+        return map.values().stream();\n+    }\n+\n+    @Override\n+    public int size() {\n+        return map.values().size();\n+    }\n+\n+    public V getOrFail(ID id) {\n+        V res = map.get(id);\n+        if(res == null) {\n+            throw new NoSuchElementException(\"Could not find an element called '\"+id +\"'\");\n+        }\n+        return res;\n+    }\n+\n+    private void addToMap(V entry) {\n+        V old = map.put(entry.getId(), entry);\n+        if(old != null && !old.equals(entry)) {\n+            throw new IllegalStateException(\"The element \"+entry.getId()+\" is present twice in this map.\");\n+        }\n+    }\n+\n+    public Optional<V> getOptional(ID id) {\n+        return Optional.ofNullable(map.get(id));\n+    }\n+\n+    public boolean add(V entry) {\n+        addToMap(entry);\n+        return true;\n+    }\n+\n+    public void update(V entry) {\n+        map.put(entry.getId(), entry);\n+    }\n+\n+    public V remove(ID id) {\n+        V obj = map.remove(id);\n+        return obj;\n+    }\n+\n+    @Override\n+    @Deprecated\n+    public V remove(Object object) {\n+        return super.remove(object);\n+    }\n+\n+    @Override\n+    @Deprecated\n+    public V put(ID key, V value) {\n+        return super.put(key, value);\n+    }\n+\n+    public boolean addAll(Collection<? extends V> c) {\n+        boolean modified = false;\n+        for(V e : c) {\n+            if(add(e)) {\n+                modified = true;\n+            }\n+        }\n+        return modified;\n+    }\n+\n+    @Override\n+    protected Map<ID, V> delegate() {\n+        return map;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 100
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/13/IdMap.java\nindex 96a858a412..238ed34bc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/13/IdMap.java\n@@ -13,31 +13,31 @@ import java.util.stream.Stream;\n import com.bakdata.conquery.models.identifiable.ids.IId;\n import com.google.common.collect.ForwardingMap;\n \n-public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n+public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V> {\n \n \tprivate final ConcurrentMap<ID, V> map;\n-\t\n+\n \tpublic IdMap() {\n \t\tmap = new ConcurrentHashMap<ID, V>();\n \t}\n-\t\n+\n \tpublic IdMap(Collection<V> collection) {\n \t\tmap = new ConcurrentHashMap<>();\n \t\tfor(V value : collection) {\n \t\t\tmap.put(value.getId(), value);\n \t\t}\n \t}\n-\t\n+\n \t@Override\n \tpublic Set<Map.Entry <ID, V>> entrySet(){\n \t\treturn map.entrySet();\n \t}\n-\t\n+\n \t@Override\n \tpublic Collection<V> values() {\n \t\treturn map.values();\n \t}\n-\t\n+\n \t@Override\n \tpublic Iterator<V> iterator() {\n \t\treturn values().iterator();\n@@ -46,7 +46,7 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \tpublic Stream<V> stream() {\n \t\treturn map.values().stream();\n \t}\n-\t\n+\n \t@Override\n \tpublic int size() {\n \t\treturn map.values().size();\n@@ -70,31 +70,31 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \tpublic Optional<V> getOptional(ID id) {\n \t\treturn Optional.ofNullable(map.get(id));\n \t}\n-\t\n+\n \tpublic boolean add(V entry) {\n \t\taddToMap(entry);\n \t\treturn true;\n \t}\n-\t\n+\n \tpublic void update(V entry) {\n \t\tmap.put(entry.getId(), entry);\n \t}\n-\t\n+\n \tpublic V remove(ID id) {\n \t\tV obj = map.remove(id);\n \t\treturn obj;\n \t}\n-\t\n+\n \t@Override @Deprecated\n \tpublic V remove(Object object) {\n \t\treturn super.remove(object);\n \t}\n-\t\n+\n \t@Override @Deprecated\n \tpublic V put(ID key, V value) {\n \t\treturn super.put(key, value);\n \t}\n-\t\n+\n \tpublic boolean addAll(Collection<? extends V> c) {\n \t\tboolean modified = false;\n \t\tfor (V e : c) {\n",
            "diff_size": 13
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/13/IdMap.java\nindex 96a858a412..238ed34bc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/13/IdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/13/IdMap.java\n@@ -13,31 +13,31 @@ import java.util.stream.Stream;\n import com.bakdata.conquery.models.identifiable.ids.IId;\n import com.google.common.collect.ForwardingMap;\n \n-public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V>{\n+public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends ID>> extends ForwardingMap <ID ,V > implements Iterable<V> {\n \n \tprivate final ConcurrentMap<ID, V> map;\n-\t\n+\n \tpublic IdMap() {\n \t\tmap = new ConcurrentHashMap<ID, V>();\n \t}\n-\t\n+\n \tpublic IdMap(Collection<V> collection) {\n \t\tmap = new ConcurrentHashMap<>();\n \t\tfor(V value : collection) {\n \t\t\tmap.put(value.getId(), value);\n \t\t}\n \t}\n-\t\n+\n \t@Override\n \tpublic Set<Map.Entry <ID, V>> entrySet(){\n \t\treturn map.entrySet();\n \t}\n-\t\n+\n \t@Override\n \tpublic Collection<V> values() {\n \t\treturn map.values();\n \t}\n-\t\n+\n \t@Override\n \tpublic Iterator<V> iterator() {\n \t\treturn values().iterator();\n@@ -46,7 +46,7 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \tpublic Stream<V> stream() {\n \t\treturn map.values().stream();\n \t}\n-\t\n+\n \t@Override\n \tpublic int size() {\n \t\treturn map.values().size();\n@@ -70,31 +70,31 @@ public class IdMap<ID extends IId<? super V>, V extends Identifiable<? extends I\n \tpublic Optional<V> getOptional(ID id) {\n \t\treturn Optional.ofNullable(map.get(id));\n \t}\n-\t\n+\n \tpublic boolean add(V entry) {\n \t\taddToMap(entry);\n \t\treturn true;\n \t}\n-\t\n+\n \tpublic void update(V entry) {\n \t\tmap.put(entry.getId(), entry);\n \t}\n-\t\n+\n \tpublic V remove(ID id) {\n \t\tV obj = map.remove(id);\n \t\treturn obj;\n \t}\n-\t\n+\n \t@Override @Deprecated\n \tpublic V remove(Object object) {\n \t\treturn super.remove(object);\n \t}\n-\t\n+\n \t@Override @Deprecated\n \tpublic V put(ID key, V value) {\n \t\treturn super.put(key, value);\n \t}\n-\t\n+\n \tpublic boolean addAll(Collection<? extends V> c) {\n \t\tboolean modified = false;\n \t\tfor (V e : c) {\n",
            "diff_size": 13
        }
    ]
}