{
    "error_id": "196",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "105",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@Data\n@AllArgsConstructor\npublic class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n\n\t@NotEmpty\n\tprivate String formType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/196/FormConfig.java\nindex b861356c51..d8af8e0961 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/196/FormConfig.java\n@@ -32,7 +32,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @Slf4j\n @Data\n @AllArgsConstructor\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/196/FormConfig.java\nindex b861356c51..8b5b471139 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/196/FormConfig.java\n@@ -32,95 +32,94 @@ import org.hibernate.validator.constraints.NotEmpty;\n @Slf4j\n @Data\n @AllArgsConstructor\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n-\n-\t@NotEmpty\n-\tprivate String formType;\n-\tprivate UUID formId = UUID.randomUUID();\n-\tprivate String label = formId.toString();\n-\t@NotNull\n-\tprivate String[] tags = ArrayUtils.EMPTY_STRING_ARRAY;\n-\tprivate boolean shared = false;\n-\t@NotNull\n-\tprivate JsonNode values;\n-\t@InternalOnly\n-\tprotected UserId owner;\n-\n-\t@Override\n-\tpublic FormConfigId createId() {\n-\t\treturn new FormConfigId(formType, formId);\n-\t}\n-\n-\t/**\n-\t * Provides an overview (meta data) of this form configuration without the\n-\t * actual form field values.\n-\t */\n-\tpublic FormConfigOverviewRepresentation overview(Namespaces namespaces, User user) {\n-\t\t@NonNull\n-\t\tString ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel).orElse(null);\n-\n-\t\treturn FormConfigOverviewRepresentation.builder().id(getId()).formType(formType).label(label).tags(tags).ownerName(ownerName)\n-\t\t\t.own(owner.equals(user.getId())).shared(shared)\n-\t\t\t// system?\n-\t\t\t.build();\n-\t}\n-\n-\t/**\n-\t * Tries to convert the given raw form to the provided dataset. It does not\n-\t * check whether the {@link NamespacedId} that are converted in this processes\n-\t * are actually resolvable. Also, it tries to map the values to a subclass of\n-\t * {@link Form}, for conversion. If that is not possible the untranslated values\n-\t * are output.\n-\t */\n-\tpublic FormConfigFullRepresentation tryTranslateToDataset(Namespaces namespaces, DatasetId target, ObjectMapper mapper, User user) {\n-\t\tJsonNode finalRep = values;\n-\t\ttry {\n-\t\t\tForm intemediateRep = mapper.readerFor(Form.class).readValue(values.traverse());\n-\t\t\tForm translatedRep = QueryTranslator.replaceDataset(namespaces, intemediateRep, target);\n-\t\t\tfinalRep = mapper.valueToTree(translatedRep);\n-\t\t}\n-\t\tcatch (IOException e) {\n-\t\t\tlog.warn(\"Unable to translate form configuration {} to dataset {}. Sending untranslated version.\", getId(), target);\n-\t\t}\n-\n-\t\t@NonNull\n-\t\tString ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel).orElse(null);\n-\n-\t\treturn FormConfigFullRepresentation.builder().id(getId()).formType(formType).label(label).tags(tags).ownerName(ownerName)\n-\t\t\t.own(owner.equals(user.getId())).shared(shared)\n-\t\t\t// system?\n-\t\t\t.values(finalRep).build();\n-\t}\n-\n-\t/**\n-\t * API representation for the overview of all {@link FormConfig}s which does not\n-\t * include the form fields an their values.\n-\t */\n-\t@Getter\n-\t@SuperBuilder\n-\tpublic static class FormConfigOverviewRepresentation {\n-\n-\t\tprivate FormConfigId id;\n-\t\tprivate String formType;\n-\t\tprivate String label;\n-\t\tprivate String[] tags;\n-\n-\t\tprivate String ownerName;\n-\t\tprivate boolean own;\n-\t\tprivate boolean shared;\n-\t\tprivate boolean system;\n-\n-\t}\n-\n-\t/**\n-\t * API representation for a single {@link FormConfig} which includes the form\n-\t * fields an their values.\n-\t */\n-\t@Getter\n-\t@SuperBuilder\n-\tpublic static class FormConfigFullRepresentation extends FormConfigOverviewRepresentation {\n-\n-\t\tprivate JsonNode values;\n-\t}\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n+\n+    @NotEmpty\n+    private String formType;\n+    private UUID formId = UUID.randomUUID();\n+    private String label = formId.toString();\n+    @NotNull\n+    private String[] tags = ArrayUtils.EMPTY_STRING_ARRAY;\n+    private boolean shared = false;\n+    @NotNull\n+    private JsonNode values;\n+    @InternalOnly\n+    protected UserId owner;\n+\n+    @Override\n+    public FormConfigId createId() {\n+        return new FormConfigId(formType, formId);\n+    }\n+\n+    /**\n+     * Provides an overview (meta data) of this form configuration without the\n+     * actual form field values.\n+     */\n+    public FormConfigOverviewRepresentation overview(Namespaces namespaces, User user) {\n+        @NonNull\n+        String ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel).orElse(null);\n+\n+        return FormConfigOverviewRepresentation.builder().id(getId()).formType(formType).label(label).tags(tags).ownerName(ownerName)\n+            .own(owner.equals(user.getId())).shared(shared)\n+            // system?\n+            .build();\n+    }\n+\n+    /**\n+     * Tries to convert the given raw form to the provided dataset. It does not\n+     * check whether the {@link NamespacedId} that are converted in this processes\n+     * are actually resolvable. Also, it tries to map the values to a subclass of\n+     * {@link Form}, for conversion. If that is not possible the untranslated values\n+     * are output.\n+     */\n+    public FormConfigFullRepresentation tryTranslateToDataset(Namespaces namespaces, DatasetId target, ObjectMapper mapper, User user) {\n+        JsonNode finalRep = values;\n+        try {\n+            Form intemediateRep = mapper.readerFor(Form.class).readValue(values.traverse());\n+            Form translatedRep = QueryTranslator.replaceDataset(namespaces, intemediateRep, target);\n+            finalRep = mapper.valueToTree(translatedRep);\n+        } catch (IOException e) {\n+            log.warn(\"Unable to translate form configuration {} to dataset {}. Sending untranslated version.\", getId(), target);\n+        }\n+\n+        @NonNull\n+        String ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel).orElse(null);\n+\n+        return FormConfigFullRepresentation.builder().id(getId()).formType(formType).label(label).tags(tags).ownerName(ownerName)\n+            .own(owner.equals(user.getId())).shared(shared)\n+            // system?\n+            .values(finalRep).build();\n+    }\n+\n+    /**\n+     * API representation for the overview of all {@link FormConfig}s which does not\n+     * include the form fields an their values.\n+     */\n+    @Getter\n+    @SuperBuilder\n+    public static class FormConfigOverviewRepresentation {\n+\n+        private FormConfigId id;\n+        private String formType;\n+        private String label;\n+        private String[] tags;\n+\n+        private String ownerName;\n+        private boolean own;\n+        private boolean shared;\n+        private boolean system;\n+\n+    }\n+\n+    /**\n+     * API representation for a single {@link FormConfig} which includes the form\n+     * fields an their values.\n+     */\n+    @Getter\n+    @SuperBuilder\n+    public static class FormConfigFullRepresentation extends FormConfigOverviewRepresentation {\n+\n+        private JsonNode values;\n+    }\n \n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/196/FormConfig.java\nindex b861356c51..da6107f38e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/196/FormConfig.java\n@@ -32,7 +32,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @Slf4j\n @Data\n @AllArgsConstructor\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n@@ -123,4 +123,4 @@ public class FormConfig extends IdentifiableImpl<FormConfigId> implements Sharea\n \t\tprivate JsonNode values;\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 12, expected is 57, indentation should be the same level as line 67.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 12, expected is 53, indentation should be the same level as line 102.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/196/FormConfig.java\nindex b861356c51..fa7ef9262f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/196/FormConfig.java\n@@ -3,9 +3,7 @@ package com.bakdata.conquery.apiv1.forms;\n import java.io.IOException;\n import java.util.Optional;\n import java.util.UUID;\n-\n import javax.validation.constraints.NotNull;\n-\n import com.bakdata.conquery.io.jackson.InternalOnly;\n import com.bakdata.conquery.models.auth.entities.User;\n import com.bakdata.conquery.models.execution.Labelable;\n@@ -32,95 +30,107 @@ import org.hibernate.validator.constraints.NotEmpty;\n @Slf4j\n @Data\n @AllArgsConstructor\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n-\n-\t@NotEmpty\n-\tprivate String formType;\n-\tprivate UUID formId = UUID.randomUUID();\n-\tprivate String label = formId.toString();\n-\t@NotNull\n-\tprivate String[] tags = ArrayUtils.EMPTY_STRING_ARRAY;\n-\tprivate boolean shared = false;\n-\t@NotNull\n-\tprivate JsonNode values;\n-\t@InternalOnly\n-\tprotected UserId owner;\n-\n-\t@Override\n-\tpublic FormConfigId createId() {\n-\t\treturn new FormConfigId(formType, formId);\n-\t}\n-\n-\t/**\n-\t * Provides an overview (meta data) of this form configuration without the\n-\t * actual form field values.\n-\t */\n-\tpublic FormConfigOverviewRepresentation overview(Namespaces namespaces, User user) {\n-\t\t@NonNull\n-\t\tString ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel).orElse(null);\n-\n-\t\treturn FormConfigOverviewRepresentation.builder().id(getId()).formType(formType).label(label).tags(tags).ownerName(ownerName)\n-\t\t\t.own(owner.equals(user.getId())).shared(shared)\n-\t\t\t// system?\n-\t\t\t.build();\n-\t}\n-\n-\t/**\n-\t * Tries to convert the given raw form to the provided dataset. It does not\n-\t * check whether the {@link NamespacedId} that are converted in this processes\n-\t * are actually resolvable. Also, it tries to map the values to a subclass of\n-\t * {@link Form}, for conversion. If that is not possible the untranslated values\n-\t * are output.\n-\t */\n-\tpublic FormConfigFullRepresentation tryTranslateToDataset(Namespaces namespaces, DatasetId target, ObjectMapper mapper, User user) {\n-\t\tJsonNode finalRep = values;\n-\t\ttry {\n-\t\t\tForm intemediateRep = mapper.readerFor(Form.class).readValue(values.traverse());\n-\t\t\tForm translatedRep = QueryTranslator.replaceDataset(namespaces, intemediateRep, target);\n-\t\t\tfinalRep = mapper.valueToTree(translatedRep);\n-\t\t}\n-\t\tcatch (IOException e) {\n-\t\t\tlog.warn(\"Unable to translate form configuration {} to dataset {}. Sending untranslated version.\", getId(), target);\n-\t\t}\n-\n-\t\t@NonNull\n-\t\tString ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel).orElse(null);\n-\n-\t\treturn FormConfigFullRepresentation.builder().id(getId()).formType(formType).label(label).tags(tags).ownerName(ownerName)\n-\t\t\t.own(owner.equals(user.getId())).shared(shared)\n-\t\t\t// system?\n-\t\t\t.values(finalRep).build();\n-\t}\n-\n-\t/**\n-\t * API representation for the overview of all {@link FormConfig}s which does not\n-\t * include the form fields an their values.\n-\t */\n-\t@Getter\n-\t@SuperBuilder\n-\tpublic static class FormConfigOverviewRepresentation {\n-\n-\t\tprivate FormConfigId id;\n-\t\tprivate String formType;\n-\t\tprivate String label;\n-\t\tprivate String[] tags;\n-\n-\t\tprivate String ownerName;\n-\t\tprivate boolean own;\n-\t\tprivate boolean shared;\n-\t\tprivate boolean system;\n-\n-\t}\n-\n-\t/**\n-\t * API representation for a single {@link FormConfig} which includes the form\n-\t * fields an their values.\n-\t */\n-\t@Getter\n-\t@SuperBuilder\n-\tpublic static class FormConfigFullRepresentation extends FormConfigOverviewRepresentation {\n-\n-\t\tprivate JsonNode values;\n-\t}\n-\n-}\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n+\n+    @NotEmpty\n+    private String formType;\n+    private UUID formId = UUID.randomUUID();\n+    private String label = formId.toString();\n+    @NotNull\n+    private String[] tags = ArrayUtils.EMPTY_STRING_ARRAY;\n+    private boolean shared = false;\n+    @NotNull\n+    private JsonNode values;\n+    @InternalOnly\n+    protected UserId owner;\n+    @Override\n+    public FormConfigId createId() {\n+        return new FormConfigId(formType, formId);\n+    }\n+\n+    /**\n+     * Provides an overview (meta data) of this form configuration without the\n+     * actual form field values.\n+     */\n+\n+    public FormConfigOverviewRepresentation overview(Namespaces namespaces, User user) {\n+        @NonNull String ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel)\n+                                                                                                   .orElse(null);\n+        return FormConfigOverviewRepresentation.builder().id(getId())\n+                                                         .formType(formType)\n+                                                         .label(label)\n+                                                         .tags(tags)\n+                                                         .ownerName(ownerName)\n+                                                         .own(owner.equals(user.getId()))\n+                                                         .shared(shared)\n+            // system?\n+                                                         .build();\n+    }\n+\n+    /**\n+     * Tries to convert the given raw form to the provided dataset. It does not\n+     * check whether the {@link NamespacedId} that are converted in this processes\n+     * are actually resolvable. Also, it tries to map the values to a subclass of\n+     * {@link Form}, for conversion. If that is not possible the untranslated values\n+     * are output.\n+     */\n+\n+    public FormConfigFullRepresentation tryTranslateToDataset(Namespaces namespaces, DatasetId target, ObjectMapper mapper, User user) {\n+        JsonNode finalRep = values;\n+        try {\n+            Form intemediateRep = mapper.readerFor(Form.class).readValue(values.traverse());\n+            Form translatedRep = QueryTranslator.replaceDataset(namespaces, intemediateRep, target);\n+            finalRep = mapper.valueToTree(translatedRep);\n+        }\n+        catch (IOException e) {\n+            log.warn(\"Unable to translate form configuration {} to dataset {}. Sending untranslated version.\",\n+                     getId(),\n+                     target\n+            );\n+        }\n+\n+        @NonNull String ownerName = Optional.ofNullable(namespaces.getMetaStorage().getUser(owner)).map(User::getLabel)\n+                                                                                                   .orElse(null);\n+        return FormConfigFullRepresentation.builder().id(getId())\n+                                                     .formType(formType)\n+                                                     .label(label)\n+                                                     .tags(tags)\n+                                                     .ownerName(ownerName)\n+                                                     .own(owner.equals(user.getId()))\n+                                                     .shared(shared)\n+            // system?\n+                                                     .values(finalRep)\n+                                                     .build();\n+    }\n+\n+    /**\n+     * API representation for the overview of all {@link FormConfig}s which does not\n+     * include the form fields an their values.\n+     */\n+\n+    @Getter\n+    @SuperBuilder\n+    public static class FormConfigOverviewRepresentation {\n+\n+        private FormConfigId id;\n+        private String formType;\n+        private String label;\n+        private String[] tags;\n+        private String ownerName;\n+        private boolean own;\n+        private boolean shared;\n+        private boolean system;\n+    }\n+\n+    /**\n+     * API representation for a single {@link FormConfig} which includes the form\n+     * fields an their values.\n+     */\n+\n+    @Getter\n+    @SuperBuilder\n+    public static class FormConfigFullRepresentation extends FormConfigOverviewRepresentation {\n+\n+        private JsonNode values;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 106
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/196/FormConfig.java\nindex b861356c51..d8af8e0961 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/196/FormConfig.java\n@@ -32,7 +32,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @Slf4j\n @Data\n @AllArgsConstructor\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/196/FormConfig.java\nindex b861356c51..d8af8e0961 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/196/FormConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/196/FormConfig.java\n@@ -32,7 +32,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n @Slf4j\n @Data\n @AllArgsConstructor\n-public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable{\n+public class FormConfig extends IdentifiableImpl<FormConfigId> implements Shareable, Labelable, Taggable {\n \n \t@NotEmpty\n \tprivate String formType;\n",
            "diff_size": 1
        }
    ]
}