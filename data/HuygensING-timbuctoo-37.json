{
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "63",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public String getRelationId() throws JSONException {\n    HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n      .withHeader(\"accept\", \"text/plain\")\n      .withHeader(\"content-type\", \"text/plain\");\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/37/WwRelationV2_1EndpointFixture.java\nindex 00e360254b..d154e13bd1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler/37/WwRelationV2_1EndpointFixture.java\n@@ -61,7 +61,7 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n \n   public String getRelationId() throws JSONException {\n     HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n-      .withHeader(\"accept\", \"text/plain\")\n+    .withHeader(\"accept\", \"text/plain\")\n       .withHeader(\"content-type\", \"text/plain\");\n \n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/37/WwRelationV2_1EndpointFixture.java\nindex 00e360254b..cb08b82862 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/intellij/37/WwRelationV2_1EndpointFixture.java\n@@ -48,7 +48,7 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n \n   public String makePersonRecord() throws JSONException {\n     HttpRequest postRequest = new HttpRequest(\"POST\", \"/v2.1/domain/wwpersons\", makePersonJson())\n-          .withHeaders(makeAuthHeaders());\n+      .withHeaders(makeAuthHeaders());\n \n     ActualResult response = executeRequestUsingJaxRs(postRequest);\n     personPath = response.getFirstHeader(\"Location\")\n@@ -60,9 +60,10 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n   }\n \n   public String getRelationId() throws JSONException {\n-    HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n-      .withHeader(\"accept\", \"text/plain\")\n-      .withHeader(\"content-type\", \"text/plain\");\n+    HttpRequest request =\n+      new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n+        .withHeader(\"accept\", \"text/plain\")\n+        .withHeader(\"content-type\", \"text/plain\");\n \n \n     ActualResult response = executeRequestUsingJaxRs(request);\n@@ -101,9 +102,9 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n \n   private List<Map.Entry<String, String>> makeAuthHeaders() {\n     List<Map.Entry<String, String>> headers = Lists.newArrayList();\n-    headers.add(new AbstractMap.SimpleEntry<>(\"Authorization\",  getAuthenticationToken()));\n-    headers.add(new AbstractMap.SimpleEntry<>(\"Content-type\",  \"application/json\"));\n-    headers.add(new AbstractMap.SimpleEntry<>(\"VRE_ID\",  \"WomenWriters\"));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"Authorization\", getAuthenticationToken()));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"Content-type\", \"application/json\"));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"VRE_ID\", \"WomenWriters\"));\n     return headers;\n   }\n \n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/37/WwRelationV2_1EndpointFixture.java\nindex 00e360254b..e478d7aefe 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/naturalize/37/WwRelationV2_1EndpointFixture.java\n@@ -48,9 +48,8 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n \n   public String makePersonRecord() throws JSONException {\n     HttpRequest postRequest = new HttpRequest(\"POST\", \"/v2.1/domain/wwpersons\", makePersonJson())\n-          .withHeaders(makeAuthHeaders());\n-\n-    ActualResult response = executeRequestUsingJaxRs(postRequest);\n+.withHeaders(makeAuthHeaders());\n+ActualResult response = executeRequestUsingJaxRs(postRequest);\n     personPath = response.getFirstHeader(\"Location\")\n       .orElseThrow(() -> new RuntimeException(\"Location header not present\"))\n       .replaceAll(\"http://[^/]+/\", \"\");\n@@ -63,9 +62,7 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n     HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n       .withHeader(\"accept\", \"text/plain\")\n       .withHeader(\"content-type\", \"text/plain\");\n-\n-\n-    ActualResult response = executeRequestUsingJaxRs(request);\n+ActualResult response = executeRequestUsingJaxRs(request);\n     Pattern pattern = Pattern.compile(\".*tim_id: \\\"([^\\n]*)\\\".*\", Pattern.DOTALL);\n \n     Matcher matcher = pattern.matcher(response.getBody());\n@@ -101,11 +98,11 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n \n   private List<Map.Entry<String, String>> makeAuthHeaders() {\n     List<Map.Entry<String, String>> headers = Lists.newArrayList();\n-    headers.add(new AbstractMap.SimpleEntry<>(\"Authorization\",  getAuthenticationToken()));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"Authorization\", getAuthenticationToken()));\n     headers.add(new AbstractMap.SimpleEntry<>(\"Content-type\",  \"application/json\"));\n     headers.add(new AbstractMap.SimpleEntry<>(\"VRE_ID\",  \"WomenWriters\"));\n     return headers;\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/37/WwRelationV2_1EndpointFixture.java\nindex 00e360254b..039f72160e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/codebuff/37/WwRelationV2_1EndpointFixture.java\n@@ -1,6 +1,5 @@\n package nl.knaw.huygens.timbuctoo.server.endpoints.v2;\n \n-\n import com.google.common.collect.Lists;\n import nl.knaw.huygens.concordion.extensions.ActualResult;\n import nl.knaw.huygens.concordion.extensions.HttpRequest;\n@@ -9,7 +8,6 @@ import org.json.JSONArray;\n import org.json.JSONException;\n import org.json.JSONObject;\n import org.junit.runner.RunWith;\n-\n import java.util.AbstractMap;\n import java.util.List;\n import java.util.Map;\n@@ -18,74 +16,63 @@ import java.util.regex.Pattern;\n \n @RunWith(ConcordionRunner.class)\n public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture {\n+    private String personPath;\n+    private String personId;\n \n-  private String personPath;\n-  private String personId;\n-\n-  public String getPersonPath() {\n+    public String getPersonPath() {\n     return personPath;\n-  }\n+    }\n \n-  public String getDocumentPath() {\n+    public String getDocumentPath() {\n     return documentPath;\n-  }\n+    }\n \n-  private String documentId;\n-  private String documentPath;\n-\n-  public String makeDocumentRecord() throws JSONException {\n-    HttpRequest postRequest = new HttpRequest(\"POST\", \"/v2.1/domain/wwdocuments\", makeDocumentJson())\n-      .withHeaders(makeAuthHeaders());\n+    private String documentId;\n+    private String documentPath;\n \n+    public String makeDocumentRecord() throws JSONException {\n+    HttpRequest postRequest = new HttpRequest(\"POST\", \"/v2.1/domain/wwdocuments\", makeDocumentJson()).withHeaders(makeAuthHeaders());\n     ActualResult response = executeRequestUsingJaxRs(postRequest);\n-    documentPath = response.getFirstHeader(\"Location\")\n-      .orElseThrow(() -> new RuntimeException(\"Location header not present\"))\n-      .replaceAll(\"http://[^/]+/\", \"\");\n+    documentPath = response.getFirstHeader(\"Location\").orElseThrow(() -> new RuntimeException(\"Location header not present\"))\n+                                                      .replaceAll(\"http://[^/]+/\", \"\");\n     documentId = documentPath.replaceAll(\".*\\\\/\", \"\");\n     retrievePid(documentPath);\n     return documentId;\n-  }\n-\n-  public String makePersonRecord() throws JSONException {\n-    HttpRequest postRequest = new HttpRequest(\"POST\", \"/v2.1/domain/wwpersons\", makePersonJson())\n-          .withHeaders(makeAuthHeaders());\n+    }\n \n+    public String makePersonRecord() throws JSONException {\n+    HttpRequest postRequest = new HttpRequest(\"POST\", \"/v2.1/domain/wwpersons\", makePersonJson()).withHeaders(makeAuthHeaders());\n     ActualResult response = executeRequestUsingJaxRs(postRequest);\n-    personPath = response.getFirstHeader(\"Location\")\n-      .orElseThrow(() -> new RuntimeException(\"Location header not present\"))\n-      .replaceAll(\"http://[^/]+/\", \"\");\n+    personPath = response.getFirstHeader(\"Location\").orElseThrow(() -> new RuntimeException(\"Location header not present\"))\n+                                                    .replaceAll(\"http://[^/]+/\", \"\");\n     personId = personPath.replaceAll(\".*\\\\/\", \"\");\n     retrievePid(personPath);\n     return personId;\n-  }\n-\n-  public String getRelationId() throws JSONException {\n-    HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n-      .withHeader(\"accept\", \"text/plain\")\n-      .withHeader(\"content-type\", \"text/plain\");\n-\n+    }\n \n+    public String getRelationId() throws JSONException {\n+    HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\").withHeader(\"accept\", \"text/plain\")\n+                                                                                                                              .withHeader(\"content-type\", \"text/plain\");\n     ActualResult response = executeRequestUsingJaxRs(request);\n     Pattern pattern = Pattern.compile(\".*tim_id: \\\"([^\\n]*)\\\".*\", Pattern.DOTALL);\n-\n     Matcher matcher = pattern.matcher(response.getBody());\n     matcher.matches();\n     return matcher.group(1);\n-  }\n+    }\n \n-  public void deleteEntities() {\n+    public void deleteEntities() {\n     executeRequestUsingJaxRs(new HttpRequest(\"DELETE\", personPath).withHeaders(makeAuthHeaders()));\n     executeRequestUsingJaxRs(new HttpRequest(\"DELETE\", documentPath).withHeaders(makeAuthHeaders()));\n-  }\n+    }\n \n-  private String makeDocumentJson() throws JSONException {\n+    private String makeDocumentJson() throws JSONException {\n     JSONObject documentObject = new JSONObject();\n     documentObject.put(\"@type\", \"wwdocument\");\n     documentObject.put(\"title\", \"A title\");\n     return documentObject.toString();\n-  }\n+    }\n \n-  private String makePersonJson() throws JSONException {\n+    private String makePersonJson() throws JSONException {\n     JSONObject personObject = new JSONObject();\n     JSONArray types = new JSONArray(\"[\\\"AUTHOR\\\"]\");\n     JSONArray names = new JSONArray(\"[{\\\"components\\\": [{\\\"type\\\": \\\"FORENAME\\\", \\\"value\\\": \\\"name\\\"}]}]\");\n@@ -96,16 +83,13 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n     personObject.put(\"types\", types);\n     personObject.put(\"names\", names);\n     return personObject.toString();\n-  }\n-\n+    }\n \n-  private List<Map.Entry<String, String>> makeAuthHeaders() {\n+    private List<Map.Entry<String, String>> makeAuthHeaders() {\n     List<Map.Entry<String, String>> headers = Lists.newArrayList();\n-    headers.add(new AbstractMap.SimpleEntry<>(\"Authorization\",  getAuthenticationToken()));\n-    headers.add(new AbstractMap.SimpleEntry<>(\"Content-type\",  \"application/json\"));\n-    headers.add(new AbstractMap.SimpleEntry<>(\"VRE_ID\",  \"WomenWriters\"));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"Authorization\", getAuthenticationToken()));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"Content-type\", \"application/json\"));\n+    headers.add(new AbstractMap.SimpleEntry<>(\"VRE_ID\", \"WomenWriters\"));\n     return headers;\n-  }\n-\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'.' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/37/WwRelationV2_1EndpointFixture.java\nindex 00e360254b..d154e13bd1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_random/37/WwRelationV2_1EndpointFixture.java\n@@ -61,7 +61,7 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n \n   public String getRelationId() throws JSONException {\n     HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n-      .withHeader(\"accept\", \"text/plain\")\n+    .withHeader(\"accept\", \"text/plain\")\n       .withHeader(\"content-type\", \"text/plain\");\n \n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/37/WwRelationV2_1EndpointFixture.java\nindex 00e360254b..0af99f33a1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/errored/1/37/WwRelationV2_1EndpointFixture.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HuygensING-timbuctoo/styler_three_grams/37/WwRelationV2_1EndpointFixture.java\n@@ -60,7 +60,8 @@ public class WwRelationV2_1EndpointFixture extends BaseDomainV2_1EndpointFixture\n   }\n \n   public String getRelationId() throws JSONException {\n-    HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n+\n+  HttpRequest request = new HttpRequest(\"POST\", \"/v2.1/gremlin\", \"g.V().has(\\\"relationtype_regularName\\\", \\\"isCreatedBy\\\")\")\n       .withHeader(\"accept\", \"text/plain\")\n       .withHeader(\"content-type\", \"text/plain\");\n \n",
            "diff_size": 2
        }
    ]
}