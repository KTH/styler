{
    "error_id": "107",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 148).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import javax.xml.bind.annotation.XmlType;\n\n@XmlType(name = \"testSuite\", propOrder = { \"name\", \"description\", \"loop\", \"variable\", \"groupSteps\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlRootElement\npublic class HDScriptGroup {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "14",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "28",
                    "column": "34",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "28",
                    "column": "34",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/107/HDScriptGroup.java\nindex 1eefc8a9b3..50198553a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/107/HDScriptGroup.java\n@@ -24,98 +24,101 @@ import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"testSuite\", propOrder = { \"name\", \"description\", \"loop\", \"variable\", \"groupSteps\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n-@XmlRootElement\n-public class HDScriptGroup {\n-\n-    @XmlAttribute\n-    private String name;\n-    @XmlAttribute\n-    private String description;\n-    @XmlAttribute\n-    private int loop;\n-    @XmlElement\n-    private HDVariable variable;\n-    @XmlElement(name = \"testGroup\")\n-    private List<HDScript> groupSteps = new ArrayList<HDScript>();\n-\n-    @XmlTransient\n-    private HDTestPlan parent;\n-\n-    public HDTestPlan getParent() {\n-        return parent;\n-    }\n-\n-    public void setParent(HDTestPlan parent) {\n-        this.parent = parent;\n-    }\n-\n-    /**\n+@XmlType(name = \"testSuite\", propOrder = { \"name\",\n+\"description\",\"loop\", \"variable\" ,\"groupSteps\"\n+},namespace = HarnessDataNamespace.NAMESPACE_V1)\n+  @XmlAccessorType(XmlAccessType.FIELD)\n+  @XmlRootElement\n+  public class HDScriptGroup {\n+\n+      @XmlAttribute\n+      private String name;\n+      @XmlAttribute\n+      private String description;\n+      @XmlAttribute\n+      private int loop;\n+      @XmlElement\n+      private HDVariable variable;\n+      @XmlElement(name = \"testGroup\")\n+      private List<HDScript> groupSteps = new ArrayList<HDScript>();\n+\n+      @XmlTransient\n+      private HDTestPlan parent;\n+\n+      public HDTestPlan getParent() {\n+          return parent;\n+      }\n+\n+      public void setParent(HDTestPlan parent) {\n+          this.parent = parent;\n+      }\n+\n+      /**\n      * @return the name\n      */\n-    public String getName() {\n-        return name;\n-    }\n+      public String getName() {\n+          return name;\n+      }\n \n-    /**\n+      /**\n      * @param name\n      *            the name to set\n      */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n+      public void setName(String name) {\n+          this.name = name;\n+      }\n \n-    /**\n+      /**\n      * @return the description\n      */\n-    public String getDescription() {\n-        return description;\n-    }\n+      public String getDescription() {\n+          return description;\n+      }\n \n-    /**\n+      /**\n      * @param description\n      *            the description to set\n      */\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n+      public void setDescription(String description) {\n+          this.description = description;\n+      }\n \n-    /**\n+      /**\n      * @return the loop\n      */\n-    public int getLoop() {\n-        return loop;\n-    }\n+      public int getLoop() {\n+          return loop;\n+      }\n \n-    /**\n+      /**\n      * @param loop\n      *            the loop to set\n      */\n-    public void setLoop(int loop) {\n-        this.loop = loop;\n-    }\n+      public void setLoop(int loop) {\n+          this.loop = loop;\n+      }\n \n-    /**\n+      /**\n      * @return the variable\n      */\n-    public HDVariable getVariable() {\n-        return variable;\n-    }\n+      public HDVariable getVariable() {\n+          return variable;\n+      }\n \n-    /**\n+      /**\n      * @param variable\n      *            the variable to set\n      */\n-    public void setVariable(HDVariable variable) {\n-        this.variable = variable;\n-    }\n+      public void setVariable(HDVariable variable) {\n+          this.variable = variable;\n+      }\n \n-    /**\n+      /**\n      * @return the groupSteps\n      */\n-    public List<HDScript> getGroupSteps() {\n-        return groupSteps;\n-    }\n+      public List<HDScript> getGroupSteps() {\n+          return groupSteps;\n+      }\n \n-}\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 67
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/107/HDScriptGroup.java\nindex 1eefc8a9b3..96a04b0819 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/107/HDScriptGroup.java\n@@ -24,98 +24,95 @@ import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"testSuite\", propOrder = { \"name\", \"description\", \"loop\", \"variable\", \"groupSteps\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name = \"testSuite\", propOrder = {\"name\", \"description\", \"loop\", \"variable\",\n+  \"groupSteps\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class HDScriptGroup {\n \n-    @XmlAttribute\n-    private String name;\n-    @XmlAttribute\n-    private String description;\n-    @XmlAttribute\n-    private int loop;\n-    @XmlElement\n-    private HDVariable variable;\n-    @XmlElement(name = \"testGroup\")\n-    private List<HDScript> groupSteps = new ArrayList<HDScript>();\n-\n-    @XmlTransient\n-    private HDTestPlan parent;\n-\n-    public HDTestPlan getParent() {\n-        return parent;\n-    }\n-\n-    public void setParent(HDTestPlan parent) {\n-        this.parent = parent;\n-    }\n-\n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n-\n-    /**\n-     * @param name\n-     *            the name to set\n-     */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    /**\n-     * @return the description\n-     */\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    /**\n-     * @param description\n-     *            the description to set\n-     */\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n-\n-    /**\n-     * @return the loop\n-     */\n-    public int getLoop() {\n-        return loop;\n-    }\n-\n-    /**\n-     * @param loop\n-     *            the loop to set\n-     */\n-    public void setLoop(int loop) {\n-        this.loop = loop;\n-    }\n-\n-    /**\n-     * @return the variable\n-     */\n-    public HDVariable getVariable() {\n-        return variable;\n-    }\n-\n-    /**\n-     * @param variable\n-     *            the variable to set\n-     */\n-    public void setVariable(HDVariable variable) {\n-        this.variable = variable;\n-    }\n-\n-    /**\n-     * @return the groupSteps\n-     */\n-    public List<HDScript> getGroupSteps() {\n-        return groupSteps;\n-    }\n+  @XmlAttribute\n+  private String name;\n+  @XmlAttribute\n+  private String description;\n+  @XmlAttribute\n+  private int loop;\n+  @XmlElement\n+  private HDVariable variable;\n+  @XmlElement(name = \"testGroup\")\n+  private List<HDScript> groupSteps = new ArrayList<HDScript>();\n+\n+  @XmlTransient\n+  private HDTestPlan parent;\n+\n+  public HDTestPlan getParent() {\n+    return parent;\n+  }\n+\n+  public void setParent(HDTestPlan parent) {\n+    this.parent = parent;\n+  }\n+\n+  /**\n+   * @return the name\n+   */\n+  public String getName() {\n+    return name;\n+  }\n+\n+  /**\n+   * @param name the name to set\n+   */\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  /**\n+   * @return the description\n+   */\n+  public String getDescription() {\n+    return description;\n+  }\n+\n+  /**\n+   * @param description the description to set\n+   */\n+  public void setDescription(String description) {\n+    this.description = description;\n+  }\n+\n+  /**\n+   * @return the loop\n+   */\n+  public int getLoop() {\n+    return loop;\n+  }\n+\n+  /**\n+   * @param loop the loop to set\n+   */\n+  public void setLoop(int loop) {\n+    this.loop = loop;\n+  }\n+\n+  /**\n+   * @return the variable\n+   */\n+  public HDVariable getVariable() {\n+    return variable;\n+  }\n+\n+  /**\n+   * @param variable the variable to set\n+   */\n+  public void setVariable(HDVariable variable) {\n+    this.variable = variable;\n+  }\n+\n+  /**\n+   * @return the groupSteps\n+   */\n+  public List<HDScript> getGroupSteps() {\n+    return groupSteps;\n+  }\n \n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/107/HDScriptGroup.java\nindex 1eefc8a9b3..6ecdb34083 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/107/HDScriptGroup.java\n@@ -118,4 +118,4 @@ public class HDScriptGroup {\n         return groupSteps;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/107/HDScriptGroup.java\nindex 1eefc8a9b3..4b7313ef70 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/107/HDScriptGroup.java\n@@ -13,9 +13,10 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlAttribute;\n@@ -31,22 +32,26 @@ public class HDScriptGroup {\n \n     @XmlAttribute\n     private String name;\n+\n     @XmlAttribute\n     private String description;\n+\n     @XmlAttribute\n     private int loop;\n+\n     @XmlElement\n     private HDVariable variable;\n+\n     @XmlElement(name = \"testGroup\")\n     private List<HDScript> groupSteps = new ArrayList<HDScript>();\n \n     @XmlTransient\n     private HDTestPlan parent;\n-\n     public HDTestPlan getParent() {\n         return parent;\n     }\n \n+\n     public void setParent(HDTestPlan parent) {\n         this.parent = parent;\n     }\n@@ -54,6 +59,8 @@ public class HDScriptGroup {\n     /**\n      * @return the name\n      */\n+\n+\n     public String getName() {\n         return name;\n     }\n@@ -62,6 +69,8 @@ public class HDScriptGroup {\n      * @param name\n      *            the name to set\n      */\n+\n+\n     public void setName(String name) {\n         this.name = name;\n     }\n@@ -69,6 +78,8 @@ public class HDScriptGroup {\n     /**\n      * @return the description\n      */\n+\n+\n     public String getDescription() {\n         return description;\n     }\n@@ -77,6 +88,8 @@ public class HDScriptGroup {\n      * @param description\n      *            the description to set\n      */\n+\n+\n     public void setDescription(String description) {\n         this.description = description;\n     }\n@@ -84,6 +97,8 @@ public class HDScriptGroup {\n     /**\n      * @return the loop\n      */\n+\n+\n     public int getLoop() {\n         return loop;\n     }\n@@ -92,6 +107,8 @@ public class HDScriptGroup {\n      * @param loop\n      *            the loop to set\n      */\n+\n+\n     public void setLoop(int loop) {\n         this.loop = loop;\n     }\n@@ -99,6 +116,8 @@ public class HDScriptGroup {\n     /**\n      * @return the variable\n      */\n+\n+\n     public HDVariable getVariable() {\n         return variable;\n     }\n@@ -107,6 +126,8 @@ public class HDScriptGroup {\n      * @param variable\n      *            the variable to set\n      */\n+\n+\n     public void setVariable(HDVariable variable) {\n         this.variable = variable;\n     }\n@@ -114,8 +135,10 @@ public class HDScriptGroup {\n     /**\n      * @return the groupSteps\n      */\n+\n+\n     public List<HDScript> getGroupSteps() {\n         return groupSteps;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "14",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "28",
                    "column": "34",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "28",
                    "column": "34",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/107/HDScriptGroup.java\nindex 1eefc8a9b3..50198553a9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/107/HDScriptGroup.java\n@@ -24,98 +24,101 @@ import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"testSuite\", propOrder = { \"name\", \"description\", \"loop\", \"variable\", \"groupSteps\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n-@XmlRootElement\n-public class HDScriptGroup {\n-\n-    @XmlAttribute\n-    private String name;\n-    @XmlAttribute\n-    private String description;\n-    @XmlAttribute\n-    private int loop;\n-    @XmlElement\n-    private HDVariable variable;\n-    @XmlElement(name = \"testGroup\")\n-    private List<HDScript> groupSteps = new ArrayList<HDScript>();\n-\n-    @XmlTransient\n-    private HDTestPlan parent;\n-\n-    public HDTestPlan getParent() {\n-        return parent;\n-    }\n-\n-    public void setParent(HDTestPlan parent) {\n-        this.parent = parent;\n-    }\n-\n-    /**\n+@XmlType(name = \"testSuite\", propOrder = { \"name\",\n+\"description\",\"loop\", \"variable\" ,\"groupSteps\"\n+},namespace = HarnessDataNamespace.NAMESPACE_V1)\n+  @XmlAccessorType(XmlAccessType.FIELD)\n+  @XmlRootElement\n+  public class HDScriptGroup {\n+\n+      @XmlAttribute\n+      private String name;\n+      @XmlAttribute\n+      private String description;\n+      @XmlAttribute\n+      private int loop;\n+      @XmlElement\n+      private HDVariable variable;\n+      @XmlElement(name = \"testGroup\")\n+      private List<HDScript> groupSteps = new ArrayList<HDScript>();\n+\n+      @XmlTransient\n+      private HDTestPlan parent;\n+\n+      public HDTestPlan getParent() {\n+          return parent;\n+      }\n+\n+      public void setParent(HDTestPlan parent) {\n+          this.parent = parent;\n+      }\n+\n+      /**\n      * @return the name\n      */\n-    public String getName() {\n-        return name;\n-    }\n+      public String getName() {\n+          return name;\n+      }\n \n-    /**\n+      /**\n      * @param name\n      *            the name to set\n      */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n+      public void setName(String name) {\n+          this.name = name;\n+      }\n \n-    /**\n+      /**\n      * @return the description\n      */\n-    public String getDescription() {\n-        return description;\n-    }\n+      public String getDescription() {\n+          return description;\n+      }\n \n-    /**\n+      /**\n      * @param description\n      *            the description to set\n      */\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n+      public void setDescription(String description) {\n+          this.description = description;\n+      }\n \n-    /**\n+      /**\n      * @return the loop\n      */\n-    public int getLoop() {\n-        return loop;\n-    }\n+      public int getLoop() {\n+          return loop;\n+      }\n \n-    /**\n+      /**\n      * @param loop\n      *            the loop to set\n      */\n-    public void setLoop(int loop) {\n-        this.loop = loop;\n-    }\n+      public void setLoop(int loop) {\n+          this.loop = loop;\n+      }\n \n-    /**\n+      /**\n      * @return the variable\n      */\n-    public HDVariable getVariable() {\n-        return variable;\n-    }\n+      public HDVariable getVariable() {\n+          return variable;\n+      }\n \n-    /**\n+      /**\n      * @param variable\n      *            the variable to set\n      */\n-    public void setVariable(HDVariable variable) {\n-        this.variable = variable;\n-    }\n+      public void setVariable(HDVariable variable) {\n+          this.variable = variable;\n+      }\n \n-    /**\n+      /**\n      * @return the groupSteps\n      */\n-    public List<HDScript> getGroupSteps() {\n-        return groupSteps;\n-    }\n+      public List<HDScript> getGroupSteps() {\n+          return groupSteps;\n+      }\n \n-}\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 67
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "column": "74",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "27",
                    "column": "74",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "86",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "27",
                    "column": "102",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "27",
                    "column": "112",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/107/HDScriptGroup.java\nindex 1eefc8a9b3..6f029cf13e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/107/HDScriptGroup.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/107/HDScriptGroup.java\n@@ -24,98 +24,99 @@ import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"testSuite\", propOrder = { \"name\", \"description\", \"loop\", \"variable\", \"groupSteps\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n-@XmlRootElement\n-public class HDScriptGroup {\n-\n-    @XmlAttribute\n-    private String name;\n-    @XmlAttribute\n-    private String description;\n-    @XmlAttribute\n-    private int loop;\n-    @XmlElement\n-    private HDVariable variable;\n-    @XmlElement(name = \"testGroup\")\n-    private List<HDScript> groupSteps = new ArrayList<HDScript>();\n-\n-    @XmlTransient\n-    private HDTestPlan parent;\n-\n-    public HDTestPlan getParent() {\n-        return parent;\n-    }\n-\n-    public void setParent(HDTestPlan parent) {\n-        this.parent = parent;\n-    }\n-\n-    /**\n+@XmlType(name = \"testSuite\", propOrder = { \"name\", \"description\", \"loop\" ,\"variable\" , \"groupSteps\" },namespace=\n+HarnessDataNamespace.NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n+ @XmlRootElement\n+ public class HDScriptGroup {\n+\n+     @XmlAttribute\n+     private String name;\n+     @XmlAttribute\n+     private String description;\n+     @XmlAttribute\n+     private int loop;\n+     @XmlElement\n+     private HDVariable variable;\n+     @XmlElement(name = \"testGroup\")\n+     private List<HDScript> groupSteps = new ArrayList<HDScript>();\n+\n+     @XmlTransient\n+     private HDTestPlan parent;\n+\n+     public HDTestPlan getParent() {\n+         return parent;\n+     }\n+\n+     public void setParent(HDTestPlan parent) {\n+         this.parent = parent;\n+     }\n+\n+     /**\n      * @return the name\n      */\n-    public String getName() {\n-        return name;\n-    }\n+     public String getName() {\n+         return name;\n+     }\n \n-    /**\n+     /**\n      * @param name\n      *            the name to set\n      */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n+     public void setName(String name) {\n+         this.name = name;\n+     }\n \n-    /**\n+     /**\n      * @return the description\n      */\n-    public String getDescription() {\n-        return description;\n-    }\n+     public String getDescription() {\n+         return description;\n+     }\n \n-    /**\n+     /**\n      * @param description\n      *            the description to set\n      */\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n+     public void setDescription(String description) {\n+         this.description = description;\n+     }\n \n-    /**\n+     /**\n      * @return the loop\n      */\n-    public int getLoop() {\n-        return loop;\n-    }\n+     public int getLoop() {\n+         return loop;\n+     }\n \n-    /**\n+     /**\n      * @param loop\n      *            the loop to set\n      */\n-    public void setLoop(int loop) {\n-        this.loop = loop;\n-    }\n+     public void setLoop(int loop) {\n+         this.loop = loop;\n+     }\n \n-    /**\n+     /**\n      * @return the variable\n      */\n-    public HDVariable getVariable() {\n-        return variable;\n-    }\n+     public HDVariable getVariable() {\n+         return variable;\n+     }\n \n-    /**\n+     /**\n      * @param variable\n      *            the variable to set\n      */\n-    public void setVariable(HDVariable variable) {\n-        this.variable = variable;\n-    }\n+     public void setVariable(HDVariable variable) {\n+         this.variable = variable;\n+     }\n \n-    /**\n+     /**\n      * @return the groupSteps\n      */\n-    public List<HDScript> getGroupSteps() {\n-        return groupSteps;\n-    }\n+     public List<HDScript> getGroupSteps() {\n+         return groupSteps;\n+     }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 65
        }
    ]
}