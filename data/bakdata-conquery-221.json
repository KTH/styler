{
    "error_id": "221",
    "information": {
        "errors": [
            {
                "line": "59",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t * Checks if the given CsvContent produces unique results in perspective to\n\t * all IdMappingAccessors.\n\t * \n\t * @param data\n\t *            Map of CsvEntityId to External Ids as read from the given CSV.\n\t * @throws IllegalArgumentException",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/221/PersistentIdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/221/PersistentIdMap.java\nindex ac12a59e6e..ec976acfbc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/221/PersistentIdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/221/PersistentIdMap.java\n@@ -22,59 +22,58 @@ import lombok.RequiredArgsConstructor;\n @JsonDeserialize(using = PersistentIdMapDeserializer.class)\n public class PersistentIdMap implements IdMapper {\n \n-\t/**\n-\t * The map from csv entity ids to external entity ids.\n-\t */\n-\tprivate final Map<CsvEntityId, ExternalEntityId> csvIdToExternalIdMap = new HashMap<>();\n+    /**\n+     * The map from csv entity ids to external entity ids.\n+     */\n+    private final Map<CsvEntityId, ExternalEntityId> csvIdToExternalIdMap = new HashMap<>();\n \n-\t/**\n-\t * The map from external entity ids to csv entity ids.\n-\t */\n-\tprivate final Map<SufficientExternalEntityId, CsvEntityId> externalIdPartCsvIdMap = new HashMap<>();\n+    /**\n+     * The map from external entity ids to csv entity ids.\n+     */\n+    private final Map<SufficientExternalEntityId, CsvEntityId> externalIdPartCsvIdMap = new HashMap<>();\n \n-\t@Override\n-\tpublic ExternalEntityId toExternal(CsvEntityId internal) {\n-\t\treturn csvIdToExternalIdMap.get(internal);\n-\t}\n+    @Override\n+    public ExternalEntityId toExternal(CsvEntityId internal) {\n+        return csvIdToExternalIdMap.get(internal);\n+    }\n \n-\t@Override\n-\tpublic CsvEntityId toInternal(SufficientExternalEntityId external) {\n-\t\treturn externalIdPartCsvIdMap.get(external);\n-\t}\n+    @Override\n+    public CsvEntityId toInternal(SufficientExternalEntityId external) {\n+        return externalIdPartCsvIdMap.get(external);\n+    }\n \n-\t@Override\n-\tpublic void addMapping(CsvEntityId internal, ExternalEntityId external, IdMappingAccessor[] idMappingAccessors) {\n-\t\t// Map internal to external\n-\t\tcsvIdToExternalIdMap.put(internal, external);\n-\t\t// Map the inverse with different unique shapes\n-\t\tfor (IdMappingAccessor accessor : idMappingAccessors)\n-\t\texternalIdPartCsvIdMap.put(\n-\t\t\t\tnew SufficientExternalEntityId(accessor.extract(external.getExternalId())),\n-\t\t\tinternal);\n-\t}\n+    @Override\n+    public void addMapping(CsvEntityId internal, ExternalEntityId external, IdMappingAccessor[] idMappingAccessors) {\n+        // Map internal to external\n+        csvIdToExternalIdMap.put(internal, external);\n+        // Map the inverse with different unique shapes\n+        for (IdMappingAccessor accessor : idMappingAccessors) {\n+            externalIdPartCsvIdMap.put(\n+                new SufficientExternalEntityId(accessor.extract(external.getExternalId())),\n+                internal);\n+        }\n+    }\n \n-\t/**\n-\t * Checks if the given CsvContent produces unique results in perspective to\n-\t * all IdMappingAccessors.\n-\t * \n-\t * @param data\n-\t *            Map of CsvEntityId to External Ids as read from the given CSV.\n-\t * @throws IllegalArgumentException\n-\t *             if the inserted Ids are not unique.\n-\t */\n-\tpublic void checkIntegrity(Collection<IdMappingAccessor> idAccessor) {\n-\t\t// check that each idMappingAccessor leads to at most one tuple\n-\t\tfor (IdMappingAccessor idMappingAccessor : idAccessor) {\n-\t\t\tlong distinctSize = csvIdToExternalIdMap.values().stream()\n-\t\t\t\t.map(p -> idMappingAccessor.extract(p.getExternalId()))\n-\t\t\t\t.distinct().count();\n-\t\t\t// check if we still have the same size as before\n-\t\t\tif (distinctSize != csvIdToExternalIdMap.size()) {\n-\t\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\t\t\"The inserted IDs are not unique respective to the idMapping Accessor \"\n-\t\t\t\t\t\t+ idMappingAccessor);\n-\t\t\t}\n-\t\t}\n-\t}\n+    /**\n+     * Checks if the given CsvContent produces unique results in perspective to\n+     * all IdMappingAccessors.\n+     *\n+     * @param data Map of CsvEntityId to External Ids as read from the given CSV.\n+     * @throws IllegalArgumentException if the inserted Ids are not unique.\n+     */\n+    public void checkIntegrity(Collection<IdMappingAccessor> idAccessor) {\n+        // check that each idMappingAccessor leads to at most one tuple\n+        for (IdMappingAccessor idMappingAccessor : idAccessor) {\n+            long distinctSize = csvIdToExternalIdMap.values().stream()\n+                .map(p -> idMappingAccessor.extract(p.getExternalId()))\n+                .distinct().count();\n+            // check if we still have the same size as before\n+            if (distinctSize != csvIdToExternalIdMap.size()) {\n+                throw new IllegalArgumentException(\n+                    \"The inserted IDs are not unique respective to the idMapping Accessor \"\n+                        + idMappingAccessor);\n+            }\n+        }\n+    }\n \n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/221/PersistentIdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/221/PersistentIdMap.java\nindex ac12a59e6e..80bee97579 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/221/PersistentIdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/221/PersistentIdMap.java\n@@ -47,10 +47,8 @@ public class PersistentIdMap implements IdMapper {\n \t\t// Map internal to external\n \t\tcsvIdToExternalIdMap.put(internal, external);\n \t\t// Map the inverse with different unique shapes\n-\t\tfor (IdMappingAccessor accessor : idMappingAccessors)\n-\t\texternalIdPartCsvIdMap.put(\n-\t\t\t\tnew SufficientExternalEntityId(accessor.extract(external.getExternalId())),\n-\t\t\tinternal);\n+\t\tfor (IdMappingAccessor accessor : idMappingAccessors) externalIdPartCsvIdMap.put(\n+\t\t\t\tnew SufficientExternalEntityId(accessor.extract(external.getExternalId())), internal);\n \t}\n \n \t/**\n@@ -68,13 +66,11 @@ public class PersistentIdMap implements IdMapper {\n \t\t\tlong distinctSize = csvIdToExternalIdMap.values().stream()\n \t\t\t\t.map(p -> idMappingAccessor.extract(p.getExternalId()))\n \t\t\t\t.distinct().count();\n-\t\t\t// check if we still have the same size as before\n+// check if we still have the same size as before\n \t\t\tif (distinctSize != csvIdToExternalIdMap.size()) {\n-\t\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\t\t\"The inserted IDs are not unique respective to the idMapping Accessor \"\n-\t\t\t\t\t\t+ idMappingAccessor);\n+\t\t\t\tthrow new IllegalArgumentException(\"The inserted IDs are not unique respective to the idMapping Accessor \" + idMappingAccessor);\n \t\t\t}\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/221/PersistentIdMap.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/221/PersistentIdMap.java\nindex ac12a59e6e..ea3b35b51c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/221/PersistentIdMap.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/221/PersistentIdMap.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.identifiable.mapping;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Map;\n-\n import com.bakdata.conquery.io.jackson.serializer.PersistentIdMapDeserializer;\n import com.bakdata.conquery.io.jackson.serializer.PersistentIdMapSerializer;\n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n@@ -15,66 +14,66 @@ import lombok.RequiredArgsConstructor;\n /**\n  * Mapping from Csv Entity Id to External Entity Id and back from the combinations of Accessor + IDs to the Entity Id.\n  */\n+\n @Getter\n @EqualsAndHashCode\n @RequiredArgsConstructor\n-@JsonSerialize(using = PersistentIdMapSerializer.class)\n-@JsonDeserialize(using = PersistentIdMapDeserializer.class)\n+@JsonSerialize(using= PersistentIdMapSerializer.class)\n+@JsonDeserialize(using= PersistentIdMapDeserializer.class)\n public class PersistentIdMap implements IdMapper {\n \n-\t/**\n-\t * The map from csv entity ids to external entity ids.\n-\t */\n-\tprivate final Map<CsvEntityId, ExternalEntityId> csvIdToExternalIdMap = new HashMap<>();\n+    /**\n+     * The map from csv entity ids to external entity ids.\n+     */\n \n-\t/**\n-\t * The map from external entity ids to csv entity ids.\n-\t */\n-\tprivate final Map<SufficientExternalEntityId, CsvEntityId> externalIdPartCsvIdMap = new HashMap<>();\n+    private final Map<CsvEntityId, ExternalEntityId> csvIdToExternalIdMap = new HashMap<>();\n \n-\t@Override\n-\tpublic ExternalEntityId toExternal(CsvEntityId internal) {\n-\t\treturn csvIdToExternalIdMap.get(internal);\n-\t}\n+    /**\n+     * The map from external entity ids to csv entity ids.\n+     */\n+    private final Map<SufficientExternalEntityId, CsvEntityId> externalIdPartCsvIdMap = new HashMap<>();\n+    @Override\n+    public ExternalEntityId toExternal(CsvEntityId internal) {\n+        return csvIdToExternalIdMap.get(internal);\n+    }\n \n-\t@Override\n-\tpublic CsvEntityId toInternal(SufficientExternalEntityId external) {\n-\t\treturn externalIdPartCsvIdMap.get(external);\n-\t}\n+    @Override\n+    public CsvEntityId toInternal(SufficientExternalEntityId external) {\n+        return externalIdPartCsvIdMap.get(external);\n+    }\n \n-\t@Override\n-\tpublic void addMapping(CsvEntityId internal, ExternalEntityId external, IdMappingAccessor[] idMappingAccessors) {\n-\t\t// Map internal to external\n-\t\tcsvIdToExternalIdMap.put(internal, external);\n-\t\t// Map the inverse with different unique shapes\n-\t\tfor (IdMappingAccessor accessor : idMappingAccessors)\n-\t\texternalIdPartCsvIdMap.put(\n-\t\t\t\tnew SufficientExternalEntityId(accessor.extract(external.getExternalId())),\n-\t\t\tinternal);\n-\t}\n+    @Override\n+    public void addMapping(CsvEntityId internal, ExternalEntityId external, IdMappingAccessor[] idMappingAccessors) {\n+        // Map internal to external\n+        csvIdToExternalIdMap.put(internal, external);\n+        // Map the inverse with different unique shapes\n+        for(IdMappingAccessor accessor : idMappingAccessors) externalIdPartCsvIdMap.put(\n+                                                                 new SufficientExternalEntityId(accessor.extract(external.getExternalId())),\n+                                                                 internal\n+                                                             );\n+    }\n \n-\t/**\n-\t * Checks if the given CsvContent produces unique results in perspective to\n-\t * all IdMappingAccessors.\n-\t * \n-\t * @param data\n-\t *            Map of CsvEntityId to External Ids as read from the given CSV.\n-\t * @throws IllegalArgumentException\n-\t *             if the inserted Ids are not unique.\n-\t */\n-\tpublic void checkIntegrity(Collection<IdMappingAccessor> idAccessor) {\n-\t\t// check that each idMappingAccessor leads to at most one tuple\n-\t\tfor (IdMappingAccessor idMappingAccessor : idAccessor) {\n-\t\t\tlong distinctSize = csvIdToExternalIdMap.values().stream()\n-\t\t\t\t.map(p -> idMappingAccessor.extract(p.getExternalId()))\n-\t\t\t\t.distinct().count();\n-\t\t\t// check if we still have the same size as before\n-\t\t\tif (distinctSize != csvIdToExternalIdMap.size()) {\n-\t\t\t\tthrow new IllegalArgumentException(\n-\t\t\t\t\t\"The inserted IDs are not unique respective to the idMapping Accessor \"\n-\t\t\t\t\t\t+ idMappingAccessor);\n-\t\t\t}\n-\t\t}\n-\t}\n+    /**\n+     * Checks if the given CsvContent produces unique results in perspective to\n+     * all IdMappingAccessors.\n+     * \n+     * @param data\n+     *            Map of CsvEntityId to External Ids as read from the given CSV.\n+     * @throws IllegalArgumentException\n+     *             if the inserted Ids are not unique.\n+     */\n \n-}\n+    public void checkIntegrity(Collection<IdMappingAccessor> idAccessor) {\n+        // check that each idMappingAccessor leads to at most one tuple\n+        for(IdMappingAccessor idMappingAccessor : idAccessor) {\n+            long distinctSize = csvIdToExternalIdMap.values().stream()\n+                                                             .map(p->idMappingAccessor.extract(p.getExternalId()))\n+                                                             .distinct()\n+                                                             .count();\n+            // check if we still have the same size as before\n+            if(distinctSize != csvIdToExternalIdMap.size()) {\n+                throw new IllegalArgumentException(\"The inserted IDs are not unique respective to the idMapping Accessor \"+idMappingAccessor);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}