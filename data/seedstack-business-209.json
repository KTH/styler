{
    "error_id": "209",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.migrate;\n\nimport com.google.common.collect.Lists;\nimport com.google.inject.AbstractModule;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/209/MigratePlugin.java\nindex 89abc54768..51b9b7a7e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/209/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/209/MigratePlugin.java\nindex 89abc54768..7339c629f5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/209/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n@@ -95,7 +96,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     }\n \n     private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to,\n-            Annotation annotation) {\n+                                 Annotation annotation) {\n         if (annotation != null) {\n             bindings.put(Key.get(from, annotation), Key.get(to, annotation));\n         } else {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/209/MigratePlugin.java\nindex 89abc54768..cbee65063b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/209/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n@@ -52,7 +53,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n         if (round.isFirst()) {\n             for (Element element : Elements.getElements((AbstractModule) initContext.dependency(AssemblerPlugin.class)\n                     .nativeUnitModule())) {\n-                if (element instanceof Binding) {\n+    if (element instanceof Binding) {\n                     Key key = ((Binding) element).getKey();\n                     if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n                         ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n@@ -68,7 +69,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n         } else {\n             for (Element element : Elements.getElements((AbstractModule) initContext.dependency(DomainPlugin.class)\n                     .nativeUnitModule())) {\n-                if (element instanceof Binding) {\n+    if (element instanceof Binding) {\n                     Key key = ((Binding) element).getKey();\n                     if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n                         ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n@@ -78,14 +79,14 @@ public class MigratePlugin extends AbstractSeedPlugin {\n                                 registerBinding(repositoryBindings,\n                                         Types.newParameterizedType(LegacyRepository.class,\n                                                 type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n+    }\n                         } else if (Factory.class.equals(type.getRawType())) {\n                             // Factory\n                             if (!LegacyBaseAggregateRoot.class.equals(type.getActualTypeArguments()[0])) {\n                                 registerBinding(factoryBindings,\n                                         Types.newParameterizedType(GenericFactory.class,\n                                                 type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n+    }\n                         }\n                     }\n                 }\n@@ -94,9 +95,8 @@ public class MigratePlugin extends AbstractSeedPlugin {\n         }\n     }\n \n-    private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to,\n-            Annotation annotation) {\n-        if (annotation != null) {\n+    private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to, Annotation annotation) {\n+    if (annotation != null) {\n             bindings.put(Key.get(from, annotation), Key.get(to, annotation));\n         } else {\n             bindings.put(Key.get(from), Key.get(to));\n@@ -107,4 +107,4 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     public Object nativeUnitModule() {\n         return new MigrateModule(repositoryBindings, factoryBindings, assemblerBindings);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "column": "139",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 28, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 0, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'key' has incorrect indentation level 0, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "72",
                    "column": "136",
                    "severity": "warning",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 28, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 32, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 0, expected level should be 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'key' has incorrect indentation level 0, expected level should be 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 28, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 28, expected is 35, indentation should be the same level as line 90.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 39, expected level should be 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 39, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 0, expected level should be 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'key' has incorrect indentation level 0, expected level should be 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/209/MigratePlugin.java\nindex 89abc54768..7afb41925f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/209/MigratePlugin.java\n@@ -32,11 +32,12 @@ import org.seedstack.business.internal.assembler.AssemblerPlugin;\n import org.seedstack.business.internal.domain.DomainPlugin;\n import org.seedstack.seed.core.internal.AbstractSeedPlugin;\n \n+\n public class MigratePlugin extends AbstractSeedPlugin {\n+\n     private final Map<Key<?>, Key<?>> repositoryBindings = new HashMap<>();\n     private final Map<Key<?>, Key<?>> factoryBindings = new HashMap<>();\n     private final Map<Key<?>, Key<?>> assemblerBindings = new HashMap<>();\n-\n     @Override\n     public String name() {\n         return \"business-migrate\";\n@@ -50,43 +51,50 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     @Override\n     protected InitState initialize(InitContext initContext) {\n         if (round.isFirst()) {\n-            for (Element element : Elements.getElements((AbstractModule) initContext.dependency(AssemblerPlugin.class)\n-                    .nativeUnitModule())) {\n+            for(Element element : Elements.getElements((AbstractModule) initContext.dependency(AssemblerPlugin.class).nativeUnitModule()) ) {\n                 if (element instanceof Binding) {\n                     Key key = ((Binding) element).getKey();\n                     if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n                         ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n-                        if (Assembler.class.equals(type.getRawType())) {\n+                        if (Assembler.class\n+                            .equals(type.getRawType())) {\n                             // Assembler\n-                            registerBinding(assemblerBindings, Types.newParameterizedType(LegacyAssembler.class,\n-                                    type.getActualTypeArguments()), type, key.getAnnotation());\n+                            registerBinding(assemblerBindings,\n+Types.newParameterizedType(LegacyAssembler.class, type.getActualTypeArguments()),\n+type,\n+key.getAnnotation());\n                         }\n                     }\n                 }\n             }\n             return InitState.NON_INITIALIZED;\n         } else {\n-            for (Element element : Elements.getElements((AbstractModule) initContext.dependency(DomainPlugin.class)\n-                    .nativeUnitModule())) {\n+            for(Element element : Elements.getElements((AbstractModule) initContext.dependency(DomainPlugin.class).nativeUnitModule()) ) {\n                 if (element instanceof Binding) {\n                     Key key = ((Binding) element).getKey();\n                     if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n                         ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n-                        if (Repository.class.equals(type.getRawType())) {\n+                        if (Repository.class\n+                            .equals(type.getRawType())) {\n                             // Repository\n-                            if (!LegacyBaseAggregateRoot.class.equals(type.getActualTypeArguments()[0])) {\n+                            if (! LegacyBaseAggregateRoot.class\n+                                .equals(type.getActualTypeArguments()[0])) {\n                                 registerBinding(repositoryBindings,\n-                                        Types.newParameterizedType(LegacyRepository.class,\n-                                                type.getActualTypeArguments()), type, key.getAnnotation());\n+Types.newParameterizedType(LegacyRepository.class, type.getActualTypeArguments()),\n+type,\n+key.getAnnotation());\n                             }\n-                        } else if (Factory.class.equals(type.getRawType())) {\n+                        } else if (Factory.class\n+                            .equals(type.getRawType())) {\n                             // Factory\n-                            if (!LegacyBaseAggregateRoot.class.equals(type.getActualTypeArguments()[0])) {\n-                                registerBinding(factoryBindings,\n-                                        Types.newParameterizedType(GenericFactory.class,\n-                                                type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n-                        }\n+                                   if (! LegacyBaseAggregateRoot.class\n+                                       .equals(type.getActualTypeArguments()[0])) {\n+                                       registerBinding(factoryBindings,\n+Types.newParameterizedType(GenericFactory.class, type.getActualTypeArguments()),\n+type,\n+key.getAnnotation());\n+                                   }\n+                               }\n                     }\n                 }\n             }\n@@ -94,8 +102,8 @@ public class MigratePlugin extends AbstractSeedPlugin {\n         }\n     }\n \n-    private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to,\n-            Annotation annotation) {\n+\n+    private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to, Annotation annotation) {\n         if (annotation != null) {\n             bindings.put(Key.get(from, annotation), Key.get(to, annotation));\n         } else {\n@@ -107,4 +115,4 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     public Object nativeUnitModule() {\n         return new MigrateModule(repositoryBindings, factoryBindings, assemblerBindings);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/209/MigratePlugin.java\nindex 89abc54768..51b9b7a7e6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/209/MigratePlugin.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/209/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}