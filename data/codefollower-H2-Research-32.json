{
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "104",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "     * @return the matching or next index\n     */\n    int find(long key) { //\u6298\u534a\u67e5\u627e\n        int l = 0, r = entryCount;\n        while (l < r) {\n            int i = (l + r) >>> 1;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler/32/PageData.java\nindex 27391cb758..ed851e32a8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler/32/PageData.java\n@@ -100,8 +100,7 @@ abstract class PageData extends Page {\n      *\n      * @param key the key (may not exist)\n      * @return the matching or next index\n-     */\n-    int find(long key) { //\u6298\u534a\u67e5\u627e\n+     */int find(long key) { //\u6298\u534a\u67e5\u627e\n         int l = 0, r = entryCount;\n         while (l < r) {\n             int i = (l + r) >>> 1;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/intellij/32/PageData.java\nindex 27391cb758..90ae4705cb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/intellij/32/PageData.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.pagestore.db;\n \n import org.h2.engine.Session;\n@@ -130,8 +131,8 @@ abstract class PageData extends Page {\n      * Get a cursor.\n      *\n      * @param session the session\n-     * @param minKey the smallest key\n-     * @param maxKey the largest key\n+     * @param minKey  the smallest key\n+     * @param maxKey  the largest key\n      * @return the cursor\n      */\n     abstract Cursor find(Session session, long minKey, long maxKey);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/codebuff/32/PageData.java\nindex 27391cb758..b7cee8aef5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/codebuff/32/PageData.java\n@@ -14,51 +14,71 @@ import org.h2.store.Data;\n /**\n  * A page that contains data rows.\n  */\n+\n+\n abstract class PageData extends Page {\n \n     /**\n      * The position of the parent page id.\n      */\n+\n+\n     static final int START_PARENT = 3;\n \n     /**\n      * This is a root page.\n      */\n+\n+\n     static final int ROOT = 0;\n \n     /**\n      * Indicator that the row count is not known.\n      */\n+\n+\n     static final int UNKNOWN_ROWCOUNT = -1;\n \n     /**\n      * The index.\n      */\n+\n+\n     protected final PageDataIndex index;\n \n     /**\n      * The page number of the parent.\n      */\n+\n+\n     protected int parentPageId;\n \n     /**\n      * The data page.\n      */\n+\n+\n     protected final Data data;\n \n     /**\n      * The number of entries.\n      */\n+\n+\n     protected int entryCount;\n \n     /**\n      * The row keys.\n      */\n+\n+\n     protected long[] keys;\n \n     /**\n      * Whether the data page is up-to-date.\n      */\n+\n+\n     protected boolean written;\n \n     /**\n@@ -79,6 +99,8 @@ abstract class PageData extends Page {\n      *\n      * @return the row count\n      */\n+\n+\n     abstract int getRowCount();\n \n     /**\n@@ -86,6 +108,8 @@ abstract class PageData extends Page {\n      *\n      * @param rowCount the stored row count\n      */\n+\n+\n     abstract void setRowCountStored(int rowCount);\n \n     /**\n@@ -93,6 +117,8 @@ abstract class PageData extends Page {\n      *\n      * @return the estimated number of bytes\n      */\n+\n+\n     abstract long getDiskSpaceUsed();\n \n     /**\n@@ -101,6 +127,8 @@ abstract class PageData extends Page {\n      * @param key the key (may not exist)\n      * @return the matching or next index\n      */\n+\n+\n     int find(long key) { //\u6298\u534a\u67e5\u627e\n         int l = 0, r = entryCount;\n         while (l < r) {\n@@ -124,6 +152,8 @@ abstract class PageData extends Page {\n      * @param row the now to add\n      * @return the split point of this page, or -1 if no split is required\n      */\n+\n+\n     abstract int addRowTry(Row row);\n \n     /**\n@@ -134,6 +164,8 @@ abstract class PageData extends Page {\n      * @param maxKey the largest key\n      * @return the cursor\n      */\n+\n+\n     abstract Cursor find(Session session, long minKey, long maxKey);\n \n     /**\n@@ -142,6 +174,8 @@ abstract class PageData extends Page {\n      * @param at the index\n      * @return the key\n      */\n+\n+\n     long getKey(int at) {\n         return keys[at];\n     }\n@@ -152,6 +186,8 @@ abstract class PageData extends Page {\n      * @param splitPoint the index where to split\n      * @return the new page that contains about half the entries\n      */\n+\n+\n     abstract PageData split(int splitPoint);\n \n     /**\n@@ -159,6 +195,8 @@ abstract class PageData extends Page {\n      *\n      * @param id the new page id\n      */\n+\n+\n     void setPageId(int id) {\n         int old = getPos();\n         index.getPageStore().removeFromCache(getPos());\n@@ -172,6 +210,8 @@ abstract class PageData extends Page {\n      *\n      * @return the last key\n      */\n+\n+\n     abstract long getLastKey();\n \n     /**\n@@ -179,6 +219,8 @@ abstract class PageData extends Page {\n      *\n      * @return the page\n      */\n+\n+\n     abstract PageDataLeaf getFirstLeaf();\n \n     /**\n@@ -186,6 +228,8 @@ abstract class PageData extends Page {\n      *\n      * @param id the new parent page id\n      */\n+\n+\n     void setParentPageId(int id) {\n         index.getPageStore().logUndo(this, data);\n         parentPageId = id;\n@@ -200,6 +244,8 @@ abstract class PageData extends Page {\n      *\n      * @param old the previous position\n      */\n+\n+\n     abstract void remapChildren(int old);\n \n     /**\n@@ -208,11 +254,15 @@ abstract class PageData extends Page {\n      * @param key the key of the row to remove\n      * @return true if this page is now empty\n      */\n+\n+\n     abstract boolean remove(long key);\n \n     /**\n      * Free this page and all child pages.\n      */\n+\n+\n     abstract void freeRecursive();\n \n     /**\n@@ -221,6 +271,8 @@ abstract class PageData extends Page {\n      * @param key the key\n      * @return the row\n      */\n+\n+\n     abstract Row getRowWithKey(long key);\n \n     /**\n@@ -228,6 +280,7 @@ abstract class PageData extends Page {\n      *\n      * @return number of double words (4 bytes each)\n      */\n+\n     @Override\n     public int getMemory() {\n         // need to always return the same value for the same object (otherwise\n@@ -246,4 +299,4 @@ abstract class PageData extends Page {\n         return changeCount < index.getPageStore().getChangeCount();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_random/32/PageData.java\nindex 27391cb758..ed851e32a8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_random/32/PageData.java\n@@ -100,8 +100,7 @@ abstract class PageData extends Page {\n      *\n      * @param key the key (may not exist)\n      * @return the matching or next index\n-     */\n-    int find(long key) { //\u6298\u534a\u67e5\u627e\n+     */int find(long key) { //\u6298\u534a\u67e5\u627e\n         int l = 0, r = entryCount;\n         while (l < r) {\n             int i = (l + r) >>> 1;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_three_grams/32/PageData.java\nindex 27391cb758..ddbbe533a3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/errored/1/32/PageData.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/codefollower-H2-Research/styler_three_grams/32/PageData.java\n@@ -100,8 +100,7 @@ abstract class PageData extends Page {\n      *\n      * @param key the key (may not exist)\n      * @return the matching or next index\n-     */\n-    int find(long key) { //\u6298\u534a\u67e5\u627e\n+     */intfind(long key) { //\u6298\u534a\u67e5\u627e\n         int l = 0, r = entryCount;\n         while (l < r) {\n             int i = (l + r) >>> 1;\n",
            "diff_size": 2
        }
    ]
}