{
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "151",
                "column": "27",
                "severity": "warning",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n        this.cacheCount = cacheCount;\n        return this;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/0/PagingRequest.java\nindex 6c3fe6c9c4..6d85096987 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/0/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/0/PagingRequest.java\nindex 6c3fe6c9c4..9071a7ff07 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/0/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n@@ -167,10 +167,8 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     }\n \n     /**\n-     *\n      * @param useLastPageIfPageNoOut\n      * @return\n-     *\n      * @see #setUseLastPageIfPageOut(Boolean)\n      */\n     @Deprecated\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/0/PagingRequest.java\nindex 6c3fe6c9c4..dfe6d889a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/0/PagingRequest.java\n@@ -129,7 +129,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         setCtx(null);\n         if (clearResult) {\n             if (result != null) {\n-                result.setItems(Collects.<E>emptyArrayList());\n+                result.setItems(Collects.<E> emptyArrayList());\n             }\n         }\n         setCondition(null);\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n@@ -220,4 +220,4 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     public boolean isPagingRequest() {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/0/PagingRequest.java\nindex 6c3fe6c9c4..01bb8d4387 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/0/PagingRequest.java\n@@ -14,7 +14,6 @@\n \n package com.jn.easyjson.tests.entity.struct;\n \n-\n import com.jn.easyjson.core.JSONBuilderProvider;\n import com.jn.easyjson.core.exclusion.IgnoreAnnotationExclusion;\n import com.jn.langx.util.collection.Collects;\n@@ -34,7 +33,6 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     private Boolean useLastPageIfPageOut;\n     private C condition;\n     private PagingResult<E> result;\n-\n     private boolean subqueryPaging = false;\n     private String subqueryPagingStartFlag;\n     private String subqueryPagingEndFlag;\n@@ -43,6 +41,8 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     /**\n      * Nothing to do, will not do query, the result is empty list\n      */\n+\n+\n     public boolean isEmptyRequest() {\n         return this.pageSize == 0;\n     }\n@@ -50,26 +50,33 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     /**\n      * Get all matched records with out paging limit\n      */\n+\n+\n     public boolean isGetAllRequest() {\n         return this.pageSize < 0 && pageNo == 1;\n     }\n \n+\n     public boolean isGetAllFromNonZeroOffsetRequest() {\n         return this.pageSize < 0 && pageNo > 1;\n     }\n \n+\n     public boolean isValidRequest() {\n         return this.pageSize > 0 || isGetAllFromNonZeroOffsetRequest();\n     }\n \n+\n     public PagingRequest<C, E> limit(int pageNo, int pageSize) {\n         return this.setPageNo(pageNo).setPageSize(pageSize);\n     }\n \n+\n     public int getPageNo() {\n         return this.pageNo;\n     }\n \n+\n     public PagingRequest<C, E> setPageNo(int pageNo) {\n         if (pageNo <= 0) {\n             return this;\n@@ -78,10 +85,12 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return this;\n     }\n \n+\n     public int getPageSize() {\n         return this.pageSize;\n     }\n \n+\n     public PagingRequest<C, E> setPageSize(int pageSize) {\n         if (pageSize < 0) {\n             this.pageSize = -1;\n@@ -91,37 +100,45 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return this;\n     }\n \n+\n     public C getCondition() {\n         return (C) this.condition;\n     }\n \n+\n     public PagingRequest<C, E> setCondition(C condition) {\n         this.condition = condition;\n         return this;\n     }\n \n+\n     public Boolean getNeedCount() {\n         return this.needCount;\n     }\n \n+\n     public PagingRequest<C, E> setNeedCount(Boolean needCount) {\n         this.needCount = needCount;\n         return this;\n     }\n \n+\n     public PagingResult<E> getResult() {\n         return this.result;\n     }\n \n+\n     public PagingRequest<C, E> setResult(PagingResult<E> result) {\n         this.result = result;\n         return this;\n     }\n \n+\n     public void clear() {\n         clear(true);\n     }\n \n+\n     public void clear(boolean clearResult) {\n         super.clear();\n         needCount = null;\n@@ -140,27 +157,33 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return countColumn;\n     }\n \n+\n     public void setCountColumn(String countColumn) {\n         this.countColumn = countColumn;\n     }\n \n+\n     public Boolean getCacheCount() {\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n \n+\n     public PagingRequest<C, E> setCtx(PagingRequestContext<C, E> ctx) {\n         return (PagingRequest<C, E>) setContext(ctx);\n     }\n \n+\n     public Boolean isUseLastPageIfPageOut() {\n         return useLastPageIfPageOut;\n     }\n \n+\n     public PagingRequest<C, E> setUseLastPageIfPageOut(Boolean useLastPageIfPageNoOut) {\n         this.useLastPageIfPageOut = useLastPageIfPageNoOut;\n         return this;\n@@ -173,6 +196,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n      *\n      * @see #setUseLastPageIfPageOut(Boolean)\n      */\n+\n     @Deprecated\n     public PagingRequest<C, E> setUseLastPageIfPageNoOut(Boolean useLastPageIfPageNoOut) {\n         return setUseLastPageIfPageOut(useLastPageIfPageNoOut);\n@@ -183,24 +207,29 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return subqueryPagingStartFlag;\n     }\n \n+\n     public PagingRequest<C, E> setSubqueryPagingStartFlag(String subqueryPagingStartFlag) {\n         this.subqueryPagingStartFlag = subqueryPagingStartFlag;\n         return this;\n     }\n \n+\n     public String getSubqueryPagingEndFlag() {\n         return subqueryPagingEndFlag;\n     }\n \n+\n     public PagingRequest<C, E> setSubqueryPagingEndFlag(String subqueryPagingEndFlag) {\n         this.subqueryPagingEndFlag = subqueryPagingEndFlag;\n         return this;\n     }\n \n+\n     public boolean isSubqueryPaging() {\n         return subqueryPaging;\n     }\n \n+\n     public PagingRequest<C, E> setSubqueryPaging(boolean subqueryPaging) {\n         this.subqueryPaging = subqueryPaging;\n         return this;\n@@ -220,4 +249,4 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     public boolean isPagingRequest() {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/0/PagingRequest.java\nindex 6c3fe6c9c4..6d85096987 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/0/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/0/PagingRequest.java\nindex 6c3fe6c9c4..6d85096987 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/0/PagingRequest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/0/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n",
            "diff_size": 1
        }
    ]
}