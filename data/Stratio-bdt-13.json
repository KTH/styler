{
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.specs;\n\nimport com.stratio.qa.utils.ThreadProperty;\nimport io.cucumber.datatable.DataTable;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/13/FileTest.java\nindex 4088f5e20a..dffa7ab218 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler/13/FileTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/13/FileTest.java\nindex 4088f5e20a..9392415ed9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/intellij/13/FileTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -32,7 +33,9 @@ public class FileTest {\n         String baseData = \"schemas/testCreateFile.json\";\n         String type = \"json\";\n         String envVar = \"myjson\";\n-        List<List<String>> rawData = Arrays.asList(Arrays.asList(\"key1\", \"UPDATE\", \"new_value\", \"n/a\"), Arrays.asList(\"key2\", \"ADDTO\", \"[\\\"new_value\\\"]\", \"array\"));\n+        List<List<String>> rawData = Arrays\n+            .asList(Arrays.asList(\"key1\", \"UPDATE\", \"new_value\", \"n/a\"),\n+                Arrays.asList(\"key2\", \"ADDTO\", \"[\\\"new_value\\\"]\", \"array\"));\n         DataTable modifications = DataTable.create(rawData);\n \n         CommonG commong = new CommonG();\n@@ -41,9 +44,11 @@ public class FileTest {\n         file.readFileToVariable(baseData, type, envVar, modifications);\n \n         String envVarResult = ThreadProperty.get(envVar);\n-        String expectedResult = \"{\\\"key1\\\":\\\"new_value\\\",\\\"key2\\\":[[\\\"new_value\\\"]],\\\"key3\\\":{\\\"key3_2\\\":\\\"value3_2\\\",\\\"key3_1\\\":\\\"value3_1\\\"}}\";\n+        String expectedResult =\n+            \"{\\\"key1\\\":\\\"new_value\\\",\\\"key2\\\":[[\\\"new_value\\\"]],\\\"key3\\\":{\\\"key3_2\\\":\\\"value3_2\\\",\\\"key3_1\\\":\\\"value3_1\\\"}}\";\n \n-        assertThat(envVarResult).as(\"Not as expected\").isEqualTo(expectedResult);\n+        assertThat(envVarResult).as(\"Not as expected\")\n+            .isEqualTo(expectedResult);\n     }\n \n     @Test\n@@ -53,7 +58,8 @@ public class FileTest {\n         String baseData = \"schemas/krb5.conf\";\n         String type = \"string\";\n         String envVar = \"mystring\";\n-        List<List<String>> rawData = Arrays.asList(Arrays.asList(\"foo\", \"REPLACE\", \"bar\", \"n/a\"));\n+        List<List<String>> rawData =\n+            Arrays.asList(Arrays.asList(\"foo\", \"REPLACE\", \"bar\", \"n/a\"));\n         DataTable modifications = DataTable.create(rawData);\n \n         CommonG commong = new CommonG();\n@@ -64,7 +70,8 @@ public class FileTest {\n         String envVarResult = ThreadProperty.get(envVar);\n         String expectedResult = \"bar = bar\";\n \n-        assertThat(envVarResult).as(\"Not as expected\").isEqualTo(expectedResult);\n+        assertThat(envVarResult).as(\"Not as expected\")\n+            .isEqualTo(expectedResult);\n     }\n \n     @Test\n@@ -83,7 +90,8 @@ public class FileTest {\n         String envVarResult = ThreadProperty.get(envVar);\n         String expectedResult = \"foo = bar\";\n \n-        assertThat(envVarResult).as(\"Not as expected\").isEqualTo(expectedResult);\n+        assertThat(envVarResult).as(\"Not as expected\")\n+            .isEqualTo(expectedResult);\n     }\n \n     @Test\n@@ -99,7 +107,9 @@ public class FileTest {\n         CommonG commong = new CommonG();\n         FileSpec file = new FileSpec(commong);\n \n-        file.readFromCSV(getClass().getClassLoader().getResource(\"exampleCSV.csv\").getPath(), \",\");\n+        file.readFromCSV(\n+            getClass().getClassLoader().getResource(\"exampleCSV.csv\").getPath(),\n+            \",\");\n \n         List<Map<String, String>> results = commong.getCSVResults();\n \n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/13/FileTest.java\nindex 4088f5e20a..3aeec323eb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/naturalize/13/FileTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n@@ -107,4 +108,4 @@ public class FileTest {\n         assertThat(commong.getCSVResults()).isEqualTo(expectedCSVResults);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/13/FileTest.java\nindex 4088f5e20a..c022bcab8d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/codebuff/13/FileTest.java\n@@ -18,74 +18,61 @@ package com.stratio.qa.specs;\n import com.stratio.qa.utils.ThreadProperty;\n import io.cucumber.datatable.DataTable;\n import org.testng.annotations.Test;\n-\n import java.util.*;\n-\n import static org.assertj.core.api.Assertions.assertThat;\n \n+\n public class FileTest {\n \n     @Test\n     public void testReadFileToVariableJSON() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n-\n         String baseData = \"schemas/testCreateFile.json\";\n         String type = \"json\";\n         String envVar = \"myjson\";\n         List<List<String>> rawData = Arrays.asList(Arrays.asList(\"key1\", \"UPDATE\", \"new_value\", \"n/a\"), Arrays.asList(\"key2\", \"ADDTO\", \"[\\\"new_value\\\"]\", \"array\"));\n         DataTable modifications = DataTable.create(rawData);\n-\n         CommonG commong = new CommonG();\n         FileSpec file = new FileSpec(commong);\n-\n         file.readFileToVariable(baseData, type, envVar, modifications);\n-\n         String envVarResult = ThreadProperty.get(envVar);\n         String expectedResult = \"{\\\"key1\\\":\\\"new_value\\\",\\\"key2\\\":[[\\\"new_value\\\"]],\\\"key3\\\":{\\\"key3_2\\\":\\\"value3_2\\\",\\\"key3_1\\\":\\\"value3_1\\\"}}\";\n-\n         assertThat(envVarResult).as(\"Not as expected\").isEqualTo(expectedResult);\n     }\n \n+\n     @Test\n     public void testReadFileToVariableString() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n-\n         String baseData = \"schemas/krb5.conf\";\n         String type = \"string\";\n         String envVar = \"mystring\";\n         List<List<String>> rawData = Arrays.asList(Arrays.asList(\"foo\", \"REPLACE\", \"bar\", \"n/a\"));\n         DataTable modifications = DataTable.create(rawData);\n-\n         CommonG commong = new CommonG();\n         FileSpec file = new FileSpec(commong);\n-\n         file.readFileToVariable(baseData, type, envVar, modifications);\n-\n         String envVarResult = ThreadProperty.get(envVar);\n         String expectedResult = \"bar = bar\";\n-\n         assertThat(envVarResult).as(\"Not as expected\").isEqualTo(expectedResult);\n     }\n \n+\n     @Test\n     public void testReadFileToVariableNoDataTableString() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n-\n         String baseData = \"schemas/krb5.conf\";\n         String type = \"string\";\n         String envVar = \"mystring\";\n-\n         CommonG commong = new CommonG();\n         FileSpec file = new FileSpec(commong);\n-\n         file.readFileToVariableNoDataTable(baseData, type, envVar);\n-\n         String envVarResult = ThreadProperty.get(envVar);\n         String expectedResult = \"foo = bar\";\n-\n         assertThat(envVarResult).as(\"Not as expected\").isEqualTo(expectedResult);\n     }\n \n+\n     @Test\n     public void testReadCSVFile() throws Exception {\n         List<Map<String, String>> expectedCSVResults = new ArrayList<>();\n@@ -93,18 +80,12 @@ public class FileTest {\n         mapAux.put(\"qa\", \"bdt\");\n         mapAux.put(\"test1\", \"test2\");\n         expectedCSVResults.add(mapAux);\n-\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n-\n         CommonG commong = new CommonG();\n         FileSpec file = new FileSpec(commong);\n-\n         file.readFromCSV(getClass().getClassLoader().getResource(\"exampleCSV.csv\").getPath(), \",\");\n-\n         List<Map<String, String>> results = commong.getCSVResults();\n-\n         assertThat(commong.getResultsType()).isEqualTo(\"csv\");\n         assertThat(commong.getCSVResults()).isEqualTo(expectedCSVResults);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/13/FileTest.java\nindex 4088f5e20a..dffa7ab218 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_random/13/FileTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/13/FileTest.java\nindex 4088f5e20a..dffa7ab218 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/errored/1/13/FileTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Stratio-bdt/styler_three_grams/13/FileTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.stratio.qa.utils.ThreadProperty;\n",
            "diff_size": 1
        }
    ]
}