{
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.bpmn.parser.factory;\n\nimport org.activiti.engine.delegate.DelegateExecution;\nimport org.activiti.engine.impl.delegate.ThrowMessage;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/12/MessageExecutionContext.java\nindex bc4860330a..bdc0d7fc0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/12/MessageExecutionContext.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.parser.factory;\n \n import org.activiti.engine.delegate.DelegateExecution;\n@@ -18,11 +19,11 @@ import org.activiti.engine.impl.interceptor.CommandContext;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n public interface MessageExecutionContext {\n-    \n+\n     String getMessageName(DelegateExecution execution);\n-    \n+\n     ThrowMessage createThrowMessage(DelegateExecution execution);\n-    \n+\n     MessageEventSubscriptionEntity createMessageEventSubscription(CommandContext commandContext,\n                                                                   DelegateExecution execution);\n }\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/12/MessageExecutionContext.java\nindex bc4860330a..bdc0d7fc0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/12/MessageExecutionContext.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.parser.factory;\n \n import org.activiti.engine.delegate.DelegateExecution;\n@@ -18,11 +19,11 @@ import org.activiti.engine.impl.interceptor.CommandContext;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n public interface MessageExecutionContext {\n-    \n+\n     String getMessageName(DelegateExecution execution);\n-    \n+\n     ThrowMessage createThrowMessage(DelegateExecution execution);\n-    \n+\n     MessageEventSubscriptionEntity createMessageEventSubscription(CommandContext commandContext,\n                                                                   DelegateExecution execution);\n }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'INTERFACE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/12/MessageExecutionContext.java\nindex bc4860330a..0c8b87d02f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/12/MessageExecutionContext.java\n@@ -17,12 +17,16 @@ import org.activiti.engine.impl.delegate.ThrowMessage;\n import org.activiti.engine.impl.interceptor.CommandContext;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n+\n public interface MessageExecutionContext {\n-    \n+\n+\n     String getMessageName(DelegateExecution execution);\n-    \n+\n+\n     ThrowMessage createThrowMessage(DelegateExecution execution);\n-    \n-    MessageEventSubscriptionEntity createMessageEventSubscription(CommandContext commandContext,\n-                                                                  DelegateExecution execution);\n-}\n+\n+\n+    MessageEventSubscriptionEntity createMessageEventSubscription(CommandContext commandContext, DelegateExecution execution);\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/12/MessageExecutionContext.java\nindex bc4860330a..bdc0d7fc0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/12/MessageExecutionContext.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.parser.factory;\n \n import org.activiti.engine.delegate.DelegateExecution;\n@@ -18,11 +19,11 @@ import org.activiti.engine.impl.interceptor.CommandContext;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n public interface MessageExecutionContext {\n-    \n+\n     String getMessageName(DelegateExecution execution);\n-    \n+\n     ThrowMessage createThrowMessage(DelegateExecution execution);\n-    \n+\n     MessageEventSubscriptionEntity createMessageEventSubscription(CommandContext commandContext,\n                                                                   DelegateExecution execution);\n }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/12/MessageExecutionContext.java\nindex bc4860330a..bdc0d7fc0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/12/MessageExecutionContext.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/12/MessageExecutionContext.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.parser.factory;\n \n import org.activiti.engine.delegate.DelegateExecution;\n@@ -18,11 +19,11 @@ import org.activiti.engine.impl.interceptor.CommandContext;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n public interface MessageExecutionContext {\n-    \n+\n     String getMessageName(DelegateExecution execution);\n-    \n+\n     ThrowMessage createThrowMessage(DelegateExecution execution);\n-    \n+\n     MessageEventSubscriptionEntity createMessageEventSubscription(CommandContext commandContext,\n                                                                   DelegateExecution execution);\n }\n",
            "diff_size": 4
        }
    ]
}