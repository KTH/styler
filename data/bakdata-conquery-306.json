{
    "error_id": "306",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\t@JsonIgnore\n\tprivate transient int[] prefix;\n\t@JsonManagedReference //@Valid\n\t@Getter @Setter\n\tprivate List<ConceptTreeChild> children = Collections.emptyList();\n\t@JsonIgnore @Getter @Setter",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/306/ConceptTreeChild.java\nindex 413627bf3d..8288df02dc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/306/ConceptTreeChild.java\n@@ -21,7 +21,7 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \n \t@JsonIgnore\n \tprivate transient int[] prefix;\n-\t@JsonManagedReference //@Valid\n+\t@ JsonManagedReference //@Valid\n \t@Getter @Setter\n \tprivate List<ConceptTreeChild> children = Collections.emptyList();\n \t@JsonIgnore @Getter @Setter\n@@ -45,7 +45,7 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t}\n \t\treturn prefix;\n \t}\n-\t\n+\n \tpublic void init() throws ConceptConfigurationException {\n \t\tif(condition!=null) {\n \t\t\tcondition.init(this);\n@@ -75,12 +75,12 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t}\n \t\tthrow new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n \t}\n-\t\n+\n \t@Override\n \tpublic boolean matchesPrefix(int[] conceptPrefix) {\n \t\treturn conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n \t}\n-\t\n+\n \t@Override\n \tpublic long calculateBitMask() {\n \t\tif(getLocalId() < 64) {\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 1, expected is 4, indentation should be the same level as line 74.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/306/ConceptTreeChild.java\nindex 413627bf3d..20e98decba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/306/ConceptTreeChild.java\n@@ -19,38 +19,50 @@ import lombok.Setter;\n \n public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> implements ConceptTreeNode<ConceptTreeChildId> {\n \n-\t@JsonIgnore\n-\tprivate transient int[] prefix;\n-\t@JsonManagedReference //@Valid\n-\t@Getter @Setter\n-\tprivate List<ConceptTreeChild> children = Collections.emptyList();\n-\t@JsonIgnore @Getter @Setter\n-\tprivate int localId;\n-\t@JsonBackReference @Getter @Setter\n-\tprivate ConceptTreeNode<?> parent;\n-\t@JsonIgnore @Getter @Setter\n-\tprivate int depth=-1;\n-\t@Getter @NotNull @Setter\n-\tprivate CTCondition condition = null;\n+    @JsonIgnore\n+    private transient int[] prefix;\n+    @JsonManagedReference //@Valid\n+    @Getter\n+    @Setter\n+    private List<ConceptTreeChild> children = Collections.emptyList();\n+    @JsonIgnore\n+    @Getter\n+    @Setter\n+    private int localId;\n+    @JsonBackReference\n+    @Getter\n+    @Setter\n+    private ConceptTreeNode<?> parent;\n+    @JsonIgnore\n+    @Getter\n+    @Setter\n+    private int depth = -1;\n+    @Getter\n+    @NotNull\n+    @Setter\n+    private CTCondition condition = null;\n \n-\t@JsonIgnore @Getter @Setter\n-\tprivate TreeChildPrefixIndex childIndex;\n+    @JsonIgnore\n+    @Getter\n+    @Setter\n+    private TreeChildPrefixIndex childIndex;\n \n-\t@Override @JsonIgnore\n-\tpublic int[] getPrefix() {\n-\t\tif(prefix==null) {\n-\t\t\tint[] pPrefix = getParent().getPrefix();\n-\t\t\tprefix = Arrays.copyOf(pPrefix, pPrefix.length+1);\n-\t\t\tprefix[prefix.length-1] = this.getLocalId();\n-\t\t}\n-\t\treturn prefix;\n-\t}\n-\t\n-\tpublic void init() throws ConceptConfigurationException {\n-\t\tif(condition!=null) {\n-\t\t\tcondition.init(this);\n-\t\t}\n-\t}\n+    @Override\n+    @JsonIgnore\n+    public int[] getPrefix() {\n+        if (prefix == null) {\n+            int[] pPrefix = getParent().getPrefix();\n+            prefix = Arrays.copyOf(pPrefix, pPrefix.length + 1);\n+            prefix[prefix.length - 1] = this.getLocalId();\n+        }\n+        return prefix;\n+    }\n+\n+    public void init() throws ConceptConfigurationException {\n+        if (condition != null) {\n+            condition.init(this);\n+        }\n+    }\n \t/*\n \t@Override\n \tpublic void incMatchingEntries(CDateRange conceptDateRange) {\n@@ -59,35 +71,35 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t\tgetParent().incMatchingEntries(conceptDateRange);\n \t}*/\n \n-\t@Override\n-\tpublic ConceptTreeChildId createId() {\n-\t\treturn new ConceptTreeChildId(parent.getId(), getName());\n-\t}\n+    @Override\n+    public ConceptTreeChildId createId() {\n+        return new ConceptTreeChildId(parent.getId(), getName());\n+    }\n \n-\t@Override @JsonIgnore\n-\tpublic TreeConcept getConcept() {\n-\t\tConceptTreeNode<?> n = this;\n-\t\twhile(n!=null) {\n-\t\t\tif(n instanceof TreeConcept) {\n-\t\t\t\treturn (TreeConcept)n;\n-\t\t\t}\n-\t\t\tn = n.getParent();\n-\t\t}\n-\t\tthrow new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean matchesPrefix(int[] conceptPrefix) {\n-\t\treturn conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n-\t}\n-\t\n-\t@Override\n-\tpublic long calculateBitMask() {\n-\t\tif(getLocalId() < 64) {\n-\t\t\treturn 1L << getLocalId();\n-\t\t}\n-\t\telse {\n-\t\t\treturn getParent().calculateBitMask();\n-\t\t}\n-\t}\n+    @Override\n+    @JsonIgnore\n+    public TreeConcept getConcept() {\n+        ConceptTreeNode<?> n = this;\n+        while (n != null) {\n+            if (n instanceof TreeConcept) {\n+                return (TreeConcept) n;\n+            }\n+            n = n.getParent();\n+        }\n+        throw new IllegalStateException(\"The node \" + this + \" seems to have no root\");\n+    }\n+\n+    @Override\n+    public boolean matchesPrefix(int[] conceptPrefix) {\n+        return conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n+    }\n+\n+    @Override\n+    public long calculateBitMask() {\n+        if (getLocalId() < 64) {\n+            return 1L << getLocalId();\n+        } else {\n+            return getParent().calculateBitMask();\n+        }\n+    }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 26.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/306/ConceptTreeChild.java\nindex 413627bf3d..143b55ad8a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/306/ConceptTreeChild.java\n@@ -21,7 +21,8 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \n \t@JsonIgnore\n \tprivate transient int[] prefix;\n-\t@JsonManagedReference //@Valid\n+\t@JsonManagedReference\n+//@Valid\n \t@Getter @Setter\n \tprivate List<ConceptTreeChild> children = Collections.emptyList();\n \t@JsonIgnore @Getter @Setter\n@@ -51,7 +52,8 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t\tcondition.init(this);\n \t\t}\n \t}\n-\t/*\n+\n+/*\n \t@Override\n \tpublic void incMatchingEntries(CDateRange conceptDateRange) {\n \t\tsuper.incMatchingEntries(conceptDateRange);\n@@ -90,4 +92,4 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t\treturn getParent().calculateBitMask();\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/306/ConceptTreeChild.java\nindex 413627bf3d..a2e5dc805e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/306/ConceptTreeChild.java\n@@ -3,9 +3,7 @@ package com.bakdata.conquery.models.concepts.tree;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-\n import javax.validation.constraints.NotNull;\n-\n import com.bakdata.conquery.models.concepts.ConceptElement;\n import com.bakdata.conquery.models.concepts.conditions.CTCondition;\n import com.bakdata.conquery.models.exceptions.ConceptConfigurationException;\n@@ -13,81 +11,79 @@ import com.bakdata.conquery.models.identifiable.ids.specific.ConceptTreeChildId;\n import com.fasterxml.jackson.annotation.JsonBackReference;\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonManagedReference;\n-\n import lombok.Getter;\n import lombok.Setter;\n \n public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> implements ConceptTreeNode<ConceptTreeChildId> {\n \n-\t@JsonIgnore\n-\tprivate transient int[] prefix;\n-\t@JsonManagedReference //@Valid\n-\t@Getter @Setter\n-\tprivate List<ConceptTreeChild> children = Collections.emptyList();\n-\t@JsonIgnore @Getter @Setter\n-\tprivate int localId;\n-\t@JsonBackReference @Getter @Setter\n-\tprivate ConceptTreeNode<?> parent;\n-\t@JsonIgnore @Getter @Setter\n-\tprivate int depth=-1;\n-\t@Getter @NotNull @Setter\n-\tprivate CTCondition condition = null;\n+    @JsonIgnore\n+    private transient int[] prefix;\n+    @JsonManagedReference //@Valid @Getter @Setter\n+    private List<ConceptTreeChild> children = Collections.emptyList();\n+    @JsonIgnore @Getter @Setter\n+    private int localId;\n+    @JsonBackReference @Getter @Setter\n+    private ConceptTreeNode<?> parent;\n+    @JsonIgnore @Getter @Setter\n+    private int depth = -1;\n+    @Getter @NotNull @Setter\n+    private CTCondition condition = null;\n+    @JsonIgnore @Getter @Setter\n+    private TreeChildPrefixIndex childIndex;\n+    @Override\n+    @JsonIgnore\n+    public int[] getPrefix() {\n+        if(prefix == null) {\n+            int[] pPrefix = getParent().getPrefix();\n+            prefix = Arrays.copyOf(pPrefix, pPrefix.length+ 1);\n+            prefix[prefix.length -1] = this.getLocalId();\n+        }\n+        return prefix;\n+    }\n+\n+    public void init() throws ConceptConfigurationException {\n+        if(condition != null) {\n+            condition.init(this);\n+        }\n+    }\n+    /*\n+    @Override\n+    public void incMatchingEntries(CDateRange conceptDateRange) {\n+        super.incMatchingEntries(conceptDateRange);\n+        if(getParent()!=null)\n+            getParent().incMatchingEntries(conceptDateRange);\n+    }*/\n \n-\t@JsonIgnore @Getter @Setter\n-\tprivate TreeChildPrefixIndex childIndex;\n+    @Override\n+    public ConceptTreeChildId createId() {\n+        return new ConceptTreeChildId(parent.getId(), getName());\n+    }\n \n-\t@Override @JsonIgnore\n-\tpublic int[] getPrefix() {\n-\t\tif(prefix==null) {\n-\t\t\tint[] pPrefix = getParent().getPrefix();\n-\t\t\tprefix = Arrays.copyOf(pPrefix, pPrefix.length+1);\n-\t\t\tprefix[prefix.length-1] = this.getLocalId();\n-\t\t}\n-\t\treturn prefix;\n-\t}\n-\t\n-\tpublic void init() throws ConceptConfigurationException {\n-\t\tif(condition!=null) {\n-\t\t\tcondition.init(this);\n-\t\t}\n-\t}\n-\t/*\n-\t@Override\n-\tpublic void incMatchingEntries(CDateRange conceptDateRange) {\n-\t\tsuper.incMatchingEntries(conceptDateRange);\n-\t\tif(getParent()!=null)\n-\t\t\tgetParent().incMatchingEntries(conceptDateRange);\n-\t}*/\n+    @Override\n+    @JsonIgnore\n+    public TreeConcept getConcept() {\n+        ConceptTreeNode<?> n = this;\n+        while(n != null) {\n+            if(n instanceof TreeConcept) {\n+                return (TreeConcept)n;\n+            }\n+            n = n.getParent();\n+        }\n+        throw new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n+    }\n \n-\t@Override\n-\tpublic ConceptTreeChildId createId() {\n-\t\treturn new ConceptTreeChildId(parent.getId(), getName());\n-\t}\n+    @Override\n+    public boolean matchesPrefix(int[] conceptPrefix) {\n+        return conceptPrefix.length > depth && conceptPrefix[depth]== localId;\n+    }\n \n-\t@Override @JsonIgnore\n-\tpublic TreeConcept getConcept() {\n-\t\tConceptTreeNode<?> n = this;\n-\t\twhile(n!=null) {\n-\t\t\tif(n instanceof TreeConcept) {\n-\t\t\t\treturn (TreeConcept)n;\n-\t\t\t}\n-\t\t\tn = n.getParent();\n-\t\t}\n-\t\tthrow new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean matchesPrefix(int[] conceptPrefix) {\n-\t\treturn conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n-\t}\n-\t\n-\t@Override\n-\tpublic long calculateBitMask() {\n-\t\tif(getLocalId() < 64) {\n-\t\t\treturn 1L << getLocalId();\n-\t\t}\n-\t\telse {\n-\t\t\treturn getParent().calculateBitMask();\n-\t\t}\n-\t}\n-}\n+    @Override\n+    public long calculateBitMask() {\n+        if(getLocalId()< 64) {\n+            return 1L << getLocalId();\n+        }\n+        else {\n+            return getParent().calculateBitMask();\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 97
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'while' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 24, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'while' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'while rcurly' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 20, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 16, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/306/ConceptTreeChild.java\nindex 413627bf3d..d74f1a50a5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/306/ConceptTreeChild.java\n@@ -21,37 +21,38 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \n \t@JsonIgnore\n \tprivate transient int[] prefix;\n-\t@JsonManagedReference //@Valid\n-\t@Getter @Setter\n-\tprivate List<ConceptTreeChild> children = Collections.emptyList();\n-\t@JsonIgnore @Getter @Setter\n-\tprivate int localId;\n-\t@JsonBackReference @Getter @Setter\n-\tprivate ConceptTreeNode<?> parent;\n-\t@JsonIgnore @Getter @Setter\n-\tprivate int depth=-1;\n-\t@Getter @NotNull @Setter\n-\tprivate CTCondition condition = null;\n+\t@JsonManagedReference\n+\t//@Valid @Getter\n+\t@Setter\n+\t\t\tprivate List<ConceptTreeChild> children = Collections.emptyList();\n+\t\t\t@JsonIgnore @Getter @Setter\n+\t\t\tprivate int localId;\n+\t\t\t@JsonBackReference @Getter @Setter\n+\t\t\tprivate ConceptTreeNode<?> parent;\n+\t\t\t@JsonIgnore @Getter @Setter\n+\t\t\tprivate int depth=-1;\n+\t\t\t@Getter @NotNull @Setter\n+\t\t\tprivate CTCondition condition = null;\n \n-\t@JsonIgnore @Getter @Setter\n-\tprivate TreeChildPrefixIndex childIndex;\n+\t\t\t@JsonIgnore @Getter @Setter\n+\t\t\tprivate TreeChildPrefixIndex childIndex;\n \n-\t@Override @JsonIgnore\n-\tpublic int[] getPrefix() {\n-\t\tif(prefix==null) {\n-\t\t\tint[] pPrefix = getParent().getPrefix();\n-\t\t\tprefix = Arrays.copyOf(pPrefix, pPrefix.length+1);\n-\t\t\tprefix[prefix.length-1] = this.getLocalId();\n-\t\t}\n-\t\treturn prefix;\n-\t}\n-\t\n-\tpublic void init() throws ConceptConfigurationException {\n-\t\tif(condition!=null) {\n-\t\t\tcondition.init(this);\n-\t\t}\n-\t}\n-\t/*\n+\t\t\t@Override @JsonIgnore\n+\t\t\tpublic int[] getPrefix() {\n+\t\t\t\tif(prefix==null) {\n+\t\t\t\t\tint[] pPrefix = getParent().getPrefix();\n+\t\t\t\t\tprefix = Arrays.copyOf(pPrefix, pPrefix.length+1);\n+\t\t\t\t\tprefix[prefix.length-1] = this.getLocalId();\n+\t\t\t\t}\n+\t\t\t\treturn prefix;\n+\t\t\t}\n+\n+\t\t\tpublic void init() throws ConceptConfigurationException {\n+\t\t\t\tif(condition!=null) {\n+\t\t\t\t\tcondition.init(this);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t/*\n \t@Override\n \tpublic void incMatchingEntries(CDateRange conceptDateRange) {\n \t\tsuper.incMatchingEntries(conceptDateRange);\n@@ -59,35 +60,36 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t\tgetParent().incMatchingEntries(conceptDateRange);\n \t}*/\n \n-\t@Override\n-\tpublic ConceptTreeChildId createId() {\n-\t\treturn new ConceptTreeChildId(parent.getId(), getName());\n-\t}\n+\t\t\t@Override\n+\t\t\tpublic ConceptTreeChildId createId() {\n+\t\t\t\treturn new ConceptTreeChildId(parent.getId(), getName());\n+\t\t\t}\n \n-\t@Override @JsonIgnore\n-\tpublic TreeConcept getConcept() {\n-\t\tConceptTreeNode<?> n = this;\n-\t\twhile(n!=null) {\n-\t\t\tif(n instanceof TreeConcept) {\n-\t\t\t\treturn (TreeConcept)n;\n+\t\t\t@Override @JsonIgnore\n+\t\t\tpublic TreeConcept getConcept() {\n+\t\t\t\tConceptTreeNode<?> n = this;\n+\t\t\t\twhile(n!=null) {\n+\t\t\t\t\tif(n instanceof TreeConcept) {\n+\t\t\t\t\t\treturn (TreeConcept)n;\n+\t\t\t\t\t}\n+\t\t\t\t\tn = n.getParent();\n+\t\t\t\t}\n+\t\t\t\tthrow new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n \t\t\t}\n-\t\t\tn = n.getParent();\n-\t\t}\n-\t\tthrow new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n-\t}\n-\t\n-\t@Override\n-\tpublic boolean matchesPrefix(int[] conceptPrefix) {\n-\t\treturn conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n-\t}\n-\t\n-\t@Override\n-\tpublic long calculateBitMask() {\n-\t\tif(getLocalId() < 64) {\n-\t\t\treturn 1L << getLocalId();\n-\t\t}\n-\t\telse {\n-\t\t\treturn getParent().calculateBitMask();\n-\t\t}\n-\t}\n-}\n+\n+\t\t\t@Override\n+\t\t\tpublic boolean matchesPrefix(int[] conceptPrefix) {\n+\t\t\t\treturn conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic long calculateBitMask() {\n+\t\t\t\tif(getLocalId() < 64) {\n+\t\t\t\t\treturn 1L << getLocalId();\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\treturn getParent().calculateBitMask();\n+\t\t\t\t}\n+\t\t\t}\n+  }\n+  \n\\ No newline at end of file\n",
            "diff_size": 64
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/306/ConceptTreeChild.java\nindex 413627bf3d..8288df02dc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/306/ConceptTreeChild.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/306/ConceptTreeChild.java\n@@ -21,7 +21,7 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \n \t@JsonIgnore\n \tprivate transient int[] prefix;\n-\t@JsonManagedReference //@Valid\n+\t@ JsonManagedReference //@Valid\n \t@Getter @Setter\n \tprivate List<ConceptTreeChild> children = Collections.emptyList();\n \t@JsonIgnore @Getter @Setter\n@@ -45,7 +45,7 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t}\n \t\treturn prefix;\n \t}\n-\t\n+\n \tpublic void init() throws ConceptConfigurationException {\n \t\tif(condition!=null) {\n \t\t\tcondition.init(this);\n@@ -75,12 +75,12 @@ public class ConceptTreeChild extends ConceptElement<ConceptTreeChildId> impleme\n \t\t}\n \t\tthrow new IllegalStateException(\"The node \"+this+\" seems to have no root\");\n \t}\n-\t\n+\n \t@Override\n \tpublic boolean matchesPrefix(int[] conceptPrefix) {\n \t\treturn conceptPrefix.length > depth && conceptPrefix[depth] == localId;\n \t}\n-\t\n+\n \t@Override\n \tpublic long calculateBitMask() {\n \t\tif(getLocalId() < 64) {\n",
            "diff_size": 4
        }
    ]
}