{
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "18",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class DummyDynamicPeristenceType implements PersistenceType {\n\n\t@Override\n\tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n\t\treturn true;\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "5",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/5/DummyDynamicPeristenceType.java\nindex 79cab2b3fe..b19ab92791 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/5/DummyDynamicPeristenceType.java\n@@ -2,7 +2,7 @@\n  * oxCore is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n  *\n  * Copyright (c) 2020, Gluu\n- */package org.gluu.model.custom.script.type.persistence;\n+ */                                                                                                                                               package org.gluu.model.custom.script.type.persistence;\n \n import java.util.Map;\n \n@@ -15,7 +15,7 @@ import org.gluu.model.custom.script.model.CustomScript;\n  */\n public class DummyDynamicPeristenceType implements PersistenceType {\n \n-\t@Override\n+    @Override\n \tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n \t\treturn true;\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/5/DummyDynamicPeristenceType.java\nindex 79cab2b3fe..63fa05877a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/5/DummyDynamicPeristenceType.java\n@@ -2,12 +2,15 @@\n  * oxCore is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n  *\n  * Copyright (c) 2020, Gluu\n- */package org.gluu.model.custom.script.type.persistence;\n+ */\n+\n+package org.gluu.model.custom.script.type.persistence;\n \n import java.util.Map;\n \n import org.gluu.model.SimpleCustomProperty;\n import org.gluu.model.custom.script.model.CustomScript;\n+\n /**\n  * Dummy implementation of interface DynamicPeristanceType\n  *\n@@ -15,42 +18,42 @@ import org.gluu.model.custom.script.model.CustomScript;\n  */\n public class DummyDynamicPeristenceType implements PersistenceType {\n \n-\t@Override\n-\tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic int getApiVersion() {\n-\t\treturn 1;\n-\t}\n-\n-\t@Override\n-\tpublic void onAfterCreate(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t}\n-\n-\t@Override\n-\tpublic void onAfterDestroy(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t}\n-\n-\t@Override\n-\tpublic String createHashedPassword(String credential) {\n-\t\treturn credential;\n-\t}\n-\n-\t@Override\n-\tpublic boolean compareHashedPasswords(String credential, String storedCredential) {\n-\t\treturn false;\n-\t}\n+    @Override\n+    public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n+        return true;\n+    }\n+\n+    @Override\n+    public int getApiVersion() {\n+        return 1;\n+    }\n+\n+    @Override\n+    public void onAfterCreate(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n+    }\n+\n+    @Override\n+    public void onAfterDestroy(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n+    }\n+\n+    @Override\n+    public String createHashedPassword(String credential) {\n+        return credential;\n+    }\n+\n+    @Override\n+    public boolean compareHashedPasswords(String credential, String storedCredential) {\n+        return false;\n+    }\n \n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/5/DummyDynamicPeristenceType.java\nindex 79cab2b3fe..9d9a45273d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/5/DummyDynamicPeristenceType.java\n@@ -15,25 +15,25 @@ import org.gluu.model.custom.script.model.CustomScript;\n  */\n public class DummyDynamicPeristenceType implements PersistenceType {\n \n-\t@Override\n+    @Override\n \tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n+    return true;\n+    }\n \n \t@Override\n \tpublic boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n+    return true;\n+    }\n \n \t@Override\n \tpublic boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n+    return true;\n+    }\n \n \t@Override\n \tpublic int getApiVersion() {\n-\t\treturn 1;\n-\t}\n+    return 1;\n+    }\n \n \t@Override\n \tpublic void onAfterCreate(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n@@ -45,12 +45,12 @@ public class DummyDynamicPeristenceType implements PersistenceType {\n \n \t@Override\n \tpublic String createHashedPassword(String credential) {\n-\t\treturn credential;\n-\t}\n+    return credential;\n+    }\n \n \t@Override\n \tpublic boolean compareHashedPasswords(String credential, String storedCredential) {\n-\t\treturn false;\n-\t}\n+    return false;\n+    }\n \n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/5/DummyDynamicPeristenceType.java\nindex 79cab2b3fe..ae3560827a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/5/DummyDynamicPeristenceType.java\n@@ -4,53 +4,54 @@\n  * Copyright (c) 2020, Gluu\n  */package org.gluu.model.custom.script.type.persistence;\n \n-import java.util.Map;\n-\n-import org.gluu.model.SimpleCustomProperty;\n-import org.gluu.model.custom.script.model.CustomScript;\n+   import java.util.Map;\n+   import org.gluu.model.SimpleCustomProperty;\n+   import org.gluu.model.custom.script.model.CustomScript;\n /**\n  * Dummy implementation of interface DynamicPeristanceType\n  *\n  * @author Yuriy Movchan Date: 06/04/2020\n  */\n-public class DummyDynamicPeristenceType implements PersistenceType {\n-\n-\t@Override\n-\tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic int getApiVersion() {\n-\t\treturn 1;\n-\t}\n-\n-\t@Override\n-\tpublic void onAfterCreate(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t}\n-\n-\t@Override\n-\tpublic void onAfterDestroy(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n-\t}\n-\n-\t@Override\n-\tpublic String createHashedPassword(String credential) {\n-\t\treturn credential;\n-\t}\n-\n-\t@Override\n-\tpublic boolean compareHashedPasswords(String credential, String storedCredential) {\n-\t\treturn false;\n-\t}\n-\n-}\n+\n+\n+   public class DummyDynamicPeristenceType implements PersistenceType {\n+\n+       @Override\n+       public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n+           return true;\n+       }\n+\n+       @Override\n+       public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n+           return true;\n+       }\n+\n+       @Override\n+       public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n+           return true;\n+       }\n+\n+       @Override\n+       public int getApiVersion() {\n+           return 1;\n+       }\n+\n+       @Override\n+       public void onAfterCreate(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n+       }\n+\n+       @Override\n+       public void onAfterDestroy(Object context, Map<String, SimpleCustomProperty> configurationAttributes) {\n+       }\n+\n+       @Override\n+       public String createHashedPassword(String credential) {\n+           return credential;\n+       }\n+\n+       @Override\n+       public boolean compareHashedPasswords(String credential, String storedCredential) {\n+           return false;\n+       }\n+\n+   }\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "5",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/5/DummyDynamicPeristenceType.java\nindex 79cab2b3fe..b19ab92791 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/5/DummyDynamicPeristenceType.java\n@@ -2,7 +2,7 @@\n  * oxCore is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n  *\n  * Copyright (c) 2020, Gluu\n- */package org.gluu.model.custom.script.type.persistence;\n+ */                                                                                                                                               package org.gluu.model.custom.script.type.persistence;\n \n import java.util.Map;\n \n@@ -15,7 +15,7 @@ import org.gluu.model.custom.script.model.CustomScript;\n  */\n public class DummyDynamicPeristenceType implements PersistenceType {\n \n-\t@Override\n+    @Override\n \tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n \t\treturn true;\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "5",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/5/DummyDynamicPeristenceType.java\nindex 79cab2b3fe..d63900bd17 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/5/DummyDynamicPeristenceType.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_three_grams/5/DummyDynamicPeristenceType.java\n@@ -2,7 +2,7 @@\n  * oxCore is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n  *\n  * Copyright (c) 2020, Gluu\n- */package org.gluu.model.custom.script.type.persistence;\n+ */                                                                                                                                               package org.gluu.model.custom.script.type.persistence;\n \n import java.util.Map;\n \n@@ -15,7 +15,7 @@ import org.gluu.model.custom.script.model.CustomScript;\n  */\n public class DummyDynamicPeristenceType implements PersistenceType {\n \n-\t@Override\n+@ Override\n \tpublic boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n \t\treturn true;\n \t}\n",
            "diff_size": 2
        }
    ]
}