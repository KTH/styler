{
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "65",
                "column": "5",
                "severity": "warning",
                "message": "'{' at column 5 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "    @Override\n    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception\n    {\n        final boolean isReadOnly = config.isReadOnly();\n\n        //This will not throw any exception even if the connection failed",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/errored/1/27/MongoDbBackendFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/styler/27/MongoDbBackendFactory.java\nindex e1e3450d12..5b5d5baae5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/errored/1/27/MongoDbBackendFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/styler/27/MongoDbBackendFactory.java\n@@ -61,8 +61,7 @@ public class MongoDbBackendFactory extends AbstractBackendFactory<MongoDbConfig>\n \n     @Nonnull\n     @Override\n-    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception\n-    {\n+    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception {\n         final boolean isReadOnly = config.isReadOnly();\n \n         //This will not throw any exception even if the connection failed\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "65",
                    "column": "5",
                    "severity": "warning",
                    "message": "'{' at column 5 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/errored/1/27/MongoDbBackendFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/naturalize/27/MongoDbBackendFactory.java\nindex e1e3450d12..56d7862319 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/errored/1/27/MongoDbBackendFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/naturalize/27/MongoDbBackendFactory.java\n@@ -61,8 +61,7 @@ public class MongoDbBackendFactory extends AbstractBackendFactory<MongoDbConfig>\n \n     @Nonnull\n     @Override\n-    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception\n-    {\n+    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception {\n         final boolean isReadOnly = config.isReadOnly();\n \n         //This will not throw any exception even if the connection failed\n@@ -71,7 +70,6 @@ public class MongoDbBackendFactory extends AbstractBackendFactory<MongoDbConfig>\n         MongoDatabase database = client.getDatabase(config.getDatabaseName());\n \n         return createMapper(config.getMapping(), config, client, database);\n-\n     }\n \n     /**\n@@ -85,4 +83,4 @@ public class MongoDbBackendFactory extends AbstractBackendFactory<MongoDbConfig>\n          */\n         static final BackendFactory INSTANCE = new MongoDbBackendFactory();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/errored/1/27/MongoDbBackendFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/styler_random/27/MongoDbBackendFactory.java\nindex e1e3450d12..5b5d5baae5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/errored/1/27/MongoDbBackendFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/atlanmod-NeoEMF/styler_random/27/MongoDbBackendFactory.java\n@@ -61,8 +61,7 @@ public class MongoDbBackendFactory extends AbstractBackendFactory<MongoDbConfig>\n \n     @Nonnull\n     @Override\n-    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception\n-    {\n+    protected Backend createRemoteBackend(URL url, MongoDbConfig config) throws Exception {\n         final boolean isReadOnly = config.isReadOnly();\n \n         //This will not throw any exception even if the connection failed\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "65",
                    "column": "5",
                    "severity": "warning",
                    "message": "'{' at column 5 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}