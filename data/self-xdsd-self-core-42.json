{
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "81",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public InvoicedTasks ofInvoice(final int invoiceId) {\n        if(this.invoiceId == invoiceId) {\n            return this;\n        }\n        throw new IllegalStateException(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/42/InvoiceTasks.java\nindex 0c73fea92e..dbb7249fbc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler/42/InvoiceTasks.java\n@@ -78,7 +78,7 @@ public final class InvoiceTasks implements InvoicedTasks {\n \n     @Override\n     public InvoicedTasks ofInvoice(final int invoiceId) {\n-        if(this.invoiceId == invoiceId) {\n+        if (this.invoiceId == invoiceId) {\n             return this;\n         }\n         throw new IllegalStateException(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "68",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/42/InvoiceTasks.java\nindex 0c73fea92e..d6729f6d07 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/intellij/42/InvoiceTasks.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.contracts.invoices;\n \n import com.selfxdsd.api.InvoicedTask;\n@@ -32,6 +33,7 @@ import java.util.stream.Stream;\n \n /**\n  * Invoiced tasks belonging to an Invoice.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.7\n@@ -62,9 +64,9 @@ public final class InvoiceTasks implements InvoicedTasks {\n      * Ctor.\n      *\n      * @param invoiceId ID of the Invoice to which these\n-     *  InvoiceTasks belong.\n-     * @param tasks Supplier of the InvoicedTask Stream.\n-     * @param storage Storage.\n+     *                  InvoiceTasks belong.\n+     * @param tasks     Supplier of the InvoicedTask Stream.\n+     * @param storage   Storage.\n      */\n     public InvoiceTasks(\n         final int invoiceId,\n@@ -78,12 +80,12 @@ public final class InvoiceTasks implements InvoicedTasks {\n \n     @Override\n     public InvoicedTasks ofInvoice(final int invoiceId) {\n-        if(this.invoiceId == invoiceId) {\n+        if (this.invoiceId == invoiceId) {\n             return this;\n         }\n         throw new IllegalStateException(\n             \"Already seeing the tasks invoiced with Invoice #\" + this.invoiceId\n-          + \", you cannot see other InvoicedTasks here.\"\n+                + \", you cannot see other InvoicedTasks here.\"\n         );\n     }\n \n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "81",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/42/InvoiceTasks.java\nindex 0c73fea92e..193a7a9ff7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/naturalize/42/InvoiceTasks.java\n@@ -82,13 +82,11 @@ public final class InvoiceTasks implements InvoicedTasks {\n             return this;\n         }\n         throw new IllegalStateException(\n-            \"Already seeing the tasks invoiced with Invoice #\" + this.invoiceId\n-          + \", you cannot see other InvoicedTasks here.\"\n-        );\n+            \"Already seeing the tasks invoiced with Invoice #\" + this.invoiceId + \", you cannot see other InvoicedTasks here.\");\n     }\n \n     @Override\n     public Iterator<InvoicedTask> iterator() {\n         return this.tasks.get().iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "89",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 39, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/42/InvoiceTasks.java\nindex 0c73fea92e..b007126707 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/codebuff/42/InvoiceTasks.java\n@@ -25,7 +25,6 @@ package com.selfxdsd.core.contracts.invoices;\n import com.selfxdsd.api.InvoicedTask;\n import com.selfxdsd.api.InvoicedTasks;\n import com.selfxdsd.api.storage.Storage;\n-\n import java.util.Iterator;\n import java.util.function.Supplier;\n import java.util.stream.Stream;\n@@ -36,16 +35,22 @@ import java.util.stream.Stream;\n  * @version $Id$\n  * @since 0.0.7\n  */\n+\n+\n public final class InvoiceTasks implements InvoicedTasks {\n \n     /**\n      * ID of the Invoice to which these InvoicedTasks belong.\n      */\n+\n+\n     private final int invoiceId;\n \n     /**\n      * Storage context.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n@@ -56,6 +61,8 @@ public final class InvoiceTasks implements InvoicedTasks {\n      * In order to \"reuse\" them, since streams are one time use only,\n      * we wrap the stream in a supplier, .\n      */\n+\n+\n     private final Supplier<Stream<InvoicedTask>> tasks;\n \n     /**\n@@ -66,10 +73,11 @@ public final class InvoiceTasks implements InvoicedTasks {\n      * @param tasks Supplier of the InvoicedTask Stream.\n      * @param storage Storage.\n      */\n+\n+\n     public InvoiceTasks(\n         final int invoiceId,\n-        final Supplier<Stream<InvoicedTask>> tasks,\n-        final Storage storage\n+        final Supplier<Stream<InvoicedTask>> tasks, final Storage storage\n     ) {\n         this.invoiceId = invoiceId;\n         this.storage = storage;\n@@ -78,17 +86,15 @@ public final class InvoiceTasks implements InvoicedTasks {\n \n     @Override\n     public InvoicedTasks ofInvoice(final int invoiceId) {\n-        if(this.invoiceId == invoiceId) {\n-            return this;\n-        }\n+        if(this.invoiceId== invoiceId) {\n+                                           return this;\n+                                       }\n         throw new IllegalStateException(\n-            \"Already seeing the tasks invoiced with Invoice #\" + this.invoiceId\n-          + \", you cannot see other InvoicedTasks here.\"\n-        );\n+            \"Already seeing the tasks invoiced with Invoice #\" + this.invoiceId + \", you cannot see other InvoicedTasks here.\");\n     }\n \n     @Override\n     public Iterator<InvoicedTask> iterator() {\n         return this.tasks.get().iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/42/InvoiceTasks.java\nindex 0c73fea92e..dbb7249fbc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/errored/1/42/InvoiceTasks.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/self-xdsd-self-core/styler_random/42/InvoiceTasks.java\n@@ -78,7 +78,7 @@ public final class InvoiceTasks implements InvoicedTasks {\n \n     @Override\n     public InvoicedTasks ofInvoice(final int invoiceId) {\n-        if(this.invoiceId == invoiceId) {\n+        if (this.invoiceId == invoiceId) {\n             return this;\n         }\n         throw new IllegalStateException(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "81",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}