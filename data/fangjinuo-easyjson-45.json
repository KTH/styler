{
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "69",
                "column": "29",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public int getFeatures(){\n        int featureValues = defaultFeatureValues;\n        for (Feature feature : features) {\n            featureValues |= feature.getMask();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/45/FastJsonParserBuilder.java\nindex bab11e02fe..50ea79de7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler/45/FastJsonParserBuilder.java\n@@ -66,7 +66,7 @@ public class FastJsonParserBuilder {\n         return new DefaultJSONParser(jsonString, config, getFeatures());\n     }\n \n-    public int getFeatures(){\n+    public int getFeatures() {\n         int featureValues = defaultFeatureValues;\n         for (Feature feature : features) {\n             featureValues |= feature.getMask();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/45/FastJsonParserBuilder.java\nindex bab11e02fe..50ea79de7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/intellij/45/FastJsonParserBuilder.java\n@@ -66,7 +66,7 @@ public class FastJsonParserBuilder {\n         return new DefaultJSONParser(jsonString, config, getFeatures());\n     }\n \n-    public int getFeatures(){\n+    public int getFeatures() {\n         int featureValues = defaultFeatureValues;\n         for (Feature feature : features) {\n             featureValues |= feature.getMask();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/45/FastJsonParserBuilder.java\nindex bab11e02fe..48328f6299 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/naturalize/45/FastJsonParserBuilder.java\n@@ -66,11 +66,11 @@ public class FastJsonParserBuilder {\n         return new DefaultJSONParser(jsonString, config, getFeatures());\n     }\n \n-    public int getFeatures(){\n+    public int getFeatures() {\n         int featureValues = defaultFeatureValues;\n         for (Feature feature : features) {\n             featureValues |= feature.getMask();\n         }\n         return featureValues;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/45/FastJsonParserBuilder.java\nindex bab11e02fe..373da6ebfd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/codebuff/45/FastJsonParserBuilder.java\n@@ -20,7 +20,6 @@ import com.alibaba.fastjson.parser.Feature;\n import com.alibaba.fastjson.parser.ParserConfig;\n import com.alibaba.fastjson.parser.deserializer.ObjectDeserializer;\n import com.jn.easyjson.fastjson.codec.Typed;\n-\n import java.lang.reflect.Type;\n import java.util.ArrayList;\n import java.util.List;\n@@ -30,21 +29,25 @@ public class FastJsonParserBuilder {\n     private List<Feature> features = new ArrayList<Feature>();\n     private int defaultFeatureValues = JSON.DEFAULT_PARSER_FEATURE;\n \n+\n     public FastJsonParserBuilder config(ParserConfig config) {\n         this.config = config;\n         return this;\n     }\n \n+\n     public FastJsonParserBuilder defaultFeatureValues(int value) {\n         defaultFeatureValues = value;\n         return this;\n     }\n \n+\n     public FastJsonParserBuilder addFeature(Feature feature) {\n         this.features.add(feature);\n         return this;\n     }\n \n+\n     public FastJsonParserBuilder apply(ObjectDeserializer deserializer) {\n         if (deserializer instanceof Typed) {\n             List<Type> applyTo = ((Typed) deserializer).applyTo();\n@@ -57,20 +60,23 @@ public class FastJsonParserBuilder {\n         return this;\n     }\n \n+\n     public FastJsonParserBuilder apply(Type type, ObjectDeserializer deserializer) {\n         config.putDeserializer(type, deserializer);\n         return this;\n     }\n \n+\n     public DefaultJSONParser build(String jsonString) {\n         return new DefaultJSONParser(jsonString, config, getFeatures());\n     }\n \n-    public int getFeatures(){\n+\n+    public int getFeatures() {\n         int featureValues = defaultFeatureValues;\n         for (Feature feature : features) {\n             featureValues |= feature.getMask();\n         }\n         return featureValues;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/45/FastJsonParserBuilder.java\nindex bab11e02fe..50ea79de7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_random/45/FastJsonParserBuilder.java\n@@ -66,7 +66,7 @@ public class FastJsonParserBuilder {\n         return new DefaultJSONParser(jsonString, config, getFeatures());\n     }\n \n-    public int getFeatures(){\n+    public int getFeatures() {\n         int featureValues = defaultFeatureValues;\n         for (Feature feature : features) {\n             featureValues |= feature.getMask();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/45/FastJsonParserBuilder.java\nindex bab11e02fe..50ea79de7d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/errored/1/45/FastJsonParserBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/fangjinuo-easyjson/styler_three_grams/45/FastJsonParserBuilder.java\n@@ -66,7 +66,7 @@ public class FastJsonParserBuilder {\n         return new DefaultJSONParser(jsonString, config, getFeatures());\n     }\n \n-    public int getFeatures(){\n+    public int getFeatures() {\n         int featureValues = defaultFeatureValues;\n         for (Feature feature : features) {\n             featureValues |= feature.getMask();\n",
            "diff_size": 1
        }
    ]
}