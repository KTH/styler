{
    "error_id": "277",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/277/PSAttemptRegisterEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/277/PSAttemptRegisterEvent.java\nindex b3fcdd1edb..f570f270b5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/277/PSAttemptRegisterEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/277/PSAttemptRegisterEvent.java\n@@ -23,24 +23,28 @@ import com.tencent.angel.ps.PSAttemptId;\n  * A ps attempt register to master.\n  */\n public class PSAttemptRegisterEvent extends PSAttemptEvent {\n-  /**the ps attempt location(ip and listening port)*/\n-  private final Location location;\n+    /**\n+     * the ps attempt location(ip and listening port)\n+     */\n+    private final Location location;\n \n-  /**\n-   * Create a PSAttemptRegisterEvent\n-   * @param psAttemptId ps attempt id\n-   * @param location location\n-   */\n-  public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n-    super(PSAttemptEventType.PA_REGISTER, psAttemptId);\n-    this.location = location;\n-  }\n+    /**\n+     * Create a PSAttemptRegisterEvent\n+     *\n+     * @param psAttemptId ps attempt id\n+     * @param location    location\n+     */\n+    public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n+        super(PSAttemptEventType.PA_REGISTER, psAttemptId);\n+        this.location = location;\n+    }\n \n-  /**\n-   * Get location\n-   * @return location\n-   */\n-  public Location getLocation() {\n-    return location;\n-  }\n+    /**\n+     * Get location\n+     *\n+     * @return location\n+     */\n+    public Location getLocation() {\n+        return location;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/277/PSAttemptRegisterEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/277/PSAttemptRegisterEvent.java\nindex b3fcdd1edb..7f4adc565a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/277/PSAttemptRegisterEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/277/PSAttemptRegisterEvent.java\n@@ -43,4 +43,4 @@ public class PSAttemptRegisterEvent extends PSAttemptEvent {\n   public Location getLocation() {\n     return location;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/277/PSAttemptRegisterEvent.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/277/PSAttemptRegisterEvent.java\nindex b3fcdd1edb..7994aef05b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/277/PSAttemptRegisterEvent.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/277/PSAttemptRegisterEvent.java\n@@ -22,25 +22,29 @@ import com.tencent.angel.ps.PSAttemptId;\n /**\n  * A ps attempt register to master.\n  */\n+\n public class PSAttemptRegisterEvent extends PSAttemptEvent {\n   /**the ps attempt location(ip and listening port)*/\n-  private final Location location;\n+    private final Location location;\n \n   /**\n    * Create a PSAttemptRegisterEvent\n    * @param psAttemptId ps attempt id\n    * @param location location\n    */\n-  public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n+\n+    public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n     super(PSAttemptEventType.PA_REGISTER, psAttemptId);\n     this.location = location;\n-  }\n+    }\n \n   /**\n    * Get location\n    * @return location\n    */\n-  public Location getLocation() {\n+\n+    public Location getLocation() {\n     return location;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}