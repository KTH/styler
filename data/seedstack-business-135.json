{
    "error_id": "135",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.domain;\n\nimport java.util.Optional;\nimport java.util.stream.Stream;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/135/Repository.java\nindex 6bdc31a108..8f6435e411 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/135/Repository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.util.Optional;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/135/Repository.java\nindex 6bdc31a108..909fd65873 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/135/Repository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.util.Optional;\n@@ -87,7 +88,7 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      *\n      * @param specification the specification.\n      * @return true if at least one aggregate satisfying the specification is present, false\n-     *         otherwise.\n+     * otherwise.\n      */\n     default boolean contains(Specification<A> specification) {\n         return count(specification) > 0;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "55",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 72.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 80.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 93.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 104.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 117.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 128.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 149.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 161.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "column": "79",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 169.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 7, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "column": "112",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "172",
                    "column": "138",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 14, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "column": "115",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "174",
                    "column": "141",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 185.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 197.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 213.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 7, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 7, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 7, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 226.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 234.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 241.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "243",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 248.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 255.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "warning",
                    "message": "'interface def ident' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "column": "20",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/135/Repository.java\nindex 6bdc31a108..561590fd57 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/135/Repository.java\n@@ -58,7 +58,7 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param aggregate the aggregate to add.\n      * @throws AggregateExistsException if the repository already contains the aggregate.\n      */\n-    void add(A aggregate) throws AggregateExistsException;\n+void add(A aggregate) throws AggregateExistsException ;\n \n     /**\n      * Finds all aggregates in the repository satisfying the given specification. Options can be\n@@ -69,7 +69,7 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @return a stream of aggregates.\n      * @see Option\n      */\n-    Stream<A> get(Specification<A> specification, Option... options);\n+Stream<A> get(Specification<A> specification, Option... options);\n \n     /**\n      * Gets an aggregate identified by its identifier.\n@@ -77,9 +77,9 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param id the aggregate identifier.\n      * @return an optional of the corresponding aggregate.\n      */\n-    default Optional<A> get(I id) {\n-        return get(new IdentitySpecification<>(id)).findFirst();\n-    }\n+default Optional<A> get(I id) {\n+   return get(new IdentitySpecification<>(id)).findFirst();\n+}\n \n     /**\n      * Check if at least one aggregate satisfying the specified specification is present in the\n@@ -89,9 +89,10 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @return true if at least one aggregate satisfying the specification is present, false\n      *         otherwise.\n      */\n-    default boolean contains(Specification<A> specification) {\n-        return count(specification) > 0;\n-    }\n+\n+default boolean contains(Specification<A> specification) {\n+   return count(specification)> 0;\n+}\n \n     /**\n      * Checks that the aggregate identified by the specified identifier is present in the repository.\n@@ -99,9 +100,10 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param id the aggregate identifier.\n      * @return true if the aggregate is present, false otherwise.\n      */\n-    default boolean contains(I id) {\n-        return contains(new IdentitySpecification<>(id));\n-    }\n+\n+default boolean contains(I id) {\n+   return contains(new IdentitySpecification<>(id));\n+}\n \n     /**\n      * Checks that the specified aggregate is present in the repository. The check is only done on the\n@@ -111,9 +113,10 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param aggregate the aggregate identifier.\n      * @return true if the aggregate is present, false otherwise.\n      */\n-    default boolean contains(A aggregate) {\n-        return contains(aggregate.getId());\n-    }\n+\n+default boolean contains(A aggregate) {\n+   return contains(aggregate.getId());\n+}\n \n     /**\n      * Count the number of aggregates in the repository satisfying the given specification.\n@@ -121,18 +124,20 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param specification the specification aggregates must satisfy.\n      * @return the number of aggregates in the repository satisfying the specification.\n      */\n-    default long count(Specification<A> specification) {\n-        return get(specification).count();\n-    }\n+\n+default long count(Specification<A> specification) {\n+   return get(specification).count();\n+}\n \n     /**\n      * Returns the number of aggregates in the repository.\n      *\n      * @return the number of aggregates in the repository.\n      */\n-    default long size() {\n-        return count(Specification.any());\n-    }\n+\n+default long size() {\n+   return count(Specification.any());\n+}\n \n     /**\n      * Return true if the repository is empty (i.e. contains no aggregate) and false otherwise (i.e.\n@@ -140,9 +145,10 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      *\n      * @return true if repository is empty, false otherwise.\n      */\n-    default boolean isEmpty() {\n-        return size() == 0L;\n-    }\n+\n+default boolean isEmpty() {\n+   return size() == 0L;\n+}\n \n     /**\n      * Removes all aggregates in the repository satisfying the given specification.\n@@ -151,7 +157,8 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @return the number of aggregates removed from the repository.\n      * @throws AggregateNotFoundException if the repository doesn't contain the aggregate.\n      */\n-    long remove(Specification<A> specification) throws AggregateNotFoundException;\n+\n+long remove(Specification<A> specification) throws AggregateNotFoundException ;\n \n     /**\n      * Removes the existing aggregate identified with the specified identifier.\n@@ -159,18 +166,14 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param id the identifier of the aggregate to remove.\n      * @throws AggregateNotFoundException if the repository doesn't contain the aggregate.\n      */\n-    default void remove(I id) throws AggregateNotFoundException {\n-        long removedCount = remove(new IdentitySpecification<>(id));\n-        if (removedCount == 0L) {\n-            throw new AggregateNotFoundException(\n-                    \"Non-existent aggregate \" + getAggregateRootClass().getSimpleName() + \" identified with \" + id\n-                            + \" cannot be removed\");\n-        } else if (removedCount > 1L) {\n-            throw new IllegalStateException(\n-                    \"More than one aggregate \" + getAggregateRootClass().getSimpleName() + \" identified with \" + id\n-                            + \" have been removed\");\n-        }\n-    }\n+default void remove(I id) throws AggregateNotFoundException {\n+   long removedCount = remove(new IdentitySpecification<>(id));\n+   if (removedCount == 0L) {\n+       throw new AggregateNotFoundException(\"Non-existent aggregate \" + getAggregateRootClass().getSimpleName()+ \" identified with \" + id+ \" cannot be removed\");\n+   } else if (removedCount > 1L) {\n+              throw new IllegalStateException(\"More than one aggregate \" + getAggregateRootClass().getSimpleName()+ \" identified with \" + id+ \" have been removed\");\n+          }\n+}\n \n     /**\n      * Removes the specified aggregate from the repository.\n@@ -178,9 +181,10 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @param aggregate the aggregate to remove.\n      * @throws AggregateNotFoundException if the repository doesn't contain the aggregate.\n      */\n-    default void remove(A aggregate) throws AggregateNotFoundException {\n-        remove(aggregate.getId());\n-    }\n+\n+default void remove(A aggregate) throws AggregateNotFoundException {\n+   remove(aggregate.getId());\n+}\n \n     /**\n      * Updates an existing aggregate with the specified instance.\n@@ -189,11 +193,12 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @return the update aggregate.\n      * @throws AggregateNotFoundException if the repository doesn't contain the aggregate.\n      */\n-    default A update(A aggregate) throws AggregateNotFoundException {\n-        remove(aggregate);\n-        add(aggregate);\n-        return aggregate;\n-    }\n+\n+default A update(A aggregate) throws AggregateNotFoundException {\n+   remove(aggregate);\n+   add(aggregate);\n+   return aggregate;\n+}\n \n     /**\n      * Adds an aggregate to the repository or updates it if it already exists. This operation can be useful in some\n@@ -204,49 +209,47 @@ public interface Repository<A extends AggregateRoot<I>, I> {\n      * @return the update aggregate.\n      * @throws AggregateNotFoundException if the repository doesn't contain the aggregate.\n      */\n-    default A addOrUpdate(A aggregate) {\n-        if (!contains(aggregate.getId())) {\n-            add(aggregate);\n-            return aggregate;\n-        } else {\n-            return update(aggregate);\n-        }\n-    }\n+\n+default A addOrUpdate(A aggregate) {\n+   if (! contains(aggregate.getId())) {\n+       add(aggregate);\n+       return aggregate;\n+   } else {\n+       return update(aggregate);\n+   }\n+}\n \n     /**\n      * Removes all aggregates from the repository.\n      */\n-    default void clear() {\n-        remove(Specification.any());\n-    }\n+\n+default void clear() {\n+   remove(Specification.any());\n+}\n \n     /**\n      * Returns the aggregate root class managed by the repository.\n      *\n      * @return the aggregate root class.\n-     */\n-    Class<A> getAggregateRootClass();\n+     */ Class<A> getAggregateRootClass();\n \n     /**\n      * Returns the aggregate root identifier class managed by the repository.\n      *\n      * @return the aggregate root identifier.\n      */\n-    Class<I> getIdentifierClass();\n+Class<I> getIdentifierClass();\n \n     /**\n      * Access to the specification builder.\n      *\n      * @return the specification builder.\n      */\n-    SpecificationBuilder getSpecificationBuilder();\n+SpecificationBuilder getSpecificationBuilder();\n \n     /**\n      * Marker interface for options that can be used to alter the results of some repository methods.\n      *\n      * @see #get(Specification, Option...)\n      */\n-    interface Option {\n-\n-    }\n-}\n\\ No newline at end of file\n+interface Option {}}\n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/135/Repository.java\nindex 6bdc31a108..8f6435e411 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/135/Repository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/135/Repository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.domain;\n \n import java.util.Optional;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}