{
    "error_id": "281",
    "information": {
        "errors": [
            {
                "line": "85",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  // RandomRule using getReachableServers & alive\n  // WeightedResponseTimeRule using getAllServers & alive\n  // To make all rules work only on \"how to choose a server from alive servers\", we do not rely on Robbin getReachableServers.\n  // We ensure getReachableServers & getAllServers work in the same way.\n  public List<Server> getAllServers() {\n    return serverList;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/281/LoadBalancer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/281/LoadBalancer.java\nindex 56db6ff3aa..a1fc983c46 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/281/LoadBalancer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/281/LoadBalancer.java\n@@ -26,7 +26,7 @@ import com.netflix.loadbalancer.LoadBalancerStats;\n import com.netflix.loadbalancer.Server;\n \n /**\n- *  Robbin LoadBalancer implementation. Only support IRule and basic operations.\n+ * Robbin LoadBalancer implementation. Only support IRule and basic operations.\n  */\n public class LoadBalancer extends AbstractLoadBalancer {\n   private List<Server> serverList = Collections.emptyList();\n@@ -38,7 +38,7 @@ public class LoadBalancer extends AbstractLoadBalancer {\n   private String microServiceName;\n \n   public LoadBalancer(IRule rule, String microServiceName,\n-      LoadBalancerStats stats) {\n+                      LoadBalancerStats stats) {\n     this.microServiceName = microServiceName;\n     this.rule = rule;\n     this.lbStats = stats;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/281/LoadBalancer.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/281/LoadBalancer.java\nindex 56db6ff3aa..d98fe9447c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/281/LoadBalancer.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/281/LoadBalancer.java\n@@ -101,4 +101,4 @@ public class LoadBalancer extends AbstractLoadBalancer {\n   public String getMicroServiceName() {\n     return microServiceName;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}