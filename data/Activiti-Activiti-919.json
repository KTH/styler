{
    "error_id": "919",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.export;\n\nimport javax.xml.stream.XMLStreamWriter;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/919/CollaborationExport.java\nindex 267fe95e9c..c4851b1396 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/919/CollaborationExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import javax.xml.stream.XMLStreamWriter;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/919/CollaborationExport.java\nindex 267fe95e9c..ebd7612e7a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/919/CollaborationExport.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import javax.xml.stream.XMLStreamWriter;\n@@ -22,41 +23,41 @@ import org.apache.commons.lang3.StringUtils;\n \n public class CollaborationExport implements BpmnXMLConstants {\n \n-  public static void writePools(BpmnModel model, XMLStreamWriter xtw) throws Exception {\n-    if (!model.getPools().isEmpty()) {\n-      xtw.writeStartElement(ELEMENT_COLLABORATION);\n-      xtw.writeAttribute(ATTRIBUTE_ID, \"Collaboration\");\n-      for (Pool pool : model.getPools()) {\n-        xtw.writeStartElement(ELEMENT_PARTICIPANT);\n-        xtw.writeAttribute(ATTRIBUTE_ID, pool.getId());\n-        if (StringUtils.isNotEmpty(pool.getName())) {\n-          xtw.writeAttribute(ATTRIBUTE_NAME, pool.getName());\n-        }\n-        if (StringUtils.isNotEmpty(pool.getProcessRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_PROCESS_REF, pool.getProcessRef());\n-        }\n-        xtw.writeEndElement();\n-      }\n+    public static void writePools(BpmnModel model, XMLStreamWriter xtw) throws Exception {\n+        if (!model.getPools().isEmpty()) {\n+            xtw.writeStartElement(ELEMENT_COLLABORATION);\n+            xtw.writeAttribute(ATTRIBUTE_ID, \"Collaboration\");\n+            for (Pool pool : model.getPools()) {\n+                xtw.writeStartElement(ELEMENT_PARTICIPANT);\n+                xtw.writeAttribute(ATTRIBUTE_ID, pool.getId());\n+                if (StringUtils.isNotEmpty(pool.getName())) {\n+                    xtw.writeAttribute(ATTRIBUTE_NAME, pool.getName());\n+                }\n+                if (StringUtils.isNotEmpty(pool.getProcessRef())) {\n+                    xtw.writeAttribute(ATTRIBUTE_PROCESS_REF, pool.getProcessRef());\n+                }\n+                xtw.writeEndElement();\n+            }\n \n-      for (MessageFlow messageFlow : model.getMessageFlows().values()) {\n-        xtw.writeStartElement(ELEMENT_MESSAGE_FLOW);\n-        xtw.writeAttribute(ATTRIBUTE_ID, messageFlow.getId());\n-        if (StringUtils.isNotEmpty(messageFlow.getName())) {\n-          xtw.writeAttribute(ATTRIBUTE_NAME, messageFlow.getName());\n-        }\n-        if (StringUtils.isNotEmpty(messageFlow.getSourceRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_FLOW_SOURCE_REF, messageFlow.getSourceRef());\n-        }\n-        if (StringUtils.isNotEmpty(messageFlow.getTargetRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_FLOW_TARGET_REF, messageFlow.getTargetRef());\n-        }\n-        if (StringUtils.isNotEmpty(messageFlow.getMessageRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_MESSAGE_REF, messageFlow.getMessageRef());\n-        }\n-        xtw.writeEndElement();\n-      }\n+            for (MessageFlow messageFlow : model.getMessageFlows().values()) {\n+                xtw.writeStartElement(ELEMENT_MESSAGE_FLOW);\n+                xtw.writeAttribute(ATTRIBUTE_ID, messageFlow.getId());\n+                if (StringUtils.isNotEmpty(messageFlow.getName())) {\n+                    xtw.writeAttribute(ATTRIBUTE_NAME, messageFlow.getName());\n+                }\n+                if (StringUtils.isNotEmpty(messageFlow.getSourceRef())) {\n+                    xtw.writeAttribute(ATTRIBUTE_FLOW_SOURCE_REF, messageFlow.getSourceRef());\n+                }\n+                if (StringUtils.isNotEmpty(messageFlow.getTargetRef())) {\n+                    xtw.writeAttribute(ATTRIBUTE_FLOW_TARGET_REF, messageFlow.getTargetRef());\n+                }\n+                if (StringUtils.isNotEmpty(messageFlow.getMessageRef())) {\n+                    xtw.writeAttribute(ATTRIBUTE_MESSAGE_REF, messageFlow.getMessageRef());\n+                }\n+                xtw.writeEndElement();\n+            }\n \n-      xtw.writeEndElement();\n+            xtw.writeEndElement();\n+        }\n     }\n-  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/919/CollaborationExport.java\nindex 267fe95e9c..23e57c4184 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/919/CollaborationExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import javax.xml.stream.XMLStreamWriter;\n@@ -59,4 +60,4 @@ public class CollaborationExport implements BpmnXMLConstants {\n       xtw.writeEndElement();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/919/CollaborationExport.java\nindex 267fe95e9c..60ac0866ff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/919/CollaborationExport.java\n@@ -13,50 +13,58 @@\n package org.activiti.bpmn.converter.export;\n \n import javax.xml.stream.XMLStreamWriter;\n-\n import org.activiti.bpmn.constants.BpmnXMLConstants;\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.bpmn.model.MessageFlow;\n import org.activiti.bpmn.model.Pool;\n import org.apache.commons.lang3.StringUtils;\n \n+\n public class CollaborationExport implements BpmnXMLConstants {\n \n-  public static void writePools(BpmnModel model, XMLStreamWriter xtw) throws Exception {\n+    public static void writePools(BpmnModel model, XMLStreamWriter xtw) throws Exception {\n     if (!model.getPools().isEmpty()) {\n-      xtw.writeStartElement(ELEMENT_COLLABORATION);\n-      xtw.writeAttribute(ATTRIBUTE_ID, \"Collaboration\");\n-      for (Pool pool : model.getPools()) {\n-        xtw.writeStartElement(ELEMENT_PARTICIPANT);\n-        xtw.writeAttribute(ATTRIBUTE_ID, pool.getId());\n-        if (StringUtils.isNotEmpty(pool.getName())) {\n-          xtw.writeAttribute(ATTRIBUTE_NAME, pool.getName());\n-        }\n-        if (StringUtils.isNotEmpty(pool.getProcessRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_PROCESS_REF, pool.getProcessRef());\n-        }\n-        xtw.writeEndElement();\n-      }\n+        xtw.writeStartElement(ELEMENT_COLLABORATION);\n+        xtw.writeAttribute(ATTRIBUTE_ID, \"Collaboration\");\n+        for (Pool pool : model.getPools()) {\n+            xtw.writeStartElement(ELEMENT_PARTICIPANT);\n+            xtw.writeAttribute(ATTRIBUTE_ID, pool.getId());\n+            if (StringUtils.isNotEmpty(pool.getName())) {\n+                xtw.writeAttribute(ATTRIBUTE_NAME, pool.getName());\n+            }\n \n-      for (MessageFlow messageFlow : model.getMessageFlows().values()) {\n-        xtw.writeStartElement(ELEMENT_MESSAGE_FLOW);\n-        xtw.writeAttribute(ATTRIBUTE_ID, messageFlow.getId());\n-        if (StringUtils.isNotEmpty(messageFlow.getName())) {\n-          xtw.writeAttribute(ATTRIBUTE_NAME, messageFlow.getName());\n-        }\n-        if (StringUtils.isNotEmpty(messageFlow.getSourceRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_FLOW_SOURCE_REF, messageFlow.getSourceRef());\n-        }\n-        if (StringUtils.isNotEmpty(messageFlow.getTargetRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_FLOW_TARGET_REF, messageFlow.getTargetRef());\n+            if (StringUtils.isNotEmpty(pool.getProcessRef())) {\n+                xtw.writeAttribute(ATTRIBUTE_PROCESS_REF,\n+                                   pool.getProcessRef());\n+            }\n+            xtw.writeEndElement();\n         }\n-        if (StringUtils.isNotEmpty(messageFlow.getMessageRef())) {\n-          xtw.writeAttribute(ATTRIBUTE_MESSAGE_REF, messageFlow.getMessageRef());\n+\n+        for (MessageFlow messageFlow : model.getMessageFlows().values()) {\n+            xtw.writeStartElement(ELEMENT_MESSAGE_FLOW);\n+            xtw.writeAttribute(ATTRIBUTE_ID, messageFlow.getId());\n+            if (StringUtils.isNotEmpty(messageFlow.getName())) {\n+                xtw.writeAttribute(ATTRIBUTE_NAME, messageFlow.getName());\n+            }\n+\n+            if (StringUtils.isNotEmpty(messageFlow.getSourceRef())) {\n+                xtw.writeAttribute(ATTRIBUTE_FLOW_SOURCE_REF,\n+                                   messageFlow.getSourceRef());\n+            }\n+\n+            if (StringUtils.isNotEmpty(messageFlow.getTargetRef())) {\n+                xtw.writeAttribute(ATTRIBUTE_FLOW_TARGET_REF,\n+                                   messageFlow.getTargetRef());\n+            }\n+\n+            if (StringUtils.isNotEmpty(messageFlow.getMessageRef())) {\n+                xtw.writeAttribute(ATTRIBUTE_MESSAGE_REF,\n+                                   messageFlow.getMessageRef());\n+            }\n+            xtw.writeEndElement();\n         }\n         xtw.writeEndElement();\n-      }\n-\n-      xtw.writeEndElement();\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/919/CollaborationExport.java\nindex 267fe95e9c..c4851b1396 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/919/CollaborationExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import javax.xml.stream.XMLStreamWriter;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/919/CollaborationExport.java\nindex 267fe95e9c..c4851b1396 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/919/CollaborationExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/919/CollaborationExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import javax.xml.stream.XMLStreamWriter;\n",
            "diff_size": 1
        }
    ]
}