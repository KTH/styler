{
    "error_id": "381",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/381/ValueBinaryRowFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/381/ValueBinaryRowFormat.java\nindex ac8353f044..2736ed098b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/381/ValueBinaryRowFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/381/ValueBinaryRowFormat.java\n@@ -27,71 +27,87 @@ import java.io.IOException;\n  * Binary format: values without index\n  */\n public class ValueBinaryRowFormat extends RowFormat {\n-  public ValueBinaryRowFormat(Configuration conf) {\n-    super(conf);\n-  }\n-\n-  @Override public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeFloat(element.value);\n-  }\n-\n-  @Override public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeDouble(element.value);\n-  }\n-\n-  @Override public void save(IntIntElement element, DataOutputStream out) throws IOException {\n-    out.writeInt(element.value);\n-  }\n-\n-  @Override public void save(IntLongElement element, DataOutputStream out) throws IOException {\n-    out.writeLong(element.value);\n-  }\n-\n-  @Override public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n-    out.writeFloat(element.value);\n-  }\n-\n-  @Override public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n-    out.writeDouble(element.value);\n-  }\n-\n-  @Override public void save(LongIntElement element, DataOutputStream out) throws IOException {\n-    out.writeInt(element.value);\n-  }\n-\n-  @Override public void save(LongLongElement element, DataOutputStream out) throws IOException {\n-    out.writeLong(element.value);\n-  }\n-\n-  @Override public void load(IntFloatElement element, DataInputStream in) throws IOException {\n-    element.value = in.readFloat();\n-  }\n-\n-  @Override public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n-    element.value = in.readDouble();\n-  }\n-\n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n-    element.value = in.readInt();\n-  }\n-\n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n-    element.value = in.readLong();\n-  }\n-\n-  @Override public void load(LongFloatElement element, DataInputStream in) throws IOException {\n-    element.value = in.readFloat();\n-  }\n-\n-  @Override public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n-    element.value = in.readDouble();\n-  }\n-\n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n-    element.value = in.readInt();\n-  }\n-\n-  @Override public void load(LongLongElement element, DataInputStream in) throws IOException {\n-    element.value = in.readLong();\n-  }\n+    public ValueBinaryRowFormat(Configuration conf) {\n+        super(conf);\n+    }\n+\n+    @Override\n+    public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n+        out.writeFloat(element.value);\n+    }\n+\n+    @Override\n+    public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n+        out.writeDouble(element.value);\n+    }\n+\n+    @Override\n+    public void save(IntIntElement element, DataOutputStream out) throws IOException {\n+        out.writeInt(element.value);\n+    }\n+\n+    @Override\n+    public void save(IntLongElement element, DataOutputStream out) throws IOException {\n+        out.writeLong(element.value);\n+    }\n+\n+    @Override\n+    public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n+        out.writeFloat(element.value);\n+    }\n+\n+    @Override\n+    public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n+        out.writeDouble(element.value);\n+    }\n+\n+    @Override\n+    public void save(LongIntElement element, DataOutputStream out) throws IOException {\n+        out.writeInt(element.value);\n+    }\n+\n+    @Override\n+    public void save(LongLongElement element, DataOutputStream out) throws IOException {\n+        out.writeLong(element.value);\n+    }\n+\n+    @Override\n+    public void load(IntFloatElement element, DataInputStream in) throws IOException {\n+        element.value = in.readFloat();\n+    }\n+\n+    @Override\n+    public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n+        element.value = in.readDouble();\n+    }\n+\n+    @Override\n+    public void load(IntIntElement element, DataInputStream in) throws IOException {\n+        element.value = in.readInt();\n+    }\n+\n+    @Override\n+    public void load(IntLongElement element, DataInputStream in) throws IOException {\n+        element.value = in.readLong();\n+    }\n+\n+    @Override\n+    public void load(LongFloatElement element, DataInputStream in) throws IOException {\n+        element.value = in.readFloat();\n+    }\n+\n+    @Override\n+    public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n+        element.value = in.readDouble();\n+    }\n+\n+    @Override\n+    public void load(LongIntElement element, DataInputStream in) throws IOException {\n+        element.value = in.readInt();\n+    }\n+\n+    @Override\n+    public void load(LongLongElement element, DataInputStream in) throws IOException {\n+        element.value = in.readLong();\n+    }\n }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/381/ValueBinaryRowFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/381/ValueBinaryRowFormat.java\nindex ac8353f044..f64f7ed994 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/381/ValueBinaryRowFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/381/ValueBinaryRowFormat.java\n@@ -31,67 +31,83 @@ public class ValueBinaryRowFormat extends RowFormat {\n     super(conf);\n   }\n \n-  @Override public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(IntIntElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(IntIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(IntLongElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(IntLongElement element, DataOutputStream out) throws IOException {\n     out.writeLong(element.value);\n   }\n \n-  @Override public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n     out.writeFloat(element.value);\n   }\n \n-  @Override public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeDouble(element.value);\n   }\n \n-  @Override public void save(LongIntElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(LongIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.value);\n   }\n \n-  @Override public void save(LongLongElement element, DataOutputStream out) throws IOException {\n+  @Override\n+public void save(LongLongElement element, DataOutputStream out) throws IOException {\n     out.writeLong(element.value);\n   }\n \n-  @Override public void load(IntFloatElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntFloatElement element, DataInputStream in) throws IOException {\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntIntElement element, DataInputStream in) throws IOException {\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(IntLongElement element, DataInputStream in) throws IOException {\n     element.value = in.readLong();\n   }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongFloatElement element, DataInputStream in) throws IOException {\n     element.value = in.readFloat();\n   }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n     element.value = in.readDouble();\n   }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongIntElement element, DataInputStream in) throws IOException {\n     element.value = in.readInt();\n   }\n \n-  @Override public void load(LongLongElement element, DataInputStream in) throws IOException {\n+  @Override\n+public void load(LongLongElement element, DataInputStream in) throws IOException {\n     element.value = in.readLong();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/381/ValueBinaryRowFormat.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/381/ValueBinaryRowFormat.java\nindex ac8353f044..1b41dfa843 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/381/ValueBinaryRowFormat.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/381/ValueBinaryRowFormat.java\n@@ -18,7 +18,6 @@\n package com.tencent.angel.model.output.format;\n \n import org.apache.hadoop.conf.Configuration;\n-\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -26,72 +25,90 @@ import java.io.IOException;\n /**\n  * Binary format: values without index\n  */\n+\n public class ValueBinaryRowFormat extends RowFormat {\n-  public ValueBinaryRowFormat(Configuration conf) {\n+\n+    public ValueBinaryRowFormat(Configuration conf) {\n     super(conf);\n-  }\n+    }\n \n-  @Override public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(IntFloatElement element, DataOutputStream out) throws IOException {\n     out.writeFloat(element.value);\n-  }\n+    }\n \n-  @Override public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(IntDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeDouble(element.value);\n-  }\n+    }\n \n-  @Override public void save(IntIntElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(IntIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.value);\n-  }\n+    }\n \n-  @Override public void save(IntLongElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(IntLongElement element, DataOutputStream out) throws IOException {\n     out.writeLong(element.value);\n-  }\n+    }\n \n-  @Override public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(LongFloatElement element, DataOutputStream out) throws IOException {\n     out.writeFloat(element.value);\n-  }\n+    }\n \n-  @Override public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(LongDoubleElement element, DataOutputStream out) throws IOException {\n     out.writeDouble(element.value);\n-  }\n+    }\n \n-  @Override public void save(LongIntElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(LongIntElement element, DataOutputStream out) throws IOException {\n     out.writeInt(element.value);\n-  }\n+    }\n \n-  @Override public void save(LongLongElement element, DataOutputStream out) throws IOException {\n+    @Override\n+    public void save(LongLongElement element, DataOutputStream out) throws IOException {\n     out.writeLong(element.value);\n-  }\n+    }\n \n-  @Override public void load(IntFloatElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntFloatElement element, DataInputStream in) throws IOException {\n     element.value = in.readFloat();\n-  }\n+    }\n \n-  @Override public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntDoubleElement element, DataInputStream in) throws IOException {\n     element.value = in.readDouble();\n-  }\n+    }\n \n-  @Override public void load(IntIntElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntIntElement element, DataInputStream in) throws IOException {\n     element.value = in.readInt();\n-  }\n+    }\n \n-  @Override public void load(IntLongElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(IntLongElement element, DataInputStream in) throws IOException {\n     element.value = in.readLong();\n-  }\n+    }\n \n-  @Override public void load(LongFloatElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongFloatElement element, DataInputStream in) throws IOException {\n     element.value = in.readFloat();\n-  }\n+    }\n \n-  @Override public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongDoubleElement element, DataInputStream in) throws IOException {\n     element.value = in.readDouble();\n-  }\n+    }\n \n-  @Override public void load(LongIntElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongIntElement element, DataInputStream in) throws IOException {\n     element.value = in.readInt();\n-  }\n+    }\n \n-  @Override public void load(LongLongElement element, DataInputStream in) throws IOException {\n+    @Override\n+    public void load(LongLongElement element, DataInputStream in) throws IOException {\n     element.value = in.readLong();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}