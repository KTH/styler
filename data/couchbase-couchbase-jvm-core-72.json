{
    "error_id": "72",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 165).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public abstract class AbstractOnDemandService extends AbstractDynamicService {\n\n    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/72/AbstractOnDemandService.java\nindex 03c6177475..05110166ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler/72/AbstractOnDemandService.java\n@@ -35,50 +35,52 @@ import rx.functions.Action1;\n  */\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n-    }\n+    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int\n+        port,CoreContext ctx, EndpointFactory endpointFactory) {\n+         super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n+     }\n \n-    @Override\n-    protected void dispatch(final CouchbaseRequest request) {\n-        final Endpoint endpoint = createEndpoint();\n-        endpointStates().register(endpoint, endpoint);\n+     @Override\n+     protected void dispatch(final CouchbaseRequest request) {\n+         final Endpoint endpoint = createEndpoint();\n+         endpointStates().register(endpoint, endpoint);\n \n-        endpoint\n-            .connect()\n-            .subscribe(new Subscriber<LifecycleState>() {\n-                @Override\n-                public void onCompleted() {\n-                }\n+         endpoint\n+             .connect()\n+             .subscribe(new Subscriber<LifecycleState>() {\n+                 @Override\n+                 public void onCompleted() {\n+                 }\n \n-                @Override\n-                public void onError(Throwable e) {\n-                    request.observable().onError(e);\n-                }\n+                 @Override\n+                 public void onError(Throwable e) {\n+                     request.observable().onError(e);\n+                 }\n \n-                @Override\n-                public void onNext(LifecycleState lifecycleState) {\n-                    if (lifecycleState == LifecycleState.DISCONNECTED) {\n-                        request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n-                    }\n-                }\n-            });\n+                 @Override\n+                 public void onNext(LifecycleState lifecycleState) {\n+                     if (lifecycleState == LifecycleState.DISCONNECTED) {\n+                         request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n+                     }\n+                 }\n+             });\n \n-        whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpoint.send(request);\n-                endpoint.send(SignalFlush.INSTANCE);\n-            }\n-        });\n+         whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n+             @Override\n+             public void call(LifecycleState lifecycleState) {\n+                 endpoint.send(request);\n+                 endpoint.send(SignalFlush.INSTANCE);\n+             }\n+         });\n \n-        whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpointStates().deregister(endpoint);\n-            }\n-        });\n-    }\n+         whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n+             @Override\n+             public void call(LifecycleState lifecycleState) {\n+                 endpointStates().deregister(endpoint);\n+             }\n+         });\n+     }\n \n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/72/AbstractOnDemandService.java\nindex 03c6177475..044373b4d8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/intellij/72/AbstractOnDemandService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.service;\n \n import com.couchbase.client.core.CoreContext;\n@@ -35,7 +36,8 @@ import rx.functions.Action1;\n  */\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n+    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port,\n+                                      CoreContext ctx, EndpointFactory endpointFactory) {\n         super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/72/AbstractOnDemandService.java\nindex 03c6177475..9da7e742ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/naturalize/72/AbstractOnDemandService.java\n@@ -43,9 +43,7 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n     protected void dispatch(final CouchbaseRequest request) {\n         final Endpoint endpoint = createEndpoint();\n         endpointStates().register(endpoint, endpoint);\n-\n-        endpoint\n-            .connect()\n+endpoint.connect()\n             .subscribe(new Subscriber<LifecycleState>() {\n                 @Override\n                 public void onCompleted() {\n@@ -81,4 +79,4 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 34, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 30, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 34, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 38, expected level should be one of the following: 20, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 34, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 30, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 21, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 25, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 25, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 21, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 21, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 25, expected level should be one of the following: 16, 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 21, expected level should be one of the following: 12, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/72/AbstractOnDemandService.java\nindex 03c6177475..e9fd3bf8cf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/codebuff/72/AbstractOnDemandService.java\n@@ -33,6 +33,8 @@ import rx.functions.Action1;\n  * @author Michael Nitschinger\n  * @since 1.1.0\n  */\n+\n+\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n     protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n@@ -43,42 +45,36 @@ public abstract class AbstractOnDemandService extends AbstractDynamicService {\n     protected void dispatch(final CouchbaseRequest request) {\n         final Endpoint endpoint = createEndpoint();\n         endpointStates().register(endpoint, endpoint);\n+        endpoint.connect().subscribe(new Subscriber<LifecycleState>() {\n+                              @Override\n+                              public void onCompleted() {\n \n-        endpoint\n-            .connect()\n-            .subscribe(new Subscriber<LifecycleState>() {\n-                @Override\n-                public void onCompleted() {\n-                }\n+                              }\n \n-                @Override\n-                public void onError(Throwable e) {\n-                    request.observable().onError(e);\n-                }\n+                              @Override\n+                              public void onError(Throwable e) {\n+                                  request.observable().onError(e);\n+                              }\n \n-                @Override\n-                public void onNext(LifecycleState lifecycleState) {\n-                    if (lifecycleState == LifecycleState.DISCONNECTED) {\n-                        request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n-                    }\n-                }\n+                              @Override\n+                              public void onNext(LifecycleState lifecycleState) {\n+                                  if (lifecycleState == LifecycleState.DISCONNECTED) {\n+                                      request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n+                                  }\n+                              }\n             });\n-\n         whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpoint.send(request);\n-                endpoint.send(SignalFlush.INSTANCE);\n-            }\n+                     @Override\n+                     public void call(LifecycleState lifecycleState) {\n+                         endpoint.send(request);\n+                         endpoint.send(SignalFlush.INSTANCE);\n+                     }\n         });\n-\n         whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpointStates().deregister(endpoint);\n-            }\n+                     @Override\n+                     public void call(LifecycleState lifecycleState) {\n+                         endpointStates().deregister(endpoint);\n+                     }\n         });\n     }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 9, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/72/AbstractOnDemandService.java\nindex 03c6177475..e40b0f5959 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_random/72/AbstractOnDemandService.java\n@@ -33,52 +33,52 @@ import rx.functions.Action1;\n  * @author Michael Nitschinger\n  * @since 1.1.0\n  */\n-public abstract class AbstractOnDemandService extends AbstractDynamicService {\n+public abstract class AbstractOnDemandService extends AbstractDynamicService { protected\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n-    }\n+    AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n+     super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n+ }\n \n-    @Override\n-    protected void dispatch(final CouchbaseRequest request) {\n-        final Endpoint endpoint = createEndpoint();\n-        endpointStates().register(endpoint, endpoint);\n+ @Override\n+ protected void dispatch(final CouchbaseRequest request) {\n+     final Endpoint endpoint = createEndpoint();\n+     endpointStates().register(endpoint, endpoint);\n \n-        endpoint\n-            .connect()\n-            .subscribe(new Subscriber<LifecycleState>() {\n-                @Override\n-                public void onCompleted() {\n-                }\n+     endpoint\n+         .connect()\n+         .subscribe(new Subscriber<LifecycleState>() {\n+             @Override\n+             public void onCompleted() {\n+             }\n \n-                @Override\n-                public void onError(Throwable e) {\n-                    request.observable().onError(e);\n-                }\n+             @Override\n+             public void onError(Throwable e) {\n+                 request.observable().onError(e);\n+             }\n \n-                @Override\n-                public void onNext(LifecycleState lifecycleState) {\n-                    if (lifecycleState == LifecycleState.DISCONNECTED) {\n-                        request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n-                    }\n-                }\n-            });\n+             @Override\n+             public void onNext(LifecycleState lifecycleState) {\n+                 if (lifecycleState == LifecycleState.DISCONNECTED) {\n+                     request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n+                 }\n+             }\n+         });\n \n-        whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpoint.send(request);\n-                endpoint.send(SignalFlush.INSTANCE);\n-            }\n-        });\n+     whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n+         @Override\n+         public void call(LifecycleState lifecycleState) {\n+             endpoint.send(request);\n+             endpoint.send(SignalFlush.INSTANCE);\n+         }\n+     });\n \n-        whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpointStates().deregister(endpoint);\n-            }\n-        });\n-    }\n+     whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n+         @Override\n+         public void call(LifecycleState lifecycleState) {\n+             endpointStates().deregister(endpoint);\n+         }\n+     });\n+ }\n \n \n }\n",
            "diff_size": 39
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/72/AbstractOnDemandService.java\nindex 03c6177475..05110166ca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/errored/1/72/AbstractOnDemandService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/couchbase-couchbase-jvm-core/styler_three_grams/72/AbstractOnDemandService.java\n@@ -35,50 +35,52 @@ import rx.functions.Action1;\n  */\n public abstract class AbstractOnDemandService extends AbstractDynamicService {\n \n-    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n-    }\n+    protected AbstractOnDemandService(String hostname, String bucket, String username, String password, int\n+        port,CoreContext ctx, EndpointFactory endpointFactory) {\n+         super(hostname, bucket, username, password, port, ctx, 0, endpointFactory);\n+     }\n \n-    @Override\n-    protected void dispatch(final CouchbaseRequest request) {\n-        final Endpoint endpoint = createEndpoint();\n-        endpointStates().register(endpoint, endpoint);\n+     @Override\n+     protected void dispatch(final CouchbaseRequest request) {\n+         final Endpoint endpoint = createEndpoint();\n+         endpointStates().register(endpoint, endpoint);\n \n-        endpoint\n-            .connect()\n-            .subscribe(new Subscriber<LifecycleState>() {\n-                @Override\n-                public void onCompleted() {\n-                }\n+         endpoint\n+             .connect()\n+             .subscribe(new Subscriber<LifecycleState>() {\n+                 @Override\n+                 public void onCompleted() {\n+                 }\n \n-                @Override\n-                public void onError(Throwable e) {\n-                    request.observable().onError(e);\n-                }\n+                 @Override\n+                 public void onError(Throwable e) {\n+                     request.observable().onError(e);\n+                 }\n \n-                @Override\n-                public void onNext(LifecycleState lifecycleState) {\n-                    if (lifecycleState == LifecycleState.DISCONNECTED) {\n-                        request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n-                    }\n-                }\n-            });\n+                 @Override\n+                 public void onNext(LifecycleState lifecycleState) {\n+                     if (lifecycleState == LifecycleState.DISCONNECTED) {\n+                         request.observable().onError(new CouchbaseException(\"Could not connect endpoint.\"));\n+                     }\n+                 }\n+             });\n \n-        whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpoint.send(request);\n-                endpoint.send(SignalFlush.INSTANCE);\n-            }\n-        });\n+         whenState(endpoint, LifecycleState.CONNECTED, new Action1<LifecycleState>() {\n+             @Override\n+             public void call(LifecycleState lifecycleState) {\n+                 endpoint.send(request);\n+                 endpoint.send(SignalFlush.INSTANCE);\n+             }\n+         });\n \n-        whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n-            @Override\n-            public void call(LifecycleState lifecycleState) {\n-                endpointStates().deregister(endpoint);\n-            }\n-        });\n-    }\n+         whenState(endpoint, LifecycleState.DISCONNECTED, new Action1<LifecycleState>() {\n+             @Override\n+             public void call(LifecycleState lifecycleState) {\n+                 endpointStates().deregister(endpoint);\n+             }\n+         });\n+     }\n \n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 41
        }
    ]
}