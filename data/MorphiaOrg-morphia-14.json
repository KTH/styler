{
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "138",
                "column": "13",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n        for (Convention convention : getConventions()) {\n            if(convention instanceof MorphiaConvention) {\n                ((MorphiaConvention) convention).apply(datastore, this);\n            } else {\n                convention.apply(this);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/14/MorphiaModelBuilder.java\nindex 11a583327a..44f1f902a8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/14/MorphiaModelBuilder.java\n@@ -135,7 +135,7 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n         idPropertyModel = null;\n \n         for (Convention convention : getConventions()) {\n-            if(convention instanceof MorphiaConvention) {\n+            if (convention instanceof MorphiaConvention) {\n                 ((MorphiaConvention) convention).apply(datastore, this);\n             } else {\n                 convention.apply(this);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/14/MorphiaModelBuilder.java\nindex 11a583327a..007148d545 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/14/MorphiaModelBuilder.java\n@@ -55,10 +55,10 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n \n     static <T> FieldModelBuilder<T> createFieldModelBuilder(final FieldMetadata<T> fieldMetadata) {\n         FieldModelBuilder<T> fieldModelBuilder = FieldModel.<T>builder()\n-                                                     .field(fieldMetadata.getField())\n-                                                     .fieldName(fieldMetadata.getName())\n-                                                     .typeData(fieldMetadata.getTypeData())\n-                                                     .annotations(fieldMetadata.getAnnotations());\n+            .field(fieldMetadata.getField())\n+            .fieldName(fieldMetadata.getName())\n+            .typeData(fieldMetadata.getTypeData())\n+            .annotations(fieldMetadata.getAnnotations());\n \n         if (fieldMetadata.getTypeParameters() != null) {\n             specializeFieldModelBuilder(fieldModelBuilder, fieldMetadata);\n@@ -135,7 +135,7 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n         idPropertyModel = null;\n \n         for (Convention convention : getConventions()) {\n-            if(convention instanceof MorphiaConvention) {\n+            if (convention instanceof MorphiaConvention) {\n                 ((MorphiaConvention) convention).apply(datastore, this);\n             } else {\n                 convention.apply(this);\n@@ -163,10 +163,10 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n         }\n \n         fieldModels = fieldModelBuilders.stream()\n-                                        .map(FieldModelBuilder::build)\n-                                        .collect(Collectors.toList());\n+            .map(FieldModelBuilder::build)\n+            .collect(Collectors.toList());\n         annotationsMap = getAnnotations().stream()\n-                                         .collect(groupingBy(a -> (Class<? extends Annotation>) a.annotationType()));\n+            .collect(groupingBy(a -> (Class<? extends Annotation>) a.annotationType()));\n \n         return new MorphiaModel<>(this);\n     }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/14/MorphiaModelBuilder.java\nindex 11a583327a..7272451acc 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/14/MorphiaModelBuilder.java\n@@ -59,8 +59,7 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n                                                      .fieldName(fieldMetadata.getName())\n                                                      .typeData(fieldMetadata.getTypeData())\n                                                      .annotations(fieldMetadata.getAnnotations());\n-\n-        if (fieldMetadata.getTypeParameters() != null) {\n+if (fieldMetadata.getTypeParameters() != null) {\n             specializeFieldModelBuilder(fieldModelBuilder, fieldMetadata);\n         }\n \n@@ -135,7 +134,7 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n         idPropertyModel = null;\n \n         for (Convention convention : getConventions()) {\n-            if(convention instanceof MorphiaConvention) {\n+            if (convention instanceof MorphiaConvention) {\n                 ((MorphiaConvention) convention).apply(datastore, this);\n             } else {\n                 convention.apply(this);\n@@ -263,4 +262,4 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n             fieldModelBuilders.add(createFieldModelBuilder(fieldMetadata));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/14/MorphiaModelBuilder.java\nindex 11a583327a..44f1f902a8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/14/MorphiaModelBuilder.java\n@@ -135,7 +135,7 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n         idPropertyModel = null;\n \n         for (Convention convention : getConventions()) {\n-            if(convention instanceof MorphiaConvention) {\n+            if (convention instanceof MorphiaConvention) {\n                 ((MorphiaConvention) convention).apply(datastore, this);\n             } else {\n                 convention.apply(this);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "137",
                    "column": "56",
                    "severity": "error",
                    "message": "'{' at column 56 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "58",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/14/MorphiaModelBuilder.java\nindex 11a583327a..77c0cd005f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/14/MorphiaModelBuilder.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/14/MorphiaModelBuilder.java\n@@ -134,42 +134,41 @@ public class MorphiaModelBuilder<T> extends ClassModelBuilder<T> {\n     public MorphiaModel<T> build() {\n         idPropertyModel = null;\n \n-        for (Convention convention : getConventions()) {\n-            if(convention instanceof MorphiaConvention) {\n-                ((MorphiaConvention) convention).apply(datastore, this);\n-            } else {\n-                convention.apply(this);\n-            }\n+        for (Convention convention : getConventions()) { if(convention instanceof MorphiaConvention) {\n+            ((MorphiaConvention) convention).apply(datastore, this);\n+        } else {\n+            convention.apply(this);\n         }\n+    }\n \n-        if (useDiscriminator()) {\n-            Objects.requireNonNull(getDiscriminatorKey(), Sofia.notNull(\"discriminatorKey\"));\n-            Objects.requireNonNull(getDiscriminator(), Sofia.notNull(\"discriminator\"));\n-        }\n+    if (useDiscriminator()) {\n+        Objects.requireNonNull(getDiscriminatorKey(), Sofia.notNull(\"discriminatorKey\"));\n+        Objects.requireNonNull(getDiscriminator(), Sofia.notNull(\"discriminator\"));\n+    }\n \n-        for (PropertyModelBuilder<?> propertyModelBuilder : getPropertyModelBuilders()) {\n-            if (propertyModelBuilder.getName().equals(getIdPropertyName())) {\n-                propertyModelBuilder.readName(ID_PROPERTY_NAME).writeName(ID_PROPERTY_NAME);\n-            }\n+    for (PropertyModelBuilder<?> propertyModelBuilder : getPropertyModelBuilders()) {\n+        if (propertyModelBuilder.getName().equals(getIdPropertyName())) {\n+            propertyModelBuilder.readName(ID_PROPERTY_NAME).writeName(ID_PROPERTY_NAME);\n         }\n+    }\n \n-        propertyModels = new ArrayList<>();\n-        for (final PropertyModelBuilder<?> builder : getPropertyModelBuilders()) {\n-            PropertyModel<?> propertyModel = builder.build();\n-            if (propertyModel.getReadName().equals(ID_PROPERTY_NAME)) {\n-                idPropertyModel = propertyModel;\n-            }\n-            propertyModels.add(propertyModel);\n+    propertyModels = new ArrayList<>();\n+    for (final PropertyModelBuilder<?> builder : getPropertyModelBuilders()) {\n+        PropertyModel<?> propertyModel = builder.build();\n+        if (propertyModel.getReadName().equals(ID_PROPERTY_NAME)) {\n+            idPropertyModel = propertyModel;\n         }\n+        propertyModels.add(propertyModel);\n+    }\n \n-        fieldModels = fieldModelBuilders.stream()\n-                                        .map(FieldModelBuilder::build)\n-                                        .collect(Collectors.toList());\n-        annotationsMap = getAnnotations().stream()\n-                                         .collect(groupingBy(a -> (Class<? extends Annotation>) a.annotationType()));\n+    fieldModels = fieldModelBuilders.stream()\n+                                    .map(FieldModelBuilder::build)\n+                                    .collect(Collectors.toList());\n+    annotationsMap = getAnnotations().stream()\n+                                     .collect(groupingBy(a -> (Class<? extends Annotation>) a.annotationType()));\n \n-        return new MorphiaModel<>(this);\n-    }\n+    return new MorphiaModel<>(this);\n+}\n \n /*\n     @Override\n",
            "diff_size": 32
        }
    ]
}