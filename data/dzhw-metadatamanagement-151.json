{
    "error_id": "151",
    "information": {
        "errors": [
            {
                "line": "51",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @RestResource(exported = false)\n  List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentIdIn(Collection<String> instrumentIds);\n\n  @RestResource(exported = false)\n  List<QuestionSubDocumentProjection> findSubDocumentsByStudyId(String studyId);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/151/QuestionRepository.java\nindex 201c33b69c..175b14682d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler/151/QuestionRepository.java\n@@ -28,22 +28,22 @@ public interface QuestionRepository\n   @RestResource(exported = true)\n   List<Question> findByDataAcquisitionProjectId(\n       @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n-  \n+\n   @RestResource(exported = false)\n   List<IdAndVersionProjection> findIdsByInstrumentIdAndNumber(String instrumentId, String number);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamAllIdAndVersionsBy();\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByInstrumentId(String instrumentId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByIdIn(List<String> ids);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionAndInstrumentProjection> streamIdsByConceptIdsContaining(String conceptId);\n \n@@ -74,7 +74,7 @@ public interface QuestionRepository\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n       Collection<String> questionIds);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n       Collection<String> questionIds);\n",
            "diff_size": 5
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/151/QuestionRepository.java\nindex 201c33b69c..703ee28f12 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/151/QuestionRepository.java\n@@ -28,27 +28,28 @@ public interface QuestionRepository\n   @RestResource(exported = true)\n   List<Question> findByDataAcquisitionProjectId(\n       @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n-  \n+\n   @RestResource(exported = false)\n   List<IdAndVersionProjection> findIdsByInstrumentIdAndNumber(String instrumentId, String number);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamAllIdAndVersionsBy();\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByInstrumentId(String instrumentId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByIdIn(List<String> ids);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionAndInstrumentProjection> streamIdsByConceptIdsContaining(String conceptId);\n \n   @RestResource(exported = false)\n-  List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentIdIn(Collection<String> instrumentIds);\n+  List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentIdIn(\n+      Collection<String> instrumentIds);\n \n   @RestResource(exported = false)\n   List<QuestionSubDocumentProjection> findSubDocumentsByStudyId(String studyId);\n@@ -74,7 +75,7 @@ public interface QuestionRepository\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n       Collection<String> questionIds);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n       Collection<String> questionIds);\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/151/QuestionRepository.java\nindex 201c33b69c..c2679efb51 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/151/QuestionRepository.java\n@@ -81,4 +81,4 @@ public interface QuestionRepository\n \n   @RestResource(exported = false)\n   List<QuestionSubDocumentProjection> findSubDocumentsByConceptIdsContaining(String id);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/151/QuestionRepository.java\nindex 201c33b69c..664bad007b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/151/QuestionRepository.java\n@@ -3,11 +3,9 @@ package eu.dzhw.fdz.metadatamanagement.questionmanagement.repository;\n import java.util.Collection;\n import java.util.List;\n import java.util.stream.Stream;\n-\n import org.springframework.data.repository.query.Param;\n import org.springframework.data.rest.core.annotation.RepositoryRestResource;\n import org.springframework.data.rest.core.annotation.RestResource;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.common.repository.BaseRepository;\n import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.Question;\n@@ -18,67 +16,64 @@ import eu.dzhw.fdz.metadatamanagement.questionmanagement.domain.projections.Ques\n  * The Repository for {@link Question} domain object. The data will be insert with a REST API and\n  * save in a mongo db.\n  */\n+\n+\n @RepositoryRestResource(path = \"/questions\")\n public interface QuestionRepository\n     extends BaseRepository<Question, String> {\n \n-  @RestResource(exported = false)\n-  Stream<Question> streamByDataAcquisitionProjectId(String dataAcquisitionProjectId);\n-\n-  @RestResource(exported = true)\n-  List<Question> findByDataAcquisitionProjectId(\n-      @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n-  \n-  @RestResource(exported = false)\n-  List<IdAndVersionProjection> findIdsByInstrumentIdAndNumber(String instrumentId, String number);\n-\n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamAllIdAndVersionsBy();\n-  \n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByInstrumentId(String instrumentId);\n-  \n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByIdIn(List<String> ids);\n-\n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n-  \n-  @RestResource(exported = false)\n-  Stream<IdAndVersionAndInstrumentProjection> streamIdsByConceptIdsContaining(String conceptId);\n-\n-  @RestResource(exported = false)\n-  List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentIdIn(Collection<String> instrumentIds);\n-\n-  @RestResource(exported = false)\n-  List<QuestionSubDocumentProjection> findSubDocumentsByStudyId(String studyId);\n-\n-  @RestResource(exported = false)\n-  List<QuestionSubDocumentProjection> findSubDocumentsByIdIn(Collection<String> questionIds);\n-\n-  @RestResource(exported = false)\n-  List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentId(\n-      String instrumentId);\n-\n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByDataAcquisitionProjectId(String projectId);\n-\n-  @RestResource(exported = false)\n-  Stream<Question> streamByDataAcquisitionProjectIdAndShadowIsFalse(\n-      String dataAcquisitionProjectId);\n-\n-  @RestResource(exported = false)\n-  Stream<Question> streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(\n-      String oldProjectId);\n-\n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n-      Collection<String> questionIds);\n-  \n-  @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n-      Collection<String> questionIds);\n-\n-  @RestResource(exported = false)\n-  List<QuestionSubDocumentProjection> findSubDocumentsByConceptIdsContaining(String id);\n-}\n+        @RestResource(exported = false)\n+        Stream<Question> streamByDataAcquisitionProjectId(String dataAcquisitionProjectId);\n+\n+        @RestResource(exported = true)\n+        List<Question> findByDataAcquisitionProjectId(@Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n+\n+        @RestResource(exported = false)\n+        List<IdAndVersionProjection> findIdsByInstrumentIdAndNumber(String instrumentId,\n+            String number);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamAllIdAndVersionsBy();\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamIdsByInstrumentId(String instrumentId);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamIdsByIdIn(List<String> ids);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionAndInstrumentProjection> streamIdsByConceptIdsContaining(String conceptId);\n+\n+        @RestResource(exported = false)\n+        List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentIdIn(Collection<String> instrumentIds);\n+\n+        @RestResource(exported = false)\n+        List<QuestionSubDocumentProjection> findSubDocumentsByStudyId(String studyId);\n+\n+        @RestResource(exported = false)\n+        List<QuestionSubDocumentProjection> findSubDocumentsByIdIn(Collection<String> questionIds);\n+\n+        @RestResource(exported = false)\n+        List<QuestionSubDocumentProjection> findSubDocumentsByInstrumentId(String instrumentId);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamIdsByDataAcquisitionProjectId(String projectId);\n+\n+        @RestResource(exported = false)\n+        Stream<Question> streamByDataAcquisitionProjectIdAndShadowIsFalse(String dataAcquisitionProjectId);\n+\n+        @RestResource(exported = false)\n+        Stream<Question> streamByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(String oldProjectId);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(Collection<String> questionIds);\n+\n+        @RestResource(exported = false)\n+        Stream<IdAndVersionProjection> streamIdsByMasterIdIn(Collection<String> questionIds);\n+\n+        @RestResource(exported = false)\n+        List<QuestionSubDocumentProjection> findSubDocumentsByConceptIdsContaining(String id);\n+}\n\\ No newline at end of file\n",
            "diff_size": 64
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/151/QuestionRepository.java\nindex 201c33b69c..175b14682d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_random/151/QuestionRepository.java\n@@ -28,22 +28,22 @@ public interface QuestionRepository\n   @RestResource(exported = true)\n   List<Question> findByDataAcquisitionProjectId(\n       @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n-  \n+\n   @RestResource(exported = false)\n   List<IdAndVersionProjection> findIdsByInstrumentIdAndNumber(String instrumentId, String number);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamAllIdAndVersionsBy();\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByInstrumentId(String instrumentId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByIdIn(List<String> ids);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionAndInstrumentProjection> streamIdsByConceptIdsContaining(String conceptId);\n \n@@ -74,7 +74,7 @@ public interface QuestionRepository\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n       Collection<String> questionIds);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n       Collection<String> questionIds);\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/151/QuestionRepository.java\nindex 201c33b69c..175b14682d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/151/QuestionRepository.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/151/QuestionRepository.java\n@@ -28,22 +28,22 @@ public interface QuestionRepository\n   @RestResource(exported = true)\n   List<Question> findByDataAcquisitionProjectId(\n       @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n-  \n+\n   @RestResource(exported = false)\n   List<IdAndVersionProjection> findIdsByInstrumentIdAndNumber(String instrumentId, String number);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamAllIdAndVersionsBy();\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByInstrumentId(String instrumentId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByIdIn(List<String> ids);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionAndInstrumentProjection> streamIdsByConceptIdsContaining(String conceptId);\n \n@@ -74,7 +74,7 @@ public interface QuestionRepository\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n       Collection<String> questionIds);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n       Collection<String> questionIds);\n",
            "diff_size": 5
        }
    ]
}