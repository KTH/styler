{
    "error_id": "699",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/699/AngelController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/699/AngelController.java\nindex 4bb887728f..b9d708f0c0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/699/AngelController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/699/AngelController.java\n@@ -22,66 +22,66 @@ import com.tencent.angel.webapp.page.*;\n import org.apache.hadoop.yarn.webapp.Controller;\n \n public class AngelController extends Controller implements AngelParams {\n-  protected final AMContext appContext;\n+    protected final AMContext appContext;\n \n-  // The app injection is optional\n-  @Inject\n-  AngelController(AMContext appCtx, RequestContext ctx) {\n-    super(ctx);\n-    this.appContext = appCtx;\n-  }\n+    // The app injection is optional\n+    @Inject\n+    AngelController(AMContext appCtx, RequestContext ctx) {\n+        super(ctx);\n+        this.appContext = appCtx;\n+    }\n \n-  @Override\n-  public void index() {\n-    render(AngelAppPage.class);\n-    // renderText(\"hello world\");\n-  }\n+    @Override\n+    public void index() {\n+        render(AngelAppPage.class);\n+        // renderText(\"hello world\");\n+    }\n \n-  public void workerGroupsPage() {\n-    render(WorkerGroupsPage.class);\n-  }\n+    public void workerGroupsPage() {\n+        render(WorkerGroupsPage.class);\n+    }\n \n-  public void parameterServersPage() {\n-    render(ParameterServersPage.class);\n-  }\n+    public void parameterServersPage() {\n+        render(ParameterServersPage.class);\n+    }\n \n-  public void parameterServerThreadStackPage() {\n-    render(ParameterServerThreadStackPage.class);\n+    public void parameterServerThreadStackPage() {\n+        render(ParameterServerThreadStackPage.class);\n \n-  }\n+    }\n \n-  public void workerThreadStackPage() {\n-    render(WorkerThreadStackPage.class);\n+    public void workerThreadStackPage() {\n+        render(WorkerThreadStackPage.class);\n \n-  }\n+    }\n \n-  // user choose a workerGroupID from the workergroups page,\n-  // now we should change the AngelApp params and render the workergroup page;\n-  public void workerGroupPage() {\n-    render(WorkerGroupPage.class);\n-  }\n+    // user choose a workerGroupID from the workergroups page,\n+    // now we should change the AngelApp params and render the workergroup page;\n+    public void workerGroupPage() {\n+        render(WorkerGroupPage.class);\n+    }\n \n-  public void workerPage() {\n-    render(WorkerPage.class);\n-  }\n+    public void workerPage() {\n+        render(WorkerPage.class);\n+    }\n \n-  public void environmentPage() {\n-    render(EnvironmentPage.class);\n-  }\n+    public void environmentPage() {\n+        render(EnvironmentPage.class);\n+    }\n \n-  public void executorsPage() {\n-    render(ExecutorsPage.class);\n-  }\n+    public void executorsPage() {\n+        render(ExecutorsPage.class);\n+    }\n \n-  public void progressPage() {\n-    render(ProgressPage.class);\n-  }\n+    public void progressPage() {\n+        render(ProgressPage.class);\n+    }\n \n-  public void workerCounterPage() {\n-    render(WorkerCounterPage.class);\n-  }\n+    public void workerCounterPage() {\n+        render(WorkerCounterPage.class);\n+    }\n \n-  public void taskCountersPage() {\n-    render(TaskCountersPage.class);\n-  }\n+    public void taskCountersPage() {\n+        render(TaskCountersPage.class);\n+    }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/699/AngelController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/699/AngelController.java\nindex 4bb887728f..c14fb1e16f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/699/AngelController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/699/AngelController.java\n@@ -52,7 +52,6 @@ public class AngelController extends Controller implements AngelParams {\n \n   public void workerThreadStackPage() {\n     render(WorkerThreadStackPage.class);\n-\n   }\n \n   // user choose a workerGroupID from the workergroups page,\n@@ -84,4 +83,4 @@ public class AngelController extends Controller implements AngelParams {\n   public void taskCountersPage() {\n     render(TaskCountersPage.class);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 30.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/699/AngelController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/699/AngelController.java\nindex 4bb887728f..994aa0c2d8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/699/AngelController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/699/AngelController.java\n@@ -22,66 +22,67 @@ import com.tencent.angel.webapp.page.*;\n import org.apache.hadoop.yarn.webapp.Controller;\n \n public class AngelController extends Controller implements AngelParams {\n-  protected final AMContext appContext;\n+\n+    protected final AMContext appContext;\n \n   // The app injection is optional\n-  @Inject\n-  AngelController(AMContext appCtx, RequestContext ctx) {\n+\n+    @Inject\n+    AngelController(AMContext appCtx, RequestContext ctx) {\n     super(ctx);\n     this.appContext = appCtx;\n-  }\n+    }\n \n-  @Override\n-  public void index() {\n+    @Override\n+    public void index() {\n     render(AngelAppPage.class);\n     // renderText(\"hello world\");\n-  }\n+    }\n \n-  public void workerGroupsPage() {\n+    public void workerGroupsPage() {\n     render(WorkerGroupsPage.class);\n-  }\n+    }\n \n-  public void parameterServersPage() {\n+    public void parameterServersPage() {\n     render(ParameterServersPage.class);\n-  }\n+    }\n \n-  public void parameterServerThreadStackPage() {\n+    public void parameterServerThreadStackPage() {\n     render(ParameterServerThreadStackPage.class);\n+    }\n \n-  }\n-\n-  public void workerThreadStackPage() {\n+    public void workerThreadStackPage() {\n     render(WorkerThreadStackPage.class);\n-\n-  }\n+    }\n \n   // user choose a workerGroupID from the workergroups page,\n   // now we should change the AngelApp params and render the workergroup page;\n-  public void workerGroupPage() {\n+\n+    public void workerGroupPage() {\n     render(WorkerGroupPage.class);\n-  }\n+    }\n \n-  public void workerPage() {\n+    public void workerPage() {\n     render(WorkerPage.class);\n-  }\n+    }\n \n-  public void environmentPage() {\n+    public void environmentPage() {\n     render(EnvironmentPage.class);\n-  }\n+    }\n \n-  public void executorsPage() {\n+    public void executorsPage() {\n     render(ExecutorsPage.class);\n-  }\n+    }\n \n-  public void progressPage() {\n+    public void progressPage() {\n     render(ProgressPage.class);\n-  }\n+    }\n \n-  public void workerCounterPage() {\n+    public void workerCounterPage() {\n     render(WorkerCounterPage.class);\n-  }\n+    }\n \n-  public void taskCountersPage() {\n+    public void taskCountersPage() {\n     render(TaskCountersPage.class);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}