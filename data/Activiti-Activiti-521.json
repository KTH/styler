{
    "error_id": "521",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.calendar;\n\nimport java.util.Date;\nimport java.util.TimeZone;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/521/AdvancedSchedulerResolverWithoutTimeZone.java\nindex 79c2e1b5c8..87ffca9792 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/521/AdvancedSchedulerResolverWithoutTimeZone.java\n@@ -1,36 +1,37 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.engine.impl.calendar;\r\n-\r\n-import java.util.Date;\r\n-import java.util.TimeZone;\r\n-\r\n-import org.activiti.engine.api.internal.Internal;\r\n-import org.activiti.engine.runtime.ClockReader;\r\n-\r\n-/**\r\n- * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\r\n- *\r\n- */\r\n-@Internal\r\n-public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\r\n-\r\n-  @Override\r\n-  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\r\n-    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\r\n-  }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.engine.impl.calendar;\n+\n+import java.util.Date;\n+import java.util.TimeZone;\n+\n+import org.activiti.engine.api.internal.Internal;\n+import org.activiti.engine.runtime.ClockReader;\n+\n+/**\n+ * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\n+ *\n+ */\n+@Internal\n+public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\n+\n+  @Override\n+  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\n+    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\n+  }\n+\n+}\n",
            "diff_size": 37
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/521/AdvancedSchedulerResolverWithoutTimeZone.java\nindex 79c2e1b5c8..cc4061d85a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/521/AdvancedSchedulerResolverWithoutTimeZone.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.engine.impl.calendar;\r\n \r\n import java.util.Date;\r\n@@ -23,14 +24,13 @@ import org.activiti.engine.runtime.ClockReader;\n \r\n /**\r\n  * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\r\n- *\r\n  */\r\n @Internal\r\n public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\r\n \r\n-  @Override\r\n-  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\r\n-    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\r\n-  }\r\n+    @Override\r\n+    public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\r\n+        return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/521/AdvancedSchedulerResolverWithoutTimeZone.java\nindex 79c2e1b5c8..75bc5355f8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/521/AdvancedSchedulerResolverWithoutTimeZone.java\n@@ -13,24 +13,24 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.activiti.engine.impl.calendar;\r\n-\r\n-import java.util.Date;\r\n-import java.util.TimeZone;\r\n-\r\n-import org.activiti.engine.api.internal.Internal;\r\n+package org.activiti.engine.impl.calendar;\n+\n+import java.util.Date;\n+import java.util.TimeZone;\n+import org.activiti.engine.api.internal.Internal;\n import org.activiti.engine.runtime.ClockReader;\r\n \r\n /**\r\n  * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\r\n  *\r\n- */\r\n-@Internal\r\n-public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\r\n-\r\n-  @Override\r\n-  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\r\n-    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\r\n-  }\r\n-\r\n-}\r\n+ */\n+\n+@Internal\n+public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\n+\n+    @Override\n+    public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\n+        return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/521/AdvancedSchedulerResolverWithoutTimeZone.java\nindex 79c2e1b5c8..87ffca9792 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/521/AdvancedSchedulerResolverWithoutTimeZone.java\n@@ -1,36 +1,37 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.engine.impl.calendar;\r\n-\r\n-import java.util.Date;\r\n-import java.util.TimeZone;\r\n-\r\n-import org.activiti.engine.api.internal.Internal;\r\n-import org.activiti.engine.runtime.ClockReader;\r\n-\r\n-/**\r\n- * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\r\n- *\r\n- */\r\n-@Internal\r\n-public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\r\n-\r\n-  @Override\r\n-  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\r\n-    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\r\n-  }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.engine.impl.calendar;\n+\n+import java.util.Date;\n+import java.util.TimeZone;\n+\n+import org.activiti.engine.api.internal.Internal;\n+import org.activiti.engine.runtime.ClockReader;\n+\n+/**\n+ * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\n+ *\n+ */\n+@Internal\n+public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\n+\n+  @Override\n+  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\n+    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\n+  }\n+\n+}\n",
            "diff_size": 37
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/521/AdvancedSchedulerResolverWithoutTimeZone.java\nindex 79c2e1b5c8..87ffca9792 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/521/AdvancedSchedulerResolverWithoutTimeZone.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/521/AdvancedSchedulerResolverWithoutTimeZone.java\n@@ -1,36 +1,37 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.engine.impl.calendar;\r\n-\r\n-import java.util.Date;\r\n-import java.util.TimeZone;\r\n-\r\n-import org.activiti.engine.api.internal.Internal;\r\n-import org.activiti.engine.runtime.ClockReader;\r\n-\r\n-/**\r\n- * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\r\n- *\r\n- */\r\n-@Internal\r\n-public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\r\n-\r\n-  @Override\r\n-  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\r\n-    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\r\n-  }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.engine.impl.calendar;\n+\n+import java.util.Date;\n+import java.util.TimeZone;\n+\n+import org.activiti.engine.api.internal.Internal;\n+import org.activiti.engine.runtime.ClockReader;\n+\n+/**\n+ * Resolves a due date using the original Activiti due date resolver. This does not take into account the passed time zone.\n+ *\n+ */\n+@Internal\n+public class AdvancedSchedulerResolverWithoutTimeZone implements AdvancedSchedulerResolver {\n+\n+  @Override\n+  public Date resolve(String duedateDescription, ClockReader clockReader, TimeZone timeZone) {\n+    return new CycleBusinessCalendar(clockReader).resolveDuedate(duedateDescription);\n+  }\n+\n+}\n",
            "diff_size": 37
        }
    ]
}