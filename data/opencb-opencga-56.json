{
    "error_id": "56",
    "information": {
        "errors": [
            {
                "line": "86",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 141).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "//                }\n//                if (params.containsKey(outputParam.getName())) {\n//                    // Contextualise the file name in the uri where it should be written. /jobs/jobX/file.txt where /jobs/jobX = outDir and\n//                    // file.txt = outputFileName\n//                    Path name = Paths.get(params.get(outputParam.getName()));\n//                    String absolutePath = outDirPath.resolve(name.toFile().getName()).toString();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/56/ToolAnalysis.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/intellij/56/ToolAnalysis.java\nindex 1060b64316..812f8876c7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/56/ToolAnalysis.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/intellij/56/ToolAnalysis.java\n@@ -12,29 +12,30 @@ import org.slf4j.LoggerFactory;\n \n public class ToolAnalysis {\n \n-    private Logger logger = LoggerFactory.getLogger(ToolAnalysis.class);\n+  private Logger logger = LoggerFactory.getLogger(ToolAnalysis.class);\n \n-    private CatalogManager catalogManager;\n-    private ToolManager toolManager;\n+  private CatalogManager catalogManager;\n+  private ToolManager toolManager;\n \n-    private JobManager jobManager;\n-    private FileManager fileManager;\n+  private JobManager jobManager;\n+  private FileManager fileManager;\n \n-    public ToolAnalysis(Configuration configuration) throws CatalogException, AnalysisToolException {\n-        this.catalogManager = new CatalogManager(configuration);\n+  public ToolAnalysis(Configuration configuration) throws CatalogException, AnalysisToolException {\n+    this.catalogManager = new CatalogManager(configuration);\n //        this.toolManager = new ToolManager(Paths.get(configuration.getToolDir()));\n-        this.toolManager = null;\n+    this.toolManager = null;\n \n-        this.jobManager = catalogManager.getJobManager();\n-        this.fileManager = catalogManager.getFileManager();\n-    }\n+    this.jobManager = catalogManager.getJobManager();\n+    this.fileManager = catalogManager.getFileManager();\n+  }\n \n-    /**\n-     * Execute a command tool.\n-     * @param jobId jobId of the job containing the relevant information.\n-     * @param sessionId session id of the user that will execute the tool.\n-     */\n-    public void execute(long jobId, String sessionId) {\n+  /**\n+   * Execute a command tool.\n+   *\n+   * @param jobId     jobId of the job containing the relevant information.\n+   * @param sessionId session id of the user that will execute the tool.\n+   */\n+  public void execute(long jobId, String sessionId) {\n //        try {\n //            // We get the job information.\n //            Query query = new Query();\n@@ -97,6 +98,6 @@ public class ToolAnalysis {\n //        } catch (CatalogException | AnalysisToolException e) {\n //            logger.error(\"{}\", e.getMessage(), e);\n //        }\n-    }\n+  }\n \n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/56/ToolAnalysis.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/naturalize/56/ToolAnalysis.java\nindex 1060b64316..2c27316be0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/errored/1/56/ToolAnalysis.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/opencb-opencga/naturalize/56/ToolAnalysis.java\n@@ -99,4 +99,4 @@ public class ToolAnalysis {\n //        }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}