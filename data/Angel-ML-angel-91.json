{
    "error_id": "91",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/91/MatrixFactory.java\nindex c3e8fc944c..900a928a16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/91/MatrixFactory.java\n@@ -24,70 +24,70 @@ import com.tencent.angel.ml.matrix.RowType;\n \n public class MatrixFactory {\n \n-  public static Matrix createRBMatrix(RowType rowType, int rowNum, long colNum, long subDim) {\n-    switch (rowType) {\n-      case T_DOUBLE_DENSE:\n-      case T_DOUBLE_SPARSE:\n-        return MFactory.rbIntDoubleMatrix(rowNum, (int) colNum);\n+    public static Matrix createRBMatrix(RowType rowType, int rowNum, long colNum, long subDim) {\n+        switch (rowType) {\n+            case T_DOUBLE_DENSE:\n+            case T_DOUBLE_SPARSE:\n+                return MFactory.rbIntDoubleMatrix(rowNum, (int) colNum);\n \n-      case T_DOUBLE_DENSE_COMPONENT:\n-      case T_DOUBLE_SPARSE_COMPONENT:\n-        return MFactory.rbCompIntDoubleMatrix(rowNum, (int) colNum, (int) subDim);\n+            case T_DOUBLE_DENSE_COMPONENT:\n+            case T_DOUBLE_SPARSE_COMPONENT:\n+                return MFactory.rbCompIntDoubleMatrix(rowNum, (int) colNum, (int) subDim);\n \n-      case T_FLOAT_DENSE:\n-      case T_FLOAT_SPARSE:\n-        return MFactory.rbIntFloatMatrix(rowNum, (int) colNum);\n+            case T_FLOAT_DENSE:\n+            case T_FLOAT_SPARSE:\n+                return MFactory.rbIntFloatMatrix(rowNum, (int) colNum);\n \n-      case T_FLOAT_DENSE_COMPONENT:\n-      case T_FLOAT_SPARSE_COMPONENT:\n-        return MFactory.rbCompIntFloatMatrix(rowNum, (int) colNum, (int) subDim);\n+            case T_FLOAT_DENSE_COMPONENT:\n+            case T_FLOAT_SPARSE_COMPONENT:\n+                return MFactory.rbCompIntFloatMatrix(rowNum, (int) colNum, (int) subDim);\n \n-      case T_INT_DENSE:\n-      case T_INT_SPARSE:\n-        return MFactory.rbIntIntMatrix(rowNum, (int) colNum);\n+            case T_INT_DENSE:\n+            case T_INT_SPARSE:\n+                return MFactory.rbIntIntMatrix(rowNum, (int) colNum);\n \n-      case T_INT_DENSE_COMPONENT:\n-      case T_INT_SPARSE_COMPONENT:\n-        return MFactory.rbCompIntIntMatrix(rowNum, (int) colNum, (int) subDim);\n+            case T_INT_DENSE_COMPONENT:\n+            case T_INT_SPARSE_COMPONENT:\n+                return MFactory.rbCompIntIntMatrix(rowNum, (int) colNum, (int) subDim);\n \n-      case T_LONG_DENSE:\n-      case T_LONG_SPARSE:\n-        return MFactory.rbIntLongMatrix(rowNum, (int) colNum);\n+            case T_LONG_DENSE:\n+            case T_LONG_SPARSE:\n+                return MFactory.rbIntLongMatrix(rowNum, (int) colNum);\n \n-      case T_LONG_DENSE_COMPONENT:\n-      case T_LONG_SPARSE_COMPONENT:\n-        return MFactory.rbCompIntLongMatrix(rowNum, (int) colNum, (int) subDim);\n+            case T_LONG_DENSE_COMPONENT:\n+            case T_LONG_SPARSE_COMPONENT:\n+                return MFactory.rbCompIntLongMatrix(rowNum, (int) colNum, (int) subDim);\n \n-      case T_DOUBLE_SPARSE_LONGKEY:\n-        return MFactory.rbLongDoubleMatrix(rowNum, colNum);\n+            case T_DOUBLE_SPARSE_LONGKEY:\n+                return MFactory.rbLongDoubleMatrix(rowNum, colNum);\n \n-      case T_DOUBLE_DENSE_LONGKEY_COMPONENT:\n-      case T_DOUBLE_SPARSE_LONGKEY_COMPONENT:\n-        return MFactory.rbCompLongDoubleMatrix(rowNum, colNum, subDim);\n+            case T_DOUBLE_DENSE_LONGKEY_COMPONENT:\n+            case T_DOUBLE_SPARSE_LONGKEY_COMPONENT:\n+                return MFactory.rbCompLongDoubleMatrix(rowNum, colNum, subDim);\n \n-      case T_FLOAT_SPARSE_LONGKEY:\n-        return MFactory.rbLongFloatMatrix(rowNum, colNum);\n+            case T_FLOAT_SPARSE_LONGKEY:\n+                return MFactory.rbLongFloatMatrix(rowNum, colNum);\n \n-      case T_FLOAT_DENSE_LONGKEY_COMPONENT:\n-      case T_FLOAT_SPARSE_LONGKEY_COMPONENT:\n-        return MFactory.rbCompLongFloatMatrix(rowNum, colNum, subDim);\n+            case T_FLOAT_DENSE_LONGKEY_COMPONENT:\n+            case T_FLOAT_SPARSE_LONGKEY_COMPONENT:\n+                return MFactory.rbCompLongFloatMatrix(rowNum, colNum, subDim);\n \n-      case T_INT_SPARSE_LONGKEY:\n-        return MFactory.rbLongIntMatrix(rowNum, colNum);\n+            case T_INT_SPARSE_LONGKEY:\n+                return MFactory.rbLongIntMatrix(rowNum, colNum);\n \n-      case T_INT_SPARSE_LONGKEY_COMPONENT:\n-      case T_INT_DENSE_LONGKEY_COMPONENT:\n-        return MFactory.rbCompLongIntMatrix(rowNum, colNum, subDim);\n+            case T_INT_SPARSE_LONGKEY_COMPONENT:\n+            case T_INT_DENSE_LONGKEY_COMPONENT:\n+                return MFactory.rbCompLongIntMatrix(rowNum, colNum, subDim);\n \n-      case T_LONG_SPARSE_LONGKEY:\n-        return MFactory.rbLongLongMatrix(rowNum, colNum);\n+            case T_LONG_SPARSE_LONGKEY:\n+                return MFactory.rbLongLongMatrix(rowNum, colNum);\n \n-      case T_LONG_SPARSE_LONGKEY_COMPONENT:\n-      case T_LONG_DENSE_LONGKEY_COMPONENT:\n-        return MFactory.rbCompLongLongMatrix(rowNum, colNum, subDim);\n+            case T_LONG_SPARSE_LONGKEY_COMPONENT:\n+            case T_LONG_DENSE_LONGKEY_COMPONENT:\n+                return MFactory.rbCompLongLongMatrix(rowNum, colNum, subDim);\n \n-      default:\n-        return null;\n+            default:\n+                return null;\n+        }\n     }\n-  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/91/MatrixFactory.java\nindex c3e8fc944c..2258730808 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/91/MatrixFactory.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.ml.math2.MFactory;\n@@ -29,65 +28,49 @@ public class MatrixFactory {\n       case T_DOUBLE_DENSE:\n       case T_DOUBLE_SPARSE:\n         return MFactory.rbIntDoubleMatrix(rowNum, (int) colNum);\n-\n-      case T_DOUBLE_DENSE_COMPONENT:\n+  case T_DOUBLE_DENSE_COMPONENT:\n       case T_DOUBLE_SPARSE_COMPONENT:\n         return MFactory.rbCompIntDoubleMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_FLOAT_DENSE:\n+  case T_FLOAT_DENSE:\n       case T_FLOAT_SPARSE:\n         return MFactory.rbIntFloatMatrix(rowNum, (int) colNum);\n-\n-      case T_FLOAT_DENSE_COMPONENT:\n+  case T_FLOAT_DENSE_COMPONENT:\n       case T_FLOAT_SPARSE_COMPONENT:\n         return MFactory.rbCompIntFloatMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_INT_DENSE:\n+  case T_INT_DENSE:\n       case T_INT_SPARSE:\n         return MFactory.rbIntIntMatrix(rowNum, (int) colNum);\n-\n-      case T_INT_DENSE_COMPONENT:\n+  case T_INT_DENSE_COMPONENT:\n       case T_INT_SPARSE_COMPONENT:\n         return MFactory.rbCompIntIntMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_LONG_DENSE:\n+  case T_LONG_DENSE:\n       case T_LONG_SPARSE:\n         return MFactory.rbIntLongMatrix(rowNum, (int) colNum);\n-\n-      case T_LONG_DENSE_COMPONENT:\n+  case T_LONG_DENSE_COMPONENT:\n       case T_LONG_SPARSE_COMPONENT:\n         return MFactory.rbCompIntLongMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_DOUBLE_SPARSE_LONGKEY:\n+  case T_DOUBLE_SPARSE_LONGKEY:\n         return MFactory.rbLongDoubleMatrix(rowNum, colNum);\n-\n-      case T_DOUBLE_DENSE_LONGKEY_COMPONENT:\n+  case T_DOUBLE_DENSE_LONGKEY_COMPONENT:\n       case T_DOUBLE_SPARSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongDoubleMatrix(rowNum, colNum, subDim);\n-\n-      case T_FLOAT_SPARSE_LONGKEY:\n+  case T_FLOAT_SPARSE_LONGKEY:\n         return MFactory.rbLongFloatMatrix(rowNum, colNum);\n-\n-      case T_FLOAT_DENSE_LONGKEY_COMPONENT:\n+  case T_FLOAT_DENSE_LONGKEY_COMPONENT:\n       case T_FLOAT_SPARSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongFloatMatrix(rowNum, colNum, subDim);\n-\n-      case T_INT_SPARSE_LONGKEY:\n+  case T_INT_SPARSE_LONGKEY:\n         return MFactory.rbLongIntMatrix(rowNum, colNum);\n-\n-      case T_INT_SPARSE_LONGKEY_COMPONENT:\n+  case T_INT_SPARSE_LONGKEY_COMPONENT:\n       case T_INT_DENSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongIntMatrix(rowNum, colNum, subDim);\n-\n-      case T_LONG_SPARSE_LONGKEY:\n+  case T_LONG_SPARSE_LONGKEY:\n         return MFactory.rbLongLongMatrix(rowNum, colNum);\n-\n-      case T_LONG_SPARSE_LONGKEY_COMPONENT:\n+  case T_LONG_SPARSE_LONGKEY_COMPONENT:\n       case T_LONG_DENSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongLongMatrix(rowNum, colNum, subDim);\n-\n-      default:\n+  default:\n         return null;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/91/MatrixFactory.java\nindex c3e8fc944c..cf1ba9f1a0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/91/MatrixFactory.java\n@@ -24,70 +24,55 @@ import com.tencent.angel.ml.matrix.RowType;\n \n public class MatrixFactory {\n \n-  public static Matrix createRBMatrix(RowType rowType, int rowNum, long colNum, long subDim) {\n+    public static Matrix createRBMatrix(RowType rowType, int rowNum, long colNum, long subDim) {\n     switch (rowType) {\n-      case T_DOUBLE_DENSE:\n-      case T_DOUBLE_SPARSE:\n+        case T_DOUBLE_DENSE:\n+        case T_DOUBLE_SPARSE:\n         return MFactory.rbIntDoubleMatrix(rowNum, (int) colNum);\n-\n-      case T_DOUBLE_DENSE_COMPONENT:\n-      case T_DOUBLE_SPARSE_COMPONENT:\n+        case T_DOUBLE_DENSE_COMPONENT:\n+        case T_DOUBLE_SPARSE_COMPONENT:\n         return MFactory.rbCompIntDoubleMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_FLOAT_DENSE:\n-      case T_FLOAT_SPARSE:\n+        case T_FLOAT_DENSE:\n+        case T_FLOAT_SPARSE:\n         return MFactory.rbIntFloatMatrix(rowNum, (int) colNum);\n-\n-      case T_FLOAT_DENSE_COMPONENT:\n-      case T_FLOAT_SPARSE_COMPONENT:\n+        case T_FLOAT_DENSE_COMPONENT:\n+        case T_FLOAT_SPARSE_COMPONENT:\n         return MFactory.rbCompIntFloatMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_INT_DENSE:\n-      case T_INT_SPARSE:\n+        case T_INT_DENSE:\n+        case T_INT_SPARSE:\n         return MFactory.rbIntIntMatrix(rowNum, (int) colNum);\n-\n-      case T_INT_DENSE_COMPONENT:\n-      case T_INT_SPARSE_COMPONENT:\n+        case T_INT_DENSE_COMPONENT:\n+        case T_INT_SPARSE_COMPONENT:\n         return MFactory.rbCompIntIntMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_LONG_DENSE:\n-      case T_LONG_SPARSE:\n+        case T_LONG_DENSE:\n+        case T_LONG_SPARSE:\n         return MFactory.rbIntLongMatrix(rowNum, (int) colNum);\n-\n-      case T_LONG_DENSE_COMPONENT:\n-      case T_LONG_SPARSE_COMPONENT:\n+        case T_LONG_DENSE_COMPONENT:\n+        case T_LONG_SPARSE_COMPONENT:\n         return MFactory.rbCompIntLongMatrix(rowNum, (int) colNum, (int) subDim);\n-\n-      case T_DOUBLE_SPARSE_LONGKEY:\n+        case T_DOUBLE_SPARSE_LONGKEY:\n         return MFactory.rbLongDoubleMatrix(rowNum, colNum);\n-\n-      case T_DOUBLE_DENSE_LONGKEY_COMPONENT:\n-      case T_DOUBLE_SPARSE_LONGKEY_COMPONENT:\n+        case T_DOUBLE_DENSE_LONGKEY_COMPONENT:\n+        case T_DOUBLE_SPARSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongDoubleMatrix(rowNum, colNum, subDim);\n-\n-      case T_FLOAT_SPARSE_LONGKEY:\n+        case T_FLOAT_SPARSE_LONGKEY:\n         return MFactory.rbLongFloatMatrix(rowNum, colNum);\n-\n-      case T_FLOAT_DENSE_LONGKEY_COMPONENT:\n-      case T_FLOAT_SPARSE_LONGKEY_COMPONENT:\n+        case T_FLOAT_DENSE_LONGKEY_COMPONENT:\n+        case T_FLOAT_SPARSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongFloatMatrix(rowNum, colNum, subDim);\n-\n-      case T_INT_SPARSE_LONGKEY:\n+        case T_INT_SPARSE_LONGKEY:\n         return MFactory.rbLongIntMatrix(rowNum, colNum);\n-\n-      case T_INT_SPARSE_LONGKEY_COMPONENT:\n-      case T_INT_DENSE_LONGKEY_COMPONENT:\n+        case T_INT_SPARSE_LONGKEY_COMPONENT:\n+        case T_INT_DENSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongIntMatrix(rowNum, colNum, subDim);\n-\n-      case T_LONG_SPARSE_LONGKEY:\n+        case T_LONG_SPARSE_LONGKEY:\n         return MFactory.rbLongLongMatrix(rowNum, colNum);\n-\n-      case T_LONG_SPARSE_LONGKEY_COMPONENT:\n-      case T_LONG_DENSE_LONGKEY_COMPONENT:\n+        case T_LONG_SPARSE_LONGKEY_COMPONENT:\n+        case T_LONG_DENSE_LONGKEY_COMPONENT:\n         return MFactory.rbCompLongLongMatrix(rowNum, colNum, subDim);\n-\n-      default:\n+        default:\n         return null;\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/91/MatrixFactory.java\nindex c3e8fc944c..8b65ea8ab5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/91/MatrixFactory.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/91/MatrixFactory.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.ml.math2.MFactory;\n",
            "diff_size": 1
        }
    ]
}