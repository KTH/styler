{
    "error_id": "289",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/289/TAbstractVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/289/TAbstractVector.java\nindex 113c5937eb..6dc66b0393 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/289/TAbstractVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/289/TAbstractVector.java\n@@ -23,124 +23,123 @@ import com.tencent.angel.ml.matrix.RowType;\n  */\n public abstract class TAbstractVector extends TUpdate {\n \n-  /**\n-   * The Row id.\n-   */\n-  protected int rowId;\n-  /**\n-   * The Matrix id.\n-   */\n-  protected int matrixId;\n-  /**\n-   * The Clock.\n-   */\n-  protected int clock;\n-  /**\n-   * The Dimension.\n-   */\n-  protected int dim;\n-\n-  /**\n-   * Default construction.\n-   */\n-  public TAbstractVector() {\n-    this.rowId = -1;\n-    this.matrixId = -1;\n-    this.clock = -1;\n-    this.dim = -1;\n-  }\n-\n-  /**\n-   * Create a new vector by other.\n-   *\n-   * @param other the other\n-   */\n-  public TAbstractVector(TAbstractVector other) {\n-    this.rowId = other.getRowId();\n-    this.matrixId = other.getMatrixId();\n-    this.clock = other.getClock();\n-    this.dim = other.getDimension();\n-  }\n-\n-  /**\n-   * Gets sparsity factor.\n-   *\n-   * @return Return the sparsity of vector\n-   */\n-  public abstract double sparsity();\n-\n-  /**\n-   * Gets type of Vector.\n-   *\n-   * @return the type\n-   */\n-  public abstract RowType getType();\n-\n-  /**\n-   * Gets dimension,the represented length of vector\n-   *\n-   * @return the dimension\n-   */\n-  public int getDimension() {\n-    return dim;\n-  }\n-\n-  /**\n-   * Gets row id.\n-   *\n-   * @return the row id\n-   */\n-  public int getRowId() {\n-    return rowId;\n-  }\n-\n-  @Override\n-  public int getMatrixId() {\n-    return matrixId;\n-  }\n-\n-  /**\n-   * Gets clock.\n-   *\n-   * @return the clock\n-   */\n-  public int getClock() {\n-    return clock;\n-  }\n-\n-  /**\n-   * Sets row id.\n-   *\n-   * @param rowId the row id\n-   * @return the row id\n-   */\n-  public TAbstractVector setRowId(int rowId) {\n-    this.rowId = rowId;\n-    return this;\n-  }\n-\n-  @Override\n-  public TAbstractVector setMatrixId(int matrixId) {\n-    this.matrixId = matrixId;\n-    return this;\n-  }\n-\n-  /**\n-   * Sets clock.\n-   *\n-   * @param clock the clock\n-   * @return the clock\n-   */\n-  public TAbstractVector setClock(int clock) {\n-    this.clock = clock;\n-    return this;\n-  }\n-\n-  /**\n-   * The actually value size.\n-   *\n-   *\n-   * @return if sparse then return size of non-zero values, else size of all\n-   */\n-  public abstract int size();\n+    /**\n+     * The Row id.\n+     */\n+    protected int rowId;\n+    /**\n+     * The Matrix id.\n+     */\n+    protected int matrixId;\n+    /**\n+     * The Clock.\n+     */\n+    protected int clock;\n+    /**\n+     * The Dimension.\n+     */\n+    protected int dim;\n+\n+    /**\n+     * Default construction.\n+     */\n+    public TAbstractVector() {\n+        this.rowId = -1;\n+        this.matrixId = -1;\n+        this.clock = -1;\n+        this.dim = -1;\n+    }\n+\n+    /**\n+     * Create a new vector by other.\n+     *\n+     * @param other the other\n+     */\n+    public TAbstractVector(TAbstractVector other) {\n+        this.rowId = other.getRowId();\n+        this.matrixId = other.getMatrixId();\n+        this.clock = other.getClock();\n+        this.dim = other.getDimension();\n+    }\n+\n+    /**\n+     * Gets sparsity factor.\n+     *\n+     * @return Return the sparsity of vector\n+     */\n+    public abstract double sparsity();\n+\n+    /**\n+     * Gets type of Vector.\n+     *\n+     * @return the type\n+     */\n+    public abstract RowType getType();\n+\n+    /**\n+     * Gets dimension,the represented length of vector\n+     *\n+     * @return the dimension\n+     */\n+    public int getDimension() {\n+        return dim;\n+    }\n+\n+    /**\n+     * Gets row id.\n+     *\n+     * @return the row id\n+     */\n+    public int getRowId() {\n+        return rowId;\n+    }\n+\n+    @Override\n+    public int getMatrixId() {\n+        return matrixId;\n+    }\n+\n+    /**\n+     * Gets clock.\n+     *\n+     * @return the clock\n+     */\n+    public int getClock() {\n+        return clock;\n+    }\n+\n+    /**\n+     * Sets row id.\n+     *\n+     * @param rowId the row id\n+     * @return the row id\n+     */\n+    public TAbstractVector setRowId(int rowId) {\n+        this.rowId = rowId;\n+        return this;\n+    }\n+\n+    @Override\n+    public TAbstractVector setMatrixId(int matrixId) {\n+        this.matrixId = matrixId;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets clock.\n+     *\n+     * @param clock the clock\n+     * @return the clock\n+     */\n+    public TAbstractVector setClock(int clock) {\n+        this.clock = clock;\n+        return this;\n+    }\n+\n+    /**\n+     * The actually value size.\n+     *\n+     * @return if sparse then return size of non-zero values, else size of all\n+     */\n+    public abstract int size();\n }\n",
            "diff_size": 120
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/289/TAbstractVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/289/TAbstractVector.java\nindex 113c5937eb..6f771dd575 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/289/TAbstractVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/289/TAbstractVector.java\n@@ -143,4 +143,4 @@ public abstract class TAbstractVector extends TUpdate {\n    * @return if sparse then return size of non-zero values, else size of all\n    */\n   public abstract int size();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 31.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 43.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 83.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 91.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 101.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 116.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 127.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 145.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 157.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/289/TAbstractVector.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/289/TAbstractVector.java\nindex 113c5937eb..e0ddef5d20 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/289/TAbstractVector.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/289/TAbstractVector.java\n@@ -21,92 +21,101 @@ import com.tencent.angel.ml.matrix.RowType;\n /**\n  * Vector is the Class operated by users.\n  */\n+\n public abstract class TAbstractVector extends TUpdate {\n \n   /**\n    * The Row id.\n    */\n-  protected int rowId;\n+\n+    protected int rowId;\n   /**\n    * The Matrix id.\n    */\n-  protected int matrixId;\n+    protected int matrixId;\n   /**\n    * The Clock.\n    */\n-  protected int clock;\n+    protected int clock;\n   /**\n    * The Dimension.\n    */\n-  protected int dim;\n+    protected int dim;\n \n   /**\n    * Default construction.\n    */\n-  public TAbstractVector() {\n+\n+    public TAbstractVector() {\n     this.rowId = -1;\n     this.matrixId = -1;\n     this.clock = -1;\n     this.dim = -1;\n-  }\n+    }\n \n   /**\n    * Create a new vector by other.\n    *\n    * @param other the other\n    */\n-  public TAbstractVector(TAbstractVector other) {\n+\n+    public TAbstractVector(TAbstractVector other) {\n     this.rowId = other.getRowId();\n     this.matrixId = other.getMatrixId();\n     this.clock = other.getClock();\n     this.dim = other.getDimension();\n-  }\n+    }\n \n   /**\n    * Gets sparsity factor.\n    *\n    * @return Return the sparsity of vector\n    */\n-  public abstract double sparsity();\n+\n+    public abstract double sparsity();\n \n   /**\n    * Gets type of Vector.\n    *\n    * @return the type\n    */\n-  public abstract RowType getType();\n+\n+    public abstract RowType getType();\n \n   /**\n    * Gets dimension,the represented length of vector\n    *\n    * @return the dimension\n    */\n-  public int getDimension() {\n+\n+    public int getDimension() {\n     return dim;\n-  }\n+    }\n \n   /**\n    * Gets row id.\n    *\n    * @return the row id\n    */\n-  public int getRowId() {\n+\n+    public int getRowId() {\n     return rowId;\n-  }\n+    }\n \n-  @Override\n-  public int getMatrixId() {\n+    @Override\n+    public int getMatrixId() {\n     return matrixId;\n-  }\n+    }\n \n   /**\n    * Gets clock.\n    *\n    * @return the clock\n    */\n-  public int getClock() {\n+\n+    public int getClock() {\n     return clock;\n-  }\n+    }\n \n   /**\n    * Sets row id.\n@@ -114,16 +123,17 @@ public abstract class TAbstractVector extends TUpdate {\n    * @param rowId the row id\n    * @return the row id\n    */\n-  public TAbstractVector setRowId(int rowId) {\n+\n+    public TAbstractVector setRowId(int rowId) {\n     this.rowId = rowId;\n     return this;\n-  }\n+    }\n \n-  @Override\n-  public TAbstractVector setMatrixId(int matrixId) {\n+    @Override\n+    public TAbstractVector setMatrixId(int matrixId) {\n     this.matrixId = matrixId;\n     return this;\n-  }\n+    }\n \n   /**\n    * Sets clock.\n@@ -131,10 +141,11 @@ public abstract class TAbstractVector extends TUpdate {\n    * @param clock the clock\n    * @return the clock\n    */\n-  public TAbstractVector setClock(int clock) {\n+\n+    public TAbstractVector setClock(int clock) {\n     this.clock = clock;\n     return this;\n-  }\n+    }\n \n   /**\n    * The actually value size.\n@@ -142,5 +153,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return if sparse then return size of non-zero values, else size of all\n    */\n-  public abstract int size();\n-}\n+\n+    public abstract int size();\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}