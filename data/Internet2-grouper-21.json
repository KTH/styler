{
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "warning",
                "message": "Line is longer than 200 characters (found 205).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " */\n/*\n * $Header: /home/hagleyj/i2mi/grouper-misc/grouperClient/src/ext/edu/internet2/middleware/grouperClientExt/org/apache/commons/httpclient/util/TimeoutController.java,v 1.1 2008-11-30 10:57:27 mchyzer Exp $\n * $Revision: 1.1 $\n * $Date: 2008-11-30 10:57:27 $\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler/21/TimeoutController.java\nindex 4396ed0b40..df46290b49 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler/21/TimeoutController.java\n@@ -1,108 +1,108 @@\n-/**\r\n- * Copyright 2014 Internet2\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-/*\r\n- * $Header: /home/hagleyj/i2mi/grouper-misc/grouperClient/src/ext/edu/internet2/middleware/grouperClientExt/org/apache/commons/httpclient/util/TimeoutController.java,v 1.1 2008-11-30 10:57:27 mchyzer Exp $\r\n- * $Revision: 1.1 $\r\n- * $Date: 2008-11-30 10:57:27 $\r\n- *\r\n- * ====================================================================\r\n- *\r\n- *  Licensed to the Apache Software Foundation (ASF) under one or more\r\n- *  contributor license agreements.  See the NOTICE file distributed with\r\n- *  this work for additional information regarding copyright ownership.\r\n- *  The ASF licenses this file to You under the Apache License, Version 2.0\r\n- *  (the \"License\"); you may not use this file except in compliance with\r\n- *  the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- *  Unless required by applicable law or agreed to in writing, software\r\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- *  See the License for the specific language governing permissions and\r\n- *  limitations under the License.\r\n- * ====================================================================\r\n- *\r\n- * This software consists of voluntary contributions made by many\r\n- * individuals on behalf of the Apache Software Foundation.  For more\r\n- * information on the Apache Software Foundation, please see\r\n- * <http://www.apache.org/>.\r\n- *\r\n- */\r\n-\r\n-package edu.internet2.middleware.grouperClientExt.org.apache.commons.httpclient.util;\r\n-\r\n-/**\r\n- * <p>\r\n- * Executes a task with a specified timeout.\r\n- * </p>\r\n- * @author Ortwin Glueck\r\n- * @author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>\r\n- * @version $Revision: 1.1 $\r\n- * @since 2.0\r\n- */\r\n-public final class TimeoutController {\r\n-\r\n-    /**\r\n-     * Do not instantiate objects of this class. Methods are static.\r\n-     */\r\n-    private TimeoutController() {\r\n-    }\r\n-\r\n-    /**\r\n-     * Executes <code>task</code>. Waits for <code>timeout</code>\r\n-     * milliseconds for the task to end and returns. If the task does not return\r\n-     * in time, the thread is interrupted and an Exception is thrown.\r\n-     * The caller should override the Thread.interrupt() method to something that\r\n-     * quickly makes the thread die or use Thread.isInterrupted().\r\n-     * @param task The thread to execute\r\n-     * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n-     * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Thread task, long timeout) throws TimeoutException {\r\n-        task.start();\r\n-        try {\r\n-            task.join(timeout);\r\n-        } catch (InterruptedException e) {\r\n-            /* if somebody interrupts us he knows what he is doing */\r\n-        }\r\n-        if (task.isAlive()) {\r\n-            task.interrupt();\r\n-            throw new TimeoutException();\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * Executes <code>task</code> in a new deamon Thread and waits for the timeout.\r\n-     * @param task The task to execute\r\n-     * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n-     * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Runnable task, long timeout) throws TimeoutException {\r\n-        Thread t = new Thread(task, \"Timeout guard\");\r\n-        t.setDaemon(true);\r\n-        execute(t, timeout);\r\n-    }\r\n-\r\n-    /**\r\n-     * Signals that the task timed out.\r\n-     */\r\n-    public static class TimeoutException extends Exception {\r\n-        /** Create an instance */\r\n-        public TimeoutException() {\r\n-        }\r\n-    }\r\n-}\r\n+/**\n+ * Copyright 2014 Internet2\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * $Header: /home/hagleyj/i2mi/grouper-misc/grouperClient/src/ext/edu/internet2/middleware/grouperClientExt/org/apache/commons/httpclient/util/TimeoutController.java,v 1.1 2008-11-30 10:57:27 mchyzer Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2008-11-30 10:57:27 $\n+ *\n+ * ====================================================================\n+ *\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package edu.internet2.middleware.grouperClientExt.org.apache.commons.httpclient.util;\n+\n+/**\n+ * <p>\n+ * Executes a task with a specified timeout.\n+ * </p>\n+ * @author Ortwin Glueck\n+ * @author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>\n+ * @version $Revision: 1.1 $\n+ * @since 2.0\n+ */\n+public final class TimeoutController {\n+\n+    /**\n+     * Do not instantiate objects of this class. Methods are static.\n+     */\n+    private TimeoutController() {\n+    }\n+\n+    /**\n+     * Executes <code>task</code>. Waits for <code>timeout</code>\n+     * milliseconds for the task to end and returns. If the task does not return\n+     * in time, the thread is interrupted and an Exception is thrown.\n+     * The caller should override the Thread.interrupt() method to something that\n+     * quickly makes the thread die or use Thread.isInterrupted().\n+     * @param task The thread to execute\n+     * @param timeout The timeout in milliseconds. 0 means to wait forever.\n+     * @throws TimeoutException if the timeout passes and the thread does not return.\n+     */\n+    public static void execute(Thread task, long timeout) throws TimeoutException {\n+        task.start();\n+        try {\n+            task.join(timeout);\n+        } catch (InterruptedException e) {\n+            /* if somebody interrupts us he knows what he is doing */\n+        }\n+        if (task.isAlive()) {\n+            task.interrupt();\n+            throw new TimeoutException();\n+        }\n+    }\n+\n+    /**\n+     * Executes <code>task</code> in a new deamon Thread and waits for the timeout.\n+     * @param task The task to execute\n+     * @param timeout The timeout in milliseconds. 0 means to wait forever.\n+     * @throws TimeoutException if the timeout passes and the thread does not return.\n+     */\n+    public static void execute(Runnable task, long timeout) throws TimeoutException {\n+        Thread t = new Thread(task, \"Timeout guard\");\n+        t.setDaemon(true);\n+        execute(t, timeout);\n+    }\n+\n+    /**\n+     * Signals that the task timed out.\n+     */\n+    public static class TimeoutException extends Exception {\n+        /** Create an instance */\n+        public TimeoutException() {\n+        }\n+    }\n+}\n",
            "diff_size": 108
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/intellij/21/TimeoutController.java\nindex 4396ed0b40..3bfb30efb0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/intellij/21/TimeoutController.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -56,53 +56,53 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.httpclient.\n  */\r\n public final class TimeoutController {\r\n \r\n-    /**\r\n-     * Do not instantiate objects of this class. Methods are static.\r\n-     */\r\n-    private TimeoutController() {\r\n-    }\r\n+  /**\r\n+   * Do not instantiate objects of this class. Methods are static.\r\n+   */\r\n+  private TimeoutController() {\r\n+  }\r\n \r\n-    /**\r\n-     * Executes <code>task</code>. Waits for <code>timeout</code>\r\n-     * milliseconds for the task to end and returns. If the task does not return\r\n-     * in time, the thread is interrupted and an Exception is thrown.\r\n-     * The caller should override the Thread.interrupt() method to something that\r\n-     * quickly makes the thread die or use Thread.isInterrupted().\r\n-     * @param task The thread to execute\r\n-     * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n-     * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Thread task, long timeout) throws TimeoutException {\r\n-        task.start();\r\n-        try {\r\n-            task.join(timeout);\r\n-        } catch (InterruptedException e) {\r\n-            /* if somebody interrupts us he knows what he is doing */\r\n-        }\r\n-        if (task.isAlive()) {\r\n-            task.interrupt();\r\n-            throw new TimeoutException();\r\n-        }\r\n+  /**\r\n+   * Executes <code>task</code>. Waits for <code>timeout</code>\r\n+   * milliseconds for the task to end and returns. If the task does not return\r\n+   * in time, the thread is interrupted and an Exception is thrown.\r\n+   * The caller should override the Thread.interrupt() method to something that\r\n+   * quickly makes the thread die or use Thread.isInterrupted().\r\n+   * @param task The thread to execute\r\n+   * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n+   * @throws TimeoutException if the timeout passes and the thread does not return.\r\n+   */\r\n+  public static void execute(Thread task, long timeout) throws TimeoutException {\r\n+    task.start();\r\n+    try {\r\n+      task.join(timeout);\r\n+    } catch (InterruptedException e) {\r\n+      /* if somebody interrupts us he knows what he is doing */\r\n     }\r\n-\r\n-    /**\r\n-     * Executes <code>task</code> in a new deamon Thread and waits for the timeout.\r\n-     * @param task The task to execute\r\n-     * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n-     * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Runnable task, long timeout) throws TimeoutException {\r\n-        Thread t = new Thread(task, \"Timeout guard\");\r\n-        t.setDaemon(true);\r\n-        execute(t, timeout);\r\n+    if (task.isAlive()) {\r\n+      task.interrupt();\r\n+      throw new TimeoutException();\r\n     }\r\n+  }\r\n+\r\n+  /**\r\n+   * Executes <code>task</code> in a new deamon Thread and waits for the timeout.\r\n+   * @param task The task to execute\r\n+   * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n+   * @throws TimeoutException if the timeout passes and the thread does not return.\r\n+   */\r\n+  public static void execute(Runnable task, long timeout) throws TimeoutException {\r\n+    Thread t = new Thread(task, \"Timeout guard\");\r\n+    t.setDaemon(true);\r\n+    execute(t, timeout);\r\n+  }\r\n \r\n-    /**\r\n-     * Signals that the task timed out.\r\n-     */\r\n-    public static class TimeoutException extends Exception {\r\n-        /** Create an instance */\r\n-        public TimeoutException() {\r\n-        }\r\n+  /**\r\n+   * Signals that the task timed out.\r\n+   */\r\n+  public static class TimeoutException extends Exception {\r\n+    /** Create an instance */\r\n+    public TimeoutException() {\r\n     }\r\n+  }\r\n }\r\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/naturalize/21/TimeoutController.java\nindex 4396ed0b40..83bf0aba25 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/naturalize/21/TimeoutController.java\n@@ -105,4 +105,4 @@ public final class TimeoutController {\n         public TimeoutException() {\r\n         }\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "70",
                    "severity": "warning",
                    "message": "'}' at column 70 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/codebuff/21/TimeoutController.java\nindex 4396ed0b40..303fde7175 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/codebuff/21/TimeoutController.java\n@@ -53,14 +53,16 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.httpclient.\n  * @author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>\r\n  * @version $Revision: 1.1 $\r\n  * @since 2.0\r\n- */\r\n+ */\n+\n public final class TimeoutController {\r\n \r\n     /**\r\n      * Do not instantiate objects of this class. Methods are static.\r\n-     */\r\n-    private TimeoutController() {\r\n-    }\r\n+     */\n+\n+\n+    private TimeoutController() {}\r\n \r\n     /**\r\n      * Executes <code>task</code>. Waits for <code>timeout</code>\r\n@@ -71,18 +73,21 @@ public final class TimeoutController {\n      * @param task The thread to execute\r\n      * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n      * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Thread task, long timeout) throws TimeoutException {\r\n-        task.start();\r\n-        try {\r\n-            task.join(timeout);\r\n+     */\n+\n+\n+    public static void execute(Thread task, long timeout) throws TimeoutException {\n+        task.start();\n+\n+        try {\n+            task.join(timeout);\n         } catch (InterruptedException e) {\r\n-            /* if somebody interrupts us he knows what he is doing */\r\n-        }\r\n-        if (task.isAlive()) {\r\n-            task.interrupt();\r\n-            throw new TimeoutException();\r\n-        }\r\n+            /* if somebody interrupts us he knows what he is doing */}\n+\n+        if (task.isAlive()) {\n+            task.interrupt();\n+            throw new TimeoutException();\n+        }\n     }\r\n \r\n     /**\r\n@@ -90,19 +95,22 @@ public final class TimeoutController {\n      * @param task The task to execute\r\n      * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n      * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Runnable task, long timeout) throws TimeoutException {\r\n-        Thread t = new Thread(task, \"Timeout guard\");\r\n-        t.setDaemon(true);\r\n-        execute(t, timeout);\r\n+     */\n+\n+\n+    public static void execute(Runnable task, long timeout) throws TimeoutException {\n+        Thread t = new Thread(task, \"Timeout guard\");\n+        t.setDaemon(true);\n+        execute(t, timeout);\n     }\r\n \r\n     /**\r\n      * Signals that the task timed out.\r\n-     */\r\n+     */\n+\n+\n     public static class TimeoutException extends Exception {\r\n-        /** Create an instance */\r\n-        public TimeoutException() {\r\n-        }\r\n-    }\r\n-}\r\n+        /** Create an instance */\n+        public TimeoutException() {}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler_random/21/TimeoutController.java\nindex 4396ed0b40..df46290b49 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/errored/1/21/TimeoutController.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Internet2-grouper/styler_random/21/TimeoutController.java\n@@ -1,108 +1,108 @@\n-/**\r\n- * Copyright 2014 Internet2\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-/*\r\n- * $Header: /home/hagleyj/i2mi/grouper-misc/grouperClient/src/ext/edu/internet2/middleware/grouperClientExt/org/apache/commons/httpclient/util/TimeoutController.java,v 1.1 2008-11-30 10:57:27 mchyzer Exp $\r\n- * $Revision: 1.1 $\r\n- * $Date: 2008-11-30 10:57:27 $\r\n- *\r\n- * ====================================================================\r\n- *\r\n- *  Licensed to the Apache Software Foundation (ASF) under one or more\r\n- *  contributor license agreements.  See the NOTICE file distributed with\r\n- *  this work for additional information regarding copyright ownership.\r\n- *  The ASF licenses this file to You under the Apache License, Version 2.0\r\n- *  (the \"License\"); you may not use this file except in compliance with\r\n- *  the License.  You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- *  Unless required by applicable law or agreed to in writing, software\r\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- *  See the License for the specific language governing permissions and\r\n- *  limitations under the License.\r\n- * ====================================================================\r\n- *\r\n- * This software consists of voluntary contributions made by many\r\n- * individuals on behalf of the Apache Software Foundation.  For more\r\n- * information on the Apache Software Foundation, please see\r\n- * <http://www.apache.org/>.\r\n- *\r\n- */\r\n-\r\n-package edu.internet2.middleware.grouperClientExt.org.apache.commons.httpclient.util;\r\n-\r\n-/**\r\n- * <p>\r\n- * Executes a task with a specified timeout.\r\n- * </p>\r\n- * @author Ortwin Glueck\r\n- * @author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>\r\n- * @version $Revision: 1.1 $\r\n- * @since 2.0\r\n- */\r\n-public final class TimeoutController {\r\n-\r\n-    /**\r\n-     * Do not instantiate objects of this class. Methods are static.\r\n-     */\r\n-    private TimeoutController() {\r\n-    }\r\n-\r\n-    /**\r\n-     * Executes <code>task</code>. Waits for <code>timeout</code>\r\n-     * milliseconds for the task to end and returns. If the task does not return\r\n-     * in time, the thread is interrupted and an Exception is thrown.\r\n-     * The caller should override the Thread.interrupt() method to something that\r\n-     * quickly makes the thread die or use Thread.isInterrupted().\r\n-     * @param task The thread to execute\r\n-     * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n-     * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Thread task, long timeout) throws TimeoutException {\r\n-        task.start();\r\n-        try {\r\n-            task.join(timeout);\r\n-        } catch (InterruptedException e) {\r\n-            /* if somebody interrupts us he knows what he is doing */\r\n-        }\r\n-        if (task.isAlive()) {\r\n-            task.interrupt();\r\n-            throw new TimeoutException();\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * Executes <code>task</code> in a new deamon Thread and waits for the timeout.\r\n-     * @param task The task to execute\r\n-     * @param timeout The timeout in milliseconds. 0 means to wait forever.\r\n-     * @throws TimeoutException if the timeout passes and the thread does not return.\r\n-     */\r\n-    public static void execute(Runnable task, long timeout) throws TimeoutException {\r\n-        Thread t = new Thread(task, \"Timeout guard\");\r\n-        t.setDaemon(true);\r\n-        execute(t, timeout);\r\n-    }\r\n-\r\n-    /**\r\n-     * Signals that the task timed out.\r\n-     */\r\n-    public static class TimeoutException extends Exception {\r\n-        /** Create an instance */\r\n-        public TimeoutException() {\r\n-        }\r\n-    }\r\n-}\r\n+/**\n+ * Copyright 2014 Internet2\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * $Header: /home/hagleyj/i2mi/grouper-misc/grouperClient/src/ext/edu/internet2/middleware/grouperClientExt/org/apache/commons/httpclient/util/TimeoutController.java,v 1.1 2008-11-30 10:57:27 mchyzer Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2008-11-30 10:57:27 $\n+ *\n+ * ====================================================================\n+ *\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package edu.internet2.middleware.grouperClientExt.org.apache.commons.httpclient.util;\n+\n+/**\n+ * <p>\n+ * Executes a task with a specified timeout.\n+ * </p>\n+ * @author Ortwin Glueck\n+ * @author <a href=\"mailto:mbowler@GargoyleSoftware.com\">Mike Bowler</a>\n+ * @version $Revision: 1.1 $\n+ * @since 2.0\n+ */\n+public final class TimeoutController {\n+\n+    /**\n+     * Do not instantiate objects of this class. Methods are static.\n+     */\n+    private TimeoutController() {\n+    }\n+\n+    /**\n+     * Executes <code>task</code>. Waits for <code>timeout</code>\n+     * milliseconds for the task to end and returns. If the task does not return\n+     * in time, the thread is interrupted and an Exception is thrown.\n+     * The caller should override the Thread.interrupt() method to something that\n+     * quickly makes the thread die or use Thread.isInterrupted().\n+     * @param task The thread to execute\n+     * @param timeout The timeout in milliseconds. 0 means to wait forever.\n+     * @throws TimeoutException if the timeout passes and the thread does not return.\n+     */\n+    public static void execute(Thread task, long timeout) throws TimeoutException {\n+        task.start();\n+        try {\n+            task.join(timeout);\n+        } catch (InterruptedException e) {\n+            /* if somebody interrupts us he knows what he is doing */\n+        }\n+        if (task.isAlive()) {\n+            task.interrupt();\n+            throw new TimeoutException();\n+        }\n+    }\n+\n+    /**\n+     * Executes <code>task</code> in a new deamon Thread and waits for the timeout.\n+     * @param task The task to execute\n+     * @param timeout The timeout in milliseconds. 0 means to wait forever.\n+     * @throws TimeoutException if the timeout passes and the thread does not return.\n+     */\n+    public static void execute(Runnable task, long timeout) throws TimeoutException {\n+        Thread t = new Thread(task, \"Timeout guard\");\n+        t.setDaemon(true);\n+        execute(t, timeout);\n+    }\n+\n+    /**\n+     * Signals that the task timed out.\n+     */\n+    public static class TimeoutException extends Exception {\n+        /** Create an instance */\n+        public TimeoutException() {\n+        }\n+    }\n+}\n",
            "diff_size": 108
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}