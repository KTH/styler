{
    "error_id": "74",
    "information": {
        "errors": [
            {
                "line": "51",
                "column": "5",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n    public void reload(@Observes @ReloadScript String event) {\n    \t// Skip reload if global script is not enabled for this application\n    \tif (!customScriptManager.isSupportedType(customScriptType)) {\n    \t\treturn;\n    \t}",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/74/ExternalScriptService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/74/ExternalScriptService.java\nindex 6ec4ac9eb1..7288e98f05 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/74/ExternalScriptService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/74/ExternalScriptService.java\n@@ -48,13 +48,13 @@ public abstract class ExternalScriptService implements Serializable {\n     }\n \n     public void reload(@Observes @ReloadScript String event) {\n-    \t// Skip reload if global script is not enabled for this application\n-    \tif (!customScriptManager.isSupportedType(customScriptType)) {\n-    \t\treturn;\n-    \t}\n+        // Skip reload if global script is not enabled for this application\n+        if (!customScriptManager.isSupportedType(customScriptType)) {\n+            return;\n+        }\n         // Get actual list of external configurations\n         List<CustomScriptConfiguration> newCustomScriptConfigurations = customScriptManager\n-                .getCustomScriptConfigurationsByScriptType(customScriptType);\n+            .getCustomScriptConfigurationsByScriptType(customScriptType);\n         addExternalConfigurations(newCustomScriptConfigurations);\n \n         this.customScriptConfigurations = newCustomScriptConfigurations;\n@@ -75,7 +75,7 @@ public abstract class ExternalScriptService implements Serializable {\n \n     private Map<String, CustomScriptConfiguration> buildExternalConfigurationsNameMap(List<CustomScriptConfiguration> customScriptConfigurations) {\n         Map<String, CustomScriptConfiguration> reloadedExternalConfigurations = new HashMap<String, CustomScriptConfiguration>(\n-                customScriptConfigurations.size());\n+            customScriptConfigurations.size());\n \n         for (CustomScriptConfiguration customScriptConfiguration : customScriptConfigurations) {\n             reloadedExternalConfigurations.put(StringHelper.toLowerCase(customScriptConfiguration.getName()), customScriptConfiguration);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/74/ExternalScriptService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/74/ExternalScriptService.java\nindex 6ec4ac9eb1..c1b94ceb57 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/74/ExternalScriptService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/74/ExternalScriptService.java\n@@ -48,11 +48,12 @@ public abstract class ExternalScriptService implements Serializable {\n     }\n \n     public void reload(@Observes @ReloadScript String event) {\n-    \t// Skip reload if global script is not enabled for this application\n+    // Skip reload if global script is not enabled for this application\n     \tif (!customScriptManager.isSupportedType(customScriptType)) {\n-    \t\treturn;\n-    \t}\n-        // Get actual list of external configurations\n+    return;\n+    }\n+\n+// Get actual list of external configurations\n         List<CustomScriptConfiguration> newCustomScriptConfigurations = customScriptManager\n                 .getCustomScriptConfigurationsByScriptType(customScriptType);\n         addExternalConfigurations(newCustomScriptConfigurations);\n@@ -149,4 +150,4 @@ public abstract class ExternalScriptService implements Serializable {\n         }\n         return scripts;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/74/ExternalScriptService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/74/ExternalScriptService.java\nindex 6ec4ac9eb1..4804d4897a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/74/ExternalScriptService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/74/ExternalScriptService.java\n@@ -14,7 +14,6 @@ import org.gluu.model.custom.script.type.BaseExternalType;\n import org.gluu.service.custom.inject.ReloadScript;\n import org.gluu.util.StringHelper;\n import org.slf4j.Logger;\n-\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n import java.io.Serializable;\n@@ -27,6 +26,8 @@ import java.util.Map;\n  *\n  * @author Yuriy Movchan Date: 01/08/2015\n  */\n+\n+\n public abstract class ExternalScriptService implements Serializable {\n \n     private static final long serialVersionUID = -1070021905117441202L;\n@@ -40,7 +41,9 @@ public abstract class ExternalScriptService implements Serializable {\n     protected CustomScriptType customScriptType;\n \n     protected Map<String, CustomScriptConfiguration> customScriptConfigurationsNameMap;\n+\n     protected List<CustomScriptConfiguration> customScriptConfigurations;\n+\n     protected CustomScriptConfiguration defaultExternalCustomScript;\n \n     public ExternalScriptService(CustomScriptType customScriptType) {\n@@ -48,15 +51,14 @@ public abstract class ExternalScriptService implements Serializable {\n     }\n \n     public void reload(@Observes @ReloadScript String event) {\n-    \t// Skip reload if global script is not enabled for this application\n-    \tif (!customScriptManager.isSupportedType(customScriptType)) {\n-    \t\treturn;\n-    \t}\n+        // Skip reload if global script is not enabled for this application\n+        if (!customScriptManager.isSupportedType(customScriptType)) {\n+            return;\n+        }\n         // Get actual list of external configurations\n-        List<CustomScriptConfiguration> newCustomScriptConfigurations = customScriptManager\n-                .getCustomScriptConfigurationsByScriptType(customScriptType);\n-        addExternalConfigurations(newCustomScriptConfigurations);\n \n+        List<CustomScriptConfiguration> newCustomScriptConfigurations = customScriptManager.getCustomScriptConfigurationsByScriptType(customScriptType);\n+        addExternalConfigurations(newCustomScriptConfigurations);\n         this.customScriptConfigurations = newCustomScriptConfigurations;\n         this.customScriptConfigurationsNameMap = buildExternalConfigurationsNameMap(customScriptConfigurations);\n \n@@ -74,11 +76,11 @@ public abstract class ExternalScriptService implements Serializable {\n     }\n \n     private Map<String, CustomScriptConfiguration> buildExternalConfigurationsNameMap(List<CustomScriptConfiguration> customScriptConfigurations) {\n-        Map<String, CustomScriptConfiguration> reloadedExternalConfigurations = new HashMap<String, CustomScriptConfiguration>(\n-                customScriptConfigurations.size());\n-\n+        Map<String, CustomScriptConfiguration> reloadedExternalConfigurations = new HashMap<String, CustomScriptConfiguration>(customScriptConfigurations.size());\n         for (CustomScriptConfiguration customScriptConfiguration : customScriptConfigurations) {\n-            reloadedExternalConfigurations.put(StringHelper.toLowerCase(customScriptConfiguration.getName()), customScriptConfiguration);\n+            reloadedExternalConfigurations.put(\n+                                          StringHelper.toLowerCase(customScriptConfiguration.getName()),\n+                                          customScriptConfiguration);\n         }\n \n         return reloadedExternalConfigurations;\n@@ -100,6 +102,7 @@ public abstract class ExternalScriptService implements Serializable {\n         try {\n             log.debug(\"Executing python 'getApiVersion' authenticator method\");\n             BaseExternalType externalAuthenticator = (BaseExternalType) customScriptConfiguration.getExternalType();\n+\n             return externalAuthenticator.getApiVersion();\n         } catch (Exception ex) {\n             log.error(ex.getMessage(), ex);\n@@ -141,12 +144,15 @@ public abstract class ExternalScriptService implements Serializable {\n         if (dns == null || dns.isEmpty() || customScriptConfigurations == null || customScriptConfigurations.isEmpty()) {\n             return Lists.newArrayList();\n         }\n+\n         List<CustomScriptConfiguration> scripts = Lists.newArrayList();\n         for (CustomScriptConfiguration script : customScriptConfigurations) {\n             if (dns.contains(script.getCustomScript().getDn())) {\n                 scripts.add(script);\n             }\n         }\n+\n         return scripts;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}