{
    "error_id": "308",
    "information": {
        "errors": [
            {
                "line": "87",
                "column": "21",
                "severity": "warning",
                "message": "'}' at column 6 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\t\t\tdescr.setInputFile(file);\n\t\t\t\t\t\tl.add(new Preprocessor(config, descr));\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\tlog.error(\"Failed to process \"+LogUtil.printPath(descriptionFile), e);\n\t\t\t\t\t}\n\t\t\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "87",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 6 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/308/PreprocessorCommand.java\nindex 473541f35f..4bea966902 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/308/PreprocessorCommand.java\n@@ -36,7 +36,7 @@ public class PreprocessorCommand extends ConqueryCommand {\n \tpublic PreprocessorCommand() {\n \t\tthis(null);\n \t}\n-\t\n+\n \tpublic PreprocessorCommand(ExecutorService pool) {\n \t\tsuper(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n \t\tthis.pool = pool;\n@@ -47,14 +47,14 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\tif(pool == null) {\n \t\t\tpool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n \t\t}\n-\t\t\n+\n \t\tCollection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n \t\tjobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n-\t\t\n+\n \t\tlong totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n-\t\t\n+\n \t\tlog.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n-\t\t\n+\n \t\tProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n \n \t\tfor(Preprocessor job:jobs) {\n@@ -72,7 +72,7 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\tpool.shutdown();\n \t\tpool.awaitTermination(24, TimeUnit.HOURS);\n \t}\n-\t\n+\n \tpublic static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n \t\tList<Preprocessor> l = new ArrayList<>();\n \t\tfor(PreprocessingDirectories directories:config.getPreprocessor().getDirectories()) {\n",
            "diff_size": 6
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/308/PreprocessorCommand.java\nindex 473541f35f..d0395083b8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/308/PreprocessorCommand.java\n@@ -31,65 +31,64 @@ import net.sourceforge.argparse4j.inf.Namespace;\n @Slf4j\n public class PreprocessorCommand extends ConqueryCommand {\n \n-\tprivate ExecutorService pool;\n-\n-\tpublic PreprocessorCommand() {\n-\t\tthis(null);\n-\t}\n-\t\n-\tpublic PreprocessorCommand(ExecutorService pool) {\n-\t\tsuper(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n-\t\tthis.pool = pool;\n-\t}\n-\n-\t@Override\n-\tprotected void run(Environment environment, Namespace namespace, ConqueryConfig config) throws Exception {\n-\t\tif(pool == null) {\n-\t\t\tpool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n-\t\t}\n-\t\t\n-\t\tCollection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n-\t\tjobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n-\t\t\n-\t\tlong totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n-\t\t\n-\t\tlog.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n-\t\t\n-\t\tProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n-\n-\t\tfor(Preprocessor job:jobs) {\n-\t\t\tpool.submit(() -> {\n-\t\t\t\tConqueryMDC.setLocation(job.getDescriptor().toString());\n-\t\t\t\ttry {\n-\t\t\t\t\tjob.preprocess(totalProgress);\n-\t\t\t\t}\n-\t\t\t\tcatch(Exception e) {\n-\t\t\t\t\tlog.error(\"Failed to preprocess \"+LogUtil.printPath(job.getDescriptor().getInputFile().getDescriptionFile()), e);\n-\t\t\t\t}\n-\t\t\t});\n-\t\t}\n-\n-\t\tpool.shutdown();\n-\t\tpool.awaitTermination(24, TimeUnit.HOURS);\n-\t}\n-\t\n-\tpublic static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n-\t\tList<Preprocessor> l = new ArrayList<>();\n-\t\tfor(PreprocessingDirectories directories:config.getPreprocessor().getDirectories()) {\n-\t\t\tFile in = directories.getDescriptions().getAbsoluteFile();\n-\t\t\tfor(File descriptionFile:in.listFiles()) {\n-\t\t\t\tif(descriptionFile.getName().endsWith(ConqueryConstants.EXTENSION_DESCRIPTION)) {\n-\t\t\t\t\tInputFile file = InputFile.fromDescriptionFile(descriptionFile, directories);\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tImportDescriptor descr = file.readDescriptor(validator);\n-\t\t\t\t\t\tdescr.setInputFile(file);\n-\t\t\t\t\t\tl.add(new Preprocessor(config, descr));\n-\t\t\t\t\t} catch(Exception e) {\n-\t\t\t\t\t\tlog.error(\"Failed to process \"+LogUtil.printPath(descriptionFile), e);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn l;\n-\t}\n+    private ExecutorService pool;\n+\n+    public PreprocessorCommand() {\n+        this(null);\n+    }\n+\n+    public PreprocessorCommand(ExecutorService pool) {\n+        super(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n+        this.pool = pool;\n+    }\n+\n+    @Override\n+    protected void run(Environment environment, Namespace namespace, ConqueryConfig config) throws Exception {\n+        if (pool == null) {\n+            pool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n+        }\n+\n+        Collection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n+        jobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n+\n+        long totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n+\n+        log.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n+\n+        ProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n+\n+        for (Preprocessor job : jobs) {\n+            pool.submit(() -> {\n+                ConqueryMDC.setLocation(job.getDescriptor().toString());\n+                try {\n+                    job.preprocess(totalProgress);\n+                } catch (Exception e) {\n+                    log.error(\"Failed to preprocess \" + LogUtil.printPath(job.getDescriptor().getInputFile().getDescriptionFile()), e);\n+                }\n+            });\n+        }\n+\n+        pool.shutdown();\n+        pool.awaitTermination(24, TimeUnit.HOURS);\n+    }\n+\n+    public static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n+        List<Preprocessor> l = new ArrayList<>();\n+        for (PreprocessingDirectories directories : config.getPreprocessor().getDirectories()) {\n+            File in = directories.getDescriptions().getAbsoluteFile();\n+            for (File descriptionFile : in.listFiles()) {\n+                if (descriptionFile.getName().endsWith(ConqueryConstants.EXTENSION_DESCRIPTION)) {\n+                    InputFile file = InputFile.fromDescriptionFile(descriptionFile, directories);\n+                    try {\n+                        ImportDescriptor descr = file.readDescriptor(validator);\n+                        descr.setInputFile(file);\n+                        l.add(new Preprocessor(config, descr));\n+                    } catch (Exception e) {\n+                        log.error(\"Failed to process \" + LogUtil.printPath(descriptionFile), e);\n+                    }\n+                }\n+            }\n+        }\n+        return l;\n+    }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/308/PreprocessorCommand.java\nindex 473541f35f..c4fd7b4d0a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/naturalize/308/PreprocessorCommand.java\n@@ -50,14 +50,12 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\t\n \t\tCollection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n \t\tjobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n-\t\t\n \t\tlong totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n \t\t\n \t\tlog.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n \t\t\n \t\tProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n-\n-\t\tfor(Preprocessor job:jobs) {\n+for(Preprocessor job:jobs) {\n \t\t\tpool.submit(() -> {\n \t\t\t\tConqueryMDC.setLocation(job.getDescriptor().toString());\n \t\t\t\ttry {\n@@ -84,7 +82,8 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\t\t\t\t\tImportDescriptor descr = file.readDescriptor(validator);\n \t\t\t\t\t\tdescr.setInputFile(file);\n \t\t\t\t\t\tl.add(new Preprocessor(config, descr));\n-\t\t\t\t\t} catch(Exception e) {\n+\t\t\t\t\t}\n+catch(Exception e) {\n \t\t\t\t\t\tlog.error(\"Failed to process \"+LogUtil.printPath(descriptionFile), e);\n \t\t\t\t\t}\n \t\t\t\t}\n@@ -92,4 +91,4 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\t}\n \t\treturn l;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/308/PreprocessorCommand.java\nindex 473541f35f..00e728065b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/308/PreprocessorCommand.java\n@@ -9,9 +9,7 @@ import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n import java.util.function.Predicate;\n-\n import javax.validation.Validator;\n-\n import com.bakdata.conquery.ConqueryConstants;\n import com.bakdata.conquery.models.config.ConqueryConfig;\n import com.bakdata.conquery.models.config.PreprocessingDirectories;\n@@ -23,7 +21,6 @@ import com.bakdata.conquery.util.io.ConqueryMDC;\n import com.bakdata.conquery.util.io.LogUtil;\n import com.bakdata.conquery.util.io.ProgressBar;\n import com.jakewharton.byteunits.BinaryByteUnit;\n-\n import io.dropwizard.setup.Environment;\n import lombok.extern.slf4j.Slf4j;\n import net.sourceforge.argparse4j.inf.Namespace;\n@@ -31,65 +28,66 @@ import net.sourceforge.argparse4j.inf.Namespace;\n @Slf4j\n public class PreprocessorCommand extends ConqueryCommand {\n \n-\tprivate ExecutorService pool;\n+    private ExecutorService pool;\n+\n+    public PreprocessorCommand() {\n+        this(null);\n+    }\n+\n+    public PreprocessorCommand(ExecutorService pool) {\n+        super(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n+        this.pool = pool;\n+    }\n \n-\tpublic PreprocessorCommand() {\n-\t\tthis(null);\n-\t}\n-\t\n-\tpublic PreprocessorCommand(ExecutorService pool) {\n-\t\tsuper(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n-\t\tthis.pool = pool;\n-\t}\n+    @Override\n+    protected void run(Environment environment, Namespace namespace, ConqueryConfig config) throws Exception {\n+        if(pool == null) {\n+            pool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n+        }\n \n-\t@Override\n-\tprotected void run(Environment environment, Namespace namespace, ConqueryConfig config) throws Exception {\n-\t\tif(pool == null) {\n-\t\t\tpool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n-\t\t}\n-\t\t\n-\t\tCollection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n-\t\tjobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n-\t\t\n-\t\tlong totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n-\t\t\n-\t\tlog.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n-\t\t\n-\t\tProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n+        Collection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n+        jobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n \n-\t\tfor(Preprocessor job:jobs) {\n-\t\t\tpool.submit(() -> {\n-\t\t\t\tConqueryMDC.setLocation(job.getDescriptor().toString());\n-\t\t\t\ttry {\n-\t\t\t\t\tjob.preprocess(totalProgress);\n-\t\t\t\t}\n-\t\t\t\tcatch(Exception e) {\n-\t\t\t\t\tlog.error(\"Failed to preprocess \"+LogUtil.printPath(job.getDescriptor().getInputFile().getDescriptionFile()), e);\n-\t\t\t\t}\n-\t\t\t});\n-\t\t}\n+        long totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize)\n+                                      .sum();\n+        log.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n+        ProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n+        for(Preprocessor job : jobs) {\n+            pool.submit(()-> {\n+                ConqueryMDC.setLocation(job.getDescriptor().toString());\n+                try {\n+                    job.preprocess(totalProgress);\n+                }\n+                catch (Exception e) {\n+                    log.error(\"Failed to preprocess \"+LogUtil.printPath(job.getDescriptor().getInputFile()\n+                                                                                           .getDescriptionFile()),\n+                              e\n+                    );\n+                }\n+            });\n+        }\n+        pool.shutdown();\n+        pool.awaitTermination(24, TimeUnit.HOURS);\n+    }\n \n-\t\tpool.shutdown();\n-\t\tpool.awaitTermination(24, TimeUnit.HOURS);\n-\t}\n-\t\n-\tpublic static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n-\t\tList<Preprocessor> l = new ArrayList<>();\n-\t\tfor(PreprocessingDirectories directories:config.getPreprocessor().getDirectories()) {\n-\t\t\tFile in = directories.getDescriptions().getAbsoluteFile();\n-\t\t\tfor(File descriptionFile:in.listFiles()) {\n-\t\t\t\tif(descriptionFile.getName().endsWith(ConqueryConstants.EXTENSION_DESCRIPTION)) {\n-\t\t\t\t\tInputFile file = InputFile.fromDescriptionFile(descriptionFile, directories);\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tImportDescriptor descr = file.readDescriptor(validator);\n-\t\t\t\t\t\tdescr.setInputFile(file);\n-\t\t\t\t\t\tl.add(new Preprocessor(config, descr));\n-\t\t\t\t\t} catch(Exception e) {\n-\t\t\t\t\t\tlog.error(\"Failed to process \"+LogUtil.printPath(descriptionFile), e);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn l;\n-\t}\n-}\n+    public static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n+        List<Preprocessor> l = new ArrayList<>();\n+        for(PreprocessingDirectories directories : config.getPreprocessor().getDirectories()) {\n+            File in = directories.getDescriptions().getAbsoluteFile();\n+            for(File descriptionFile : in.listFiles()) {\n+                if(descriptionFile.getName().endsWith(ConqueryConstants.EXTENSION_DESCRIPTION)) {\n+                    InputFile file = InputFile.fromDescriptionFile(descriptionFile, directories);\n+                    try {\n+                        ImportDescriptor descr = file.readDescriptor(validator);\n+                        descr.setInputFile(file);\n+                        l.add(new Preprocessor(config, descr));\n+                    }\n+                    catch (Exception e) {\n+                        log.error(\"Failed to process \"+LogUtil.printPath(descriptionFile), e);\n+                    }\n+                }\n+            }\n+        }\n+        return l;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 80
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "87",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 6 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/308/PreprocessorCommand.java\nindex 473541f35f..4bea966902 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/308/PreprocessorCommand.java\n@@ -36,7 +36,7 @@ public class PreprocessorCommand extends ConqueryCommand {\n \tpublic PreprocessorCommand() {\n \t\tthis(null);\n \t}\n-\t\n+\n \tpublic PreprocessorCommand(ExecutorService pool) {\n \t\tsuper(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n \t\tthis.pool = pool;\n@@ -47,14 +47,14 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\tif(pool == null) {\n \t\t\tpool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n \t\t}\n-\t\t\n+\n \t\tCollection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n \t\tjobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n-\t\t\n+\n \t\tlong totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n-\t\t\n+\n \t\tlog.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n-\t\t\n+\n \t\tProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n \n \t\tfor(Preprocessor job:jobs) {\n@@ -72,7 +72,7 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\tpool.shutdown();\n \t\tpool.awaitTermination(24, TimeUnit.HOURS);\n \t}\n-\t\n+\n \tpublic static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n \t\tList<Preprocessor> l = new ArrayList<>();\n \t\tfor(PreprocessingDirectories directories:config.getPreprocessor().getDirectories()) {\n",
            "diff_size": 6
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "87",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 6 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/308/PreprocessorCommand.java\nindex 473541f35f..4bea966902 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/308/PreprocessorCommand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/308/PreprocessorCommand.java\n@@ -36,7 +36,7 @@ public class PreprocessorCommand extends ConqueryCommand {\n \tpublic PreprocessorCommand() {\n \t\tthis(null);\n \t}\n-\t\n+\n \tpublic PreprocessorCommand(ExecutorService pool) {\n \t\tsuper(\"preprocess\", \"Preprocesses all the files in the given input directories. This has to be done only if the model or the files changed.\");\n \t\tthis.pool = pool;\n@@ -47,14 +47,14 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\tif(pool == null) {\n \t\t\tpool = Executors.newFixedThreadPool(config.getPreprocessor().getThreads());\n \t\t}\n-\t\t\n+\n \t\tCollection<Preprocessor> jobs = findPreprocessingJobs(config, environment.getValidator());\n \t\tjobs.removeIf(Predicate.not(Preprocessor::requiresProcessing));\n-\t\t\n+\n \t\tlong totalSize = jobs.stream().mapToLong(Preprocessor::getTotalCsvSize).sum();\n-\t\t\n+\n \t\tlog.info(\"Required to preprocess {} in total\", BinaryByteUnit.format(totalSize));\n-\t\t\n+\n \t\tProgressBar totalProgress = new ProgressBar(totalSize, System.out);\n \n \t\tfor(Preprocessor job:jobs) {\n@@ -72,7 +72,7 @@ public class PreprocessorCommand extends ConqueryCommand {\n \t\tpool.shutdown();\n \t\tpool.awaitTermination(24, TimeUnit.HOURS);\n \t}\n-\t\n+\n \tpublic static List<Preprocessor> findPreprocessingJobs(ConqueryConfig config, Validator validator) throws IOException, JSONException {\n \t\tList<Preprocessor> l = new ArrayList<>();\n \t\tfor(PreprocessingDirectories directories:config.getPreprocessor().getDirectories()) {\n",
            "diff_size": 6
        }
    ]
}