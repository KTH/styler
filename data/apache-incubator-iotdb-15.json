{
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.concurrent;\n\nimport java.util.concurrent.locks.ReentrantReadWriteLock;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'db' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/15/HashLock.java\nindex c55ecb9942..537136122e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/15/HashLock.java\n@@ -16,7 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.concurrent;\n+package org.apache.iotdb.\n+\n+db.concurrent;\n \n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/15/HashLock.java\nindex c55ecb9942..8c828ab4be 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/15/HashLock.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.concurrent;\n \n import java.util.concurrent.locks.ReentrantReadWriteLock;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/15/HashLock.java\nindex c55ecb9942..fe49019985 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/naturalize/15/HashLock.java\n@@ -39,7 +39,10 @@ public class HashLock {\n \n   private void init() {\n     locks = new ReentrantReadWriteLock[lockSize];\n-    for (int i = 0; i < lockSize; i++) {\n+    for (int i = 0;\n+\n+i < lockSize;\n+i++) {\n       locks[i] = new ReentrantReadWriteLock();\n     }\n   }\n@@ -60,4 +63,4 @@ public class HashLock {\n     this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().unlock();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 22, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 28, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "warning",
                    "message": "'%' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "warning",
                    "message": "'%' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "40",
                    "severity": "warning",
                    "message": "'%' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "64",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "warning",
                    "message": "'%' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/15/HashLock.java\nindex c55ecb9942..03230c1453 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/15/HashLock.java\n@@ -17,7 +17,6 @@\n  * under the License.\n  */\n package org.apache.iotdb.db.concurrent;\n-\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n /**\n@@ -25,39 +24,50 @@ import java.util.concurrent.locks.ReentrantReadWriteLock;\n  * the array to find the corresponding lock, so that the operations on the same key (string)\n  * can be prevented while the number of locks remain controlled.\n  */\n+\n public class HashLock {\n \n-  private static final int DEFAULT_LOCK_NUM = 100;\n \n-  private ReentrantReadWriteLock[] locks;\n-  private int lockSize;\n+    private static final int DEFAULT_LOCK_NUM = 100;\n+\n+\n+    private ReentrantReadWriteLock [] locks;\n+\n+\n+    private int lockSize;\n \n-  public HashLock() {\n-    this.lockSize = DEFAULT_LOCK_NUM;\n-    init();\n-  }\n+    public HashLock() {\n+this.lockSize = DEFAULT_LOCK_NUM;\n+init();\n+                      }\n \n-  private void init() {\n-    locks = new ReentrantReadWriteLock[lockSize];\n-    for (int i = 0; i < lockSize; i++) {\n-      locks[i] = new ReentrantReadWriteLock();\n+    private void init() {\n+    locks = new ReentrantReadWriteLock [ lockSize];\n+    for(int i = 0;\n+    i< lockSize;\n+    i++) {\n+                            locks[ i] = new ReentrantReadWriteLock();\n+    }\n     }\n-  }\n \n-  public void readLock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].readLock().lock();\n-  }\n+    public void readLock(Object obj) {\n+    this.locks[ Math.abs(obj.hashCode()%\n+                             lockSize)].readLock().lock();\n+    }\n \n-  public void readUnlock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].readLock().unlock();\n-  }\n+    public void readUnlock(Object obj) {\n+    this.locks[ Math.abs(obj.hashCode()%\n+                             lockSize)].readLock().unlock();\n+    }\n \n-  public void writeLock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().lock();\n-  }\n+    public void writeLock(Object obj) {\n+    this.locks[ Math.abs(obj.hashCode()%\n+                             lockSize)].writeLock().lock();\n+    }\n \n-  public void writeUnlock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().unlock();\n-  }\n+    public void writeUnlock(Object obj) {\n+    this.locks[ Math.abs(obj.hashCode()%\n+                             lockSize)].writeLock().unlock();\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'db' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/15/HashLock.java\nindex c55ecb9942..537136122e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/15/HashLock.java\n@@ -16,7 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.concurrent;\n+package org.apache.iotdb.\n+\n+db.concurrent;\n \n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'org' has incorrect indentation level 0, expected level should be 5.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 7, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/15/HashLock.java\nindex c55ecb9942..54d9df6621 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/15/HashLock.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/15/HashLock.java\n@@ -15,49 +15,50 @@\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n  * under the License.\n- */\n-package org.apache.iotdb.db.concurrent;\n+ */package\n+org.apache.iotdb.db.concurrent;\n \n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n+ import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n-/**\n+ /**\n  * This class manages an array of locks and use the hash code of an object as an index of\n  * the array to find the corresponding lock, so that the operations on the same key (string)\n  * can be prevented while the number of locks remain controlled.\n  */\n-public class HashLock {\n+ public class HashLock {\n \n-  private static final int DEFAULT_LOCK_NUM = 100;\n+   private static final int DEFAULT_LOCK_NUM = 100;\n \n-  private ReentrantReadWriteLock[] locks;\n-  private int lockSize;\n+   private ReentrantReadWriteLock[] locks;\n+   private int lockSize;\n \n-  public HashLock() {\n-    this.lockSize = DEFAULT_LOCK_NUM;\n-    init();\n-  }\n+   public HashLock() {\n+     this.lockSize = DEFAULT_LOCK_NUM;\n+     init();\n+   }\n \n-  private void init() {\n-    locks = new ReentrantReadWriteLock[lockSize];\n-    for (int i = 0; i < lockSize; i++) {\n-      locks[i] = new ReentrantReadWriteLock();\n-    }\n-  }\n+   private void init() {\n+     locks = new ReentrantReadWriteLock[lockSize];\n+     for (int i = 0; i < lockSize; i++) {\n+       locks[i] = new ReentrantReadWriteLock();\n+     }\n+   }\n \n-  public void readLock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].readLock().lock();\n-  }\n+   public void readLock(Object obj) {\n+     this.locks[Math.abs(obj.hashCode() % lockSize)].readLock().lock();\n+   }\n \n-  public void readUnlock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].readLock().unlock();\n-  }\n+   public void readUnlock(Object obj) {\n+     this.locks[Math.abs(obj.hashCode() % lockSize)].readLock().unlock();\n+   }\n \n-  public void writeLock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().lock();\n-  }\n+   public void writeLock(Object obj) {\n+     this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().lock();\n+   }\n \n-  public void writeUnlock(Object obj) {\n-    this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().unlock();\n-  }\n+   public void writeUnlock(Object obj) {\n+     this.locks[Math.abs(obj.hashCode() % lockSize)].writeLock().unlock();\n+   }\n \n-}\n+ }\n+ \n\\ No newline at end of file\n",
            "diff_size": 32
        }
    ]
}