{
    "error_id": "127",
    "information": {
        "errors": [
            {
                "line": "33",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n\n  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n\n  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/127/ResponseHeader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/127/ResponseHeader.java\nindex 262ac71874..6e22b3916e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/127/ResponseHeader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/127/ResponseHeader.java\n@@ -30,8 +30,9 @@ public class ResponseHeader {\n   // TODO : refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n+  private static RootDeserializer<ResponseHeader> rootDeserializer =\n+      protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n+          .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n       .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/127/ResponseHeader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/127/ResponseHeader.java\nindex 262ac71874..a69dd2cece 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/127/ResponseHeader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/127/ResponseHeader.java\n@@ -96,4 +96,4 @@ public class ResponseHeader {\n   public void setHeaders(Headers headers) {\n     this.headers = headers;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "column": "19",
                    "severity": "warning",
                    "message": "'>' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/127/ResponseHeader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/127/ResponseHeader.java\nindex 262ac71874..5e832ddfe0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/127/ResponseHeader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/127/ResponseHeader.java\n@@ -30,70 +30,70 @@ public class ResponseHeader {\n   // TODO : refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n+  private static RootDeserializer <\n+    ResponseHeader > rootDeserializer = protoMapperFactory .createFromName(\"ResponseHeader.proto\").createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n \n-  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n+private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n+    .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n \n-  public static RootSerializer getRootSerializer() {\n-    return rootSerializer;\n-  }\n+public static RootSerializer getRootSerializer() {\n+  return rootSerializer;\n+}\n \n-  public static ResponseHeader readObject(Buffer bodyBuffer) throws Exception {\n-    return rootDeserializer.deserialize(bodyBuffer.getBytes());\n-  }\n+public static ResponseHeader readObject(Buffer bodyBuffer) throws Exception {\n+  return rootDeserializer.deserialize(bodyBuffer.getBytes());\n+}\n \n-  // \u8fd0\u884c\u65f6\u5fc5\u987b\u7684\u6570\u636e\uff0c\u6bd4\u5982body\u662f\u5426\u538b\u7f29\n-  // \u9884\u7559\u7279\u6027\u9009\u9879\n-  private int flags;\n+// \u8fd0\u884c\u65f6\u5fc5\u987b\u7684\u6570\u636e\uff0c\u6bd4\u5982body\u662f\u5426\u538b\u7f29\n+// \u9884\u7559\u7279\u6027\u9009\u9879\n+private int flags;\n \n-  private int statusCode;\n+private int statusCode;\n \n-  private String reasonPhrase;\n+private String reasonPhrase;\n \n-  private Map<String, String> context;\n+private Map<String, String> context;\n \n-  private Headers headers = new Headers();\n+private Headers headers = new Headers();\n \n-  public int getFlags() {\n-    return flags;\n-  }\n+public int getFlags() {\n+  return flags;\n+}\n \n-  public void setFlags(int flags) {\n-    this.flags = flags;\n-  }\n+public void setFlags(int flags) {\n+  this.flags = flags;\n+}\n \n-  //CHECKSTYLE:ON: magicnumber\n-  public int getStatusCode() {\n-    return statusCode;\n-  }\n+//CHECKSTYLE:ON: magicnumber\n+public int getStatusCode() {\n+  return statusCode;\n+}\n \n-  public void setStatusCode(int statusCode) {\n-    this.statusCode = statusCode;\n-  }\n+public void setStatusCode(int statusCode) {\n+  this.statusCode = statusCode;\n+}\n \n-  public String getReasonPhrase() {\n-    return reasonPhrase;\n-  }\n+public String getReasonPhrase() {\n+  return reasonPhrase;\n+}\n \n-  public void setReasonPhrase(String reason) {\n-    this.reasonPhrase = reason;\n-  }\n+public void setReasonPhrase(String reason) {\n+  this.reasonPhrase = reason;\n+}\n \n-  public Map<String, String> getContext() {\n-    return context;\n-  }\n+public Map<String, String> getContext() {\n+  return context;\n+}\n \n-  public void setContext(Map<String, String> context) {\n-    this.context = context;\n-  }\n+public void setContext(Map<String, String> context) {\n+  this.context = context;\n+}\n \n-  public Headers getHeaders() {\n-    return headers;\n-  }\n+public Headers getHeaders() {\n+  return headers;\n+}\n \n-  public void setHeaders(Headers headers) {\n-    this.headers = headers;\n-  }\n+public void setHeaders(Headers headers) {\n+  this.headers = headers;\n+}\n }\n",
            "diff_size": 48
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}