{
    "error_id": "310",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/310/InitParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/310/InitParam.java\nindex ef43f504fb..f3ac999526 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/310/InitParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/310/InitParam.java\n@@ -29,56 +29,56 @@ import java.util.List;\n public class InitParam extends UpdateParam {\n \n \n-  private int numPartitions;\n-  private int maxIndex;\n-  private int maxLength;\n-  private int negative;\n-  private int order;\n-  private int partDim;\n-  private int window;\n+    private int numPartitions;\n+    private int maxIndex;\n+    private int maxLength;\n+    private int negative;\n+    private int order;\n+    private int partDim;\n+    private int window;\n \n-  public InitParam(int matrixId,\n-                   int numPartitions,\n-                   int maxIndex,\n-                   int maxLength,\n-                   int negative,\n-                   int order,\n-                   int partDim,\n-                   int window) {\n-    super(matrixId);\n+    public InitParam(int matrixId,\n+                     int numPartitions,\n+                     int maxIndex,\n+                     int maxLength,\n+                     int negative,\n+                     int order,\n+                     int partDim,\n+                     int window) {\n+        super(matrixId);\n \n-    this.numPartitions = numPartitions;\n-    this.maxIndex = maxIndex;\n-    this.maxLength = maxLength;\n-    this.negative = negative;\n-    this.order = order;\n-    this.partDim = partDim;\n-    this.window = window;\n-  }\n+        this.numPartitions = numPartitions;\n+        this.maxIndex = maxIndex;\n+        this.maxLength = maxLength;\n+        this.negative = negative;\n+        this.order = order;\n+        this.partDim = partDim;\n+        this.window = window;\n+    }\n \n-  @Override\n-  public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-        .getPartitions(matrixId);\n+    @Override\n+    public List<PartitionUpdateParam> split() {\n+        List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n+                .getPartitions(matrixId);\n \n-    IntOpenHashSet serverIds = new IntOpenHashSet();\n-    List<PartitionUpdateParam> params = new ArrayList<>();\n-    for (PartitionKey pkey : pkeys) {\n-      int serverId = PSAgentContext.get().getMatrixMetaManager()\n-          .getMasterPS(pkey).getIndex();\n-      if (!serverIds.contains(serverId)) {\n-        serverIds.add(serverId);\n-        params.add(new InitPartitionParam(matrixId,\n-            pkey,\n-            numPartitions,\n-            maxIndex,\n-            maxLength,\n-            negative,\n-            order,\n-            partDim,\n-            window));\n-      }\n+        IntOpenHashSet serverIds = new IntOpenHashSet();\n+        List<PartitionUpdateParam> params = new ArrayList<>();\n+        for (PartitionKey pkey : pkeys) {\n+            int serverId = PSAgentContext.get().getMatrixMetaManager()\n+                    .getMasterPS(pkey).getIndex();\n+            if (!serverIds.contains(serverId)) {\n+                serverIds.add(serverId);\n+                params.add(new InitPartitionParam(matrixId,\n+                        pkey,\n+                        numPartitions,\n+                        maxIndex,\n+                        maxLength,\n+                        negative,\n+                        order,\n+                        partDim,\n+                        window));\n+            }\n+        }\n+        return params;\n     }\n-    return params;\n-  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/310/InitParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/310/InitParam.java\nindex ef43f504fb..2b52342e6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/310/InitParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/310/InitParam.java\n@@ -27,8 +27,6 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class InitParam extends UpdateParam {\n-\n-\n   private int numPartitions;\n   private int maxIndex;\n   private int maxLength;\n@@ -37,17 +35,15 @@ public class InitParam extends UpdateParam {\n   private int partDim;\n   private int window;\n \n-  public InitParam(int matrixId,\n-                   int numPartitions,\n+  public InitParam(int matrixId, int numPartitions,\n                    int maxIndex,\n                    int maxLength,\n                    int negative,\n                    int order,\n                    int partDim,\n                    int window) {\n-    super(matrixId);\n-\n-    this.numPartitions = numPartitions;\n+  super(matrixId);\n+this.numPartitions = numPartitions;\n     this.maxIndex = maxIndex;\n     this.maxLength = maxLength;\n     this.negative = negative;\n@@ -60,16 +56,14 @@ public class InitParam extends UpdateParam {\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n         .getPartitions(matrixId);\n-\n-    IntOpenHashSet serverIds = new IntOpenHashSet();\n+IntOpenHashSet serverIds = new IntOpenHashSet();\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n       int serverId = PSAgentContext.get().getMatrixMetaManager()\n           .getMasterPS(pkey).getIndex();\n-      if (!serverIds.contains(serverId)) {\n+if (!serverIds.contains(serverId)) {\n         serverIds.add(serverId);\n-        params.add(new InitPartitionParam(matrixId,\n-            pkey,\n+        params.add(new InitPartitionParam(matrixId, pkey,\n             numPartitions,\n             maxIndex,\n             maxLength,\n@@ -81,4 +75,4 @@ public class InitParam extends UpdateParam {\n     }\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/310/InitParam.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/310/InitParam.java\nindex ef43f504fb..2f4fff0623 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/310/InitParam.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/310/InitParam.java\n@@ -22,31 +22,26 @@ import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n import com.tencent.angel.psagent.PSAgentContext;\n import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n public class InitParam extends UpdateParam {\n+    private int numPartitions;\n+    private int maxIndex;\n+    private int maxLength;\n+    private int negative;\n+    private int order;\n+    private int partDim;\n+    private int window;\n \n-\n-  private int numPartitions;\n-  private int maxIndex;\n-  private int maxLength;\n-  private int negative;\n-  private int order;\n-  private int partDim;\n-  private int window;\n-\n-  public InitParam(int matrixId,\n-                   int numPartitions,\n-                   int maxIndex,\n-                   int maxLength,\n-                   int negative,\n-                   int order,\n-                   int partDim,\n-                   int window) {\n+    public InitParam(int matrixId,\n+                     int numPartitions,\n+                     int maxIndex,\n+                     int maxLength,\n+                     int negative,\n+                     int order,\n+                     int partDim, int window) {\n     super(matrixId);\n-\n     this.numPartitions = numPartitions;\n     this.maxIndex = maxIndex;\n     this.maxLength = maxLength;\n@@ -54,31 +49,20 @@ public class InitParam extends UpdateParam {\n     this.order = order;\n     this.partDim = partDim;\n     this.window = window;\n-  }\n-\n-  @Override\n-  public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-        .getPartitions(matrixId);\n+    }\n \n+    @Override\n+    public List<PartitionUpdateParam> split() {\n+    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n     IntOpenHashSet serverIds = new IntOpenHashSet();\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n-      int serverId = PSAgentContext.get().getMatrixMetaManager()\n-          .getMasterPS(pkey).getIndex();\n-      if (!serverIds.contains(serverId)) {\n+        int serverId = PSAgentContext.get().getMatrixMetaManager().getMasterPS(pkey).getIndex();\n+        if (!serverIds.contains(serverId)) {\n         serverIds.add(serverId);\n-        params.add(new InitPartitionParam(matrixId,\n-            pkey,\n-            numPartitions,\n-            maxIndex,\n-            maxLength,\n-            negative,\n-            order,\n-            partDim,\n-            window));\n-      }\n+        params.add(new InitPartitionParam(matrixId, pkey, numPartitions, maxIndex, maxLength, negative, order, partDim, window));\n+        }\n     }\n     return params;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}