{
    "error_id": "894",
    "information": {
        "errors": [
            {
                "line": "263",
                "column": "59",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    @Bean\n    @ConditionalOnMissingBean\n    public APIDeploymentConverter apiDeploymentConverter(){\n        return new APIDeploymentConverter();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/894/ProcessRuntimeAutoConfiguration.java\nindex 55c1d860ff..b78a29c317 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/894/ProcessRuntimeAutoConfiguration.java\n@@ -260,7 +260,7 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public APIDeploymentConverter apiDeploymentConverter(){\n+    public APIDeploymentConverter apiDeploymentConverter() {\n         return new APIDeploymentConverter();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/894/ProcessRuntimeAutoConfiguration.java\nindex 55c1d860ff..4feec42cb3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/894/ProcessRuntimeAutoConfiguration.java\n@@ -233,9 +233,9 @@ public class ProcessRuntimeAutoConfiguration {\n                                                                VariableValidationService variableValidationService,\n                                                                VariablesMappingProvider mappingProvider) {\n         return new ProcessVariablesInitiator(processExtensionService,\n-                                             variableParsingService,\n-                                             variableValidationService,\n-                                             mappingProvider);\n+                variableParsingService,\n+                variableValidationService,\n+                mappingProvider);\n     }\n \n     @Bean\n@@ -260,7 +260,7 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public APIDeploymentConverter apiDeploymentConverter(){\n+    public APIDeploymentConverter apiDeploymentConverter() {\n         return new APIDeploymentConverter();\n     }\n \n@@ -565,7 +565,7 @@ public class ProcessRuntimeAutoConfiguration {\n                                                                                  @Autowired(required = false) List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> eventListeners,\n                                                                                  MessageSubscriptionConverter converter) {\n         return () -> runtimeService.addEventListener(new MessageSubscriptionCancelledListenerDelegate(getInitializedListeners(eventListeners),\n-                                                                                                      new ToMessageSubscriptionCancelledConverter(converter)),\n-                                                     ActivitiEventType.ENTITY_DELETED);\n+                        new ToMessageSubscriptionCancelledConverter(converter)),\n+                ActivitiEventType.ENTITY_DELETED);\n     }\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/894/ProcessRuntimeAutoConfiguration.java\nindex 55c1d860ff..3de8bb33ba 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/894/ProcessRuntimeAutoConfiguration.java\n@@ -157,7 +157,7 @@ public class ProcessRuntimeAutoConfiguration {\n     @ConditionalOnMissingBean(ReceiveMessagePayloadEventListener.class)\n     public ReceiveMessagePayloadEventListener receiveMessagePayloadEventListener(RuntimeService runtimeService,\n                                                                                  ManagementService managementService) {\n-        return new RuntimeReceiveMessagePayloadEventListener(runtimeService,\n+    return new RuntimeReceiveMessagePayloadEventListener(runtimeService,\n                 managementService);\n     }\n \n@@ -228,11 +228,10 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public ProcessVariablesInitiator processVariablesInitiator(ProcessExtensionService processExtensionService,\n-                                                               VariableParsingService variableParsingService,\n+    public ProcessVariablesInitiator processVariablesInitiator(ProcessExtensionService processExtensionService, VariableParsingService variableParsingService,\n                                                                VariableValidationService variableValidationService,\n                                                                VariablesMappingProvider mappingProvider) {\n-        return new ProcessVariablesInitiator(processExtensionService,\n+    return new ProcessVariablesInitiator(processExtensionService,\n                                              variableParsingService,\n                                              variableValidationService,\n                                              mappingProvider);\n@@ -240,12 +239,11 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public ProcessVariablesPayloadValidator processVariablesValidator(DateFormatterProvider dateFormatterProvider,\n-                                                                      ProcessExtensionService processExtensionService,\n+    public ProcessVariablesPayloadValidator processVariablesValidator(DateFormatterProvider dateFormatterProvider, ProcessExtensionService processExtensionService,\n                                                                       VariableValidationService variableValidationService,\n                                                                       VariableNameValidator variableNameValidator,\n                                                                       ExpressionResolver expressionResolver) {\n-        return new ProcessVariablesPayloadValidator(dateFormatterProvider,\n+    return new ProcessVariablesPayloadValidator(dateFormatterProvider,\n                 processExtensionService,\n                 variableValidationService,\n                 variableNameValidator,\n@@ -260,7 +258,7 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public APIDeploymentConverter apiDeploymentConverter(){\n+    public APIDeploymentConverter apiDeploymentConverter() {\n         return new APIDeploymentConverter();\n     }\n \n@@ -503,9 +501,9 @@ public class ProcessRuntimeAutoConfiguration {\n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerRetriesDecrementedListenerDelegate\")\n     public InitializingBean registerTimerRetriesDecrementedListenerDelegate(RuntimeService runtimeService,\n-                                                                            @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerRetriesDecrementedEvent>> eventListeners,\n+                                                                    @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerRetriesDecrementedEvent>> eventListeners,\n                                                                             BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerRetriesDecrementedListenerDelegate(getInitializedListeners(eventListeners),\n+  return () -> runtimeService.addEventListener(new TimerRetriesDecrementedListenerDelegate(getInitializedListeners(eventListeners),\n                         new ToTimerRetriesDecrementedConverter(bpmnTimerConverter)),\n                 ActivitiEventType.JOB_RETRIES_DECREMENTED);\n     }\n@@ -562,10 +560,9 @@ public class ProcessRuntimeAutoConfiguration {\n     @Bean\n     @ConditionalOnMissingBean(name = \"registerMessageSubscriptionCancelledListenerDelegate\")\n     public InitializingBean registerMessageSubscriptionCancelledListenerDelegate(RuntimeService runtimeService,\n-                                                                                 @Autowired(required = false) List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> eventListeners,\n+                                                                    @Autowired(required = false) List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> eventListeners,\n                                                                                  MessageSubscriptionConverter converter) {\n-        return () -> runtimeService.addEventListener(new MessageSubscriptionCancelledListenerDelegate(getInitializedListeners(eventListeners),\n-                                                                                                      new ToMessageSubscriptionCancelledConverter(converter)),\n-                                                     ActivitiEventType.ENTITY_DELETED);\n+  return () -> runtimeService.addEventListener(new MessageSubscriptionCancelledListenerDelegate(getInitializedListeners(eventListeners),\n+                new ToMessageSubscriptionCancelledConverter(converter)), ActivitiEventType.ENTITY_DELETED);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 540).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 271).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/894/ProcessRuntimeAutoConfiguration.java\nindex 55c1d860ff..dfa3aa30cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/894/ProcessRuntimeAutoConfiguration.java\n@@ -17,9 +17,7 @@\n package org.activiti.runtime.api.conf;\n \n import static java.util.Collections.emptyList;\n-\n import java.util.List;\n-\n import org.activiti.api.process.model.events.BPMNActivityCancelledEvent;\n import org.activiti.api.process.model.events.BPMNActivityCompletedEvent;\n import org.activiti.api.process.model.events.BPMNActivityStartedEvent;\n@@ -144,98 +142,65 @@ public class ProcessRuntimeAutoConfiguration {\n     /**\n      * Creates default SignalPayloadEventListener bean if no existing bean found in ApplicationContext.\n      */\n+\n     @Bean\n     @ConditionalOnMissingBean(SignalPayloadEventListener.class)\n     public SignalPayloadEventListener signalPayloadEventListener(RuntimeService runtimeService) {\n-        return new RuntimeSignalPayloadEventListener(runtimeService);\n+    return new RuntimeSignalPayloadEventListener(runtimeService);\n     }\n \n     /**\n      * Creates default MessagePayloadEventListener bean if no existing bean found in ApplicationContext.\n      */\n+\n     @Bean\n     @ConditionalOnMissingBean(ReceiveMessagePayloadEventListener.class)\n-    public ReceiveMessagePayloadEventListener receiveMessagePayloadEventListener(RuntimeService runtimeService,\n-                                                                                 ManagementService managementService) {\n-        return new RuntimeReceiveMessagePayloadEventListener(runtimeService,\n-                managementService);\n+    public ReceiveMessagePayloadEventListener receiveMessagePayloadEventListener(RuntimeService runtimeService, ManagementService managementService) {\n+    return new RuntimeReceiveMessagePayloadEventListener(runtimeService, managementService);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(EventSubscriptionPayloadMappingProvider.class)\n     public EventSubscriptionPayloadMappingProvider eventSubscriptionPayloadMappingProvider(VariablesMappingProvider variablesMappingProvider) {\n-        return new EventSubscriptionVariablesMappingProvider(variablesMappingProvider);\n+    return new EventSubscriptionVariablesMappingProvider(variablesMappingProvider);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public ProcessRuntime processRuntime(RepositoryService repositoryService,\n-                                         APIProcessDefinitionConverter processDefinitionConverter,\n-                                         RuntimeService runtimeService,\n-                                         ProcessSecurityPoliciesManager securityPoliciesManager,\n-                                         APIProcessInstanceConverter processInstanceConverter,\n-                                         APIVariableInstanceConverter variableInstanceConverter,\n-                                         APIDeploymentConverter apiDeploymentConverter,\n-                                         ProcessRuntimeConfiguration processRuntimeConfiguration,\n-                                         ApplicationEventPublisher eventPublisher,\n-                                         ProcessVariablesPayloadValidator processVariablesValidator) {\n-        return new ProcessRuntimeImpl(repositoryService,\n-                processDefinitionConverter,\n-                runtimeService,\n-                securityPoliciesManager,\n-                processInstanceConverter,\n-                variableInstanceConverter,\n-                apiDeploymentConverter,\n-                processRuntimeConfiguration,\n-                eventPublisher,\n-                processVariablesValidator);\n+    public ProcessRuntime processRuntime(RepositoryService repositoryService, APIProcessDefinitionConverter processDefinitionConverter, RuntimeService runtimeService, ProcessSecurityPoliciesManager securityPoliciesManager, APIProcessInstanceConverter processInstanceConverter, APIVariableInstanceConverter variableInstanceConverter, APIDeploymentConverter apiDeploymentConverter, ProcessRuntimeConfiguration processRuntimeConfiguration, ApplicationEventPublisher eventPublisher, ProcessVariablesPayloadValidator processVariablesValidator) {\n+    return new ProcessRuntimeImpl(repositoryService, processDefinitionConverter, runtimeService, securityPoliciesManager, processInstanceConverter, variableInstanceConverter, apiDeploymentConverter, processRuntimeConfiguration, eventPublisher, processVariablesValidator);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public ProcessAdminRuntime processAdminRuntime(RepositoryService repositoryService,\n-                                                   APIProcessDefinitionConverter processDefinitionConverter,\n-                                                   RuntimeService runtimeService,\n-                                                   APIProcessInstanceConverter processInstanceConverter,\n-                                                   ApplicationEventPublisher eventPublisher,\n-                                                   ProcessVariablesPayloadValidator processVariablesValidator) {\n-        return new ProcessAdminRuntimeImpl(repositoryService,\n-                processDefinitionConverter,\n-                runtimeService,\n-                processInstanceConverter,\n-                eventPublisher,\n-                processVariablesValidator\n-        );\n+    public ProcessAdminRuntime processAdminRuntime(RepositoryService repositoryService, APIProcessDefinitionConverter processDefinitionConverter, RuntimeService runtimeService, APIProcessInstanceConverter processInstanceConverter, ApplicationEventPublisher eventPublisher, ProcessVariablesPayloadValidator processVariablesValidator) {\n+    return new ProcessAdminRuntimeImpl(repositoryService, processDefinitionConverter, runtimeService, processInstanceConverter, eventPublisher, processVariablesValidator);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public MessageSubscriptionConverter messageEventSubscriptionConverter() {\n-        return new MessageSubscriptionConverter();\n+    return new MessageSubscriptionConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public StartMessageSubscriptionConverter startMessageEventSubscriptionConverter() {\n-        return new StartMessageSubscriptionConverter();\n+    return new StartMessageSubscriptionConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public APIProcessDefinitionConverter apiProcessDefinitionConverter(RepositoryService repositoryService) {\n-        return new APIProcessDefinitionConverter(repositoryService);\n+    return new APIProcessDefinitionConverter(repositoryService);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ProcessVariablesInitiator processVariablesInitiator(ProcessExtensionService processExtensionService,\n                                                                VariableParsingService variableParsingService,\n-                                                               VariableValidationService variableValidationService,\n-                                                               VariablesMappingProvider mappingProvider) {\n-        return new ProcessVariablesInitiator(processExtensionService,\n-                                             variableParsingService,\n-                                             variableValidationService,\n-                                             mappingProvider);\n+                                                               VariableValidationService variableValidationService, VariablesMappingProvider mappingProvider) {\n+    return new ProcessVariablesInitiator(processExtensionService, variableParsingService, variableValidationService, mappingProvider);\n     }\n \n     @Bean\n@@ -243,166 +208,147 @@ public class ProcessRuntimeAutoConfiguration {\n     public ProcessVariablesPayloadValidator processVariablesValidator(DateFormatterProvider dateFormatterProvider,\n                                                                       ProcessExtensionService processExtensionService,\n                                                                       VariableValidationService variableValidationService,\n-                                                                      VariableNameValidator variableNameValidator,\n-                                                                      ExpressionResolver expressionResolver) {\n-        return new ProcessVariablesPayloadValidator(dateFormatterProvider,\n-                processExtensionService,\n-                variableValidationService,\n-                variableNameValidator,\n-                expressionResolver);\n+                                                                      VariableNameValidator variableNameValidator, ExpressionResolver expressionResolver) {\n+    return new ProcessVariablesPayloadValidator(dateFormatterProvider, processExtensionService, variableValidationService, variableNameValidator, expressionResolver);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public APIProcessInstanceConverter apiProcessInstanceConverter() {\n-        return new APIProcessInstanceConverter();\n+    return new APIProcessInstanceConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public APIDeploymentConverter apiDeploymentConverter(){\n-        return new APIDeploymentConverter();\n+    public APIDeploymentConverter apiDeploymentConverter() {\n+    return new APIDeploymentConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ProcessRuntimeConfiguration processRuntimeConfiguration(@Autowired(required = false) List<ProcessRuntimeEventListener<?>> processRuntimeEventListeners,\n                                                                    @Autowired(required = false) List<VariableEventListener<?>> variableEventListeners) {\n-        return new ProcessRuntimeConfigurationImpl(getInitializedListeners(processRuntimeEventListeners),\n-                getInitializedListeners(variableEventListeners));\n+    return new ProcessRuntimeConfigurationImpl(getInitializedListeners(processRuntimeEventListeners), getInitializedListeners(variableEventListeners));\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToAPIProcessStartedEventConverter apiProcessStartedEventConverter(APIProcessInstanceConverter processInstanceConverter) {\n-        return new ToAPIProcessStartedEventConverter(processInstanceConverter);\n+    return new ToAPIProcessStartedEventConverter(processInstanceConverter);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToAPIProcessCreatedEventConverter apiProcessCreatedEventConverter(APIProcessInstanceConverter processInstanceConverter) {\n-        return new ToAPIProcessCreatedEventConverter(processInstanceConverter);\n+    return new ToAPIProcessCreatedEventConverter(processInstanceConverter);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToProcessUpdatedConverter processUpdatedConverter(APIProcessInstanceConverter processInstanceConverter) {\n-        return new ToProcessUpdatedConverter(processInstanceConverter);\n+    return new ToProcessUpdatedConverter(processInstanceConverter);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToProcessResumedConverter processResumedConverter(APIProcessInstanceConverter processInstanceConverter) {\n-        return new ToProcessResumedConverter(processInstanceConverter);\n+    return new ToProcessResumedConverter(processInstanceConverter);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToProcessSuspendedConverter processSuspendedConverter(APIProcessInstanceConverter processInstanceConverter) {\n-        return new ToProcessSuspendedConverter(processInstanceConverter);\n+    return new ToProcessSuspendedConverter(processInstanceConverter);\n     }\n \n     private <T> List<T> getInitializedListeners(List<T> eventListeners) {\n-        return eventListeners != null ? eventListeners : emptyList();\n+    return eventListeners != null ? eventListeners : emptyList();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessStartedEventListenerDelegate\")\n     public InitializingBean registerProcessStartedEventListenerDelegate(RuntimeService runtimeService,\n-                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessStartedEvent>> listeners,\n-                                                                        ToAPIProcessStartedEventConverter processStartedEventConverter) {\n-        return () -> runtimeService.addEventListener(new ProcessStartedListenerDelegate(getInitializedListeners(listeners),\n-                        processStartedEventConverter),\n-                ActivitiEventType.PROCESS_STARTED);\n+                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessStartedEvent>> listeners, ToAPIProcessStartedEventConverter processStartedEventConverter) {\n+    return () -> runtimeService.addEventListener(new ProcessStartedListenerDelegate(getInitializedListeners(listeners),\n+                                                                                    processStartedEventConverter), ActivitiEventType.PROCESS_STARTED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessCreatedEventListenerDelegate\")\n     public InitializingBean registerProcessCreatedEventListenerDelegate(RuntimeService runtimeService,\n-                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessCreatedEvent>> eventListeners,\n-                                                                        ToAPIProcessCreatedEventConverter converter) {\n-        return () -> runtimeService.addEventListener(new ProcessCreatedListenerDelegate(getInitializedListeners(eventListeners),\n-                        converter),\n-                ActivitiEventType.ENTITY_CREATED);\n+                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessCreatedEvent>> eventListeners, ToAPIProcessCreatedEventConverter converter) {\n+    return () -> runtimeService.addEventListener(new ProcessCreatedListenerDelegate(getInitializedListeners(eventListeners),\n+                                                                                    converter), ActivitiEventType.ENTITY_CREATED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessUpdatedEventListenerDelegate\")\n     public InitializingBean registerProcessUpdatedEventListenerDelegate(RuntimeService runtimeService,\n-                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessUpdatedEvent>> eventListeners,\n-                                                                        ToProcessUpdatedConverter converter) {\n-        return () -> runtimeService.addEventListener(new ProcessUpdatedListenerDelegate(getInitializedListeners(eventListeners),\n-                        converter),\n-                ActivitiEventType.ENTITY_UPDATED);\n+                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessUpdatedEvent>> eventListeners, ToProcessUpdatedConverter converter) {\n+    return () -> runtimeService.addEventListener(new ProcessUpdatedListenerDelegate(getInitializedListeners(eventListeners),\n+                                                                                    converter), ActivitiEventType.ENTITY_UPDATED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessSuspendedEventListenerDelegate\")\n     public InitializingBean registerProcessSuspendedEventListenerDelegate(RuntimeService runtimeService,\n-                                                                          @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessSuspendedEvent>> eventListeners,\n-                                                                          ToProcessSuspendedConverter converter) {\n-        return () -> runtimeService.addEventListener(new ProcessSuspendedListenerDelegate(getInitializedListeners(eventListeners),\n-                        converter),\n-                ActivitiEventType.ENTITY_SUSPENDED);\n+                                                                          @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessSuspendedEvent>> eventListeners, ToProcessSuspendedConverter converter) {\n+    return () -> runtimeService.addEventListener(new ProcessSuspendedListenerDelegate(getInitializedListeners(eventListeners),\n+                                                                                      converter), ActivitiEventType.ENTITY_SUSPENDED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessResumedEventListenerDelegate\")\n     public InitializingBean registerProcessResumedEventListenerDelegate(RuntimeService runtimeService,\n-                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessResumedEvent>> eventListeners,\n-                                                                        ToProcessResumedConverter converter) {\n-        return () -> runtimeService.addEventListener(new ProcessResumedEventListenerDelegate(getInitializedListeners(eventListeners),\n-                        converter),\n-                ActivitiEventType.ENTITY_ACTIVATED);\n+                                                                        @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessResumedEvent>> eventListeners, ToProcessResumedConverter converter) {\n+    return () -> runtimeService.addEventListener(new ProcessResumedEventListenerDelegate(getInitializedListeners(eventListeners),\n+                                                                                         converter), ActivitiEventType.ENTITY_ACTIVATED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToProcessCompletedConverter processCompletedConverter(APIProcessInstanceConverter processInstanceConverter) {\n-        return new ToProcessCompletedConverter(processInstanceConverter);\n+    return new ToProcessCompletedConverter(processInstanceConverter);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessCompletedListenerDelegate\")\n     public InitializingBean registerProcessCompletedListenerDelegate(RuntimeService runtimeService,\n-                                                                     @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessCompletedEvent>> eventListeners,\n-                                                                     ToProcessCompletedConverter converter) {\n-        return () -> runtimeService.addEventListener(new ProcessCompletedListenerDelegate(getInitializedListeners(eventListeners),\n-                        converter),\n-                ActivitiEventType.PROCESS_COMPLETED);\n+                                                                     @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessCompletedEvent>> eventListeners, ToProcessCompletedConverter converter) {\n+    return () -> runtimeService.addEventListener(new ProcessCompletedListenerDelegate(getInitializedListeners(eventListeners),\n+                                                                                      converter), ActivitiEventType.PROCESS_COMPLETED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerProcessCancelledListenerDelegate\")\n     public InitializingBean registerProcessCancelledListenerDelegate(RuntimeService runtimeService,\n                                                                      @Autowired(required = false) List<ProcessRuntimeEventListener<ProcessCancelledEvent>> eventListeners) {\n-        return () -> runtimeService.addEventListener(new ProcessCancelledListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToProcessCancelledConverter()),\n-                ActivitiEventType.PROCESS_CANCELLED);\n+    return () -> runtimeService.addEventListener(new ProcessCancelledListenerDelegate(getInitializedListeners(eventListeners),\n+        new ToProcessCancelledConverter()), ActivitiEventType.PROCESS_CANCELLED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToActivityConverter activityConverter() {\n-        return new ToActivityConverter();\n+    return new ToActivityConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public ToSignalConverter signalConverter() {\n-        return new ToSignalConverter();\n+    return new ToSignalConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public BPMNTimerConverter bpmnTimerConveter() {\n-        return new BPMNTimerConverter();\n+    return new BPMNTimerConverter();\n     }\n \n     @Bean\n     @ConditionalOnMissingBean\n     public BPMNMessageConverter bpmnMessageConveter() {\n-        return new BPMNMessageConverter();\n+    return new BPMNMessageConverter();\n     }\n \n     @Bean\n@@ -413,159 +359,114 @@ public class ProcessRuntimeAutoConfiguration {\n     @Bean\n     @ConditionalOnMissingBean(name = \"registerActivityStartedListenerDelegate\")\n     public InitializingBean registerActivityStartedListenerDelegate(RuntimeService runtimeService,\n-                                                                    @Autowired(required = false) List<BPMNElementEventListener<BPMNActivityStartedEvent>> eventListeners,\n-                                                                    ToActivityConverter activityConverter) {\n-        return () -> runtimeService.addEventListener(new ActivityStartedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToActivityStartedConverter(activityConverter)),\n-                ActivitiEventType.ACTIVITY_STARTED);\n+                                                                    @Autowired(required = false) List<BPMNElementEventListener<BPMNActivityStartedEvent>> eventListeners, ToActivityConverter activityConverter) {\n+    return () -> runtimeService.addEventListener(new ActivityStartedListenerDelegate(getInitializedListeners(eventListeners), new ToActivityStartedConverter(activityConverter)), ActivitiEventType.ACTIVITY_STARTED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerActivityCompletedListenerDelegate\")\n     public InitializingBean registerActivityCompletedListenerDelegate(RuntimeService runtimeService,\n-                                                                      @Autowired(required = false) List<BPMNElementEventListener<BPMNActivityCompletedEvent>> eventListeners,\n-                                                                      ToActivityConverter activityConverter) {\n-        return () -> runtimeService.addEventListener(new ActivityCompletedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToActivityCompletedConverter(activityConverter)),\n-                ActivitiEventType.ACTIVITY_COMPLETED);\n+                                                                      @Autowired(required = false) List<BPMNElementEventListener<BPMNActivityCompletedEvent>> eventListeners, ToActivityConverter activityConverter) {\n+    return () -> runtimeService.addEventListener(new ActivityCompletedListenerDelegate(getInitializedListeners(eventListeners), new ToActivityCompletedConverter(activityConverter)), ActivitiEventType.ACTIVITY_COMPLETED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerActivityCancelledListenerDelegate\")\n     public InitializingBean registerActivityCancelledListenerDelegate(RuntimeService runtimeService,\n-                                                                      @Autowired(required = false) List<BPMNElementEventListener<BPMNActivityCancelledEvent>> eventListeners,\n-                                                                      ToActivityConverter activityConverter) {\n-        return () -> runtimeService.addEventListener(new ActivityCancelledListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToActivityCancelledConverter(activityConverter)),\n-                ActivitiEventType.ACTIVITY_CANCELLED);\n+                                                                      @Autowired(required = false) List<BPMNElementEventListener<BPMNActivityCancelledEvent>> eventListeners, ToActivityConverter activityConverter) {\n+    return () -> runtimeService.addEventListener(new ActivityCancelledListenerDelegate(getInitializedListeners(eventListeners), new ToActivityCancelledConverter(activityConverter)), ActivitiEventType.ACTIVITY_CANCELLED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerActivitySignaledListenerDelegate\")\n     public InitializingBean registerActivitySignaledListenerDelegate(RuntimeService runtimeService,\n-                                                                     @Autowired(required = false) List<BPMNElementEventListener<BPMNSignalReceivedEvent>> eventListeners,\n-                                                                     ToSignalConverter signalConverter) {\n-        return () -> runtimeService.addEventListener(new SignalReceivedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToSignalReceivedConverter(signalConverter)),\n-                ActivitiEventType.ACTIVITY_SIGNALED);\n+                                                                     @Autowired(required = false) List<BPMNElementEventListener<BPMNSignalReceivedEvent>> eventListeners, ToSignalConverter signalConverter) {\n+    return () -> runtimeService.addEventListener(new SignalReceivedListenerDelegate(getInitializedListeners(eventListeners), new ToSignalReceivedConverter(signalConverter)), ActivitiEventType.ACTIVITY_SIGNALED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerFiredListenerDelegate\")\n     public InitializingBean registerTimerFiredListenerDelegate(RuntimeService runtimeService,\n-                                                               @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerFiredEvent>> eventListeners,\n-                                                               BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerFiredListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToTimerFiredConverter(bpmnTimerConverter)),\n-                ActivitiEventType.TIMER_FIRED);\n+                                                               @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerFiredEvent>> eventListeners, BPMNTimerConverter bpmnTimerConverter) {\n+    return () -> runtimeService.addEventListener(new TimerFiredListenerDelegate(getInitializedListeners(eventListeners), new ToTimerFiredConverter(bpmnTimerConverter)), ActivitiEventType.TIMER_FIRED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerScheduledListenerDelegate\")\n     public InitializingBean registerTimerScheduledListenerDelegate(RuntimeService runtimeService,\n-                                                                   @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerScheduledEvent>> eventListeners,\n-                                                                   BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerScheduledListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToTimerScheduledConverter(bpmnTimerConverter)),\n-                ActivitiEventType.TIMER_SCHEDULED);\n+                                                                   @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerScheduledEvent>> eventListeners, BPMNTimerConverter bpmnTimerConverter) {\n+    return () -> runtimeService.addEventListener(new TimerScheduledListenerDelegate(getInitializedListeners(eventListeners), new ToTimerScheduledConverter(bpmnTimerConverter)), ActivitiEventType.TIMER_SCHEDULED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerCancelledListenerDelegate\")\n     public InitializingBean registerTimerCancelledListenerDelegate(RuntimeService runtimeService,\n-                                                                   @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerCancelledEvent>> eventListeners,\n-                                                                   BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerCancelledListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToTimerCancelledConverter(bpmnTimerConverter)),\n-                ActivitiEventType.JOB_CANCELED);\n+                                                                   @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerCancelledEvent>> eventListeners, BPMNTimerConverter bpmnTimerConverter) {\n+    return () -> runtimeService.addEventListener(new TimerCancelledListenerDelegate(getInitializedListeners(eventListeners), new ToTimerCancelledConverter(bpmnTimerConverter)), ActivitiEventType.JOB_CANCELED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerFailedListenerDelegate\")\n     public InitializingBean registerTimerFailedListenerDelegate(RuntimeService runtimeService,\n-                                                                @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerFailedEvent>> eventListeners,\n-                                                                BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerFailedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToTimerFailedConverter(bpmnTimerConverter)),\n-                ActivitiEventType.JOB_EXECUTION_FAILURE);\n+                                                                @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerFailedEvent>> eventListeners, BPMNTimerConverter bpmnTimerConverter) {\n+    return () -> runtimeService.addEventListener(new TimerFailedListenerDelegate(getInitializedListeners(eventListeners), new ToTimerFailedConverter(bpmnTimerConverter)), ActivitiEventType.JOB_EXECUTION_FAILURE);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerExecutedListenerDelegate\")\n     public InitializingBean registerTimerExecutedListenerDelegate(RuntimeService runtimeService,\n-                                                                  @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerExecutedEvent>> eventListeners,\n-                                                                  BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerExecutedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToTimerExecutedConverter(bpmnTimerConverter)),\n-                ActivitiEventType.JOB_EXECUTION_SUCCESS);\n+                                                                  @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerExecutedEvent>> eventListeners, BPMNTimerConverter bpmnTimerConverter) {\n+    return () -> runtimeService.addEventListener(new TimerExecutedListenerDelegate(getInitializedListeners(eventListeners), new ToTimerExecutedConverter(bpmnTimerConverter)), ActivitiEventType.JOB_EXECUTION_SUCCESS);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerTimerRetriesDecrementedListenerDelegate\")\n     public InitializingBean registerTimerRetriesDecrementedListenerDelegate(RuntimeService runtimeService,\n-                                                                            @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerRetriesDecrementedEvent>> eventListeners,\n-                                                                            BPMNTimerConverter bpmnTimerConverter) {\n-        return () -> runtimeService.addEventListener(new TimerRetriesDecrementedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToTimerRetriesDecrementedConverter(bpmnTimerConverter)),\n-                ActivitiEventType.JOB_RETRIES_DECREMENTED);\n+                                                                            @Autowired(required = false) List<BPMNElementEventListener<BPMNTimerRetriesDecrementedEvent>> eventListeners, BPMNTimerConverter bpmnTimerConverter) {\n+    return () -> runtimeService.addEventListener(new TimerRetriesDecrementedListenerDelegate(getInitializedListeners(eventListeners), new ToTimerRetriesDecrementedConverter(bpmnTimerConverter)), ActivitiEventType.JOB_RETRIES_DECREMENTED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerMessageSentListenerDelegate\")\n     public InitializingBean registerMessageSentListenerDelegate(RuntimeService runtimeService,\n-                                                                @Autowired(required = false) List<BPMNElementEventListener<BPMNMessageSentEvent>> eventListeners,\n-                                                                BPMNMessageConverter bpmnMessageConverter) {\n-        return () -> runtimeService.addEventListener(new MessageSentListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToMessageSentConverter(bpmnMessageConverter)),\n-                ActivitiEventType.ACTIVITY_MESSAGE_SENT);\n+                                                                @Autowired(required = false) List<BPMNElementEventListener<BPMNMessageSentEvent>> eventListeners, BPMNMessageConverter bpmnMessageConverter) {\n+    return () -> runtimeService.addEventListener(new MessageSentListenerDelegate(getInitializedListeners(eventListeners), new ToMessageSentConverter(bpmnMessageConverter)), ActivitiEventType.ACTIVITY_MESSAGE_SENT);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerMessageReceivedListenerDelegate\")\n     public InitializingBean registerMessageReceivedListenerDelegate(RuntimeService runtimeService,\n-                                                                    @Autowired(required = false) List<BPMNElementEventListener<BPMNMessageReceivedEvent>> eventListeners,\n-                                                                    BPMNMessageConverter bpmnMessageConverter) {\n-        return () -> runtimeService.addEventListener(new MessageReceivedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToMessageReceivedConverter(bpmnMessageConverter)),\n-                ActivitiEventType.ACTIVITY_MESSAGE_RECEIVED);\n+                                                                    @Autowired(required = false) List<BPMNElementEventListener<BPMNMessageReceivedEvent>> eventListeners, BPMNMessageConverter bpmnMessageConverter) {\n+    return () -> runtimeService.addEventListener(new MessageReceivedListenerDelegate(getInitializedListeners(eventListeners), new ToMessageReceivedConverter(bpmnMessageConverter)), ActivitiEventType.ACTIVITY_MESSAGE_RECEIVED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerMessageWaitingListenerDelegate\")\n     public InitializingBean registerMessageWaitingListenerDelegate(RuntimeService runtimeService,\n-                                                                   @Autowired(required = false) List<BPMNElementEventListener<BPMNMessageWaitingEvent>> eventListeners,\n-                                                                   BPMNMessageConverter bpmnMessageConverter) {\n-        return () -> runtimeService.addEventListener(new MessageWaitingListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToMessageWaitingConverter(bpmnMessageConverter)),\n-                ActivitiEventType.ACTIVITY_MESSAGE_WAITING);\n+                                                                   @Autowired(required = false) List<BPMNElementEventListener<BPMNMessageWaitingEvent>> eventListeners, BPMNMessageConverter bpmnMessageConverter) {\n+    return () -> runtimeService.addEventListener(new MessageWaitingListenerDelegate(getInitializedListeners(eventListeners), new ToMessageWaitingConverter(bpmnMessageConverter)), ActivitiEventType.ACTIVITY_MESSAGE_WAITING);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerSequenceFlowTakenListenerDelegate\")\n     public InitializingBean registerSequenceFlowTakenListenerDelegate(RuntimeService runtimeService,\n                                                                       @Autowired(required = false) List<BPMNElementEventListener<BPMNSequenceFlowTakenEvent>> eventListeners) {\n-        return () -> runtimeService.addEventListener(new SequenceFlowTakenListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToSequenceFlowTakenConverter()),\n-                ActivitiEventType.SEQUENCEFLOW_TAKEN);\n+    return () -> runtimeService.addEventListener(new SequenceFlowTakenListenerDelegate(getInitializedListeners(eventListeners),\n+        new ToSequenceFlowTakenConverter()), ActivitiEventType.SEQUENCEFLOW_TAKEN);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerErrorReceviedListenerDelegate\")\n     public InitializingBean registerErrorReceviedListenerDelegate(RuntimeService runtimeService,\n-                                                                  @Autowired(required = false) List<BPMNElementEventListener<BPMNErrorReceivedEvent>> eventListeners,\n-                                                                  BPMNErrorConverter bpmnErrorConverter) {\n-        return () -> runtimeService.addEventListener(new ErrorReceivedListenerDelegate(getInitializedListeners(eventListeners),\n-                        new ToErrorReceivedConverter(bpmnErrorConverter)),\n-                ActivitiEventType.ACTIVITY_ERROR_RECEIVED);\n+                                                                  @Autowired(required = false) List<BPMNElementEventListener<BPMNErrorReceivedEvent>> eventListeners, BPMNErrorConverter bpmnErrorConverter) {\n+    return () -> runtimeService.addEventListener(new ErrorReceivedListenerDelegate(getInitializedListeners(eventListeners), new ToErrorReceivedConverter(bpmnErrorConverter)), ActivitiEventType.ACTIVITY_ERROR_RECEIVED);\n     }\n \n     @Bean\n     @ConditionalOnMissingBean(name = \"registerMessageSubscriptionCancelledListenerDelegate\")\n     public InitializingBean registerMessageSubscriptionCancelledListenerDelegate(RuntimeService runtimeService,\n-                                                                                 @Autowired(required = false) List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> eventListeners,\n-                                                                                 MessageSubscriptionConverter converter) {\n-        return () -> runtimeService.addEventListener(new MessageSubscriptionCancelledListenerDelegate(getInitializedListeners(eventListeners),\n-                                                                                                      new ToMessageSubscriptionCancelledConverter(converter)),\n-                                                     ActivitiEventType.ENTITY_DELETED);\n+                                                                                 @Autowired(required = false) List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> eventListeners, MessageSubscriptionConverter converter) {\n+    return () -> runtimeService.addEventListener(new MessageSubscriptionCancelledListenerDelegate(getInitializedListeners(eventListeners), new ToMessageSubscriptionCancelledConverter(converter)), ActivitiEventType.ENTITY_DELETED);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 188
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/894/ProcessRuntimeAutoConfiguration.java\nindex 55c1d860ff..b78a29c317 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/894/ProcessRuntimeAutoConfiguration.java\n@@ -260,7 +260,7 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public APIDeploymentConverter apiDeploymentConverter(){\n+    public APIDeploymentConverter apiDeploymentConverter() {\n         return new APIDeploymentConverter();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/894/ProcessRuntimeAutoConfiguration.java\nindex 55c1d860ff..b78a29c317 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/894/ProcessRuntimeAutoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/894/ProcessRuntimeAutoConfiguration.java\n@@ -260,7 +260,7 @@ public class ProcessRuntimeAutoConfiguration {\n \n     @Bean\n     @ConditionalOnMissingBean\n-    public APIDeploymentConverter apiDeploymentConverter(){\n+    public APIDeploymentConverter apiDeploymentConverter() {\n         return new APIDeploymentConverter();\n     }\n \n",
            "diff_size": 1
        }
    ]
}