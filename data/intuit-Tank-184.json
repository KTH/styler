{
    "error_id": "184",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "5",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     */\n    public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n        ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n        exceptionHandler.checkStatusCode(response);\n        FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/184/FilterServiceClient.java\nindex e1ee1dd23d..449c406283 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler/184/FilterServiceClient.java\n@@ -69,7 +69,7 @@ public class FilterServiceClient extends BaseRestClient {\n      * Get a list of filter groups.\n      */\n     public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/184/FilterServiceClient.java\nindex e1ee1dd23d..23a47131ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/intellij/184/FilterServiceClient.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.api.client.v1.filter;\n \n /*\n@@ -32,48 +33,44 @@ import com.intuit.tank.rest.util.ServiceConsants;\n \n /**\n  * AutomationServiceClient\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class FilterServiceClient extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + FilterService.SERVICE_RELATIVE_PATH;\n+  private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n+    + FilterService.SERVICE_RELATIVE_PATH;\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public FilterServiceClient(String serviceUrl) {\n-        super(serviceUrl, null, null);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public FilterServiceClient(String serviceUrl) {\n+    super(serviceUrl, null, null);\n+  }\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public FilterServiceClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n-        super(serviceUrl, proxyServer, proxyPort);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public FilterServiceClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n+    super(serviceUrl, proxyServer, proxyPort);\n+  }\n \n-    /**\n-     * \n-     * @return\n-     */\n-    protected String getServiceBaseUrl() {\n-        return SERVICE_BASE_URL;\n-    }\n+  /**\n+   * @return\n+   */\n+  protected String getServiceBaseUrl() {\n+    return SERVICE_BASE_URL;\n+  }\n \n-    /**\n-     * Get a list of filter groups.\n-     */\n-    public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n-        ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n-        exceptionHandler.checkStatusCode(response);\n-        FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n-        return container.getFilterGroups();\n-    }\n+  /**\n+   * Get a list of filter groups.\n+   */\n+  public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n+    ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n+    exceptionHandler.checkStatusCode(response);\n+    FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n+    return container.getFilterGroups();\n+  }\n \n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/184/FilterServiceClient.java\nindex e1ee1dd23d..888cb304a2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/naturalize/184/FilterServiceClient.java\n@@ -69,11 +69,11 @@ public class FilterServiceClient extends BaseRestClient {\n      * Get a list of filter groups.\n      */\n     public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n-        ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n+ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n         return container.getFilterGroups();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/184/FilterServiceClient.java\nindex e1ee1dd23d..7b9bad4e48 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/codebuff/184/FilterServiceClient.java\n@@ -16,13 +16,12 @@ package com.intuit.tank.api.client.v1.filter;\n  * #L%\n  */\n \n-import java.util.List;\n \n+\n+import java.util.List;\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.MediaType;\n-\n import org.glassfish.jersey.client.ClientResponse;\n-\n import com.intuit.tank.api.model.v1.filter.FilterGroupContainer;\n import com.intuit.tank.api.model.v1.filter.FilterGroupTO;\n import com.intuit.tank.api.service.v1.filter.FilterService;\n@@ -36,15 +35,17 @@ import com.intuit.tank.rest.util.ServiceConsants;\n  * @author dangleton\n  * \n  */\n+\n public class FilterServiceClient extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT\n-            + FilterService.SERVICE_RELATIVE_PATH;\n+    private static final String SERVICE_BASE_URL = ServiceConsants.REST_SERVICE_CONTEXT + FilterService.SERVICE_RELATIVE_PATH;\n \n     /**\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public FilterServiceClient(String serviceUrl) {\n         super(serviceUrl, null, null);\n     }\n@@ -53,6 +54,8 @@ public class FilterServiceClient extends BaseRestClient {\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public FilterServiceClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n         super(serviceUrl, proxyServer, proxyPort);\n     }\n@@ -61,6 +64,8 @@ public class FilterServiceClient extends BaseRestClient {\n      * \n      * @return\n      */\n+\n+\n     protected String getServiceBaseUrl() {\n         return SERVICE_BASE_URL;\n     }\n@@ -68,12 +73,14 @@ public class FilterServiceClient extends BaseRestClient {\n     /**\n      * Get a list of filter groups.\n      */\n+\n+\n     public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n         return container.getFilterGroups();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/184/FilterServiceClient.java\nindex e1ee1dd23d..449c406283 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_random/184/FilterServiceClient.java\n@@ -69,7 +69,7 @@ public class FilterServiceClient extends BaseRestClient {\n      * Get a list of filter groups.\n      */\n     public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n+    WebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/184/FilterServiceClient.java\nindex e1ee1dd23d..346fb7a399 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/errored/1/184/FilterServiceClient.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/intuit-Tank/styler_three_grams/184/FilterServiceClient.java\n@@ -69,7 +69,7 @@ public class FilterServiceClient extends BaseRestClient {\n      * Get a list of filter groups.\n      */\n     public List<FilterGroupTO> getFilterGroups() throws RestServiceException {\n-    \tWebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n+        WebTarget webTarget = client.target(urlBuilder.buildUrl(FilterService.METHOD_FILTER_GROUPS));\n         ClientResponse response = webTarget.request(MediaType.APPLICATION_XML).get(ClientResponse.class);\n         exceptionHandler.checkStatusCode(response);\n         FilterGroupContainer container = response.readEntity(FilterGroupContainer.class);\n",
            "diff_size": 1
        }
    ]
}