{
    "error_id": "262",
    "information": {
        "errors": [
            {
                "line": "185",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/262/CompositionReader.java\nindex 34580d16b3..6145e3c170 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler/262/CompositionReader.java\n@@ -182,7 +182,7 @@ public class CompositionReader extends Reader<Composition> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/262/CompositionReader.java\nindex 34580d16b3..0829309780 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/intellij/262/CompositionReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.video.v1;\n@@ -182,7 +182,7 @@ public class CompositionReader extends Reader<Composition> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/262/CompositionReader.java\nindex 34580d16b3..881c252550 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/codebuff/262/CompositionReader.java\n@@ -26,6 +26,7 @@ import org.joda.time.DateTime;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class CompositionReader extends Reader<Composition> {\n     private Composition.Status status;\n     private DateTime dateCreatedAfter;\n@@ -39,6 +40,8 @@ public class CompositionReader extends Reader<Composition> {\n      * @param status Read only Composition resources with this status\n      * @return this\n      */\n+\n+\n     public CompositionReader setStatus(final Composition.Status status) {\n         this.status = status;\n         return this;\n@@ -54,6 +57,8 @@ public class CompositionReader extends Reader<Composition> {\n      *                         date-time with time zone\n      * @return this\n      */\n+\n+\n     public CompositionReader setDateCreatedAfter(final DateTime dateCreatedAfter) {\n         this.dateCreatedAfter = dateCreatedAfter;\n         return this;\n@@ -67,6 +72,8 @@ public class CompositionReader extends Reader<Composition> {\n      *                          ISO 8601 date-time with time zone\n      * @return this\n      */\n+\n+\n     public CompositionReader setDateCreatedBefore(final DateTime dateCreatedBefore) {\n         this.dateCreatedBefore = dateCreatedBefore;\n         return this;\n@@ -78,6 +85,8 @@ public class CompositionReader extends Reader<Composition> {\n      * @param roomSid Read only Composition resources with this Room SID\n      * @return this\n      */\n+\n+\n     public CompositionReader setRoomSid(final String roomSid) {\n         this.roomSid = roomSid;\n         return this;\n@@ -89,6 +98,8 @@ public class CompositionReader extends Reader<Composition> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Composition ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Composition> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -100,14 +111,12 @@ public class CompositionReader extends Reader<Composition> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Composition ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Composition> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.VIDEO.toString(),\n-            \"/v1/Compositions\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.VIDEO.toString(), \"/v1/Compositions\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -120,14 +129,13 @@ public class CompositionReader extends Reader<Composition> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Composition ResourceSet\n      */\n+\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Composition> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Composition> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -138,13 +146,12 @@ public class CompositionReader extends Reader<Composition> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n+\n     @Override\n     public Page<Composition> nextPage(final Page<Composition> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -155,13 +162,12 @@ public class CompositionReader extends Reader<Composition> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n+\n     @Override\n     public Page<Composition> previousPage(final Page<Composition> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -172,9 +178,11 @@ public class CompositionReader extends Reader<Composition> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Composition> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Composition> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Composition read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -182,7 +190,8 @@ public class CompositionReader extends Reader<Composition> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -190,7 +199,7 @@ public class CompositionReader extends Reader<Composition> {\n             response.getContent(),\n             Composition.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -198,6 +207,8 @@ public class CompositionReader extends Reader<Composition> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (status != null) {\n             request.addQueryParam(\"Status\", status.toString());\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/262/CompositionReader.java\nindex 34580d16b3..6145e3c170 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_random/262/CompositionReader.java\n@@ -182,7 +182,7 @@ public class CompositionReader extends Reader<Composition> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/262/CompositionReader.java\nindex 34580d16b3..e8c9ef63e2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/errored/1/262/CompositionReader.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/twilio-twilio-java/styler_three_grams/262/CompositionReader.java\n@@ -182,7 +182,8 @@ public class CompositionReader extends Reader<Composition> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ]
}