{
    "error_id": "279",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 178).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<FeeDetailDto> feeDetails = BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n\n        return feeDetails;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/279/FeeDetailInnerServiceSMOImpl.java\nindex 0276bab79b..4de3915d9a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/279/FeeDetailInnerServiceSMOImpl.java\n@@ -40,9 +40,9 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDetailDto.setPage((page - 1) * feeDetailDto.getRow());\n-        }\n+        } List<FeeDetailDto>feeDetails=BeanConvertUtil.\n \n-        List<FeeDetailDto> feeDetails = BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n+        covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n \n         return feeDetails;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/279/FeeDetailInnerServiceSMOImpl.java\nindex 0276bab79b..43a98bf215 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/279/FeeDetailInnerServiceSMOImpl.java\n@@ -25,46 +25,48 @@ import java.util.List;\n @RestController\n public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFeeDetailInnerServiceSMO {\n \n-    @Autowired\n-    private IFeeDetailServiceDao feeDetailServiceDaoImpl;\n+  @Autowired\n+  private IFeeDetailServiceDao feeDetailServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<FeeDetailDto> queryFeeDetails(@RequestBody  FeeDetailDto feeDetailDto) {\n+  @Override\n+  public List<FeeDetailDto> queryFeeDetails(@RequestBody FeeDetailDto feeDetailDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeDetailDto.getPage();\n+    int page = feeDetailDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            feeDetailDto.setPage((page - 1) * feeDetailDto.getRow());\n-        }\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      feeDetailDto.setPage((page - 1) * feeDetailDto.getRow());\n+    }\n \n-        List<FeeDetailDto> feeDetails = BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n+    List<FeeDetailDto> feeDetails =\n+      BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n \n-        return feeDetails;\n-    }\n+    return feeDetails;\n+  }\n \n \n-    @Override\n-    public int queryFeeDetailsCount(@RequestBody FeeDetailDto feeDetailDto) {\n-        return feeDetailServiceDaoImpl.queryFeeDetailsCount(BeanConvertUtil.beanCovertMap(feeDetailDto));    }\n+  @Override\n+  public int queryFeeDetailsCount(@RequestBody FeeDetailDto feeDetailDto) {\n+    return feeDetailServiceDaoImpl.queryFeeDetailsCount(BeanConvertUtil.beanCovertMap(feeDetailDto));\n+  }\n \n-    public IFeeDetailServiceDao getFeeDetailServiceDaoImpl() {\n-        return feeDetailServiceDaoImpl;\n-    }\n+  public IFeeDetailServiceDao getFeeDetailServiceDaoImpl() {\n+    return feeDetailServiceDaoImpl;\n+  }\n \n-    public void setFeeDetailServiceDaoImpl(IFeeDetailServiceDao feeDetailServiceDaoImpl) {\n-        this.feeDetailServiceDaoImpl = feeDetailServiceDaoImpl;\n-    }\n+  public void setFeeDetailServiceDaoImpl(IFeeDetailServiceDao feeDetailServiceDaoImpl) {\n+    this.feeDetailServiceDaoImpl = feeDetailServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/279/FeeDetailInnerServiceSMOImpl.java\nindex 0276bab79b..9cc7e32f9f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/279/FeeDetailInnerServiceSMOImpl.java\n@@ -67,4 +67,4 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/279/FeeDetailInnerServiceSMOImpl.java\nindex 0276bab79b..81a7f78849 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/279/FeeDetailInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.utils.util.BeanConvertUtil;\n import com.java110.fee.dao.IFeeDetailServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -11,7 +10,6 @@ import com.java110.dto.fee.FeeDetailDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFeeDetailInnerServiceSMO {\n \n@@ -32,12 +32,10 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<FeeDetailDto> queryFeeDetails(@RequestBody  FeeDetailDto feeDetailDto) {\n+    public List<FeeDetailDto> queryFeeDetails(@RequestBody FeeDetailDto feeDetailDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = feeDetailDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDetailDto.setPage((page - 1) * feeDetailDto.getRow());\n         }\n@@ -50,7 +48,8 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n     @Override\n     public int queryFeeDetailsCount(@RequestBody FeeDetailDto feeDetailDto) {\n-        return feeDetailServiceDaoImpl.queryFeeDetailsCount(BeanConvertUtil.beanCovertMap(feeDetailDto));    }\n+        return feeDetailServiceDaoImpl.queryFeeDetailsCount(BeanConvertUtil.beanCovertMap(feeDetailDto));\n+    }\n \n     public IFeeDetailServiceDao getFeeDetailServiceDaoImpl() {\n         return feeDetailServiceDaoImpl;\n@@ -67,4 +66,4 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "111",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "45",
                    "column": "37",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/279/FeeDetailInnerServiceSMOImpl.java\nindex 0276bab79b..ac299d7392 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/279/FeeDetailInnerServiceSMOImpl.java\n@@ -41,10 +41,8 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDetailDto.setPage((page - 1) * feeDetailDto.getRow());\n         }\n-\n-        List<FeeDetailDto> feeDetails = BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n-\n-        return feeDetails;\n+        List<FeeDetailDto>feeDetails= BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo (BeanConvertUtil.\n+        beanCovertMap(feeDetailDto)),FeeDetailDto.class); returnfeeDetails;\n     }\n \n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/279/FeeDetailInnerServiceSMOImpl.java\nindex 0276bab79b..4de3915d9a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/279/FeeDetailInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/279/FeeDetailInnerServiceSMOImpl.java\n@@ -40,9 +40,9 @@ public class FeeDetailInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDetailDto.setPage((page - 1) * feeDetailDto.getRow());\n-        }\n+        } List<FeeDetailDto>feeDetails=BeanConvertUtil.\n \n-        List<FeeDetailDto> feeDetails = BeanConvertUtil.covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n+        covertBeanList(feeDetailServiceDaoImpl.getFeeDetailInfo(BeanConvertUtil.beanCovertMap(feeDetailDto)), FeeDetailDto.class);\n \n         return feeDetails;\n     }\n",
            "diff_size": 2
        }
    ]
}