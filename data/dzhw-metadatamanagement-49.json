{
    "error_id": "49",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "73",
                "severity": "error",
                "message": "'}' at column 73 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/49/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea..9b9e575aa6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/intellij/49/ValidUniqueSurveyNumberValidator.java\n@@ -26,7 +26,8 @@ public class ValidUniqueSurveyNumberValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n+  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/49/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea..54895a0496 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/naturalize/49/ValidUniqueSurveyNumberValidator.java\n@@ -50,7 +50,7 @@ public class ValidUniqueSurveyNumberValidator\n     List<IdAndVersionProjection> surveys = surveyRepository\n         .findIdsByNumberAndDataAcquisitionProjectId(survey\n             .getNumber(), survey.getDataAcquisitionProjectId());\n-    if (surveys.size() > 1) {\n+if (surveys.size() > 1) {\n       return false;\n     }\n     if (surveys.size() == 1) {\n@@ -63,4 +63,4 @@ public class ValidUniqueSurveyNumberValidator\n     String numberWithVersionSuffix = \".*-sy\" + survey.getNumber() + \"\\\\$-[0-9]+\\\\.[0-9]+\\\\.[0-9]+$\";\n     return survey.getId().matches(numberWithVersionSuffix);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/49/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea..0726c9d543 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/codebuff/49/ValidUniqueSurveyNumberValidator.java\n@@ -1,12 +1,9 @@\n package eu.dzhw.fdz.metadatamanagement.surveymanagement.domain.validation;\n \n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.surveymanagement.domain.Survey;\n import eu.dzhw.fdz.metadatamanagement.surveymanagement.repository.SurveyRepository;\n@@ -14,19 +11,23 @@ import eu.dzhw.fdz.metadatamanagement.surveymanagement.repository.SurveyReposito\n /**\n  * Validates the uniqueness of number.\n  */\n-public class ValidUniqueSurveyNumberValidator\n-    implements ConstraintValidator<ValidUniqueSurveyNumber, Survey> {\n \n-  @Autowired\n-  private SurveyRepository surveyRepository;\n+\n+public class ValidUniqueSurveyNumberValidator implements ConstraintValidator<ValidUniqueSurveyNumber, Survey> {\n+\n+    @Autowired\n+    private SurveyRepository surveyRepository;\n \n   /*\n    * (non-Javadoc)\n    *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n-  @Override\n-  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n+\n+    @Override\n+    public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {\n+\n+    }\n \n   /*\n    * (non-Javadoc)\n@@ -34,33 +35,37 @@ public class ValidUniqueSurveyNumberValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(Survey survey, ConstraintValidatorContext context) {\n+\n+\n+    @Override\n+    public boolean isValid(Survey survey,\n+        ConstraintValidatorContext context) {\n     if (survey.getNumber() != null) {\n-      if (survey.isShadow()) {\n-        return containsValidShadowCopySurveyNumber(survey);\n-      } else {\n-        return isValidMasterSurveyNumber(survey);\n-      }\n+        if (survey.isShadow()) {\n+                                        return containsValidShadowCopySurveyNumber(survey);\n+        } else {\n+          return isValidMasterSurveyNumber(survey);\n+        }\n     }\n+\n     return true;\n-  }\n+    }\n \n-  private boolean isValidMasterSurveyNumber(Survey survey) {\n-    List<IdAndVersionProjection> surveys = surveyRepository\n-        .findIdsByNumberAndDataAcquisitionProjectId(survey\n-            .getNumber(), survey.getDataAcquisitionProjectId());\n+    private boolean isValidMasterSurveyNumber(Survey survey) {\n+    List<IdAndVersionProjection> surveys = surveyRepository.findIdsByNumberAndDataAcquisitionProjectId(survey.getNumber(), survey.getDataAcquisitionProjectId());\n     if (surveys.size() > 1) {\n-      return false;\n+        return false;\n     }\n     if (surveys.size() == 1) {\n-      return surveys.get(0).getId().equals(survey.getId());\n+        return surveys.get(0).getId()\n+                             .equals(survey.getId());\n     }\n+\n     return true;\n-  }\n+    }\n \n-  private static boolean containsValidShadowCopySurveyNumber(Survey survey) {\n+    private static boolean containsValidShadowCopySurveyNumber(Survey survey) {\n     String numberWithVersionSuffix = \".*-sy\" + survey.getNumber() + \"\\\\$-[0-9]+\\\\.[0-9]+\\\\.[0-9]+$\";\n     return survey.getId().matches(numberWithVersionSuffix);\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "74",
                    "severity": "error",
                    "message": "'}' at column 74 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/49/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea..1795258812 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/errored/1/49/ValidUniqueSurveyNumberValidator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/dzhw-metadatamanagement/styler_three_grams/49/ValidUniqueSurveyNumberValidator.java\n@@ -26,9 +26,7 @@ public class ValidUniqueSurveyNumberValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) { }/*\n    * (non-Javadoc)\n    *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 3
        }
    ]
}