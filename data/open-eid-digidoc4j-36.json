{
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "78",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    try {\n      this.log.debug(\"Creating a new validation report\");\n      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n      XadesValidationReportProcessor.process(validationReports);\n      return validationReports;\n    } catch (DSSException e) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler/36/XadesValidationReportGenerator.java\nindex f718a82f8b..a8b453ab4c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler/36/XadesValidationReportGenerator.java\n@@ -75,8 +75,7 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Reports generateReports() {\n     try {\n       this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n-      XadesValidationReportProcessor.process(validationReports);\n+      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream()); XadesValidationReportProcessor.process(validationReports);\n       return validationReports;\n     } catch (DSSException e) {\n       throw new DigiDoc4JException(e);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/intellij/36/XadesValidationReportGenerator.java\nindex f718a82f8b..586b5a08b5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/intellij/36/XadesValidationReportGenerator.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic.xades;\n \n@@ -42,9 +42,9 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Configuration configuration;\n \n   /**\n-   * @param document signature document\n+   * @param document         signature document\n    * @param detachedContents detached content\n-   * @param configuration configuration context\n+   * @param configuration    configuration context\n    */\n   public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents,\n                                         Configuration configuration) {\n@@ -75,7 +75,8 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Reports generateReports() {\n     try {\n       this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n+      Reports validationReports =\n+          this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n       XadesValidationReportProcessor.process(validationReports);\n       return validationReports;\n     } catch (DSSException e) {\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/naturalize/36/XadesValidationReportGenerator.java\nindex f718a82f8b..b4964035f7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/naturalize/36/XadesValidationReportGenerator.java\n@@ -46,9 +46,8 @@ public class XadesValidationReportGenerator implements Serializable {\n    * @param detachedContents detached content\n    * @param configuration configuration context\n    */\n-  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents,\n-                                        Configuration configuration) {\n-    this.document = document;\n+  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents, Configuration configuration) {\n+  this.document = document;\n     this.detachedContents = detachedContents;\n     this.configuration = configuration;\n   }\n@@ -128,4 +127,4 @@ public class XadesValidationReportGenerator implements Serializable {\n       this.log.trace(this.reports.getXmlSimpleReport());\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/codebuff/36/XadesValidationReportGenerator.java\nindex f718a82f8b..0b9dc53deb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/codebuff/36/XadesValidationReportGenerator.java\n@@ -22,7 +22,6 @@ import org.digidoc4j.exceptions.DigiDoc4JException;\n import org.digidoc4j.exceptions.SignatureNotFoundException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n import java.io.InputStream;\n@@ -31,101 +30,105 @@ import java.nio.file.Files;\n import java.nio.file.Paths;\n import java.util.List;\n \n+\n public class XadesValidationReportGenerator implements Serializable {\n \n-  private final Logger log = LoggerFactory.getLogger(XadesValidationReportGenerator.class);\n-  private transient SignedDocumentValidator signedDocumentValidator;\n-  private transient Reports reports;\n-  private transient XAdESSignature xadesSignature;\n-  private DSSDocument document;\n-  private List<DSSDocument> detachedContents;\n-  private Configuration configuration;\n+    private final Logger log = LoggerFactory.getLogger(XadesValidationReportGenerator.class);\n+    private transient SignedDocumentValidator signedDocumentValidator;\n+    private transient Reports reports;\n+    private transient XAdESSignature xadesSignature;\n+    private DSSDocument document;\n+    private List<DSSDocument> detachedContents;\n+    private Configuration configuration;\n \n   /**\n    * @param document signature document\n    * @param detachedContents detached content\n    * @param configuration configuration context\n    */\n-  public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents,\n-                                        Configuration configuration) {\n+\n+\n+    public XadesValidationReportGenerator(DSSDocument document, List<DSSDocument> detachedContents, Configuration configuration) {\n     this.document = document;\n     this.detachedContents = detachedContents;\n     this.configuration = configuration;\n-  }\n+    }\n+\n \n-  public Reports openValidationReport() {\n+    public Reports openValidationReport() {\n     if (this.reports == null) {\n-      this.reports = this.generateReports();\n-      print();\n+        this.reports = this.generateReports();\n+        print();\n     }\n     return this.reports;\n-  }\n+    }\n+\n \n-  public XAdESSignature openDssSignature() {\n+    public XAdESSignature openDssSignature() {\n     if (this.xadesSignature == null) {\n-      this.xadesSignature = this.getXAdESSignature();\n+        this.xadesSignature = this.getXAdESSignature();\n     }\n     return this.xadesSignature;\n-  }\n+    }\n \n   /*\n    * RESTRICTED METHODS\n    */\n \n-  private Reports generateReports() {\n+    private Reports generateReports() {\n     try {\n-      this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n-      XadesValidationReportProcessor.process(validationReports);\n-      return validationReports;\n+        this.log.debug(\"Creating a new validation report\");\n+        Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n+        XadesValidationReportProcessor.process(validationReports);\n+        return validationReports;\n     } catch (DSSException e) {\n       throw new DigiDoc4JException(e);\n     }\n-  }\n+    }\n \n-  private InputStream getValidationPolicyAsStream() {\n+    private InputStream getValidationPolicyAsStream() {\n     String policyFile = this.configuration.getValidationPolicy();\n     if (Files.exists(Paths.get(policyFile))) {\n-      try {\n-        return new FileInputStream(policyFile);\n-      } catch (FileNotFoundException ignore) {\n-        this.log.warn(ignore.getMessage());\n-      }\n+        try {\n+                                                 return new FileInputStream(policyFile);\n+        } catch (FileNotFoundException ignore) {\n+          this.log.warn(ignore.getMessage());\n+        }\n     }\n     return this.getClass().getClassLoader().getResourceAsStream(policyFile);\n-  }\n+    }\n \n-  private XAdESSignature getXAdESSignature() {\n+    private XAdESSignature getXAdESSignature() {\n     this.log.debug(\"Opening XAdES signature\");\n     List<AdvancedSignature> signatures = this.getSignedDocumentValidator().getSignatures();\n     if (CollectionUtils.isEmpty(signatures)) {\n-      throw new SignatureNotFoundException(\"No any XAdES signature found\");\n+        throw new SignatureNotFoundException(\"No any XAdES signature found\");\n     }\n     if (signatures.size() > 1) {\n-      this.log.warn(\"Signatures xml file contains more than one XAdES signature. This is not properly supported\");\n+        this.log.warn(\"Signatures xml file contains more than one XAdES signature. This is not properly supported\");\n     }\n     return (XAdESSignature) signatures.get(0);\n-  }\n+    }\n \n-  private SignedDocumentValidator getSignedDocumentValidator() {\n+    private SignedDocumentValidator getSignedDocumentValidator() {\n     if (this.signedDocumentValidator == null) {\n-      this.signedDocumentValidator = this.createValidator();\n+        this.signedDocumentValidator = this.createValidator();\n     }\n     return this.signedDocumentValidator;\n-  }\n+    }\n \n-  private SignedDocumentValidator createValidator() {\n+    private SignedDocumentValidator createValidator() {\n     this.log.debug(\"Creating a new XAdES validator\");\n-    return new XadesValidationDssFacade(this.detachedContents, this.configuration).openXadesValidator(\n-        this.document);\n-  }\n+    return new XadesValidationDssFacade(this.detachedContents, this.configuration).openXadesValidator(this.document);\n+    }\n \n-  private void print() {\n+    private void print() {\n     if (this.log.isTraceEnabled()) {\n-      this.log.trace(\"----------------Validation report---------------\");\n-      this.log.trace(this.reports.getXmlDetailedReport());\n-      this.log.trace(\"----------------Simple report-------------------\");\n-      this.log.trace(this.reports.getXmlSimpleReport());\n+        this.log.trace(\"----------------Validation report---------------\");\n+        this.log.trace(this.reports.getXmlDetailedReport());\n+        this.log.trace(\"----------------Simple report-------------------\");\n+        this.log.trace(this.reports.getXmlSimpleReport());\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_random/36/XadesValidationReportGenerator.java\nindex f718a82f8b..a8b453ab4c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_random/36/XadesValidationReportGenerator.java\n@@ -75,8 +75,7 @@ public class XadesValidationReportGenerator implements Serializable {\n   private Reports generateReports() {\n     try {\n       this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n-      XadesValidationReportProcessor.process(validationReports);\n+      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream()); XadesValidationReportProcessor.process(validationReports);\n       return validationReports;\n     } catch (DSSException e) {\n       throw new DigiDoc4JException(e);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_three_grams/36/XadesValidationReportGenerator.java\nindex f718a82f8b..4064f7fd49 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/errored/1/36/XadesValidationReportGenerator.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/open-eid-digidoc4j/styler_three_grams/36/XadesValidationReportGenerator.java\n@@ -74,8 +74,7 @@ public class XadesValidationReportGenerator implements Serializable {\n \n   private Reports generateReports() {\n     try {\n-      this.log.debug(\"Creating a new validation report\");\n-      Reports validationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n+      this.log.debug(\"Creating a new validation report\"); ReportsvalidationReports = this.getSignedDocumentValidator().validateDocument(this.getValidationPolicyAsStream());\n       XadesValidationReportProcessor.process(validationReports);\n       return validationReports;\n     } catch (DSSException e) {\n",
            "diff_size": 2
        }
    ]
}