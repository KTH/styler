{
    "error_id": "417",
    "information": {
        "errors": [
            {
                "line": "59",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      proxy.setPort(ServiceRegistryConfig.INSTANCE.getProxyPort());\n      proxy.setUsername(ServiceRegistryConfig.INSTANCE.getProxyUsername());\n      proxy.setPassword(Encryptions.decode(ServiceRegistryConfig.INSTANCE.getProxyPasswd(), ServiceRegistryConfig.PROXY_KEY));\n      httpClientOptions.setProxyOptions(proxy);\n    }\n    if (ver == HttpVersion.HTTP_2) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/417/HttpClientPool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/417/HttpClientPool.java\nindex a3136693c4..68925507df 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/417/HttpClientPool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/intellij/417/HttpClientPool.java\n@@ -56,7 +56,8 @@ public final class HttpClientPool extends AbstractClientPool {\n       proxy.setHost(ServiceRegistryConfig.INSTANCE.getProxyHost());\n       proxy.setPort(ServiceRegistryConfig.INSTANCE.getProxyPort());\n       proxy.setUsername(ServiceRegistryConfig.INSTANCE.getProxyUsername());\n-      proxy.setPassword(Encryptions.decode(ServiceRegistryConfig.INSTANCE.getProxyPasswd(), ServiceRegistryConfig.PROXY_KEY));\n+      proxy.setPassword(\n+          Encryptions.decode(ServiceRegistryConfig.INSTANCE.getProxyPasswd(), ServiceRegistryConfig.PROXY_KEY));\n       httpClientOptions.setProxyOptions(proxy);\n     }\n     if (ver == HttpVersion.HTTP_2) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/417/HttpClientPool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/417/HttpClientPool.java\nindex a3136693c4..766edd6d4f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/417/HttpClientPool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/naturalize/417/HttpClientPool.java\n@@ -69,4 +69,4 @@ public final class HttpClientPool extends AbstractClientPool {\n     }\n     return httpClientOptions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "60",
                    "column": "25",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/417/HttpClientPool.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/417/HttpClientPool.java\nindex a3136693c4..fda0684794 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/errored/1/417/HttpClientPool.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-servicecomb-java-chassis/styler_random/417/HttpClientPool.java\n@@ -56,7 +56,8 @@ public final class HttpClientPool extends AbstractClientPool {\n       proxy.setHost(ServiceRegistryConfig.INSTANCE.getProxyHost());\n       proxy.setPort(ServiceRegistryConfig.INSTANCE.getProxyPort());\n       proxy.setUsername(ServiceRegistryConfig.INSTANCE.getProxyUsername());\n-      proxy.setPassword(Encryptions.decode(ServiceRegistryConfig.INSTANCE.getProxyPasswd(), ServiceRegistryConfig.PROXY_KEY));\n+      proxy.setPassword(Encryptions.decode(ServiceRegistryConfig.INSTANCE\n+      .getProxyPasswd(),ServiceRegistryConfig.PROXY_KEY));\n       httpClientOptions.setProxyOptions(proxy);\n     }\n     if (ver == HttpVersion.HTTP_2) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}