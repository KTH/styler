{
    "error_id": "198",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.assembler;\n\nimport java.lang.annotation.Annotation;\nimport org.seedstack.business.modelmapper.ModelMapper;",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/198/AssemblerTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/198/AssemblerTypes.java\nindex a23a79f34a..2a1d2f274b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/198/AssemblerTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/198/AssemblerTypes.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler;\n \n import java.lang.annotation.Annotation;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/198/AssemblerTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/198/AssemblerTypes.java\nindex a23a79f34a..93d3666b37 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/198/AssemblerTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/198/AssemblerTypes.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.assembler;\n \n import java.lang.annotation.Annotation;\n@@ -13,8 +14,7 @@ import org.seedstack.business.modelmapper.ModelMapper;\n @Deprecated\n public enum AssemblerTypes implements Annotation {\n     MODEL_MAPPER(ModelMapper.class);\n-\n-    private final Class<ModelMapper> annoClass;\n+private final Class<ModelMapper> annoClass;\n \n     AssemblerTypes(Class<ModelMapper> annoClass) {\n         this.annoClass = annoClass;\n@@ -24,4 +24,4 @@ public enum AssemblerTypes implements Annotation {\n     public Class<? extends Annotation> annotationType() {\n         return annoClass;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "16",
                    "column": "33",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 53, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 53, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 57, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 53, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 53, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 57, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 53, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/198/AssemblerTypes.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/198/AssemblerTypes.java\nindex a23a79f34a..c5eea0c916 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/198/AssemblerTypes.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/198/AssemblerTypes.java\n@@ -10,18 +10,18 @@ package org.seedstack.business.assembler;\n import java.lang.annotation.Annotation;\n import org.seedstack.business.modelmapper.ModelMapper;\n \n+\n @Deprecated\n public enum AssemblerTypes implements Annotation {\n-    MODEL_MAPPER(ModelMapper.class);\n-\n-    private final Class<ModelMapper> annoClass;\n+MODEL_MAPPER(ModelMapper.class) ;\n+                                                     private final Class<ModelMapper> annoClass;\n+                                                     AssemblerTypes(Class<ModelMapper> annoClass) {\n+                                                         this.annoClass = annoClass;\n+                                                     }\n \n-    AssemblerTypes(Class<ModelMapper> annoClass) {\n-        this.annoClass = annoClass;\n-    }\n+                                                     @Override\n+                                                     public Class<? extends Annotation> annotationType() {\n+                                                         return annoClass;\n+                                                     }\n \n-    @Override\n-    public Class<? extends Annotation> annotationType() {\n-        return annoClass;\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}