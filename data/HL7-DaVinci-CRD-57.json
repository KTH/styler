{
    "error_id": "57",
    "information": {
        "errors": [
            {
                "line": "12",
                "column": "67",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n  @Override\n  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n    String keyId = jwsHeader.getKeyId();\n    System.out.println(keyId);\n    System.out.println(jwsHeader.getAlgorithm());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/57/SigningKeyResolverCrd.java\nindex 6cc302bebe..5a392b5484 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler/57/SigningKeyResolverCrd.java\n@@ -9,7 +9,7 @@ import java.security.PublicKey;\n \n public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n   @Override\n-  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n+  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims) {\n     String keyId = jwsHeader.getKeyId();\n     System.out.println(keyId);\n     System.out.println(jwsHeader.getAlgorithm());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/57/SigningKeyResolverCrd.java\nindex 6cc302bebe..5a392b5484 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/57/SigningKeyResolverCrd.java\n@@ -9,7 +9,7 @@ import java.security.PublicKey;\n \n public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n   @Override\n-  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n+  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims) {\n     String keyId = jwsHeader.getKeyId();\n     System.out.println(keyId);\n     System.out.println(jwsHeader.getAlgorithm());\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/57/SigningKeyResolverCrd.java\nindex 6cc302bebe..017cf377c9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/57/SigningKeyResolverCrd.java\n@@ -9,7 +9,7 @@ import java.security.PublicKey;\n \n public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n   @Override\n-  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n+  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims) {\n     String keyId = jwsHeader.getKeyId();\n     System.out.println(keyId);\n     System.out.println(jwsHeader.getAlgorithm());\n@@ -38,4 +38,4 @@ public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n     };\n     return key;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 18, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 18, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 18, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 14, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/57/SigningKeyResolverCrd.java\nindex 6cc302bebe..4c19d205e8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/57/SigningKeyResolverCrd.java\n@@ -3,39 +3,42 @@ package org.hl7.davinci.endpoint;\n import io.jsonwebtoken.Claims;\n import io.jsonwebtoken.JwsHeader;\n import io.jsonwebtoken.SigningKeyResolverAdapter;\n-\n import java.security.Key;\n import java.security.PublicKey;\n \n+\n public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n-  @Override\n-  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n+\n+    @Override\n+    public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims) {\n     String keyId = jwsHeader.getKeyId();\n     System.out.println(keyId);\n     System.out.println(jwsHeader.getAlgorithm());\n     String jku = (String) jwsHeader.get(\"jku\");\n     System.out.println(jku);\n-\n     return keyLookup(jku);\n-  }\n+    }\n \n-  private Key keyLookup(String jku) {\n+    private Key keyLookup(String jku) {\n     Key key = new PublicKey() {\n-      @Override\n-      public String getAlgorithm() {\n-        return null;\n-      }\n-\n-      @Override\n-      public String getFormat() {\n-        return null;\n-      }\n-\n-      @Override\n-      public byte[] getEncoded() {\n-        return new byte[0];\n-      }\n-    };\n+\n+        @Override\n+        public String getAlgorithm() {\n+                  return null;\n+        }\n+\n+\n+        @Override\n+        public String getFormat() {\n+                  return null;\n+        }\n+\n+\n+        @Override\n+        public byte[] getEncoded() {\n+                  return new byte[ 0];\n+        }\n+              };\n     return key;\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/57/SigningKeyResolverCrd.java\nindex 6cc302bebe..5a392b5484 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/57/SigningKeyResolverCrd.java\n@@ -9,7 +9,7 @@ import java.security.PublicKey;\n \n public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n   @Override\n-  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n+  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims) {\n     String keyId = jwsHeader.getKeyId();\n     System.out.println(keyId);\n     System.out.println(jwsHeader.getAlgorithm());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/57/SigningKeyResolverCrd.java\nindex 6cc302bebe..5a392b5484 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/57/SigningKeyResolverCrd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_three_grams/57/SigningKeyResolverCrd.java\n@@ -9,7 +9,7 @@ import java.security.PublicKey;\n \n public class SigningKeyResolverCrd extends SigningKeyResolverAdapter {\n   @Override\n-  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims){\n+  public Key resolveSigningKey(JwsHeader jwsHeader, Claims claims) {\n     String keyId = jwsHeader.getKeyId();\n     System.out.println(keyId);\n     System.out.println(jwsHeader.getAlgorithm());\n",
            "diff_size": 1
        }
    ]
}