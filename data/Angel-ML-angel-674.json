{
    "error_id": "674",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/674/Metric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/674/Metric.java\nindex b9c75e3b9a..3ffd276092 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/674/Metric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/674/Metric.java\n@@ -13,6 +13,7 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.algorithm.metric;\n \n /**\n@@ -22,28 +23,28 @@ package com.tencent.angel.ml.algorithm.metric;\n public interface Metric {\n \n \n-  /**\n-   * return name of metric\n-   *\n-   * @return the name\n-   */\n-  String getName();\n+    /**\n+     * return name of metric\n+     *\n+     * @return the name\n+     */\n+    String getName();\n \n-  /**\n-   * evaluate a specific metric for instances\n-   *\n-   * @param preds the predictions\n-   * @param labels the labels\n-   * @return the eval metric\n-   */\n-  float eval(float[] preds, float[] labels);\n+    /**\n+     * evaluate a specific metric for instances\n+     *\n+     * @param preds  the predictions\n+     * @param labels the labels\n+     * @return the eval metric\n+     */\n+    float eval(float[] preds, float[] labels);\n \n-  /**\n-   * evaluate a specific metric for one instance\n-   *\n-   * @param pred the prediction\n-   * @param label the label\n-   * @return the eval metric\n-   */\n-  float evalOne(float pred, float label);\n+    /**\n+     * evaluate a specific metric for one instance\n+     *\n+     * @param pred  the prediction\n+     * @param label the label\n+     * @return the eval metric\n+     */\n+    float evalOne(float pred, float label);\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/674/Metric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/674/Metric.java\nindex b9c75e3b9a..e31dcea966 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/674/Metric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/674/Metric.java\n@@ -46,4 +46,4 @@ public interface Metric {\n    * @return the eval metric\n    */\n   float evalOne(float pred, float label);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/674/Metric.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/674/Metric.java\nindex b9c75e3b9a..c63aa095cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/674/Metric.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/674/Metric.java\n@@ -19,6 +19,9 @@ package com.tencent.angel.ml.algorithm.metric;\n  * Description: interface of evaluation metric used to evaluate model performance. This has nothing\n  * to do with training, but merely act as evaluation purpose.\n  */\n+\n+\n+\n public interface Metric {\n \n \n@@ -27,7 +30,7 @@ public interface Metric {\n    *\n    * @return the name\n    */\n-  String getName();\n+    String getName();\n \n   /**\n    * evaluate a specific metric for instances\n@@ -36,7 +39,9 @@ public interface Metric {\n    * @param labels the labels\n    * @return the eval metric\n    */\n-  float eval(float[] preds, float[] labels);\n+\n+\n+    float eval(float[] preds, float[] labels);\n \n   /**\n    * evaluate a specific metric for one instance\n@@ -45,5 +50,7 @@ public interface Metric {\n    * @param label the label\n    * @return the eval metric\n    */\n-  float evalOne(float pred, float label);\n-}\n+\n+\n+    float evalOne(float pred, float label);\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}