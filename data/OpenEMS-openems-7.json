{
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "223",
                "column": "1",
                "severity": "warning",
                "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 225.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
            }
        ]
    },
    "source_code": "//private boolean isSystemStatePending() {\n//\treturn !isSystemRunning() && !isSystemStopped();\n//}\n\n\t@Override\n\tpublic State getNextState(Context context) throws OpenemsNamedException {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "222",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 224.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler/7/GoConfiguration.java\nindex 2ef4f5e42d..d8cb4f5b98 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler/7/GoConfiguration.java\n@@ -219,8 +219,7 @@ public class GoConfiguration extends State.Handler {\n \t * @return boolean\n \t */\n //private boolean isSystemStatePending() {\n-//\treturn !isSystemRunning() && !isSystemStopped();\n-//}\n+//\treturn !isSystemRunning() && !isSystemStopped(); //}\n \n \t@Override\n \tpublic State getNextState(Context context) throws OpenemsNamedException {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "223",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 224.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/intellij/7/GoConfiguration.java\nindex 2ef4f5e42d..65e0cc8c69 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/intellij/7/GoConfiguration.java\n@@ -211,21 +211,20 @@ public class GoConfiguration extends State.Handler {\n //\tCONFIGURING_FINISHED, RESTART_AFTER_SETTING\n //}\n \n-\t/**\n-\t * Checks whether system has an undefined state, e.g. rack 1 & 2 are configured,\n-\t * but only rack 1 is running. This state can only be reached at startup coming\n-\t * from state undefined\n-\t * \n-\t * @return boolean\n-\t */\n+  /**\n+   * Checks whether system has an undefined state, e.g. rack 1 & 2 are configured,\n+   * but only rack 1 is running. This state can only be reached at startup coming\n+   * from state undefined\n+   *\n+   * @return boolean\n+   */\n //private boolean isSystemStatePending() {\n //\treturn !isSystemRunning() && !isSystemStopped();\n //}\n-\n-\t@Override\n-\tpublic State getNextState(Context context) throws OpenemsNamedException {\n-\t\tSystem.out.println(\"Stuck in GO_CONFIGURATION\");\n-\t\treturn State.GO_CONFIGURATION;\n-\t}\n+  @Override\n+  public State getNextState(Context context) throws OpenemsNamedException {\n+    System.out.println(\"Stuck in GO_CONFIGURATION\");\n+    return State.GO_CONFIGURATION;\n+  }\n \n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "9",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 1, expected is 0, indentation should be the same level as line 219.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/naturalize/7/GoConfiguration.java\nindex 2ef4f5e42d..cb541a324d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/naturalize/7/GoConfiguration.java\n@@ -5,7 +5,7 @@ import io.openems.edge.battery.soltaro.single.versionc.statemachine.StateMachine\n \n public class GoConfiguration extends State.Handler {\n \n-//\tprivate void configureSlaves() {\n+\t//\tprivate void configureSlaves() {\n //\tif (nextConfiguringProcess == ConfiguringProcess.NONE) {\n //\t\tnextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n //\t}\n@@ -205,27 +205,21 @@ public class GoConfiguration extends State.Handler {\n //\t}\n //}\n \n-//private enum ConfiguringProcess {\n-//\tNONE, CONFIGURING_STARTED, SET_ID_AUTO_CONFIGURING, CHECK_ID_AUTO_CONFIGURING,\n-//\tSET_TEMPERATURE_ID_AUTO_CONFIGURING, CHECK_TEMPERATURE_ID_AUTO_CONFIGURING, SET_VOLTAGE_RANGES,\n-//\tCONFIGURING_FINISHED, RESTART_AFTER_SETTING\n-//}\n+//private\n \n-\t/**\n+/**\n \t * Checks whether system has an undefined state, e.g. rack 1 & 2 are configured,\n \t * but only rack 1 is running. This state can only be reached at startup coming\n \t * from state undefined\n \t * \n \t * @return boolean\n \t */\n-//private boolean isSystemStatePending() {\n-//\treturn !isSystemRunning() && !isSystemStopped();\n-//}\n+//pri\n \n-\t@Override\n+@Override\n \tpublic State getNextState(Context context) throws OpenemsNamedException {\n \t\tSystem.out.println(\"Stuck in GO_CONFIGURATION\");\n \t\treturn State.GO_CONFIGURATION;\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "223",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 225.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/codebuff/7/GoConfiguration.java\nindex 2ef4f5e42d..f78dbc0755 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/codebuff/7/GoConfiguration.java\n@@ -5,227 +5,227 @@ import io.openems.edge.battery.soltaro.single.versionc.statemachine.StateMachine\n \n public class GoConfiguration extends State.Handler {\n \n-//\tprivate void configureSlaves() {\n-//\tif (nextConfiguringProcess == ConfiguringProcess.NONE) {\n-//\t\tnextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n-//\t}\n+//  private void configureSlaves() {\n+//  if (nextConfiguringProcess == ConfiguringProcess.NONE) {\n+//      nextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n+//  }\n //\n-//\tswitch (nextConfiguringProcess) {\n-//\tcase CONFIGURING_STARTED:\n-//\t\tSystem.out.println(\" ===> CONFIGURING STARTED: setNumberOfModules() <===\");\n-//\t\tsetNumberOfModules();\n-//\t\tbreak;\n-//\tcase SET_ID_AUTO_CONFIGURING:\n-//\t\tSystem.out.println(\" ===> SET_ID_AUTO_CONFIGURING: setIdAutoConfiguring() <===\");\n-//\t\tsetIdAutoConfiguring();\n-//\t\tbreak;\n-//\tcase CHECK_ID_AUTO_CONFIGURING:\n-//\t\tif (timeAfterAutoId != null) {\n-//\t\t\tif (timeAfterAutoId.plusSeconds(delayAutoIdSeconds).isAfter(LocalDateTime.now())) {\n-//\t\t\t\tbreak;\n-//\t\t\t} else {\n-//\t\t\t\ttimeAfterAutoId = null;\n-//\t\t\t}\n-//\t\t}\n-//\t\tSystem.out.println(\" ===> CHECK_ID_AUTO_CONFIGURING: checkIdAutoConfiguring() <===\");\n-//\t\tcheckIdAutoConfiguring();\n-//\t\tbreak;\n-//\tcase SET_TEMPERATURE_ID_AUTO_CONFIGURING:\n-//\t\tSystem.out.println(\" ===> SET_TEMPERATURE_ID_AUTO_CONFIGURING: setTemperatureIdAutoConfiguring() <===\");\n-//\t\tsetTemperatureIdAutoConfiguring();\n-//\t\tbreak;\n-//\tcase CHECK_TEMPERATURE_ID_AUTO_CONFIGURING:\n-//\t\tif (timeAfterAutoId != null) {\n-//\t\t\tif (timeAfterAutoId.plusSeconds(delayAutoIdSeconds).isAfter(LocalDateTime.now())) {\n-//\t\t\t\tbreak;\n-//\t\t\t} else {\n-//\t\t\t\ttimeAfterAutoId = null;\n-//\t\t\t}\n-//\t\t}\n-//\t\tSystem.out.println(\" ===> CHECK_TEMPERATURE_ID_AUTO_CONFIGURING: checkTemperatureIdAutoConfiguring() <===\");\n-//\t\tcheckTemperatureIdAutoConfiguring();\n-//\t\tbreak;\n-//\tcase SET_VOLTAGE_RANGES:\n-//\t\tSystem.out.println(\" ===> SET_VOLTAGE_RANGES: setVoltageRanges() <===\");\n-//\t\tsetVoltageRanges();\n+//  switch (nextConfiguringProcess) {\n+//  case CONFIGURING_STARTED:\n+//      System.out.println(\" ===> CONFIGURING STARTED: setNumberOfModules() <===\");\n+//      setNumberOfModules();\n+//      break;\n+//  case SET_ID_AUTO_CONFIGURING:\n+//      System.out.println(\" ===> SET_ID_AUTO_CONFIGURING: setIdAutoConfiguring() <===\");\n+//      setIdAutoConfiguring();\n+//      break;\n+//  case CHECK_ID_AUTO_CONFIGURING:\n+//      if (timeAfterAutoId != null) {\n+//          if (timeAfterAutoId.plusSeconds(delayAutoIdSeconds).isAfter(LocalDateTime.now())) {\n+//              break;\n+//          } else {\n+//              timeAfterAutoId = null;\n+//          }\n+//      }\n+//      System.out.println(\" ===> CHECK_ID_AUTO_CONFIGURING: checkIdAutoConfiguring() <===\");\n+//      checkIdAutoConfiguring();\n+//      break;\n+//  case SET_TEMPERATURE_ID_AUTO_CONFIGURING:\n+//      System.out.println(\" ===> SET_TEMPERATURE_ID_AUTO_CONFIGURING: setTemperatureIdAutoConfiguring() <===\");\n+//      setTemperatureIdAutoConfiguring();\n+//      break;\n+//  case CHECK_TEMPERATURE_ID_AUTO_CONFIGURING:\n+//      if (timeAfterAutoId != null) {\n+//          if (timeAfterAutoId.plusSeconds(delayAutoIdSeconds).isAfter(LocalDateTime.now())) {\n+//              break;\n+//          } else {\n+//              timeAfterAutoId = null;\n+//          }\n+//      }\n+//      System.out.println(\" ===> CHECK_TEMPERATURE_ID_AUTO_CONFIGURING: checkTemperatureIdAutoConfiguring() <===\");\n+//      checkTemperatureIdAutoConfiguring();\n+//      break;\n+//  case SET_VOLTAGE_RANGES:\n+//      System.out.println(\" ===> SET_VOLTAGE_RANGES: setVoltageRanges() <===\");\n+//      setVoltageRanges();\n //\n-//\t\tbreak;\n-//\tcase CONFIGURING_FINISHED:\n-//\t\tSystem.out.println(\"====>>> Configuring successful! <<<====\");\n+//      break;\n+//  case CONFIGURING_FINISHED:\n+//      System.out.println(\"====>>> Configuring successful! <<<====\");\n //\n-//\t\tif (configuringFinished == null) {\n-//\t\t\tnextConfiguringProcess = ConfiguringProcess.RESTART_AFTER_SETTING;\n-//\t\t} else {\n-//\t\t\tif (configuringFinished.plusSeconds(delayAfterConfiguringFinished).isAfter(LocalDateTime.now())) {\n-//\t\t\t\tSystem.out.println(\">>> Delay time after configuring!\");\n-//\t\t\t} else {\n-//\t\t\t\tSystem.out.println(\"Delay time after configuring is over, reset system\");\n-//\t\t\t\tthis.logInfo(this.log,\n-//\t\t\t\t\t\t\"Soltaro Rack Version C [CONFIGURING_FINISHED SYSTEM_RESET] is not implemented!\");\n-//\t\t\t\tthis.resetSystem();\n-//\t\t\t}\n-//\t\t}\n-//\t\tbreak;\n-//\tcase RESTART_AFTER_SETTING:\n-//\t\t// A manual restart is needed\n-//\t\tSystem.out.println(\"====>>>  Please restart system manually!\");\n-//\t\tbreak;\n-//\tcase NONE:\n-//\t\tbreak;\n-//\t}\n+//      if (configuringFinished == null) {\n+//          nextConfiguringProcess = ConfiguringProcess.RESTART_AFTER_SETTING;\n+//      } else {\n+//          if (configuringFinished.plusSeconds(delayAfterConfiguringFinished).isAfter(LocalDateTime.now())) {\n+//              System.out.println(\">>> Delay time after configuring!\");\n+//          } else {\n+//              System.out.println(\"Delay time after configuring is over, reset system\");\n+//              this.logInfo(this.log,\n+//                      \"Soltaro Rack Version C [CONFIGURING_FINISHED SYSTEM_RESET] is not implemented!\");\n+//              this.resetSystem();\n+//          }\n+//      }\n+//      break;\n+//  case RESTART_AFTER_SETTING:\n+//      // A manual restart is needed\n+//      System.out.println(\"====>>>  Please restart system manually!\");\n+//      break;\n+//  case NONE:\n+//      break;\n+//  }\n //}\n //\n //private void setVoltageRanges() {\n-//\ttry {\n-//\t\tIntegerWriteChannel level1OverVoltageChannel = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_OVER_VOLTAGE_PROTECTION);\n-//\t\tlevel1OverVoltageChannel.setNextWriteValue(\n-//\t\t\t\tthis.config.numberOfSlaves() * ModuleParameters.LEVEL_1_TOTAL_OVER_VOLTAGE_MILLIVOLT.getValue());\n+//  try {\n+//      IntegerWriteChannel level1OverVoltageChannel = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_OVER_VOLTAGE_PROTECTION);\n+//      level1OverVoltageChannel.setNextWriteValue(\n+//              this.config.numberOfSlaves() * ModuleParameters.LEVEL_1_TOTAL_OVER_VOLTAGE_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level1OverVoltageChannelRecover = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_OVER_VOLTAGE_RECOVER);\n-//\t\tlevel1OverVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n-//\t\t\t\t* ModuleParameters.LEVEL_1_TOTAL_OVER_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level1OverVoltageChannelRecover = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_OVER_VOLTAGE_RECOVER);\n+//      level1OverVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n+//              * ModuleParameters.LEVEL_1_TOTAL_OVER_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level1LowVoltageChannel = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_UNDER_VOLTAGE_PROTECTION);\n-//\t\tlevel1LowVoltageChannel.setNextWriteValue(\n-//\t\t\t\tthis.config.numberOfSlaves() * ModuleParameters.LEVEL_1_TOTAL_LOW_VOLTAGE_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level1LowVoltageChannel = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_UNDER_VOLTAGE_PROTECTION);\n+//      level1LowVoltageChannel.setNextWriteValue(\n+//              this.config.numberOfSlaves() * ModuleParameters.LEVEL_1_TOTAL_LOW_VOLTAGE_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level1LowVoltageChannelRecover = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_UNDER_VOLTAGE_RECOVER);\n-//\t\tlevel1LowVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n-//\t\t\t\t* ModuleParameters.LEVEL_1_TOTAL_LOW_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level1LowVoltageChannelRecover = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL1_SYSTEM_UNDER_VOLTAGE_RECOVER);\n+//      level1LowVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n+//              * ModuleParameters.LEVEL_1_TOTAL_LOW_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level2OverVoltageChannel = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_OVER_VOLTAGE_PROTECTION);\n-//\t\tlevel2OverVoltageChannel.setNextWriteValue(\n-//\t\t\t\tthis.config.numberOfSlaves() * ModuleParameters.LEVEL_2_TOTAL_OVER_VOLTAGE_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level2OverVoltageChannel = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_OVER_VOLTAGE_PROTECTION);\n+//      level2OverVoltageChannel.setNextWriteValue(\n+//              this.config.numberOfSlaves() * ModuleParameters.LEVEL_2_TOTAL_OVER_VOLTAGE_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level2OverVoltageChannelRecover = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_OVER_VOLTAGE_RECOVER);\n-//\t\tlevel2OverVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n-//\t\t\t\t* ModuleParameters.LEVEL_2_TOTAL_OVER_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level2OverVoltageChannelRecover = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_OVER_VOLTAGE_RECOVER);\n+//      level2OverVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n+//              * ModuleParameters.LEVEL_2_TOTAL_OVER_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level2LowVoltageChannel = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_UNDER_VOLTAGE_PROTECTION);\n-//\t\tlevel2LowVoltageChannel.setNextWriteValue(\n-//\t\t\t\tthis.config.numberOfSlaves() * ModuleParameters.LEVEL_2_TOTAL_LOW_VOLTAGE_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level2LowVoltageChannel = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_UNDER_VOLTAGE_PROTECTION);\n+//      level2LowVoltageChannel.setNextWriteValue(\n+//              this.config.numberOfSlaves() * ModuleParameters.LEVEL_2_TOTAL_LOW_VOLTAGE_MILLIVOLT.getValue());\n //\n-//\t\tIntegerWriteChannel level2LowVoltageChannelRecover = this\n-//\t\t\t\t.channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_UNDER_VOLTAGE_RECOVER);\n-//\t\tlevel2LowVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n-//\t\t\t\t* ModuleParameters.LEVEL_2_TOTAL_LOW_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n+//      IntegerWriteChannel level2LowVoltageChannelRecover = this\n+//              .channel(SingleRackVersionC.ChannelId.LEVEL2_SYSTEM_UNDER_VOLTAGE_RECOVER);\n+//      level2LowVoltageChannelRecover.setNextWriteValue(this.config.numberOfSlaves()\n+//              * ModuleParameters.LEVEL_2_TOTAL_LOW_VOLTAGE_RECOVER_MILLIVOLT.getValue());\n //\n-//\t\tnextConfiguringProcess = ConfiguringProcess.CONFIGURING_FINISHED;\n-//\t\tconfiguringFinished = LocalDateTime.now();\n+//      nextConfiguringProcess = ConfiguringProcess.CONFIGURING_FINISHED;\n+//      configuringFinished = LocalDateTime.now();\n //\n-//\t} catch (OpenemsNamedException e) {\n-//\t\tlog.error(\"Setting voltage ranges not successful!\");\n-//\t\t// TODO Should throw Exception/write Warning-State-Channel\n-//\t}\n+//  } catch (OpenemsNamedException e) {\n+//      log.error(\"Setting voltage ranges not successful!\");\n+//      // TODO Should throw Exception/write Warning-State-Channel\n+//  }\n //}\n \n //private void checkTemperatureIdAutoConfiguring() {\n-//\tEnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_TEMPERATURE_ID);\n-//\tAutoSetFunction value = channel.value().asEnum();\n-//\tswitch (value) {\n-//\tcase FAILURE:\n-//\t\tthis.logError(this.log, \"Auto set temperature slaves id failed! Start configuring process again!\");\n-//\t\t// Auto set failed, try again\n-//\t\tthis.nextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n-//\t\treturn;\n-//\tcase SUCCESS:\n-//\t\tthis.logInfo(this.log, \"Auto set temperature slaves id succeeded!\");\n-//\t\tnextConfiguringProcess = ConfiguringProcess.SET_VOLTAGE_RANGES;\n-//\t\treturn;\n-//\tcase START_AUTO_SETTING:\n-//\tcase INIT_MODE:\n-//\tcase UNDEFINED:\n-//\t\t// Waiting...\n-//\t\treturn;\n-//\t}\n+//  EnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_TEMPERATURE_ID);\n+//  AutoSetFunction value = channel.value().asEnum();\n+//  switch (value) {\n+//  case FAILURE:\n+//      this.logError(this.log, \"Auto set temperature slaves id failed! Start configuring process again!\");\n+//      // Auto set failed, try again\n+//      this.nextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n+//      return;\n+//  case SUCCESS:\n+//      this.logInfo(this.log, \"Auto set temperature slaves id succeeded!\");\n+//      nextConfiguringProcess = ConfiguringProcess.SET_VOLTAGE_RANGES;\n+//      return;\n+//  case START_AUTO_SETTING:\n+//  case INIT_MODE:\n+//  case UNDEFINED:\n+//      // Waiting...\n+//      return;\n+//  }\n //}\n \n //private void setTemperatureIdAutoConfiguring() {\n-//\tEnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_TEMPERATURE_ID);\n-//\ttry {\n-//\t\tchannel.setNextWriteValue(AutoSetFunction.START_AUTO_SETTING);\n-//\t\tthis.timeAfterAutoId = LocalDateTime.now();\n-//\t\tthis.nextConfiguringProcess = ConfiguringProcess.CHECK_TEMPERATURE_ID_AUTO_CONFIGURING;\n-//\t} catch (OpenemsNamedException e) {\n-//\t\t// Set was not successful, it will be tried until it succeeded\n-//\t\tthis.logError(this.log, \"Setting temperature id auto set not successful\");\n-//\t}\n+//  EnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_TEMPERATURE_ID);\n+//  try {\n+//      channel.setNextWriteValue(AutoSetFunction.START_AUTO_SETTING);\n+//      this.timeAfterAutoId = LocalDateTime.now();\n+//      this.nextConfiguringProcess = ConfiguringProcess.CHECK_TEMPERATURE_ID_AUTO_CONFIGURING;\n+//  } catch (OpenemsNamedException e) {\n+//      // Set was not successful, it will be tried until it succeeded\n+//      this.logError(this.log, \"Setting temperature id auto set not successful\");\n+//  }\n //}\n \n //private void checkIdAutoConfiguring() {\n-//\tEnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_ID);\n-//\tAutoSetFunction value = channel.value().asEnum();\n-//\tswitch (value) {\n-//\tcase FAILURE:\n-//\t\tthis.logError(this.log, \"Auto set slaves id failed! Start configuring process again!\");\n-//\t\t// Auto set failed, try again\n-//\t\tthis.nextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n-//\t\treturn;\n-//\tcase SUCCESS:\n-//\t\tthis.logInfo(this.log, \"Auto set slaves id succeeded!\");\n-//\t\tnextConfiguringProcess = ConfiguringProcess.SET_TEMPERATURE_ID_AUTO_CONFIGURING;\n-//\t\treturn;\n-//\tcase START_AUTO_SETTING:\n-//\tcase INIT_MODE:\n-//\tcase UNDEFINED:\n-//\t\t// Waiting...\n-//\t\treturn;\n-//\t}\n+//  EnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_ID);\n+//  AutoSetFunction value = channel.value().asEnum();\n+//  switch (value) {\n+//  case FAILURE:\n+//      this.logError(this.log, \"Auto set slaves id failed! Start configuring process again!\");\n+//      // Auto set failed, try again\n+//      this.nextConfiguringProcess = ConfiguringProcess.CONFIGURING_STARTED;\n+//      return;\n+//  case SUCCESS:\n+//      this.logInfo(this.log, \"Auto set slaves id succeeded!\");\n+//      nextConfiguringProcess = ConfiguringProcess.SET_TEMPERATURE_ID_AUTO_CONFIGURING;\n+//      return;\n+//  case START_AUTO_SETTING:\n+//  case INIT_MODE:\n+//  case UNDEFINED:\n+//      // Waiting...\n+//      return;\n+//  }\n //}\n \n //private void setIdAutoConfiguring() {\n-//\tEnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_ID);\n-//\ttry {\n-//\t\tchannel.setNextWriteValue(AutoSetFunction.START_AUTO_SETTING);\n-//\t\tthis.timeAfterAutoId = LocalDateTime.now();\n-//\t\tthis.nextConfiguringProcess = ConfiguringProcess.CHECK_ID_AUTO_CONFIGURING;\n-//\t} catch (OpenemsNamedException e) {\n-//\t\t// Set was not successful, it will be tried until it succeeded\n-//\t\tthis.logError(this.log, \"Setting slave numbers not successful\");\n-//\t}\n+//  EnumWriteChannel channel = this.channel(SingleRackVersionC.ChannelId.AUTO_SET_SLAVES_ID);\n+//  try {\n+//      channel.setNextWriteValue(AutoSetFunction.START_AUTO_SETTING);\n+//      this.timeAfterAutoId = LocalDateTime.now();\n+//      this.nextConfiguringProcess = ConfiguringProcess.CHECK_ID_AUTO_CONFIGURING;\n+//  } catch (OpenemsNamedException e) {\n+//      // Set was not successful, it will be tried until it succeeded\n+//      this.logError(this.log, \"Setting slave numbers not successful\");\n+//  }\n //}\n \n //private void setNumberOfModules() {\n-//\t// Set number of modules\n-//\tIntegerWriteChannel numberOfSlavesChannel = this\n-//\t\t\t.channel(SingleRackVersionC.ChannelId.WORK_PARAMETER_PCS_COMMUNICATION_RATE);\n-//\ttry {\n-//\t\tnumberOfSlavesChannel.setNextWriteValue(this.config.numberOfSlaves());\n-//\t\tnextConfiguringProcess = ConfiguringProcess.SET_ID_AUTO_CONFIGURING;\n-//\t} catch (OpenemsNamedException e) {\n-//\t\t// Set was not successful, it will be tried until it succeeded\n-//\t\tthis.logError(this.log, \"Setting slave numbers not successful. Will try again till it succeeds\");\n-//\t}\n+//  // Set number of modules\n+//  IntegerWriteChannel numberOfSlavesChannel = this\n+//          .channel(SingleRackVersionC.ChannelId.WORK_PARAMETER_PCS_COMMUNICATION_RATE);\n+//  try {\n+//      numberOfSlavesChannel.setNextWriteValue(this.config.numberOfSlaves());\n+//      nextConfiguringProcess = ConfiguringProcess.SET_ID_AUTO_CONFIGURING;\n+//  } catch (OpenemsNamedException e) {\n+//      // Set was not successful, it will be tried until it succeeded\n+//      this.logError(this.log, \"Setting slave numbers not successful. Will try again till it succeeds\");\n+//  }\n //}\n \n //private enum ConfiguringProcess {\n-//\tNONE, CONFIGURING_STARTED, SET_ID_AUTO_CONFIGURING, CHECK_ID_AUTO_CONFIGURING,\n-//\tSET_TEMPERATURE_ID_AUTO_CONFIGURING, CHECK_TEMPERATURE_ID_AUTO_CONFIGURING, SET_VOLTAGE_RANGES,\n-//\tCONFIGURING_FINISHED, RESTART_AFTER_SETTING\n+//  NONE, CONFIGURING_STARTED, SET_ID_AUTO_CONFIGURING, CHECK_ID_AUTO_CONFIGURING,\n+//  SET_TEMPERATURE_ID_AUTO_CONFIGURING, CHECK_TEMPERATURE_ID_AUTO_CONFIGURING, SET_VOLTAGE_RANGES,\n+//  CONFIGURING_FINISHED, RESTART_AFTER_SETTING\n //}\n \n-\t/**\n-\t * Checks whether system has an undefined state, e.g. rack 1 & 2 are configured,\n-\t * but only rack 1 is running. This state can only be reached at startup coming\n-\t * from state undefined\n-\t * \n-\t * @return boolean\n-\t */\n+    /**\n+     * Checks whether system has an undefined state, e.g. rack 1 & 2 are configured,\n+     * but only rack 1 is running. This state can only be reached at startup coming\n+     * from state undefined\n+     * \n+     * @return boolean\n+     */\n //private boolean isSystemStatePending() {\n-//\treturn !isSystemRunning() && !isSystemStopped();\n+//  return !isSystemRunning() && !isSystemStopped();\n //}\n \n-\t@Override\n-\tpublic State getNextState(Context context) throws OpenemsNamedException {\n-\t\tSystem.out.println(\"Stuck in GO_CONFIGURATION\");\n-\t\treturn State.GO_CONFIGURATION;\n-\t}\n+    @Override\n+    public State getNextState(Context context) throws OpenemsNamedException {\n+        System.out.println(\"Stuck in GO_CONFIGURATION\");\n+        return State.GO_CONFIGURATION;\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 185
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "214",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 1, expected is 0, indentation should be the same level as line 224.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_random/7/GoConfiguration.java\nindex 2ef4f5e42d..e74edcbd38 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_random/7/GoConfiguration.java\n@@ -219,10 +219,9 @@ public class GoConfiguration extends State.Handler {\n \t * @return boolean\n \t */\n //private boolean isSystemStatePending() {\n-//\treturn !isSystemRunning() && !isSystemStopped();\n-//}\n+//\treturn !isSystemRunning() && !isSystemStopped();//}\n \n-\t@Override\n+@Override\n \tpublic State getNextState(Context context) throws OpenemsNamedException {\n \t\tSystem.out.println(\"Stuck in GO_CONFIGURATION\");\n \t\treturn State.GO_CONFIGURATION;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "222",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 224.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_three_grams/7/GoConfiguration.java\nindex 2ef4f5e42d..d8cb4f5b98 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/errored/1/7/GoConfiguration.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/OpenEMS-openems/styler_three_grams/7/GoConfiguration.java\n@@ -219,8 +219,7 @@ public class GoConfiguration extends State.Handler {\n \t * @return boolean\n \t */\n //private boolean isSystemStatePending() {\n-//\treturn !isSystemRunning() && !isSystemStopped();\n-//}\n+//\treturn !isSystemRunning() && !isSystemStopped(); //}\n \n \t@Override\n \tpublic State getNextState(Context context) throws OpenemsNamedException {\n",
            "diff_size": 2
        }
    ]
}