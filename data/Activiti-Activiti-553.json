{
    "error_id": "553",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.cmd;\n\nimport java.io.Serializable;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/553/GetTableNameCmd.java\nindex 17b74c4f79..efbdd26f6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/553/GetTableNameCmd.java\n@@ -1,41 +1,42 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.engine.impl.cmd;\r\n-\r\n-import java.io.Serializable;\r\n-\r\n-import org.activiti.engine.ActivitiIllegalArgumentException;\r\n-import org.activiti.engine.impl.interceptor.Command;\r\n-import org.activiti.engine.impl.interceptor.CommandContext;\r\n-\r\n-public class GetTableNameCmd implements Command<String>, Serializable {\r\n-\r\n-  private static final long serialVersionUID = 1L;\r\n-\r\n-  private Class<?> entityClass;\r\n-\r\n-  public GetTableNameCmd(Class<?> entityClass) {\r\n-    this.entityClass = entityClass;\r\n-  }\r\n-\r\n-  public String execute(CommandContext commandContext) {\r\n-    if (entityClass == null) {\r\n-      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\r\n-    }\r\n-    return commandContext.getTableDataManager().getTableName(entityClass, true);\r\n-  }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.engine.impl.cmd;\n+\n+import java.io.Serializable;\n+\n+import org.activiti.engine.ActivitiIllegalArgumentException;\n+import org.activiti.engine.impl.interceptor.Command;\n+import org.activiti.engine.impl.interceptor.CommandContext;\n+\n+public class GetTableNameCmd implements Command<String>, Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  private Class<?> entityClass;\n+\n+  public GetTableNameCmd(Class<?> entityClass) {\n+    this.entityClass = entityClass;\n+  }\n+\n+  public String execute(CommandContext commandContext) {\n+    if (entityClass == null) {\n+      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\n+    }\n+    return commandContext.getTableDataManager().getTableName(entityClass, true);\n+  }\n+\n+}\n",
            "diff_size": 42
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/553/GetTableNameCmd.java\nindex 17b74c4f79..0e77af5640 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/553/GetTableNameCmd.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.activiti.engine.impl.cmd;\r\n \r\n import java.io.Serializable;\r\n@@ -23,19 +24,19 @@ import org.activiti.engine.impl.interceptor.CommandContext;\n \r\n public class GetTableNameCmd implements Command<String>, Serializable {\r\n \r\n-  private static final long serialVersionUID = 1L;\r\n+    private static final long serialVersionUID = 1L;\r\n \r\n-  private Class<?> entityClass;\r\n+    private Class<?> entityClass;\r\n \r\n-  public GetTableNameCmd(Class<?> entityClass) {\r\n-    this.entityClass = entityClass;\r\n-  }\r\n+    public GetTableNameCmd(Class<?> entityClass) {\r\n+        this.entityClass = entityClass;\r\n+    }\r\n \r\n-  public String execute(CommandContext commandContext) {\r\n-    if (entityClass == null) {\r\n-      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\r\n+    public String execute(CommandContext commandContext) {\r\n+        if (entityClass == null) {\r\n+            throw new ActivitiIllegalArgumentException(\"entityClass is null\");\r\n+        }\r\n+        return commandContext.getTableDataManager().getTableName(entityClass, true);\r\n     }\r\n-    return commandContext.getTableDataManager().getTableName(entityClass, true);\r\n-  }\r\n \r\n }\r\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/553/GetTableNameCmd.java\nindex 17b74c4f79..5f768733f3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/553/GetTableNameCmd.java\n@@ -13,29 +13,28 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.activiti.engine.impl.cmd;\r\n-\r\n-import java.io.Serializable;\r\n-\r\n-import org.activiti.engine.ActivitiIllegalArgumentException;\r\n-import org.activiti.engine.impl.interceptor.Command;\r\n-import org.activiti.engine.impl.interceptor.CommandContext;\r\n-\r\n-public class GetTableNameCmd implements Command<String>, Serializable {\r\n-\r\n-  private static final long serialVersionUID = 1L;\r\n-\r\n-  private Class<?> entityClass;\r\n-\r\n-  public GetTableNameCmd(Class<?> entityClass) {\r\n-    this.entityClass = entityClass;\r\n-  }\r\n-\r\n-  public String execute(CommandContext commandContext) {\r\n-    if (entityClass == null) {\r\n-      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\r\n-    }\r\n-    return commandContext.getTableDataManager().getTableName(entityClass, true);\r\n-  }\r\n-\r\n-}\r\n+package org.activiti.engine.impl.cmd;\n+\n+import java.io.Serializable;\n+import org.activiti.engine.ActivitiIllegalArgumentException;\n+import org.activiti.engine.impl.interceptor.Command;\n+import org.activiti.engine.impl.interceptor.CommandContext;\n+\n+\n+public class GetTableNameCmd implements Command<String>, Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private Class<?> entityClass;\n+\n+    public GetTableNameCmd(Class<?> entityClass) {\n+    this.entityClass = entityClass;\n+    }\n+\n+    public String execute(CommandContext commandContext) {\n+    if (entityClass == null) {\n+        throw new ActivitiIllegalArgumentException(\"entityClass is null\");\n+    }\n+    return commandContext.getTableDataManager().getTableName(entityClass, true);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/553/GetTableNameCmd.java\nindex 17b74c4f79..efbdd26f6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/553/GetTableNameCmd.java\n@@ -1,41 +1,42 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.engine.impl.cmd;\r\n-\r\n-import java.io.Serializable;\r\n-\r\n-import org.activiti.engine.ActivitiIllegalArgumentException;\r\n-import org.activiti.engine.impl.interceptor.Command;\r\n-import org.activiti.engine.impl.interceptor.CommandContext;\r\n-\r\n-public class GetTableNameCmd implements Command<String>, Serializable {\r\n-\r\n-  private static final long serialVersionUID = 1L;\r\n-\r\n-  private Class<?> entityClass;\r\n-\r\n-  public GetTableNameCmd(Class<?> entityClass) {\r\n-    this.entityClass = entityClass;\r\n-  }\r\n-\r\n-  public String execute(CommandContext commandContext) {\r\n-    if (entityClass == null) {\r\n-      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\r\n-    }\r\n-    return commandContext.getTableDataManager().getTableName(entityClass, true);\r\n-  }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.engine.impl.cmd;\n+\n+import java.io.Serializable;\n+\n+import org.activiti.engine.ActivitiIllegalArgumentException;\n+import org.activiti.engine.impl.interceptor.Command;\n+import org.activiti.engine.impl.interceptor.CommandContext;\n+\n+public class GetTableNameCmd implements Command<String>, Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  private Class<?> entityClass;\n+\n+  public GetTableNameCmd(Class<?> entityClass) {\n+    this.entityClass = entityClass;\n+  }\n+\n+  public String execute(CommandContext commandContext) {\n+    if (entityClass == null) {\n+      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\n+    }\n+    return commandContext.getTableDataManager().getTableName(entityClass, true);\n+  }\n+\n+}\n",
            "diff_size": 42
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/553/GetTableNameCmd.java\nindex 17b74c4f79..efbdd26f6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/553/GetTableNameCmd.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/553/GetTableNameCmd.java\n@@ -1,41 +1,42 @@\n-/*\r\n- * Copyright 2010-2020 Alfresco Software, Ltd.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *     http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-package org.activiti.engine.impl.cmd;\r\n-\r\n-import java.io.Serializable;\r\n-\r\n-import org.activiti.engine.ActivitiIllegalArgumentException;\r\n-import org.activiti.engine.impl.interceptor.Command;\r\n-import org.activiti.engine.impl.interceptor.CommandContext;\r\n-\r\n-public class GetTableNameCmd implements Command<String>, Serializable {\r\n-\r\n-  private static final long serialVersionUID = 1L;\r\n-\r\n-  private Class<?> entityClass;\r\n-\r\n-  public GetTableNameCmd(Class<?> entityClass) {\r\n-    this.entityClass = entityClass;\r\n-  }\r\n-\r\n-  public String execute(CommandContext commandContext) {\r\n-    if (entityClass == null) {\r\n-      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\r\n-    }\r\n-    return commandContext.getTableDataManager().getTableName(entityClass, true);\r\n-  }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2010-2020 Alfresco Software, Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.activiti.engine.impl.cmd;\n+\n+import java.io.Serializable;\n+\n+import org.activiti.engine.ActivitiIllegalArgumentException;\n+import org.activiti.engine.impl.interceptor.Command;\n+import org.activiti.engine.impl.interceptor.CommandContext;\n+\n+public class GetTableNameCmd implements Command<String>, Serializable {\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  private Class<?> entityClass;\n+\n+  public GetTableNameCmd(Class<?> entityClass) {\n+    this.entityClass = entityClass;\n+  }\n+\n+  public String execute(CommandContext commandContext) {\n+    if (entityClass == null) {\n+      throw new ActivitiIllegalArgumentException(\"entityClass is null\");\n+    }\n+    return commandContext.getTableDataManager().getTableName(entityClass, true);\n+  }\n+\n+}\n",
            "diff_size": 42
        }
    ]
}