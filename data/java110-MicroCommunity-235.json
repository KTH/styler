{
    "error_id": "235",
    "information": {
        "errors": [
            {
                "line": "48",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 166).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n\n        return machines;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/235/MachineInnerServiceSMOImpl.java\nindex 0344916c1b..f31087b044 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/235/MachineInnerServiceSMOImpl.java\n@@ -43,9 +43,7 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             machineDto.setPage((page - 1) * machineDto.getRow());\n-        }\n-\n-        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n+        } List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n \n         return machines;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/235/MachineInnerServiceSMOImpl.java\nindex 0344916c1b..82505c93ea 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/235/MachineInnerServiceSMOImpl.java\n@@ -28,75 +28,76 @@ import java.util.List;\n @RestController\n public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachineInnerServiceSMO {\n \n-    @Autowired\n-    private IMachineServiceDao machineServiceDaoImpl;\n+  @Autowired\n+  private IMachineServiceDao machineServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<MachineDto> queryMachines(@RequestBody MachineDto machineDto) {\n+  @Override\n+  public List<MachineDto> queryMachines(@RequestBody MachineDto machineDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = machineDto.getPage();\n+    int page = machineDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            machineDto.setPage((page - 1) * machineDto.getRow());\n-        }\n-\n-        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n-\n-        return machines;\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      machineDto.setPage((page - 1) * machineDto.getRow());\n     }\n \n-    /**\n-     * \u83b7\u53d6\u6279\u91cfuserId\n-     *\n-     * @param demos \u5c0f\u533a\u697c\u4fe1\u606f\n-     * @return \u6279\u91cfuserIds \u4fe1\u606f\n-     */\n-    private String[] getUserIds(List<DemoDto> demos) {\n-        List<String> userIds = new ArrayList<String>();\n-        for (DemoDto demo : demos) {\n-            userIds.add(demo.getUserId());\n-        }\n-\n-        return userIds.toArray(new String[userIds.size()]);\n+    List<MachineDto> machines =\n+      BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n+\n+    return machines;\n+  }\n+\n+  /**\n+   * \u83b7\u53d6\u6279\u91cfuserId\n+   *\n+   * @param demos \u5c0f\u533a\u697c\u4fe1\u606f\n+   * @return \u6279\u91cfuserIds \u4fe1\u606f\n+   */\n+  private String[] getUserIds(List<DemoDto> demos) {\n+    List<String> userIds = new ArrayList<String>();\n+    for (DemoDto demo : demos) {\n+      userIds.add(demo.getUserId());\n     }\n \n-    /**\n-     * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n-     *\n-     * @param demo  \u5c0f\u533ademo\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n-     */\n-    private void refreshDemo(DemoDto demo, List<UserDto> users) {\n-        for (UserDto user : users) {\n-            if (demo.getUserId().equals(user.getUserId())) {\n-                BeanConvertUtil.covertBean(user, demo);\n-            }\n-        }\n+    return userIds.toArray(new String[userIds.size()]);\n+  }\n+\n+  /**\n+   * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n+   *\n+   * @param demo  \u5c0f\u533ademo\u4fe1\u606f\n+   * @param users \u7528\u6237\u5217\u8868\n+   */\n+  private void refreshDemo(DemoDto demo, List<UserDto> users) {\n+    for (UserDto user : users) {\n+      if (demo.getUserId().equals(user.getUserId())) {\n+        BeanConvertUtil.covertBean(user, demo);\n+      }\n     }\n+  }\n \n-    @Override\n-    public int queryMachinesCount(@RequestBody MachineDto machineDto) {\n-        return machineServiceDaoImpl.queryMachinesCount(BeanConvertUtil.beanCovertMap(machineDto));\n-    }\n+  @Override\n+  public int queryMachinesCount(@RequestBody MachineDto machineDto) {\n+    return machineServiceDaoImpl.queryMachinesCount(BeanConvertUtil.beanCovertMap(machineDto));\n+  }\n \n-    public IMachineServiceDao getMachineServiceDaoImpl() {\n-        return machineServiceDaoImpl;\n-    }\n+  public IMachineServiceDao getMachineServiceDaoImpl() {\n+    return machineServiceDaoImpl;\n+  }\n \n-    public void setMachineServiceDaoImpl(IMachineServiceDao machineServiceDaoImpl) {\n-        this.machineServiceDaoImpl = machineServiceDaoImpl;\n-    }\n+  public void setMachineServiceDaoImpl(IMachineServiceDao machineServiceDaoImpl) {\n+    this.machineServiceDaoImpl = machineServiceDaoImpl;\n+  }\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/235/MachineInnerServiceSMOImpl.java\nindex 0344916c1b..a6ad82fcc3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/235/MachineInnerServiceSMOImpl.java\n@@ -99,4 +99,4 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/235/MachineInnerServiceSMOImpl.java\nindex 0344916c1b..1ad195cb93 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/235/MachineInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.common.smo.impl;\n \n-\n import com.java110.common.dao.IMachineServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.core.smo.common.IMachineInnerServiceSMO;\n@@ -13,7 +12,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -25,6 +23,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachineInnerServiceSMO {\n \n@@ -38,9 +38,7 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n     public List<MachineDto> queryMachines(@RequestBody MachineDto machineDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = machineDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             machineDto.setPage((page - 1) * machineDto.getRow());\n         }\n@@ -56,6 +54,8 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n      * @param demos \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<DemoDto> demos) {\n         List<String> userIds = new ArrayList<String>();\n         for (DemoDto demo : demos) {\n@@ -71,6 +71,8 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n      * @param demo  \u5c0f\u533ademo\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshDemo(DemoDto demo, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (demo.getUserId().equals(user.getUserId())) {\n@@ -79,6 +81,7 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n         }\n     }\n \n+\n     @Override\n     public int queryMachinesCount(@RequestBody MachineDto machineDto) {\n         return machineServiceDaoImpl.queryMachinesCount(BeanConvertUtil.beanCovertMap(machineDto));\n@@ -99,4 +102,4 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/235/MachineInnerServiceSMOImpl.java\nindex 0344916c1b..f31087b044 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/235/MachineInnerServiceSMOImpl.java\n@@ -43,9 +43,7 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             machineDto.setPage((page - 1) * machineDto.getRow());\n-        }\n-\n-        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n+        } List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n \n         return machines;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/235/MachineInnerServiceSMOImpl.java\nindex 0344916c1b..4074711413 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/235/MachineInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/235/MachineInnerServiceSMOImpl.java\n@@ -43,9 +43,7 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             machineDto.setPage((page - 1) * machineDto.getRow());\n-        }\n-\n-        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n+        } List<MachineDto>machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n \n         return machines;\n     }\n",
            "diff_size": 3
        }
    ]
}