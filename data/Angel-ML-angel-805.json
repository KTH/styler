{
    "error_id": "805",
    "information": {
        "errors": [
            {
                "line": "80",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        // set input, output path\n        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n        conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n        conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n        conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/805/GBDTTest.java\nindex 3080dea773..8a3ca1dbfb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler/805/GBDTTest.java\n@@ -76,8 +76,7 @@ public class GBDTTest {\n         // Use local deploy mode and dummy data spliter\n         conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n-        // set input, output path\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+        // set input, output path conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n         conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/805/GBDTTest.java\nindex 3080dea773..45d393ad96 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/intellij/805/GBDTTest.java\n@@ -77,7 +77,8 @@ public class GBDTTest {\n         conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n         // set input, output path\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS,\n+                CombineTextInputFormat.class.getName());\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n         conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n@@ -108,7 +109,7 @@ public class GBDTTest {\n     }\n \n     @Test\n-    public void predict() throws IOException{\n+    public void predict() throws IOException {\n         // Load Model from HDFS.\n         String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n         conf.set(\"gbdt.split.feature\", TMP_PATH + \"/out/xxx\");\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 103.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 8, indentation should be the same level as line 113.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/805/GBDTTest.java\nindex 3080dea773..925dd523cd 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/naturalize/805/GBDTTest.java\n@@ -35,17 +35,17 @@ import java.io.IOException;\n \n public class GBDTTest {\n \n-    private static final Log LOG = LogFactory.getLog(GBDTTest.class);\n+  private static final Log LOG = LogFactory.getLog(GBDTTest.class);\n \n     private Configuration conf = new Configuration();\n \n     static {\n-        PropertyConfigurator.configure(\"../conf/log4j.properties\");\n+  PropertyConfigurator.configure(\"../conf/log4j.properties\");\n     }\n \n     @Before\n     public void setup() {\n-        String inputPath = \"./src/test/data/gbdt/agaricus.txt.train\";\n+  String inputPath = \"./src/test/data/gbdt/agaricus.txt.train\";\n \n         // Feature number of train data\n         int featureNum = 127;\n@@ -99,7 +99,7 @@ public class GBDTTest {\n \n     @Test\n     public void train() throws Exception {\n-        // Submit GBDT Train Task\n+// Submit GBDT Train Task\n         GBDTRunner runner = new GBDTRunner();\n         runner.train(conf);\n \n@@ -108,8 +108,8 @@ public class GBDTTest {\n     }\n \n     @Test\n-    public void predict() throws IOException{\n-        // Load Model from HDFS.\n+    public void predict() throws IOException {\n+  // Load Model from HDFS.\n         String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n         conf.set(\"gbdt.split.feature\", TMP_PATH + \"/out/xxx\");\n         conf.set(\"gbdt.split.value\", TMP_PATH + \"/out/xxx\");\n@@ -122,4 +122,4 @@ public class GBDTTest {\n         angelClient.stop();\n \n     }\n-}\n+  }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 67.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 73.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 76.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 82.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/805/GBDTTest.java\nindex 3080dea773..1bf4b723ce 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/codebuff/805/GBDTTest.java\n@@ -30,96 +30,88 @@ import org.apache.hadoop.mapreduce.lib.input.CombineTextInputFormat;\n import org.apache.log4j.PropertyConfigurator;\n import org.junit.Before;\n import org.junit.Test;\n-\n import java.io.IOException;\n \n public class GBDTTest {\n-\n     private static final Log LOG = LogFactory.getLog(GBDTTest.class);\n-\n     private Configuration conf = new Configuration();\n \n     static {\n-        PropertyConfigurator.configure(\"../conf/log4j.properties\");\n+    PropertyConfigurator.configure(\"../conf/log4j.properties\");\n     }\n \n     @Before\n     public void setup() {\n-        String inputPath = \"./src/test/data/gbdt/agaricus.txt.train\";\n+    String inputPath = \"./src/test/data/gbdt/agaricus.txt.train\";\n \n         // Feature number of train data\n-        int featureNum = 127;\n+    int featureNum = 127;\n         // Number of nonzero features\n-        int featureNzz = 25;\n+    int featureNzz = 25;\n         // Tree number\n-        int treeNum = 2;\n+    int treeNum = 2;\n         // Tree depth\n-        int treeDepth = 3;\n+    int treeDepth = 3;\n         // Split number\n-        int splitNum = 10;\n+    int splitNum = 10;\n         // Feature sample ratio\n-        double sampleRatio = 1.0;\n+    double sampleRatio = 1.0;\n \n         // Data format\n-        String dataFmt = \"libsvm\";\n+    String dataFmt = \"libsvm\";\n \n         // Learning rate\n-        double learnRate = 0.01;\n+    double learnRate = 0.01;\n \n         // Set basic configuration keys\n-        String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n-        String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n-\n-        conf.setBoolean(\"mapred.mapper.new-api\", true);\n-        conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n+    String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n+    String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+    conf.setBoolean(\"mapred.mapper.new-api\", true);\n+    conf.setBoolean(AngelConfiguration.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n \n         // Use local deploy mode and dummy data spliter\n-        conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n+    conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n         // set input, output path\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n-        conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n-        conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n-        conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n+    conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+    conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n+    conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n+    conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n \n         //set angel resource parameters #worker, #task, #PS\n-        conf.setInt(AngelConfiguration.ANGEL_WORKERGROUP_NUMBER, 1);\n-        conf.setInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, 1);\n-        conf.setInt(AngelConfiguration.ANGEL_PS_NUMBER, 1);\n+    conf.setInt(AngelConfiguration.ANGEL_WORKERGROUP_NUMBER, 1);\n+    conf.setInt(AngelConfiguration.ANGEL_WORKER_TASK_NUMBER, 1);\n+    conf.setInt(AngelConfiguration.ANGEL_PS_NUMBER, 1);\n \n         // Set GBDT algorithm parameters\n-        conf.set(MLConf.ML_FEATURE_NUM(), String.valueOf(featureNum));\n-        conf.set(MLConf.ML_FEATURE_NNZ(), String.valueOf(featureNzz));\n-        conf.set(MLConf.ML_GBDT_TREE_NUM(), String.valueOf(treeNum));\n-        conf.set(MLConf.ML_GBDT_TREE_DEPTH(), String.valueOf(treeDepth));\n-        conf.set(MLConf.ML_GBDT_SPLIT_NUM(), String.valueOf(splitNum));\n-        conf.set(MLConf.ML_GBDT_SAMPLE_RATIO(), String.valueOf(sampleRatio));\n-        conf.set(MLConf.ML_LEARN_RATE(), String.valueOf(learnRate));\n+    conf.set(MLConf.ML_FEATURE_NUM(), String.valueOf(featureNum));\n+    conf.set(MLConf.ML_FEATURE_NNZ(), String.valueOf(featureNzz));\n+    conf.set(MLConf.ML_GBDT_TREE_NUM(), String.valueOf(treeNum));\n+    conf.set(MLConf.ML_GBDT_TREE_DEPTH(), String.valueOf(treeDepth));\n+    conf.set(MLConf.ML_GBDT_SPLIT_NUM(), String.valueOf(splitNum));\n+    conf.set(MLConf.ML_GBDT_SAMPLE_RATIO(), String.valueOf(sampleRatio));\n+    conf.set(MLConf.ML_LEARN_RATE(), String.valueOf(learnRate));\n     }\n \n     @Test\n     public void train() throws Exception {\n         // Submit GBDT Train Task\n-        GBDTRunner runner = new GBDTRunner();\n-        runner.train(conf);\n-\n-        AngelClient angelClient = AngelClientFactory.get(conf);\n-        angelClient.stop();\n+    GBDTRunner runner = new GBDTRunner();\n+    runner.train(conf);\n+    AngelClient angelClient = AngelClientFactory.get(conf);\n+    angelClient.stop();\n     }\n \n     @Test\n-    public void predict() throws IOException{\n+    public void predict() throws IOException {\n         // Load Model from HDFS.\n-        String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n-        conf.set(\"gbdt.split.feature\", TMP_PATH + \"/out/xxx\");\n-        conf.set(\"gbdt.split.value\", TMP_PATH + \"/out/xxx\");\n-\n-        GBDTRunner runner = new GBDTRunner();\n-\n-        runner.predict(conf);\n-\n-        AngelClient angelClient = AngelClientFactory.get(conf);\n-        angelClient.stop();\n-\n+    String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+    conf.set(\"gbdt.split.feature\", TMP_PATH + \"/out/xxx\");\n+    conf.set(\"gbdt.split.value\", TMP_PATH + \"/out/xxx\");\n+    GBDTRunner runner = new GBDTRunner();\n+    runner.predict(conf);\n+    AngelClient angelClient = AngelClientFactory.get(conf);\n+    angelClient.stop();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "166",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/805/GBDTTest.java\nindex 3080dea773..0240afc6d9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_random/805/GBDTTest.java\n@@ -77,8 +77,7 @@ public class GBDTTest {\n         conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n         // set input, output path\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n-        conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n+        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat. class . getName());conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n         conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/805/GBDTTest.java\nindex 3080dea773..8a3ca1dbfb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/errored/1/805/GBDTTest.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Angel-ML-angel/styler_three_grams/805/GBDTTest.java\n@@ -76,8 +76,7 @@ public class GBDTTest {\n         // Use local deploy mode and dummy data spliter\n         conf.set(AngelConfiguration.ANGEL_DEPLOY_MODE, \"LOCAL\");\n \n-        // set input, output path\n-        conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n+        // set input, output path conf.set(AngelConfiguration.ANGEL_INPUTFORMAT_CLASS, CombineTextInputFormat.class.getName());\n         conf.set(AngelConfiguration.ANGEL_TRAIN_DATA_PATH, inputPath);\n         conf.set(AngelConfiguration.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/out\");\n         conf.set(AngelConfiguration.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/LOG/log\");\n",
            "diff_size": 2
        }
    ]
}