{
    "error_id": "176",
    "information": {
        "errors": [
            {
                "line": "234",
                "column": "53",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            sb.append(')');\n\n            return sb.toString().replaceAll(\"\\\\*\\\\*\",\"*\");\n        }\n\n        return super.toString();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/176/Filter.java\nindex 6718ab0c1b..b206ed4f5e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler/176/Filter.java\n@@ -231,7 +231,7 @@ public class Filter {\n             }\n             sb.append(')');\n \n-            return sb.toString().replaceAll(\"\\\\*\\\\*\",\"*\");\n+            return sb.toString().replaceAll(\"\\\\*\\\\*\", \"*\");\n         }\n \n         return super.toString();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/176/Filter.java\nindex 6718ab0c1b..602bee6190 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/intellij/176/Filter.java\n@@ -85,7 +85,7 @@ public class Filter {\n     }\n \n     public static Filter createSubstringFilter(final String attributeName, final String subInitial,\n-            final String[] subAny, final String subFinal) {\n+                                               final String[] subAny, final String subFinal) {\n         return new Filter(FilterType.SUBSTRING, attributeName, subInitial, subAny, subFinal);\n     }\n \n@@ -198,9 +198,9 @@ public class Filter {\n             }\n         }\n         if ((FilterType.EQUALITY == this.type) || (FilterType.LESS_OR_EQUAL == this.type)\n-                || (FilterType.GREATER_OR_EQUAL == this.type)) {\n+            || (FilterType.GREATER_OR_EQUAL == this.type)) {\n             return sb.append(this.attributeName).append(this.type.getSign()).append(this.assertionValue).append(')')\n-                    .toString();\n+                .toString();\n         }\n \n         if (FilterType.PRESENCE == this.type) {\n@@ -209,7 +209,7 @@ public class Filter {\n \n         if (FilterType.APPROXIMATE_MATCH == this.type) {\n             return sb.append(this.attributeName).append(this.type.getSign()).append(\"=\").append(this.assertionValue)\n-                    .append(')').toString();\n+                .append(')').toString();\n         }\n \n         if (FilterType.SUBSTRING == this.type) {\n@@ -231,7 +231,7 @@ public class Filter {\n             }\n             sb.append(')');\n \n-            return sb.toString().replaceAll(\"\\\\*\\\\*\",\"*\");\n+            return sb.toString().replaceAll(\"\\\\*\\\\*\", \"*\");\n         }\n \n         return super.toString();\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/176/Filter.java\nindex 6718ab0c1b..e2f30ceb16 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/naturalize/176/Filter.java\n@@ -231,10 +231,10 @@ public class Filter {\n             }\n             sb.append(')');\n \n-            return sb.toString().replaceAll(\"\\\\*\\\\*\",\"*\");\n+            return sb.toString().replaceAll(\"\\\\*\\\\*\", \"*\");\n         }\n \n         return super.toString();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/176/Filter.java\nindex 6718ab0c1b..28434e964a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/codebuff/176/Filter.java\n@@ -7,20 +7,18 @@ import java.util.List;\n  *\n  * @author Yuriy Movchan Date: 2017/12/12\n  */\n+\n+\n public class Filter {\n \n     private FilterType type;\n-\n     private Filter[] filters;\n-\n     private String filterString;\n     private String attributeName;\n     private Object assertionValue;\n-\n     private String subInitial;\n     private String[] subAny;\n     private String subFinal;\n-\n     private boolean arrayAttribute = false;\n \n     public Filter(FilterType type) {\n@@ -55,6 +53,7 @@ public class Filter {\n      * This method force filter to use specific syntax. It's not useful when we need\n      * to support different persistent mechanisms\n      */\n+\n     @Deprecated\n     public static Filter create(final String filterString) {\n         return new Filter(FilterType.RAW, filterString);\n@@ -84,8 +83,9 @@ public class Filter {\n         return new Filter(FilterType.APPROXIMATE_MATCH, attributeName, assertionValue);\n     }\n \n-    public static Filter createSubstringFilter(final String attributeName, final String subInitial,\n-            final String[] subAny, final String subFinal) {\n+    public static Filter createSubstringFilter(final String attributeName,\n+                                               final String subInitial,\n+                                               final String[] subAny, final String subFinal) {\n         return new Filter(FilterType.SUBSTRING, attributeName, subInitial, subAny, subFinal);\n     }\n \n@@ -185,7 +185,6 @@ public class Filter {\n         }\n \n         StringBuilder sb = new StringBuilder(\"(\");\n-\n         if ((FilterType.NOT == this.type) || (FilterType.AND == this.type) || (FilterType.OR == this.type)) {\n             if (this.filters != null) {\n                 sb.append(this.type.getSign());\n@@ -193,14 +192,12 @@ public class Filter {\n                     sb.append(filter.toString());\n                 }\n                 sb.append(\")\");\n-\n                 return sb.toString();\n             }\n         }\n-        if ((FilterType.EQUALITY == this.type) || (FilterType.LESS_OR_EQUAL == this.type)\n-                || (FilterType.GREATER_OR_EQUAL == this.type)) {\n-            return sb.append(this.attributeName).append(this.type.getSign()).append(this.assertionValue).append(')')\n-                    .toString();\n+\n+        if ((FilterType.EQUALITY == this.type) || (FilterType.LESS_OR_EQUAL == this.type) || (FilterType.GREATER_OR_EQUAL == this.type)) {\n+            return sb.append(this.attributeName).append(this.type.getSign()).append(this.assertionValue).append(')').toString();\n         }\n \n         if (FilterType.PRESENCE == this.type) {\n@@ -208,16 +205,17 @@ public class Filter {\n         }\n \n         if (FilterType.APPROXIMATE_MATCH == this.type) {\n-            return sb.append(this.attributeName).append(this.type.getSign()).append(\"=\").append(this.assertionValue)\n-                    .append(')').toString();\n+            return sb.append(this.attributeName).append(this.type.getSign()).append(\"=\").append(this.assertionValue).append(')').toString();\n         }\n \n         if (FilterType.SUBSTRING == this.type) {\n             sb.append(this.attributeName).append(this.type.getSign());\n+\n             if (this.subInitial != null) {\n                 sb.append(this.subInitial);\n                 sb.append('*');\n             }\n+\n             if (this.subAny != null) {\n                 sb.append('*');\n                 for (final String s : subAny) {\n@@ -225,16 +223,16 @@ public class Filter {\n                     sb.append('*');\n                 }\n             }\n+\n             if (this.subFinal != null) {\n                 sb.append('*');\n                 sb.append(this.subFinal);\n             }\n             sb.append(')');\n-\n-            return sb.toString().replaceAll(\"\\\\*\\\\*\",\"*\");\n+            return sb.toString().replaceAll(\"\\\\*\\\\*\", \"*\");\n         }\n \n         return super.toString();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/176/Filter.java\nindex 6718ab0c1b..b206ed4f5e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/errored/1/176/Filter.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/GluuFederation-oxCore/styler_random/176/Filter.java\n@@ -231,7 +231,7 @@ public class Filter {\n             }\n             sb.append(')');\n \n-            return sb.toString().replaceAll(\"\\\\*\\\\*\",\"*\");\n+            return sb.toString().replaceAll(\"\\\\*\\\\*\", \"*\");\n         }\n \n         return super.toString();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "234",
                    "column": "53",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}