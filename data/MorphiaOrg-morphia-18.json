{
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "247",
                "column": "13",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    public PropertyModel<?> getPropertyModelByName(final String name) {\n        for (final PropertyModel<?> propertyModel : getPropertyModels()) {\n            if(propertyModel.getName().equals(name)) {\n                return propertyModel;\n            }\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/18/EntityModel.java\nindex 0b849f5633..f66e131962 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler/18/EntityModel.java\n@@ -244,7 +244,7 @@ public class EntityModel<T> extends ClassModel<T> {\n \n     public PropertyModel<?> getPropertyModelByName(final String name) {\n         for (final PropertyModel<?> propertyModel : getPropertyModels()) {\n-            if(propertyModel.getName().equals(name)) {\n+            if (propertyModel.getName().equals(name)) {\n                 return propertyModel;\n             }\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/18/EntityModel.java\nindex 0b849f5633..89a8b7cd7f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/intellij/18/EntityModel.java\n@@ -164,7 +164,7 @@ public class EntityModel<T> extends ClassModel<T> {\n     @Override\n     public String toString() {\n         String fields = fieldModels.stream().map(f -> format(\"%s %s\", f.getTypeData(), f.getName()))\n-                                   .collect(Collectors.joining(\", \"));\n+            .collect(Collectors.joining(\", \"));\n         return format(\"%s<%s> { %s } \", EntityModel.class.getSimpleName(), getName(), fields);\n     }\n \n@@ -192,7 +192,7 @@ public class EntityModel<T> extends ClassModel<T> {\n             return false;\n         }\n         if (getLifecycleMethods() != null ? !getLifecycleMethods().equals(that.getLifecycleMethods())\n-                                          : that.getLifecycleMethods() != null) {\n+            : that.getLifecycleMethods() != null) {\n             return false;\n         }\n         return getCollectionName() != null ? getCollectionName().equals(that.getCollectionName()) : that.getCollectionName() == null;\n@@ -244,7 +244,7 @@ public class EntityModel<T> extends ClassModel<T> {\n \n     public PropertyModel<?> getPropertyModelByName(final String name) {\n         for (final PropertyModel<?> propertyModel : getPropertyModels()) {\n-            if(propertyModel.getName().equals(name)) {\n+            if (propertyModel.getName().equals(name)) {\n                 return propertyModel;\n             }\n         }\n@@ -299,7 +299,7 @@ public class EntityModel<T> extends ClassModel<T> {\n             for (final Class<? extends Annotation> annotationClass : LIFECYCLE_ANNOTATIONS) {\n                 if (method.isAnnotationPresent(annotationClass)) {\n                     lifecycleMethods.computeIfAbsent(annotationClass, c -> new ArrayList<>())\n-                                    .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n+                        .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n                 }\n             }\n         }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/18/EntityModel.java\nindex 0b849f5633..c3151aa326 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/naturalize/18/EntityModel.java\n@@ -244,7 +244,7 @@ public class EntityModel<T> extends ClassModel<T> {\n \n     public PropertyModel<?> getPropertyModelByName(final String name) {\n         for (final PropertyModel<?> propertyModel : getPropertyModels()) {\n-            if(propertyModel.getName().equals(name)) {\n+            if (propertyModel.getName().equals(name)) {\n                 return propertyModel;\n             }\n         }\n@@ -304,4 +304,4 @@ public class EntityModel<T> extends ClassModel<T> {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/18/EntityModel.java\nindex 0b849f5633..f66e131962 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_random/18/EntityModel.java\n@@ -244,7 +244,7 @@ public class EntityModel<T> extends ClassModel<T> {\n \n     public PropertyModel<?> getPropertyModelByName(final String name) {\n         for (final PropertyModel<?> propertyModel : getPropertyModels()) {\n-            if(propertyModel.getName().equals(name)) {\n+            if (propertyModel.getName().equals(name)) {\n                 return propertyModel;\n             }\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "246",
                    "column": "74",
                    "severity": "error",
                    "message": "'{' at column 74 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "246",
                    "column": "76",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "275",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "289",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "290",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "296",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "302",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "304",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/18/EntityModel.java\nindex 0b849f5633..7df2c93571 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/errored/1/18/EntityModel.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/MorphiaOrg-morphia/styler_three_grams/18/EntityModel.java\n@@ -243,65 +243,64 @@ public class EntityModel<T> extends ClassModel<T> {\n     }\n \n     public PropertyModel<?> getPropertyModelByName(final String name) {\n-        for (final PropertyModel<?> propertyModel : getPropertyModels()) {\n-            if(propertyModel.getName().equals(name)) {\n-                return propertyModel;\n-            }\n+        for (final PropertyModel<?> propertyModel : getPropertyModels()) { if(propertyModel.getName().equals(name)) {\n+            return propertyModel;\n         }\n-        return null;\n     }\n+    return null;\n+}\n \n-    /**\n+/**\n      * @param type the lifecycle event type\n      * @return true if that even has been configured\n      */\n-    public boolean hasLifecycle(final Class<? extends Annotation> type) {\n-        return getLifecycleMethods().containsKey(type);\n-    }\n+public boolean hasLifecycle(final Class<? extends Annotation> type) {\n+    return getLifecycleMethods().containsKey(type);\n+}\n \n-    private void callGlobalInterceptors(final Class<? extends Annotation> event, final Object entity, final Document document,\n-                                        final Mapper mapper) {\n-        for (final EntityInterceptor ei : mapper.getInterceptors()) {\n-            Sofia.logCallingInterceptorMethod(event.getSimpleName(), ei);\n-\n-            if (event.equals(PreLoad.class)) {\n-                ei.preLoad(entity, document, mapper);\n-            } else if (event.equals(PostLoad.class)) {\n-                ei.postLoad(entity, document, mapper);\n-            } else if (event.equals(PrePersist.class)) {\n-                ei.prePersist(entity, document, mapper);\n-            } else if (event.equals(PostPersist.class)) {\n-                ei.postPersist(entity, document, mapper);\n-            }\n+private void callGlobalInterceptors(final Class<? extends Annotation> event, final Object entity, final Document document,\n+                                    final Mapper mapper) {\n+    for (final EntityInterceptor ei : mapper.getInterceptors()) {\n+        Sofia.logCallingInterceptorMethod(event.getSimpleName(), ei);\n+\n+        if (event.equals(PreLoad.class)) {\n+            ei.preLoad(entity, document, mapper);\n+        } else if (event.equals(PostLoad.class)) {\n+            ei.postLoad(entity, document, mapper);\n+        } else if (event.equals(PrePersist.class)) {\n+            ei.prePersist(entity, document, mapper);\n+        } else if (event.equals(PostPersist.class)) {\n+            ei.postPersist(entity, document, mapper);\n         }\n     }\n+}\n \n-    private List<Method> getDeclaredAndInheritedMethods(final Class type) {\n-        final List<Method> methods = new ArrayList<>();\n-        if ((type == null) || (type == Object.class)) {\n-            return methods;\n-        }\n+private List<Method> getDeclaredAndInheritedMethods(final Class type) {\n+    final List<Method> methods = new ArrayList<>();\n+    if ((type == null) || (type == Object.class)) {\n+        return methods;\n+    }\n \n-        final Class parent = type.getSuperclass();\n-        methods.addAll(getDeclaredAndInheritedMethods(parent));\n+    final Class parent = type.getSuperclass();\n+    methods.addAll(getDeclaredAndInheritedMethods(parent));\n \n-        for (final Method m : type.getDeclaredMethods()) {\n-            if (!Modifier.isStatic(m.getModifiers())) {\n-                methods.add(m);\n-            }\n+    for (final Method m : type.getDeclaredMethods()) {\n+        if (!Modifier.isStatic(m.getModifiers())) {\n+            methods.add(m);\n         }\n-\n-        return methods;\n     }\n \n-    private void mapEvent(final Class<?> type, final boolean entityListener) {\n-        for (final Method method : getDeclaredAndInheritedMethods(type)) {\n-            for (final Class<? extends Annotation> annotationClass : LIFECYCLE_ANNOTATIONS) {\n-                if (method.isAnnotationPresent(annotationClass)) {\n-                    lifecycleMethods.computeIfAbsent(annotationClass, c -> new ArrayList<>())\n-                                    .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n-                }\n+    return methods;\n+}\n+\n+private void mapEvent(final Class<?> type, final boolean entityListener) {\n+    for (final Method method : getDeclaredAndInheritedMethods(type)) {\n+        for (final Class<? extends Annotation> annotationClass : LIFECYCLE_ANNOTATIONS) {\n+            if (method.isAnnotationPresent(annotationClass)) {\n+                lifecycleMethods.computeIfAbsent(annotationClass, c -> new ArrayList<>())\n+                                .add(new ClassMethodPair(datastore, method, entityListener ? type : null, annotationClass));\n             }\n         }\n     }\n }\n+}\n",
            "diff_size": 49
        }
    ]
}