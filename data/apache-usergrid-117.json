{
    "error_id": "117",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * <=,\n *\n * @author tnine\n */\npublic abstract class BooleanOperand extends Operand {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "13",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "20",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "13",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/117/BooleanOperand.java\nindex 22a6b965ea..64f64e342b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/intellij/117/BooleanOperand.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query.tree;\n \n \n@@ -29,21 +30,21 @@ import org.antlr.runtime.Token;\n public abstract class BooleanOperand extends Operand {\n \n \n-    /**\n-     * @param property\n-     * @param literal\n-     */\n-    public BooleanOperand( Token t ) {\n-        super( t );\n-    }\n+  /**\n+   * @param property\n+   * @param literal\n+   */\n+  public BooleanOperand(Token t) {\n+    super(t);\n+  }\n \n \n-    public Operand getLeft() {\n-        return ( Operand ) this.children.get( 0 );\n-    }\n+  public Operand getLeft() {\n+    return (Operand) this.children.get(0);\n+  }\n \n \n-    public Operand getRight() {\n-        return ( Operand ) this.children.get( 1 );\n-    }\n+  public Operand getRight() {\n+    return (Operand) this.children.get(1);\n+  }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/117/BooleanOperand.java\nindex 22a6b965ea..091e3f14fb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/naturalize/117/BooleanOperand.java\n@@ -28,7 +28,6 @@ import org.antlr.runtime.Token;\n  */\n public abstract class BooleanOperand extends Operand {\n \n-\n     /**\n      * @param property\n      * @param literal\n@@ -46,4 +45,4 @@ public abstract class BooleanOperand extends Operand {\n     public Operand getRight() {\n         return ( Operand ) this.children.get( 1 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/117/BooleanOperand.java\nindex 22a6b965ea..6463518cca 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/codebuff/117/BooleanOperand.java\n@@ -26,6 +26,8 @@ import org.antlr.runtime.Token;\n  *\n  * @author tnine\n  */\n+\n+\n public abstract class BooleanOperand extends Operand {\n \n \n@@ -33,6 +35,7 @@ public abstract class BooleanOperand extends Operand {\n      * @param property\n      * @param literal\n      */\n+\n     public BooleanOperand( Token t ) {\n         super( t );\n     }\n@@ -46,4 +49,4 @@ public abstract class BooleanOperand extends Operand {\n     public Operand getRight() {\n         return ( Operand ) this.children.get( 1 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/117/BooleanOperand.java\nindex 22a6b965ea..d35649d1c1 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/errored/1/117/BooleanOperand.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-usergrid/styler_three_grams/117/BooleanOperand.java\n@@ -19,7 +19,6 @@ package org.apache.usergrid.persistence.query.tree;\n \n import org.antlr.runtime.Token;\n \n-\n /**\n  * A base class for any equality expression.  Expressions must have a property and a value. Examples are >=, >, =, <,\n  * <=,\n",
            "diff_size": 1
        }
    ]
}