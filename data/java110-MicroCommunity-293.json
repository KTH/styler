{
    "error_id": "293",
    "information": {
        "errors": [
            {
                "line": "151",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 173).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n\n        return billOweFeeDtos;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/293/FeeInnerServiceSMOImpl.java\nindex d7919d51ad..5bdb7dbcf5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/293/FeeInnerServiceSMOImpl.java\n@@ -146,9 +146,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n-        }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        } List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/293/FeeInnerServiceSMOImpl.java\nindex d7919d51ad..92b7f0d503 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/293/FeeInnerServiceSMOImpl.java\n@@ -29,144 +29,145 @@ import java.util.List;\n @RestController\n public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerServiceSMO {\n \n-    @Autowired\n-    private IFeeServiceDao feeServiceDaoImpl;\n+  @Autowired\n+  private IFeeServiceDao feeServiceDaoImpl;\n \n-    @Autowired\n-    private IUserInnerServiceSMO userInnerServiceSMOImpl;\n+  @Autowired\n+  private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n-    @Override\n-    public List<FeeDto> queryFees(@RequestBody FeeDto feeDto) {\n+  @Override\n+  public List<FeeDto> queryFees(@RequestBody FeeDto feeDto) {\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeDto.getPage();\n+    int page = feeDto.getPage();\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            feeDto.setPage((page - 1) * feeDto.getRow());\n-        }\n-\n-        List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.getFeeInfo(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n-        if (fees == null || fees.size() == 0) {\n-            return fees;\n-        }\n+    if (page != PageDto.DEFAULT_PAGE) {\n+      feeDto.setPage((page - 1) * feeDto.getRow());\n+    }\n \n-        String[] userIds = getUserIds(fees);\n-        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n+    List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.getFeeInfo(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n \n-        for (FeeDto fee : fees) {\n-            refreshFee(fee, users);\n-        }\n-        return fees;\n+    if (fees == null || fees.size() == 0) {\n+      return fees;\n     }\n \n-    /**\n-     * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n-     *\n-     * @param fee   \u5c0f\u533a\u8d39\u7528\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n-     */\n-    private void refreshFee(FeeDto fee, List<UserDto> users) {\n-        for (UserDto user : users) {\n-            if (fee.getUserId().equals(user.getUserId())) {\n-                BeanConvertUtil.covertBean(user, fee);\n-            }\n-        }\n-    }\n+    String[] userIds = getUserIds(fees);\n+    //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n+    List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n \n-    /**\n-     * \u83b7\u53d6\u6279\u91cfuserId\n-     *\n-     * @param fees \u5c0f\u533a\u697c\u4fe1\u606f\n-     * @return \u6279\u91cfuserIds \u4fe1\u606f\n-     */\n-    private String[] getUserIds(List<FeeDto> fees) {\n-        List<String> userIds = new ArrayList<String>();\n-        for (FeeDto fee : fees) {\n-            userIds.add(fee.getUserId());\n-        }\n-\n-        return userIds.toArray(new String[userIds.size()]);\n+    for (FeeDto fee : fees) {\n+      refreshFee(fee, users);\n     }\n-\n-    @Override\n-    public int queryFeesCount(@RequestBody FeeDto feeDto) {\n-        return feeServiceDaoImpl.queryFeesCount(BeanConvertUtil.beanCovertMap(feeDto));\n+    return fees;\n+  }\n+\n+  /**\n+   * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n+   *\n+   * @param fee   \u5c0f\u533a\u8d39\u7528\u4fe1\u606f\n+   * @param users \u7528\u6237\u5217\u8868\n+   */\n+  private void refreshFee(FeeDto fee, List<UserDto> users) {\n+    for (UserDto user : users) {\n+      if (fee.getUserId().equals(user.getUserId())) {\n+        BeanConvertUtil.covertBean(user, fee);\n+      }\n     }\n-\n-\n-    @Override\n-    public int queryBillCount(@RequestBody BillDto billDto) {\n-        return feeServiceDaoImpl.queryBillCount(BeanConvertUtil.beanCovertMap(billDto));\n+  }\n+\n+  /**\n+   * \u83b7\u53d6\u6279\u91cfuserId\n+   *\n+   * @param fees \u5c0f\u533a\u697c\u4fe1\u606f\n+   * @return \u6279\u91cfuserIds \u4fe1\u606f\n+   */\n+  private String[] getUserIds(List<FeeDto> fees) {\n+    List<String> userIds = new ArrayList<String>();\n+    for (FeeDto fee : fees) {\n+      userIds.add(fee.getUserId());\n     }\n \n-    /**\n-     * \u67e5\u8be2\u8d26\u671f\n-     *\n-     * @param billDto\n-     * @return\n-     */\n-    @Override\n-    public List<BillDto> queryBills(@RequestBody BillDto billDto) {\n+    return userIds.toArray(new String[userIds.size()]);\n+  }\n+\n+  @Override\n+  public int queryFeesCount(@RequestBody FeeDto feeDto) {\n+    return feeServiceDaoImpl.queryFeesCount(BeanConvertUtil.beanCovertMap(feeDto));\n+  }\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n+  @Override\n+  public int queryBillCount(@RequestBody BillDto billDto) {\n+    return feeServiceDaoImpl.queryBillCount(BeanConvertUtil.beanCovertMap(billDto));\n+  }\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            billDto.setPage((page - 1) * billDto.getRow());\n-        }\n+  /**\n+   * \u67e5\u8be2\u8d26\u671f\n+   *\n+   * @param billDto\n+   * @return\n+   */\n+  @Override\n+  public List<BillDto> queryBills(@RequestBody BillDto billDto) {\n \n-        List<BillDto> billDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBills(BeanConvertUtil.beanCovertMap(billDto)), BillDto.class);\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        return billDtos;\n+    int page = billDto.getPage();\n \n+    if (page != PageDto.DEFAULT_PAGE) {\n+      billDto.setPage((page - 1) * billDto.getRow());\n     }\n \n+    List<BillDto> billDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBills(BeanConvertUtil.beanCovertMap(billDto)), BillDto.class);\n \n-    @Override\n-    public int queryBillOweFeeCount(@RequestBody BillOweFeeDto billDto) {\n-        return feeServiceDaoImpl.queryBillOweFeeCount(BeanConvertUtil.beanCovertMap(billDto));\n-    }\n+    return billDtos;\n \n-    /**\n-     * \u67e5\u8be2\u8d26\u671f\n-     *\n-     * @param billDto\n-     * @return\n-     */\n-    @Override\n-    public List<BillOweFeeDto> queryBillOweFees(@RequestBody BillOweFeeDto billDto) {\n+  }\n \n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n+  @Override\n+  public int queryBillOweFeeCount(@RequestBody BillOweFeeDto billDto) {\n+    return feeServiceDaoImpl.queryBillOweFeeCount(BeanConvertUtil.beanCovertMap(billDto));\n+  }\n \n-        if (page != PageDto.DEFAULT_PAGE) {\n-            billDto.setPage((page - 1) * billDto.getRow());\n-        }\n+  /**\n+   * \u67e5\u8be2\u8d26\u671f\n+   *\n+   * @param billDto\n+   * @return\n+   */\n+  @Override\n+  public List<BillOweFeeDto> queryBillOweFees(@RequestBody BillOweFeeDto billDto) {\n \n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        return billOweFeeDtos;\n+    int page = billDto.getPage();\n \n+    if (page != PageDto.DEFAULT_PAGE) {\n+      billDto.setPage((page - 1) * billDto.getRow());\n     }\n \n-    public IFeeServiceDao getFeeServiceDaoImpl() {\n-        return feeServiceDaoImpl;\n-    }\n+    List<BillOweFeeDto> billOweFeeDtos =\n+      BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n-    public void setFeeServiceDaoImpl(IFeeServiceDao feeServiceDaoImpl) {\n-        this.feeServiceDaoImpl = feeServiceDaoImpl;\n-    }\n+    return billOweFeeDtos;\n \n-    public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n-        return userInnerServiceSMOImpl;\n-    }\n+  }\n \n-    public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n-        this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n-    }\n+  public IFeeServiceDao getFeeServiceDaoImpl() {\n+    return feeServiceDaoImpl;\n+  }\n+\n+  public void setFeeServiceDaoImpl(IFeeServiceDao feeServiceDaoImpl) {\n+    this.feeServiceDaoImpl = feeServiceDaoImpl;\n+  }\n+\n+  public IUserInnerServiceSMO getUserInnerServiceSMOImpl() {\n+    return userInnerServiceSMOImpl;\n+  }\n+\n+  public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n+    this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 155
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/293/FeeInnerServiceSMOImpl.java\nindex d7919d51ad..21f4b18b75 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/293/FeeInnerServiceSMOImpl.java\n@@ -169,4 +169,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/293/FeeInnerServiceSMOImpl.java\nindex d7919d51ad..9bbc4146ed 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/293/FeeInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.dto.fee.BillDto;\n import com.java110.dto.fee.BillOweFeeDto;\n import com.java110.fee.dao.IFeeServiceDao;\n@@ -14,7 +13,6 @@ import com.java110.dto.user.UserDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -26,6 +24,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerServiceSMO {\n \n@@ -39,15 +39,12 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public List<FeeDto> queryFees(@RequestBody FeeDto feeDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = feeDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.getFeeInfo(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         if (fees == null || fees.size() == 0) {\n             return fees;\n         }\n@@ -55,10 +52,10 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         String[] userIds = getUserIds(fees);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (FeeDto fee : fees) {\n             refreshFee(fee, users);\n         }\n+\n         return fees;\n     }\n \n@@ -68,6 +65,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fee   \u5c0f\u533a\u8d39\u7528\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshFee(FeeDto fee, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (fee.getUserId().equals(user.getUserId())) {\n@@ -82,6 +81,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fees \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<FeeDto> fees) {\n         List<String> userIds = new ArrayList<String>();\n         for (FeeDto fee : fees) {\n@@ -91,6 +92,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n+\n     @Override\n     public int queryFeesCount(@RequestBody FeeDto feeDto) {\n         return feeServiceDaoImpl.queryFeesCount(BeanConvertUtil.beanCovertMap(feeDto));\n@@ -108,13 +110,13 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n+\n     @Override\n     public List<BillDto> queryBills(@RequestBody BillDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = billDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n@@ -122,7 +124,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         List<BillDto> billDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBills(BeanConvertUtil.beanCovertMap(billDto)), BillDto.class);\n \n         return billDtos;\n-\n     }\n \n \n@@ -137,13 +138,13 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n+\n     @Override\n     public List<BillOweFeeDto> queryBillOweFees(@RequestBody BillOweFeeDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-\n         int page = billDto.getPage();\n-\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n@@ -151,7 +152,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n-\n     }\n \n     public IFeeServiceDao getFeeServiceDaoImpl() {\n@@ -169,4 +169,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/293/FeeInnerServiceSMOImpl.java\nindex d7919d51ad..5bdb7dbcf5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/293/FeeInnerServiceSMOImpl.java\n@@ -146,9 +146,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n-        }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        } List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/293/FeeInnerServiceSMOImpl.java\nindex d7919d51ad..4a4d8d4802 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/293/FeeInnerServiceSMOImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/293/FeeInnerServiceSMOImpl.java\n@@ -146,9 +146,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n-        }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        } List<BillOweFeeDto>billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 3
        }
    ]
}