{
    "error_id": "471",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/471/DataGridRow.java\nindex e745df8027..4c416d1150 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/471/DataGridRow.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/471/DataGridRow.java\nindex e745df8027..6d7a23ebd6 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/471/DataGridRow.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -20,39 +21,39 @@ import java.util.List;\n \n public class DataGridRow {\n \n-  protected int index;\n-  protected List<DataGridField> fields = new ArrayList<DataGridField>();\n+    protected int index;\n+    protected List<DataGridField> fields = new ArrayList<DataGridField>();\n \n-  public int getIndex() {\n-    return index;\n-  }\n+    public int getIndex() {\n+        return index;\n+    }\n \n-  public void setIndex(int index) {\n-    this.index = index;\n-  }\n+    public void setIndex(int index) {\n+        this.index = index;\n+    }\n \n-  public List<DataGridField> getFields() {\n-    return fields;\n-  }\n+    public List<DataGridField> getFields() {\n+        return fields;\n+    }\n \n-  public void setFields(List<DataGridField> fields) {\n-    this.fields = fields;\n-  }\n+    public void setFields(List<DataGridField> fields) {\n+        this.fields = fields;\n+    }\n \n-  public DataGridRow clone() {\n-    DataGridRow clone = new DataGridRow();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public DataGridRow clone() {\n+        DataGridRow clone = new DataGridRow();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(DataGridRow otherRow) {\n-    setIndex(otherRow.getIndex());\n+    public void setValues(DataGridRow otherRow) {\n+        setIndex(otherRow.getIndex());\n \n-    fields = new ArrayList<DataGridField>();\n-    if (otherRow.getFields() != null && !otherRow.getFields().isEmpty()) {\n-      for (DataGridField field : otherRow.getFields()) {\n-        fields.add(field.clone());\n-      }\n+        fields = new ArrayList<DataGridField>();\n+        if (otherRow.getFields() != null && !otherRow.getFields().isEmpty()) {\n+            for (DataGridField field : otherRow.getFields()) {\n+                fields.add(field.clone());\n+            }\n+        }\n     }\n-  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/471/DataGridRow.java\nindex e745df8027..62653f7085 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/471/DataGridRow.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -55,4 +56,4 @@ public class DataGridRow {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/471/DataGridRow.java\nindex e745df8027..890e7f21e0 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/471/DataGridRow.java\n@@ -18,41 +18,41 @@ package org.activiti.bpmn.model;\n import java.util.ArrayList;\n import java.util.List;\n \n-public class DataGridRow {\n \n-  protected int index;\n-  protected List<DataGridField> fields = new ArrayList<DataGridField>();\n+public class DataGridRow {\n \n-  public int getIndex() {\n+    protected int index;\n+    protected List<DataGridField> fields = new ArrayList<DataGridField>();\n+    public int getIndex() {\n     return index;\n-  }\n+    }\n \n-  public void setIndex(int index) {\n+    public void setIndex(int index) {\n     this.index = index;\n-  }\n+    }\n \n-  public List<DataGridField> getFields() {\n+    public List<DataGridField> getFields() {\n     return fields;\n-  }\n+    }\n \n-  public void setFields(List<DataGridField> fields) {\n+    public void setFields(List<DataGridField> fields) {\n     this.fields = fields;\n-  }\n+    }\n \n-  public DataGridRow clone() {\n+    public DataGridRow clone() {\n     DataGridRow clone = new DataGridRow();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(DataGridRow otherRow) {\n+    public void setValues(DataGridRow otherRow) {\n     setIndex(otherRow.getIndex());\n-\n     fields = new ArrayList<DataGridField>();\n     if (otherRow.getFields() != null && !otherRow.getFields().isEmpty()) {\n-      for (DataGridField field : otherRow.getFields()) {\n-        fields.add(field.clone());\n-      }\n+        for (DataGridField field : otherRow.getFields()) {\n+            fields.add(field.clone());\n+        }\n     }\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/471/DataGridRow.java\nindex e745df8027..4c416d1150 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/471/DataGridRow.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/471/DataGridRow.java\nindex e745df8027..4c416d1150 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/471/DataGridRow.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/471/DataGridRow.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ]
}