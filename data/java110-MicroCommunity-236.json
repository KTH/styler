{
    "error_id": "236",
    "information": {
        "errors": [
            {
                "line": "73",
                "column": "48",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n        //\u6dfb\u52a0\u5c0f\u533a\u697c\n        applicationKeyBMOImpl.addMember(reqJson,context);\n\n\n        FileDto fileDto = new FileDto();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/236/ApplicationKeyListener.java\nindex 831b681b46..82fdd02108 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler/236/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/236/ApplicationKeyListener.java\nindex 831b681b46..804623051c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/intellij/236/ApplicationKeyListener.java\n@@ -29,77 +29,77 @@ import org.springframework.http.HttpMethod;\n @Java110Listener(\"applicationKeyListener\")\n public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n-    @Autowired\n-    private IApplicationKeyBMO applicationKeyBMOImpl;\n+  @Autowired\n+  private IApplicationKeyBMO applicationKeyBMOImpl;\n \n-    @Autowired\n-    private IFileInnerServiceSMO fileInnerServiceSMOImpl;\n+  @Autowired\n+  private IFileInnerServiceSMO fileInnerServiceSMOImpl;\n \n-    @Autowired\n-    private IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl;\n+  @Autowired\n+  private IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl;\n \n-    private static Logger logger = LoggerFactory.getLogger(ApplicationKeyListener.class);\n+  private static Logger logger = LoggerFactory.getLogger(ApplicationKeyListener.class);\n \n-    @Override\n-    public String getServiceCode() {\n-        return ServiceCodeConstant.SERVICE_CODE_APPLICATION_KEY;\n-    }\n+  @Override\n+  public String getServiceCode() {\n+    return ServiceCodeConstant.SERVICE_CODE_APPLICATION_KEY;\n+  }\n \n-    @Override\n-    public HttpMethod getHttpMethod() {\n-        return HttpMethod.POST;\n-    }\n+  @Override\n+  public HttpMethod getHttpMethod() {\n+    return HttpMethod.POST;\n+  }\n \n \n-    @Override\n-    protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n-        Assert.jsonObjectHaveKey(reqJson, \"name\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bname\");\n-        Assert.jsonObjectHaveKey(reqJson, \"roomId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u623f\u5c4b\u4fe1\u606f\");\n-        Assert.jsonObjectHaveKey(reqJson, \"age\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bage\");\n-        Assert.jsonObjectHaveKey(reqJson, \"link\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542blink\");\n-        Assert.jsonObjectHaveKey(reqJson, \"sex\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bsex\");\n-        //Assert.jsonObjectHaveKey(paramIn, \"ownerTypeCd\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bsex\"); //\u8fd9\u4e2a\u4e0d\u9700\u8981 \u8fd9\u4e2a\u76f4\u63a5\u5199\u6210\u94a5\u5319\u7533\u8bf7\uff0c\u4e34\u65f6\u4eba\u5458\n-        Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bcommunityId\");\n-        Assert.jsonObjectHaveKey(reqJson, \"idCard\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u8eab\u4efd\u8bc1\u53f7\");\n-        Assert.jsonObjectHaveKey(reqJson, \"ownerPhoto\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u7167\u7247\u4fe1\u606f\");\n-    }\n+  @Override\n+  protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n+    Assert.jsonObjectHaveKey(reqJson, \"name\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bname\");\n+    Assert.jsonObjectHaveKey(reqJson, \"roomId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u623f\u5c4b\u4fe1\u606f\");\n+    Assert.jsonObjectHaveKey(reqJson, \"age\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bage\");\n+    Assert.jsonObjectHaveKey(reqJson, \"link\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542blink\");\n+    Assert.jsonObjectHaveKey(reqJson, \"sex\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bsex\");\n+    //Assert.jsonObjectHaveKey(paramIn, \"ownerTypeCd\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bsex\"); //\u8fd9\u4e2a\u4e0d\u9700\u8981 \u8fd9\u4e2a\u76f4\u63a5\u5199\u6210\u94a5\u5319\u7533\u8bf7\uff0c\u4e34\u65f6\u4eba\u5458\n+    Assert.jsonObjectHaveKey(reqJson, \"communityId\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bcommunityId\");\n+    Assert.jsonObjectHaveKey(reqJson, \"idCard\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u8eab\u4efd\u8bc1\u53f7\");\n+    Assert.jsonObjectHaveKey(reqJson, \"ownerPhoto\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u7167\u7247\u4fe1\u606f\");\n+  }\n \n-    @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n-        logger.debug(\"ServiceDataFlowEvent : {}\", event);\n+  @Override\n+  protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n+    logger.debug(\"ServiceDataFlowEvent : {}\", event);\n \n \n-        //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+    //\u6dfb\u52a0\u5c0f\u533a\u697c\n+    applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n-        FileDto fileDto = new FileDto();\n-        fileDto.setFileId(GenerateCodeFactory.getGeneratorId(GenerateCodeFactory.CODE_PREFIX_file_id));\n-        fileDto.setFileName(fileDto.getFileId());\n-        fileDto.setContext(reqJson.getString(\"ownerPhoto\"));\n-        fileDto.setSuffix(\"jpeg\");\n-        fileDto.setCommunityId(reqJson.getString(\"communityId\"));\n-        String fileName = fileInnerServiceSMOImpl.saveFile(fileDto);\n-        reqJson.put(\"ownerPhotoId\", fileDto.getFileId());\n-        reqJson.put(\"fileSaveName\", fileName);\n+    FileDto fileDto = new FileDto();\n+    fileDto.setFileId(GenerateCodeFactory.getGeneratorId(GenerateCodeFactory.CODE_PREFIX_file_id));\n+    fileDto.setFileName(fileDto.getFileId());\n+    fileDto.setContext(reqJson.getString(\"ownerPhoto\"));\n+    fileDto.setSuffix(\"jpeg\");\n+    fileDto.setCommunityId(reqJson.getString(\"communityId\"));\n+    String fileName = fileInnerServiceSMOImpl.saveFile(fileDto);\n+    reqJson.put(\"ownerPhotoId\", fileDto.getFileId());\n+    reqJson.put(\"fileSaveName\", fileName);\n \n-        applicationKeyBMOImpl.addOwnerKeyPhoto(reqJson, context);\n-    }\n+    applicationKeyBMOImpl.addOwnerKeyPhoto(reqJson, context);\n+  }\n \n \n-    public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n-        return fileInnerServiceSMOImpl;\n-    }\n+  public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n+    return fileInnerServiceSMOImpl;\n+  }\n \n-    public void setFileInnerServiceSMOImpl(IFileInnerServiceSMO fileInnerServiceSMOImpl) {\n-        this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n-    }\n+  public void setFileInnerServiceSMOImpl(IFileInnerServiceSMO fileInnerServiceSMOImpl) {\n+    this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n+  }\n \n-    public IOwnerRoomRelInnerServiceSMO getOwnerRoomRelInnerServiceSMOImpl() {\n-        return ownerRoomRelInnerServiceSMOImpl;\n-    }\n+  public IOwnerRoomRelInnerServiceSMO getOwnerRoomRelInnerServiceSMOImpl() {\n+    return ownerRoomRelInnerServiceSMOImpl;\n+  }\n \n-    public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n-        this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n-    }\n+  public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n+    this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/236/ApplicationKeyListener.java\nindex 831b681b46..14afe5383b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/naturalize/236/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n@@ -102,4 +102,4 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/236/ApplicationKeyListener.java\nindex 831b681b46..8233623104 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/codebuff/236/ApplicationKeyListener.java\n@@ -26,6 +26,7 @@ import org.springframework.http.HttpMethod;\n  * add by wuxw 2019/4/26\n  **/\n \n+\n @Java110Listener(\"applicationKeyListener\")\n public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n@@ -37,7 +38,6 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n     @Autowired\n     private IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl;\n-\n     private static Logger logger = LoggerFactory.getLogger(ApplicationKeyListener.class);\n \n     @Override\n@@ -45,6 +45,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n         return ServiceCodeConstant.SERVICE_CODE_APPLICATION_KEY;\n     }\n \n+\n     @Override\n     public HttpMethod getHttpMethod() {\n         return HttpMethod.POST;\n@@ -64,14 +65,15 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n         Assert.jsonObjectHaveKey(reqJson, \"ownerPhoto\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542b\u7167\u7247\u4fe1\u606f\");\n     }\n \n+\n     @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n-\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n         FileDto fileDto = new FileDto();\n         fileDto.setFileId(GenerateCodeFactory.getGeneratorId(GenerateCodeFactory.CODE_PREFIX_file_id));\n@@ -79,14 +81,13 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n         fileDto.setContext(reqJson.getString(\"ownerPhoto\"));\n         fileDto.setSuffix(\"jpeg\");\n         fileDto.setCommunityId(reqJson.getString(\"communityId\"));\n+\n         String fileName = fileInnerServiceSMOImpl.saveFile(fileDto);\n         reqJson.put(\"ownerPhotoId\", fileDto.getFileId());\n         reqJson.put(\"fileSaveName\", fileName);\n-\n         applicationKeyBMOImpl.addOwnerKeyPhoto(reqJson, context);\n     }\n \n-\n     public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n         return fileInnerServiceSMOImpl;\n     }\n@@ -102,4 +103,4 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/236/ApplicationKeyListener.java\nindex 831b681b46..82fdd02108 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_random/236/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "73",
                    "column": "49",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "73",
                    "column": "49",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/236/ApplicationKeyListener.java\nindex 831b681b46..38a93a4423 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/errored/1/236/ApplicationKeyListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/java110-MicroCommunity/styler_three_grams/236/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson ,context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        }
    ]
}