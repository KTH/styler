{
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "188",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                // so we must act accordingly, i.e. try update and if it fails insert\n                //\n                Optional<Integer> optional = addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n                Integer addressId = null;\n                if (optional.isPresent()) {\n                    addressId = optional.get();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/95/ChargePointRepositoryImpl.java\nindex d183fdedbb..a107cc8824 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/95/ChargePointRepositoryImpl.java\n@@ -184,8 +184,7 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n                 // Backwards compatibility is a PITA. Existing installations did not have address fields,\n                 // so we must act accordingly, i.e. try update and if it fails insert\n-                //\n-                Optional<Integer> optional = addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n+                // Optional<Integer>optional=addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n                 Integer addressId = null;\n                 if (optional.isPresent()) {\n                     addressId = optional.get();\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/95/ChargePointRepositoryImpl.java\nindex d183fdedbb..86b112db6b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/95/ChargePointRepositoryImpl.java\n@@ -44,15 +44,16 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n     @Qualifier(\"jooqConfig\")\n     private Configuration config;\n \n-    @Autowired private AddressRepository addressRepository;\n+    @Autowired\n+    private AddressRepository addressRepository;\n \n     @Override\n     public boolean isRegistered(String chargeBoxId) {\n         Record1<Integer> r = DSL.using(config)\n-                                .selectOne()\n-                                .from(CHARGE_BOX)\n-                                .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId))\n-                                .fetchOne();\n+            .selectOne()\n+            .from(CHARGE_BOX)\n+            .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId))\n+            .fetchOne();\n \n         return (r != null) && (r.value1() == 1);\n     }\n@@ -62,35 +63,35 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n         final OcppTransport transport = protocol.getTransport();\n \n         return DSL.using(config)\n-                  .select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.ENDPOINT_ADDRESS)\n-                  .from(CHARGE_BOX)\n-                  .where(CHARGE_BOX.OCPP_PROTOCOL.equal(protocol.getCompositeValue()))\n-                  .and(CHARGE_BOX.ENDPOINT_ADDRESS.isNotNull())\n-                  .fetch()\n-                  .map(r -> new ChargePointSelect(transport, r.value1(), r.value2()));\n+            .select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.ENDPOINT_ADDRESS)\n+            .from(CHARGE_BOX)\n+            .where(CHARGE_BOX.OCPP_PROTOCOL.equal(protocol.getCompositeValue()))\n+            .and(CHARGE_BOX.ENDPOINT_ADDRESS.isNotNull())\n+            .fetch()\n+            .map(r -> new ChargePointSelect(transport, r.value1(), r.value2()));\n     }\n \n     @Override\n     public List<String> getChargeBoxIds() {\n         return DSL.using(config)\n-                  .select(CHARGE_BOX.CHARGE_BOX_ID)\n-                  .from(CHARGE_BOX)\n-                  .fetch(CHARGE_BOX.CHARGE_BOX_ID);\n+            .select(CHARGE_BOX.CHARGE_BOX_ID)\n+            .from(CHARGE_BOX)\n+            .fetch(CHARGE_BOX.CHARGE_BOX_ID);\n     }\n \n     @Override\n     public List<ChargePoint.Overview> getOverview() {\n         return DSL.using(config)\n-                  .select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.DESCRIPTION,\n-                          CHARGE_BOX.OCPP_PROTOCOL, CHARGE_BOX.LAST_HEARTBEAT_TIMESTAMP)\n-                  .from(CHARGE_BOX)\n-                  .fetch()\n-                  .map(r -> ChargePoint.Overview.builder()\n-                                                .chargeBoxId(r.value1())\n-                                                .description(r.value2())\n-                                                .ocppProtocol(r.value3())\n-                                                .lastHeartbeatTimestamp(DateTimeUtils.humanize(r.value4())).build()\n-                  );\n+            .select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.DESCRIPTION,\n+                CHARGE_BOX.OCPP_PROTOCOL, CHARGE_BOX.LAST_HEARTBEAT_TIMESTAMP)\n+            .from(CHARGE_BOX)\n+            .fetch()\n+            .map(r -> ChargePoint.Overview.builder()\n+                .chargeBoxId(r.value1())\n+                .description(r.value2())\n+                .ocppProtocol(r.value3())\n+                .lastHeartbeatTimestamp(DateTimeUtils.humanize(r.value4())).build()\n+            );\n     }\n \n     @Override\n@@ -98,8 +99,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n         DSLContext ctx = DSL.using(config);\n \n         ChargeBoxRecord cbr = ctx.selectFrom(CHARGE_BOX)\n-                                 .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n-                                 .fetchOne();\n+            .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n+            .fetchOne();\n \n         if (cbr == null) {\n             throw new SteveException(\"There is no charge point with chargeBoxId '%s'\", chargeBoxId);\n@@ -110,8 +111,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n         AddressRecord ar = null;\n         if (cbr.getAddressId() != null) {\n             ar = ctx.selectFrom(ADDRESS)\n-                    .where(ADDRESS.ADDRESS_ID.equal(cbr.getAddressId()))\n-                    .fetchOne();\n+                .where(ADDRESS.ADDRESS_ID.equal(cbr.getAddressId()))\n+                .fetchOne();\n         }\n \n         if (ar != null) {\n@@ -127,38 +128,38 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n         Field<Integer> t1Pk = CONNECTOR_STATUS.CONNECTOR_PK.as(\"t1_pk\");\n         Field<DateTime> t1Max = DSL.max(CONNECTOR_STATUS.STATUS_TIMESTAMP).as(\"t1_max\");\n         TableLike<?> t1 = DSL.select(t1Pk, t1Max)\n-                             .from(CONNECTOR_STATUS)\n-                             .groupBy(CONNECTOR_STATUS.CONNECTOR_PK)\n-                             .asTable(\"t1\");\n+            .from(CONNECTOR_STATUS)\n+            .groupBy(CONNECTOR_STATUS.CONNECTOR_PK)\n+            .asTable(\"t1\");\n \n         return DSL.using(config)\n-                  .select(CONNECTOR.CHARGE_BOX_ID, CONNECTOR.CONNECTOR_ID,\n-                          CONNECTOR_STATUS.STATUS_TIMESTAMP, CONNECTOR_STATUS.STATUS, CONNECTOR_STATUS.ERROR_CODE)\n-                  .from(CONNECTOR_STATUS)\n-                  .join(CONNECTOR)\n-                  .onKey()\n-                  .join(t1)\n-                  .on(CONNECTOR_STATUS.CONNECTOR_PK.equal(t1.field(t1Pk)))\n-                  .and(CONNECTOR_STATUS.STATUS_TIMESTAMP.equal(t1.field(t1Max)))\n-                  .orderBy(CONNECTOR_STATUS.STATUS_TIMESTAMP.desc())\n-                  .fetch()\n-                  .map(r -> ConnectorStatus.builder()\n-                                           .chargeBoxId(r.value1())\n-                                           .connectorId(r.value2())\n-                                           .timeStamp(DateTimeUtils.humanize(r.value3()))\n-                                           .status(r.value4())\n-                                           .errorCode(r.value5())\n-                                           .build()\n-                  );\n+            .select(CONNECTOR.CHARGE_BOX_ID, CONNECTOR.CONNECTOR_ID,\n+                CONNECTOR_STATUS.STATUS_TIMESTAMP, CONNECTOR_STATUS.STATUS, CONNECTOR_STATUS.ERROR_CODE)\n+            .from(CONNECTOR_STATUS)\n+            .join(CONNECTOR)\n+            .onKey()\n+            .join(t1)\n+            .on(CONNECTOR_STATUS.CONNECTOR_PK.equal(t1.field(t1Pk)))\n+            .and(CONNECTOR_STATUS.STATUS_TIMESTAMP.equal(t1.field(t1Max)))\n+            .orderBy(CONNECTOR_STATUS.STATUS_TIMESTAMP.desc())\n+            .fetch()\n+            .map(r -> ConnectorStatus.builder()\n+                .chargeBoxId(r.value1())\n+                .connectorId(r.value2())\n+                .timeStamp(DateTimeUtils.humanize(r.value3()))\n+                .status(r.value4())\n+                .errorCode(r.value5())\n+                .build()\n+            );\n     }\n \n     @Override\n     public List<Integer> getConnectorIds(String chargeBoxId) {\n         return DSL.using(config)\n-                  .select(CONNECTOR.CONNECTOR_ID)\n-                  .from(CONNECTOR)\n-                  .where(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n-                  .fetch(CONNECTOR.CONNECTOR_ID);\n+            .select(CONNECTOR.CONNECTOR_ID)\n+            .from(CONNECTOR)\n+            .where(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n+            .fetch(CONNECTOR.CONNECTOR_ID);\n     }\n \n     @Override\n@@ -171,7 +172,7 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n             } catch (DataAccessException e) {\n                 throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be added.\",\n-                        form.getChargeBoxId(), e);\n+                    form.getChargeBoxId(), e);\n             }\n         });\n     }\n@@ -185,7 +186,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n                 // Backwards compatibility is a PITA. Existing installations did not have address fields,\n                 // so we must act accordingly, i.e. try update and if it fails insert\n                 //\n-                Optional<Integer> optional = addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n+                Optional<Integer> optional =\n+                    addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n                 Integer addressId = null;\n                 if (optional.isPresent()) {\n                     addressId = optional.get();\n@@ -197,7 +199,7 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n             } catch (DataAccessException e) {\n                 throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be added.\",\n-                        form.getChargeBoxId(), e);\n+                    form.getChargeBoxId(), e);\n             }\n         });\n     }\n@@ -212,7 +214,7 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n             } catch (DataAccessException e) {\n                 throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be deleted.\",\n-                        chargeBoxId, e);\n+                    chargeBoxId, e);\n             }\n         });\n     }\n@@ -223,20 +225,20 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n     private SelectConditionStep<Record1<Integer>> selectAddressId(String chargeBoxId) {\n         return DSL.select(CHARGE_BOX.ADDRESS_ID)\n-                  .from(CHARGE_BOX)\n-                  .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId));\n+            .from(CHARGE_BOX)\n+            .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId));\n     }\n \n     private void addChargePointInternal(DSLContext ctx, ChargeBoxForm form, Integer addressId) {\n         int count = ctx.insertInto(CHARGE_BOX)\n-                       .set(CHARGE_BOX.CHARGE_BOX_ID, form.getChargeBoxId())\n-                       .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n-                       .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n-                       .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n-                       .set(CHARGE_BOX.NOTE, form.getNote())\n-                       .set(CHARGE_BOX.ADDRESS_ID, addressId)\n-                       .onDuplicateKeyIgnore() // Important detail\n-                       .execute();\n+            .set(CHARGE_BOX.CHARGE_BOX_ID, form.getChargeBoxId())\n+            .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n+            .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n+            .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n+            .set(CHARGE_BOX.NOTE, form.getNote())\n+            .set(CHARGE_BOX.ADDRESS_ID, addressId)\n+            .onDuplicateKeyIgnore() // Important detail\n+            .execute();\n \n         if (count == 0) {\n             throw new SteveException(\"A charge point with chargeBoxId '%s' already exists.\", form.getChargeBoxId());\n@@ -245,18 +247,18 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n     private void updateChargePointInternal(DSLContext ctx, ChargeBoxForm form, Integer addressId) {\n         ctx.update(CHARGE_BOX)\n-           .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n-           .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n-           .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n-           .set(CHARGE_BOX.NOTE, form.getNote())\n-           .set(CHARGE_BOX.ADDRESS_ID, addressId)\n-           .where(CHARGE_BOX.CHARGE_BOX_ID.equal(form.getChargeBoxId()))\n-           .execute();\n+            .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n+            .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n+            .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n+            .set(CHARGE_BOX.NOTE, form.getNote())\n+            .set(CHARGE_BOX.ADDRESS_ID, addressId)\n+            .where(CHARGE_BOX.CHARGE_BOX_ID.equal(form.getChargeBoxId()))\n+            .execute();\n     }\n \n     private void deleteChargePointInternal(DSLContext ctx, String chargeBoxId) {\n         ctx.delete(CHARGE_BOX)\n-           .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n-           .execute();\n+            .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n+            .execute();\n     }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/95/ChargePointRepositoryImpl.java\nindex d183fdedbb..cc1e9d583d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/naturalize/95/ChargePointRepositoryImpl.java\n@@ -49,12 +49,11 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n     @Override\n     public boolean isRegistered(String chargeBoxId) {\n         Record1<Integer> r = DSL.using(config)\n-                                .selectOne()\n+.selectOne()\n                                 .from(CHARGE_BOX)\n                                 .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId))\n                                 .fetchOne();\n-\n-        return (r != null) && (r.value1() == 1);\n+return (r != null) && (r.value1() == 1);\n     }\n \n     @Override\n@@ -85,12 +84,10 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n                           CHARGE_BOX.OCPP_PROTOCOL, CHARGE_BOX.LAST_HEARTBEAT_TIMESTAMP)\n                   .from(CHARGE_BOX)\n                   .fetch()\n-                  .map(r -> ChargePoint.Overview.builder()\n-                                                .chargeBoxId(r.value1())\n+                  .map(r -> ChargePoint.Overview.builder().chargeBoxId(r.value1())\n                                                 .description(r.value2())\n                                                 .ocppProtocol(r.value3())\n-                                                .lastHeartbeatTimestamp(DateTimeUtils.humanize(r.value4())).build()\n-                  );\n+                                                .lastHeartbeatTimestamp(DateTimeUtils.humanize(r.value4())).build());\n     }\n \n     @Override\n@@ -98,10 +95,9 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n         DSLContext ctx = DSL.using(config);\n \n         ChargeBoxRecord cbr = ctx.selectFrom(CHARGE_BOX)\n-                                 .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n+.where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n                                  .fetchOne();\n-\n-        if (cbr == null) {\n+if (cbr == null) {\n             throw new SteveException(\"There is no charge point with chargeBoxId '%s'\", chargeBoxId);\n         }\n \n@@ -142,14 +138,12 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n                   .and(CONNECTOR_STATUS.STATUS_TIMESTAMP.equal(t1.field(t1Max)))\n                   .orderBy(CONNECTOR_STATUS.STATUS_TIMESTAMP.desc())\n                   .fetch()\n-                  .map(r -> ConnectorStatus.builder()\n-                                           .chargeBoxId(r.value1())\n+                  .map(r -> ConnectorStatus.builder().chargeBoxId(r.value1())\n                                            .connectorId(r.value2())\n                                            .timeStamp(DateTimeUtils.humanize(r.value3()))\n                                            .status(r.value4())\n                                            .errorCode(r.value5())\n-                                           .build()\n-                  );\n+                                           .build());\n     }\n \n     @Override\n@@ -259,4 +253,4 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n            .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n            .execute();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/95/ChargePointRepositoryImpl.java\nindex d183fdedbb..640fdffbcf 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/95/ChargePointRepositoryImpl.java\n@@ -24,7 +24,6 @@ import org.jooq.impl.DSL;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Repository;\n-\n import java.util.List;\n \n import static jooq.steve.db.tables.Address.ADDRESS;\n@@ -36,6 +35,8 @@ import static jooq.steve.db.tables.ConnectorStatus.CONNECTOR_STATUS;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 14.08.2014\n  */\n+\n+\n @Slf4j\n @Repository\n public class ChargePointRepositoryImpl implements ChargePointRepository {\n@@ -43,64 +44,54 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n     @Autowired\n     @Qualifier(\"jooqConfig\")\n     private Configuration config;\n-\n     @Autowired private AddressRepository addressRepository;\n-\n     @Override\n     public boolean isRegistered(String chargeBoxId) {\n-        Record1<Integer> r = DSL.using(config)\n-                                .selectOne()\n-                                .from(CHARGE_BOX)\n-                                .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId))\n-                                .fetchOne();\n-\n+        Record1<Integer> r = DSL.using(config).selectOne()\n+                                              .from(CHARGE_BOX)\n+                                              .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId))\n+                                              .fetchOne();\n         return (r != null) && (r.value1() == 1);\n     }\n \n     @Override\n     public List<ChargePointSelect> getChargePointSelect(OcppProtocol protocol) {\n         final OcppTransport transport = protocol.getTransport();\n-\n-        return DSL.using(config)\n-                  .select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.ENDPOINT_ADDRESS)\n-                  .from(CHARGE_BOX)\n-                  .where(CHARGE_BOX.OCPP_PROTOCOL.equal(protocol.getCompositeValue()))\n-                  .and(CHARGE_BOX.ENDPOINT_ADDRESS.isNotNull())\n-                  .fetch()\n-                  .map(r -> new ChargePointSelect(transport, r.value1(), r.value2()));\n+        return DSL.using(config).select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.ENDPOINT_ADDRESS)\n+                                .from(CHARGE_BOX)\n+                                .where(CHARGE_BOX.OCPP_PROTOCOL.equal(protocol.getCompositeValue()))\n+                                .and(CHARGE_BOX.ENDPOINT_ADDRESS.isNotNull())\n+                                .fetch()\n+                                .map(r -> new ChargePointSelect(transport, r.value1(), r.value2()));\n     }\n \n     @Override\n     public List<String> getChargeBoxIds() {\n-        return DSL.using(config)\n-                  .select(CHARGE_BOX.CHARGE_BOX_ID)\n-                  .from(CHARGE_BOX)\n-                  .fetch(CHARGE_BOX.CHARGE_BOX_ID);\n+        return DSL.using(config).select(CHARGE_BOX.CHARGE_BOX_ID)\n+                                .from(CHARGE_BOX)\n+                                .fetch(CHARGE_BOX.CHARGE_BOX_ID);\n     }\n \n     @Override\n     public List<ChargePoint.Overview> getOverview() {\n-        return DSL.using(config)\n-                  .select(CHARGE_BOX.CHARGE_BOX_ID, CHARGE_BOX.DESCRIPTION,\n-                          CHARGE_BOX.OCPP_PROTOCOL, CHARGE_BOX.LAST_HEARTBEAT_TIMESTAMP)\n-                  .from(CHARGE_BOX)\n-                  .fetch()\n-                  .map(r -> ChargePoint.Overview.builder()\n-                                                .chargeBoxId(r.value1())\n-                                                .description(r.value2())\n-                                                .ocppProtocol(r.value3())\n-                                                .lastHeartbeatTimestamp(DateTimeUtils.humanize(r.value4())).build()\n-                  );\n+        return DSL.using(config).select(CHARGE_BOX.CHARGE_BOX_ID,\n+CHARGE_BOX.DESCRIPTION,\n+CHARGE_BOX.OCPP_PROTOCOL,\n+CHARGE_BOX.LAST_HEARTBEAT_TIMESTAMP)\n+                                .from(CHARGE_BOX)\n+                                .fetch()\n+                                .map(r -> ChargePoint.Overview.builder().chargeBoxId(r.value1())\n+                                                                        .description(r.value2())\n+                                                                        .ocppProtocol(r.value3())\n+                                                                        .lastHeartbeatTimestamp(DateTimeUtils.humanize(r.value4()))\n+                                                                        .build());\n     }\n \n     @Override\n     public ChargePoint.Details getDetails(String chargeBoxId) {\n         DSLContext ctx = DSL.using(config);\n-\n-        ChargeBoxRecord cbr = ctx.selectFrom(CHARGE_BOX)\n-                                 .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n-                                 .fetchOne();\n-\n+        ChargeBoxRecord cbr = ctx.selectFrom(CHARGE_BOX).where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n+                                                        .fetchOne();\n         if (cbr == null) {\n             throw new SteveException(\"There is no charge point with chargeBoxId '%s'\", chargeBoxId);\n         }\n@@ -109,15 +100,13 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n         AddressRecord ar = null;\n         if (cbr.getAddressId() != null) {\n-            ar = ctx.selectFrom(ADDRESS)\n-                    .where(ADDRESS.ADDRESS_ID.equal(cbr.getAddressId()))\n-                    .fetchOne();\n+            ar = ctx.selectFrom(ADDRESS).where(ADDRESS.ADDRESS_ID.equal(cbr.getAddressId()))\n+                                        .fetchOne();\n         }\n \n         if (ar != null) {\n             ar.detach();\n         }\n-\n         return new ChargePoint.Details(cbr, ar);\n     }\n \n@@ -126,39 +115,32 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n         // Prepare for the inner select of the second join\n         Field<Integer> t1Pk = CONNECTOR_STATUS.CONNECTOR_PK.as(\"t1_pk\");\n         Field<DateTime> t1Max = DSL.max(CONNECTOR_STATUS.STATUS_TIMESTAMP).as(\"t1_max\");\n-        TableLike<?> t1 = DSL.select(t1Pk, t1Max)\n-                             .from(CONNECTOR_STATUS)\n-                             .groupBy(CONNECTOR_STATUS.CONNECTOR_PK)\n-                             .asTable(\"t1\");\n-\n-        return DSL.using(config)\n-                  .select(CONNECTOR.CHARGE_BOX_ID, CONNECTOR.CONNECTOR_ID,\n-                          CONNECTOR_STATUS.STATUS_TIMESTAMP, CONNECTOR_STATUS.STATUS, CONNECTOR_STATUS.ERROR_CODE)\n-                  .from(CONNECTOR_STATUS)\n-                  .join(CONNECTOR)\n-                  .onKey()\n-                  .join(t1)\n-                  .on(CONNECTOR_STATUS.CONNECTOR_PK.equal(t1.field(t1Pk)))\n-                  .and(CONNECTOR_STATUS.STATUS_TIMESTAMP.equal(t1.field(t1Max)))\n-                  .orderBy(CONNECTOR_STATUS.STATUS_TIMESTAMP.desc())\n-                  .fetch()\n-                  .map(r -> ConnectorStatus.builder()\n-                                           .chargeBoxId(r.value1())\n-                                           .connectorId(r.value2())\n-                                           .timeStamp(DateTimeUtils.humanize(r.value3()))\n-                                           .status(r.value4())\n-                                           .errorCode(r.value5())\n-                                           .build()\n-                  );\n+        TableLike<?> t1 = DSL.select(t1Pk, t1Max).from(CONNECTOR_STATUS)\n+                                                 .groupBy(CONNECTOR_STATUS.CONNECTOR_PK)\n+                                                 .asTable(\"t1\");\n+        return DSL.using(config).select(CONNECTOR.CHARGE_BOX_ID, CONNECTOR.CONNECTOR_ID, CONNECTOR_STATUS.STATUS_TIMESTAMP, CONNECTOR_STATUS.STATUS, CONNECTOR_STATUS.ERROR_CODE)\n+                                .from(CONNECTOR_STATUS)\n+                                .join(CONNECTOR)\n+                                .onKey()\n+                                .join(t1)\n+                                .on(CONNECTOR_STATUS.CONNECTOR_PK.equal(t1.field(t1Pk)))\n+                                .and(CONNECTOR_STATUS.STATUS_TIMESTAMP.equal(t1.field(t1Max)))\n+                                .orderBy(CONNECTOR_STATUS.STATUS_TIMESTAMP.desc())\n+                                .fetch()\n+                                .map(r -> ConnectorStatus.builder().chargeBoxId(r.value1())\n+                                                                   .connectorId(r.value2())\n+                                                                   .timeStamp(DateTimeUtils.humanize(r.value3()))\n+                                                                   .status(r.value4())\n+                                                                   .errorCode(r.value5())\n+                                                                   .build());\n     }\n \n     @Override\n     public List<Integer> getConnectorIds(String chargeBoxId) {\n-        return DSL.using(config)\n-                  .select(CONNECTOR.CONNECTOR_ID)\n-                  .from(CONNECTOR)\n-                  .where(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n-                  .fetch(CONNECTOR.CONNECTOR_ID);\n+        return DSL.using(config).select(CONNECTOR.CONNECTOR_ID)\n+                                .from(CONNECTOR)\n+                                .where(CONNECTOR.CHARGE_BOX_ID.equal(chargeBoxId))\n+                                .fetch(CONNECTOR.CONNECTOR_ID);\n     }\n \n     @Override\n@@ -168,10 +150,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n             try {\n                 Integer addressId = addressRepository.insert(ctx, form.getAddress());\n                 addChargePointInternal(ctx, form, addressId);\n-\n             } catch (DataAccessException e) {\n-                throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be added.\",\n-                        form.getChargeBoxId(), e);\n+                throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be added.\", form.getChargeBoxId(), e);\n             }\n         });\n     }\n@@ -194,10 +174,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n                 }\n \n                 updateChargePointInternal(ctx, form, addressId);\n-\n             } catch (DataAccessException e) {\n-                throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be added.\",\n-                        form.getChargeBoxId(), e);\n+                throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be added.\", form.getChargeBoxId(), e);\n             }\n         });\n     }\n@@ -209,10 +187,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n             try {\n                 addressRepository.delete(ctx, selectAddressId(chargeBoxId));\n                 deleteChargePointInternal(ctx, chargeBoxId);\n-\n             } catch (DataAccessException e) {\n-                throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be deleted.\",\n-                        chargeBoxId, e);\n+                throw new SteveException(\"The charge point with chargeBoxId '%s' could NOT be deleted.\", chargeBoxId, e);\n             }\n         });\n     }\n@@ -222,41 +198,34 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n     // -------------------------------------------------------------------------\n \n     private SelectConditionStep<Record1<Integer>> selectAddressId(String chargeBoxId) {\n-        return DSL.select(CHARGE_BOX.ADDRESS_ID)\n-                  .from(CHARGE_BOX)\n-                  .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId));\n+        return DSL.select(CHARGE_BOX.ADDRESS_ID).from(CHARGE_BOX)\n+                                                .where(CHARGE_BOX.CHARGE_BOX_ID.eq(chargeBoxId));\n     }\n \n     private void addChargePointInternal(DSLContext ctx, ChargeBoxForm form, Integer addressId) {\n-        int count = ctx.insertInto(CHARGE_BOX)\n-                       .set(CHARGE_BOX.CHARGE_BOX_ID, form.getChargeBoxId())\n-                       .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n-                       .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n-                       .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n-                       .set(CHARGE_BOX.NOTE, form.getNote())\n-                       .set(CHARGE_BOX.ADDRESS_ID, addressId)\n-                       .onDuplicateKeyIgnore() // Important detail\n-                       .execute();\n-\n+        int count = ctx.insertInto(CHARGE_BOX).set(CHARGE_BOX.CHARGE_BOX_ID, form.getChargeBoxId())\n+                                              .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n+                                              .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n+                                              .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n+                                              .set(CHARGE_BOX.NOTE, form.getNote())\n+                                              .set(CHARGE_BOX.ADDRESS_ID, addressId)\n+                                              .onDuplicateKeyIgnore() // Important detail\n+                                              .execute();\n         if (count == 0) {\n             throw new SteveException(\"A charge point with chargeBoxId '%s' already exists.\", form.getChargeBoxId());\n         }\n     }\n \n     private void updateChargePointInternal(DSLContext ctx, ChargeBoxForm form, Integer addressId) {\n-        ctx.update(CHARGE_BOX)\n-           .set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n-           .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n-           .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n-           .set(CHARGE_BOX.NOTE, form.getNote())\n-           .set(CHARGE_BOX.ADDRESS_ID, addressId)\n-           .where(CHARGE_BOX.CHARGE_BOX_ID.equal(form.getChargeBoxId()))\n-           .execute();\n+        ctx.update(CHARGE_BOX).set(CHARGE_BOX.DESCRIPTION, form.getDescription())\n+                              .set(CHARGE_BOX.LOCATION_LATITUDE, form.getLocationLatitude())\n+                              .set(CHARGE_BOX.LOCATION_LONGITUDE, form.getLocationLongitude())\n+                              .set(CHARGE_BOX.NOTE, form.getNote())\n+                              .set(CHARGE_BOX.ADDRESS_ID, addressId)\n+                              .where(CHARGE_BOX.CHARGE_BOX_ID.equal(form.getChargeBoxId())).execute();\n     }\n \n     private void deleteChargePointInternal(DSLContext ctx, String chargeBoxId) {\n-        ctx.delete(CHARGE_BOX)\n-           .where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId))\n-           .execute();\n+        ctx.delete(CHARGE_BOX).where(CHARGE_BOX.CHARGE_BOX_ID.equal(chargeBoxId)).execute();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 106
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "188",
                    "column": "44",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "189",
                    "column": "17",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "189",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/95/ChargePointRepositoryImpl.java\nindex d183fdedbb..584eab1b0b 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/95/ChargePointRepositoryImpl.java\n@@ -185,7 +185,8 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n                 // Backwards compatibility is a PITA. Existing installations did not have address fields,\n                 // so we must act accordingly, i.e. try update and if it fails insert\n                 //\n-                Optional<Integer> optional = addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n+                Optional<Integer> optional =addressRepository\n+                . update (ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n                 Integer addressId = null;\n                 if (optional.isPresent()) {\n                     addressId = optional.get();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/95/ChargePointRepositoryImpl.java\nindex d183fdedbb..a107cc8824 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/95/ChargePointRepositoryImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/95/ChargePointRepositoryImpl.java\n@@ -184,8 +184,7 @@ public class ChargePointRepositoryImpl implements ChargePointRepository {\n \n                 // Backwards compatibility is a PITA. Existing installations did not have address fields,\n                 // so we must act accordingly, i.e. try update and if it fails insert\n-                //\n-                Optional<Integer> optional = addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n+                // Optional<Integer>optional=addressRepository.update(ctx, selectAddressId(form.getChargeBoxId()), form.getAddress());\n                 Integer addressId = null;\n                 if (optional.isPresent()) {\n                     addressId = optional.get();\n",
            "diff_size": 2
        }
    ]
}