{
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "93",
                "severity": "error",
                "message": "Two or more consecutive empty lines",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
            }
        ]
    },
    "source_code": "    public void properties( PropertyCursor propertyCursor )\n    {\n        cursor.properties( propertyCursor );\n    }\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/21/RelationshipSparseSelectionCursor.java\nindex e96a1ad962..95735f998e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler/21/RelationshipSparseSelectionCursor.java\n@@ -90,7 +90,7 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     @Override\n     public void properties( PropertyCursor propertyCursor )\n     {\n-        cursor.properties( propertyCursor );\n+    cursor .properties( propertyCursor );\n     }\n \n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "99",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/21/RelationshipSparseSelectionCursor.java\nindex e96a1ad962..50b45eb715 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/intellij/21/RelationshipSparseSelectionCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.helpers;\n \n import org.neo4j.internal.kernel.api.KernelReadTracer;\n@@ -32,7 +33,7 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     @Override\n     public boolean next()\n     {\n-        if ( !fetchNext() )\n+        if (!fetchNext())\n         {\n             close();\n             return false;\n@@ -45,9 +46,9 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     {\n         closeInternal();\n         final var listener = closeListener;\n-        if ( listener != null )\n+        if (listener != null)\n         {\n-            listener.onClosed( this );\n+            listener.onClosed(this);\n         }\n     }\n \n@@ -88,22 +89,22 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     }\n \n     @Override\n-    public void properties( PropertyCursor propertyCursor )\n+    public void properties(PropertyCursor propertyCursor)\n     {\n-        cursor.properties( propertyCursor );\n+        cursor.properties(propertyCursor);\n     }\n \n \n     @Override\n-    public void source( NodeCursor nodeCursor )\n+    public void source(NodeCursor nodeCursor)\n     {\n-        cursor.source( nodeCursor );\n+        cursor.source(nodeCursor);\n     }\n \n     @Override\n-    public void target( NodeCursor nodeCursor )\n+    public void target(NodeCursor nodeCursor)\n     {\n-        cursor.target( nodeCursor );\n+        cursor.target(nodeCursor);\n     }\n \n     @Override\n@@ -113,19 +114,18 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     }\n \n     @Override\n-    public void setTracer( KernelReadTracer tracer )\n+    public void setTracer(KernelReadTracer tracer)\n     {\n-        cursor.setTracer( tracer );\n+        cursor.setTracer(tracer);\n     }\n \n     @Override\n     public String toString()\n     {\n-        if ( isClosed() )\n+        if (isClosed())\n         {\n             return \"RelationshipSparseSelectionCursor[closed state]\";\n-        }\n-        else\n+        } else\n         {\n             return \"RelationshipSparseSelectionCursor[cursor=\" + cursor.toString() + \"]\";\n         }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/21/RelationshipSparseSelectionCursor.java\nindex e96a1ad962..7ca4b3e214 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/naturalize/21/RelationshipSparseSelectionCursor.java\n@@ -93,8 +93,7 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n         cursor.properties( propertyCursor );\n     }\n \n-\n-    @Override\n+@Override\n     public void source( NodeCursor nodeCursor )\n     {\n         cursor.source( nodeCursor );\n@@ -135,4 +134,4 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     {\n         return cursor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/21/RelationshipSparseSelectionCursor.java\nindex e96a1ad962..565ef6cabb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_random/21/RelationshipSparseSelectionCursor.java\n@@ -90,49 +90,47 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     @Override\n     public void properties( PropertyCursor propertyCursor )\n     {\n-        cursor.properties( propertyCursor );\n-    }\n-\n-\n-    @Override\n-    public void source( NodeCursor nodeCursor )\n-    {\n-        cursor.source( nodeCursor );\n-    }\n-\n+        cursor.properties( propertyCursor); }\n     @Override\n-    public void target( NodeCursor nodeCursor )\n-    {\n-        cursor.target( nodeCursor );\n-    }\n+        public void source( NodeCursor nodeCursor )\n+        {\n+            cursor.source( nodeCursor );\n+        }\n \n-    @Override\n-    public boolean isClosed()\n-    {\n-        return cursor == null || cursor.isClosed();\n-    }\n+        @Override\n+        public void target( NodeCursor nodeCursor )\n+        {\n+            cursor.target( nodeCursor );\n+        }\n \n-    @Override\n-    public void setTracer( KernelReadTracer tracer )\n-    {\n-        cursor.setTracer( tracer );\n-    }\n+        @Override\n+        public boolean isClosed()\n+        {\n+            return cursor == null || cursor.isClosed();\n+        }\n \n-    @Override\n-    public String toString()\n-    {\n-        if ( isClosed() )\n+        @Override\n+        public void setTracer( KernelReadTracer tracer )\n         {\n-            return \"RelationshipSparseSelectionCursor[closed state]\";\n+            cursor.setTracer( tracer );\n         }\n-        else\n+\n+        @Override\n+        public String toString()\n         {\n-            return \"RelationshipSparseSelectionCursor[cursor=\" + cursor.toString() + \"]\";\n+            if ( isClosed() )\n+            {\n+                return \"RelationshipSparseSelectionCursor[closed state]\";\n+            }\n+            else\n+            {\n+                return \"RelationshipSparseSelectionCursor[cursor=\" + cursor.toString() + \"]\";\n+            }\n         }\n-    }\n \n-    public RelationshipTraversalCursor traversalCursor()\n-    {\n-        return cursor;\n+        public RelationshipTraversalCursor traversalCursor()\n+        {\n+            return cursor;\n+        }\n     }\n-}\n+    \n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/21/RelationshipSparseSelectionCursor.java\nindex e96a1ad962..95735f998e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/errored/1/21/RelationshipSparseSelectionCursor.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/neo4j-neo4j/styler_three_grams/21/RelationshipSparseSelectionCursor.java\n@@ -90,7 +90,7 @@ public final class RelationshipSparseSelectionCursor extends RelationshipSparseS\n     @Override\n     public void properties( PropertyCursor propertyCursor )\n     {\n-        cursor.properties( propertyCursor );\n+    cursor .properties( propertyCursor );\n     }\n \n \n",
            "diff_size": 1
        }
    ]
}