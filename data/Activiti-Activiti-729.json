{
    "error_id": "729",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.export;\n\nimport java.util.List;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/729/FieldExtensionExport.java\nindex 7084105a11..913a519c56 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/729/FieldExtensionExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/729/FieldExtensionExport.java\nindex 7084105a11..7a2a313ad7 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/729/FieldExtensionExport.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import java.util.List;\n@@ -23,34 +24,34 @@ import org.apache.commons.lang3.StringUtils;\n \n public class FieldExtensionExport implements BpmnXMLConstants {\n \n-  public static boolean writeFieldExtensions(List<FieldExtension> fieldExtensionList, boolean didWriteExtensionStartElement, XMLStreamWriter xtw) throws Exception {\n+    public static boolean writeFieldExtensions(List<FieldExtension> fieldExtensionList, boolean didWriteExtensionStartElement, XMLStreamWriter xtw) throws Exception {\n \n-    for (FieldExtension fieldExtension : fieldExtensionList) {\n+        for (FieldExtension fieldExtension : fieldExtensionList) {\n \n-      if (StringUtils.isNotEmpty(fieldExtension.getFieldName())) {\n+            if (StringUtils.isNotEmpty(fieldExtension.getFieldName())) {\n \n-        if (StringUtils.isNotEmpty(fieldExtension.getStringValue()) || StringUtils.isNotEmpty(fieldExtension.getExpression())) {\n+                if (StringUtils.isNotEmpty(fieldExtension.getStringValue()) || StringUtils.isNotEmpty(fieldExtension.getExpression())) {\n \n-          if (!didWriteExtensionStartElement) {\n-            xtw.writeStartElement(ELEMENT_EXTENSIONS);\n-            didWriteExtensionStartElement = true;\n-          }\n+                    if (!didWriteExtensionStartElement) {\n+                        xtw.writeStartElement(ELEMENT_EXTENSIONS);\n+                        didWriteExtensionStartElement = true;\n+                    }\n \n-          xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD, ACTIVITI_EXTENSIONS_NAMESPACE);\n-          BpmnXMLUtil.writeDefaultAttribute(ATTRIBUTE_FIELD_NAME, fieldExtension.getFieldName(), xtw);\n+                    xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD, ACTIVITI_EXTENSIONS_NAMESPACE);\n+                    BpmnXMLUtil.writeDefaultAttribute(ATTRIBUTE_FIELD_NAME, fieldExtension.getFieldName(), xtw);\n \n-          if (StringUtils.isNotEmpty(fieldExtension.getStringValue())) {\n-            xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD_STRING, ACTIVITI_EXTENSIONS_NAMESPACE);\n-            xtw.writeCData(fieldExtension.getStringValue());\n-          } else {\n-            xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ATTRIBUTE_FIELD_EXPRESSION, ACTIVITI_EXTENSIONS_NAMESPACE);\n-            xtw.writeCData(fieldExtension.getExpression());\n-          }\n-          xtw.writeEndElement();\n-          xtw.writeEndElement();\n+                    if (StringUtils.isNotEmpty(fieldExtension.getStringValue())) {\n+                        xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD_STRING, ACTIVITI_EXTENSIONS_NAMESPACE);\n+                        xtw.writeCData(fieldExtension.getStringValue());\n+                    } else {\n+                        xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ATTRIBUTE_FIELD_EXPRESSION, ACTIVITI_EXTENSIONS_NAMESPACE);\n+                        xtw.writeCData(fieldExtension.getExpression());\n+                    }\n+                    xtw.writeEndElement();\n+                    xtw.writeEndElement();\n+                }\n+            }\n         }\n-      }\n+        return didWriteExtensionStartElement;\n     }\n-    return didWriteExtensionStartElement;\n-  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/729/FieldExtensionExport.java\nindex 7084105a11..0179f79df9 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/naturalize/729/FieldExtensionExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import java.util.List;\n@@ -53,4 +54,4 @@ public class FieldExtensionExport implements BpmnXMLConstants {\n     }\n     return didWriteExtensionStartElement;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/729/FieldExtensionExport.java\nindex 7084105a11..ebbaf27fa5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/729/FieldExtensionExport.java\n@@ -13,44 +13,45 @@\n package org.activiti.bpmn.converter.export;\n \n import java.util.List;\n-\n import javax.xml.stream.XMLStreamWriter;\n-\n import org.activiti.bpmn.constants.BpmnXMLConstants;\n import org.activiti.bpmn.converter.util.BpmnXMLUtil;\n import org.activiti.bpmn.model.FieldExtension;\n import org.apache.commons.lang3.StringUtils;\n \n-public class FieldExtensionExport implements BpmnXMLConstants {\n \n-  public static boolean writeFieldExtensions(List<FieldExtension> fieldExtensionList, boolean didWriteExtensionStartElement, XMLStreamWriter xtw) throws Exception {\n+public class FieldExtensionExport implements BpmnXMLConstants {\n \n+    public static boolean writeFieldExtensions(List<FieldExtension> fieldExtensionList,\n+                                               boolean didWriteExtensionStartElement, XMLStreamWriter xtw) throws Exception {\n     for (FieldExtension fieldExtension : fieldExtensionList) {\n-\n-      if (StringUtils.isNotEmpty(fieldExtension.getFieldName())) {\n-\n+        if (StringUtils.isNotEmpty(fieldExtension.getFieldName())) {\n         if (StringUtils.isNotEmpty(fieldExtension.getStringValue()) || StringUtils.isNotEmpty(fieldExtension.getExpression())) {\n-\n-          if (!didWriteExtensionStartElement) {\n-            xtw.writeStartElement(ELEMENT_EXTENSIONS);\n-            didWriteExtensionStartElement = true;\n-          }\n-\n-          xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD, ACTIVITI_EXTENSIONS_NAMESPACE);\n-          BpmnXMLUtil.writeDefaultAttribute(ATTRIBUTE_FIELD_NAME, fieldExtension.getFieldName(), xtw);\n-\n-          if (StringUtils.isNotEmpty(fieldExtension.getStringValue())) {\n-            xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD_STRING, ACTIVITI_EXTENSIONS_NAMESPACE);\n-            xtw.writeCData(fieldExtension.getStringValue());\n-          } else {\n-            xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ATTRIBUTE_FIELD_EXPRESSION, ACTIVITI_EXTENSIONS_NAMESPACE);\n-            xtw.writeCData(fieldExtension.getExpression());\n-          }\n-          xtw.writeEndElement();\n-          xtw.writeEndElement();\n+            if (!didWriteExtensionStartElement) {\n+                xtw.writeStartElement(ELEMENT_EXTENSIONS);\n+                didWriteExtensionStartElement = true;\n+            }\n+            xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX,\n+                                  ELEMENT_FIELD,\n+                                  ACTIVITI_EXTENSIONS_NAMESPACE);\n+            BpmnXMLUtil.writeDefaultAttribute(ATTRIBUTE_FIELD_NAME,\n+                                              fieldExtension.getFieldName(),\n+                                              xtw);\n+            if (StringUtils.isNotEmpty(fieldExtension.getStringValue())) {\n+                                                                                                                                   xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX,\n+                                                                                                                                                         ELEMENT_FIELD_STRING,\n+                                                                                                                                                         ACTIVITI_EXTENSIONS_NAMESPACE);\n+                                                                                                                                   xtw.writeCData(fieldExtension.getStringValue());\n+            } else {\n+                xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ATTRIBUTE_FIELD_EXPRESSION, ACTIVITI_EXTENSIONS_NAMESPACE);\n+                xtw.writeCData(fieldExtension.getExpression());\n+            }\n+            xtw.writeEndElement();\n+            xtw.writeEndElement();\n+        }\n         }\n-      }\n     }\n     return didWriteExtensionStartElement;\n-  }\n-}\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/729/FieldExtensionExport.java\nindex 7084105a11..913a519c56 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/729/FieldExtensionExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/729/FieldExtensionExport.java\nindex 7084105a11..913a519c56 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/729/FieldExtensionExport.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/729/FieldExtensionExport.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.export;\n \n import java.util.List;\n",
            "diff_size": 1
        }
    ]
}