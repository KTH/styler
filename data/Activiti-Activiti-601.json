{
    "error_id": "601",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/601/ModelQueryProperty.java\nindex 8c3102dd4c..20c15d97c5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/601/ModelQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/601/ModelQueryProperty.java\nindex 8c3102dd4c..a0a2b86b60 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/601/ModelQueryProperty.java\n@@ -25,38 +25,35 @@ import org.activiti.engine.repository.ModelQuery;\n \n /**\n  * Contains the possible properties that can be used in a {@link ModelQuery}.\n- *\n-\n-\n  */\n public class ModelQueryProperty implements QueryProperty {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n-  private static final Map<String, ModelQueryProperty> properties = new HashMap<String, ModelQueryProperty>();\n+    private static final Map<String, ModelQueryProperty> properties = new HashMap<String, ModelQueryProperty>();\n \n-  public static final ModelQueryProperty MODEL_CATEGORY = new ModelQueryProperty(\"RES.CATEGORY_\");\n-  public static final ModelQueryProperty MODEL_ID = new ModelQueryProperty(\"RES.ID_\");\n-  public static final ModelQueryProperty MODEL_VERSION = new ModelQueryProperty(\"RES.VERSION_\");\n-  public static final ModelQueryProperty MODEL_NAME = new ModelQueryProperty(\"RES.NAME_\");\n-  public static final ModelQueryProperty MODEL_CREATE_TIME = new ModelQueryProperty(\"RES.CREATE_TIME_\");\n-  public static final ModelQueryProperty MODEL_LAST_UPDATE_TIME = new ModelQueryProperty(\"RES.LAST_UPDATE_TIME_\");\n-  public static final ModelQueryProperty MODEL_KEY = new ModelQueryProperty(\"RES.KEY_\");\n-  public static final ModelQueryProperty MODEL_TENANT_ID = new ModelQueryProperty(\"RES.TENANT_ID_\");\n+    public static final ModelQueryProperty MODEL_CATEGORY = new ModelQueryProperty(\"RES.CATEGORY_\");\n+    public static final ModelQueryProperty MODEL_ID = new ModelQueryProperty(\"RES.ID_\");\n+    public static final ModelQueryProperty MODEL_VERSION = new ModelQueryProperty(\"RES.VERSION_\");\n+    public static final ModelQueryProperty MODEL_NAME = new ModelQueryProperty(\"RES.NAME_\");\n+    public static final ModelQueryProperty MODEL_CREATE_TIME = new ModelQueryProperty(\"RES.CREATE_TIME_\");\n+    public static final ModelQueryProperty MODEL_LAST_UPDATE_TIME = new ModelQueryProperty(\"RES.LAST_UPDATE_TIME_\");\n+    public static final ModelQueryProperty MODEL_KEY = new ModelQueryProperty(\"RES.KEY_\");\n+    public static final ModelQueryProperty MODEL_TENANT_ID = new ModelQueryProperty(\"RES.TENANT_ID_\");\n \n-  private String name;\n+    private String name;\n \n-  public ModelQueryProperty(String name) {\n-    this.name = name;\n-    properties.put(name, this);\n-  }\n+    public ModelQueryProperty(String name) {\n+        this.name = name;\n+        properties.put(name, this);\n+    }\n \n-  public String getName() {\n-    return name;\n-  }\n+    public String getName() {\n+        return name;\n+    }\n \n-  public static ModelQueryProperty findByName(String propertyName) {\n-    return properties.get(propertyName);\n-  }\n+    public static ModelQueryProperty findByName(String propertyName) {\n+        return properties.get(propertyName);\n+    }\n \n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/601/ModelQueryProperty.java\nindex 8c3102dd4c..572c1981af 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/601/ModelQueryProperty.java\n@@ -19,7 +19,6 @@ package org.activiti.engine.impl;\n \n import java.util.HashMap;\n import java.util.Map;\n-\n import org.activiti.engine.query.QueryProperty;\n import org.activiti.engine.repository.ModelQuery;\n \n@@ -29,34 +28,34 @@ import org.activiti.engine.repository.ModelQuery;\n \n \n  */\n-public class ModelQueryProperty implements QueryProperty {\n \n-  private static final long serialVersionUID = 1L;\n \n-  private static final Map<String, ModelQueryProperty> properties = new HashMap<String, ModelQueryProperty>();\n+public class ModelQueryProperty implements QueryProperty {\n \n-  public static final ModelQueryProperty MODEL_CATEGORY = new ModelQueryProperty(\"RES.CATEGORY_\");\n-  public static final ModelQueryProperty MODEL_ID = new ModelQueryProperty(\"RES.ID_\");\n-  public static final ModelQueryProperty MODEL_VERSION = new ModelQueryProperty(\"RES.VERSION_\");\n-  public static final ModelQueryProperty MODEL_NAME = new ModelQueryProperty(\"RES.NAME_\");\n-  public static final ModelQueryProperty MODEL_CREATE_TIME = new ModelQueryProperty(\"RES.CREATE_TIME_\");\n-  public static final ModelQueryProperty MODEL_LAST_UPDATE_TIME = new ModelQueryProperty(\"RES.LAST_UPDATE_TIME_\");\n-  public static final ModelQueryProperty MODEL_KEY = new ModelQueryProperty(\"RES.KEY_\");\n-  public static final ModelQueryProperty MODEL_TENANT_ID = new ModelQueryProperty(\"RES.TENANT_ID_\");\n+    private static final long serialVersionUID = 1L;\n \n-  private String name;\n+    private static final Map<String, ModelQueryProperty> properties = new HashMap<String, ModelQueryProperty>();\n+    public static final ModelQueryProperty MODEL_CATEGORY = new ModelQueryProperty(\"RES.CATEGORY_\");\n+    public static final ModelQueryProperty MODEL_ID = new ModelQueryProperty(\"RES.ID_\");\n+    public static final ModelQueryProperty MODEL_VERSION = new ModelQueryProperty(\"RES.VERSION_\");\n+    public static final ModelQueryProperty MODEL_NAME = new ModelQueryProperty(\"RES.NAME_\");\n+    public static final ModelQueryProperty MODEL_CREATE_TIME = new ModelQueryProperty(\"RES.CREATE_TIME_\");\n+    public static final ModelQueryProperty MODEL_LAST_UPDATE_TIME = new ModelQueryProperty(\"RES.LAST_UPDATE_TIME_\");\n+    public static final ModelQueryProperty MODEL_KEY = new ModelQueryProperty(\"RES.KEY_\");\n+    public static final ModelQueryProperty MODEL_TENANT_ID = new ModelQueryProperty(\"RES.TENANT_ID_\");\n \n-  public ModelQueryProperty(String name) {\n+    private String name;\n+\n+    public ModelQueryProperty(String name) {\n     this.name = name;\n     properties.put(name, this);\n-  }\n+    }\n \n-  public String getName() {\n+    public String getName() {\n     return name;\n-  }\n-\n-  public static ModelQueryProperty findByName(String propertyName) {\n-    return properties.get(propertyName);\n-  }\n+    }\n \n-}\n+    public static ModelQueryProperty findByName(String propertyName) {\n+        return properties.get(propertyName);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/601/ModelQueryProperty.java\nindex 8c3102dd4c..20c15d97c5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/601/ModelQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/601/ModelQueryProperty.java\nindex 8c3102dd4c..20c15d97c5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/601/ModelQueryProperty.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/601/ModelQueryProperty.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        }
    ]
}