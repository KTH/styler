{
    "error_id": "137",
    "information": {
        "errors": [
            {
                "line": "104",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n     ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n     ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n     MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "column": "115",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/137/ConfigurationKeyEnum.java\nindex b296155389..bbb2b5ac11 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler/137/ConfigurationKeyEnum.java\n@@ -101,7 +101,7 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n \n      ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n+     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R , newHashSet(V_16)),\n      ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n      ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n      MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/137/ConfigurationKeyEnum.java\nindex b296155389..c1c42b1fd5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/intellij/137/ConfigurationKeyEnum.java\n@@ -16,6 +16,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  */\n+\n package de.rwth.idsg.steve.web.dto.ocpp;\n \n import de.rwth.idsg.steve.ocpp.OcppVersion;\n@@ -100,11 +101,12 @@ public enum ConfigurationKeyEnum {\n     // New in OCPP 1.6 for Smart Charging profile\n     // -------------------------------------------------------------------------\n \n-     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n-     ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n-     ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n-     MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n+    ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n+    ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R,\n+        newHashSet(V_16)),\n+    ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n+    ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n+    MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n \n     private final String value;\n     private final String text;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/137/ConfigurationKeyEnum.java\nindex b296155389..767a0973ff 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/codebuff/137/ConfigurationKeyEnum.java\n@@ -19,7 +19,6 @@\n package de.rwth.idsg.steve.web.dto.ocpp;\n \n import de.rwth.idsg.steve.ocpp.OcppVersion;\n-\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Set;\n@@ -36,12 +35,13 @@ import static de.rwth.idsg.steve.web.dto.ocpp.ConfigurationKeyReadWriteEnum.RW;\n  * @author David Rerimassie <david@rerimassie.nl>\n  * @since 02.01.2015\n  */\n+\n+\n public enum ConfigurationKeyEnum {\n \n     // -------------------------------------------------------------------------\n     // From OCPP 1.2\n     // -------------------------------------------------------------------------\n-\n     HeartBeatInterval(\"HeartBeatInterval\", \"in seconds\", RW, newHashSet(V_12, V_15)),\n     ConnectionTimeOut(\"ConnectionTimeOut\", \"in seconds\", RW, newHashSet(V_12, V_15, V_16)),\n     ProximityContactRetries(\"ProximityContactRetries\", \"in times\", RW, newHashSet(V_12, V_15)),\n@@ -55,7 +55,6 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n     // New in OCPP 1.5\n     // -------------------------------------------------------------------------\n-\n     ClockAlignedDataInterval(\"ClockAlignedDataInterval\", \"in seconds\", RW, newHashSet(V_15, V_16)),\n     MeterValuesSampledData(\"MeterValuesSampledData\", \"comma seperated list\", RW, newHashSet(V_15, V_16)),\n     MeterValuesAlignedData(\"MeterValuesAlignedData\", \"comma seperated list\", RW, newHashSet(V_15, V_16)),\n@@ -65,7 +64,6 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n     // New in OCPP 1.6\n     // -------------------------------------------------------------------------\n-\n     HeartbeatInterval(\"HeartbeatInterval\", \"in seconds\", RW, newHashSet(V_16)),\n     AllowOfflineTxForUnknownId(\"AllowOfflineTxForUnknownId\", \"boolean\", RW, newHashSet(V_16)),\n     AuthorizationCacheEnabled(\"AuthorizationCacheEnabled\", \"boolean\", RW, newHashSet(V_16)),\n@@ -99,12 +97,11 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n     // New in OCPP 1.6 for Smart Charging profile\n     // -------------------------------------------------------------------------\n-\n-     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n-     ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n-     ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n-     MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n+    ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n+    ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n+    ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n+    ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n+    MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n \n     private final String value;\n     private final String text;\n@@ -112,10 +109,13 @@ public enum ConfigurationKeyEnum {\n     private final Set<OcppVersion> versions;\n \n     public static final Map<String, String> OCPP_12_MAP = asMap(OcppVersion.V_12, RW);\n+\n     public static final Map<String, String> OCPP_15_MAP = asMap(OcppVersion.V_15, RW);\n \n     // In OCPP 1.6 some Configuration Keys are Read-Only\n+\n     public static final Map<String, String> OCPP_16_MAP_R = asMap(OcppVersion.V_16, R);\n+\n     public static final Map<String, String> OCPP_16_MAP_RW = asMap(OcppVersion.V_16, RW);\n \n     ConfigurationKeyEnum(String value, String comment, ConfigurationKeyReadWriteEnum rw, Set<OcppVersion> versions) {\n@@ -140,13 +140,14 @@ public enum ConfigurationKeyEnum {\n \n     private static Map<String, String> asMap(OcppVersion version, ConfigurationKeyReadWriteEnum rw) {\n         Map<String, String> map = new LinkedHashMap<>();\n+\n         for (ConfigurationKeyEnum c : ConfigurationKeyEnum.values()) {\n             if (c.versions.contains(version) && c.rw == rw) {\n                 map.put(c.value, c.text);\n             } else if (c.versions.contains(version) && rw == ConfigurationKeyReadWriteEnum.R) {\n-                map.put(c.value, c.text);\n-            }\n+                       map.put(c.value, c.text);\n+                   }\n         }\n         return map;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "column": "115",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/137/ConfigurationKeyEnum.java\nindex b296155389..bbb2b5ac11 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_random/137/ConfigurationKeyEnum.java\n@@ -101,7 +101,7 @@ public enum ConfigurationKeyEnum {\n     // -------------------------------------------------------------------------\n \n      ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n+     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R , newHashSet(V_16)),\n      ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n      ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n      MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "column": "177",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "103",
                    "column": "200",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "103",
                    "column": "202",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/137/ConfigurationKeyEnum.java\nindex b296155389..0b0e6cdce2 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/errored/1/137/ConfigurationKeyEnum.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/RWTH-i5-IDSG-steve/styler_three_grams/137/ConfigurationKeyEnum.java\n@@ -100,8 +100,7 @@ public enum ConfigurationKeyEnum {\n     // New in OCPP 1.6 for Smart Charging profile\n     // -------------------------------------------------------------------------\n \n-     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)),\n-     ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\", \"comma seperated list\", R, newHashSet(V_16)),\n+     ChargeProfileMaxStackLevel(\"ChargeProfileMaxStackLevel\", \"integer\", R, newHashSet(V_16)), ChargingScheduleAllowedChargingRateUnit(\"ChargingScheduleAllowedChargingRateUnit\",\"comma seperated list\",R,newHashSet(V_16)),\n      ChargingScheduleMaxPeriods(\"ChargingScheduleMaxPeriods\", \"integer\", R, newHashSet(V_16)),\n      ConnectorSwitch3to1PhaseSupported(\"ConnectorSwitch3to1PhaseSupported\", \"boolean\", R, newHashSet(V_16)),\n      MaxChargingProfilesInstalled(\"MaxChargingProfilesInstalled\", \"integer\", R, newHashSet(V_16));\n",
            "diff_size": 2
        }
    ]
}