{
    "error_id": "61",
    "information": {
        "errors": [
            {
                "line": "55",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 139).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    List<CoverageRequirementRuleQuery> queries = new ArrayList<>();\n    Bundle deviceRequestBundle = orderReviewRequest.getPrefetch().getDeviceRequestBundle();\n    List<DaVinciDeviceRequest> deviceRequestList = Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest.class, deviceRequestBundle);\n    for (DeviceRequest deviceRequest : deviceRequestList) {\n      List<Coding> codings = null;\n      Patient patient = null;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/61/OrderReviewService.java\nindex 8454fd08ca..496ffd9a9d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/intellij/61/OrderReviewService.java\n@@ -26,7 +26,7 @@ import java.util.List;\n \n \n @Component(\"stu3_OrderReviewService\")\n-public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n+public class OrderReviewService extends CdsService<OrderReviewRequest> {\n \n   public static final String ID = \"order-review-crd\";\n   public static final String TITLE = \"order-review Coverage Requirements Discovery\";\n@@ -36,13 +36,13 @@ public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n   static final Logger logger = LoggerFactory.getLogger(OrderReviewService.class);\n   public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n   public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-        CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n-        CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE\n-    );\n+      CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n+      CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE,\n+      CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE\n+  );\n \n   public OrderReviewService() {\n     super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n@@ -52,7 +52,8 @@ public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n       throws RequestIncompleteException {\n     List<CoverageRequirementRuleQuery> queries = new ArrayList<>();\n     Bundle deviceRequestBundle = orderReviewRequest.getPrefetch().getDeviceRequestBundle();\n-    List<DaVinciDeviceRequest> deviceRequestList = Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest.class, deviceRequestBundle);\n+    List<DaVinciDeviceRequest> deviceRequestList =\n+        Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest.class, deviceRequestBundle);\n     for (DeviceRequest deviceRequest : deviceRequestList) {\n       List<Coding> codings = null;\n       Patient patient = null;\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/61/OrderReviewService.java\nindex 8454fd08ca..d418d590e3 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/naturalize/61/OrderReviewService.java\n@@ -26,7 +26,8 @@ import java.util.List;\n \n \n @Component(\"stu3_OrderReviewService\")\n-public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n+public class OrderReviewService extends CdsService<OrderReviewRequest> {\n+\n \n   public static final String ID = \"order-review-crd\";\n   public static final String TITLE = \"order-review Coverage Requirements Discovery\";\n@@ -35,8 +36,7 @@ public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n       \"Get information regarding the coverage requirements for durable medical equipment\";\n   static final Logger logger = LoggerFactory.getLogger(OrderReviewService.class);\n   public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n-  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-        CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n+  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n         CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n         CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n         CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n@@ -44,12 +44,12 @@ public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n         CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE\n     );\n \n-  public OrderReviewService() {\n+\n+public OrderReviewService() {\n     super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n   }\n \n-  public List<CoverageRequirementRuleQuery> makeQueries(OrderReviewRequest orderReviewRequest)\n-      throws RequestIncompleteException {\n+  public List<CoverageRequirementRuleQuery> makeQueries(OrderReviewRequest orderReviewRequest) throws RequestIncompleteException {\n     List<CoverageRequirementRuleQuery> queries = new ArrayList<>();\n     Bundle deviceRequestBundle = orderReviewRequest.getPrefetch().getDeviceRequestBundle();\n     List<DaVinciDeviceRequest> deviceRequestList = Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest.class, deviceRequestBundle);\n@@ -74,4 +74,4 @@ public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n     return queries;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 404).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 10, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/61/OrderReviewService.java\nindex 8454fd08ca..6774f2196c 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/codebuff/61/OrderReviewService.java\n@@ -20,58 +20,47 @@ import org.hl7.fhir.dstu3.model.Patient;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n-\n import java.util.Arrays;\n import java.util.List;\n \n \n @Component(\"stu3_OrderReviewService\")\n-public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n+public class OrderReviewService extends CdsService<OrderReviewRequest> {\n+\n \n-  public static final String ID = \"order-review-crd\";\n-  public static final String TITLE = \"order-review Coverage Requirements Discovery\";\n-  public static final Hook HOOK = Hook.ORDER_REVIEW;\n-  public static final String DESCRIPTION =\n-      \"Get information regarding the coverage requirements for durable medical equipment\";\n-  static final Logger logger = LoggerFactory.getLogger(OrderReviewService.class);\n-  public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n-  public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(\n-        CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE,\n-        CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE,\n-        CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE\n-    );\n+    public static final String ID = \"order-review-crd\";\n+    public static final String TITLE = \"order-review Coverage Requirements Discovery\";\n+    public static final Hook HOOK = Hook.ORDER_REVIEW;\n+    public static final String DESCRIPTION = \"Get information regarding the coverage requirements for durable medical equipment\";\n+    static final Logger logger = LoggerFactory.getLogger(OrderReviewService.class);\n+    public static final FhirComponents FHIRCOMPONENTS = new FhirComponents();\n+    public static final List<PrefetchTemplateElement> PREFETCH_ELEMENTS = Arrays.asList(CrdPrefetchTemplateElements.DEVICE_REQUEST_BUNDLE, CrdPrefetchTemplateElements.SUPPLY_REQUEST_BUNDLE, CrdPrefetchTemplateElements.NUTRITION_ORDER_BUNDLE, CrdPrefetchTemplateElements.MEDICATION_REQUEST_BUNDLE, CrdPrefetchTemplateElements.PROCEDURE_REQUEST_BUNDLE, CrdPrefetchTemplateElements.REFERRAL_REQUEST_BUNDLE);\n \n-  public OrderReviewService() {\n+    public OrderReviewService() {\n     super(ID, HOOK, TITLE, DESCRIPTION, PREFETCH_ELEMENTS, FHIRCOMPONENTS);\n-  }\n+    }\n+\n \n-  public List<CoverageRequirementRuleQuery> makeQueries(OrderReviewRequest orderReviewRequest)\n-      throws RequestIncompleteException {\n+    public List<CoverageRequirementRuleQuery> makeQueries(OrderReviewRequest orderReviewRequest) throws RequestIncompleteException {\n     List<CoverageRequirementRuleQuery> queries = new ArrayList<>();\n     Bundle deviceRequestBundle = orderReviewRequest.getPrefetch().getDeviceRequestBundle();\n     List<DaVinciDeviceRequest> deviceRequestList = Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest.class, deviceRequestBundle);\n     for (DeviceRequest deviceRequest : deviceRequestList) {\n-      List<Coding> codings = null;\n-      Patient patient = null;\n-      PatientInfo patientInfo = null;\n-      try {\n-        codings = deviceRequest.getCodeCodeableConcept().getCoding();\n-        patient = (Patient) deviceRequest.getSubject().getResource();\n-\n-        patientInfo = Utilities.getPatientInfo(patient);\n-\n-        queries.addAll(this.resourcesToQueries(codings, patient, null, patientInfo,\n-            new PractitionerRoleInfo()));\n-      } catch (RequestIncompleteException e) {\n-        throw e;\n-      } catch (Exception e) {\n-        logger.error(\"Error parsing needed info from the device request bundle.\", e);\n-      }\n+        List<Coding> codings = null;\n+        Patient patient = null;\n+        PatientInfo patientInfo = null;\n+        try {\n+                                                              codings = deviceRequest.getCodeCodeableConcept().getCoding();\n+                                                              patient = (Patient) deviceRequest.getSubject().getResource();\n+                                                              patientInfo = Utilities.getPatientInfo(patient);\n+                                                              queries.addAll(this.resourcesToQueries(codings, patient, null, patientInfo, new PractitionerRoleInfo()));\n+        } catch (RequestIncompleteException e) {\n+          throw e;\n+        }\n+catch (Exception e) {\n+logger.error(\"Error parsing needed info from the device request bundle.\", e);\n+        }\n     }\n     return queries;\n-  }\n-\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/61/OrderReviewService.java\nindex 8454fd08ca..7cd4cdd7bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/errored/1/61/OrderReviewService.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/HL7-DaVinci-CRD/styler_random/61/OrderReviewService.java\n@@ -52,7 +52,7 @@ public class OrderReviewService extends CdsService<OrderReviewRequest>  {\n       throws RequestIncompleteException {\n     List<CoverageRequirementRuleQuery> queries = new ArrayList<>();\n     Bundle deviceRequestBundle = orderReviewRequest.getPrefetch().getDeviceRequestBundle();\n-    List<DaVinciDeviceRequest> deviceRequestList = Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest.class, deviceRequestBundle);\n+    List<DaVinciDeviceRequest> deviceRequestList = Utilities.getResourcesOfTypeFromBundle(DaVinciDeviceRequest. class, deviceRequestBundle);\n     for (DeviceRequest deviceRequest : deviceRequestList) {\n       List<Coding> codings = null;\n       Patient patient = null;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ]
}