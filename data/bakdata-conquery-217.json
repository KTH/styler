{
    "error_id": "217",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\tprivate Charset encoding = StandardCharsets.UTF_8;\n\tprivate boolean skipHeader = true;\n\tprivate int maxColumns = 1_000_000; // This should be sufficiently enough.\n\t/**\n\t * Script used to generate the CSV column names from CQConcept and Select information.\n\t * The script has an instance of SelectResultInfo named columnInfo available to construct the name.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/217/CSVConfig.java\nindex 2be8af51c1..fe7fdb52bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler/217/CSVConfig.java\n@@ -32,14 +32,14 @@ public class CSVConfig {\n \t */\n \t@ValidColumnNamer\n \tprivate String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n-\t\n+\n \tpublic CsvParserSettings createCsvParserSettings() {\n \t\tCsvParserSettings settings = new CsvParserSettings();\n \t\tsettings.setFormat(createCsvFormat());\n \t\tsettings.setMaxColumns(maxColumns);\n \t\treturn settings;\n \t}\n-\t\n+\n \tpublic CsvWriterSettings createCsvWriterSettings() {\n \t\tCsvWriterSettings settings = new CsvWriterSettings();\n \t\tsettings.setMaxColumns(maxColumns);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/217/CSVConfig.java\nindex 2be8af51c1..6d6090d9e5 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/intellij/217/CSVConfig.java\n@@ -14,47 +14,52 @@ import javax.validation.constraints.NotNull;\n import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n-@Getter @Setter @With @AllArgsConstructor @NoArgsConstructor\n+@Getter\n+@Setter\n+@With\n+@AllArgsConstructor\n+@NoArgsConstructor\n public class CSVConfig {\n-\tprivate char escape = '\\\\';\n-\tprivate char comment = '\\0';\n-\tprivate char delimeter = ',';\n-\t@Length(min=1, max=2) @NotNull\n-\tprivate String lineSeparator = \"\\n\";\n-\tprivate char quote = '\"';\n-\t@NotNull\n-\tprivate Charset encoding = StandardCharsets.UTF_8;\n-\tprivate boolean skipHeader = true;\n-\tprivate int maxColumns = 1_000_000; // This should be sufficiently enough.\n-\t/**\n-\t * Script used to generate the CSV column names from CQConcept and Select information.\n-\t * The script has an instance of SelectResultInfo named columnInfo available to construct the name.\n-\t */\n-\t@ValidColumnNamer\n-\tprivate String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n-\t\n-\tpublic CsvParserSettings createCsvParserSettings() {\n-\t\tCsvParserSettings settings = new CsvParserSettings();\n-\t\tsettings.setFormat(createCsvFormat());\n-\t\tsettings.setMaxColumns(maxColumns);\n-\t\treturn settings;\n-\t}\n-\t\n-\tpublic CsvWriterSettings createCsvWriterSettings() {\n-\t\tCsvWriterSettings settings = new CsvWriterSettings();\n-\t\tsettings.setMaxColumns(maxColumns);\n-\t\tsettings.setFormat(createCsvFormat());\n-\t\treturn settings;\n-\t}\n+    private char escape = '\\\\';\n+    private char comment = '\\0';\n+    private char delimeter = ',';\n+    @Length(min = 1, max = 2)\n+    @NotNull\n+    private String lineSeparator = \"\\n\";\n+    private char quote = '\"';\n+    @NotNull\n+    private Charset encoding = StandardCharsets.UTF_8;\n+    private boolean skipHeader = true;\n+    private int maxColumns = 1_000_000; // This should be sufficiently enough.\n+    /**\n+     * Script used to generate the CSV column names from CQConcept and Select information.\n+     * The script has an instance of SelectResultInfo named columnInfo available to construct the name.\n+     */\n+    @ValidColumnNamer\n+    private String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n \n-\tpublic CsvFormat createCsvFormat() {\n-\t\tCsvFormat format = new CsvFormat();\n-\t\tformat.setQuoteEscape(getEscape());\n-\t\tformat.setCharToEscapeQuoteEscaping(getEscape());\n-\t\tformat.setComment(getComment());\n-\t\tformat.setDelimiter(getDelimeter());\n-\t\tformat.setLineSeparator(getLineSeparator());\n-\t\tformat.setQuote(getQuote());\n-\t\treturn format;\n-\t}\n+    public CsvParserSettings createCsvParserSettings() {\n+        CsvParserSettings settings = new CsvParserSettings();\n+        settings.setFormat(createCsvFormat());\n+        settings.setMaxColumns(maxColumns);\n+        return settings;\n+    }\n+\n+    public CsvWriterSettings createCsvWriterSettings() {\n+        CsvWriterSettings settings = new CsvWriterSettings();\n+        settings.setMaxColumns(maxColumns);\n+        settings.setFormat(createCsvFormat());\n+        return settings;\n+    }\n+\n+    public CsvFormat createCsvFormat() {\n+        CsvFormat format = new CsvFormat();\n+        format.setQuoteEscape(getEscape());\n+        format.setCharToEscapeQuoteEscaping(getEscape());\n+        format.setComment(getComment());\n+        format.setDelimiter(getDelimeter());\n+        format.setLineSeparator(getLineSeparator());\n+        format.setQuote(getQuote());\n+        return format;\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/217/CSVConfig.java\nindex 2be8af51c1..dab635b395 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/codebuff/217/CSVConfig.java\n@@ -9,52 +9,56 @@ import lombok.NoArgsConstructor;\n import lombok.Setter;\n import lombok.With;\n import org.hibernate.validator.constraints.Length;\n-\n import javax.validation.constraints.NotNull;\n import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n-@Getter @Setter @With @AllArgsConstructor @NoArgsConstructor\n+@Getter\n+@Setter\n+@With\n+@AllArgsConstructor\n+@NoArgsConstructor\n public class CSVConfig {\n-\tprivate char escape = '\\\\';\n-\tprivate char comment = '\\0';\n-\tprivate char delimeter = ',';\n-\t@Length(min=1, max=2) @NotNull\n-\tprivate String lineSeparator = \"\\n\";\n-\tprivate char quote = '\"';\n-\t@NotNull\n-\tprivate Charset encoding = StandardCharsets.UTF_8;\n-\tprivate boolean skipHeader = true;\n-\tprivate int maxColumns = 1_000_000; // This should be sufficiently enough.\n-\t/**\n-\t * Script used to generate the CSV column names from CQConcept and Select information.\n-\t * The script has an instance of SelectResultInfo named columnInfo available to construct the name.\n-\t */\n-\t@ValidColumnNamer\n-\tprivate String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n-\t\n-\tpublic CsvParserSettings createCsvParserSettings() {\n-\t\tCsvParserSettings settings = new CsvParserSettings();\n-\t\tsettings.setFormat(createCsvFormat());\n-\t\tsettings.setMaxColumns(maxColumns);\n-\t\treturn settings;\n-\t}\n-\t\n-\tpublic CsvWriterSettings createCsvWriterSettings() {\n-\t\tCsvWriterSettings settings = new CsvWriterSettings();\n-\t\tsettings.setMaxColumns(maxColumns);\n-\t\tsettings.setFormat(createCsvFormat());\n-\t\treturn settings;\n-\t}\n \n-\tpublic CsvFormat createCsvFormat() {\n-\t\tCsvFormat format = new CsvFormat();\n-\t\tformat.setQuoteEscape(getEscape());\n-\t\tformat.setCharToEscapeQuoteEscaping(getEscape());\n-\t\tformat.setComment(getComment());\n-\t\tformat.setDelimiter(getDelimeter());\n-\t\tformat.setLineSeparator(getLineSeparator());\n-\t\tformat.setQuote(getQuote());\n-\t\treturn format;\n-\t}\n+    private char escape = '\\\\';\n+    private char comment = '\\0';\n+    private char delimeter = ',';\n+    @Length(min=1, max=2) @NotNull\n+    private String lineSeparator = \"\\n\";\n+    private char quote = '\"';\n+    @NotNull\n+    private Charset encoding = StandardCharsets.UTF_8;\n+    private boolean skipHeader = true;\n+    private int maxColumns = 1_000_000; // This should be sufficiently enough.\n+    /**\n+     * Script used to generate the CSV column names from CQConcept and Select information.\n+     * The script has an instance of SelectResultInfo named columnInfo available to construct the name.\n+     */\n+    @ValidColumnNamer\n+    private String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n+\n+    public CsvParserSettings createCsvParserSettings() {\n+        CsvParserSettings settings = new CsvParserSettings();\n+        settings.setFormat(createCsvFormat());\n+        settings.setMaxColumns(maxColumns);\n+        return settings;\n+    }\n+\n+    public CsvWriterSettings createCsvWriterSettings() {\n+        CsvWriterSettings settings = new CsvWriterSettings();\n+        settings.setMaxColumns(maxColumns);\n+        settings.setFormat(createCsvFormat());\n+        return settings;\n+    }\n+\n+    public CsvFormat createCsvFormat() {\n+        CsvFormat format = new CsvFormat();\n+        format.setQuoteEscape(getEscape());\n+        format.setCharToEscapeQuoteEscaping(getEscape());\n+        format.setComment(getComment());\n+        format.setDelimiter(getDelimeter());\n+        format.setLineSeparator(getLineSeparator());\n+        format.setQuote(getQuote());\n+        return format;\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 77
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "5",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 1, expected is 4, indentation should be the same level as line 33.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/217/CSVConfig.java\nindex 2be8af51c1..5f0e897c61 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_random/217/CSVConfig.java\n@@ -25,36 +25,36 @@ public class CSVConfig {\n \t@NotNull\n \tprivate Charset encoding = StandardCharsets.UTF_8;\n \tprivate boolean skipHeader = true;\n-\tprivate int maxColumns = 1_000_000; // This should be sufficiently enough.\n-\t/**\n+\tprivate int maxColumns = 1_000_000;\n+\t// This should be sufficiently enough.\n+\t\t/**\n \t * Script used to generate the CSV column names from CQConcept and Select information.\n \t * The script has an instance of SelectResultInfo named columnInfo available to construct the name.\n-\t */\n-\t@ValidColumnNamer\n-\tprivate String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n-\t\n-\tpublic CsvParserSettings createCsvParserSettings() {\n-\t\tCsvParserSettings settings = new CsvParserSettings();\n-\t\tsettings.setFormat(createCsvFormat());\n-\t\tsettings.setMaxColumns(maxColumns);\n-\t\treturn settings;\n-\t}\n-\t\n-\tpublic CsvWriterSettings createCsvWriterSettings() {\n-\t\tCsvWriterSettings settings = new CsvWriterSettings();\n-\t\tsettings.setMaxColumns(maxColumns);\n-\t\tsettings.setFormat(createCsvFormat());\n-\t\treturn settings;\n-\t}\n+\t */@ ValidColumnNamer\n+\t\tprivate String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n \n-\tpublic CsvFormat createCsvFormat() {\n-\t\tCsvFormat format = new CsvFormat();\n-\t\tformat.setQuoteEscape(getEscape());\n-\t\tformat.setCharToEscapeQuoteEscaping(getEscape());\n-\t\tformat.setComment(getComment());\n-\t\tformat.setDelimiter(getDelimeter());\n-\t\tformat.setLineSeparator(getLineSeparator());\n-\t\tformat.setQuote(getQuote());\n-\t\treturn format;\n-\t}\n-}\n\\ No newline at end of file\n+\t\tpublic CsvParserSettings createCsvParserSettings() {\n+\t\t\tCsvParserSettings settings = new CsvParserSettings();\n+\t\t\tsettings.setFormat(createCsvFormat());\n+\t\t\tsettings.setMaxColumns(maxColumns);\n+\t\t\treturn settings;\n+\t\t}\n+\n+\t\tpublic CsvWriterSettings createCsvWriterSettings() {\n+\t\t\tCsvWriterSettings settings = new CsvWriterSettings();\n+\t\t\tsettings.setMaxColumns(maxColumns);\n+\t\t\tsettings.setFormat(createCsvFormat());\n+\t\t\treturn settings;\n+\t\t}\n+\n+\t\tpublic CsvFormat createCsvFormat() {\n+\t\t\tCsvFormat format = new CsvFormat();\n+\t\t\tformat.setQuoteEscape(getEscape());\n+\t\t\tformat.setCharToEscapeQuoteEscaping(getEscape());\n+\t\t\tformat.setComment(getComment());\n+\t\t\tformat.setDelimiter(getDelimeter());\n+\t\t\tformat.setLineSeparator(getLineSeparator());\n+\t\t\tformat.setQuote(getQuote());\n+\t\t\treturn format;\n+\t\t}\n+ }\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/217/CSVConfig.java\nindex 2be8af51c1..fe7fdb52bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/errored/1/217/CSVConfig.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/bakdata-conquery/styler_three_grams/217/CSVConfig.java\n@@ -32,14 +32,14 @@ public class CSVConfig {\n \t */\n \t@ValidColumnNamer\n \tprivate String columnNamerScript = \"java.lang.String.format(\\\"%s %s %s\\\",columnInfo.getSelect().getHolder().findConcept().getLabel(), columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel())\";\n-\t\n+\n \tpublic CsvParserSettings createCsvParserSettings() {\n \t\tCsvParserSettings settings = new CsvParserSettings();\n \t\tsettings.setFormat(createCsvFormat());\n \t\tsettings.setMaxColumns(maxColumns);\n \t\treturn settings;\n \t}\n-\t\n+\n \tpublic CsvWriterSettings createCsvWriterSettings() {\n \t\tCsvWriterSettings settings = new CsvWriterSettings();\n \t\tsettings.setMaxColumns(maxColumns);\n",
            "diff_size": 2
        }
    ]
}