{
    "error_id": "648",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.read.controller;\n\nimport java.io.IOException;\nimport java.util.ArrayList;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/648/MetadataQuerierByFileImpl.java\nindex bb58ec41ab..45c12dc9db 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler/648/MetadataQuerierByFileImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.controller;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/648/MetadataQuerierByFileImpl.java\nindex bb58ec41ab..b822bf9e1d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/intellij/648/MetadataQuerierByFileImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.controller;\n \n import java.io.IOException;\n@@ -171,7 +172,7 @@ public class MetadataQuerierByFileImpl implements IMetadataQuerier {\n \n   @Override\n   public List<TimeRange> convertSpace2TimePartition(List<Path> paths, long spacePartitionStartPos,\n-      long spacePartitionEndPos) throws IOException {\n+                                                    long spacePartitionEndPos) throws IOException {\n     if (spacePartitionStartPos > spacePartitionEndPos) {\n       throw new IllegalArgumentException(\n           \"'spacePartitionStartPos' should not be larger than 'spacePartitionEndPos'.\");\n@@ -246,13 +247,14 @@ public class MetadataQuerierByFileImpl implements IMetadataQuerier {\n   /**\n    * Check the location of a given chunkGroupMetaData with respect to a space partition constraint.\n    *\n-   * @param chunkMetaData the given chunkMetaData\n+   * @param chunkMetaData          the given chunkMetaData\n    * @param spacePartitionStartPos the start position of the space partition\n-   * @param spacePartitionEndPos the end position of the space partition\n+   * @param spacePartitionEndPos   the end position of the space partition\n    * @return LocateStatus\n    */\n   public static LocateStatus checkLocateStatus(ChunkMetadata chunkMetaData,\n-      long spacePartitionStartPos, long spacePartitionEndPos) {\n+                                               long spacePartitionStartPos,\n+                                               long spacePartitionEndPos) {\n     long startOffsetOfChunk = chunkMetaData.getOffsetOfChunkHeader();\n     if (spacePartitionStartPos <= startOffsetOfChunk\n         && startOffsetOfChunk < spacePartitionEndPos) {\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 46.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 61.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "46",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "64",
                    "column": "46",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "column": "49",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "67",
                    "column": "49",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 67, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "column": "93",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "71",
                    "column": "93",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "75",
                    "column": "81",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "75",
                    "column": "81",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "76",
                    "column": "20",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "76",
                    "column": "20",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "76",
                    "column": "67",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 118, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "column": "71",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 118, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 118, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "52",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "90",
                    "column": "52",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "92",
                    "column": "25",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "92",
                    "column": "25",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "92",
                    "column": "72",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "88",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "column": "20",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "99",
                    "column": "20",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "99",
                    "column": "71",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 89, indentation should be the same level as line 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "column": "94",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "108",
                    "column": "94",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "109",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "column": "142",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "142",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "115",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "115",
                    "column": "146",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "column": "90",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 182, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 261).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 89, indentation should be the same level as line 122.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "column": "90",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 8, expected is 100, indentation should be the same level as line 126.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 146, indentation should be the same level as line 129.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 146, indentation should be the same level as line 132.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 159, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "column": "203",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 146, indentation should be the same level as line 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 159, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 159, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 146, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "146",
                    "column": "30",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "146",
                    "column": "30",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 89, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "column": "48",
                    "severity": "warning",
                    "message": "WhitespaceAround: '==' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "152",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "column": "18",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "158",
                    "column": "18",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "column": "28",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "162",
                    "column": "28",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "162",
                    "column": "73",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "162",
                    "column": "73",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "163",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "169",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "169",
                    "column": "67",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "170",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "170",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "170",
                    "column": "71",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "173",
                    "column": "25",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "173",
                    "column": "25",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "173",
                    "column": "72",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "174",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 273).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "column": "226",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "175",
                    "column": "241",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "177",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "31",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "177",
                    "column": "31",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "179",
                    "column": "171",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "179",
                    "column": "171",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 166, indentation should be the same level as line 182.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 274).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "column": "184",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "182",
                    "column": "184",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "column": "167",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "183",
                    "column": "190",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "183",
                    "column": "190",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "184",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "column": "101",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 359).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 293).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 165, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 257).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 289).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "192",
                    "column": "257",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 165, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "194",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 264).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "195",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 165, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 269).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 256, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 257).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 100, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "202",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "202",
                    "column": "57",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "208",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "208",
                    "column": "15",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "208",
                    "column": "61",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "211",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "211",
                    "column": "10",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "211",
                    "column": "53",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "212",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 249).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "column": "177",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "213",
                    "column": "177",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "213",
                    "column": "214",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 166, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 228.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "230",
                    "column": "5",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "230",
                    "column": "30",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "230",
                    "column": "51",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "230",
                    "column": "72",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "231",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "column": "1",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "233",
                    "column": "22",
                    "severity": "warning",
                    "message": "WhitespaceAround: '<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 138, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 138, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/648/MetadataQuerierByFileImpl.java\nindex bb58ec41ab..c783edd1ee 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/codebuff/648/MetadataQuerierByFileImpl.java\n@@ -17,7 +17,6 @@\n  * under the License.\n  */\n package org.apache.iotdb.tsfile.read.controller;\n-\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -42,206 +41,180 @@ import org.apache.iotdb.tsfile.read.common.TimeRange;\n public class MetadataQuerierByFileImpl implements IMetadataQuerier {\n \n   // number of cache entries (path -> List<ChunkMetadata>)\n-  private static final int CACHED_ENTRY_NUMBER = 1000;\n \n-  private TsFileMetadata fileMetaData;\n \n-  private LRUCache<Path, List<ChunkMetadata>> chunkMetaDataCache;\n+    private static final int CACHED_ENTRY_NUMBER = 1000;\n+\n+\n+    private TsFileMetadata fileMetaData;\n+\n \n-  private TsFileSequenceReader tsFileReader;\n+    private LRUCache<Path, List < ChunkMetadata>> chunkMetaDataCache;\n+\n+\n+    private TsFileSequenceReader tsFileReader;\n \n   /**\n    * Constructor of MetadataQuerierByFileImpl.\n    */\n-  public MetadataQuerierByFileImpl(TsFileSequenceReader tsFileReader) throws IOException {\n-    this.tsFileReader = tsFileReader;\n-    this.fileMetaData = tsFileReader.readFileMetadata();\n-    chunkMetaDataCache = new LRUCache<Path, List<ChunkMetadata>>(CACHED_ENTRY_NUMBER) {\n-      @Override\n-      public List<ChunkMetadata> loadObjectByKey(Path key) throws IOException {\n-        return loadChunkMetadata(key);\n-      }\n-    };\n-  }\n-\n-  @Override\n-  public List<ChunkMetadata> getChunkMetaDataList(Path path) throws IOException {\n+\n+    public MetadataQuerierByFileImpl(TsFileSequenceReader tsFileReader) throws IOException {\n+this.tsFileReader = tsFileReader;\n+this.fileMetaData = tsFileReader.readFileMetadata();\n+chunkMetaDataCache = new LRUCache<Path, List < ChunkMetadata>>(CACHED_ENTRY_NUMBER) {\n+\n+\n+                         @ Override public List < ChunkMetadata> loadObjectByKey(Path key) throws IOException {\n+                         return loadChunkMetadata(key);\n+                         }\n+};\n+                                                                   } @ Override public List < ChunkMetadata> getChunkMetaDataList(Path path) throws IOException {\n     return chunkMetaDataCache.get(path);\n-  }\n-\n-  @Override\n-  public Map<Path, List<ChunkMetadata>> getChunkMetaDataMap(List<Path> paths) throws IOException {\n-    Map<Path, List<ChunkMetadata>> chunkMetaDatas = new HashMap<>();\n-    for (Path path : paths) {\n-      if (!chunkMetaDatas.containsKey(path)) {\n-        chunkMetaDatas.put(path, new ArrayList<>());\n-      }\n-      chunkMetaDatas.get(path).addAll(getChunkMetaDataList(path));\n+                                                                     }\n+\n+    @ Override public Map<Path, List < ChunkMetadata>> getChunkMetaDataMap(List < Path> paths) throws IOException {\n+    Map<Path, List < ChunkMetadata>> chunkMetaDatas = new HashMap <>();\n+    for(Path path : paths) {\n+                                                                                                                      if (!chunkMetaDatas.containsKey(path)) {\n+                               chunkMetaDatas.put(path, new ArrayList <>());\n+                                                                                                                      }\n+                                                                                                                      chunkMetaDatas.get(path).addAll(getChunkMetaDataList(path));\n     }\n     return chunkMetaDatas;\n-  }\n+    }\n \n-  @Override\n-  public TsFileMetadata getWholeFileMetadata() {\n+    @ Override public TsFileMetadata getWholeFileMetadata() {\n     return fileMetaData;\n-  }\n+    }\n \n-  @Override\n-  public void loadChunkMetaDatas(List<Path> paths) throws IOException {\n+    @ Override public void loadChunkMetaDatas(List < Path> paths) throws IOException {\n     // group measurements by device\n-    TreeMap<String, Set<String>> deviceMeasurementsMap = new TreeMap<>();\n-    for (Path path : paths) {\n-      if (!deviceMeasurementsMap.containsKey(path.getDevice())) {\n-        deviceMeasurementsMap.put(path.getDevice(), new HashSet<>());\n-      }\n-      deviceMeasurementsMap.get(path.getDevice()).add(path.getMeasurement());\n+    TreeMap<String, Set < String>> deviceMeasurementsMap = new TreeMap <>();\n+    for(Path path : paths) {\n+                                                                                         if (!deviceMeasurementsMap.containsKey(path.getDevice())) {\n+                               deviceMeasurementsMap.put(path.getDevice(), new HashSet <>());\n+                                                                                         }\n+                                                                                         deviceMeasurementsMap.get(path.getDevice()).add(path.getMeasurement());\n     }\n-\n-    Map<Path, List<ChunkMetadata>> tempChunkMetaDatas = new HashMap<>();\n-\n+    Map<Path, List < ChunkMetadata>> tempChunkMetaDatas = new HashMap <>();\n     int count = 0;\n     boolean enough = false;\n-\n-    for (Map.Entry<String, Set<String>> deviceMeasurements : deviceMeasurementsMap.entrySet()) {\n-      if (enough) {\n-        break;\n-      }\n-      String selectedDevice = deviceMeasurements.getKey();\n+    for(Map.Entry<String, Set < String>> deviceMeasurements : deviceMeasurementsMap.entrySet()) {\n+                                                                                         if (enough) {\n+                                                                                                    break;\n+                                                                                         }\n+                                                                                         String selectedDevice = deviceMeasurements.getKey();\n       // s1, s2, s3\n-      Set<String> selectedMeasurements = deviceMeasurements.getValue();\n-      List<String> devices = this.tsFileReader.getAllDevices();\n-      String[] deviceNames = devices.toArray(new String[devices.size()]);\n-      if (Arrays.binarySearch(deviceNames, selectedDevice) < 0) {\n-        continue;\n-      }\n-\n-      Map<String, TimeseriesMetadata> timeseriesMetaDataInDevice = tsFileReader\n-          .readDeviceMetadata(selectedDevice);\n-      List<ChunkMetadata> chunkMetadataList = new ArrayList<>();\n-      for (Map.Entry<String, TimeseriesMetadata> entry : timeseriesMetaDataInDevice.entrySet()) {\n-        if (selectedMeasurements.contains(entry.getKey())) {\n-          chunkMetadataList.addAll(tsFileReader.readChunkMetaDataList(entry.getValue()));\n-        }\n-      }\n+                                                                                         Set < String> selectedMeasurements = deviceMeasurements.getValue();\n+                                                                                         List < String> devices = this.tsFileReader.getAllDevices();\n+                                                                                         String [] deviceNames = devices.toArray(new String [ devices.size()]);\n+                                                                                         if (Arrays.binarySearch(deviceNames, selectedDevice)<0) {\n+                                                                                                    continue;\n+                                                                                         }\n+                                                                                         Map<String, TimeseriesMetadata> timeseriesMetaDataInDevice = tsFileReader.readDeviceMetadata(selectedDevice);\n+                                                                                         List < ChunkMetadata> chunkMetadataList = new ArrayList <>();\n+                                                                                         for(Map.Entry<String, TimeseriesMetadata> entry : timeseriesMetaDataInDevice.entrySet()) {\n+                                                                                                    if (selectedMeasurements.contains(entry.getKey())) {\n+                                                                                                                                                                                      chunkMetadataList.addAll(tsFileReader.readChunkMetaDataList(entry.getValue()));\n+                                                                                                    }\n+                                                                                         }\n       // d1\n-      for (ChunkMetadata chunkMetaData : chunkMetadataList) {\n-        String currentMeasurement = chunkMetaData.getMeasurementUid();\n+                                                                                         for(ChunkMetadata chunkMetaData : chunkMetadataList) {\n+                                                                                                    String currentMeasurement = chunkMetaData.getMeasurementUid();\n \n         // s1\n-        if (selectedMeasurements.contains(currentMeasurement)) {\n+                                                                                                    if (selectedMeasurements.contains(currentMeasurement)) {\n \n           // d1.s1\n-          Path path = new Path(selectedDevice, currentMeasurement);\n+                                                                                                                                                  Path path = new Path(selectedDevice, currentMeasurement);\n \n           // add into tempChunkMetaDatas\n-          if (!tempChunkMetaDatas.containsKey(path)) {\n-            tempChunkMetaDatas.put(path, new ArrayList<>());\n-          }\n-          tempChunkMetaDatas.get(path).add(chunkMetaData);\n+                                                                                                                                                  if (!tempChunkMetaDatas.containsKey(path)) {\n+                                                                                                                                                               tempChunkMetaDatas.put(path, new ArrayList <>());\n+                                                                                                                                                  }\n+                                                                                                                                                  tempChunkMetaDatas.get(path).add(chunkMetaData);\n \n           // check cache size, stop when reading enough\n-          count++;\n-          if (count == CACHED_ENTRY_NUMBER) {\n-            enough = true;\n-            break;\n-          }\n-        }\n-      }\n+                                                                                                                                                  count++;\n+                                                                                                                                                  if (count == CACHED_ENTRY_NUMBER) {\n+                                                                                                                                                               enough = true;\n+                                                                                                                                                               break;\n+                                                                                                                                                  }\n+                                                                                                    }\n+                                                                                         }\n+    }\n+    for(Map.Entry<Path, List < ChunkMetadata>> entry : tempChunkMetaDatas.entrySet()) {\n+                                                                                         chunkMetaDataCache.put(entry.getKey(), entry.getValue());\n     }\n-\n-    for (Map.Entry<Path, List<ChunkMetadata>> entry : tempChunkMetaDatas.entrySet()) {\n-      chunkMetaDataCache.put(entry.getKey(), entry.getValue());\n     }\n-  }\n \n-  @Override\n-  public TSDataType getDataType(Path path) throws IOException {\n-    if (tsFileReader.getChunkMetadataList(path) == null || tsFileReader.getChunkMetadataList(path)\n-        .isEmpty()) {\n-      return null;\n+    @ Override public TSDataType getDataType(Path path) throws IOException {\n+    if (tsFileReader.getChunkMetadataList(path)== null|| tsFileReader.getChunkMetadataList(path).isEmpty()) {\n+        return null;\n     }\n     return tsFileReader.getChunkMetadataList(path).get(0).getDataType();\n+    }\n \n-  }\n-\n-  private List<ChunkMetadata> loadChunkMetadata(Path path) throws IOException {\n+    private List < ChunkMetadata> loadChunkMetadata(Path path) throws IOException {\n     return tsFileReader.getChunkMetadataList(path);\n-  }\n-\n+    }\n \n-  @Override\n-  public List<TimeRange> convertSpace2TimePartition(List<Path> paths, long spacePartitionStartPos,\n-      long spacePartitionEndPos) throws IOException {\n-    if (spacePartitionStartPos > spacePartitionEndPos) {\n-      throw new IllegalArgumentException(\n-          \"'spacePartitionStartPos' should not be larger than 'spacePartitionEndPos'.\");\n+    @ Override public List < TimeRange> convertSpace2TimePartition(List < Path> paths, long spacePartitionStartPos, long spacePartitionEndPos) throws IOException {\n+    if (spacePartitionStartPos> spacePartitionEndPos) {\n+        throw new IllegalArgumentException(\"'spacePartitionStartPos' should not be larger than 'spacePartitionEndPos'.\");\n     }\n \n     // (1) get timeRangesInCandidates and timeRangesBeforeCandidates by iterating\n     // through the metadata\n-    ArrayList<TimeRange> timeRangesInCandidates = new ArrayList<>();\n-    ArrayList<TimeRange> timeRangesBeforeCandidates = new ArrayList<>();\n+    ArrayList < TimeRange> timeRangesInCandidates = new ArrayList <>();\n+    ArrayList < TimeRange> timeRangesBeforeCandidates = new ArrayList <>();\n \n     // group measurements by device\n-\n-    TreeMap<String, Set<String>> deviceMeasurementsMap = new TreeMap<>();\n-    for (Path path : paths) {\n-      deviceMeasurementsMap.computeIfAbsent(path.getDevice(), key -> new HashSet<>())\n-          .add(path.getMeasurement());\n+    TreeMap<String, Set < String>> deviceMeasurementsMap = new TreeMap <>();\n+    for(Path path : paths) {\n+                                                                                                                                                                      deviceMeasurementsMap.computeIfAbsent(path.getDevice(), key-> new HashSet <>()).add(path.getMeasurement());\n     }\n-    for (Map.Entry<String, Set<String>> deviceMeasurements : deviceMeasurementsMap.entrySet()) {\n-      String selectedDevice = deviceMeasurements.getKey();\n-      Set<String> selectedMeasurements = deviceMeasurements.getValue();\n+    for(Map.Entry<String, Set < String>> deviceMeasurements : deviceMeasurementsMap.entrySet()) {\n+                                                                                                                                                                      String selectedDevice = deviceMeasurements.getKey();\n+                                                                                                                                                                      Set < String> selectedMeasurements = deviceMeasurements.getValue();\n \n       // measurement -> ChunkMetadata list\n-      Map<String, List<ChunkMetadata>> seriesMetadatas = tsFileReader\n-          .readChunkMetadataInDevice(selectedDevice);\n-\n-      for (Entry<String, List<ChunkMetadata>> seriesMetadata : seriesMetadatas.entrySet()) {\n-\n-        if (!selectedMeasurements.contains(seriesMetadata.getKey())) {\n-          continue;\n-        }\n-\n-        for (ChunkMetadata chunkMetadata : seriesMetadata.getValue()) {\n-          LocateStatus location = checkLocateStatus(chunkMetadata, spacePartitionStartPos,\n-              spacePartitionEndPos);\n-          if (location == LocateStatus.after) {\n-            break;\n-          }\n-\n-          if (location == LocateStatus.in) {\n-            timeRangesInCandidates\n-                .add(new TimeRange(chunkMetadata.getStartTime(), chunkMetadata.getEndTime()));\n-          } else {\n-            timeRangesBeforeCandidates\n-                .add(new TimeRange(chunkMetadata.getStartTime(), chunkMetadata.getEndTime()));\n-          }\n-        }\n-\n-      }\n+                                                                                                                                                                      Map<String, List < ChunkMetadata>> seriesMetadatas = tsFileReader.readChunkMetadataInDevice(selectedDevice);\n+                                                                                                                                                                      for(Entry<String, List < ChunkMetadata>> seriesMetadata : seriesMetadatas.entrySet()) {\n+                                                                                                    if (!selectedMeasurements.contains(seriesMetadata.getKey())) {\n+                                                                                                                                                                                                                                                                continue;\n+                                                                                                    }\n+                                                                                                    for(ChunkMetadata chunkMetadata : seriesMetadata.getValue()) {\n+                                                                                                                                                                                                                                                                LocateStatus location = checkLocateStatus(chunkMetadata, spacePartitionStartPos, spacePartitionEndPos);\n+                                                                                                                                                                                                                                                                if (location == LocateStatus.after) {\n+                                                                                                                                                                     break;\n+                                                                                                                                                                                                                                                                }\n+                                                                                                                                                                                                                                                                if(location == LocateStatus.in) {\n+                                                                                                                                                                     timeRangesInCandidates.add(new TimeRange(chunkMetadata.getStartTime(), chunkMetadata.getEndTime()));\n+                                                                                                                                                                                                                                                                } else {\n+                                                                                                                                                                     timeRangesBeforeCandidates.add(new TimeRange(chunkMetadata.getStartTime(), chunkMetadata.getEndTime()));\n+                                                                                                                                                                                                                                                                }\n+                                                                                                    }\n+                                                                                                                                                                      }\n     }\n \n     // (2) sort and merge the timeRangesInCandidates\n-    ArrayList<TimeRange> timeRangesIn = new ArrayList<>(\n-        TimeRange.sortAndMerge(timeRangesInCandidates));\n+    ArrayList < TimeRange> timeRangesIn = new ArrayList <>(TimeRange.sortAndMerge(timeRangesInCandidates));\n     if (timeRangesIn.isEmpty()) {\n-      return Collections.emptyList(); // return an empty list\n+        return Collections.emptyList(); // return an empty list\n     }\n \n     // (3) sort and merge the timeRangesBeforeCandidates\n-    ArrayList<TimeRange> timeRangesBefore = new ArrayList<>(\n-        TimeRange.sortAndMerge(timeRangesBeforeCandidates));\n+    ArrayList < TimeRange> timeRangesBefore = new ArrayList <>(TimeRange.sortAndMerge(timeRangesBeforeCandidates));\n \n     // (4) calculate the remaining time ranges\n-    List<TimeRange> resTimeRanges = new ArrayList<>();\n-    for (TimeRange in : timeRangesIn) {\n-      ArrayList<TimeRange> remains = new ArrayList<>(in.getRemains(timeRangesBefore));\n-      resTimeRanges.addAll(remains);\n+    List < TimeRange> resTimeRanges = new ArrayList <>();\n+    for(TimeRange in : timeRangesIn) {\n+                                                                                                                                                                      ArrayList < TimeRange> remains = new ArrayList <>(in.getRemains(timeRangesBefore));\n+                                                                                                                                                                      resTimeRanges.addAll(remains);\n     }\n-\n     return resTimeRanges;\n-  }\n+    }\n \n   /**\n    * Check the location of a given chunkGroupMetaData with respect to a space partition constraint.\n@@ -251,22 +224,21 @@ public class MetadataQuerierByFileImpl implements IMetadataQuerier {\n    * @param spacePartitionEndPos the end position of the space partition\n    * @return LocateStatus\n    */\n-  public static LocateStatus checkLocateStatus(ChunkMetadata chunkMetaData,\n-      long spacePartitionStartPos, long spacePartitionEndPos) {\n+\n+    public static LocateStatus checkLocateStatus(ChunkMetadata chunkMetaData, long spacePartitionStartPos, long spacePartitionEndPos) {\n     long startOffsetOfChunk = chunkMetaData.getOffsetOfChunkHeader();\n-    if (spacePartitionStartPos <= startOffsetOfChunk\n-        && startOffsetOfChunk < spacePartitionEndPos) {\n-      return LocateStatus.in;\n-    } else if (startOffsetOfChunk < spacePartitionStartPos) {\n-      return LocateStatus.before;\n-    } else {\n-      return LocateStatus.after;\n+    if(spacePartitionStartPos<= startOffsetOfChunk&& startOffsetOfChunk< spacePartitionEndPos) {\n+        return LocateStatus.in;\n+    } else\n+if(startOffsetOfChunk< spacePartitionStartPos) {\n+                                                                                                                                          return LocateStatus.before;\n+} else {\n+                                                                                                                                          return LocateStatus.after;\n+}\n     }\n-  }\n \n-  @Override\n-  public void clear() {\n+    @ Override public void clear() {\n     chunkMetaDataCache.clear();\n-  }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 172
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'read' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/648/MetadataQuerierByFileImpl.java\nindex bb58ec41ab..c5d9c4089a 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_random/648/MetadataQuerierByFileImpl.java\n@@ -16,7 +16,8 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.tsfile.read.controller;\n+package org.apache.iotdb.tsfile.\n+read.controller;\n \n import java.io.IOException;\n import java.util.ArrayList;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/648/MetadataQuerierByFileImpl.java\nindex bb58ec41ab..45c12dc9db 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/errored/1/648/MetadataQuerierByFileImpl.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/apache-incubator-iotdb/styler_three_grams/648/MetadataQuerierByFileImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.controller;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ]
}