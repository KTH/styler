{
    "error_id": "65",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport static java.lang.reflect.Modifier.isAbstract;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/65/DefaultRepositoryStrategy.java\nindex 636e98c877..e6004edc18 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler/65/DefaultRepositoryStrategy.java\n@@ -5,7 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.domain;\n+\n+package org .seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/65/DefaultRepositoryStrategy.java\nindex 636e98c877..2bb2f77e29 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/intellij/65/DefaultRepositoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n@@ -35,7 +36,7 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n     private final Key<? extends T> defaultKey;\n \n     DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics,\n-            Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n+                              Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n         this.repositoryInterface = repositoryInterface;\n         this.generics = generics;\n         this.implementations = implementations;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/65/DefaultRepositoryStrategy.java\nindex 636e98c877..0ff7645112 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/naturalize/65/DefaultRepositoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n@@ -34,9 +35,8 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n     private final Collection<Class<? extends T>> implementations;\n     private final Key<? extends T> defaultKey;\n \n-    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics,\n-            Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n-        this.repositoryInterface = repositoryInterface;\n+    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics, Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n+    this.repositoryInterface = repositoryInterface;\n         this.generics = generics;\n         this.implementations = implementations;\n         this.defaultKey = defaultKey;\n@@ -52,8 +52,7 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n                 Key<T> key = BusinessUtils.getQualifier(impl)\n                         .map(qualifier -> Key.get(repositoryInterface, qualifier))\n                         .orElseThrow(() -> new IllegalStateException(\"Missing qualifier on implementation\" + impl));\n-\n-                if (defaultKey != null) {\n+if (defaultKey != null) {\n                     binder.bind(repositoryInterface).to(defaultKey);\n                 }\n \n@@ -63,10 +62,8 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n \n                 FactoryModuleBuilder guiceFactoryBuilder = new FactoryModuleBuilder();\n                 guiceFactoryBuilder.implement(key, impl);\n-                binder.install(guiceFactoryBuilder.build(\n-                        TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))\n-                ));\n+                binder.install(guiceFactoryBuilder.build(TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))));\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "49",
                    "column": "60",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'impl' has incorrect indentation level 0, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "column": "76",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/65/DefaultRepositoryStrategy.java\nindex 636e98c877..657809dad8 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/codebuff/65/DefaultRepositoryStrategy.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n-\n import com.google.inject.Binder;\n import com.google.inject.Key;\n import com.google.inject.Provider;\n@@ -26,7 +25,9 @@ import org.seedstack.seed.core.internal.guice.GenericGuiceProvider;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(DefaultRepositoryStrategy.class);\n     private static final Class<?> FACTORY_CLASS = GenericGuiceFactory.class;\n     private final Class<T> repositoryInterface;\n@@ -34,8 +35,8 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n     private final Collection<Class<? extends T>> implementations;\n     private final Key<? extends T> defaultKey;\n \n-    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics,\n-            Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n+\n+    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics, Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n         this.repositoryInterface = repositoryInterface;\n         this.generics = generics;\n         this.implementations = implementations;\n@@ -44,29 +45,23 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n \n     @Override\n     public void resolve(Binder binder) {\n-        for (Class<? extends T> impl : implementations) {\n-            if (Arrays.stream(impl.getMethods()).anyMatch(m -> isAbstract(m.getModifiers()))) {\n+        for(Class<? extends T> impl : implementations) {\n+            if (Arrays.stream(impl.getMethods()).anyMatch(m-> isAbstract(m.getModifiers()))) {\n                 LOGGER.warn(\"Skipping default repository implementation {}: abstract methods are still present\",\n-                        impl.getName());\n+impl.getName());\n             } else {\n-                Key<T> key = BusinessUtils.getQualifier(impl)\n-                        .map(qualifier -> Key.get(repositoryInterface, qualifier))\n-                        .orElseThrow(() -> new IllegalStateException(\"Missing qualifier on implementation\" + impl));\n-\n+                Key<T> key = BusinessUtils.getQualifier(impl).map(qualifier-> Key.get(repositoryInterface, qualifier))\n+.orElseThrow(()-> new IllegalStateException(\"Missing qualifier on implementation\" + impl));\n                 if (defaultKey != null) {\n                     binder.bind(repositoryInterface).to(defaultKey);\n                 }\n-\n                 Provider<T> provider = new GenericGuiceProvider<>(impl, generics);\n                 binder.requestInjection(provider);\n                 binder.bind(key).toProvider(provider);\n-\n                 FactoryModuleBuilder guiceFactoryBuilder = new FactoryModuleBuilder();\n                 guiceFactoryBuilder.implement(key, impl);\n-                binder.install(guiceFactoryBuilder.build(\n-                        TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))\n-                ));\n+                binder.install(guiceFactoryBuilder.build(TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))));\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/65/DefaultRepositoryStrategy.java\nindex 636e98c877..e6004edc18 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/errored/1/65/DefaultRepositoryStrategy.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/seedstack-business/styler_random/65/DefaultRepositoryStrategy.java\n@@ -5,7 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.business.internal.domain;\n+\n+package org .seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ]
}