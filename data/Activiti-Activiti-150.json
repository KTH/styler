{
    "error_id": "150",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.bpmn.listener;\n\nimport org.activiti.engine.delegate.DelegateExecution;\nimport org.activiti.engine.delegate.ExecutionListener;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/150/ExpressionExecutionListener.java\nindex 208c8d5a65..9eb203958f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/150/ExpressionExecutionListener.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.listener;\n \n import org.activiti.engine.delegate.DelegateExecution;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/150/ExpressionExecutionListener.java\nindex 208c8d5a65..e393eaf35e 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/150/ExpressionExecutionListener.java\n@@ -23,26 +23,24 @@ import org.activiti.engine.delegate.Expression;\n \n /**\n  * An {@link ExecutionListener} that evaluates a {@link Expression} when notified.\n- *\n-\n  */\n public class ExpressionExecutionListener implements ExecutionListener {\n \n-  protected Expression expression;\n+    protected Expression expression;\n \n-  public ExpressionExecutionListener(Expression expression) {\n-    this.expression = expression;\n-  }\n+    public ExpressionExecutionListener(Expression expression) {\n+        this.expression = expression;\n+    }\n \n-  public void notify(DelegateExecution execution) {\n-    // Return value of expression is ignored\n-    expression.getValue(execution);\n-  }\n+    public void notify(DelegateExecution execution) {\n+        // Return value of expression is ignored\n+        expression.getValue(execution);\n+    }\n \n-  /**\n-   * returns the expression text for this execution listener. Comes in handy if you want to check which listeners you already have.\n-   */\n-  public String getExpressionText() {\n-    return expression.getExpressionText();\n-  }\n+    /**\n+     * returns the expression text for this execution listener. Comes in handy if you want to check which listeners you already have.\n+     */\n+    public String getExpressionText() {\n+        return expression.getExpressionText();\n+    }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/150/ExpressionExecutionListener.java\nindex 208c8d5a65..ac00eae15d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/150/ExpressionExecutionListener.java\n@@ -26,23 +26,26 @@ import org.activiti.engine.delegate.Expression;\n  *\n \n  */\n+\n+\n public class ExpressionExecutionListener implements ExecutionListener {\n \n-  protected Expression expression;\n+    protected Expression expression;\n \n-  public ExpressionExecutionListener(Expression expression) {\n+    public ExpressionExecutionListener(Expression expression) {\n     this.expression = expression;\n-  }\n+    }\n \n-  public void notify(DelegateExecution execution) {\n+    public void notify(DelegateExecution execution) {\n     // Return value of expression is ignored\n     expression.getValue(execution);\n-  }\n+    }\n \n   /**\n    * returns the expression text for this execution listener. Comes in handy if you want to check which listeners you already have.\n    */\n-  public String getExpressionText() {\n+\n+    public String getExpressionText() {\n     return expression.getExpressionText();\n-  }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/150/ExpressionExecutionListener.java\nindex 208c8d5a65..9eb203958f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/150/ExpressionExecutionListener.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.listener;\n \n import org.activiti.engine.delegate.DelegateExecution;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/150/ExpressionExecutionListener.java\nindex 208c8d5a65..9eb203958f 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/150/ExpressionExecutionListener.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/150/ExpressionExecutionListener.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.listener;\n \n import org.activiti.engine.delegate.DelegateExecution;\n",
            "diff_size": 1
        }
    ]
}