{
    "error_id": "642",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/642/Lane.java\nindex a294a5f69a..1595771e04 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler/642/Lane.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/642/Lane.java\nindex a294a5f69a..a22595ce2d 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/intellij/642/Lane.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -19,49 +20,49 @@ import com.fasterxml.jackson.annotation.JsonBackReference;\n \n public class Lane extends BaseElement {\n \n-  protected String name;\n-  protected Process parentProcess;\n-  protected List<String> flowReferences = new ArrayList<String>();\n+    protected String name;\n+    protected Process parentProcess;\n+    protected List<String> flowReferences = new ArrayList<String>();\n \n-  public String getName() {\n-    return name;\n-  }\n+    public String getName() {\n+        return name;\n+    }\n \n-  public void setName(String name) {\n-    this.name = name;\n-  }\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n \n-  @JsonBackReference\n-  public Process getParentProcess() {\n-    return parentProcess;\n-  }\n+    @JsonBackReference\n+    public Process getParentProcess() {\n+        return parentProcess;\n+    }\n \n-  public void setParentProcess(Process parentProcess) {\n-    this.parentProcess = parentProcess;\n-  }\n+    public void setParentProcess(Process parentProcess) {\n+        this.parentProcess = parentProcess;\n+    }\n \n-  public List<String> getFlowReferences() {\n-    return flowReferences;\n-  }\n+    public List<String> getFlowReferences() {\n+        return flowReferences;\n+    }\n \n-  public void setFlowReferences(List<String> flowReferences) {\n-    this.flowReferences = flowReferences;\n-  }\n+    public void setFlowReferences(List<String> flowReferences) {\n+        this.flowReferences = flowReferences;\n+    }\n \n-  public Lane clone() {\n-    Lane clone = new Lane();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public Lane clone() {\n+        Lane clone = new Lane();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(Lane otherElement) {\n-    super.setValues(otherElement);\n-    setName(otherElement.getName());\n-    setParentProcess(otherElement.getParentProcess());\n+    public void setValues(Lane otherElement) {\n+        super.setValues(otherElement);\n+        setName(otherElement.getName());\n+        setParentProcess(otherElement.getParentProcess());\n \n-    flowReferences = new ArrayList<String>();\n-    if (otherElement.getFlowReferences() != null && !otherElement.getFlowReferences().isEmpty()) {\n-      flowReferences.addAll(otherElement.getFlowReferences());\n+        flowReferences = new ArrayList<String>();\n+        if (otherElement.getFlowReferences() != null && !otherElement.getFlowReferences().isEmpty()) {\n+            flowReferences.addAll(otherElement.getFlowReferences());\n+        }\n     }\n-  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/642/Lane.java\nindex a294a5f69a..d9616e07bb 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/codebuff/642/Lane.java\n@@ -14,54 +14,52 @@ package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import com.fasterxml.jackson.annotation.JsonBackReference;\n \n-public class Lane extends BaseElement {\n \n-  protected String name;\n-  protected Process parentProcess;\n-  protected List<String> flowReferences = new ArrayList<String>();\n+public class Lane extends BaseElement {\n \n-  public String getName() {\n+    protected String name;\n+    protected Process parentProcess;\n+    protected List<String> flowReferences = new ArrayList<String>();\n+    public String getName() {\n     return name;\n-  }\n+    }\n \n-  public void setName(String name) {\n+    public void setName(String name) {\n     this.name = name;\n-  }\n+    }\n \n-  @JsonBackReference\n-  public Process getParentProcess() {\n-    return parentProcess;\n-  }\n+    @JsonBackReference\n+    public Process getParentProcess() {\n+        return parentProcess;\n+    }\n \n-  public void setParentProcess(Process parentProcess) {\n+    public void setParentProcess(Process parentProcess) {\n     this.parentProcess = parentProcess;\n-  }\n+    }\n \n-  public List<String> getFlowReferences() {\n+    public List<String> getFlowReferences() {\n     return flowReferences;\n-  }\n+    }\n \n-  public void setFlowReferences(List<String> flowReferences) {\n+    public void setFlowReferences(List<String> flowReferences) {\n     this.flowReferences = flowReferences;\n-  }\n+    }\n \n-  public Lane clone() {\n+    public Lane clone() {\n     Lane clone = new Lane();\n     clone.setValues(this);\n     return clone;\n-  }\n+    }\n \n-  public void setValues(Lane otherElement) {\n+    public void setValues(Lane otherElement) {\n     super.setValues(otherElement);\n     setName(otherElement.getName());\n     setParentProcess(otherElement.getParentProcess());\n-\n     flowReferences = new ArrayList<String>();\n     if (otherElement.getFlowReferences() != null && !otherElement.getFlowReferences().isEmpty()) {\n-      flowReferences.addAll(otherElement.getFlowReferences());\n+        flowReferences.addAll(otherElement.getFlowReferences());\n+    }\n     }\n-  }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/642/Lane.java\nindex a294a5f69a..1595771e04 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_random/642/Lane.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/642/Lane.java\nindex a294a5f69a..1595771e04 100644\n--- a/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/errored/1/642/Lane.java\n+++ b/home/thomas/mnt/fernanda/styler-test2/python/./experiments/projects/../results/Activiti-Activiti/styler_three_grams/642/Lane.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ]
}